

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 23 22:29:12 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     _ADCON1	set	4033
    77  0000                     _CMCON	set	4020
    78  0000                     _INTCONbits	set	4082
    79  0000                     _IPR1bits	set	3999
    80  0000                     _LATA	set	3977
    81  0000                     _LATB	set	3978
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _PORTA	set	3968
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSPADD	set	4040
    95  0000                     _SSPBUF	set	4041
    96  0000                     _SSPCON1	set	4038
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2	set	4037
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _T0CON	set	4053
   103  0000                     _T0CONbits	set	4053
   104  0000                     _T1CON	set	4045
   105  0000                     _T1CONbits	set	4045
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISCbits	set	3988
   113  0000                     _TXREG	set	4013
   114  0000                     _TXSTA	set	4012
   115  0000                     _TXSTAbits	set	4012
   116                           
   117                           	psect	nvCOMRAM
   118  000048                     __pnvCOMRAM:
   119                           	opt stack 0
   120  000048                     _uc_ptr:
   121                           	opt stack 0
   122  000048                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000DD                     __pnvBANK0:
   126                           	opt stack 0
   127  0000DD                     _ic_ptr:
   128                           	opt stack 0
   129  0000DD                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001D58                     __pcinit:
   135                           	opt stack 0
   136  001D58                     start_initialization:
   137                           	opt stack 0
   138  001D58                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  001D58  EE01  F000         	lfsr	0,__pbssBANK1
   143  001D5C  0EA2               	movlw	162
   144  001D5E                     clear_0:
   145  001D5E  6AEE               	clrf	postinc0,c
   146  001D60  06E8               	decf	wreg,f,c
   147  001D62  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (54 bytes)
   150  001D64  EE00  F080         	lfsr	0,__pbssBANK0
   151  001D68  0E36               	movlw	54
   152  001D6A                     clear_1:
   153  001D6A  6AEE               	clrf	postinc0,c
   154  001D6C  06E8               	decf	wreg,f,c
   155  001D6E  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (2 bytes)
   158  001D70  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   159  001D72  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   160  001D74                     end_of_initialization:
   161                           	opt stack 0
   162  001D74                     __end_of__initialization:
   163                           	opt stack 0
   164  001D74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  001D76  6EF8               	movwf	tblptru,c
   166  001D78  0100               	movlb	0
   167  001D7A  EF90  F003         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  00004A                     __pbssCOMRAM:
   174                           	opt stack 0
   175  00004A                     _MQ_Main_Willing_to_block:
   176                           	opt stack 0
   177  00004A                     	ds	1
   178  00004B                     _USART_Status:
   179                           	opt stack 0
   180  00004B                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssBANK0
   186  000080                     __pbssBANK0:
   187                           	opt stack 0
   188  000080                     _ToMainLow_MQ:
   189                           	opt stack 0
   190  000080                     	ds	54
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssBANK1
   196  000100                     __pbssBANK1:
   197                           	opt stack 0
   198  000100                     _FromMainHigh_MQ:
   199                           	opt stack 0
   200  000100                     	ds	54
   201  000136                     _FromMainLow_MQ:
   202                           	opt stack 0
   203  000136                     	ds	54
   204  00016C                     _ToMainHigh_MQ:
   205                           	opt stack 0
   206  00016C                     	ds	54
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackBANK2
   212  000200                     __pcstackBANK2:
   213                           	opt stack 0
   214  000200                     main@msgbuffer:
   215                           	opt stack 0
   216                           
   217                           ; 11 bytes @ 0x0
   218  000200                     	ds	11
   219  00020B                     main@t0thread_data:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0xB
   223  00020B                     	ds	2
   224  00020D                     main@last_reg_recvd:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xD
   228  00020D                     	ds	1
   229  00020E                     main@baud:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xE
   233  00020E                     	ds	1
   234  00020F                     main@UARTConfig:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0xF
   238  00020F                     	ds	1
   239  000210                     main@uthread_data:
   240                           	opt stack 0
   241                           
   242                           ; 10 bytes @ 0x10
   243  000210                     	ds	10
   244  00021A                     main@uc:
   245                           	opt stack 0
   246                           
   247                           ; 5 bytes @ 0x1A
   248  00021A                     	ds	5
   249  00021F                     main@t1thread_data:
   250                           	opt stack 0
   251                           
   252                           ; 12 bytes @ 0x1F
   253  00021F                     	ds	12
   254  00022B                     main@msgtype:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x2B
   258  00022B                     	ds	1
   259  00022C                     main@length:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2C
   263  00022C                     	ds	1
   264  00022D                     main@ic:
   265                           	opt stack 0
   266                           
   267                           ; 28 bytes @ 0x2D
   268  00022D                     	ds	28
   269                           tblptru	equ	0xFF8
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	cstackBANK1
   274  0001A2                     __pcstackBANK1:
   275                           	opt stack 0
   276  0001A2                     ??_block_on_To_msgqueues:
   277  0001A2                     timer0_lthread@tptr:
   278                           	opt stack 0
   279  0001A2                     memcpy@d:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x0
   283  0001A2                     	ds	2
   284  0001A4                     timer0_lthread@msgtype:
   285                           	opt stack 0
   286  0001A4                     memcpy@s:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x2
   290  0001A4                     	ds	2
   291  0001A6                     send_msg@qptr:
   292                           	opt stack 0
   293  0001A6                     recv_msg@qptr:
   294                           	opt stack 0
   295  0001A6                     timer0_lthread@length:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x4
   299  0001A6                     	ds	2
   300  0001A8                     send_msg@length:
   301                           	opt stack 0
   302  0001A8                     recv_msg@maxlength:
   303                           	opt stack 0
   304  0001A8                     timer0_lthread@msgbuffer:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x6
   308  0001A8                     	ds	1
   309  0001A9                     send_msg@msgtype:
   310                           	opt stack 0
   311  0001A9                     recv_msg@msgtype:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x7
   315  0001A9                     	ds	1
   316  0001AA                     send_msg@data:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x8
   320  0001AA                     	ds	1
   321  0001AB                     recv_msg@data:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x9
   325  0001AB                     	ds	1
   326  0001AC                     ??_send_msg:
   327                           
   328                           ; 0 bytes @ 0xA
   329  0001AC                     	ds	1
   330  0001AD                     ??_recv_msg:
   331  0001AD                     send_msg@tlength:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0xB
   335  0001AD                     	ds	2
   336  0001AF                     send_msg@slot:
   337                           	opt stack 0
   338  0001AF                     recv_msg@slot:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0xD
   342  0001AF                     	ds	1
   343  0001B0                     send_msg@qmsg:
   344                           	opt stack 0
   345  0001B0                     recv_msg@tlength:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0xE
   349  0001B0                     	ds	2
   350  0001B2                     ToMainLow_sendmsg@msgtype:
   351                           	opt stack 0
   352  0001B2                     FromMainLow_sendmsg@msgtype:
   353                           	opt stack 0
   354  0001B2                     recv_msg@qmsg:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x10
   358  0001B2                     	ds	1
   359  0001B3                     ToMainLow_sendmsg@data:
   360                           	opt stack 0
   361  0001B3                     FromMainLow_sendmsg@data:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x11
   365  0001B3                     	ds	1
   366  0001B4                     ToMainLow_recvmsg@msgtype:
   367                           	opt stack 0
   368  0001B4                     ToMainHigh_recvmsg@msgtype:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x12
   372  0001B4                     	ds	1
   373  0001B5                     ToMainLow_sendmsg@length:
   374                           	opt stack 0
   375  0001B5                     FromMainLow_sendmsg@length:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x13
   379  0001B5                     	ds	1
   380  0001B6                     ToMainLow_recvmsg@data:
   381                           	opt stack 0
   382  0001B6                     ToMainHigh_recvmsg@data:
   383                           	opt stack 0
   384  0001B6                     timer1_lthread@tptr:
   385                           	opt stack 0
   386  0001B6                     uart_lthread@uptr:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x14
   390  0001B6                     	ds	2
   391  0001B8                     ToMainLow_recvmsg@maxlength:
   392                           	opt stack 0
   393  0001B8                     ToMainHigh_recvmsg@maxlength:
   394                           	opt stack 0
   395  0001B8                     timer1_lthread@msgtype:
   396                           	opt stack 0
   397  0001B8                     uart_lthread@msgtype:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x16
   401  0001B8                     	ds	2
   402  0001BA                     timer1_lthread@length:
   403                           	opt stack 0
   404  0001BA                     uart_lthread@length:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x18
   408  0001BA                     	ds	2
   409  0001BC                     timer1_lthread@msgbuffer:
   410                           	opt stack 0
   411  0001BC                     uart_lthread@msgbuffer:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1A
   415  0001BC                     	ds	2
   416  0001BE                     ??_timer1_lthread:
   417  0001BE                     uart_lthread@status:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x1C
   421  0001BE                     	ds	1
   422  0001BF                     uart_lthread@index:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x1D
   426  0001BF                     	ds	1
   427  0001C0                     timer1_lthread@retval:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x1E
   431  0001C0                     	ds	1
   432  0001C1                     timer1_lthread@even:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x1F
   436  0001C1                     	ds	2
   437  0001C3                     ??_main:
   438                           
   439                           ; 0 bytes @ 0x21
   440  0001C3                     	ds	1
   441                           tblptru	equ	0xFF8
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	cstackBANK0
   446  0000B6                     __pcstackBANK0:
   447                           	opt stack 0
   448  0000B6                     i2recv_msg@slot:
   449                           	opt stack 0
   450  0000B6                     i2send_msg@tlength:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x0
   454  0000B6                     	ds	1
   455  0000B7                     i2recv_msg@tlength:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1
   459  0000B7                     	ds	1
   460  0000B8                     i2send_msg@slot:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x2
   464  0000B8                     	ds	1
   465  0000B9                     i2send_msg@qmsg:
   466                           	opt stack 0
   467  0000B9                     i2recv_msg@qmsg:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x3
   471  0000B9                     	ds	2
   472  0000BB                     ToMainHigh_sendmsg@msgtype:
   473                           	opt stack 0
   474  0000BB                     FromMainHigh_recvmsg@msgtype:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x5
   478  0000BB                     	ds	1
   479  0000BC                     ToMainHigh_sendmsg@data:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483  0000BC                     	ds	1
   484  0000BD                     FromMainHigh_recvmsg@data:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x7
   488  0000BD                     	ds	1
   489  0000BE                     ??_i2c_int_handler:
   490                           
   491                           ; 0 bytes @ 0x8
   492  0000BE                     	ds	1
   493  0000BF                     FromMainHigh_recvmsg@maxlength:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x9
   497  0000BF                     	ds	1
   498  0000C0                     ??_timer0_int_handler:
   499  0000C0                     i2c_int_handler@error_buf:
   500                           	opt stack 0
   501                           
   502                           ; 3 bytes @ 0xA
   503  0000C0                     	ds	1
   504  0000C1                     timer0_int_handler@length:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xB
   508  0000C1                     	ds	2
   509  0000C3                     i2c_int_handler@data_written:
   510                           	opt stack 0
   511  0000C3                     timer0_int_handler@msgtype:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xD
   515  0000C3                     	ds	1
   516  0000C4                     i2c_int_handler@overrun_error:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0xE
   520  0000C4                     	ds	1
   521  0000C5                     i2c_int_handler@i2c_data:
   522                           	opt stack 0
   523  0000C5                     timer0_int_handler@val:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xF
   527  0000C5                     	ds	1
   528  0000C6                     i2c_int_handler@msg_to_send:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x10
   532  0000C6                     	ds	1
   533  0000C7                     i2c_int_handler@msg_ready:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x11
   537  0000C7                     	ds	1
   538  0000C8                     i2c_int_handler@data_read:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x12
   542  0000C8                     	ds	1
   543  0000C9                     ??_InterruptHandlerHigh:
   544                           
   545                           ; 0 bytes @ 0x13
   546  0000C9                     	ds	14
   547  0000D7                     ?_ReadTimer1:
   548                           	opt stack 0
   549  0000D7                     ?_in_high_int:
   550                           	opt stack 0
   551  0000D7                     ?___lwmod:
   552                           	opt stack 0
   553  0000D7                     i2c_configure_slave@addr:
   554                           	opt stack 0
   555  0000D7                     OpenTimer0@config:
   556                           	opt stack 0
   557  0000D7                     OpenTimer1@config:
   558                           	opt stack 0
   559  0000D7                     Delay1KTCYx@unit:
   560                           	opt stack 0
   561  0000D7                     init_queue@qptr:
   562                           	opt stack 0
   563  0000D7                     check_msg@qptr:
   564                           	opt stack 0
   565  0000D7                     start_i2c_slave_reply@msg:
   566                           	opt stack 0
   567  0000D7                     init_i2c@ic:
   568                           	opt stack 0
   569  0000D7                     init_uart_recv@uc:
   570                           	opt stack 0
   571  0000D7                     timer0_lthread@msgval:
   572                           	opt stack 0
   573  0000D7                     init_timer1_lthread@tptr:
   574                           	opt stack 0
   575  0000D7                     init_uart_lthread@uptr:
   576                           	opt stack 0
   577  0000D7                     OpenUSART@spbrg:
   578                           	opt stack 0
   579  0000D7                     ___lwmod@dividend:
   580                           	opt stack 0
   581  0000D7                     memcpy@d1:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x21
   585  0000D7                     	ds	2
   586  0000D9                     ??_OpenUSART:
   587  0000D9                     ??_start_i2c_slave_reply:
   588  0000D9                     ??_init_queue:
   589  0000D9                     ??_check_msg:
   590  0000D9                     ?_in_low_int:
   591                           	opt stack 0
   592  0000D9                     ReadTimer1@timer:
   593                           	opt stack 0
   594  0000D9                     ___lwmod@divisor:
   595                           	opt stack 0
   596  0000D9                     memcpy@s1:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x23
   600  0000D9                     	ds	1
   601  0000DA                     init_queue@i:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x24
   605  0000DA                     	ds	1
   606  0000DB                     ??_init_queues:
   607  0000DB                     ??___lwmod:
   608  0000DB                     ?_in_main:
   609                           	opt stack 0
   610  0000DB                     start_i2c_slave_reply@length:
   611                           	opt stack 0
   612  0000DB                     memcpy@n:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x25
   616  0000DB                     	ds	1
   617  0000DC                     OpenUSART@config:
   618                           	opt stack 0
   619  0000DC                     ___lwmod@counter:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x26
   623  0000DC                     	ds	1
   624  0000DD                     tblptru	equ	0xFF8
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           
   628                           ; 0 bytes @ 0x27
   629                           
   630                           	psect	cstackCOMRAM
   631  000001                     __pcstackCOMRAM:
   632                           	opt stack 0
   633  000001                     ?i1_ReadTimer1:
   634                           	opt stack 0
   635  000001                     ReadUSART@data:
   636                           	opt stack 0
   637  000001                     WriteTimer1@timer1:
   638                           	opt stack 0
   639  000001                     i1memcpy@d1:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x0
   643  000001                     	ds	2
   644  000003                     WriteTimer1@timer:
   645                           	opt stack 0
   646  000003                     i1ReadTimer1@timer:
   647                           	opt stack 0
   648  000003                     i1memcpy@s1:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x2
   652  000003                     	ds	2
   653  000005                     i1memcpy@n:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x4
   657  000005                     	ds	2
   658  000007                     i1memcpy@d:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662  000007                     	ds	2
   663  000009                     i1memcpy@s:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x8
   667  000009                     	ds	2
   668  00000B                     i1send_msg@qptr:
   669                           	opt stack 0
   670  00000B                     i1recv_msg@qptr:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0xA
   674  00000B                     	ds	2
   675  00000D                     i1send_msg@length:
   676                           	opt stack 0
   677  00000D                     i1recv_msg@maxlength:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0xC
   681  00000D                     	ds	1
   682  00000E                     i1send_msg@msgtype:
   683                           	opt stack 0
   684  00000E                     i1recv_msg@msgtype:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xD
   688  00000E                     	ds	1
   689  00000F                     i1send_msg@data:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0xE
   693  00000F                     	ds	1
   694  000010                     i1recv_msg@data:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0xF
   698  000010                     	ds	1
   699  000011                     ??i1_send_msg:
   700                           
   701                           ; 0 bytes @ 0x10
   702  000011                     	ds	1
   703  000012                     ??i1_recv_msg:
   704  000012                     i1send_msg@tlength:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x11
   708  000012                     	ds	2
   709  000014                     i1send_msg@slot:
   710                           	opt stack 0
   711  000014                     i1recv_msg@slot:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x13
   715  000014                     	ds	1
   716  000015                     i1send_msg@qmsg:
   717                           	opt stack 0
   718  000015                     i1recv_msg@tlength:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x14
   722  000015                     	ds	2
   723  000017                     i1ToMainLow_sendmsg@msgtype:
   724                           	opt stack 0
   725  000017                     i1recv_msg@qmsg:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x16
   729  000017                     	ds	1
   730  000018                     i1ToMainLow_sendmsg@data:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x17
   734  000018                     	ds	1
   735  000019                     FromMainLow_recvmsg@msgtype:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x18
   739  000019                     	ds	1
   740  00001A                     i1ToMainLow_sendmsg@length:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x19
   744  00001A                     	ds	1
   745  00001B                     ??_timer1_int_handler:
   746  00001B                     ??_uart_recv_int_handler:
   747  00001B                     FromMainLow_recvmsg@data:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x1A
   751  00001B                     	ds	1
   752  00001C                     timer1_int_handler@result:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x1B
   756  00001C                     	ds	1
   757  00001D                     FromMainLow_recvmsg@maxlength:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x1C
   761  00001D                     	ds	1
   762  00001E                     ??_uart_trans_int_handler:
   763                           
   764                           ; 0 bytes @ 0x1D
   765  00001E                     	ds	1
   766  00001F                     uart_trans_int_handler@data:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x1E
   770  00001F                     	ds	2
   771  000021                     uart_trans_int_handler@curIndex:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x20
   775  000021                     	ds	1
   776  000022                     uart_trans_int_handler@msgtype:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x21
   780  000022                     	ds	1
   781  000023                     uart_trans_int_handler@length:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x22
   785  000023                     	ds	1
   786  000024                     ??_InterruptHandlerLow:
   787                           
   788                           ; 0 bytes @ 0x23
   789  000024                     	ds	17
   790  000035                     ?i2_in_high_int:
   791                           	opt stack 0
   792  000035                     handle_start@data_read:
   793                           	opt stack 0
   794  000035                     WriteTimer0@timer0:
   795                           	opt stack 0
   796  000035                     i2check_msg@qptr:
   797                           	opt stack 0
   798  000035                     i2memcpy@d1:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x34
   802  000035                     	ds	2
   803  000037                     ??i2_check_msg:
   804  000037                     ?i2_in_low_int:
   805                           	opt stack 0
   806  000037                     WriteTimer0@timer:
   807                           	opt stack 0
   808  000037                     i2memcpy@s1:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x36
   812  000037                     	ds	2
   813  000039                     i2memcpy@n:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x38
   817  000039                     	ds	2
   818  00003B                     i2memcpy@d:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x3A
   822  00003B                     	ds	2
   823  00003D                     i2memcpy@s:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x3C
   827  00003D                     	ds	2
   828  00003F                     i2send_msg@qptr:
   829                           	opt stack 0
   830  00003F                     i2recv_msg@qptr:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x3E
   834  00003F                     	ds	2
   835  000041                     i2send_msg@length:
   836                           	opt stack 0
   837  000041                     i2recv_msg@maxlength:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x40
   841  000041                     	ds	1
   842  000042                     i2send_msg@msgtype:
   843                           	opt stack 0
   844  000042                     i2recv_msg@msgtype:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x41
   848  000042                     	ds	1
   849  000043                     i2send_msg@data:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x42
   853  000043                     	ds	1
   854  000044                     i2recv_msg@data:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x43
   858  000044                     	ds	1
   859  000045                     ??i2_send_msg:
   860                           
   861                           ; 0 bytes @ 0x44
   862  000045                     	ds	1
   863  000046                     ??i2_recv_msg:
   864  000046                     ToMainHigh_sendmsg@length:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x45
   868  000046                     	ds	2
   869  000048                     tblptru	equ	0xFF8
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           
   873                           ; 0 bytes @ 0x47
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 186 in file "src/main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  ic             28   45[BANK2 ] struct __i2c_comm
   884 ;;  t1thread_dat   12   31[BANK2 ] struct __timer1_thread_s
   885 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   886 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   887 ;;  uc              5   26[BANK2 ] struct __uart_comm
   888 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   889 ;;  length          1   44[BANK2 ] char 
   890 ;;  msgtype         1   43[BANK2 ] unsigned char 
   891 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   892 ;;  baud            1   14[BANK2 ] unsigned char 
   893 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   894 ;;  i               1    0        unsigned char 
   895 ;;  c               1    0        unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;		None               void
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0      73       0
   907 ;;      Temps:          0       0       1       0       0
   908 ;;      Totals:         0       0       1      73       0
   909 ;;Total ram usage:       74 bytes
   910 ;; Hardware stack levels required when called:   14
   911 ;; This function calls:
   912 ;;		_OpenTimer0
   913 ;;		_OpenTimer1
   914 ;;		_OpenUSART
   915 ;;		_ToMainHigh_recvmsg
   916 ;;		_ToMainLow_recvmsg
   917 ;;		_block_on_To_msgqueues
   918 ;;		_enable_interrupts
   919 ;;		_i2c_configure_slave
   920 ;;		_init_i2c
   921 ;;		_init_queues
   922 ;;		_init_timer1_lthread
   923 ;;		_init_uart_lthread
   924 ;;		_init_uart_recv
   925 ;;		_start_i2c_slave_reply
   926 ;;		_timer0_lthread
   927 ;;		_timer1_lthread
   928 ;;		_uart_lthread
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text0
   935  000720                     __ptext0:
   936                           	opt stack 0
   937  000720                     _main:
   938                           	opt stack 16
   939                           
   940                           ;main.c: 187: char c;
   941                           ;main.c: 188: signed char length;
   942                           ;main.c: 189: unsigned char msgtype;
   943                           ;main.c: 190: unsigned char last_reg_recvd;
   944                           ;main.c: 191: unsigned char baud, UARTConfig;
   945                           ;main.c: 192: uart_comm uc;
   946                           ;main.c: 193: i2c_comm ic;
   947                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   948                           ;main.c: 195: unsigned char i;
   949                           ;main.c: 196: uart_thread_struct uthread_data;
   950                           ;main.c: 197: timer1_thread_struct t1thread_data;
   951                           ;main.c: 198: timer0_thread_struct t0thread_data;
   952                           ;main.c: 206: OSCCON = 0x82;
   953                           
   954                           ;incstack = 0
   955  000720  0E82               	movlw	130
   956  000722  6ED3               	movwf	4051,c	;volatile
   957                           
   958                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   959  000724  9C9B               	bcf	3995,6,c	;volatile
   960                           
   961                           ;main.c: 225: init_uart_recv(&uc);
   962  000726  0102               	movlb	2	; () banked
   963  000728  0E02               	movlw	high main@uc
   964  00072A  0100               	movlb	0	; () banked
   965  00072C  0100               	movlb	0	; () banked
   966  00072E  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   967  000730  0102               	movlb	2	; () banked
   968  000732  0E1A               	movlw	low main@uc
   969  000734  0100               	movlb	0	; () banked
   970  000736  0100               	movlb	0	; () banked
   971  000738  6FD7               	movwf	init_uart_recv@uc& (0+255),b
   972  00073A  ECE4  F00E         	call	_init_uart_recv	;wreg free
   973                           
   974                           ;main.c: 228: init_i2c(&ic);
   975  00073E  0102               	movlb	2	; () banked
   976  000740  0E02               	movlw	high main@ic
   977  000742  0100               	movlb	0	; () banked
   978  000744  0100               	movlb	0	; () banked
   979  000746  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
   980  000748  0102               	movlb	2	; () banked
   981  00074A  0E2D               	movlw	low main@ic
   982  00074C  0100               	movlb	0	; () banked
   983  00074E  0100               	movlb	0	; () banked
   984  000750  6FD7               	movwf	init_i2c@ic& (0+255),b
   985  000752  EC34  F00C         	call	_init_i2c	;wreg free
   986                           
   987                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   988  000756  0102               	movlb	2	; () banked
   989  000758  0E02               	movlw	high main@t1thread_data
   990  00075A  0100               	movlb	0	; () banked
   991  00075C  0100               	movlb	0	; () banked
   992  00075E  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   993  000760  0102               	movlb	2	; () banked
   994  000762  0E1F               	movlw	low main@t1thread_data
   995  000764  0100               	movlb	0	; () banked
   996  000766  0100               	movlb	0	; () banked
   997  000768  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
   998  00076A  EC86  F00D         	call	_init_timer1_lthread	;wreg free
   999                           
  1000                           ;main.c: 234: init_uart_lthread(&uthread_data);
  1001  00076E  0102               	movlb	2	; () banked
  1002  000770  0E02               	movlw	high main@uthread_data
  1003  000772  0100               	movlb	0	; () banked
  1004  000774  0100               	movlb	0	; () banked
  1005  000776  6FD8               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1006  000778  0102               	movlb	2	; () banked
  1007  00077A  0E10               	movlw	low main@uthread_data
  1008  00077C  0100               	movlb	0	; () banked
  1009  00077E  0100               	movlb	0	; () banked
  1010  000780  6FD7               	movwf	init_uart_lthread@uptr& (0+255),b
  1011  000782  EC50  F00F         	call	_init_uart_lthread	;wreg free
  1012                           
  1013                           ;main.c: 238: init_queues();
  1014  000786  ECC7  F00B         	call	_init_queues	;wreg free
  1015                           
  1016                           ;main.c: 242: TRISB = 0x0;
  1017  00078A  0E00               	movlw	0
  1018  00078C  6E93               	movwf	3987,c	;volatile
  1019                           
  1020                           ;main.c: 243: LATB = 0x0;
  1021  00078E  0E00               	movlw	0
  1022  000790  6E8A               	movwf	3978,c	;volatile
  1023                           
  1024                           ;main.c: 247: PORTA = 0x0;
  1025  000792  0E00               	movlw	0
  1026  000794  6E80               	movwf	3968,c	;volatile
  1027                           
  1028                           ;main.c: 248: LATA = 0x0;
  1029  000796  0E00               	movlw	0
  1030  000798  6E89               	movwf	3977,c	;volatile
  1031                           
  1032                           ;main.c: 249: ADCON1 = 0x0F;
  1033  00079A  0E0F               	movlw	15
  1034  00079C  6EC1               	movwf	4033,c	;volatile
  1035                           
  1036                           ;main.c: 250: CMCON = 0x07;
  1037  00079E  0E07               	movlw	7
  1038  0007A0  6EB4               	movwf	4020,c	;volatile
  1039                           
  1040                           ;main.c: 251: TRISA = 0x00;
  1041  0007A2  0E00               	movlw	0
  1042  0007A4  6E92               	movwf	3986,c	;volatile
  1043                           
  1044                           ;main.c: 255: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1045  0007A6  0E96               	movlw	150
  1046  0007A8  EC5A  F00E         	call	_OpenTimer0
  1047                           
  1048                           ;main.c: 264: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1049  0007AC  0EF5               	movlw	245
  1050  0007AE  ECA5  F00D         	call	_OpenTimer1
  1051                           
  1052                           ;main.c: 277: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1053  0007B2  0101               	movlb	1	; () banked
  1054  0007B4  6FC3               	movwf	??_main& (0+255),b
  1055  0007B6  0EFC               	movlw	252
  1056  0007B8  0102               	movlb	2	; () banked
  1057  0007BA  0102               	movlb	2	; () banked
  1058  0007BC  6F0F               	movwf	main@UARTConfig& (0+255),b
  1059  0007BE  0101               	movlb	1	; () banked
  1060  0007C0  51C3               	movf	??_main& (0+255),w,b
  1061                           
  1062                           ; BSR set to: 1
  1063                           ;main.c: 278: baud = 77;
  1064  0007C2  0101               	movlb	1	; () banked
  1065  0007C4  6FC3               	movwf	??_main& (0+255),b
  1066  0007C6  0E4D               	movlw	77
  1067  0007C8  0102               	movlb	2	; () banked
  1068  0007CA  0102               	movlb	2	; () banked
  1069  0007CC  6F0E               	movwf	main@baud& (0+255),b
  1070  0007CE  0101               	movlb	1	; () banked
  1071  0007D0  51C3               	movf	??_main& (0+255),w,b
  1072                           
  1073                           ; BSR set to: 1
  1074                           ;main.c: 279: OpenUSART(UARTConfig,baud);
  1075  0007D2  0102               	movlb	2	; () banked
  1076  0007D4  0100               	movlb	0	; () banked
  1077  0007D6  C20E  F0D7         	movff	main@baud,OpenUSART@spbrg
  1078  0007DA  0100               	movlb	0	; () banked
  1079  0007DC  0100               	movlb	0	; () banked
  1080  0007DE  6BD8               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1081  0007E0  0102               	movlb	2	; () banked
  1082  0007E2  0102               	movlb	2	; () banked
  1083  0007E4  510F               	movf	main@UARTConfig& (0+255),w,b
  1084  0007E6  EC3A  F00A         	call	_OpenUSART
  1085                           
  1086                           ;main.c: 286: IPR1bits.TMR1IP = 0;
  1087  0007EA  909F               	bcf	3999,0,c	;volatile
  1088                           
  1089                           ;main.c: 288: IPR1bits.RCIP = 0;
  1090  0007EC  9A9F               	bcf	3999,5,c	;volatile
  1091                           
  1092                           ;main.c: 290: IPR1bits.TXIP = 0;
  1093  0007EE  989F               	bcf	3999,4,c	;volatile
  1094                           
  1095                           ;main.c: 292: IPR1bits.SSPIP = 1;
  1096  0007F0  869F               	bsf	3999,3,c	;volatile
  1097                           
  1098                           ;main.c: 301: i2c_configure_slave(0x9E);
  1099  0007F2  0E9E               	movlw	158
  1100  0007F4  EC84  F00E         	call	_i2c_configure_slave
  1101                           
  1102                           ;main.c: 316: PIE1bits.SSPIE = 1;
  1103  0007F8  869D               	bsf	3997,3,c	;volatile
  1104                           
  1105                           ;main.c: 320: enable_interrupts();
  1106  0007FA  EC49  F00F         	call	_enable_interrupts	;wreg free
  1107  0007FE                     l3476:
  1108                           
  1109                           ;main.c: 344: block_on_To_msgqueues();
  1110  0007FE  EC4B  F00B         	call	_block_on_To_msgqueues	;wreg free
  1111                           
  1112                           ;main.c: 351: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1113  000802  0102               	movlb	2	; () banked
  1114  000804  0E02               	movlw	high main@msgtype
  1115  000806  0101               	movlb	1	; () banked
  1116  000808  0101               	movlb	1	; () banked
  1117  00080A  6FB5               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1118  00080C  0102               	movlb	2	; () banked
  1119  00080E  0E2B               	movlw	low main@msgtype
  1120  000810  0101               	movlb	1	; () banked
  1121  000812  0101               	movlb	1	; () banked
  1122  000814  6FB4               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1123  000816  0102               	movlb	2	; () banked
  1124  000818  0E02               	movlw	high main@msgbuffer
  1125  00081A  0101               	movlb	1	; () banked
  1126  00081C  0101               	movlb	1	; () banked
  1127  00081E  6FB7               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1128  000820  0102               	movlb	2	; () banked
  1129  000822  0E00               	movlw	low main@msgbuffer
  1130  000824  0101               	movlb	1	; () banked
  1131  000826  0101               	movlb	1	; () banked
  1132  000828  6FB6               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1133  00082A  0E0A               	movlw	10
  1134  00082C  EC25  F00D         	call	_ToMainHigh_recvmsg
  1135  000830  0102               	movlb	2	; () banked
  1136  000832  0102               	movlb	2	; () banked
  1137  000834  6F2C               	movwf	main@length& (0+255),b
  1138                           
  1139                           ; BSR set to: 2
  1140                           ;main.c: 352: if (length < 0) {
  1141  000836  0102               	movlb	2	; () banked
  1142  000838  0102               	movlb	2	; () banked
  1143  00083A  BF2C               	btfsc	main@length& (0+255),7,b
  1144  00083C  D08D               	goto	l3502
  1145  00083E  D07D               	goto	l3500
  1146  000840                     l3484:
  1147                           
  1148                           ; BSR set to: 2
  1149                           ;main.c: 360: {
  1150                           ;main.c: 361: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1151  000840  0102               	movlb	2	; () banked
  1152  000842  0E02               	movlw	high main@t0thread_data
  1153  000844  0101               	movlb	1	; () banked
  1154  000846  0101               	movlb	1	; () banked
  1155  000848  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1156  00084A  0102               	movlb	2	; () banked
  1157  00084C  0E0B               	movlw	low main@t0thread_data
  1158  00084E  0101               	movlb	1	; () banked
  1159  000850  0101               	movlb	1	; () banked
  1160  000852  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1161  000854  0102               	movlb	2	; () banked
  1162  000856  0101               	movlb	1	; () banked
  1163  000858  C22B  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1164  00085C  0101               	movlb	1	; () banked
  1165  00085E  0101               	movlb	1	; () banked
  1166  000860  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1167  000862  0102               	movlb	2	; () banked
  1168  000864  0102               	movlb	2	; () banked
  1169  000866  512C               	movf	main@length& (0+255),w,b
  1170  000868  0101               	movlb	1	; () banked
  1171  00086A  0101               	movlb	1	; () banked
  1172  00086C  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1173  00086E  0101               	movlb	1	; () banked
  1174  000870  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1175  000872  0101               	movlb	1	; () banked
  1176  000874  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1177  000876  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1178  000878  0102               	movlb	2	; () banked
  1179  00087A  0E02               	movlw	high main@msgbuffer
  1180  00087C  0101               	movlb	1	; () banked
  1181  00087E  0101               	movlb	1	; () banked
  1182  000880  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1183  000882  0102               	movlb	2	; () banked
  1184  000884  0E00               	movlw	low main@msgbuffer
  1185  000886  0101               	movlb	1	; () banked
  1186  000888  0101               	movlb	1	; () banked
  1187  00088A  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1188  00088C  EC16  F00F         	call	_timer0_lthread	;wreg free
  1189                           
  1190                           ;main.c: 362: break;
  1191  000890  D063               	goto	l3502
  1192  000892                     l119:
  1193                           
  1194                           ;main.c: 365: case 41:
  1195                           ;main.c: 366: {
  1196                           ;main.c: 369: last_reg_recvd = msgbuffer[0];
  1197  000892  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1198                           
  1199                           ;main.c: 370: break;
  1200  000896  D060               	goto	l3502
  1201  000898                     l3486:
  1202                           
  1203                           ;main.c: 383: {
  1204                           ;main.c: 384: length = 2;
  1205  000898  0101               	movlb	1	; () banked
  1206  00089A  6FC3               	movwf	??_main& (0+255),b
  1207  00089C  0E02               	movlw	2
  1208  00089E  0102               	movlb	2	; () banked
  1209  0008A0  0102               	movlb	2	; () banked
  1210  0008A2  6F2C               	movwf	main@length& (0+255),b
  1211  0008A4  0101               	movlb	1	; () banked
  1212  0008A6  51C3               	movf	??_main& (0+255),w,b
  1213                           
  1214                           ;main.c: 385: msgbuffer[0] = 0x55;
  1215  0008A8  0101               	movlb	1	; () banked
  1216  0008AA  6FC3               	movwf	??_main& (0+255),b
  1217  0008AC  0E55               	movlw	85
  1218  0008AE  0102               	movlb	2	; () banked
  1219  0008B0  0102               	movlb	2	; () banked
  1220  0008B2  6F00               	movwf	main@msgbuffer& (0+255),b
  1221  0008B4  0101               	movlb	1	; () banked
  1222  0008B6  51C3               	movf	??_main& (0+255),w,b
  1223                           
  1224                           ;main.c: 386: msgbuffer[1] = 0xAA;
  1225  0008B8  0101               	movlb	1	; () banked
  1226  0008BA  6FC3               	movwf	??_main& (0+255),b
  1227  0008BC  0EAA               	movlw	170
  1228  0008BE  0102               	movlb	2	; () banked
  1229  0008C0  0102               	movlb	2	; () banked
  1230  0008C2  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1231  0008C4  D00C               	goto	L1
  1232  0008C6                     l3488:
  1233                           
  1234                           ;main.c: 390: {
  1235                           ;main.c: 391: length = 1;
  1236  0008C6  0101               	movlb	1	; () banked
  1237  0008C8  6FC3               	movwf	??_main& (0+255),b
  1238  0008CA  0E01               	movlw	1
  1239  0008CC  0102               	movlb	2	; () banked
  1240  0008CE  0102               	movlb	2	; () banked
  1241  0008D0  6F2C               	movwf	main@length& (0+255),b
  1242  0008D2  0101               	movlb	1	; () banked
  1243  0008D4  51C3               	movf	??_main& (0+255),w,b
  1244                           
  1245                           ;main.c: 392: msgbuffer[0] = 0x3A;
  1246  0008D6  0101               	movlb	1	; () banked
  1247  0008D8  6FC3               	movwf	??_main& (0+255),b
  1248  0008DA  0E3A               	movlw	58
  1249  0008DC  D00E               	goto	L2
  1250  0008DE                     L1:
  1251  0008DE  0101               	movlb	1	; () banked
  1252  0008E0  51C3               	movf	??_main& (0+255),w,b
  1253                           
  1254                           ;main.c: 393: break;
  1255  0008E2  D01B               	goto	l3496
  1256  0008E4                     l3490:
  1257                           
  1258                           ;main.c: 396: {
  1259                           ;main.c: 397: length = 1;
  1260  0008E4  0101               	movlb	1	; () banked
  1261  0008E6  6FC3               	movwf	??_main& (0+255),b
  1262  0008E8  0E01               	movlw	1
  1263  0008EA  0102               	movlb	2	; () banked
  1264  0008EC  0102               	movlb	2	; () banked
  1265  0008EE  6F2C               	movwf	main@length& (0+255),b
  1266  0008F0  0101               	movlb	1	; () banked
  1267  0008F2  51C3               	movf	??_main& (0+255),w,b
  1268                           
  1269                           ;main.c: 398: msgbuffer[0] = 0xA3;
  1270  0008F4  0101               	movlb	1	; () banked
  1271  0008F6  6FC3               	movwf	??_main& (0+255),b
  1272  0008F8  0EA3               	movlw	163
  1273  0008FA                     L2:
  1274  0008FA  0102               	movlb	2	; () banked
  1275  0008FC  0102               	movlb	2	; () banked
  1276  0008FE  6F00               	movwf	main@msgbuffer& (0+255),b
  1277  000900  D7EE               	goto	L1
  1278  000902                     l3494:
  1279  000902  0102               	movlb	2	; () banked
  1280  000904  0102               	movlb	2	; () banked
  1281  000906  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1282                           
  1283                           ; Switch size 1, requested type "space"
  1284                           ; Number of cases is 3, Range of values is 168 to 170
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte           10     6 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289  000908  0AA8               	xorlw	168	; case 168
  1290  00090A  B4D8               	btfsc	status,2,c
  1291  00090C  D7DC               	goto	l3488
  1292  00090E  0A01               	xorlw	1	; case 169
  1293  000910  B4D8               	btfsc	status,2,c
  1294  000912  D7E8               	goto	l3490
  1295  000914  0A03               	xorlw	3	; case 170
  1296  000916  B4D8               	btfsc	status,2,c
  1297  000918  D7BF               	goto	l3486
  1298  00091A                     l3496:
  1299                           
  1300                           ;main.c: 402: start_i2c_slave_reply(length, msgbuffer);
  1301  00091A  0102               	movlb	2	; () banked
  1302  00091C  0E02               	movlw	high main@msgbuffer
  1303  00091E  0100               	movlb	0	; () banked
  1304  000920  0100               	movlb	0	; () banked
  1305  000922  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1306  000924  0102               	movlb	2	; () banked
  1307  000926  0E00               	movlw	low main@msgbuffer
  1308  000928  0100               	movlb	0	; () banked
  1309  00092A  0100               	movlb	0	; () banked
  1310  00092C  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1311  00092E  0102               	movlb	2	; () banked
  1312  000930  0102               	movlb	2	; () banked
  1313  000932  512C               	movf	main@length& (0+255),w,b
  1314  000934  EC61  F006         	call	_start_i2c_slave_reply
  1315                           
  1316                           ;main.c: 403: break;
  1317  000938  D00F               	goto	l3502
  1318  00093A                     l3500:
  1319  00093A  0102               	movlb	2	; () banked
  1320  00093C  0102               	movlb	2	; () banked
  1321  00093E  512B               	movf	main@msgtype& (0+255),w,b
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 4, Range of values is 10 to 42
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte           13     7 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329  000940  0A0A               	xorlw	10	; case 10
  1330  000942  B4D8               	btfsc	status,2,c
  1331  000944  D77D               	goto	l3484
  1332  000946  0A22               	xorlw	34	; case 40
  1333  000948  B4D8               	btfsc	status,2,c
  1334  00094A  D7A3               	goto	l119
  1335  00094C  0A01               	xorlw	1	; case 41
  1336  00094E  B4D8               	btfsc	status,2,c
  1337  000950  D7A0               	goto	l119
  1338  000952  0A03               	xorlw	3	; case 42
  1339  000954  B4D8               	btfsc	status,2,c
  1340  000956  D7D5               	goto	l3494
  1341  000958                     l3502:
  1342                           
  1343                           ;main.c: 411: }
  1344                           ;main.c: 414: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1345  000958  0102               	movlb	2	; () banked
  1346  00095A  0E02               	movlw	high main@msgtype
  1347  00095C  0101               	movlb	1	; () banked
  1348  00095E  0101               	movlb	1	; () banked
  1349  000960  6FB5               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1350  000962  0102               	movlb	2	; () banked
  1351  000964  0E2B               	movlw	low main@msgtype
  1352  000966  0101               	movlb	1	; () banked
  1353  000968  0101               	movlb	1	; () banked
  1354  00096A  6FB4               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1355  00096C  0102               	movlb	2	; () banked
  1356  00096E  0E02               	movlw	high main@msgbuffer
  1357  000970  0101               	movlb	1	; () banked
  1358  000972  0101               	movlb	1	; () banked
  1359  000974  6FB7               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1360  000976  0102               	movlb	2	; () banked
  1361  000978  0E00               	movlw	low main@msgbuffer
  1362  00097A  0101               	movlb	1	; () banked
  1363  00097C  0101               	movlb	1	; () banked
  1364  00097E  6FB6               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1365  000980  0E0A               	movlw	10
  1366  000982  EC04  F00D         	call	_ToMainLow_recvmsg
  1367  000986  0102               	movlb	2	; () banked
  1368  000988  0102               	movlb	2	; () banked
  1369  00098A  6F2C               	movwf	main@length& (0+255),b
  1370                           
  1371                           ; BSR set to: 2
  1372                           ;main.c: 415: if (length < 0) {
  1373  00098C  0102               	movlb	2	; () banked
  1374  00098E  0102               	movlb	2	; () banked
  1375  000990  BF2C               	btfsc	main@length& (0+255),7,b
  1376  000992  D735               	goto	l3476
  1377  000994  D052               	goto	l3514
  1378  000996                     l3508:
  1379                           
  1380                           ; BSR set to: 2
  1381                           ;main.c: 423: {
  1382                           ;main.c: 424: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1383  000996  0102               	movlb	2	; () banked
  1384  000998  0E02               	movlw	high main@t1thread_data
  1385  00099A  0101               	movlb	1	; () banked
  1386  00099C  0101               	movlb	1	; () banked
  1387  00099E  6FB7               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1388  0009A0  0102               	movlb	2	; () banked
  1389  0009A2  0E1F               	movlw	low main@t1thread_data
  1390  0009A4  0101               	movlb	1	; () banked
  1391  0009A6  0101               	movlb	1	; () banked
  1392  0009A8  6FB6               	movwf	timer1_lthread@tptr& (0+255),b
  1393  0009AA  0102               	movlb	2	; () banked
  1394  0009AC  0101               	movlb	1	; () banked
  1395  0009AE  C22B  F1B8         	movff	main@msgtype,timer1_lthread@msgtype
  1396  0009B2  0101               	movlb	1	; () banked
  1397  0009B4  0101               	movlb	1	; () banked
  1398  0009B6  6BB9               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1399  0009B8  0102               	movlb	2	; () banked
  1400  0009BA  0102               	movlb	2	; () banked
  1401  0009BC  512C               	movf	main@length& (0+255),w,b
  1402  0009BE  0101               	movlb	1	; () banked
  1403  0009C0  0101               	movlb	1	; () banked
  1404  0009C2  6FBA               	movwf	timer1_lthread@length& (0+255),b
  1405  0009C4  0101               	movlb	1	; () banked
  1406  0009C6  6BBB               	clrf	(timer1_lthread@length+1)& (0+255),b
  1407  0009C8  0101               	movlb	1	; () banked
  1408  0009CA  BFBA               	btfsc	timer1_lthread@length& (0+255),7,b
  1409  0009CC  07BB               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1410  0009CE  0102               	movlb	2	; () banked
  1411  0009D0  0E02               	movlw	high main@msgbuffer
  1412  0009D2  0101               	movlb	1	; () banked
  1413  0009D4  0101               	movlb	1	; () banked
  1414  0009D6  6FBD               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1415  0009D8  0102               	movlb	2	; () banked
  1416  0009DA  0E00               	movlw	low main@msgbuffer
  1417  0009DC  0101               	movlb	1	; () banked
  1418  0009DE  0101               	movlb	1	; () banked
  1419  0009E0  6FBC               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1420  0009E2  ECC8  F005         	call	_timer1_lthread	;wreg free
  1421                           
  1422                           ;main.c: 425: break;
  1423  0009E6  D70B               	goto	l3476
  1424  0009E8                     l3510:
  1425                           
  1426                           ;main.c: 428: case 31:
  1427                           ;main.c: 429: case 32:
  1428                           ;main.c: 430: {
  1429                           ;main.c: 431: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1430  0009E8  0102               	movlb	2	; () banked
  1431  0009EA  0E02               	movlw	high main@uthread_data
  1432  0009EC  0101               	movlb	1	; () banked
  1433  0009EE  0101               	movlb	1	; () banked
  1434  0009F0  6FB7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1435  0009F2  0102               	movlb	2	; () banked
  1436  0009F4  0E10               	movlw	low main@uthread_data
  1437  0009F6  0101               	movlb	1	; () banked
  1438  0009F8  0101               	movlb	1	; () banked
  1439  0009FA  6FB6               	movwf	uart_lthread@uptr& (0+255),b
  1440  0009FC  0102               	movlb	2	; () banked
  1441  0009FE  0101               	movlb	1	; () banked
  1442  000A00  C22B  F1B8         	movff	main@msgtype,uart_lthread@msgtype
  1443  000A04  0101               	movlb	1	; () banked
  1444  000A06  0101               	movlb	1	; () banked
  1445  000A08  6BB9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1446  000A0A  0102               	movlb	2	; () banked
  1447  000A0C  0102               	movlb	2	; () banked
  1448  000A0E  512C               	movf	main@length& (0+255),w,b
  1449  000A10  0101               	movlb	1	; () banked
  1450  000A12  0101               	movlb	1	; () banked
  1451  000A14  6FBA               	movwf	uart_lthread@length& (0+255),b
  1452  000A16  0101               	movlb	1	; () banked
  1453  000A18  6BBB               	clrf	(uart_lthread@length+1)& (0+255),b
  1454  000A1A  0101               	movlb	1	; () banked
  1455  000A1C  BFBA               	btfsc	uart_lthread@length& (0+255),7,b
  1456  000A1E  07BB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1457  000A20  0102               	movlb	2	; () banked
  1458  000A22  0E02               	movlw	high main@msgbuffer
  1459  000A24  0101               	movlb	1	; () banked
  1460  000A26  0101               	movlb	1	; () banked
  1461  000A28  6FBD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1462  000A2A  0102               	movlb	2	; () banked
  1463  000A2C  0E00               	movlw	low main@msgbuffer
  1464  000A2E  0101               	movlb	1	; () banked
  1465  000A30  0101               	movlb	1	; () banked
  1466  000A32  6FBC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1467  000A34  ECEC  F007         	call	_uart_lthread	;wreg free
  1468                           
  1469                           ;main.c: 432: break;
  1470  000A38  D6E2               	goto	l3476
  1471  000A3A                     l3514:
  1472  000A3A  0102               	movlb	2	; () banked
  1473  000A3C  0102               	movlb	2	; () banked
  1474  000A3E  512B               	movf	main@msgtype& (0+255),w,b
  1475                           
  1476                           ; Switch size 1, requested type "space"
  1477                           ; Number of cases is 4, Range of values is 11 to 32
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte           13     7 (average)
  1481                           ;	Chosen strategy is simple_byte
  1482  000A40  0A0B               	xorlw	11	; case 11
  1483  000A42  B4D8               	btfsc	status,2,c
  1484  000A44  D7A8               	goto	l3508
  1485  000A46  0A15               	xorlw	21	; case 30
  1486  000A48  B4D8               	btfsc	status,2,c
  1487  000A4A  D7CE               	goto	l3510
  1488  000A4C  0A01               	xorlw	1	; case 31
  1489  000A4E  B4D8               	btfsc	status,2,c
  1490  000A50  D7CB               	goto	l3510
  1491  000A52  0A3F               	xorlw	63	; case 32
  1492  000A54  B4D8               	btfsc	status,2,c
  1493  000A56  D7C8               	goto	l3510
  1494  000A58  D6D2               	goto	l3476
  1495  000A5A                     __end_of_main:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _uart_lthread *****************
  1503 ;; Defined at:
  1504 ;;		line 12 in file "src/uart_thread.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  uptr            2   20[BANK1 ] PTR struct __uart_thread
  1507 ;;		 -> main@uthread_data(10), 
  1508 ;;  msgtype         2   22[BANK1 ] int 
  1509 ;;  length          2   24[BANK1 ] int 
  1510 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1511 ;;		 -> main@msgbuffer(11), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  index           2   29[BANK1 ] int 
  1514 ;;  status          1   28[BANK1 ] char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2   20[BANK1 ] int 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1524 ;;      Params:         0       0       8       0       0
  1525 ;;      Locals:         0       0       3       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0      11       0       0
  1528 ;;Total ram usage:       11 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:   13
  1531 ;; This function calls:
  1532 ;;		_FromMainLow_sendmsg
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text1
  1539  000FD8                     __ptext1:
  1540                           	opt stack 0
  1541  000FD8                     _uart_lthread:
  1542                           	opt stack 16
  1543                           
  1544                           ;uart_thread.c: 13: if (msgtype == 30) {
  1545                           
  1546                           ; BSR set to: 2
  1547                           ;incstack = 0
  1548  000FD8  0101               	movlb	1	; () banked
  1549  000FDA  0101               	movlb	1	; () banked
  1550  000FDC  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1551  000FDE  0A1E               	xorlw	30
  1552  000FE0  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1553  000FE2  B4D8               	btfsc	status,2,c
  1554  000FE4  0012               	return	
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;uart_thread.c: 21: else if(msgtype == 31){
  1558                           
  1559                           ; BSR set to: 1
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;uart_thread.c: 14: }
  1563  000FE6  0101               	movlb	1	; () banked
  1564  000FE8  0101               	movlb	1	; () banked
  1565  000FEA  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1566  000FEC  0A1F               	xorlw	31
  1567  000FEE  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1568  000FF0  A4D8               	btfss	status,2,c
  1569  000FF2  D04F               	goto	l3736
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;uart_thread.c: 23: int index = 0;
  1573  000FF4  0E00               	movlw	0
  1574  000FF6  0101               	movlb	1	; () banked
  1575  000FF8  0101               	movlb	1	; () banked
  1576  000FFA  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1577  000FFC  0E00               	movlw	0
  1578  000FFE  0101               	movlb	1	; () banked
  1579  001000  6FBF               	movwf	uart_lthread@index& (0+255),b
  1580                           
  1581                           ;uart_thread.c: 24: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1582  001002  0E00               	movlw	0
  1583  001004  0101               	movlb	1	; () banked
  1584  001006  0101               	movlb	1	; () banked
  1585  001008  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1586  00100A  0E00               	movlw	0
  1587  00100C  0101               	movlb	1	; () banked
  1588  00100E  6FBF               	movwf	uart_lthread@index& (0+255),b
  1589  001010                     
  1590                           ; BSR set to: 1
  1591  001010  0101               	movlb	1	; () banked
  1592  001012  0101               	movlb	1	; () banked
  1593  001014  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1594  001016  0A80               	xorlw	128
  1595  001018  0F80               	addlw	-128
  1596  00101A  0E0A               	movlw	10
  1597  00101C  B4D8               	btfsc	status,2,c
  1598  00101E  5DBF               	subwf	uart_lthread@index& (0+255),w,b
  1599  001020  B0D8               	btfsc	status,0,c
  1600  001022  D023               	goto	l3732
  1601                           
  1602                           ; BSR set to: 1
  1603                           
  1604                           ; BSR set to: 1
  1605                           
  1606                           ; BSR set to: 1
  1607  001024  0101               	movlb	1	; () banked
  1608  001026  0101               	movlb	1	; () banked
  1609  001028  51BF               	movf	uart_lthread@index& (0+255),w,b
  1610  00102A  0101               	movlb	1	; () banked
  1611  00102C  0101               	movlb	1	; () banked
  1612  00102E  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1613  001030  6ED9               	movwf	fsr2l,c
  1614  001032  0101               	movlb	1	; () banked
  1615  001034  0101               	movlb	1	; () banked
  1616  001036  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1617  001038  0101               	movlb	1	; () banked
  1618  00103A  0101               	movlb	1	; () banked
  1619  00103C  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1620  00103E  6EDA               	movwf	fsr2h,c
  1621  001040  0101               	movlb	1	; () banked
  1622  001042  0101               	movlb	1	; () banked
  1623  001044  51BF               	movf	uart_lthread@index& (0+255),w,b
  1624  001046  0101               	movlb	1	; () banked
  1625  001048  0101               	movlb	1	; () banked
  1626  00104A  25B6               	addwf	uart_lthread@uptr& (0+255),w,b
  1627  00104C  6EE1               	movwf	fsr1l,c
  1628  00104E  0101               	movlb	1	; () banked
  1629  001050  0101               	movlb	1	; () banked
  1630  001052  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1631  001054  0101               	movlb	1	; () banked
  1632  001056  0101               	movlb	1	; () banked
  1633  001058  21B7               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1634  00105A  6EE2               	movwf	fsr1h,c
  1635  00105C  CFDF FFE7          	movff	indf2,indf1
  1636                           
  1637                           ; BSR set to: 1
  1638  001060  0101               	movlb	1	; () banked
  1639  001062  0101               	movlb	1	; () banked
  1640  001064  4BBF               	infsnz	uart_lthread@index& (0+255),f,b
  1641  001066  2BC0               	incf	(uart_lthread@index+1)& (0+255),f,b
  1642  001068  D7D3               	goto	L3
  1643  00106A                     l3732:
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;uart_thread.c: 27: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1647  00106A  C1B8  F1B2         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1648  00106E  0101               	movlb	1	; () banked
  1649  001070  0101               	movlb	1	; () banked
  1650  001072  C1B7  F1B4         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1651  001076  0101               	movlb	1	; () banked
  1652  001078  0101               	movlb	1	; () banked
  1653  00107A  C1B6  F1B3         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1654  00107E  0101               	movlb	1	; () banked
  1655  001080  0101               	movlb	1	; () banked
  1656  001082  51BA               	movf	uart_lthread@length& (0+255),w,b
  1657  001084  ECC1  F00D         	call	_FromMainLow_sendmsg
  1658  001088  0101               	movlb	1	; () banked
  1659  00108A  0101               	movlb	1	; () banked
  1660  00108C  6FBE               	movwf	uart_lthread@status& (0+255),b
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;uart_thread.c: 30: }
  1664                           ;uart_thread.c: 32: PIE1bits.TXIE = 1;
  1665                           
  1666                           ; BSR set to: 1
  1667  00108E  889D               	bsf	3997,4,c	;volatile
  1668                           
  1669                           ;uart_thread.c: 33: }
  1670  001090  0012               	return	
  1671  001092                     l3736:
  1672                           
  1673                           ; BSR set to: 1
  1674                           ;uart_thread.c: 34: else if(msgtype == 32){
  1675  001092  0101               	movlb	1	; () banked
  1676  001094  0101               	movlb	1	; () banked
  1677  001096  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1678  001098  0A20               	xorlw	32
  1679  00109A  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1680  00109C  A4D8               	btfss	status,2,c
  1681  00109E  0012               	return	
  1682                           
  1683                           ; BSR set to: 1
  1684                           ;uart_thread.c: 38: msgbuffer[length] = '\0';
  1685  0010A0  0101               	movlb	1	; () banked
  1686  0010A2  0101               	movlb	1	; () banked
  1687  0010A4  51BA               	movf	uart_lthread@length& (0+255),w,b
  1688  0010A6  0101               	movlb	1	; () banked
  1689  0010A8  0101               	movlb	1	; () banked
  1690  0010AA  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1691  0010AC  6ED9               	movwf	fsr2l,c
  1692  0010AE  0101               	movlb	1	; () banked
  1693  0010B0  0101               	movlb	1	; () banked
  1694  0010B2  51BB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1695  0010B4  0101               	movlb	1	; () banked
  1696  0010B6  0101               	movlb	1	; () banked
  1697  0010B8  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1698  0010BA  6EDA               	movwf	fsr2h,c
  1699  0010BC  0E00               	movlw	0
  1700  0010BE  6EDF               	movwf	indf2,c
  1701  0010C0  0012               	return	
  1702  0010C2                     __end_of_uart_lthread:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           postinc0	equ	0xFEE
  1706                           wreg	equ	0xFE8
  1707                           indf1	equ	0xFE7
  1708                           fsr1h	equ	0xFE2
  1709                           fsr1l	equ	0xFE1
  1710                           indf2	equ	0xFDF
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _FromMainLow_sendmsg *****************
  1716 ;; Defined at:
  1717 ;;		line 150 in file "src/messages.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  length          1    wreg     unsigned char 
  1720 ;;  msgtype         1   16[BANK1 ] unsigned char 
  1721 ;;  data            2   17[BANK1 ] PTR void 
  1722 ;;		 -> main@uthread_data(10), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  length          1   19[BANK1 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      char 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1734 ;;      Params:         0       0       3       0       0
  1735 ;;      Locals:         0       0       1       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         0       0       4       0       0
  1738 ;;Total ram usage:        4 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   12
  1741 ;; This function calls:
  1742 ;;		_send_msg
  1743 ;; This function is called by:
  1744 ;;		_uart_lthread
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text2
  1749  001B82                     __ptext2:
  1750                           	opt stack 0
  1751  001B82                     _FromMainLow_sendmsg:
  1752                           	opt stack 16
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;incstack = 0
  1756                           ;FromMainLow_sendmsg@length stored from wreg
  1757  001B82  CFE8 F1B5          	movff	wreg,FromMainLow_sendmsg@length
  1758                           
  1759                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1760  001B86  0101               	movlb	1	; () banked
  1761  001B88  0E01               	movlw	high _FromMainLow_MQ
  1762  001B8A  0101               	movlb	1	; () banked
  1763  001B8C  0101               	movlb	1	; () banked
  1764  001B8E  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1765  001B90  0101               	movlb	1	; () banked
  1766  001B92  0E36               	movlw	low _FromMainLow_MQ
  1767  001B94  0101               	movlb	1	; () banked
  1768  001B96  0101               	movlb	1	; () banked
  1769  001B98  6FA6               	movwf	send_msg@qptr& (0+255),b
  1770  001B9A  C1B5  F1A8         	movff	FromMainLow_sendmsg@length,send_msg@length
  1771  001B9E  C1B2  F1A9         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1772  001BA2  0101               	movlb	1	; () banked
  1773  001BA4  0101               	movlb	1	; () banked
  1774  001BA6  C1B4  F1AB         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1775  001BAA  0101               	movlb	1	; () banked
  1776  001BAC  0101               	movlb	1	; () banked
  1777  001BAE  C1B3  F1AA         	movff	FromMainLow_sendmsg@data,send_msg@data
  1778  001BB2  ECE8  F006         	call	_send_msg	;wreg free
  1779  001BB6  0012               	return	
  1780  001BB8                     __end_of_FromMainLow_sendmsg:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           indf1	equ	0xFE7
  1786                           fsr1h	equ	0xFE2
  1787                           fsr1l	equ	0xFE1
  1788                           indf2	equ	0xFDF
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _timer1_lthread *****************
  1794 ;; Defined at:
  1795 ;;		line 17 in file "src/timer1_thread.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  tptr            2   20[BANK1 ] PTR struct __timer1_thre
  1798 ;;		 -> main@t1thread_data(12), 
  1799 ;;  msgtype         2   22[BANK1 ] int 
  1800 ;;  length          2   24[BANK1 ] int 
  1801 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1802 ;;		 -> main@msgbuffer(11), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  even            2   31[BANK1 ] int 
  1805 ;;  retval          1   30[BANK1 ] char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2   20[BANK1 ] int 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1815 ;;      Params:         0       0       8       0       0
  1816 ;;      Locals:         0       0       3       0       0
  1817 ;;      Temps:          0       0       2       0       0
  1818 ;;      Totals:         0       0      13       0       0
  1819 ;;Total ram usage:       13 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:   13
  1822 ;; This function calls:
  1823 ;;		_ReadTimer1
  1824 ;;		_ToMainLow_sendmsg
  1825 ;;		___lwmod
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text3
  1832  000B90                     __ptext3:
  1833                           	opt stack 0
  1834  000B90                     _timer1_lthread:
  1835                           	opt stack 16
  1836                           
  1837                           ;timer1_thread.c: 18: signed char retval;
  1838                           ;timer1_thread.c: 20: int even = 0;
  1839                           
  1840                           ;incstack = 0
  1841  000B90  0E00               	movlw	0
  1842  000B92  0101               	movlb	1	; () banked
  1843  000B94  0101               	movlb	1	; () banked
  1844  000B96  6FC2               	movwf	(timer1_lthread@even+1)& (0+255),b
  1845  000B98  0E00               	movlw	0
  1846  000B9A  0101               	movlb	1	; () banked
  1847  000B9C  6FC1               	movwf	timer1_lthread@even& (0+255),b
  1848                           
  1849                           ; BSR set to: 1
  1850                           ;timer1_thread.c: 22: tptr->msgcount++;
  1851  000B9E  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1852  000BA2  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1853  000BA6  2ADE               	incf	postinc2,f,c
  1854  000BA8  0E00               	movlw	0
  1855  000BAA  22DD               	addwfc	postdec2,f,c
  1856                           
  1857                           ; BSR set to: 1
  1858                           ;timer1_thread.c: 24: if ((tptr->msgcount % 6) == 5) {
  1859  000BAC  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1860  000BB0  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1861  000BB4  0100               	movlb	0	; () banked
  1862  000BB6  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  1863  000BBA  0100               	movlb	0	; () banked
  1864  000BBC  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  1865  000BC0  0E00               	movlw	0
  1866  000BC2  0100               	movlb	0	; () banked
  1867  000BC4  0100               	movlb	0	; () banked
  1868  000BC6  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1869  000BC8  0E06               	movlw	6
  1870  000BCA  0100               	movlb	0	; () banked
  1871  000BCC  6FD9               	movwf	___lwmod@divisor& (0+255),b
  1872  000BCE  EC83  F00A         	call	___lwmod	;wreg free
  1873  000BD2  0100               	movlb	0	; () banked
  1874  000BD4  0100               	movlb	0	; () banked
  1875  000BD6  51D7               	movf	?___lwmod& (0+255),w,b
  1876  000BD8  0A05               	xorlw	5
  1877  000BDA  0100               	movlb	0	; () banked
  1878  000BDC  11D8               	iorwf	(?___lwmod+1)& (0+255),w,b
  1879  000BDE  A4D8               	btfss	status,2,c
  1880  000BE0  0012               	return	
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;timer1_thread.c: 25: if(ReadTimer1()%2 == 0) even = 0;
  1884  000BE2  EC0D  F00F         	call	_ReadTimer1	;wreg free
  1885  000BE6  0100               	movlb	0	; () banked
  1886  000BE8  0100               	movlb	0	; () banked
  1887  000BEA  B1D7               	btfsc	?_ReadTimer1& (0+255),0,b
  1888  000BEC  D006               	goto	l3696
  1889                           
  1890                           ; BSR set to: 0
  1891  000BEE  0E00               	movlw	0
  1892  000BF0  0101               	movlb	1	; () banked
  1893  000BF2  0101               	movlb	1	; () banked
  1894  000BF4  6FC2               	movwf	(timer1_lthread@even+1)& (0+255),b
  1895  000BF6  0E00               	movlw	0
  1896  000BF8  D005               	goto	L4
  1897  000BFA                     l3696:
  1898                           
  1899                           ;timer1_thread.c: 26: else even = 1;
  1900  000BFA  0E00               	movlw	0
  1901  000BFC  0101               	movlb	1	; () banked
  1902  000BFE  0101               	movlb	1	; () banked
  1903  000C00  6FC2               	movwf	(timer1_lthread@even+1)& (0+255),b
  1904  000C02  0E01               	movlw	1
  1905  000C04                     L4:
  1906  000C04  0101               	movlb	1	; () banked
  1907  000C06  6FC1               	movwf	timer1_lthread@even& (0+255),b
  1908  000C08  D02D               	goto	l3704
  1909  000C0A                     l3698:
  1910                           
  1911                           ; BSR set to: 1
  1912                           ;timer1_thread.c: 29: tptr->buffer[0] = 0x00;
  1913  000C0A  0101               	movlb	1	; () banked
  1914  000C0C  EE20 F002          	lfsr	2,2
  1915  000C10  0101               	movlb	1	; () banked
  1916  000C12  51B6               	movf	timer1_lthread@tptr& (0+255),w,b
  1917  000C14  26D9               	addwf	fsr2l,f,c
  1918  000C16  0101               	movlb	1	; () banked
  1919  000C18  51B7               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1920  000C1A  22DA               	addwfc	fsr2h,f,c
  1921  000C1C  0E00               	movlw	0
  1922  000C1E  6EDF               	movwf	indf2,c
  1923                           
  1924                           ;timer1_thread.c: 30: tptr->buffer[1] = 0x00;
  1925  000C20  0101               	movlb	1	; () banked
  1926  000C22  EE20 F003          	lfsr	2,3
  1927  000C26  0101               	movlb	1	; () banked
  1928  000C28  51B6               	movf	timer1_lthread@tptr& (0+255),w,b
  1929  000C2A  26D9               	addwf	fsr2l,f,c
  1930  000C2C  0101               	movlb	1	; () banked
  1931  000C2E  51B7               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1932  000C30  22DA               	addwfc	fsr2h,f,c
  1933  000C32  0E00               	movlw	0
  1934  000C34  D015               	goto	L5
  1935  000C36                     l3700:
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;timer1_thread.c: 33: tptr->buffer[0] = 0xC8;
  1939  000C36  0101               	movlb	1	; () banked
  1940  000C38  EE20 F002          	lfsr	2,2
  1941  000C3C  0101               	movlb	1	; () banked
  1942  000C3E  51B6               	movf	timer1_lthread@tptr& (0+255),w,b
  1943  000C40  26D9               	addwf	fsr2l,f,c
  1944  000C42  0101               	movlb	1	; () banked
  1945  000C44  51B7               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1946  000C46  22DA               	addwfc	fsr2h,f,c
  1947  000C48  0EC8               	movlw	200
  1948  000C4A  6EDF               	movwf	indf2,c
  1949                           
  1950                           ;timer1_thread.c: 34: tptr->buffer[1] = 0x4B;
  1951  000C4C  0101               	movlb	1	; () banked
  1952  000C4E  EE20 F003          	lfsr	2,3
  1953  000C52  0101               	movlb	1	; () banked
  1954  000C54  51B6               	movf	timer1_lthread@tptr& (0+255),w,b
  1955  000C56  26D9               	addwf	fsr2l,f,c
  1956  000C58  0101               	movlb	1	; () banked
  1957  000C5A  51B7               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1958  000C5C  22DA               	addwfc	fsr2h,f,c
  1959  000C5E  0E4B               	movlw	75
  1960  000C60                     L5:
  1961  000C60  6EDF               	movwf	indf2,c
  1962                           
  1963                           ;timer1_thread.c: 35: break;
  1964  000C62  D013               	goto	l3706
  1965  000C64                     l3704:
  1966                           
  1967                           ; BSR set to: 1
  1968  000C64  0101               	movlb	1	; () banked
  1969  000C66  C1C1  F1BE         	movff	timer1_lthread@even,??_timer1_lthread
  1970  000C6A  0101               	movlb	1	; () banked
  1971  000C6C  C1C2  F1BF         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  1972                           
  1973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1974                           ; Switch size 1, requested type "space"
  1975                           ; Number of cases is 1, Range of values is 0 to 0
  1976                           ; switch strategies available:
  1977                           ; Name         Instructions Cycles
  1978                           ; simple_byte            4     3 (average)
  1979                           ;	Chosen strategy is simple_byte
  1980  000C70  0101               	movlb	1	; () banked
  1981  000C72  51BF               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1982  000C74  0A00               	xorlw	0	; case 0
  1983  000C76  A4D8               	btfss	status,2,c
  1984  000C78  D008               	goto	l3706
  1985                           
  1986                           ; BSR set to: 1
  1987                           ; Switch size 1, requested type "space"
  1988                           ; Number of cases is 2, Range of values is 0 to 1
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte            7     4 (average)
  1992                           ;	Chosen strategy is simple_byte
  1993  000C7A  0101               	movlb	1	; () banked
  1994  000C7C  51BE               	movf	??_timer1_lthread& (0+255),w,b
  1995  000C7E  0A00               	xorlw	0	; case 0
  1996  000C80  B4D8               	btfsc	status,2,c
  1997  000C82  D7C3               	goto	l3698
  1998  000C84  0A01               	xorlw	1	; case 1
  1999  000C86  B4D8               	btfsc	status,2,c
  2000  000C88  D7D6               	goto	l3700
  2001  000C8A                     l3706:
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;timer1_thread.c: 38: retval = ToMainLow_sendmsg(2, 31, (void *)tptr->buffer);
  2005  000C8A  0101               	movlb	1	; () banked
  2006  000C8C  6FBE               	movwf	??_timer1_lthread& (0+255),b
  2007  000C8E  0E1F               	movlw	31
  2008  000C90  0101               	movlb	1	; () banked
  2009  000C92  0101               	movlb	1	; () banked
  2010  000C94  6FB2               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2011  000C96  0101               	movlb	1	; () banked
  2012  000C98  51BE               	movf	??_timer1_lthread& (0+255),w,b
  2013  000C9A  0E02               	movlw	2
  2014  000C9C  0101               	movlb	1	; () banked
  2015  000C9E  0101               	movlb	1	; () banked
  2016  000CA0  25B6               	addwf	timer1_lthread@tptr& (0+255),w,b
  2017  000CA2  0101               	movlb	1	; () banked
  2018  000CA4  0101               	movlb	1	; () banked
  2019  000CA6  6FB3               	movwf	ToMainLow_sendmsg@data& (0+255),b
  2020  000CA8  0E00               	movlw	0
  2021  000CAA  0101               	movlb	1	; () banked
  2022  000CAC  0101               	movlb	1	; () banked
  2023  000CAE  21B7               	addwfc	(timer1_lthread@tptr+1)& (0+255),w,b
  2024  000CB0  0101               	movlb	1	; () banked
  2025  000CB2  6FB4               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  2026  000CB4  0E02               	movlw	2
  2027  000CB6  ECDC  F00D         	call	_ToMainLow_sendmsg
  2028  000CBA  0101               	movlb	1	; () banked
  2029  000CBC  0101               	movlb	1	; () banked
  2030  000CBE  6FC0               	movwf	timer1_lthread@retval& (0+255),b
  2031  000CC0  0012               	return	
  2032  000CC2                     __end_of_timer1_lthread:
  2033                           	opt stack 0
  2034                           tblptru	equ	0xFF8
  2035                           postinc0	equ	0xFEE
  2036                           wreg	equ	0xFE8
  2037                           indf1	equ	0xFE7
  2038                           fsr1h	equ	0xFE2
  2039                           fsr1l	equ	0xFE1
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           postdec2	equ	0xFDD
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           
  2047 ;; *************** function ___lwmod *****************
  2048 ;; Defined at:
  2049 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  dividend        2   33[BANK0 ] unsigned int 
  2052 ;;  divisor         2   35[BANK0 ] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  counter         1   38[BANK0 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2   33[BANK0 ] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2064 ;;      Params:         0       4       0       0       0
  2065 ;;      Locals:         0       1       0       0       0
  2066 ;;      Temps:          0       1       0       0       0
  2067 ;;      Totals:         0       6       0       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:   10
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_timer1_lthread
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text4
  2079  001506                     __ptext4:
  2080                           	opt stack 0
  2081  001506                     ___lwmod:
  2082                           	opt stack 18
  2083                           
  2084                           ;incstack = 0
  2085  001506  0100               	movlb	0	; () banked
  2086  001508  0100               	movlb	0	; () banked
  2087  00150A  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2088  00150C  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  2089  00150E  B4D8               	btfsc	status,2,c
  2090  001510  D03A               	goto	l1050
  2091                           
  2092                           ; BSR set to: 0
  2093  001512  0100               	movlb	0	; () banked
  2094  001514  6FDB               	movwf	??___lwmod& (0+255),b
  2095  001516  0E01               	movlw	1
  2096  001518  0100               	movlb	0	; () banked
  2097  00151A  0100               	movlb	0	; () banked
  2098  00151C  6FDC               	movwf	___lwmod@counter& (0+255),b
  2099  00151E  0100               	movlb	0	; () banked
  2100  001520  51DB               	movf	??___lwmod& (0+255),w,b
  2101  001522  D009               	goto	l3886
  2102  001524                     l3884:
  2103                           
  2104                           ; BSR set to: 0
  2105  001524  0100               	movlb	0	; () banked
  2106  001526  0100               	movlb	0	; () banked
  2107  001528  0100               	movlb	0	; () banked
  2108  00152A  90D8               	bcf	status,0,c
  2109  00152C  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  2110  00152E  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2111  001530  0100               	movlb	0	; () banked
  2112  001532  0100               	movlb	0	; () banked
  2113  001534  2BDC               	incf	___lwmod@counter& (0+255),f,b
  2114  001536                     l3886:
  2115                           
  2116                           ; BSR set to: 0
  2117  001536  0100               	movlb	0	; () banked
  2118  001538  0100               	movlb	0	; () banked
  2119  00153A  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2120  00153C  D7F3               	goto	l3884
  2121  00153E                     l3888:
  2122                           
  2123                           ; BSR set to: 0
  2124  00153E  0100               	movlb	0	; () banked
  2125  001540  0100               	movlb	0	; () banked
  2126  001542  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2127  001544  0100               	movlb	0	; () banked
  2128  001546  0100               	movlb	0	; () banked
  2129  001548  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  2130  00154A  0100               	movlb	0	; () banked
  2131  00154C  0100               	movlb	0	; () banked
  2132  00154E  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2133  001550  0100               	movlb	0	; () banked
  2134  001552  0100               	movlb	0	; () banked
  2135  001554  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2136  001556  A0D8               	btfss	status,0,c
  2137  001558  D00C               	goto	l3892
  2138                           
  2139                           ; BSR set to: 0
  2140  00155A  0100               	movlb	0	; () banked
  2141  00155C  0100               	movlb	0	; () banked
  2142  00155E  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2143  001560  0100               	movlb	0	; () banked
  2144  001562  0100               	movlb	0	; () banked
  2145  001564  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  2146  001566  0100               	movlb	0	; () banked
  2147  001568  0100               	movlb	0	; () banked
  2148  00156A  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2149  00156C  0100               	movlb	0	; () banked
  2150  00156E  0100               	movlb	0	; () banked
  2151  001570  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2152  001572                     l3892:
  2153                           
  2154                           ; BSR set to: 0
  2155  001572  0100               	movlb	0	; () banked
  2156  001574  0100               	movlb	0	; () banked
  2157  001576  0100               	movlb	0	; () banked
  2158  001578  90D8               	bcf	status,0,c
  2159  00157A  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2160  00157C  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  2161                           
  2162                           ; BSR set to: 0
  2163  00157E  0100               	movlb	0	; () banked
  2164  001580  0100               	movlb	0	; () banked
  2165  001582  2FDC               	decfsz	___lwmod@counter& (0+255),f,b
  2166  001584  D7DC               	goto	l3888
  2167  001586                     l1050:
  2168                           
  2169                           ; BSR set to: 0
  2170  001586  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  2171  00158A  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  2172                           
  2173                           ; BSR set to: 0
  2174  00158E  0012               	return	
  2175  001590                     __end_of___lwmod:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           indf1	equ	0xFE7
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _ToMainLow_sendmsg *****************
  2191 ;; Defined at:
  2192 ;;		line 103 in file "src/messages.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  length          1    wreg     unsigned char 
  2195 ;;  msgtype         1   16[BANK1 ] unsigned char 
  2196 ;;  data            2   17[BANK1 ] PTR void 
  2197 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  length          1   19[BANK1 ] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      char 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2209 ;;      Params:         0       0       3       0       0
  2210 ;;      Locals:         0       0       1       0       0
  2211 ;;      Temps:          0       0       0       0       0
  2212 ;;      Totals:         0       0       4       0       0
  2213 ;;Total ram usage:        4 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:   12
  2216 ;; This function calls:
  2217 ;;		_send_msg
  2218 ;; This function is called by:
  2219 ;;		_timer1_lthread
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text5
  2224  001BB8                     __ptext5:
  2225                           	opt stack 0
  2226  001BB8                     _ToMainLow_sendmsg:
  2227                           	opt stack 16
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;incstack = 0
  2231                           ;ToMainLow_sendmsg@length stored from wreg
  2232  001BB8  CFE8 F1B5          	movff	wreg,ToMainLow_sendmsg@length
  2233                           
  2234                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2235  001BBC  0100               	movlb	0	; () banked
  2236  001BBE  0E00               	movlw	high _ToMainLow_MQ
  2237  001BC0  0101               	movlb	1	; () banked
  2238  001BC2  0101               	movlb	1	; () banked
  2239  001BC4  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  2240  001BC6  0100               	movlb	0	; () banked
  2241  001BC8  0E80               	movlw	low _ToMainLow_MQ
  2242  001BCA  0101               	movlb	1	; () banked
  2243  001BCC  0101               	movlb	1	; () banked
  2244  001BCE  6FA6               	movwf	send_msg@qptr& (0+255),b
  2245  001BD0  C1B5  F1A8         	movff	ToMainLow_sendmsg@length,send_msg@length
  2246  001BD4  C1B2  F1A9         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2247  001BD8  0101               	movlb	1	; () banked
  2248  001BDA  0101               	movlb	1	; () banked
  2249  001BDC  C1B4  F1AB         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2250  001BE0  0101               	movlb	1	; () banked
  2251  001BE2  0101               	movlb	1	; () banked
  2252  001BE4  C1B3  F1AA         	movff	ToMainLow_sendmsg@data,send_msg@data
  2253  001BE8  ECE8  F006         	call	_send_msg	;wreg free
  2254  001BEC  0012               	return	
  2255  001BEE                     __end_of_ToMainLow_sendmsg:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           indf1	equ	0xFE7
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           postdec2	equ	0xFDD
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _send_msg *****************
  2271 ;; Defined at:
  2272 ;;		line 24 in file "src/messages.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  2275 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2276 ;;  length          1    6[BANK1 ] unsigned char 
  2277 ;;  msgtype         1    7[BANK1 ] unsigned char 
  2278 ;;  data            2    8[BANK1 ] PTR void 
  2279 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  2280 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  2283 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2284 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2285 ;;  tlength         2   11[BANK1 ] unsigned int 
  2286 ;;  slot            1   13[BANK1 ] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      char 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2296 ;;      Params:         0       0       6       0       0
  2297 ;;      Locals:         0       0       5       0       0
  2298 ;;      Temps:          0       0       1       0       0
  2299 ;;      Totals:         0       0      12       0       0
  2300 ;;Total ram usage:       12 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:   11
  2303 ;; This function calls:
  2304 ;;		_memcpy
  2305 ;; This function is called by:
  2306 ;;		_ToMainLow_sendmsg
  2307 ;;		_FromMainLow_sendmsg
  2308 ;;		_FromMainHigh_sendmsg
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text6
  2313  000DD0                     __ptext6:
  2314                           	opt stack 0
  2315  000DD0                     _send_msg:
  2316                           	opt stack 16
  2317                           
  2318                           ;messages.c: 25: unsigned char slot;
  2319                           ;messages.c: 27: msg *qmsg;
  2320                           ;messages.c: 28: size_t tlength = length;
  2321                           
  2322                           ;incstack = 0
  2323  000DD0  0101               	movlb	1	; () banked
  2324  000DD2  0101               	movlb	1	; () banked
  2325  000DD4  C1A8  F1AD         	movff	send_msg@length,send_msg@tlength
  2326  000DD8  0101               	movlb	1	; () banked
  2327  000DDA  0101               	movlb	1	; () banked
  2328  000DDC  6BAE               	clrf	(send_msg@tlength+1)& (0+255),b
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2332  000DDE  0101               	movlb	1	; () banked
  2333  000DE0  EE20 F034          	lfsr	2,52
  2334  000DE4  0101               	movlb	1	; () banked
  2335  000DE6  51A6               	movf	send_msg@qptr& (0+255),w,b
  2336  000DE8  26D9               	addwf	fsr2l,f,c
  2337  000DEA  0101               	movlb	1	; () banked
  2338  000DEC  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2339  000DEE  22DA               	addwfc	fsr2h,f,c
  2340  000DF0  50DF               	movf	indf2,w,c
  2341  000DF2  0101               	movlb	1	; () banked
  2342  000DF4  0101               	movlb	1	; () banked
  2343  000DF6  6FAF               	movwf	send_msg@slot& (0+255),b
  2344                           
  2345                           ; BSR set to: 1
  2346                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2347  000DF8  0101               	movlb	1	; () banked
  2348  000DFA  0101               	movlb	1	; () banked
  2349  000DFC  51AF               	movf	send_msg@slot& (0+255),w,b
  2350  000DFE  0D0D               	mullw	13
  2351  000E00  50F3               	movf	prodl,w,c
  2352  000E02  0101               	movlb	1	; () banked
  2353  000E04  0101               	movlb	1	; () banked
  2354  000E06  25A6               	addwf	send_msg@qptr& (0+255),w,b
  2355  000E08  0101               	movlb	1	; () banked
  2356  000E0A  0101               	movlb	1	; () banked
  2357  000E0C  6FB0               	movwf	send_msg@qmsg& (0+255),b
  2358  000E0E  50F4               	movf	prodh,w,c
  2359  000E10  0101               	movlb	1	; () banked
  2360  000E12  0101               	movlb	1	; () banked
  2361  000E14  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2362  000E16  0101               	movlb	1	; () banked
  2363  000E18  6FB1               	movwf	(send_msg@qmsg+1)& (0+255),b
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;messages.c: 41: if (qmsg->full != 0) {
  2367  000E1A  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2368  000E1E  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2369  000E22  50DF               	movf	indf2,w,c
  2370  000E24  B4D8               	btfsc	status,2,c
  2371  000E26  D002               	goto	l3766
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;messages.c: 42: return (-1);
  2375  000E28  0EFF               	movlw	255
  2376  000E2A  0012               	return	
  2377  000E2C                     l3766:
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;messages.c: 43: }
  2381                           ;messages.c: 46: qmsg->length = length;
  2382  000E2C  0101               	movlb	1	; () banked
  2383  000E2E  EE20 F001          	lfsr	2,1
  2384  000E32  0101               	movlb	1	; () banked
  2385  000E34  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2386  000E36  26D9               	addwf	fsr2l,f,c
  2387  000E38  0101               	movlb	1	; () banked
  2388  000E3A  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2389  000E3C  22DA               	addwfc	fsr2h,f,c
  2390  000E3E  0101               	movlb	1	; () banked
  2391  000E40  C1A8  FFDF         	movff	send_msg@length,indf2
  2392                           
  2393                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2394  000E44  0101               	movlb	1	; () banked
  2395  000E46  EE20 F002          	lfsr	2,2
  2396  000E4A  0101               	movlb	1	; () banked
  2397  000E4C  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2398  000E4E  26D9               	addwf	fsr2l,f,c
  2399  000E50  0101               	movlb	1	; () banked
  2400  000E52  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2401  000E54  22DA               	addwfc	fsr2h,f,c
  2402  000E56  0101               	movlb	1	; () banked
  2403  000E58  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2407  000E5C  0E03               	movlw	3
  2408  000E5E  0101               	movlb	1	; () banked
  2409  000E60  0101               	movlb	1	; () banked
  2410  000E62  25B0               	addwf	send_msg@qmsg& (0+255),w,b
  2411  000E64  0100               	movlb	0	; () banked
  2412  000E66  0100               	movlb	0	; () banked
  2413  000E68  6FD7               	movwf	memcpy@d1& (0+255),b
  2414  000E6A  0E00               	movlw	0
  2415  000E6C  0101               	movlb	1	; () banked
  2416  000E6E  0101               	movlb	1	; () banked
  2417  000E70  21B1               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2418  000E72  0100               	movlb	0	; () banked
  2419  000E74  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  2420  000E76  0101               	movlb	1	; () banked
  2421  000E78  0100               	movlb	0	; () banked
  2422  000E7A  C1AB  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  2423  000E7E  0101               	movlb	1	; () banked
  2424  000E80  0100               	movlb	0	; () banked
  2425  000E82  C1AA  F0D9         	movff	send_msg@data,memcpy@s1
  2426  000E86  C1AD  F0DB         	movff	send_msg@tlength,memcpy@n
  2427  000E8A  C1AE  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  2428  000E8E  EC69  F00C         	call	_memcpy	;wreg free
  2429                           
  2430                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2431  000E92  0101               	movlb	1	; () banked
  2432  000E94  EE20 F034          	lfsr	2,52
  2433  000E98  0101               	movlb	1	; () banked
  2434  000E9A  51A6               	movf	send_msg@qptr& (0+255),w,b
  2435  000E9C  26D9               	addwf	fsr2l,f,c
  2436  000E9E  0101               	movlb	1	; () banked
  2437  000EA0  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2438  000EA2  22DA               	addwfc	fsr2h,f,c
  2439  000EA4  0101               	movlb	1	; () banked
  2440  000EA6  EE10 F034          	lfsr	1,52
  2441  000EAA  0101               	movlb	1	; () banked
  2442  000EAC  51A6               	movf	send_msg@qptr& (0+255),w,b
  2443  000EAE  26E1               	addwf	fsr1l,f,c
  2444  000EB0  0101               	movlb	1	; () banked
  2445  000EB2  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2446  000EB4  22E2               	addwfc	fsr1h,f,c
  2447  000EB6  50E7               	movf	indf1,w,c
  2448  000EB8  0101               	movlb	1	; () banked
  2449  000EBA  6FAC               	movwf	??_send_msg& (0+255),b
  2450  000EBC  0101               	movlb	1	; () banked
  2451  000EBE  29AC               	incf	??_send_msg& (0+255),w,b
  2452  000EC0  0B03               	andlw	3
  2453  000EC2  6EDF               	movwf	indf2,c
  2454                           
  2455                           ; BSR set to: 1
  2456                           ;messages.c: 59: qmsg->full = 1;
  2457  000EC4  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2458  000EC8  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2459  000ECC  0E01               	movlw	1
  2460  000ECE  6EDF               	movwf	indf2,c
  2461                           
  2462                           ; BSR set to: 1
  2463                           ;messages.c: 60: return (1);
  2464  000ED0  0E01               	movlw	1
  2465  000ED2  0012               	return	
  2466  000ED4                     __end_of_send_msg:
  2467                           	opt stack 0
  2468                           tblptru	equ	0xFF8
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           indf1	equ	0xFE7
  2474                           fsr1h	equ	0xFE2
  2475                           fsr1l	equ	0xFE1
  2476                           indf2	equ	0xFDF
  2477                           postinc2	equ	0xFDE
  2478                           postdec2	equ	0xFDD
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function _ReadTimer1 *****************
  2484 ;; Defined at:
  2485 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  timer           2   35[BANK0 ] struct Timers
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2   33[BANK0 ] unsigned int 
  2492 ;; Registers used:
  2493 ;;		None
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2499 ;;      Params:         0       2       0       0       0
  2500 ;;      Locals:         0       2       0       0       0
  2501 ;;      Temps:          0       0       0       0       0
  2502 ;;      Totals:         0       4       0       0       0
  2503 ;;Total ram usage:        4 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:   10
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_timer1_lthread
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text7
  2514  001E1A                     __ptext7:
  2515                           	opt stack 0
  2516  001E1A                     _ReadTimer1:
  2517                           	opt stack 18
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;incstack = 0
  2521  001E1A  CFCE F0D9          	movff	4046,ReadTimer1@timer	;volatile
  2522  001E1E  CFCF F0DA          	movff	4047,ReadTimer1@timer+1	;volatile
  2523  001E22  C0D9  F0D7         	movff	ReadTimer1@timer,?_ReadTimer1
  2524  001E26  C0DA  F0D8         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2525  001E2A  0012               	return	
  2526  001E2C                     __end_of_ReadTimer1:
  2527                           	opt stack 0
  2528                           tblptru	equ	0xFF8
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           indf1	equ	0xFE7
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _timer0_lthread *****************
  2544 ;; Defined at:
  2545 ;;		line 9 in file "src/timer0_thread.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2548 ;;		 -> main@t0thread_data(2), 
  2549 ;;  msgtype         2    2[BANK1 ] int 
  2550 ;;  length          2    4[BANK1 ] int 
  2551 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2552 ;;		 -> main@msgbuffer(11), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2555 ;;		 -> main@msgbuffer(11), 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    0[BANK1 ] int 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2565 ;;      Params:         0       0       8       0       0
  2566 ;;      Locals:         0       2       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       2       8       0       0
  2569 ;;Total ram usage:       10 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:   10
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text8
  2580  001E2C                     __ptext8:
  2581                           	opt stack 0
  2582  001E2C                     _timer0_lthread:
  2583                           	opt stack 19
  2584                           
  2585                           ;timer0_thread.c: 10: unsigned int *msgval;
  2586                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2587                           
  2588                           ;incstack = 0
  2589  001E2C  0101               	movlb	1	; () banked
  2590  001E2E  0100               	movlb	0	; () banked
  2591  001E30  C1A9  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2592  001E34  0101               	movlb	1	; () banked
  2593  001E36  0100               	movlb	0	; () banked
  2594  001E38  C1A8  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2595                           
  2596                           ; BSR set to: 0
  2597  001E3C  0012               	return	
  2598  001E3E                     __end_of_timer0_lthread:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf1	equ	0xFE7
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _start_i2c_slave_reply *****************
  2616 ;; Defined at:
  2617 ;;		line 53 in file "src/my_i2c.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  length          1    wreg     unsigned char 
  2620 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  2621 ;;		 -> main@msgbuffer(11), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  length          1   37[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2633 ;;      Params:         0       2       0       0       0
  2634 ;;      Locals:         0       1       0       0       0
  2635 ;;      Temps:          0       2       0       0       0
  2636 ;;      Totals:         0       5       0       0       0
  2637 ;;Total ram usage:        5 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:   10
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text9
  2648  000CC2                     __ptext9:
  2649                           	opt stack 0
  2650  000CC2                     _start_i2c_slave_reply:
  2651                           	opt stack 19
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;incstack = 0
  2655                           ;start_i2c_slave_reply@length stored from wreg
  2656  000CC2  CFE8 F0DB          	movff	wreg,start_i2c_slave_reply@length
  2657                           
  2658                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2659  000CC6  0100               	movlb	0	; () banked
  2660  000CC8  EE20 F019          	lfsr	2,25
  2661  000CCC  0100               	movlb	0	; () banked
  2662  000CCE  51DD               	movf	_ic_ptr& (0+255),w,b
  2663  000CD0  26D9               	addwf	fsr2l,f,c
  2664  000CD2  0100               	movlb	0	; () banked
  2665  000CD4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2666  000CD6  22DA               	addwfc	fsr2h,f,c
  2667  000CD8  0E00               	movlw	0
  2668  000CDA  6EDF               	movwf	indf2,c
  2669  000CDC  D042               	goto	l3676
  2670  000CDE                     l3672:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2674  000CDE  0100               	movlb	0	; () banked
  2675  000CE0  EE20 F019          	lfsr	2,25
  2676  000CE4  0100               	movlb	0	; () banked
  2677  000CE6  51DD               	movf	_ic_ptr& (0+255),w,b
  2678  000CE8  26D9               	addwf	fsr2l,f,c
  2679  000CEA  0100               	movlb	0	; () banked
  2680  000CEC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2681  000CEE  22DA               	addwfc	fsr2h,f,c
  2682  000CF0  50DF               	movf	indf2,w,c
  2683  000CF2  0100               	movlb	0	; () banked
  2684  000CF4  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2685  000CF6  0100               	movlb	0	; () banked
  2686  000CF8  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2687  000CFA  0D01               	mullw	1
  2688  000CFC  50F3               	movf	prodl,w,c
  2689  000CFE  0100               	movlb	0	; () banked
  2690  000D00  0100               	movlb	0	; () banked
  2691  000D02  25D7               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2692  000D04  6ED9               	movwf	fsr2l,c
  2693  000D06  50F4               	movf	prodh,w,c
  2694  000D08  0100               	movlb	0	; () banked
  2695  000D0A  0100               	movlb	0	; () banked
  2696  000D0C  21D8               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2697  000D0E  6EDA               	movwf	fsr2h,c
  2698  000D10  0100               	movlb	0	; () banked
  2699  000D12  EE10 F019          	lfsr	1,25
  2700  000D16  0100               	movlb	0	; () banked
  2701  000D18  51DD               	movf	_ic_ptr& (0+255),w,b
  2702  000D1A  26E1               	addwf	fsr1l,f,c
  2703  000D1C  0100               	movlb	0	; () banked
  2704  000D1E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2705  000D20  22E2               	addwfc	fsr1h,f,c
  2706  000D22  50E7               	movf	indf1,w,c
  2707  000D24  0100               	movlb	0	; () banked
  2708  000D26  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2709  000D28  0100               	movlb	0	; () banked
  2710  000D2A  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2711  000D2C  0D01               	mullw	1
  2712  000D2E  0E0F               	movlw	15
  2713  000D30  26F3               	addwf	prodl,f,c
  2714  000D32  0E00               	movlw	0
  2715  000D34  22F4               	addwfc	prodh,f,c
  2716  000D36  50F3               	movf	prodl,w,c
  2717  000D38  0100               	movlb	0	; () banked
  2718  000D3A  0100               	movlb	0	; () banked
  2719  000D3C  25DD               	addwf	_ic_ptr& (0+255),w,b
  2720  000D3E  6EE1               	movwf	fsr1l,c
  2721  000D40  50F4               	movf	prodh,w,c
  2722  000D42  0100               	movlb	0	; () banked
  2723  000D44  0100               	movlb	0	; () banked
  2724  000D46  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2725  000D48  6EE2               	movwf	fsr1h,c
  2726  000D4A  CFDF FFE7          	movff	indf2,indf1
  2727                           
  2728                           ; BSR set to: 0
  2729  000D4E  0100               	movlb	0	; () banked
  2730  000D50  EE20 F019          	lfsr	2,25
  2731  000D54  0100               	movlb	0	; () banked
  2732  000D56  51DD               	movf	_ic_ptr& (0+255),w,b
  2733  000D58  26D9               	addwf	fsr2l,f,c
  2734  000D5A  0100               	movlb	0	; () banked
  2735  000D5C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2736  000D5E  22DA               	addwfc	fsr2h,f,c
  2737  000D60  2ADF               	incf	indf2,f,c
  2738  000D62                     l3676:
  2739                           
  2740                           ; BSR set to: 0
  2741  000D62  0100               	movlb	0	; () banked
  2742  000D64  EE20 F019          	lfsr	2,25
  2743  000D68  0100               	movlb	0	; () banked
  2744  000D6A  51DD               	movf	_ic_ptr& (0+255),w,b
  2745  000D6C  26D9               	addwf	fsr2l,f,c
  2746  000D6E  0100               	movlb	0	; () banked
  2747  000D70  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2748  000D72  22DA               	addwfc	fsr2h,f,c
  2749  000D74  50DF               	movf	indf2,w,c
  2750  000D76  0100               	movlb	0	; () banked
  2751  000D78  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2752  000D7A  0100               	movlb	0	; () banked
  2753  000D7C  0100               	movlb	0	; () banked
  2754  000D7E  51DB               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2755  000D80  0100               	movlb	0	; () banked
  2756  000D82  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2757  000D84  A0D8               	btfss	status,0,c
  2758  000D86  D7AB               	goto	l3672
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;my_i2c.c: 57: }
  2762                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2763                           
  2764                           ; BSR set to: 0
  2765  000D88  0100               	movlb	0	; () banked
  2766  000D8A  EE20 F019          	lfsr	2,25
  2767  000D8E  0100               	movlb	0	; () banked
  2768  000D90  51DD               	movf	_ic_ptr& (0+255),w,b
  2769  000D92  26D9               	addwf	fsr2l,f,c
  2770  000D94  0100               	movlb	0	; () banked
  2771  000D96  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2772  000D98  22DA               	addwfc	fsr2h,f,c
  2773  000D9A  0100               	movlb	0	; () banked
  2774  000D9C  C0DB  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2775                           
  2776                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2777  000DA0  0100               	movlb	0	; () banked
  2778  000DA2  EE20 F01A          	lfsr	2,26
  2779  000DA6  0100               	movlb	0	; () banked
  2780  000DA8  51DD               	movf	_ic_ptr& (0+255),w,b
  2781  000DAA  26D9               	addwf	fsr2l,f,c
  2782  000DAC  0100               	movlb	0	; () banked
  2783  000DAE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2784  000DB0  22DA               	addwfc	fsr2h,f,c
  2785  000DB2  0E01               	movlw	1
  2786  000DB4  6EDF               	movwf	indf2,c
  2787                           
  2788                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2789  000DB6  0100               	movlb	0	; () banked
  2790  000DB8  EE20 F00F          	lfsr	2,15
  2791  000DBC  0100               	movlb	0	; () banked
  2792  000DBE  51DD               	movf	_ic_ptr& (0+255),w,b
  2793  000DC0  26D9               	addwf	fsr2l,f,c
  2794  000DC2  0100               	movlb	0	; () banked
  2795  000DC4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2796  000DC6  22DA               	addwfc	fsr2h,f,c
  2797  000DC8  50DF               	movf	indf2,w,c
  2798  000DCA  6EC9               	movwf	4041,c	;volatile
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2802  000DCC  88C6               	bsf	4038,4,c	;volatile
  2803                           
  2804                           ; BSR set to: 0
  2805  000DCE  0012               	return	
  2806  000DD0                     __end_of_start_i2c_slave_reply:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           postinc0	equ	0xFEE
  2812                           wreg	equ	0xFE8
  2813                           indf1	equ	0xFE7
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _init_uart_recv *****************
  2824 ;; Defined at:
  2825 ;;		line 75 in file "src/my_uart.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  uc              2   33[BANK0 ] PTR struct __uart_comm
  2828 ;;		 -> main@uc(5), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2840 ;;      Params:         0       2       0       0       0
  2841 ;;      Locals:         0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         0       2       0       0       0
  2844 ;;Total ram usage:        2 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:   10
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text10
  2855  001DC8                     __ptext10:
  2856                           	opt stack 0
  2857  001DC8                     _init_uart_recv:
  2858                           	opt stack 19
  2859                           
  2860                           ;my_uart.c: 76: uc_ptr = uc;
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;incstack = 0
  2864  001DC8  0100               	movlb	0	; () banked
  2865  001DCA  C0D8  F049         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2866  001DCE  0100               	movlb	0	; () banked
  2867  001DD0  C0D7  F048         	movff	init_uart_recv@uc,_uc_ptr
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;my_uart.c: 77: uc_ptr->buflen = 0;
  2871  001DD4  EE20 F004          	lfsr	2,4
  2872  001DD8  5048               	movf	_uc_ptr,w,c
  2873  001DDA  26D9               	addwf	fsr2l,f,c
  2874  001DDC  5049               	movf	_uc_ptr+1,w,c
  2875  001DDE  22DA               	addwfc	fsr2h,f,c
  2876  001DE0  0E00               	movlw	0
  2877  001DE2  6EDF               	movwf	indf2,c
  2878                           
  2879                           ; BSR set to: 0
  2880  001DE4  0012               	return	
  2881  001DE6                     __end_of_init_uart_recv:
  2882                           	opt stack 0
  2883                           tblptru	equ	0xFF8
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           indf1	equ	0xFE7
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _init_uart_lthread *****************
  2899 ;; Defined at:
  2900 ;;		line 6 in file "src/uart_thread.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  uptr            2   33[BANK0 ] PTR struct __uart_thread
  2903 ;;		 -> main@uthread_data(10), 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		None
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2915 ;;      Params:         0       2       0       0       0
  2916 ;;      Locals:         0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         0       2       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:   10
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text11
  2930  001EA0                     __ptext11:
  2931                           	opt stack 0
  2932  001EA0                     _init_uart_lthread:
  2933                           	opt stack 19
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;incstack = 0
  2937  001EA0  0012               	return	
  2938  001EA2                     __end_of_init_uart_lthread:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           prodh	equ	0xFF4
  2942                           prodl	equ	0xFF3
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           indf1	equ	0xFE7
  2946                           fsr1h	equ	0xFE2
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           postinc2	equ	0xFDE
  2950                           postdec2	equ	0xFDD
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _init_timer1_lthread *****************
  2956 ;; Defined at:
  2957 ;;		line 6 in file "src/timer1_thread.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  tptr            2   33[BANK0 ] PTR struct __timer1_thre
  2960 ;;		 -> main@t1thread_data(12), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;		None               void
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2972 ;;      Params:         0       2       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         0       2       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:   10
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text12
  2987  001B0C                     __ptext12:
  2988                           	opt stack 0
  2989  001B0C                     _init_timer1_lthread:
  2990                           	opt stack 19
  2991                           
  2992                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2993                           
  2994                           ;incstack = 0
  2995  001B0C  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2996  001B10  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2997  001B14  0E00               	movlw	0
  2998  001B16  6EDE               	movwf	postinc2,c
  2999  001B18  0E00               	movlw	0
  3000  001B1A  6EDD               	movwf	postdec2,c
  3001                           
  3002                           ;timer1_thread.c: 8: tptr->buffer[0] = 0xC8;
  3003  001B1C  0100               	movlb	0	; () banked
  3004  001B1E  EE20 F002          	lfsr	2,2
  3005  001B22  0100               	movlb	0	; () banked
  3006  001B24  51D7               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3007  001B26  26D9               	addwf	fsr2l,f,c
  3008  001B28  0100               	movlb	0	; () banked
  3009  001B2A  51D8               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3010  001B2C  22DA               	addwfc	fsr2h,f,c
  3011  001B2E  0EC8               	movlw	200
  3012  001B30  6EDF               	movwf	indf2,c
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;timer1_thread.c: 9: tptr->buffer[1] = 0x4B;
  3016  001B32  0100               	movlb	0	; () banked
  3017  001B34  EE20 F003          	lfsr	2,3
  3018  001B38  0100               	movlb	0	; () banked
  3019  001B3A  51D7               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3020  001B3C  26D9               	addwf	fsr2l,f,c
  3021  001B3E  0100               	movlb	0	; () banked
  3022  001B40  51D8               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3023  001B42  22DA               	addwfc	fsr2h,f,c
  3024  001B44  0E4B               	movlw	75
  3025  001B46  6EDF               	movwf	indf2,c
  3026                           
  3027                           ; BSR set to: 0
  3028  001B48  0012               	return	
  3029  001B4A                     __end_of_init_timer1_lthread:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           prodh	equ	0xFF4
  3033                           prodl	equ	0xFF3
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           indf1	equ	0xFE7
  3037                           fsr1h	equ	0xFE2
  3038                           fsr1l	equ	0xFE1
  3039                           indf2	equ	0xFDF
  3040                           postinc2	equ	0xFDE
  3041                           postdec2	equ	0xFDD
  3042                           fsr2h	equ	0xFDA
  3043                           fsr2l	equ	0xFD9
  3044                           status	equ	0xFD8
  3045                           
  3046 ;; *************** function _init_queues *****************
  3047 ;; Defined at:
  3048 ;;		line 194 in file "src/messages.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;		None               void
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3062 ;;      Params:         0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0
  3064 ;;      Temps:          0       1       0       0       0
  3065 ;;      Totals:         0       1       0       0       0
  3066 ;;Total ram usage:        1 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:   11
  3069 ;; This function calls:
  3070 ;;		_init_queue
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text13
  3077  00178E                     __ptext13:
  3078                           	opt stack 0
  3079  00178E                     _init_queues:
  3080                           	opt stack 18
  3081                           
  3082                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;incstack = 0
  3086  00178E  0100               	movlb	0	; () banked
  3087  001790  6FDB               	movwf	??_init_queues& (0+255),b
  3088  001792  0E00               	movlw	0
  3089  001794  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3090  001796  0100               	movlb	0	; () banked
  3091  001798  51DB               	movf	??_init_queues& (0+255),w,b
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3095  00179A  0100               	movlb	0	; () banked
  3096  00179C  0E00               	movlw	high _ToMainLow_MQ
  3097  00179E  0100               	movlb	0	; () banked
  3098  0017A0  0100               	movlb	0	; () banked
  3099  0017A2  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3100  0017A4  0100               	movlb	0	; () banked
  3101  0017A6  0E80               	movlw	low _ToMainLow_MQ
  3102  0017A8  0100               	movlb	0	; () banked
  3103  0017AA  0100               	movlb	0	; () banked
  3104  0017AC  6FD7               	movwf	init_queue@qptr& (0+255),b
  3105  0017AE  EC8A  F00B         	call	_init_queue	;wreg free
  3106                           
  3107                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3108  0017B2  0101               	movlb	1	; () banked
  3109  0017B4  0E01               	movlw	high _ToMainHigh_MQ
  3110  0017B6  0100               	movlb	0	; () banked
  3111  0017B8  0100               	movlb	0	; () banked
  3112  0017BA  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3113  0017BC  0101               	movlb	1	; () banked
  3114  0017BE  0E6C               	movlw	low _ToMainHigh_MQ
  3115  0017C0  0100               	movlb	0	; () banked
  3116  0017C2  0100               	movlb	0	; () banked
  3117  0017C4  6FD7               	movwf	init_queue@qptr& (0+255),b
  3118  0017C6  EC8A  F00B         	call	_init_queue	;wreg free
  3119                           
  3120                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3121  0017CA  0101               	movlb	1	; () banked
  3122  0017CC  0E01               	movlw	high _FromMainLow_MQ
  3123  0017CE  0100               	movlb	0	; () banked
  3124  0017D0  0100               	movlb	0	; () banked
  3125  0017D2  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3126  0017D4  0101               	movlb	1	; () banked
  3127  0017D6  0E36               	movlw	low _FromMainLow_MQ
  3128  0017D8  0100               	movlb	0	; () banked
  3129  0017DA  0100               	movlb	0	; () banked
  3130  0017DC  6FD7               	movwf	init_queue@qptr& (0+255),b
  3131  0017DE  EC8A  F00B         	call	_init_queue	;wreg free
  3132                           
  3133                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3134  0017E2  0101               	movlb	1	; () banked
  3135  0017E4  0E01               	movlw	high _FromMainHigh_MQ
  3136  0017E6  0100               	movlb	0	; () banked
  3137  0017E8  0100               	movlb	0	; () banked
  3138  0017EA  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3139  0017EC  0101               	movlb	1	; () banked
  3140  0017EE  0E00               	movlw	low _FromMainHigh_MQ
  3141  0017F0  0100               	movlb	0	; () banked
  3142  0017F2  0100               	movlb	0	; () banked
  3143  0017F4  6FD7               	movwf	init_queue@qptr& (0+255),b
  3144  0017F6  EC8A  F00B         	call	_init_queue	;wreg free
  3145  0017FA  0012               	return	
  3146  0017FC                     __end_of_init_queues:
  3147                           	opt stack 0
  3148                           tblptru	equ	0xFF8
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           indf1	equ	0xFE7
  3154                           fsr1h	equ	0xFE2
  3155                           fsr1l	equ	0xFE1
  3156                           indf2	equ	0xFDF
  3157                           postinc2	equ	0xFDE
  3158                           postdec2	equ	0xFDD
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _init_queue *****************
  3164 ;; Defined at:
  3165 ;;		line 14 in file "src/messages.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3168 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  i               1   36[BANK0 ] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;		None               void
  3173 ;; Registers used:
  3174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3180 ;;      Params:         0       2       0       0       0
  3181 ;;      Locals:         0       1       0       0       0
  3182 ;;      Temps:          0       1       0       0       0
  3183 ;;      Totals:         0       4       0       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:   10
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_init_queues
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text14
  3195  001714                     __ptext14:
  3196                           	opt stack 0
  3197  001714                     _init_queue:
  3198                           	opt stack 18
  3199                           
  3200                           ;messages.c: 15: unsigned char i;
  3201                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3202                           
  3203                           ;incstack = 0
  3204  001714  0100               	movlb	0	; () banked
  3205  001716  EE20 F034          	lfsr	2,52
  3206  00171A  0100               	movlb	0	; () banked
  3207  00171C  51D7               	movf	init_queue@qptr& (0+255),w,b
  3208  00171E  26D9               	addwf	fsr2l,f,c
  3209  001720  0100               	movlb	0	; () banked
  3210  001722  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3211  001724  22DA               	addwfc	fsr2h,f,c
  3212  001726  0E00               	movlw	0
  3213  001728  6EDF               	movwf	indf2,c
  3214                           
  3215                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3216  00172A  0100               	movlb	0	; () banked
  3217  00172C  EE20 F035          	lfsr	2,53
  3218  001730  0100               	movlb	0	; () banked
  3219  001732  51D7               	movf	init_queue@qptr& (0+255),w,b
  3220  001734  26D9               	addwf	fsr2l,f,c
  3221  001736  0100               	movlb	0	; () banked
  3222  001738  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3223  00173A  22DA               	addwfc	fsr2h,f,c
  3224  00173C  0E00               	movlw	0
  3225  00173E  6EDF               	movwf	indf2,c
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3229  001740  0100               	movlb	0	; () banked
  3230  001742  6FD9               	movwf	??_init_queue& (0+255),b
  3231  001744  0E00               	movlw	0
  3232  001746  0100               	movlb	0	; () banked
  3233  001748  0100               	movlb	0	; () banked
  3234  00174A  6FDA               	movwf	init_queue@i& (0+255),b
  3235  00174C  0100               	movlb	0	; () banked
  3236  00174E  51D9               	movf	??_init_queue& (0+255),w,b
  3237                           
  3238                           ; BSR set to: 0
  3239  001750  0E03               	movlw	3
  3240  001752  0100               	movlb	0	; () banked
  3241  001754  0100               	movlb	0	; () banked
  3242  001756  65DA               	cpfsgt	init_queue@i& (0+255),b
  3243  001758  D001               	goto	l3748
  3244  00175A  0012               	return	
  3245  00175C                     l3748:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;messages.c: 20: qptr->queue[i].full = 0;
  3249  00175C  0100               	movlb	0	; () banked
  3250  00175E  0100               	movlb	0	; () banked
  3251  001760  51DA               	movf	init_queue@i& (0+255),w,b
  3252  001762  0D0D               	mullw	13
  3253  001764  50F3               	movf	prodl,w,c
  3254  001766  0100               	movlb	0	; () banked
  3255  001768  0100               	movlb	0	; () banked
  3256  00176A  25D7               	addwf	init_queue@qptr& (0+255),w,b
  3257  00176C  6ED9               	movwf	fsr2l,c
  3258  00176E  50F4               	movf	prodh,w,c
  3259  001770  0100               	movlb	0	; () banked
  3260  001772  0100               	movlb	0	; () banked
  3261  001774  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3262  001776  6EDA               	movwf	fsr2h,c
  3263  001778  0E00               	movlw	0
  3264  00177A  6EDF               	movwf	indf2,c
  3265                           
  3266                           ; BSR set to: 0
  3267  00177C  0100               	movlb	0	; () banked
  3268  00177E  0100               	movlb	0	; () banked
  3269  001780  2BDA               	incf	init_queue@i& (0+255),f,b
  3270                           
  3271                           ; BSR set to: 0
  3272  001782  0E03               	movlw	3
  3273  001784  0100               	movlb	0	; () banked
  3274  001786  0100               	movlb	0	; () banked
  3275  001788  65DA               	cpfsgt	init_queue@i& (0+255),b
  3276  00178A  D7E8               	goto	l3748
  3277  00178C  0012               	return	
  3278  00178E                     __end_of_init_queue:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           prodh	equ	0xFF4
  3282                           prodl	equ	0xFF3
  3283                           postinc0	equ	0xFEE
  3284                           wreg	equ	0xFE8
  3285                           indf1	equ	0xFE7
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function _init_i2c *****************
  3296 ;; Defined at:
  3297 ;;		line 268 in file "src/my_i2c.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  ic              2   33[BANK0 ] PTR struct __i2c_comm
  3300 ;;		 -> main@ic(28), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;		None               void
  3305 ;; Registers used:
  3306 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3312 ;;      Params:         0       2       0       0       0
  3313 ;;      Locals:         0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0
  3315 ;;      Totals:         0       2       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:   10
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text15
  3327  001868                     __ptext15:
  3328                           	opt stack 0
  3329  001868                     _init_i2c:
  3330                           	opt stack 19
  3331                           
  3332                           ;my_i2c.c: 269: ic_ptr = ic;
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;incstack = 0
  3336  001868  0100               	movlb	0	; () banked
  3337  00186A  0100               	movlb	0	; () banked
  3338  00186C  C0D8  F0DE         	movff	init_i2c@ic+1,_ic_ptr+1
  3339  001870  0100               	movlb	0	; () banked
  3340  001872  0100               	movlb	0	; () banked
  3341  001874  C0D7  F0DD         	movff	init_i2c@ic,_ic_ptr
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3345  001878  0100               	movlb	0	; () banked
  3346  00187A  EE20 F00A          	lfsr	2,10
  3347  00187E  0100               	movlb	0	; () banked
  3348  001880  51DD               	movf	_ic_ptr& (0+255),w,b
  3349  001882  26D9               	addwf	fsr2l,f,c
  3350  001884  0100               	movlb	0	; () banked
  3351  001886  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3352  001888  22DA               	addwfc	fsr2h,f,c
  3353  00188A  0E00               	movlw	0
  3354  00188C  6EDF               	movwf	indf2,c
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3358  00188E  0100               	movlb	0	; () banked
  3359  001890  EE20 F00B          	lfsr	2,11
  3360  001894  0100               	movlb	0	; () banked
  3361  001896  51DD               	movf	_ic_ptr& (0+255),w,b
  3362  001898  26D9               	addwf	fsr2l,f,c
  3363  00189A  0100               	movlb	0	; () banked
  3364  00189C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3365  00189E  22DA               	addwfc	fsr2h,f,c
  3366  0018A0  0E00               	movlw	0
  3367  0018A2  6EDF               	movwf	indf2,c
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3371  0018A4  0100               	movlb	0	; () banked
  3372  0018A6  EE20 F00C          	lfsr	2,12
  3373  0018AA  0100               	movlb	0	; () banked
  3374  0018AC  51DD               	movf	_ic_ptr& (0+255),w,b
  3375  0018AE  26D9               	addwf	fsr2l,f,c
  3376  0018B0  0100               	movlb	0	; () banked
  3377  0018B2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3378  0018B4  22DA               	addwfc	fsr2h,f,c
  3379  0018B6  0E05               	movlw	5
  3380  0018B8  6EDF               	movwf	indf2,c
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3384  0018BA  0100               	movlb	0	; () banked
  3385  0018BC  EE20 F00E          	lfsr	2,14
  3386  0018C0  0100               	movlb	0	; () banked
  3387  0018C2  51DD               	movf	_ic_ptr& (0+255),w,b
  3388  0018C4  26D9               	addwf	fsr2l,f,c
  3389  0018C6  0100               	movlb	0	; () banked
  3390  0018C8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3391  0018CA  22DA               	addwfc	fsr2h,f,c
  3392  0018CC  0E00               	movlw	0
  3393  0018CE  6EDF               	movwf	indf2,c
  3394                           
  3395                           ; BSR set to: 0
  3396  0018D0  0012               	return	
  3397  0018D2                     __end_of_init_i2c:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf1	equ	0xFE7
  3405                           fsr1h	equ	0xFE2
  3406                           fsr1l	equ	0xFE1
  3407                           indf2	equ	0xFDF
  3408                           postinc2	equ	0xFDE
  3409                           postdec2	equ	0xFDD
  3410                           fsr2h	equ	0xFDA
  3411                           fsr2l	equ	0xFD9
  3412                           status	equ	0xFD8
  3413                           
  3414 ;; *************** function _i2c_configure_slave *****************
  3415 ;; Defined at:
  3416 ;;		line 279 in file "src/my_i2c.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  addr            1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  addr            1   33[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3430 ;;      Params:         0       0       0       0       0
  3431 ;;      Locals:         0       1       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         0       1       0       0       0
  3434 ;;Total ram usage:        1 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:   10
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text16
  3445  001D08                     __ptext16:
  3446                           	opt stack 0
  3447  001D08                     _i2c_configure_slave:
  3448                           	opt stack 19
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;incstack = 0
  3452                           ;i2c_configure_slave@addr stored from wreg
  3453  001D08  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3454                           
  3455                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3456  001D0C  8694               	bsf	3988,3,c	;volatile
  3457                           
  3458                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3459  001D0E  8894               	bsf	3988,4,c	;volatile
  3460                           
  3461                           ;my_i2c.c: 297: SSPADD = addr;
  3462  001D10  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3463                           
  3464                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3465  001D14  0E00               	movlw	0
  3466  001D16  6EC7               	movwf	4039,c	;volatile
  3467                           
  3468                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3469  001D18  0E00               	movlw	0
  3470  001D1A  6EC6               	movwf	4038,c	;volatile
  3471                           
  3472                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3473  001D1C  0E00               	movlw	0
  3474  001D1E  6EC5               	movwf	4037,c	;volatile
  3475                           
  3476                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3477  001D20  0E0E               	movlw	14
  3478  001D22  12C6               	iorwf	4038,f,c	;volatile
  3479                           
  3480                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3481  001D24  8EC7               	bsf	4039,7,c	;volatile
  3482                           
  3483                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3484  001D26  8694               	bsf	3988,3,c	;volatile
  3485                           
  3486                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3487  001D28  8894               	bsf	3988,4,c	;volatile
  3488                           
  3489                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3490  001D2A  80C5               	bsf	4037,0,c	;volatile
  3491                           
  3492                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3493  001D2C  8AC6               	bsf	4038,5,c	;volatile
  3494  001D2E  0012               	return	
  3495  001D30                     __end_of_i2c_configure_slave:
  3496                           	opt stack 0
  3497                           tblptru	equ	0xFF8
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           postinc0	equ	0xFEE
  3501                           wreg	equ	0xFE8
  3502                           indf1	equ	0xFE7
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           indf2	equ	0xFDF
  3506                           postinc2	equ	0xFDE
  3507                           postdec2	equ	0xFDD
  3508                           fsr2h	equ	0xFDA
  3509                           fsr2l	equ	0xFD9
  3510                           status	equ	0xFD8
  3511                           
  3512 ;; *************** function _enable_interrupts *****************
  3513 ;; Defined at:
  3514 ;;		line 14 in file "src/interrupts.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3528 ;;      Params:         0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:   10
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text17
  3543  001E92                     __ptext17:
  3544                           	opt stack 0
  3545  001E92                     _enable_interrupts:
  3546                           	opt stack 19
  3547                           
  3548                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3549                           
  3550                           ;incstack = 0
  3551  001E92  8ED0               	bsf	4048,7,c	;volatile
  3552                           
  3553                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3554  001E94  8EF2               	bsf	intcon,7,c	;volatile
  3555                           
  3556                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3557  001E96  8CF2               	bsf	intcon,6,c	;volatile
  3558  001E98  0012               	return	
  3559  001E9A                     __end_of_enable_interrupts:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           indf2	equ	0xFDF
  3571                           postinc2	equ	0xFDE
  3572                           postdec2	equ	0xFDD
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function _block_on_To_msgqueues *****************
  3578 ;; Defined at:
  3579 ;;		line 258 in file "src/messages.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;		None               void
  3586 ;; Registers used:
  3587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       0       1       0       0
  3596 ;;      Totals:         0       0       1       0       0
  3597 ;;Total ram usage:        1 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:   13
  3600 ;; This function calls:
  3601 ;;		_Delay1KTCYx
  3602 ;;		_check_msg
  3603 ;;		_in_main
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text18
  3610  001696                     __ptext18:
  3611                           	opt stack 0
  3612  001696                     _block_on_To_msgqueues:
  3613                           	opt stack 16
  3614                           
  3615                           ;messages.c: 259: if (!in_main()) {
  3616                           
  3617                           ;incstack = 0
  3618  001696  ECE2  F00C         	call	_in_main	;wreg free
  3619  00169A  0100               	movlb	0	; () banked
  3620  00169C  0100               	movlb	0	; () banked
  3621  00169E  51DC               	movf	(?_in_main+1)& (0+255),w,b
  3622  0016A0  0100               	movlb	0	; () banked
  3623  0016A2  11DB               	iorwf	?_in_main& (0+255),w,b
  3624  0016A4  B4D8               	btfsc	status,2,c
  3625  0016A6  0012               	return	
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;messages.c: 261: }
  3629                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3630                           
  3631                           ; BSR set to: 0
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;messages.c: 260: return;
  3635  0016A8  0101               	movlb	1	; () banked
  3636  0016AA  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3637  0016AC  0E01               	movlw	1
  3638  0016AE  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3639  0016B0  0101               	movlb	1	; () banked
  3640  0016B2  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3641  0016B4                     l3650:
  3642                           
  3643                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3644  0016B4  0101               	movlb	1	; () banked
  3645  0016B6  0E01               	movlw	high _ToMainHigh_MQ
  3646  0016B8  0100               	movlb	0	; () banked
  3647  0016BA  0100               	movlb	0	; () banked
  3648  0016BC  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3649  0016BE  0101               	movlb	1	; () banked
  3650  0016C0  0E6C               	movlw	low _ToMainHigh_MQ
  3651  0016C2  0100               	movlb	0	; () banked
  3652  0016C4  0100               	movlb	0	; () banked
  3653  0016C6  6FD7               	movwf	check_msg@qptr& (0+255),b
  3654  0016C8  ECF7  F00D         	call	_check_msg	;wreg free
  3655  0016CC  0900               	iorlw	0
  3656  0016CE  B4D8               	btfsc	status,2,c
  3657  0016D0  D007               	goto	l3656
  3658                           
  3659                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3660  0016D2  0101               	movlb	1	; () banked
  3661  0016D4  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3662  0016D6  0E00               	movlw	0
  3663  0016D8  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3664  0016DA  0101               	movlb	1	; () banked
  3665  0016DC  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3666  0016DE  0012               	return	
  3667  0016E0                     l3656:
  3668                           
  3669                           ;messages.c: 271: }
  3670                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3671  0016E0  0100               	movlb	0	; () banked
  3672  0016E2  0E00               	movlw	high _ToMainLow_MQ
  3673  0016E4  0100               	movlb	0	; () banked
  3674  0016E6  0100               	movlb	0	; () banked
  3675  0016E8  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3676  0016EA  0100               	movlb	0	; () banked
  3677  0016EC  0E80               	movlw	low _ToMainLow_MQ
  3678  0016EE  0100               	movlb	0	; () banked
  3679  0016F0  0100               	movlb	0	; () banked
  3680  0016F2  6FD7               	movwf	check_msg@qptr& (0+255),b
  3681  0016F4  ECF7  F00D         	call	_check_msg	;wreg free
  3682  0016F8  0900               	iorlw	0
  3683  0016FA  B4D8               	btfsc	status,2,c
  3684  0016FC  D007               	goto	l3662
  3685                           
  3686                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3687  0016FE  0101               	movlb	1	; () banked
  3688  001700  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3689  001702  0E00               	movlw	0
  3690  001704  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3691  001706  0101               	movlb	1	; () banked
  3692  001708  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3693  00170A  0012               	return	
  3694  00170C                     l3662:
  3695                           
  3696                           ;messages.c: 278: }
  3697                           ;messages.c: 279: Delay1KTCYx(10);
  3698  00170C  0E0A               	movlw	10
  3699  00170E  EC02  F00F         	call	_Delay1KTCYx
  3700  001712  D7D0               	goto	l3650
  3701  001714                     __end_of_block_on_To_msgqueues:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           indf1	equ	0xFE7
  3710                           fsr1h	equ	0xFE2
  3711                           fsr1l	equ	0xFE1
  3712                           indf2	equ	0xFDF
  3713                           postinc2	equ	0xFDE
  3714                           postdec2	equ	0xFDD
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _in_main *****************
  3720 ;; Defined at:
  3721 ;;		line 40 in file "src/interrupts.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2   37[BANK0 ] int 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3735 ;;      Params:         0       2       0       0       0
  3736 ;;      Locals:         0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0
  3738 ;;      Totals:         0       2       0       0       0
  3739 ;;Total ram usage:        2 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:   12
  3742 ;; This function calls:
  3743 ;;		_in_high_int
  3744 ;;		_in_low_int
  3745 ;; This function is called by:
  3746 ;;		_block_on_To_msgqueues
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text19
  3751  0019C4                     __ptext19:
  3752                           	opt stack 0
  3753  0019C4                     _in_main:
  3754                           	opt stack 16
  3755                           
  3756                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3757                           
  3758                           ;incstack = 0
  3759  0019C4  ECBF  F00C         	call	_in_low_int	;wreg free
  3760  0019C8  0100               	movlb	0	; () banked
  3761  0019CA  0100               	movlb	0	; () banked
  3762  0019CC  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3763  0019CE  0100               	movlb	0	; () banked
  3764  0019D0  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3765  0019D2  A4D8               	btfss	status,2,c
  3766  0019D4  D011               	goto	l3256
  3767                           
  3768                           ; BSR set to: 0
  3769  0019D6  EC1F  F00F         	call	_in_high_int	;wreg free
  3770  0019DA  0100               	movlb	0	; () banked
  3771  0019DC  0100               	movlb	0	; () banked
  3772  0019DE  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3773  0019E0  0100               	movlb	0	; () banked
  3774  0019E2  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3775  0019E4  A4D8               	btfss	status,2,c
  3776  0019E6  D008               	goto	l3256
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;interrupts.c: 42: return (1);
  3780  0019E8  0E00               	movlw	0
  3781  0019EA  0100               	movlb	0	; () banked
  3782  0019EC  0100               	movlb	0	; () banked
  3783  0019EE  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3784  0019F0  0E01               	movlw	1
  3785  0019F2  0100               	movlb	0	; () banked
  3786  0019F4  6FDB               	movwf	?_in_main& (0+255),b
  3787  0019F6  0012               	return	
  3788  0019F8                     l3256:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;interrupts.c: 44: return (0);
  3792  0019F8  0E00               	movlw	0
  3793  0019FA  0100               	movlb	0	; () banked
  3794  0019FC  0100               	movlb	0	; () banked
  3795  0019FE  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3796  001A00  0E00               	movlw	0
  3797  001A02  0100               	movlb	0	; () banked
  3798  001A04  6FDB               	movwf	?_in_main& (0+255),b
  3799  001A06  0012               	return	
  3800  001A08                     __end_of_in_main:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           prodh	equ	0xFF4
  3804                           prodl	equ	0xFF3
  3805                           intcon	equ	0xFF2
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           indf1	equ	0xFE7
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _in_low_int *****************
  3819 ;; Defined at:
  3820 ;;		line 30 in file "src/interrupts.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2   35[BANK0 ] int 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3834 ;;      Params:         0       2       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0
  3837 ;;      Totals:         0       2       0       0       0
  3838 ;;Total ram usage:        2 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   11
  3841 ;; This function calls:
  3842 ;;		_in_high_int
  3843 ;; This function is called by:
  3844 ;;		_in_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text20
  3849  00197E                     __ptext20:
  3850                           	opt stack 0
  3851  00197E                     _in_low_int:
  3852                           	opt stack 16
  3853                           
  3854                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;incstack = 0
  3858  00197E  ACF2               	btfss	intcon,6,c	;volatile
  3859  001980  D008               	goto	l3234
  3860                           
  3861                           ;interrupts.c: 32: return (0);
  3862  001982  0E00               	movlw	0
  3863  001984  0100               	movlb	0	; () banked
  3864  001986  0100               	movlb	0	; () banked
  3865  001988  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3866  00198A  0E00               	movlw	0
  3867  00198C  0100               	movlb	0	; () banked
  3868  00198E  6FD9               	movwf	?_in_low_int& (0+255),b
  3869  001990  0012               	return	
  3870  001992                     l3234:
  3871  001992  EC1F  F00F         	call	_in_high_int	;wreg free
  3872  001996  0100               	movlb	0	; () banked
  3873  001998  0100               	movlb	0	; () banked
  3874  00199A  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3875  00199C  0100               	movlb	0	; () banked
  3876  00199E  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3877  0019A0  B4D8               	btfsc	status,2,c
  3878  0019A2  D008               	goto	l3242
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;interrupts.c: 34: return (0);
  3882  0019A4  0E00               	movlw	0
  3883  0019A6  0100               	movlb	0	; () banked
  3884  0019A8  0100               	movlb	0	; () banked
  3885  0019AA  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3886  0019AC  0E00               	movlw	0
  3887  0019AE  0100               	movlb	0	; () banked
  3888  0019B0  6FD9               	movwf	?_in_low_int& (0+255),b
  3889  0019B2  0012               	return	
  3890  0019B4                     l3242:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;interrupts.c: 36: return (1);
  3894  0019B4  0E00               	movlw	0
  3895  0019B6  0100               	movlb	0	; () banked
  3896  0019B8  0100               	movlb	0	; () banked
  3897  0019BA  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3898  0019BC  0E01               	movlw	1
  3899  0019BE  0100               	movlb	0	; () banked
  3900  0019C0  6FD9               	movwf	?_in_low_int& (0+255),b
  3901  0019C2  0012               	return	
  3902  0019C4                     __end_of_in_low_int:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           indf1	equ	0xFE7
  3911                           fsr1h	equ	0xFE2
  3912                           fsr1l	equ	0xFE1
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           postdec2	equ	0xFDD
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920 ;; *************** function _in_high_int *****************
  3921 ;; Defined at:
  3922 ;;		line 22 in file "src/interrupts.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2   33[BANK0 ] int 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3936 ;;      Params:         0       2       0       0       0
  3937 ;;      Locals:         0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0
  3939 ;;      Totals:         0       2       0       0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:   10
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_in_low_int
  3947 ;;		_in_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text21
  3952  001E3E                     __ptext21:
  3953                           	opt stack 0
  3954  001E3E                     _in_high_int:
  3955                           	opt stack 16
  3956                           
  3957                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;incstack = 0
  3961  001E3E  0E00               	movlw	0
  3962  001E40  AEF2               	btfss	intcon,7,c	;volatile
  3963  001E42  0E01               	movlw	1
  3964  001E44  0100               	movlb	0	; () banked
  3965  001E46  0100               	movlb	0	; () banked
  3966  001E48  6FD7               	movwf	?_in_high_int& (0+255),b
  3967  001E4A  0100               	movlb	0	; () banked
  3968  001E4C  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  3969  001E4E  0012               	return	
  3970  001E50                     __end_of_in_high_int:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           prodh	equ	0xFF4
  3974                           prodl	equ	0xFF3
  3975                           intcon	equ	0xFF2
  3976                           postinc0	equ	0xFEE
  3977                           wreg	equ	0xFE8
  3978                           indf1	equ	0xFE7
  3979                           fsr1h	equ	0xFE2
  3980                           fsr1l	equ	0xFE1
  3981                           indf2	equ	0xFDF
  3982                           postinc2	equ	0xFDE
  3983                           postdec2	equ	0xFDD
  3984                           fsr2h	equ	0xFDA
  3985                           fsr2l	equ	0xFD9
  3986                           status	equ	0xFD8
  3987                           
  3988 ;; *************** function _check_msg *****************
  3989 ;; Defined at:
  3990 ;;		line 222 in file "src/messages.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3993 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4005 ;;      Params:         0       2       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          0       1       0       0       0
  4008 ;;      Totals:         0       3       0       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:   10
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_block_on_To_msgqueues
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text22
  4020  001BEE                     __ptext22:
  4021                           	opt stack 0
  4022  001BEE                     _check_msg:
  4023                           	opt stack 18
  4024                           
  4025                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;incstack = 0
  4029  001BEE  0100               	movlb	0	; () banked
  4030  001BF0  EE20 F035          	lfsr	2,53
  4031  001BF4  0100               	movlb	0	; () banked
  4032  001BF6  51D7               	movf	check_msg@qptr& (0+255),w,b
  4033  001BF8  26D9               	addwf	fsr2l,f,c
  4034  001BFA  0100               	movlb	0	; () banked
  4035  001BFC  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  4036  001BFE  22DA               	addwfc	fsr2h,f,c
  4037  001C00  50DF               	movf	indf2,w,c
  4038  001C02  0100               	movlb	0	; () banked
  4039  001C04  6FD9               	movwf	??_check_msg& (0+255),b
  4040  001C06  0100               	movlb	0	; () banked
  4041  001C08  51D9               	movf	??_check_msg& (0+255),w,b
  4042  001C0A  0D0D               	mullw	13
  4043  001C0C  50F3               	movf	prodl,w,c
  4044  001C0E  0100               	movlb	0	; () banked
  4045  001C10  0100               	movlb	0	; () banked
  4046  001C12  25D7               	addwf	check_msg@qptr& (0+255),w,b
  4047  001C14  6ED9               	movwf	fsr2l,c
  4048  001C16  50F4               	movf	prodh,w,c
  4049  001C18  0100               	movlb	0	; () banked
  4050  001C1A  0100               	movlb	0	; () banked
  4051  001C1C  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4052  001C1E  6EDA               	movwf	fsr2h,c
  4053  001C20  50DF               	movf	indf2,w,c
  4054  001C22  0012               	return	
  4055  001C24                     __end_of_check_msg:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           prodh	equ	0xFF4
  4059                           prodl	equ	0xFF3
  4060                           intcon	equ	0xFF2
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           indf1	equ	0xFE7
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           indf2	equ	0xFDF
  4067                           postinc2	equ	0xFDE
  4068                           postdec2	equ	0xFDD
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _Delay1KTCYx *****************
  4074 ;; Defined at:
  4075 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  unit            1    wreg     unsigned char 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  unit            1   33[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		wreg
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4089 ;;      Params:         0       0       0       0       0
  4090 ;;      Locals:         0       1       0       0       0
  4091 ;;      Temps:          0       0       0       0       0
  4092 ;;      Totals:         0       1       0       0       0
  4093 ;;Total ram usage:        1 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:   10
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_block_on_To_msgqueues
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text23
  4104  001E04                     __ptext23:
  4105                           	opt stack 0
  4106  001E04                     _Delay1KTCYx:
  4107                           	opt stack 18
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;incstack = 0
  4111                           ;Delay1KTCYx@unit stored from wreg
  4112  001E04  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  4113  001E08                     l738:
  4114  001E08  0EFA               	movlw	250
  4115  001E0A                     u3077:
  4116  001E0A  F000               	nop	
  4117  001E0C  2EE8               	decfsz	wreg,f,c
  4118  001E0E  D7FD               	goto	u3077
  4119  001E10  0100               	movlb	0	; () banked
  4120  001E12  0100               	movlb	0	; () banked
  4121  001E14  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4122  001E16  D7F8               	goto	l738
  4123  001E18  0012               	return	
  4124  001E1A                     __end_of_Delay1KTCYx:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           indf1	equ	0xFE7
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           postdec2	equ	0xFDD
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _ToMainLow_recvmsg *****************
  4143 ;; Defined at:
  4144 ;;		line 112 in file "src/messages.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  maxlength       1    wreg     unsigned char 
  4147 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  4148 ;;		 -> main@msgtype(1), 
  4149 ;;  data            2   20[BANK1 ] PTR void 
  4150 ;;		 -> main@msgbuffer(11), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  maxlength       1   22[BANK1 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      char 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4162 ;;      Params:         0       0       4       0       0
  4163 ;;      Locals:         0       0       1       0       0
  4164 ;;      Temps:          0       0       0       0       0
  4165 ;;      Totals:         0       0       5       0       0
  4166 ;;Total ram usage:        5 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:   12
  4169 ;; This function calls:
  4170 ;;		_recv_msg
  4171 ;; This function is called by:
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text24
  4177  001A08                     __ptext24:
  4178                           	opt stack 0
  4179  001A08                     _ToMainLow_recvmsg:
  4180                           	opt stack 17
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;incstack = 0
  4184                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4185  001A08  CFE8 F1B8          	movff	wreg,ToMainLow_recvmsg@maxlength
  4186                           
  4187                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4188  001A0C  0100               	movlb	0	; () banked
  4189  001A0E  0E00               	movlw	high _ToMainLow_MQ
  4190  001A10  0101               	movlb	1	; () banked
  4191  001A12  0101               	movlb	1	; () banked
  4192  001A14  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4193  001A16  0100               	movlb	0	; () banked
  4194  001A18  0E80               	movlw	low _ToMainLow_MQ
  4195  001A1A  0101               	movlb	1	; () banked
  4196  001A1C  0101               	movlb	1	; () banked
  4197  001A1E  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4198  001A20  C1B8  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4199  001A24  0101               	movlb	1	; () banked
  4200  001A26  0101               	movlb	1	; () banked
  4201  001A28  C1B5  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4202  001A2C  0101               	movlb	1	; () banked
  4203  001A2E  0101               	movlb	1	; () banked
  4204  001A30  C1B4  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4205  001A34  0101               	movlb	1	; () banked
  4206  001A36  0101               	movlb	1	; () banked
  4207  001A38  C1B7  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4208  001A3C  0101               	movlb	1	; () banked
  4209  001A3E  0101               	movlb	1	; () banked
  4210  001A40  C1B6  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4211  001A44  EC2D  F005         	call	_recv_msg	;wreg free
  4212  001A48  0012               	return	
  4213  001A4A                     __end_of_ToMainLow_recvmsg:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           prodh	equ	0xFF4
  4217                           prodl	equ	0xFF3
  4218                           intcon	equ	0xFF2
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           indf1	equ	0xFE7
  4222                           fsr1h	equ	0xFE2
  4223                           fsr1l	equ	0xFE1
  4224                           indf2	equ	0xFDF
  4225                           postinc2	equ	0xFDE
  4226                           postdec2	equ	0xFDD
  4227                           fsr2h	equ	0xFDA
  4228                           fsr2l	equ	0xFD9
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function _ToMainHigh_recvmsg *****************
  4232 ;; Defined at:
  4233 ;;		line 135 in file "src/messages.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  maxlength       1    wreg     unsigned char 
  4236 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  4237 ;;		 -> main@msgtype(1), 
  4238 ;;  data            2   20[BANK1 ] PTR void 
  4239 ;;		 -> main@msgbuffer(11), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  maxlength       1   22[BANK1 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      char 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4251 ;;      Params:         0       0       4       0       0
  4252 ;;      Locals:         0       0       1       0       0
  4253 ;;      Temps:          0       0       0       0       0
  4254 ;;      Totals:         0       0       5       0       0
  4255 ;;Total ram usage:        5 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   12
  4258 ;; This function calls:
  4259 ;;		_recv_msg
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text25
  4266  001A4A                     __ptext25:
  4267                           	opt stack 0
  4268  001A4A                     _ToMainHigh_recvmsg:
  4269                           	opt stack 17
  4270                           
  4271                           ;incstack = 0
  4272                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4273  001A4A  CFE8 F1B8          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4274                           
  4275                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4276  001A4E  0101               	movlb	1	; () banked
  4277  001A50  0E01               	movlw	high _ToMainHigh_MQ
  4278  001A52  0101               	movlb	1	; () banked
  4279  001A54  0101               	movlb	1	; () banked
  4280  001A56  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4281  001A58  0101               	movlb	1	; () banked
  4282  001A5A  0E6C               	movlw	low _ToMainHigh_MQ
  4283  001A5C  0101               	movlb	1	; () banked
  4284  001A5E  0101               	movlb	1	; () banked
  4285  001A60  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4286  001A62  C1B8  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4287  001A66  0101               	movlb	1	; () banked
  4288  001A68  0101               	movlb	1	; () banked
  4289  001A6A  C1B5  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4290  001A6E  0101               	movlb	1	; () banked
  4291  001A70  0101               	movlb	1	; () banked
  4292  001A72  C1B4  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4293  001A76  0101               	movlb	1	; () banked
  4294  001A78  0101               	movlb	1	; () banked
  4295  001A7A  C1B7  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4296  001A7E  0101               	movlb	1	; () banked
  4297  001A80  0101               	movlb	1	; () banked
  4298  001A82  C1B6  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4299  001A86  EC2D  F005         	call	_recv_msg	;wreg free
  4300  001A8A  0012               	return	
  4301  001A8C                     __end_of_ToMainHigh_recvmsg:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           postinc0	equ	0xFEE
  4308                           wreg	equ	0xFE8
  4309                           indf1	equ	0xFE7
  4310                           fsr1h	equ	0xFE2
  4311                           fsr1l	equ	0xFE1
  4312                           indf2	equ	0xFDF
  4313                           postinc2	equ	0xFDE
  4314                           postdec2	equ	0xFDD
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function _recv_msg *****************
  4320 ;; Defined at:
  4321 ;;		line 63 in file "src/messages.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  4324 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4325 ;;  maxlength       1    6[BANK1 ] unsigned char 
  4326 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4327 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4328 ;;  data            2    9[BANK1 ] PTR void 
  4329 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  qmsg            2   16[BANK1 ] PTR struct __msg
  4332 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4333 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4334 ;;  tlength         2   14[BANK1 ] unsigned int 
  4335 ;;  slot            1   13[BANK1 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      char 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4345 ;;      Params:         0       0       7       0       0
  4346 ;;      Locals:         0       0       5       0       0
  4347 ;;      Temps:          0       0       2       0       0
  4348 ;;      Totals:         0       0      14       0       0
  4349 ;;Total ram usage:       14 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:   11
  4352 ;; This function calls:
  4353 ;;		_memcpy
  4354 ;; This function is called by:
  4355 ;;		_ToMainLow_recvmsg
  4356 ;;		_ToMainHigh_recvmsg
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text26
  4361  000A5A                     __ptext26:
  4362                           	opt stack 0
  4363  000A5A                     _recv_msg:
  4364                           	opt stack 17
  4365                           
  4366                           ;messages.c: 64: unsigned char slot;
  4367                           ;messages.c: 68: msg *qmsg;
  4368                           ;messages.c: 69: size_t tlength;
  4369                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4370                           
  4371                           ;incstack = 0
  4372  000A5A  0101               	movlb	1	; () banked
  4373  000A5C  EE20 F035          	lfsr	2,53
  4374  000A60  0101               	movlb	1	; () banked
  4375  000A62  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4376  000A64  26D9               	addwf	fsr2l,f,c
  4377  000A66  0101               	movlb	1	; () banked
  4378  000A68  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4379  000A6A  22DA               	addwfc	fsr2h,f,c
  4380  000A6C  50DF               	movf	indf2,w,c
  4381  000A6E  0101               	movlb	1	; () banked
  4382  000A70  0101               	movlb	1	; () banked
  4383  000A72  6FAF               	movwf	recv_msg@slot& (0+255),b
  4384                           
  4385                           ; BSR set to: 1
  4386                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4387  000A74  0101               	movlb	1	; () banked
  4388  000A76  0101               	movlb	1	; () banked
  4389  000A78  51AF               	movf	recv_msg@slot& (0+255),w,b
  4390  000A7A  0D0D               	mullw	13
  4391  000A7C  50F3               	movf	prodl,w,c
  4392  000A7E  0101               	movlb	1	; () banked
  4393  000A80  0101               	movlb	1	; () banked
  4394  000A82  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4395  000A84  0101               	movlb	1	; () banked
  4396  000A86  0101               	movlb	1	; () banked
  4397  000A88  6FB2               	movwf	recv_msg@qmsg& (0+255),b
  4398  000A8A  50F4               	movf	prodh,w,c
  4399  000A8C  0101               	movlb	1	; () banked
  4400  000A8E  0101               	movlb	1	; () banked
  4401  000A90  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4402  000A92  0101               	movlb	1	; () banked
  4403  000A94  6FB3               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;messages.c: 74: if (qmsg->full == 1) {
  4407  000A96  0E01               	movlw	1
  4408  000A98  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4409  000A9C  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4410  000AA0  62DF               	cpfseq	indf2,c
  4411  000AA2  D074               	goto	l3816
  4412                           
  4413                           ; BSR set to: 1
  4414                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4415  000AA4  0101               	movlb	1	; () banked
  4416  000AA6  EE20 F001          	lfsr	2,1
  4417  000AAA  0101               	movlb	1	; () banked
  4418  000AAC  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4419  000AAE  26D9               	addwf	fsr2l,f,c
  4420  000AB0  0101               	movlb	1	; () banked
  4421  000AB2  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4422  000AB4  22DA               	addwfc	fsr2h,f,c
  4423  000AB6  50DF               	movf	indf2,w,c
  4424  000AB8  0101               	movlb	1	; () banked
  4425  000ABA  0101               	movlb	1	; () banked
  4426  000ABC  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4427  000ABE  B0D8               	btfsc	status,0,c
  4428  000AC0  D002               	goto	l3800
  4429                           
  4430                           ; BSR set to: 1
  4431                           ;messages.c: 77: return (-3);
  4432  000AC2  0EFD               	movlw	253
  4433  000AC4  0012               	return	
  4434  000AC6                     l3800:
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;messages.c: 78: }
  4438                           ;messages.c: 80: tlength = qmsg->length;
  4439  000AC6  0101               	movlb	1	; () banked
  4440  000AC8  EE20 F001          	lfsr	2,1
  4441  000ACC  0101               	movlb	1	; () banked
  4442  000ACE  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4443  000AD0  26D9               	addwf	fsr2l,f,c
  4444  000AD2  0101               	movlb	1	; () banked
  4445  000AD4  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4446  000AD6  22DA               	addwfc	fsr2h,f,c
  4447  000AD8  50DF               	movf	indf2,w,c
  4448  000ADA  0101               	movlb	1	; () banked
  4449  000ADC  6FAD               	movwf	??_recv_msg& (0+255),b
  4450  000ADE  0101               	movlb	1	; () banked
  4451  000AE0  51AD               	movf	??_recv_msg& (0+255),w,b
  4452  000AE2  0101               	movlb	1	; () banked
  4453  000AE4  0101               	movlb	1	; () banked
  4454  000AE6  6FB0               	movwf	recv_msg@tlength& (0+255),b
  4455  000AE8  0101               	movlb	1	; () banked
  4456  000AEA  6BB1               	clrf	(recv_msg@tlength+1)& (0+255),b
  4457                           
  4458                           ; BSR set to: 1
  4459                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4460  000AEC  0101               	movlb	1	; () banked
  4461  000AEE  0100               	movlb	0	; () banked
  4462  000AF0  C1AC  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  4463  000AF4  0101               	movlb	1	; () banked
  4464  000AF6  0100               	movlb	0	; () banked
  4465  000AF8  C1AB  F0D7         	movff	recv_msg@data,memcpy@d1
  4466  000AFC  0E03               	movlw	3
  4467  000AFE  0101               	movlb	1	; () banked
  4468  000B00  0101               	movlb	1	; () banked
  4469  000B02  25B2               	addwf	recv_msg@qmsg& (0+255),w,b
  4470  000B04  0101               	movlb	1	; () banked
  4471  000B06  6FAD               	movwf	??_recv_msg& (0+255),b
  4472  000B08  0E00               	movlw	0
  4473  000B0A  0101               	movlb	1	; () banked
  4474  000B0C  0101               	movlb	1	; () banked
  4475  000B0E  21B3               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4476  000B10  0101               	movlb	1	; () banked
  4477  000B12  6FAE               	movwf	(??_recv_msg+1)& (0+255),b
  4478  000B14  C1AD  F0D9         	movff	??_recv_msg,memcpy@s1
  4479  000B18  C1AE  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  4480  000B1C  C1B0  F0DB         	movff	recv_msg@tlength,memcpy@n
  4481  000B20  C1B1  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  4482  000B24  EC69  F00C         	call	_memcpy	;wreg free
  4483                           
  4484                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4485  000B28  0101               	movlb	1	; () banked
  4486  000B2A  EE20 F035          	lfsr	2,53
  4487  000B2E  0101               	movlb	1	; () banked
  4488  000B30  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4489  000B32  26D9               	addwf	fsr2l,f,c
  4490  000B34  0101               	movlb	1	; () banked
  4491  000B36  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4492  000B38  22DA               	addwfc	fsr2h,f,c
  4493  000B3A  0101               	movlb	1	; () banked
  4494  000B3C  EE10 F035          	lfsr	1,53
  4495  000B40  0101               	movlb	1	; () banked
  4496  000B42  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4497  000B44  26E1               	addwf	fsr1l,f,c
  4498  000B46  0101               	movlb	1	; () banked
  4499  000B48  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4500  000B4A  22E2               	addwfc	fsr1h,f,c
  4501  000B4C  50E7               	movf	indf1,w,c
  4502  000B4E  0101               	movlb	1	; () banked
  4503  000B50  6FAD               	movwf	??_recv_msg& (0+255),b
  4504  000B52  0101               	movlb	1	; () banked
  4505  000B54  29AD               	incf	??_recv_msg& (0+255),w,b
  4506  000B56  0B03               	andlw	3
  4507  000B58  6EDF               	movwf	indf2,c
  4508                           
  4509                           ; BSR set to: 1
  4510                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4511  000B5A  0101               	movlb	1	; () banked
  4512  000B5C  EE20 F002          	lfsr	2,2
  4513  000B60  0101               	movlb	1	; () banked
  4514  000B62  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4515  000B64  26D9               	addwf	fsr2l,f,c
  4516  000B66  0101               	movlb	1	; () banked
  4517  000B68  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4518  000B6A  22DA               	addwfc	fsr2h,f,c
  4519  000B6C  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  4520  000B70  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4521  000B74  CFDF FFE7          	movff	indf2,indf1
  4522                           
  4523                           ; BSR set to: 1
  4524                           ;messages.c: 91: qmsg->full = 0;
  4525  000B78  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4526  000B7C  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4527  000B80  0E00               	movlw	0
  4528  000B82  6EDF               	movwf	indf2,c
  4529                           
  4530                           ; BSR set to: 1
  4531                           ;messages.c: 92: return (tlength);
  4532  000B84  0101               	movlb	1	; () banked
  4533  000B86  0101               	movlb	1	; () banked
  4534  000B88  51B0               	movf	recv_msg@tlength& (0+255),w,b
  4535  000B8A  0012               	return	
  4536  000B8C                     l3816:
  4537                           
  4538                           ; BSR set to: 1
  4539                           ;messages.c: 94: return (-4);
  4540  000B8C  0EFC               	movlw	252
  4541  000B8E  0012               	return	
  4542  000B90                     __end_of_recv_msg:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function _memcpy *****************
  4561 ;; Defined at:
  4562 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  d1              2   33[BANK0 ] PTR void 
  4565 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4566 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4567 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4568 ;;  s1              2   35[BANK0 ] PTR const void 
  4569 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4570 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4571 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4572 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4573 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4574 ;;  n               2   37[BANK0 ] unsigned int 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4577 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4578 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4579 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4580 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4581 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4582 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4583 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4584 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4585 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2   33[BANK0 ] PTR void 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4595 ;;      Params:         0       6       0       0       0
  4596 ;;      Locals:         0       0       4       0       0
  4597 ;;      Temps:          0       0       0       0       0
  4598 ;;      Totals:         0       6       4       0       0
  4599 ;;Total ram usage:       10 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:   10
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_send_msg
  4606 ;;		_recv_msg
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text27
  4611  0018D2                     __ptext27:
  4612                           	opt stack 0
  4613  0018D2                     _memcpy:
  4614                           	opt stack 16
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;incstack = 0
  4618  0018D2  0100               	movlb	0	; () banked
  4619  0018D4  0101               	movlb	1	; () banked
  4620  0018D6  C0DA  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  4621  0018DA  0100               	movlb	0	; () banked
  4622  0018DC  0101               	movlb	1	; () banked
  4623  0018DE  C0D9  F1A4         	movff	memcpy@s1,memcpy@s
  4624  0018E2  0100               	movlb	0	; () banked
  4625  0018E4  0101               	movlb	1	; () banked
  4626  0018E6  C0D8  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  4627  0018EA  0100               	movlb	0	; () banked
  4628  0018EC  0101               	movlb	1	; () banked
  4629  0018EE  C0D7  F1A2         	movff	memcpy@d1,memcpy@d
  4630  0018F2  D012               	goto	l3786
  4631  0018F4                     l3780:
  4632  0018F4  C1A4  FFD9         	movff	memcpy@s,fsr2l
  4633  0018F8  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  4634  0018FC  C1A2  FFE1         	movff	memcpy@d,fsr1l
  4635  001900  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  4636  001904  CFDF FFE7          	movff	indf2,indf1
  4637  001908  0101               	movlb	1	; () banked
  4638  00190A  0101               	movlb	1	; () banked
  4639  00190C  4BA4               	infsnz	memcpy@s& (0+255),f,b
  4640  00190E  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  4641                           
  4642                           ; BSR set to: 1
  4643  001910  0101               	movlb	1	; () banked
  4644  001912  0101               	movlb	1	; () banked
  4645  001914  4BA2               	infsnz	memcpy@d& (0+255),f,b
  4646  001916  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  4647  001918                     l3786:
  4648                           
  4649                           ; BSR set to: 1
  4650  001918  0100               	movlb	0	; () banked
  4651  00191A  0100               	movlb	0	; () banked
  4652  00191C  07DB               	decf	memcpy@n& (0+255),f,b
  4653  00191E  A0D8               	btfss	status,0,c
  4654  001920  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  4655  001922  0100               	movlb	0	; () banked
  4656  001924  29DB               	incf	memcpy@n& (0+255),w,b
  4657  001926  B4D8               	btfsc	status,2,c
  4658  001928  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  4659  00192A  B4D8               	btfsc	status,2,c
  4660                           
  4661                           ; BSR set to: 0
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;	Return value of _memcpy is never used
  4665  00192C  0012               	return	
  4666  00192E  D7E2               	goto	l3780
  4667  001930                     __end_of_memcpy:
  4668                           	opt stack 0
  4669                           tblptru	equ	0xFF8
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           postinc0	equ	0xFEE
  4674                           wreg	equ	0xFE8
  4675                           indf1	equ	0xFE7
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _OpenUSART *****************
  4686 ;; Defined at:
  4687 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  config          1    wreg     unsigned char 
  4690 ;;  spbrg           2   33[BANK0 ] unsigned int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  config          1   38[BANK0 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;		None               void
  4695 ;; Registers used:
  4696 ;;		wreg, status,2
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4702 ;;      Params:         0       2       0       0       0
  4703 ;;      Locals:         0       1       0       0       0
  4704 ;;      Temps:          0       3       0       0       0
  4705 ;;      Totals:         0       6       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:   10
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text28
  4717  001474                     __ptext28:
  4718                           	opt stack 0
  4719  001474                     _OpenUSART:
  4720                           	opt stack 19
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;incstack = 0
  4724                           ;OpenUSART@config stored from wreg
  4725  001474  CFE8 F0DC          	movff	wreg,OpenUSART@config
  4726  001478  0E00               	movlw	0
  4727  00147A  6EAC               	movwf	4012,c	;volatile
  4728  00147C  0E00               	movlw	0
  4729  00147E  6EAB               	movwf	4011,c	;volatile
  4730  001480  0100               	movlb	0	; () banked
  4731  001482  0100               	movlb	0	; () banked
  4732  001484  B1DC               	btfsc	OpenUSART@config& (0+255),0,b
  4733                           
  4734                           ; BSR set to: 0
  4735  001486  88AC               	bsf	4012,4,c	;volatile
  4736                           
  4737                           ; BSR set to: 0
  4738                           
  4739                           ; BSR set to: 0
  4740  001488  0100               	movlb	0	; () banked
  4741  00148A  0100               	movlb	0	; () banked
  4742  00148C  A3DC               	btfss	OpenUSART@config& (0+255),1,b
  4743  00148E  D002               	goto	l3582
  4744                           
  4745                           ; BSR set to: 0
  4746  001490  8CAC               	bsf	4012,6,c	;volatile
  4747  001492  8CAB               	bsf	4011,6,c	;volatile
  4748  001494                     l3582:
  4749                           
  4750                           ; BSR set to: 0
  4751  001494  0100               	movlb	0	; () banked
  4752  001496  0100               	movlb	0	; () banked
  4753  001498  B5DC               	btfsc	OpenUSART@config& (0+255),2,b
  4754                           
  4755                           ; BSR set to: 0
  4756  00149A  8EAC               	bsf	4012,7,c	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759                           
  4760                           ; BSR set to: 0
  4761  00149C  0100               	movlb	0	; () banked
  4762  00149E  0100               	movlb	0	; () banked
  4763  0014A0  A7DC               	btfss	OpenUSART@config& (0+255),3,b
  4764  0014A2  D002               	goto	l505
  4765                           
  4766                           ; BSR set to: 0
  4767  0014A4  88AB               	bsf	4011,4,c	;volatile
  4768  0014A6  D001               	goto	l3590
  4769  0014A8                     l505:
  4770                           
  4771                           ; BSR set to: 0
  4772  0014A8  8AAB               	bsf	4011,5,c	;volatile
  4773  0014AA                     l3590:
  4774                           
  4775                           ; BSR set to: 0
  4776  0014AA  0100               	movlb	0	; () banked
  4777  0014AC  0100               	movlb	0	; () banked
  4778  0014AE  B9DC               	btfsc	OpenUSART@config& (0+255),4,b
  4779                           
  4780                           ; BSR set to: 0
  4781  0014B0  84AC               	bsf	4012,2,c	;volatile
  4782                           
  4783                           ; BSR set to: 0
  4784  0014B2  989E               	bcf	3998,4,c	;volatile
  4785                           
  4786                           ; BSR set to: 0
  4787  0014B4  0100               	movlb	0	; () banked
  4788  0014B6  0100               	movlb	0	; () banked
  4789  0014B8  BBDC               	btfsc	OpenUSART@config& (0+255),5,b
  4790                           
  4791                           ; BSR set to: 0
  4792  0014BA  86AB               	bsf	4011,3,c	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           
  4796                           ; BSR set to: 0
  4797  0014BC  0100               	movlb	0	; () banked
  4798  0014BE  0100               	movlb	0	; () banked
  4799  0014C0  ADDC               	btfss	OpenUSART@config& (0+255),6,b
  4800  0014C2  D002               	goto	l509
  4801                           
  4802                           ; BSR set to: 0
  4803  0014C4  8A9D               	bsf	3997,5,c	;volatile
  4804  0014C6  D001               	goto	l510
  4805  0014C8                     l509:
  4806                           
  4807                           ; BSR set to: 0
  4808  0014C8  9A9D               	bcf	3997,5,c	;volatile
  4809  0014CA                     l510:
  4810                           
  4811                           ; BSR set to: 0
  4812  0014CA  9A9E               	bcf	3998,5,c	;volatile
  4813                           
  4814                           ; BSR set to: 0
  4815  0014CC  0100               	movlb	0	; () banked
  4816  0014CE  0100               	movlb	0	; () banked
  4817  0014D0  AFDC               	btfss	OpenUSART@config& (0+255),7,b
  4818  0014D2  D002               	goto	l511
  4819                           
  4820                           ; BSR set to: 0
  4821  0014D4  889D               	bsf	3997,4,c	;volatile
  4822  0014D6  D001               	goto	l512
  4823  0014D8                     l511:
  4824                           
  4825                           ; BSR set to: 0
  4826  0014D8  989D               	bcf	3997,4,c	;volatile
  4827  0014DA                     l512:
  4828                           
  4829                           ; BSR set to: 0
  4830  0014DA  C0D7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4831                           
  4832                           ; BSR set to: 0
  4833  0014DE  0100               	movlb	0	; () banked
  4834  0014E0  C0D8  F0D9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4835  0014E4  C0D9  F0DA         	movff	??_OpenUSART,??_OpenUSART+1
  4836  0014E8  0100               	movlb	0	; () banked
  4837  0014EA  6BDB               	clrf	(??_OpenUSART+2)& (0+255),b
  4838  0014EC  0100               	movlb	0	; () banked
  4839  0014EE  51DA               	movf	(??_OpenUSART+1)& (0+255),w,b
  4840  0014F0  6EB0               	movwf	4016,c	;volatile
  4841                           
  4842                           ; BSR set to: 0
  4843  0014F2  8AAC               	bsf	4012,5,c	;volatile
  4844                           
  4845                           ; BSR set to: 0
  4846  0014F4  8EAB               	bsf	4011,7,c	;volatile
  4847                           
  4848                           ; BSR set to: 0
  4849  0014F6  9C94               	bcf	3988,6,c	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852  0014F8  8E94               	bsf	3988,7,c	;volatile
  4853                           
  4854                           ; BSR set to: 0
  4855  0014FA  A8AC               	btfss	4012,4,c	;volatile
  4856  0014FC  0012               	return	
  4857                           
  4858                           ; BSR set to: 0
  4859  0014FE  BEAC               	btfsc	4012,7,c	;volatile
  4860  001500  0012               	return	
  4861                           
  4862                           ; BSR set to: 0
  4863  001502  8C94               	bsf	3988,6,c	;volatile
  4864  001504  0012               	return	
  4865  001506                     __end_of_OpenUSART:
  4866                           	opt stack 0
  4867                           tblptru	equ	0xFF8
  4868                           prodh	equ	0xFF4
  4869                           prodl	equ	0xFF3
  4870                           intcon	equ	0xFF2
  4871                           postinc0	equ	0xFEE
  4872                           wreg	equ	0xFE8
  4873                           indf1	equ	0xFE7
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           indf2	equ	0xFDF
  4877                           postinc2	equ	0xFDE
  4878                           postdec2	equ	0xFDD
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _OpenTimer1 *****************
  4884 ;; Defined at:
  4885 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  config          1    wreg     unsigned char 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  config          1   33[BANK0 ] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;		None               void
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4899 ;;      Params:         0       0       0       0       0
  4900 ;;      Locals:         0       1       0       0       0
  4901 ;;      Temps:          0       0       0       0       0
  4902 ;;      Totals:         0       1       0       0       0
  4903 ;;Total ram usage:        1 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:   10
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text29
  4914  001B4A                     __ptext29:
  4915                           	opt stack 0
  4916  001B4A                     _OpenTimer1:
  4917                           	opt stack 19
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;incstack = 0
  4921                           ;OpenTimer1@config stored from wreg
  4922  001B4A  CFE8 F0D7          	movff	wreg,OpenTimer1@config
  4923  001B4E  0100               	movlb	0	; () banked
  4924  001B50  0100               	movlb	0	; () banked
  4925  001B52  51D7               	movf	OpenTimer1@config& (0+255),w,b
  4926  001B54  0B7E               	andlw	126
  4927  001B56  6ECD               	movwf	4045,c	;volatile
  4928                           
  4929                           ; BSR set to: 0
  4930  001B58  0100               	movlb	0	; () banked
  4931  001B5A  0100               	movlb	0	; () banked
  4932  001B5C  ADD7               	btfss	OpenTimer1@config& (0+255),6,b
  4933  001B5E  D002               	goto	l461
  4934                           
  4935                           ; BSR set to: 0
  4936  001B60  8ECD               	bsf	4045,7,c	;volatile
  4937  001B62  D001               	goto	l3564
  4938  001B64                     l461:
  4939                           
  4940                           ; BSR set to: 0
  4941  001B64  9ECD               	bcf	4045,7,c	;volatile
  4942  001B66                     l3564:
  4943                           
  4944                           ; BSR set to: 0
  4945  001B66  0E00               	movlw	0
  4946  001B68  6ECF               	movwf	4047,c	;volatile
  4947  001B6A  0E00               	movlw	0
  4948  001B6C  6ECE               	movwf	4046,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951  001B6E  909E               	bcf	3998,0,c	;volatile
  4952                           
  4953                           ; BSR set to: 0
  4954  001B70  0100               	movlb	0	; () banked
  4955  001B72  0100               	movlb	0	; () banked
  4956  001B74  AFD7               	btfss	OpenTimer1@config& (0+255),7,b
  4957  001B76  D002               	goto	l463
  4958                           
  4959                           ; BSR set to: 0
  4960  001B78  809D               	bsf	3997,0,c	;volatile
  4961  001B7A  D001               	goto	l464
  4962  001B7C                     l463:
  4963                           
  4964                           ; BSR set to: 0
  4965  001B7C  909D               	bcf	3997,0,c	;volatile
  4966  001B7E                     l464:
  4967                           
  4968                           ; BSR set to: 0
  4969  001B7E  80CD               	bsf	4045,0,c	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972  001B80  0012               	return	
  4973  001B82                     __end_of_OpenTimer1:
  4974                           	opt stack 0
  4975                           tblptru	equ	0xFF8
  4976                           prodh	equ	0xFF4
  4977                           prodl	equ	0xFF3
  4978                           intcon	equ	0xFF2
  4979                           postinc0	equ	0xFEE
  4980                           wreg	equ	0xFE8
  4981                           indf1	equ	0xFE7
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           postdec2	equ	0xFDD
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function _OpenTimer0 *****************
  4992 ;; Defined at:
  4993 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  config          1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  config          1   33[BANK0 ] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;		None               void
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5007 ;;      Params:         0       0       0       0       0
  5008 ;;      Locals:         0       1       0       0       0
  5009 ;;      Temps:          0       0       0       0       0
  5010 ;;      Totals:         0       1       0       0       0
  5011 ;;Total ram usage:        1 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:   10
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text30
  5022  001CB4                     __ptext30:
  5023                           	opt stack 0
  5024  001CB4                     _OpenTimer0:
  5025                           	opt stack 19
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;incstack = 0
  5029                           ;OpenTimer0@config stored from wreg
  5030  001CB4  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  5031  001CB8  0100               	movlb	0	; () banked
  5032  001CBA  0100               	movlb	0	; () banked
  5033  001CBC  51D7               	movf	OpenTimer0@config& (0+255),w,b
  5034  001CBE  0B7F               	andlw	127
  5035  001CC0  6ED5               	movwf	4053,c	;volatile
  5036                           
  5037                           ; BSR set to: 0
  5038  001CC2  0E00               	movlw	0
  5039  001CC4  6ED7               	movwf	4055,c	;volatile
  5040                           
  5041                           ; BSR set to: 0
  5042  001CC6  0E00               	movlw	0
  5043  001CC8  6ED6               	movwf	4054,c	;volatile
  5044                           
  5045                           ; BSR set to: 0
  5046  001CCA  94F2               	bcf	intcon,2,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049  001CCC  0100               	movlb	0	; () banked
  5050  001CCE  0100               	movlb	0	; () banked
  5051  001CD0  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  5052  001CD2  D002               	goto	l437
  5053                           
  5054                           ; BSR set to: 0
  5055  001CD4  8AF2               	bsf	intcon,5,c	;volatile
  5056  001CD6  D001               	goto	l438
  5057  001CD8                     l437:
  5058                           
  5059                           ; BSR set to: 0
  5060  001CD8  9AF2               	bcf	intcon,5,c	;volatile
  5061  001CDA                     l438:
  5062                           
  5063                           ; BSR set to: 0
  5064  001CDA  8ED5               	bsf	4053,7,c	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067  001CDC  0012               	return	
  5068  001CDE                     __end_of_OpenTimer0:
  5069                           	opt stack 0
  5070                           tblptru	equ	0xFF8
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           indf1	equ	0xFE7
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           postdec2	equ	0xFDD
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function _InterruptHandlerLow *****************
  5087 ;; Defined at:
  5088 ;;		line 122 in file "src/interrupts.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;		None               void
  5095 ;; Registers used:
  5096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5102 ;;      Params:         0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0
  5104 ;;      Temps:         17       0       0       0       0
  5105 ;;      Totals:        17       0       0       0       0
  5106 ;;Total ram usage:       17 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    9
  5109 ;; This function calls:
  5110 ;;		_timer1_int_handler
  5111 ;;		_uart_recv_int_handler
  5112 ;;		_uart_trans_int_handler
  5113 ;; This function is called by:
  5114 ;;		Interrupt level 1
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	intcodelo
  5119  000018                     __pintcodelo:
  5120                           	opt stack 0
  5121  000018                     _InterruptHandlerLow:
  5122                           	opt stack 16
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;incstack = 0
  5126  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  5127  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  5128  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  5129  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  5130  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  5131  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  5132  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  5133  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  5134  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  5135  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  5136  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  5137  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  5138  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  5139  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  5140  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  5141  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  5142  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  5143                           
  5144                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5145  00005C  A09E               	btfss	3998,0,c	;volatile
  5146  00005E  D003               	goto	i1l4086
  5147                           
  5148                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5149  000060  909E               	bcf	3998,0,c	;volatile
  5150                           
  5151                           ;interrupts.c: 126: timer1_int_handler();
  5152  000062  EC2B  F00E         	call	_timer1_int_handler	;wreg free
  5153  000066                     i1l4086:
  5154                           
  5155                           ;interrupts.c: 127: }
  5156                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5157  000066  AA9E               	btfss	3998,5,c	;volatile
  5158  000068  D003               	goto	i1l4092
  5159                           
  5160                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5161  00006A  9A9E               	bcf	3998,5,c	;volatile
  5162                           
  5163                           ;interrupts.c: 132: uart_recv_int_handler();
  5164  00006C  ECEC  F009         	call	_uart_recv_int_handler	;wreg free
  5165  000070                     i1l4092:
  5166                           
  5167                           ;interrupts.c: 133: }
  5168                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5169  000070  B89E               	btfsc	3998,4,c	;volatile
  5170  000072  A89D               	btfss	3997,4,c	;volatile
  5171  000074  D003               	goto	i1l52
  5172                           
  5173                           ;interrupts.c: 137: uart_trans_int_handler();
  5174  000076  ECFE  F00B         	call	_uart_trans_int_handler	;wreg free
  5175                           
  5176                           ;interrupts.c: 138: PIR1bits.TXIF = 0;
  5177  00007A  989E               	bcf	3998,4,c	;volatile
  5178  00007C                     i1l52:
  5179  00007C  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5180  000080  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5181  000084  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5182  000088  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5183  00008C  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5184  000090  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5185  000094  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5186  000098  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5187  00009C  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5188  0000A0  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5189  0000A4  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5190  0000A8  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5191  0000AC  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5192  0000B0  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5193  0000B4  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5194  0000B8  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5195  0000BC  C024  FFD8         	movff	??_InterruptHandlerLow,status
  5196  0000C0  0010               	retfie	
  5197  0000C2                     __end_of_InterruptHandlerLow:
  5198                           	opt stack 0
  5199                           pclatu	equ	0xFFB
  5200                           pclath	equ	0xFFA
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           postinc0	equ	0xFEE
  5209                           fsr0h	equ	0xFEA
  5210                           fsr0l	equ	0xFE9
  5211                           wreg	equ	0xFE8
  5212                           indf1	equ	0xFE7
  5213                           fsr1h	equ	0xFE2
  5214                           fsr1l	equ	0xFE1
  5215                           bsr	equ	0xFE0
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           postdec2	equ	0xFDD
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _uart_trans_int_handler *****************
  5224 ;; Defined at:
  5225 ;;		line 11 in file "src/my_uart.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  data            2   30[COMRAM] PTR unsigned char 
  5230 ;;		 -> NULL(0), 
  5231 ;;  length          1   34[COMRAM] char 
  5232 ;;  msgtype         1   33[COMRAM] unsigned char 
  5233 ;;  curIndex        1   32[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;		None               void
  5236 ;; Registers used:
  5237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5243 ;;      Params:         0       0       0       0       0
  5244 ;;      Locals:         5       0       0       0       0
  5245 ;;      Temps:          1       0       0       0       0
  5246 ;;      Totals:         6       0       0       0       0
  5247 ;;Total ram usage:        6 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    8
  5250 ;; This function calls:
  5251 ;;		_FromMainLow_recvmsg
  5252 ;; This function is called by:
  5253 ;;		_InterruptHandlerLow
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text32
  5258  0017FC                     __ptext32:
  5259                           	opt stack 0
  5260  0017FC                     _uart_trans_int_handler:
  5261                           	opt stack 16
  5262                           
  5263                           ;my_uart.c: 13: unsigned char* data = (0);
  5264                           
  5265                           ;incstack = 0
  5266  0017FC  0E00               	movlw	0
  5267  0017FE  6E20               	movwf	uart_trans_int_handler@data+1,c
  5268  001800  0E00               	movlw	0
  5269  001802  6E1F               	movwf	uart_trans_int_handler@data,c
  5270                           
  5271                           ;my_uart.c: 14: unsigned char msgtype;
  5272                           ;my_uart.c: 15: unsigned char curIndex;
  5273                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5274  001804  0E00               	movlw	high uart_trans_int_handler@msgtype
  5275  001806  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5276  001808  0E22               	movlw	low uart_trans_int_handler@msgtype
  5277  00180A  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5278  00180C  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5279  001810  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5280  001814  0E0A               	movlw	10
  5281  001816  EC98  F00E         	call	_FromMainLow_recvmsg
  5282  00181A  6E23               	movwf	uart_trans_int_handler@length,c
  5283                           
  5284                           ;my_uart.c: 17: if (length < 0) {
  5285  00181C  AE23               	btfss	uart_trans_int_handler@length,7,c
  5286  00181E  D009               	goto	i1l4072
  5287                           
  5288                           ;my_uart.c: 19: if (length != -4) {
  5289  001820  5023               	movf	uart_trans_int_handler@length,w,c
  5290  001822  0AFC               	xorlw	252
  5291  001824  B4D8               	btfsc	status,2,c
  5292  001826  D002               	goto	i1l4070
  5293                           
  5294                           ;my_uart.c: 20: TXREG = 'Q';
  5295  001828  0E51               	movlw	81
  5296  00182A  D001               	goto	L6
  5297  00182C                     i1l4070:
  5298                           
  5299                           ;my_uart.c: 22: else{
  5300                           ;my_uart.c: 23: TXREG = 'X';
  5301  00182C  0E58               	movlw	88
  5302  00182E                     L6:
  5303  00182E  6EAD               	movwf	4013,c	;volatile
  5304  001830  D019               	goto	i1l350
  5305  001832                     i1l4072:
  5306                           
  5307                           ;my_uart.c: 26: curIndex = 0;
  5308  001832  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5309  001834  0E00               	movlw	0
  5310  001836  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5311  001838  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5312                           
  5313                           ;my_uart.c: 27: while(curIndex < length){
  5314  00183A  D00D               	goto	i1l4078
  5315  00183C                     i1l353:
  5316  00183C  A2AC               	btfss	4012,1,c	;volatile
  5317  00183E  D7FE               	goto	i1l353
  5318                           
  5319                           ;my_uart.c: 29: TXREG = data[curIndex];
  5320  001840  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5321  001842  0D01               	mullw	1
  5322  001844  50F3               	movf	prodl,w,c
  5323  001846  241F               	addwf	uart_trans_int_handler@data,w,c
  5324  001848  6ED9               	movwf	fsr2l,c
  5325  00184A  50F4               	movf	prodh,w,c
  5326  00184C  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5327  00184E  6EDA               	movwf	fsr2h,c
  5328  001850  50DF               	movf	indf2,w,c
  5329  001852  6EAD               	movwf	4013,c	;volatile
  5330                           
  5331                           ;my_uart.c: 30: curIndex++;
  5332  001854  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5333  001856                     i1l4078:
  5334  001856  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5335  001858  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5336  00185A  D004               	goto	i1l350
  5337  00185C  0AFF               	xorlw	255
  5338  00185E  2423               	addwf	uart_trans_int_handler@length,w,c
  5339  001860  B0D8               	btfsc	status,0,c
  5340  001862  D7EC               	goto	i1l353
  5341  001864                     i1l350:
  5342                           
  5343                           ;my_uart.c: 31: }
  5344                           ;my_uart.c: 32: }
  5345                           ;my_uart.c: 34: PIE1bits.TXIE = 0;
  5346  001864  989D               	bcf	3997,4,c	;volatile
  5347  001866  0012               	return	
  5348  001868                     __end_of_uart_trans_int_handler:
  5349                           	opt stack 0
  5350                           pclatu	equ	0xFFB
  5351                           pclath	equ	0xFFA
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           prodh	equ	0xFF4
  5357                           prodl	equ	0xFF3
  5358                           intcon	equ	0xFF2
  5359                           postinc0	equ	0xFEE
  5360                           fsr0h	equ	0xFEA
  5361                           fsr0l	equ	0xFE9
  5362                           wreg	equ	0xFE8
  5363                           indf1	equ	0xFE7
  5364                           fsr1h	equ	0xFE2
  5365                           fsr1l	equ	0xFE1
  5366                           bsr	equ	0xFE0
  5367                           indf2	equ	0xFDF
  5368                           postinc2	equ	0xFDE
  5369                           postdec2	equ	0xFDD
  5370                           fsr2h	equ	0xFDA
  5371                           fsr2l	equ	0xFD9
  5372                           status	equ	0xFD8
  5373                           
  5374 ;; *************** function _FromMainLow_recvmsg *****************
  5375 ;; Defined at:
  5376 ;;		line 159 in file "src/messages.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  maxlength       1    wreg     unsigned char 
  5379 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5380 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5381 ;;  data            2   26[COMRAM] PTR void 
  5382 ;;		 -> NULL(0), 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  maxlength       1   28[COMRAM] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      char 
  5387 ;; Registers used:
  5388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5394 ;;      Params:         4       0       0       0       0
  5395 ;;      Locals:         1       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0
  5397 ;;      Totals:         5       0       0       0       0
  5398 ;;Total ram usage:        5 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    7
  5401 ;; This function calls:
  5402 ;;		i1_recv_msg
  5403 ;; This function is called by:
  5404 ;;		_uart_trans_int_handler
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text33
  5409  001D30                     __ptext33:
  5410                           	opt stack 0
  5411  001D30                     _FromMainLow_recvmsg:
  5412                           	opt stack 16
  5413                           
  5414                           ;incstack = 0
  5415                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5416  001D30  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5417                           
  5418                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5419  001D34  0101               	movlb	1	; () banked
  5420  001D36  0E01               	movlw	high _FromMainLow_MQ
  5421  001D38  6E0C               	movwf	i1recv_msg@qptr+1,c
  5422  001D3A  0101               	movlb	1	; () banked
  5423  001D3C  0E36               	movlw	low _FromMainLow_MQ
  5424  001D3E  6E0B               	movwf	i1recv_msg@qptr,c
  5425  001D40  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5426  001D44  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5427  001D48  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5428  001D4C  6A11               	clrf	i1recv_msg@data+1,c
  5429  001D4E  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5430  001D52  EC61  F008         	call	i1_recv_msg	;wreg free
  5431  001D56  0012               	return	
  5432  001D58                     __end_of_FromMainLow_recvmsg:
  5433                           	opt stack 0
  5434                           pclatu	equ	0xFFB
  5435                           pclath	equ	0xFFA
  5436                           tblptru	equ	0xFF8
  5437                           tblptrh	equ	0xFF7
  5438                           tblptrl	equ	0xFF6
  5439                           tablat	equ	0xFF5
  5440                           prodh	equ	0xFF4
  5441                           prodl	equ	0xFF3
  5442                           intcon	equ	0xFF2
  5443                           postinc0	equ	0xFEE
  5444                           fsr0h	equ	0xFEA
  5445                           fsr0l	equ	0xFE9
  5446                           wreg	equ	0xFE8
  5447                           indf1	equ	0xFE7
  5448                           fsr1h	equ	0xFE2
  5449                           fsr1l	equ	0xFE1
  5450                           bsr	equ	0xFE0
  5451                           indf2	equ	0xFDF
  5452                           postinc2	equ	0xFDE
  5453                           postdec2	equ	0xFDD
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function i1_recv_msg *****************
  5459 ;; Defined at:
  5460 ;;		line 63 in file "src/messages.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5463 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5464 ;;  maxlength       1   12[COMRAM] unsigned char 
  5465 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5466 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5467 ;;  data            2   15[COMRAM] PTR void 
  5468 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5471 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5472 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5473 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5474 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      char 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5484 ;;      Params:         7       0       0       0       0
  5485 ;;      Locals:         5       0       0       0       0
  5486 ;;      Temps:          2       0       0       0       0
  5487 ;;      Totals:        14       0       0       0       0
  5488 ;;Total ram usage:       14 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    6
  5491 ;; This function calls:
  5492 ;;		i1_memcpy
  5493 ;; This function is called by:
  5494 ;;		_FromMainLow_recvmsg
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text34
  5499  0010C2                     __ptext34:
  5500                           	opt stack 0
  5501  0010C2                     i1_recv_msg:
  5502                           	opt stack 16
  5503                           
  5504                           ;messages.c: 64: unsigned char slot;
  5505                           ;messages.c: 68: msg *qmsg;
  5506                           ;messages.c: 69: size_t tlength;
  5507                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5508                           
  5509                           ;incstack = 0
  5510  0010C2  EE20 F035          	lfsr	2,53
  5511  0010C6  500B               	movf	i1recv_msg@qptr,w,c
  5512  0010C8  26D9               	addwf	fsr2l,f,c
  5513  0010CA  500C               	movf	i1recv_msg@qptr+1,w,c
  5514  0010CC  22DA               	addwfc	fsr2h,f,c
  5515  0010CE  50DF               	movf	indf2,w,c
  5516  0010D0  6E14               	movwf	i1recv_msg@slot,c
  5517                           
  5518                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5519  0010D2  5014               	movf	i1recv_msg@slot,w,c
  5520  0010D4  0D0D               	mullw	13
  5521  0010D6  50F3               	movf	prodl,w,c
  5522  0010D8  240B               	addwf	i1recv_msg@qptr,w,c
  5523  0010DA  6E17               	movwf	i1recv_msg@qmsg,c
  5524  0010DC  50F4               	movf	prodh,w,c
  5525  0010DE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5526  0010E0  6E18               	movwf	i1recv_msg@qmsg+1,c
  5527                           
  5528                           ;messages.c: 74: if (qmsg->full == 1) {
  5529  0010E2  0E01               	movlw	1
  5530  0010E4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5531  0010E8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5532  0010EC  62DF               	cpfseq	indf2,c
  5533  0010EE  D050               	goto	i1l4024
  5534                           
  5535                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5536  0010F0  EE20 F001          	lfsr	2,1
  5537  0010F4  5017               	movf	i1recv_msg@qmsg,w,c
  5538  0010F6  26D9               	addwf	fsr2l,f,c
  5539  0010F8  5018               	movf	i1recv_msg@qmsg+1,w,c
  5540  0010FA  22DA               	addwfc	fsr2h,f,c
  5541  0010FC  50DF               	movf	indf2,w,c
  5542  0010FE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5543  001100  B0D8               	btfsc	status,0,c
  5544  001102  D002               	goto	i1l4008
  5545                           
  5546                           ;messages.c: 77: return (-3);
  5547  001104  0EFD               	movlw	253
  5548  001106  0012               	return	
  5549  001108                     i1l4008:
  5550                           
  5551                           ;messages.c: 78: }
  5552                           ;messages.c: 80: tlength = qmsg->length;
  5553  001108  EE20 F001          	lfsr	2,1
  5554  00110C  5017               	movf	i1recv_msg@qmsg,w,c
  5555  00110E  26D9               	addwf	fsr2l,f,c
  5556  001110  5018               	movf	i1recv_msg@qmsg+1,w,c
  5557  001112  22DA               	addwfc	fsr2h,f,c
  5558  001114  50DF               	movf	indf2,w,c
  5559  001116  6E12               	movwf	??i1_recv_msg& (0+255),c
  5560  001118  5012               	movf	??i1_recv_msg,w,c
  5561  00111A  6E15               	movwf	i1recv_msg@tlength,c
  5562  00111C  6A16               	clrf	i1recv_msg@tlength+1,c
  5563                           
  5564                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5565  00111E  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5566  001122  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5567  001126  0E03               	movlw	3
  5568  001128  2417               	addwf	i1recv_msg@qmsg,w,c
  5569  00112A  6E12               	movwf	??i1_recv_msg& (0+255),c
  5570  00112C  0E00               	movlw	0
  5571  00112E  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5572  001130  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5573  001132  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5574  001136  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5575  00113A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5576  00113E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5577  001142  EC46  F00D         	call	i1_memcpy	;wreg free
  5578                           
  5579                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5580  001146  EE20 F035          	lfsr	2,53
  5581  00114A  500B               	movf	i1recv_msg@qptr,w,c
  5582  00114C  26D9               	addwf	fsr2l,f,c
  5583  00114E  500C               	movf	i1recv_msg@qptr+1,w,c
  5584  001150  22DA               	addwfc	fsr2h,f,c
  5585  001152  EE10 F035          	lfsr	1,53
  5586  001156  500B               	movf	i1recv_msg@qptr,w,c
  5587  001158  26E1               	addwf	fsr1l,f,c
  5588  00115A  500C               	movf	i1recv_msg@qptr+1,w,c
  5589  00115C  22E2               	addwfc	fsr1h,f,c
  5590  00115E  50E7               	movf	indf1,w,c
  5591  001160  6E12               	movwf	??i1_recv_msg& (0+255),c
  5592  001162  2812               	incf	??i1_recv_msg,w,c
  5593  001164  0B03               	andlw	3
  5594  001166  6EDF               	movwf	indf2,c
  5595                           
  5596                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5597  001168  EE20 F002          	lfsr	2,2
  5598  00116C  5017               	movf	i1recv_msg@qmsg,w,c
  5599  00116E  26D9               	addwf	fsr2l,f,c
  5600  001170  5018               	movf	i1recv_msg@qmsg+1,w,c
  5601  001172  22DA               	addwfc	fsr2h,f,c
  5602  001174  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5603  001178  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5604  00117C  CFDF FFE7          	movff	indf2,indf1
  5605                           
  5606                           ;messages.c: 91: qmsg->full = 0;
  5607  001180  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5608  001184  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5609  001188  0E00               	movlw	0
  5610  00118A  6EDF               	movwf	indf2,c
  5611                           
  5612                           ;messages.c: 92: return (tlength);
  5613  00118C  5015               	movf	i1recv_msg@tlength,w,c
  5614  00118E  0012               	return	
  5615  001190                     i1l4024:
  5616                           
  5617                           ;messages.c: 94: return (-4);
  5618  001190  0EFC               	movlw	252
  5619  001192  0012               	return	
  5620  001194                     __end_ofi1_recv_msg:
  5621                           	opt stack 0
  5622                           pclatu	equ	0xFFB
  5623                           pclath	equ	0xFFA
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           prodh	equ	0xFF4
  5629                           prodl	equ	0xFF3
  5630                           intcon	equ	0xFF2
  5631                           postinc0	equ	0xFEE
  5632                           fsr0h	equ	0xFEA
  5633                           fsr0l	equ	0xFE9
  5634                           wreg	equ	0xFE8
  5635                           indf1	equ	0xFE7
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           bsr	equ	0xFE0
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function _uart_recv_int_handler *****************
  5647 ;; Defined at:
  5648 ;;		line 37 in file "src/my_uart.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5662 ;;      Params:         0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0
  5664 ;;      Temps:          1       0       0       0       0
  5665 ;;      Totals:         1       0       0       0       0
  5666 ;;Total ram usage:        1 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    8
  5669 ;; This function calls:
  5670 ;;		_ReadUSART
  5671 ;;		i1_ToMainLow_sendmsg
  5672 ;; This function is called by:
  5673 ;;		_InterruptHandlerLow
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text35
  5678  0013D8                     __ptext35:
  5679                           	opt stack 0
  5680  0013D8                     _uart_recv_int_handler:
  5681                           	opt stack 16
  5682                           
  5683                           ;my_uart.c: 46: if ((PIR1bits.RCIF)) {
  5684                           
  5685                           ;incstack = 0
  5686  0013D8  AA9E               	btfss	3998,5,c	;volatile
  5687  0013DA  D03C               	goto	i1l4054
  5688                           
  5689                           ;my_uart.c: 47: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5690  0013DC  EE20 F004          	lfsr	2,4
  5691  0013E0  5048               	movf	_uc_ptr,w,c
  5692  0013E2  26D9               	addwf	fsr2l,f,c
  5693  0013E4  5049               	movf	_uc_ptr+1,w,c
  5694  0013E6  22DA               	addwfc	fsr2h,f,c
  5695  0013E8  50DF               	movf	indf2,w,c
  5696  0013EA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5697  0013EC  501B               	movf	??_uart_recv_int_handler,w,c
  5698  0013EE  0D01               	mullw	1
  5699  0013F0  50F3               	movf	prodl,w,c
  5700  0013F2  2448               	addwf	_uc_ptr,w,c
  5701  0013F4  6ED9               	movwf	fsr2l,c
  5702  0013F6  50F4               	movf	prodh,w,c
  5703  0013F8  2049               	addwfc	_uc_ptr+1,w,c
  5704  0013FA  6EDA               	movwf	fsr2h,c
  5705  0013FC  ECF3  F00E         	call	_ReadUSART	;wreg free
  5706  001400  6EDF               	movwf	indf2,c
  5707                           
  5708                           ;my_uart.c: 51: uc_ptr->buflen++;
  5709  001402  EE20 F004          	lfsr	2,4
  5710  001406  5048               	movf	_uc_ptr,w,c
  5711  001408  26D9               	addwf	fsr2l,f,c
  5712  00140A  5049               	movf	_uc_ptr+1,w,c
  5713  00140C  22DA               	addwfc	fsr2h,f,c
  5714  00140E  2ADF               	incf	indf2,f,c
  5715                           
  5716                           ;my_uart.c: 53: if (uc_ptr->buflen == 4) {
  5717  001410  EE20 F004          	lfsr	2,4
  5718  001414  5048               	movf	_uc_ptr,w,c
  5719  001416  26D9               	addwf	fsr2l,f,c
  5720  001418  5049               	movf	_uc_ptr+1,w,c
  5721  00141A  22DA               	addwfc	fsr2h,f,c
  5722  00141C  0E04               	movlw	4
  5723  00141E  62DF               	cpfseq	indf2,c
  5724  001420  D019               	goto	i1l4054
  5725                           
  5726                           ;my_uart.c: 54: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5727  001422  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5728  001424  0E20               	movlw	32
  5729  001426  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5730  001428  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5731  00142A  C049  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5732  00142E  C048  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5733  001432  EE20 F004          	lfsr	2,4
  5734  001436  5048               	movf	_uc_ptr,w,c
  5735  001438  26D9               	addwf	fsr2l,f,c
  5736  00143A  5049               	movf	_uc_ptr+1,w,c
  5737  00143C  22DA               	addwfc	fsr2h,f,c
  5738  00143E  50DF               	movf	indf2,w,c
  5739  001440  ECBF  F00E         	call	i1_ToMainLow_sendmsg
  5740                           
  5741                           ;my_uart.c: 55: uc_ptr->buflen = 0;
  5742  001444  EE20 F004          	lfsr	2,4
  5743  001448  5048               	movf	_uc_ptr,w,c
  5744  00144A  26D9               	addwf	fsr2l,f,c
  5745  00144C  5049               	movf	_uc_ptr+1,w,c
  5746  00144E  22DA               	addwfc	fsr2h,f,c
  5747  001450  0E00               	movlw	0
  5748  001452  6EDF               	movwf	indf2,c
  5749  001454                     i1l4054:
  5750                           
  5751                           ;my_uart.c: 56: }
  5752                           ;my_uart.c: 57: }
  5753                           ;my_uart.c: 64: if (USART_Status.OVERRUN_ERROR == 1) {
  5754  001454  A64B               	btfss	_USART_Status,3,c
  5755  001456  0012               	return	
  5756                           
  5757                           ;my_uart.c: 69: RCSTAbits.CREN = 0;
  5758  001458  98AB               	bcf	4011,4,c	;volatile
  5759                           
  5760                           ;my_uart.c: 70: RCSTAbits.CREN = 1;
  5761  00145A  88AB               	bsf	4011,4,c	;volatile
  5762                           
  5763                           ;my_uart.c: 71: ToMainLow_sendmsg(0, 30, (void *) 0);
  5764  00145C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5765  00145E  0E1E               	movlw	30
  5766  001460  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5767  001462  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5768  001464  0E00               	movlw	0
  5769  001466  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5770  001468  0E00               	movlw	0
  5771  00146A  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5772  00146C  0E00               	movlw	0
  5773  00146E  ECBF  F00E         	call	i1_ToMainLow_sendmsg
  5774  001472  0012               	return	
  5775  001474                     __end_of_uart_recv_int_handler:
  5776                           	opt stack 0
  5777                           pclatu	equ	0xFFB
  5778                           pclath	equ	0xFFA
  5779                           tblptru	equ	0xFF8
  5780                           tblptrh	equ	0xFF7
  5781                           tblptrl	equ	0xFF6
  5782                           tablat	equ	0xFF5
  5783                           prodh	equ	0xFF4
  5784                           prodl	equ	0xFF3
  5785                           intcon	equ	0xFF2
  5786                           postinc0	equ	0xFEE
  5787                           fsr0h	equ	0xFEA
  5788                           fsr0l	equ	0xFE9
  5789                           wreg	equ	0xFE8
  5790                           indf1	equ	0xFE7
  5791                           fsr1h	equ	0xFE2
  5792                           fsr1l	equ	0xFE1
  5793                           bsr	equ	0xFE0
  5794                           indf2	equ	0xFDF
  5795                           postinc2	equ	0xFDE
  5796                           postdec2	equ	0xFDD
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _ReadUSART *****************
  5802 ;; Defined at:
  5803 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  data            1    0[COMRAM] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      unsigned char 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5817 ;;      Params:         0       0       0       0       0
  5818 ;;      Locals:         1       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0
  5820 ;;      Totals:         1       0       0       0       0
  5821 ;;Total ram usage:        1 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    5
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_uart_recv_int_handler
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text36
  5832  001DE6                     __ptext36:
  5833                           	opt stack 0
  5834  001DE6                     _ReadUSART:
  5835                           	opt stack 18
  5836                           
  5837                           ;incstack = 0
  5838  001DE6  0EF2               	movlw	242
  5839  001DE8  164B               	andwf	_USART_Status,f,c
  5840  001DEA  ACAB               	btfss	4011,6,c	;volatile
  5841  001DEC  D003               	goto	i1l523
  5842  001DEE  904B               	bcf	_USART_Status,0,c
  5843  001DF0  B0AB               	btfsc	4011,0,c	;volatile
  5844  001DF2  804B               	bsf	_USART_Status,0,c
  5845  001DF4                     i1l523:
  5846  001DF4  B4AB               	btfsc	4011,2,c	;volatile
  5847  001DF6  844B               	bsf	_USART_Status,2,c
  5848  001DF8  B2AB               	btfsc	4011,1,c	;volatile
  5849  001DFA  864B               	bsf	_USART_Status,3,c
  5850  001DFC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5851  001E00  5001               	movf	ReadUSART@data,w,c
  5852  001E02  0012               	return	
  5853  001E04                     __end_of_ReadUSART:
  5854                           	opt stack 0
  5855                           pclatu	equ	0xFFB
  5856                           pclath	equ	0xFFA
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           postinc0	equ	0xFEE
  5865                           fsr0h	equ	0xFEA
  5866                           fsr0l	equ	0xFE9
  5867                           wreg	equ	0xFE8
  5868                           indf1	equ	0xFE7
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           bsr	equ	0xFE0
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _timer1_int_handler *****************
  5880 ;; Defined at:
  5881 ;;		line 36 in file "src/user_interrupts.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  result          2   27[COMRAM] unsigned int 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;		None               void
  5888 ;; Registers used:
  5889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5895 ;;      Params:         0       0       0       0       0
  5896 ;;      Locals:         2       0       0       0       0
  5897 ;;      Temps:          1       0       0       0       0
  5898 ;;      Totals:         3       0       0       0       0
  5899 ;;Total ram usage:        3 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    8
  5902 ;; This function calls:
  5903 ;;		_WriteTimer1
  5904 ;;		i1_ReadTimer1
  5905 ;;		i1_ToMainLow_sendmsg
  5906 ;; This function is called by:
  5907 ;;		_InterruptHandlerLow
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text37
  5912  001C56                     __ptext37:
  5913                           	opt stack 0
  5914  001C56                     _timer1_int_handler:
  5915                           	opt stack 16
  5916                           
  5917                           ;user_interrupts.c: 37: unsigned int result;
  5918                           ;user_interrupts.c: 44: result = ReadTimer1();
  5919                           
  5920                           ;incstack = 0
  5921  001C56  EC28  F00F         	call	i1_ReadTimer1	;wreg free
  5922  001C5A  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  5923  001C5E  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  5924                           
  5925                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5926  001C62  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5927  001C64  0E0B               	movlw	11
  5928  001C66  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5929  001C68  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5930  001C6A  0E00               	movlw	0
  5931  001C6C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5932  001C6E  0E00               	movlw	0
  5933  001C70  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5934  001C72  0E00               	movlw	0
  5935  001C74  ECBF  F00E         	call	i1_ToMainLow_sendmsg
  5936                           
  5937                           ;user_interrupts.c: 48: WriteTimer1(0);
  5938  001C78  0E00               	movlw	0
  5939  001C7A  6E02               	movwf	WriteTimer1@timer1+1,c
  5940  001C7C  0E00               	movlw	0
  5941  001C7E  6E01               	movwf	WriteTimer1@timer1,c
  5942  001C80  EC31  F00F         	call	_WriteTimer1	;wreg free
  5943  001C84  0012               	return	
  5944  001C86                     __end_of_timer1_int_handler:
  5945                           	opt stack 0
  5946                           pclatu	equ	0xFFB
  5947                           pclath	equ	0xFFA
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodh	equ	0xFF4
  5953                           prodl	equ	0xFF3
  5954                           intcon	equ	0xFF2
  5955                           postinc0	equ	0xFEE
  5956                           fsr0h	equ	0xFEA
  5957                           fsr0l	equ	0xFE9
  5958                           wreg	equ	0xFE8
  5959                           indf1	equ	0xFE7
  5960                           fsr1h	equ	0xFE2
  5961                           fsr1l	equ	0xFE1
  5962                           bsr	equ	0xFE0
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function i1_ToMainLow_sendmsg *****************
  5971 ;; Defined at:
  5972 ;;		line 103 in file "src/messages.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  length          1    wreg     unsigned char 
  5975 ;;  msgtype         1   22[COMRAM] unsigned char 
  5976 ;;  data            2   23[COMRAM] PTR void 
  5977 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  length          1   25[COMRAM] unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      char 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5989 ;;      Params:         3       0       0       0       0
  5990 ;;      Locals:         1       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0
  5992 ;;      Totals:         4       0       0       0       0
  5993 ;;Total ram usage:        4 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    7
  5996 ;; This function calls:
  5997 ;;		i1_send_msg
  5998 ;; This function is called by:
  5999 ;;		_uart_recv_int_handler
  6000 ;;		_timer1_int_handler
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text38
  6005  001D7E                     __ptext38:
  6006                           	opt stack 0
  6007  001D7E                     i1_ToMainLow_sendmsg:
  6008                           	opt stack 16
  6009                           
  6010                           ;incstack = 0
  6011                           ;i1ToMainLow_sendmsg@length stored from wreg
  6012  001D7E  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6013                           
  6014                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6015                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6016  001D82  0100               	movlb	0	; () banked
  6017  001D84  0E00               	movlw	high _ToMainLow_MQ
  6018  001D86  6E0C               	movwf	i1send_msg@qptr+1,c
  6019  001D88  0100               	movlb	0	; () banked
  6020  001D8A  0E80               	movlw	low _ToMainLow_MQ
  6021  001D8C  6E0B               	movwf	i1send_msg@qptr,c
  6022  001D8E  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6023  001D92  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6024  001D96  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6025  001D9A  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6026  001D9E  EC97  F009         	call	i1_send_msg	;wreg free
  6027  001DA2  0012               	return	
  6028  001DA4                     __end_ofi1_ToMainLow_sendmsg:
  6029                           	opt stack 0
  6030                           pclatu	equ	0xFFB
  6031                           pclath	equ	0xFFA
  6032                           tblptru	equ	0xFF8
  6033                           tblptrh	equ	0xFF7
  6034                           tblptrl	equ	0xFF6
  6035                           tablat	equ	0xFF5
  6036                           prodh	equ	0xFF4
  6037                           prodl	equ	0xFF3
  6038                           intcon	equ	0xFF2
  6039                           postinc0	equ	0xFEE
  6040                           fsr0h	equ	0xFEA
  6041                           fsr0l	equ	0xFE9
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           bsr	equ	0xFE0
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           postdec2	equ	0xFDD
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function i1_send_msg *****************
  6055 ;; Defined at:
  6056 ;;		line 24 in file "src/messages.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6059 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6060 ;;  length          1   12[COMRAM] unsigned char 
  6061 ;;  msgtype         1   13[COMRAM] unsigned char 
  6062 ;;  data            2   14[COMRAM] PTR void 
  6063 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  6064 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6067 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6068 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6069 ;;  send_msg        2   17[COMRAM] unsigned int 
  6070 ;;  send_msg        1   19[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      char 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6080 ;;      Params:         6       0       0       0       0
  6081 ;;      Locals:         5       0       0       0       0
  6082 ;;      Temps:          1       0       0       0       0
  6083 ;;      Totals:        12       0       0       0       0
  6084 ;;Total ram usage:       12 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    6
  6087 ;; This function calls:
  6088 ;;		i1_memcpy
  6089 ;; This function is called by:
  6090 ;;		i1_ToMainLow_sendmsg
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text39
  6095  00132E                     __ptext39:
  6096                           	opt stack 0
  6097  00132E                     i1_send_msg:
  6098                           	opt stack 16
  6099                           
  6100                           ;messages.c: 25: unsigned char slot;
  6101                           ;messages.c: 27: msg *qmsg;
  6102                           ;messages.c: 28: size_t tlength = length;
  6103                           
  6104                           ;incstack = 0
  6105  00132E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6106  001332  6A13               	clrf	i1send_msg@tlength+1,c
  6107                           
  6108                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6109  001334  EE20 F034          	lfsr	2,52
  6110  001338  500B               	movf	i1send_msg@qptr,w,c
  6111  00133A  26D9               	addwf	fsr2l,f,c
  6112  00133C  500C               	movf	i1send_msg@qptr+1,w,c
  6113  00133E  22DA               	addwfc	fsr2h,f,c
  6114  001340  50DF               	movf	indf2,w,c
  6115  001342  6E14               	movwf	i1send_msg@slot,c
  6116                           
  6117                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6118  001344  5014               	movf	i1send_msg@slot,w,c
  6119  001346  0D0D               	mullw	13
  6120  001348  50F3               	movf	prodl,w,c
  6121  00134A  240B               	addwf	i1send_msg@qptr,w,c
  6122  00134C  6E15               	movwf	i1send_msg@qmsg,c
  6123  00134E  50F4               	movf	prodh,w,c
  6124  001350  200C               	addwfc	i1send_msg@qptr+1,w,c
  6125  001352  6E16               	movwf	i1send_msg@qmsg+1,c
  6126                           
  6127                           ;messages.c: 41: if (qmsg->full != 0) {
  6128  001354  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6129  001358  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6130  00135C  50DF               	movf	indf2,w,c
  6131  00135E  B4D8               	btfsc	status,2,c
  6132  001360  D002               	goto	i1l3984
  6133                           
  6134                           ;messages.c: 42: return (-1);
  6135  001362  0EFF               	movlw	255
  6136  001364  0012               	return	
  6137  001366                     i1l3984:
  6138                           
  6139                           ;messages.c: 43: }
  6140                           ;messages.c: 46: qmsg->length = length;
  6141  001366  EE20 F001          	lfsr	2,1
  6142  00136A  5015               	movf	i1send_msg@qmsg,w,c
  6143  00136C  26D9               	addwf	fsr2l,f,c
  6144  00136E  5016               	movf	i1send_msg@qmsg+1,w,c
  6145  001370  22DA               	addwfc	fsr2h,f,c
  6146  001372  C00D  FFDF         	movff	i1send_msg@length,indf2
  6147                           
  6148                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6149  001376  EE20 F002          	lfsr	2,2
  6150  00137A  5015               	movf	i1send_msg@qmsg,w,c
  6151  00137C  26D9               	addwf	fsr2l,f,c
  6152  00137E  5016               	movf	i1send_msg@qmsg+1,w,c
  6153  001380  22DA               	addwfc	fsr2h,f,c
  6154  001382  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6155                           
  6156                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6157  001386  0E03               	movlw	3
  6158  001388  2415               	addwf	i1send_msg@qmsg,w,c
  6159  00138A  6E01               	movwf	i1memcpy@d1,c
  6160  00138C  0E00               	movlw	0
  6161  00138E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6162  001390  6E02               	movwf	i1memcpy@d1+1,c
  6163  001392  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6164  001396  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6165  00139A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6166  00139E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6167  0013A2  EC46  F00D         	call	i1_memcpy	;wreg free
  6168                           
  6169                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6170  0013A6  EE20 F034          	lfsr	2,52
  6171  0013AA  500B               	movf	i1send_msg@qptr,w,c
  6172  0013AC  26D9               	addwf	fsr2l,f,c
  6173  0013AE  500C               	movf	i1send_msg@qptr+1,w,c
  6174  0013B0  22DA               	addwfc	fsr2h,f,c
  6175  0013B2  EE10 F034          	lfsr	1,52
  6176  0013B6  500B               	movf	i1send_msg@qptr,w,c
  6177  0013B8  26E1               	addwf	fsr1l,f,c
  6178  0013BA  500C               	movf	i1send_msg@qptr+1,w,c
  6179  0013BC  22E2               	addwfc	fsr1h,f,c
  6180  0013BE  50E7               	movf	indf1,w,c
  6181  0013C0  6E11               	movwf	??i1_send_msg& (0+255),c
  6182  0013C2  2811               	incf	??i1_send_msg,w,c
  6183  0013C4  0B03               	andlw	3
  6184  0013C6  6EDF               	movwf	indf2,c
  6185                           
  6186                           ;messages.c: 59: qmsg->full = 1;
  6187  0013C8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6188  0013CC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6189  0013D0  0E01               	movlw	1
  6190  0013D2  6EDF               	movwf	indf2,c
  6191                           
  6192                           ;messages.c: 60: return (1);
  6193  0013D4  0E01               	movlw	1
  6194  0013D6  0012               	return	
  6195  0013D8                     __end_ofi1_send_msg:
  6196                           	opt stack 0
  6197                           pclatu	equ	0xFFB
  6198                           pclath	equ	0xFFA
  6199                           tblptru	equ	0xFF8
  6200                           tblptrh	equ	0xFF7
  6201                           tblptrl	equ	0xFF6
  6202                           tablat	equ	0xFF5
  6203                           prodh	equ	0xFF4
  6204                           prodl	equ	0xFF3
  6205                           intcon	equ	0xFF2
  6206                           postinc0	equ	0xFEE
  6207                           fsr0h	equ	0xFEA
  6208                           fsr0l	equ	0xFE9
  6209                           wreg	equ	0xFE8
  6210                           indf1	equ	0xFE7
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           bsr	equ	0xFE0
  6214                           indf2	equ	0xFDF
  6215                           postinc2	equ	0xFDE
  6216                           postdec2	equ	0xFDD
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           
  6221 ;; *************** function i1_memcpy *****************
  6222 ;; Defined at:
  6223 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  d1              2    0[COMRAM] PTR void 
  6226 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6227 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6228 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6229 ;;  s1              2    2[COMRAM] PTR const void 
  6230 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6231 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6232 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6233 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6234 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6235 ;;  n               2    4[COMRAM] unsigned int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6238 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6239 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6240 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6241 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6242 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6243 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6244 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6245 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6246 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  2    0[COMRAM] PTR void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6256 ;;      Params:         6       0       0       0       0
  6257 ;;      Locals:         4       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0
  6259 ;;      Totals:        10       0       0       0       0
  6260 ;;Total ram usage:       10 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    5
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		i1_send_msg
  6267 ;;		i1_recv_msg
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text40
  6272  001A8C                     __ptext40:
  6273                           	opt stack 0
  6274  001A8C                     i1_memcpy:
  6275                           	opt stack 16
  6276                           
  6277                           ;incstack = 0
  6278  001A8C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6279  001A90  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6280  001A94  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6281  001A98  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6282  001A9C  D00E               	goto	i1l3960
  6283  001A9E                     i1l3954:
  6284  001A9E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6285  001AA2  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6286  001AA6  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6287  001AAA  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6288  001AAE  CFDF FFE7          	movff	indf2,indf1
  6289  001AB2  4A09               	infsnz	i1memcpy@s,f,c
  6290  001AB4  2A0A               	incf	i1memcpy@s+1,f,c
  6291  001AB6  4A07               	infsnz	i1memcpy@d,f,c
  6292  001AB8  2A08               	incf	i1memcpy@d+1,f,c
  6293  001ABA                     i1l3960:
  6294  001ABA  0605               	decf	i1memcpy@n,f,c
  6295  001ABC  A0D8               	btfss	status,0,c
  6296  001ABE  0606               	decf	i1memcpy@n+1,f,c
  6297  001AC0  2805               	incf	i1memcpy@n& (0+255),w,c
  6298  001AC2  B4D8               	btfsc	status,2,c
  6299  001AC4  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6300  001AC6  B4D8               	btfsc	status,2,c
  6301                           
  6302                           ;	Return value of i1_memcpy is never used
  6303  001AC8  0012               	return	
  6304  001ACA  D7E9               	goto	i1l3954
  6305  001ACC                     __end_ofi1_memcpy:
  6306                           	opt stack 0
  6307                           pclatu	equ	0xFFB
  6308                           pclath	equ	0xFFA
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           postinc0	equ	0xFEE
  6317                           fsr0h	equ	0xFEA
  6318                           fsr0l	equ	0xFE9
  6319                           wreg	equ	0xFE8
  6320                           indf1	equ	0xFE7
  6321                           fsr1h	equ	0xFE2
  6322                           fsr1l	equ	0xFE1
  6323                           bsr	equ	0xFE0
  6324                           indf2	equ	0xFDF
  6325                           postinc2	equ	0xFDE
  6326                           postdec2	equ	0xFDD
  6327                           fsr2h	equ	0xFDA
  6328                           fsr2l	equ	0xFD9
  6329                           status	equ	0xFD8
  6330                           
  6331 ;; *************** function i1_ReadTimer1 *****************
  6332 ;; Defined at:
  6333 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2    0[COMRAM] unsigned int 
  6340 ;; Registers used:
  6341 ;;		None
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6347 ;;      Params:         2       0       0       0       0
  6348 ;;      Locals:         2       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0
  6350 ;;      Totals:         4       0       0       0       0
  6351 ;;Total ram usage:        4 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    5
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_timer1_int_handler
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text41
  6362  001E50                     __ptext41:
  6363                           	opt stack 0
  6364  001E50                     i1_ReadTimer1:
  6365                           	opt stack 18
  6366                           
  6367                           ;incstack = 0
  6368  001E50  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  6369  001E54  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  6370  001E58  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  6371  001E5C  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  6372  001E60  0012               	return	
  6373  001E62                     __end_ofi1_ReadTimer1:
  6374                           	opt stack 0
  6375                           pclatu	equ	0xFFB
  6376                           pclath	equ	0xFFA
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           prodh	equ	0xFF4
  6382                           prodl	equ	0xFF3
  6383                           intcon	equ	0xFF2
  6384                           postinc0	equ	0xFEE
  6385                           fsr0h	equ	0xFEA
  6386                           fsr0l	equ	0xFE9
  6387                           wreg	equ	0xFE8
  6388                           indf1	equ	0xFE7
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           bsr	equ	0xFE0
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           postdec2	equ	0xFDD
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function _WriteTimer1 *****************
  6400 ;; Defined at:
  6401 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  timer1          2    0[COMRAM] unsigned int 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  timer           2    2[COMRAM] struct Timers
  6406 ;; Return value:  Size  Location     Type
  6407 ;;		None               void
  6408 ;; Registers used:
  6409 ;;		None
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6415 ;;      Params:         2       0       0       0       0
  6416 ;;      Locals:         2       0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0
  6418 ;;      Totals:         4       0       0       0       0
  6419 ;;Total ram usage:        4 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    5
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_timer1_int_handler
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text42
  6430  001E62                     __ptext42:
  6431                           	opt stack 0
  6432  001E62                     _WriteTimer1:
  6433                           	opt stack 18
  6434                           
  6435                           ;incstack = 0
  6436  001E62  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6437  001E66  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6438  001E6A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6439  001E6E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6440  001E72  0012               	return	
  6441  001E74                     __end_of_WriteTimer1:
  6442                           	opt stack 0
  6443                           pclatu	equ	0xFFB
  6444                           pclath	equ	0xFFA
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           intcon	equ	0xFF2
  6452                           postinc0	equ	0xFEE
  6453                           fsr0h	equ	0xFEA
  6454                           fsr0l	equ	0xFE9
  6455                           wreg	equ	0xFE8
  6456                           indf1	equ	0xFE7
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           bsr	equ	0xFE0
  6460                           indf2	equ	0xFDF
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _InterruptHandlerHigh *****************
  6468 ;; Defined at:
  6469 ;;		line 83 in file "src/interrupts.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6483 ;;      Params:         0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0
  6485 ;;      Temps:          0      14       0       0       0
  6486 ;;      Totals:         0      14       0       0       0
  6487 ;;Total ram usage:       14 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    4
  6490 ;; This function calls:
  6491 ;;		_SleepIfOkay
  6492 ;;		_i2c_int_handler
  6493 ;;		_timer0_int_handler
  6494 ;; This function is called by:
  6495 ;;		Interrupt level 2
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	intcode
  6500  000008                     __pintcode:
  6501                           	opt stack 0
  6502  000008                     _InterruptHandlerHigh:
  6503                           	opt stack 16
  6504                           
  6505                           ;incstack = 0
  6506  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh
  6507  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+1
  6508  000010  EF0A  F00B         	goto	int_func
  6509                           pclatu	equ	0xFFB
  6510                           pclath	equ	0xFFA
  6511                           tblptru	equ	0xFF8
  6512                           tblptrh	equ	0xFF7
  6513                           tblptrl	equ	0xFF6
  6514                           tablat	equ	0xFF5
  6515                           prodh	equ	0xFF4
  6516                           prodl	equ	0xFF3
  6517                           intcon	equ	0xFF2
  6518                           postinc0	equ	0xFEE
  6519                           fsr0h	equ	0xFEA
  6520                           fsr0l	equ	0xFE9
  6521                           wreg	equ	0xFE8
  6522                           indf1	equ	0xFE7
  6523                           fsr1h	equ	0xFE2
  6524                           fsr1l	equ	0xFE1
  6525                           bsr	equ	0xFE0
  6526                           indf2	equ	0xFDF
  6527                           postinc2	equ	0xFDE
  6528                           postdec2	equ	0xFDD
  6529                           fsr2h	equ	0xFDA
  6530                           fsr2l	equ	0xFD9
  6531                           status	equ	0xFD8
  6532                           
  6533                           	psect	intcode_body
  6534  001614                     __pintcode_body:
  6535                           	opt stack 16
  6536  001614                     int_func:
  6537                           	opt stack 16
  6538  001614  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6539  001618  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6540  00161C  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6541  001620  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6542  001624  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6543  001628  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6544  00162C  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+8
  6545  001630  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+9
  6546  001634  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6547  001638  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6548  00163C  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+12
  6549  001640  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+13
  6550                           
  6551                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6552  001644  A69E               	btfss	3998,3,c	;volatile
  6553  001646  D003               	goto	i2l3266
  6554                           
  6555                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6556  001648  969E               	bcf	3998,3,c	;volatile
  6557                           
  6558                           ;interrupts.c: 92: i2c_int_handler();
  6559  00164A  EC63  F000         	call	_i2c_int_handler	;wreg free
  6560  00164E                     i2l3266:
  6561                           
  6562                           ;interrupts.c: 93: }
  6563                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6564  00164E  A4F2               	btfss	intcon,2,c	;volatile
  6565  001650  D003               	goto	i2l3272
  6566                           
  6567                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6568  001652  94F2               	bcf	intcon,2,c	;volatile
  6569                           
  6570                           ;interrupts.c: 99: timer0_int_handler();
  6571  001654  ECC8  F00A         	call	_timer0_int_handler	;wreg free
  6572  001658                     i2l3272:
  6573                           
  6574                           ;interrupts.c: 100: }
  6575                           ;interrupts.c: 109: SleepIfOkay();
  6576  001658  EC98  F00C         	call	_SleepIfOkay	;wreg free
  6577  00165C  C0D6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6578  001660  C0D5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6579  001664  C0D4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6580  001668  C0D3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6581  00166C  C0D2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6582  001670  C0D1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6583  001674  C0D0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6584  001678  C0CF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6585  00167C  C0CE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6586  001680  C0CD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6587  001684  C0CC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6588  001688  C0CB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6589  00168C  C0CA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6590  001690  C0C9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6591  001694  0011               	retfie		f
  6592  001696                     __end_of_InterruptHandlerHigh:
  6593                           	opt stack 0
  6594                           pclatu	equ	0xFFB
  6595                           pclath	equ	0xFFA
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           prodh	equ	0xFF4
  6601                           prodl	equ	0xFF3
  6602                           intcon	equ	0xFF2
  6603                           postinc0	equ	0xFEE
  6604                           fsr0h	equ	0xFEA
  6605                           fsr0l	equ	0xFE9
  6606                           wreg	equ	0xFE8
  6607                           indf1	equ	0xFE7
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           bsr	equ	0xFE0
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function _timer0_int_handler *****************
  6619 ;; Defined at:
  6620 ;;		line 16 in file "src/user_interrupts.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  val             2   15[BANK0 ] unsigned int 
  6625 ;;  msgtype         2   13[BANK0 ] int 
  6626 ;;  length          2   11[BANK0 ] int 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;		None               void
  6629 ;; Registers used:
  6630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6636 ;;      Params:         0       0       0       0       0
  6637 ;;      Locals:         0       6       0       0       0
  6638 ;;      Temps:          0       1       0       0       0
  6639 ;;      Totals:         0       7       0       0       0
  6640 ;;Total ram usage:        7 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    3
  6643 ;; This function calls:
  6644 ;;		_FromMainHigh_recvmsg
  6645 ;;		_ToMainHigh_sendmsg
  6646 ;;		_WriteTimer0
  6647 ;; This function is called by:
  6648 ;;		_InterruptHandlerHigh
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text44
  6653  001590                     __ptext44:
  6654                           	opt stack 0
  6655  001590                     _timer0_int_handler:
  6656                           	opt stack 16
  6657                           
  6658                           ;user_interrupts.c: 17: unsigned int val;
  6659                           ;user_interrupts.c: 18: int length, msgtype;
  6660                           ;user_interrupts.c: 25: WriteTimer0(0);
  6661                           
  6662                           ;incstack = 0
  6663  001590  0E00               	movlw	0
  6664  001592  6E36               	movwf	WriteTimer0@timer0+1,c
  6665  001594  0E00               	movlw	0
  6666  001596  6E35               	movwf	WriteTimer0@timer0,c
  6667  001598  EC3A  F00F         	call	_WriteTimer0	;wreg free
  6668                           
  6669                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6670  00159C  0100               	movlb	0	; () banked
  6671  00159E  0E00               	movlw	high timer0_int_handler@msgtype
  6672  0015A0  0100               	movlb	0	; () banked
  6673  0015A2  0100               	movlb	0	; () banked
  6674  0015A4  6FBC               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6675  0015A6  0100               	movlb	0	; () banked
  6676  0015A8  0EC3               	movlw	low timer0_int_handler@msgtype
  6677  0015AA  0100               	movlb	0	; () banked
  6678  0015AC  0100               	movlb	0	; () banked
  6679  0015AE  6FBB               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6680  0015B0  0100               	movlb	0	; () banked
  6681  0015B2  0E00               	movlw	high timer0_int_handler@val
  6682  0015B4  0100               	movlb	0	; () banked
  6683  0015B6  0100               	movlb	0	; () banked
  6684  0015B8  6FBE               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6685  0015BA  0100               	movlb	0	; () banked
  6686  0015BC  0EC5               	movlw	low timer0_int_handler@val
  6687  0015BE  0100               	movlb	0	; () banked
  6688  0015C0  0100               	movlb	0	; () banked
  6689  0015C2  6FBD               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6690  0015C4  0E02               	movlw	2
  6691  0015C6  EC12  F00E         	call	_FromMainHigh_recvmsg
  6692  0015CA  0100               	movlb	0	; () banked
  6693  0015CC  0100               	movlb	0	; () banked
  6694  0015CE  6FC1               	movwf	timer0_int_handler@length& (0+255),b
  6695  0015D0  0100               	movlb	0	; () banked
  6696  0015D2  6BC2               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6697  0015D4  0100               	movlb	0	; () banked
  6698  0015D6  BFC1               	btfsc	timer0_int_handler@length& (0+255),7,b
  6699  0015D8  07C2               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6703  0015DA  0100               	movlb	0	; () banked
  6704  0015DC  0100               	movlb	0	; () banked
  6705  0015DE  51C1               	movf	timer0_int_handler@length& (0+255),w,b
  6706  0015E0  0A02               	xorlw	2
  6707  0015E2  11C2               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6708  0015E4  A4D8               	btfss	status,2,c
  6709  0015E6  0012               	return	
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6713  0015E8  0100               	movlb	0	; () banked
  6714  0015EA  6FC0               	movwf	??_timer0_int_handler& (0+255),b
  6715  0015EC  0E0A               	movlw	10
  6716  0015EE  0100               	movlb	0	; () banked
  6717  0015F0  0100               	movlb	0	; () banked
  6718  0015F2  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6719  0015F4  0100               	movlb	0	; () banked
  6720  0015F6  51C0               	movf	??_timer0_int_handler& (0+255),w,b
  6721  0015F8  0100               	movlb	0	; () banked
  6722  0015FA  0E00               	movlw	high timer0_int_handler@val
  6723  0015FC  0100               	movlb	0	; () banked
  6724  0015FE  0100               	movlb	0	; () banked
  6725  001600  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6726  001602  0100               	movlb	0	; () banked
  6727  001604  0EC5               	movlw	low timer0_int_handler@val
  6728  001606  0100               	movlb	0	; () banked
  6729  001608  0100               	movlb	0	; () banked
  6730  00160A  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6731  00160C  0E02               	movlw	2
  6732  00160E  EC6F  F00E         	call	_ToMainHigh_sendmsg
  6733  001612  0012               	return	
  6734  001614                     __end_of_timer0_int_handler:
  6735                           	opt stack 0
  6736                           pclatu	equ	0xFFB
  6737                           pclath	equ	0xFFA
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           intcon	equ	0xFF2
  6745                           postinc0	equ	0xFEE
  6746                           fsr0h	equ	0xFEA
  6747                           fsr0l	equ	0xFE9
  6748                           wreg	equ	0xFE8
  6749                           indf1	equ	0xFE7
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           bsr	equ	0xFE0
  6753                           indf2	equ	0xFDF
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           fsr2h	equ	0xFDA
  6757                           fsr2l	equ	0xFD9
  6758                           status	equ	0xFD8
  6759                           
  6760 ;; *************** function _WriteTimer0 *****************
  6761 ;; Defined at:
  6762 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  timer0          2   52[COMRAM] unsigned int 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  timer           2   54[COMRAM] struct Timers
  6767 ;; Return value:  Size  Location     Type
  6768 ;;		None               void
  6769 ;; Registers used:
  6770 ;;		None
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6776 ;;      Params:         2       0       0       0       0
  6777 ;;      Locals:         2       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0
  6779 ;;      Totals:         4       0       0       0       0
  6780 ;;Total ram usage:        4 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_timer0_int_handler
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text45
  6790  001E74                     __ptext45:
  6791                           	opt stack 0
  6792  001E74                     _WriteTimer0:
  6793                           	opt stack 18
  6794                           
  6795                           ;incstack = 0
  6796  001E74  C035  F037         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6797  001E78  C036  F038         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6798  001E7C  C038  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6799  001E80  C037  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6800  001E84  0012               	return	
  6801  001E86                     __end_of_WriteTimer0:
  6802                           	opt stack 0
  6803                           pclatu	equ	0xFFB
  6804                           pclath	equ	0xFFA
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           postinc0	equ	0xFEE
  6813                           fsr0h	equ	0xFEA
  6814                           fsr0l	equ	0xFE9
  6815                           wreg	equ	0xFE8
  6816                           indf1	equ	0xFE7
  6817                           fsr1h	equ	0xFE2
  6818                           fsr1l	equ	0xFE1
  6819                           bsr	equ	0xFE0
  6820                           indf2	equ	0xFDF
  6821                           postinc2	equ	0xFDE
  6822                           postdec2	equ	0xFDD
  6823                           fsr2h	equ	0xFDA
  6824                           fsr2l	equ	0xFD9
  6825                           status	equ	0xFD8
  6826                           
  6827 ;; *************** function _FromMainHigh_recvmsg *****************
  6828 ;; Defined at:
  6829 ;;		line 183 in file "src/messages.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  maxlength       1    wreg     unsigned char 
  6832 ;;  msgtype         2    5[BANK0 ] PTR unsigned char 
  6833 ;;		 -> timer0_int_handler@msgtype(2), 
  6834 ;;  data            2    7[BANK0 ] PTR void 
  6835 ;;		 -> timer0_int_handler@val(2), 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  maxlength       1    9[BANK0 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      char 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6847 ;;      Params:         0       4       0       0       0
  6848 ;;      Locals:         0       1       0       0       0
  6849 ;;      Temps:          0       0       0       0       0
  6850 ;;      Totals:         0       5       0       0       0
  6851 ;;Total ram usage:        5 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    2
  6854 ;; This function calls:
  6855 ;;		i2_recv_msg
  6856 ;; This function is called by:
  6857 ;;		_timer0_int_handler
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text46
  6862  001C24                     __ptext46:
  6863                           	opt stack 0
  6864  001C24                     _FromMainHigh_recvmsg:
  6865                           	opt stack 16
  6866                           
  6867                           ;incstack = 0
  6868                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6869  001C24  CFE8 F0BF          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6870                           
  6871                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6872  001C28  0101               	movlb	1	; () banked
  6873  001C2A  0E01               	movlw	high _FromMainHigh_MQ
  6874  001C2C  6E40               	movwf	i2recv_msg@qptr+1,c
  6875  001C2E  0101               	movlb	1	; () banked
  6876  001C30  0E00               	movlw	low _FromMainHigh_MQ
  6877  001C32  6E3F               	movwf	i2recv_msg@qptr,c
  6878  001C34  C0BF  F041         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6879  001C38  0100               	movlb	0	; () banked
  6880  001C3A  C0BC  F043         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6881  001C3E  0100               	movlb	0	; () banked
  6882  001C40  C0BB  F042         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6883  001C44  0100               	movlb	0	; () banked
  6884  001C46  C0BE  F045         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6885  001C4A  0100               	movlb	0	; () banked
  6886  001C4C  C0BD  F044         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6887  001C50  EC6A  F007         	call	i2_recv_msg	;wreg free
  6888  001C54  0012               	return	
  6889  001C56                     __end_of_FromMainHigh_recvmsg:
  6890                           	opt stack 0
  6891                           pclatu	equ	0xFFB
  6892                           pclath	equ	0xFFA
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           prodh	equ	0xFF4
  6898                           prodl	equ	0xFF3
  6899                           intcon	equ	0xFF2
  6900                           postinc0	equ	0xFEE
  6901                           fsr0h	equ	0xFEA
  6902                           fsr0l	equ	0xFE9
  6903                           wreg	equ	0xFE8
  6904                           indf1	equ	0xFE7
  6905                           fsr1h	equ	0xFE2
  6906                           fsr1l	equ	0xFE1
  6907                           bsr	equ	0xFE0
  6908                           indf2	equ	0xFDF
  6909                           postinc2	equ	0xFDE
  6910                           postdec2	equ	0xFDD
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function i2_recv_msg *****************
  6916 ;; Defined at:
  6917 ;;		line 63 in file "src/messages.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  6920 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6921 ;;  maxlength       1   64[COMRAM] unsigned char 
  6922 ;;  msgtype         2   65[COMRAM] PTR unsigned char 
  6923 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6924 ;;  data            2   67[COMRAM] PTR void 
  6925 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
  6928 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6929 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6930 ;;  recv_msg        2    1[BANK0 ] unsigned int 
  6931 ;;  recv_msg        1    0[BANK0 ] unsigned char 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      char 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6941 ;;      Params:         7       0       0       0       0
  6942 ;;      Locals:         0       5       0       0       0
  6943 ;;      Temps:          2       0       0       0       0
  6944 ;;      Totals:         9       5       0       0       0
  6945 ;;Total ram usage:       14 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    1
  6948 ;; This function calls:
  6949 ;;		i2_memcpy
  6950 ;; This function is called by:
  6951 ;;		_FromMainHigh_recvmsg
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text47
  6956  000ED4                     __ptext47:
  6957                           	opt stack 0
  6958  000ED4                     i2_recv_msg:
  6959                           	opt stack 16
  6960                           
  6961                           ;messages.c: 64: unsigned char slot;
  6962                           ;messages.c: 68: msg *qmsg;
  6963                           ;messages.c: 69: size_t tlength;
  6964                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6965                           
  6966                           ;incstack = 0
  6967  000ED4  EE20 F035          	lfsr	2,53
  6968  000ED8  503F               	movf	i2recv_msg@qptr,w,c
  6969  000EDA  26D9               	addwf	fsr2l,f,c
  6970  000EDC  5040               	movf	i2recv_msg@qptr+1,w,c
  6971  000EDE  22DA               	addwfc	fsr2h,f,c
  6972  000EE0  50DF               	movf	indf2,w,c
  6973  000EE2  0100               	movlb	0	; () banked
  6974  000EE4  0100               	movlb	0	; () banked
  6975  000EE6  6FB6               	movwf	i2recv_msg@slot& (0+255),b
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6979  000EE8  0100               	movlb	0	; () banked
  6980  000EEA  0100               	movlb	0	; () banked
  6981  000EEC  51B6               	movf	i2recv_msg@slot& (0+255),w,b
  6982  000EEE  0D0D               	mullw	13
  6983  000EF0  50F3               	movf	prodl,w,c
  6984  000EF2  243F               	addwf	i2recv_msg@qptr,w,c
  6985  000EF4  0100               	movlb	0	; () banked
  6986  000EF6  0100               	movlb	0	; () banked
  6987  000EF8  6FB9               	movwf	i2recv_msg@qmsg& (0+255),b
  6988  000EFA  50F4               	movf	prodh,w,c
  6989  000EFC  2040               	addwfc	i2recv_msg@qptr+1,w,c
  6990  000EFE  0100               	movlb	0	; () banked
  6991  000F00  6FBA               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;messages.c: 74: if (qmsg->full == 1) {
  6995  000F02  0E01               	movlw	1
  6996  000F04  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6997  000F08  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6998  000F0C  62DF               	cpfseq	indf2,c
  6999  000F0E  D062               	goto	i2l3948
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7003  000F10  0100               	movlb	0	; () banked
  7004  000F12  EE20 F001          	lfsr	2,1
  7005  000F16  0100               	movlb	0	; () banked
  7006  000F18  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  7007  000F1A  26D9               	addwf	fsr2l,f,c
  7008  000F1C  0100               	movlb	0	; () banked
  7009  000F1E  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7010  000F20  22DA               	addwfc	fsr2h,f,c
  7011  000F22  50DF               	movf	indf2,w,c
  7012  000F24  5C41               	subwf	i2recv_msg@maxlength,w,c
  7013  000F26  B0D8               	btfsc	status,0,c
  7014  000F28  D002               	goto	i2l3932
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;messages.c: 77: return (-3);
  7018  000F2A  0EFD               	movlw	253
  7019  000F2C  0012               	return	
  7020  000F2E                     i2l3932:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;messages.c: 78: }
  7024                           ;messages.c: 80: tlength = qmsg->length;
  7025  000F2E  0100               	movlb	0	; () banked
  7026  000F30  EE20 F001          	lfsr	2,1
  7027  000F34  0100               	movlb	0	; () banked
  7028  000F36  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  7029  000F38  26D9               	addwf	fsr2l,f,c
  7030  000F3A  0100               	movlb	0	; () banked
  7031  000F3C  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7032  000F3E  22DA               	addwfc	fsr2h,f,c
  7033  000F40  50DF               	movf	indf2,w,c
  7034  000F42  6E46               	movwf	??i2_recv_msg& (0+255),c
  7035  000F44  5046               	movf	??i2_recv_msg,w,c
  7036  000F46  0100               	movlb	0	; () banked
  7037  000F48  0100               	movlb	0	; () banked
  7038  000F4A  6FB7               	movwf	i2recv_msg@tlength& (0+255),b
  7039  000F4C  0100               	movlb	0	; () banked
  7040  000F4E  6BB8               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7044  000F50  C045  F036         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7045  000F54  C044  F035         	movff	i2recv_msg@data,i2memcpy@d1
  7046  000F58  0E03               	movlw	3
  7047  000F5A  0100               	movlb	0	; () banked
  7048  000F5C  0100               	movlb	0	; () banked
  7049  000F5E  25B9               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7050  000F60  6E46               	movwf	??i2_recv_msg& (0+255),c
  7051  000F62  0E00               	movlw	0
  7052  000F64  0100               	movlb	0	; () banked
  7053  000F66  0100               	movlb	0	; () banked
  7054  000F68  21BA               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7055  000F6A  6E47               	movwf	(??i2_recv_msg+1)& (0+255),c
  7056  000F6C  C046  F037         	movff	??i2_recv_msg,i2memcpy@s1
  7057  000F70  C047  F038         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7058  000F74  C0B7  F039         	movff	i2recv_msg@tlength,i2memcpy@n
  7059  000F78  C0B8  F03A         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7060  000F7C  EC66  F00D         	call	i2_memcpy	;wreg free
  7061                           
  7062                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7063  000F80  EE20 F035          	lfsr	2,53
  7064  000F84  503F               	movf	i2recv_msg@qptr,w,c
  7065  000F86  26D9               	addwf	fsr2l,f,c
  7066  000F88  5040               	movf	i2recv_msg@qptr+1,w,c
  7067  000F8A  22DA               	addwfc	fsr2h,f,c
  7068  000F8C  EE10 F035          	lfsr	1,53
  7069  000F90  503F               	movf	i2recv_msg@qptr,w,c
  7070  000F92  26E1               	addwf	fsr1l,f,c
  7071  000F94  5040               	movf	i2recv_msg@qptr+1,w,c
  7072  000F96  22E2               	addwfc	fsr1h,f,c
  7073  000F98  50E7               	movf	indf1,w,c
  7074  000F9A  6E46               	movwf	??i2_recv_msg& (0+255),c
  7075  000F9C  2846               	incf	??i2_recv_msg,w,c
  7076  000F9E  0B03               	andlw	3
  7077  000FA0  6EDF               	movwf	indf2,c
  7078                           
  7079                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7080  000FA2  0100               	movlb	0	; () banked
  7081  000FA4  EE20 F002          	lfsr	2,2
  7082  000FA8  0100               	movlb	0	; () banked
  7083  000FAA  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  7084  000FAC  26D9               	addwf	fsr2l,f,c
  7085  000FAE  0100               	movlb	0	; () banked
  7086  000FB0  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7087  000FB2  22DA               	addwfc	fsr2h,f,c
  7088  000FB4  C042  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7089  000FB8  C043  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7090  000FBC  CFDF FFE7          	movff	indf2,indf1
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;messages.c: 91: qmsg->full = 0;
  7094  000FC0  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7095  000FC4  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7096  000FC8  0E00               	movlw	0
  7097  000FCA  6EDF               	movwf	indf2,c
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;messages.c: 92: return (tlength);
  7101  000FCC  0100               	movlb	0	; () banked
  7102  000FCE  0100               	movlb	0	; () banked
  7103  000FD0  51B7               	movf	i2recv_msg@tlength& (0+255),w,b
  7104  000FD2  0012               	return	
  7105  000FD4                     i2l3948:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;messages.c: 94: return (-4);
  7109  000FD4  0EFC               	movlw	252
  7110  000FD6  0012               	return	
  7111  000FD8                     __end_ofi2_recv_msg:
  7112                           	opt stack 0
  7113                           pclatu	equ	0xFFB
  7114                           pclath	equ	0xFFA
  7115                           tblptru	equ	0xFF8
  7116                           tblptrh	equ	0xFF7
  7117                           tblptrl	equ	0xFF6
  7118                           tablat	equ	0xFF5
  7119                           prodh	equ	0xFF4
  7120                           prodl	equ	0xFF3
  7121                           intcon	equ	0xFF2
  7122                           postinc0	equ	0xFEE
  7123                           fsr0h	equ	0xFEA
  7124                           fsr0l	equ	0xFE9
  7125                           wreg	equ	0xFE8
  7126                           indf1	equ	0xFE7
  7127                           fsr1h	equ	0xFE2
  7128                           fsr1l	equ	0xFE1
  7129                           bsr	equ	0xFE0
  7130                           indf2	equ	0xFDF
  7131                           postinc2	equ	0xFDE
  7132                           postdec2	equ	0xFDD
  7133                           fsr2h	equ	0xFDA
  7134                           fsr2l	equ	0xFD9
  7135                           status	equ	0xFD8
  7136                           
  7137 ;; *************** function _i2c_int_handler *****************
  7138 ;; Defined at:
  7139 ;;		line 100 in file "src/my_i2c.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  error_buf       3   10[BANK0 ] unsigned char [3]
  7144 ;;  data_read       1   18[BANK0 ] unsigned char 
  7145 ;;  msg_ready       1   17[BANK0 ] unsigned char 
  7146 ;;  msg_to_send     1   16[BANK0 ] unsigned char 
  7147 ;;  i2c_data        1   15[BANK0 ] unsigned char 
  7148 ;;  overrun_erro    1   14[BANK0 ] unsigned char 
  7149 ;;  data_written    1   13[BANK0 ] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;		None               void
  7152 ;; Registers used:
  7153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7159 ;;      Params:         0       0       0       0       0
  7160 ;;      Locals:         0       9       0       0       0
  7161 ;;      Temps:          0       2       0       0       0
  7162 ;;      Totals:         0      11       0       0       0
  7163 ;;Total ram usage:       11 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    3
  7166 ;; This function calls:
  7167 ;;		_ToMainHigh_sendmsg
  7168 ;;		_handle_start
  7169 ;; This function is called by:
  7170 ;;		_InterruptHandlerHigh
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text48
  7175  0000C6                     __ptext48:
  7176                           	opt stack 0
  7177  0000C6                     _i2c_int_handler:
  7178                           	opt stack 16
  7179                           
  7180                           ;my_i2c.c: 101: unsigned char i2c_data;
  7181                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;incstack = 0
  7185  0000C6  0100               	movlb	0	; () banked
  7186  0000C8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7187  0000CA  0E00               	movlw	0
  7188  0000CC  0100               	movlb	0	; () banked
  7189  0000CE  0100               	movlb	0	; () banked
  7190  0000D0  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7191  0000D2  0100               	movlb	0	; () banked
  7192  0000D4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7193                           
  7194                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7195  0000D6  0100               	movlb	0	; () banked
  7196  0000D8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7197  0000DA  0E00               	movlw	0
  7198  0000DC  0100               	movlb	0	; () banked
  7199  0000DE  0100               	movlb	0	; () banked
  7200  0000E0  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7201  0000E2  0100               	movlb	0	; () banked
  7202  0000E4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7203                           
  7204                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7205  0000E6  0100               	movlb	0	; () banked
  7206  0000E8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7207  0000EA  0E00               	movlw	0
  7208  0000EC  0100               	movlb	0	; () banked
  7209  0000EE  0100               	movlb	0	; () banked
  7210  0000F0  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7211  0000F2  0100               	movlb	0	; () banked
  7212  0000F4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7213                           
  7214                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7215  0000F6  0100               	movlb	0	; () banked
  7216  0000F8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7217  0000FA  0E00               	movlw	0
  7218  0000FC  0100               	movlb	0	; () banked
  7219  0000FE  0100               	movlb	0	; () banked
  7220  000100  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7221  000102  0100               	movlb	0	; () banked
  7222  000104  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7223                           
  7224                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7225  000106  0100               	movlb	0	; () banked
  7226  000108  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7227  00010A  0E00               	movlw	0
  7228  00010C  0100               	movlb	0	; () banked
  7229  00010E  0100               	movlb	0	; () banked
  7230  000110  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7231  000112  0100               	movlb	0	; () banked
  7232  000114  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7236                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7237  000116  ACC6               	btfss	4038,6,c	;volatile
  7238  000118  D029               	goto	i2l3288
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7242  00011A  9CC6               	bcf	4038,6,c	;volatile
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7246  00011C  0100               	movlb	0	; () banked
  7247  00011E  EE20 F00C          	lfsr	2,12
  7248  000122  0100               	movlb	0	; () banked
  7249  000124  51DD               	movf	_ic_ptr& (0+255),w,b
  7250  000126  26D9               	addwf	fsr2l,f,c
  7251  000128  0100               	movlb	0	; () banked
  7252  00012A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7253  00012C  22DA               	addwfc	fsr2h,f,c
  7254  00012E  0E05               	movlw	5
  7255  000130  6EDF               	movwf	indf2,c
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;my_i2c.c: 116: overrun_error = 1;
  7259  000132  0100               	movlb	0	; () banked
  7260  000134  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7261  000136  0E01               	movlw	1
  7262  000138  0100               	movlb	0	; () banked
  7263  00013A  0100               	movlb	0	; () banked
  7264  00013C  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7265  00013E  0100               	movlb	0	; () banked
  7266  000140  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7270  000142  0100               	movlb	0	; () banked
  7271  000144  EE20 F00E          	lfsr	2,14
  7272  000148  0100               	movlb	0	; () banked
  7273  00014A  51DD               	movf	_ic_ptr& (0+255),w,b
  7274  00014C  26D9               	addwf	fsr2l,f,c
  7275  00014E  0100               	movlb	0	; () banked
  7276  000150  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7277  000152  22DA               	addwfc	fsr2h,f,c
  7278  000154  2ADF               	incf	indf2,f,c
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7282  000156  0100               	movlb	0	; () banked
  7283  000158  EE20 F00D          	lfsr	2,13
  7284  00015C  0100               	movlb	0	; () banked
  7285  00015E  51DD               	movf	_ic_ptr& (0+255),w,b
  7286  000160  26D9               	addwf	fsr2l,f,c
  7287  000162  0100               	movlb	0	; () banked
  7288  000164  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7289  000166  22DA               	addwfc	fsr2h,f,c
  7290  000168  0E04               	movlw	4
  7291  00016A  6EDF               	movwf	indf2,c
  7292  00016C                     i2l3288:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 119: }
  7296                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7297  00016C  A0C7               	btfss	4039,0,c	;volatile
  7298  00016E  D00A               	goto	i2l3294
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7302  000170  CFC9 F0C5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;my_i2c.c: 123: data_read = 1;
  7306  000174  0100               	movlb	0	; () banked
  7307  000176  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7308  000178  0E01               	movlw	1
  7309  00017A  0100               	movlb	0	; () banked
  7310  00017C  0100               	movlb	0	; () banked
  7311  00017E  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7312  000180  0100               	movlb	0	; () banked
  7313  000182  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7314  000184                     i2l3294:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;my_i2c.c: 124: }
  7318                           ;my_i2c.c: 126: if (!overrun_error) {
  7319  000184  0100               	movlb	0	; () banked
  7320  000186  0100               	movlb	0	; () banked
  7321  000188  67C4               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7322  00018A  D1CE               	goto	i2l277
  7323  00018C  D1B7               	goto	i2l3382
  7324  00018E                     i2l279:
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;my_i2c.c: 129: {
  7328                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7329  00018E  A6C7               	btfss	4039,3,c	;volatile
  7330  000190  D1CB               	goto	i2l277
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;my_i2c.c: 132: handle_start(data_read);
  7334  000192  0100               	movlb	0	; () banked
  7335  000194  0100               	movlb	0	; () banked
  7336  000196  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7337  000198  EC33  F009         	call	_handle_start
  7338                           
  7339                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7340  00019C  0100               	movlb	0	; () banked
  7341  00019E  EE20 F00C          	lfsr	2,12
  7342  0001A2  0100               	movlb	0	; () banked
  7343  0001A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7344  0001A6  26D9               	addwf	fsr2l,f,c
  7345  0001A8  0100               	movlb	0	; () banked
  7346  0001AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7347  0001AC  22DA               	addwfc	fsr2h,f,c
  7348  0001AE  0E08               	movlw	8
  7349  0001B0  62DF               	cpfseq	indf2,c
  7350  0001B2  D1BA               	goto	i2l277
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;my_i2c.c: 135: data_read = 0;
  7354  0001B4  0100               	movlb	0	; () banked
  7355  0001B6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7356  0001B8  0E00               	movlw	0
  7357  0001BA  0100               	movlb	0	; () banked
  7358  0001BC  0100               	movlb	0	; () banked
  7359  0001BE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7360  0001C0  0100               	movlb	0	; () banked
  7361  0001C2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7362                           
  7363                           ;my_i2c.c: 136: msg_to_send = 1;
  7364  0001C4  0100               	movlb	0	; () banked
  7365  0001C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7366  0001C8  0E01               	movlw	1
  7367  0001CA  0100               	movlb	0	; () banked
  7368  0001CC  0100               	movlb	0	; () banked
  7369  0001CE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7370  0001D0  D187               	goto	L12
  7371  0001D2                     i2l283:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 142: {
  7375                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7376  0001D2  A8C7               	btfss	4039,4,c	;volatile
  7377  0001D4  D030               	goto	i2l3314
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7381  0001D6  0100               	movlb	0	; () banked
  7382  0001D8  EE20 F00B          	lfsr	2,11
  7383  0001DC  0100               	movlb	0	; () banked
  7384  0001DE  51DD               	movf	_ic_ptr& (0+255),w,b
  7385  0001E0  26D9               	addwf	fsr2l,f,c
  7386  0001E2  0100               	movlb	0	; () banked
  7387  0001E4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7388  0001E6  22DA               	addwfc	fsr2h,f,c
  7389  0001E8  2ADF               	incf	indf2,f,c
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;my_i2c.c: 148: if (data_read) {
  7393  0001EA  0100               	movlb	0	; () banked
  7394  0001EC  0100               	movlb	0	; () banked
  7395  0001EE  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7396  0001F0  B4D8               	btfsc	status,2,c
  7397  0001F2  D179               	goto	L14
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7401  0001F4  BAC7               	btfsc	4039,5,c	;volatile
  7402  0001F6  D009               	goto	i2l3312
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;my_i2c.c: 150: msg_ready = 1;
  7406  0001F8  0100               	movlb	0	; () banked
  7407  0001FA  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7408  0001FC  0E01               	movlw	1
  7409  0001FE  0100               	movlb	0	; () banked
  7410  000200  0100               	movlb	0	; () banked
  7411  000202  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7412  000204  0100               	movlb	0	; () banked
  7413  000206  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7414                           
  7415                           ;my_i2c.c: 151: } else {
  7416  000208  D16E               	goto	L14
  7417  00020A                     i2l3312:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7421  00020A  0100               	movlb	0	; () banked
  7422  00020C  EE20 F00E          	lfsr	2,14
  7423  000210  0100               	movlb	0	; () banked
  7424  000212  51DD               	movf	_ic_ptr& (0+255),w,b
  7425  000214  26D9               	addwf	fsr2l,f,c
  7426  000216  0100               	movlb	0	; () banked
  7427  000218  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7428  00021A  22DA               	addwfc	fsr2h,f,c
  7429  00021C  2ADF               	incf	indf2,f,c
  7430                           
  7431                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7432  00021E  0100               	movlb	0	; () banked
  7433  000220  EE20 F00D          	lfsr	2,13
  7434  000224  0100               	movlb	0	; () banked
  7435  000226  51DD               	movf	_ic_ptr& (0+255),w,b
  7436  000228  26D9               	addwf	fsr2l,f,c
  7437  00022A  0100               	movlb	0	; () banked
  7438  00022C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7439  00022E  22DA               	addwfc	fsr2h,f,c
  7440  000230  0E06               	movlw	6
  7441  000232  6EDF               	movwf	indf2,c
  7442                           
  7443                           ; BSR set to: 0
  7444  000234  D158               	goto	L14
  7445  000236                     i2l3314:
  7446                           
  7447                           ; BSR set to: 0
  7448  000236  0100               	movlb	0	; () banked
  7449  000238  0100               	movlb	0	; () banked
  7450  00023A  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7451  00023C  B4D8               	btfsc	status,2,c
  7452  00023E  D174               	goto	i2l277
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7456  000240  0100               	movlb	0	; () banked
  7457  000242  EE20 F00B          	lfsr	2,11
  7458  000246  0100               	movlb	0	; () banked
  7459  000248  51DD               	movf	_ic_ptr& (0+255),w,b
  7460  00024A  26D9               	addwf	fsr2l,f,c
  7461  00024C  0100               	movlb	0	; () banked
  7462  00024E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7463  000250  22DA               	addwfc	fsr2h,f,c
  7464  000252  2ADF               	incf	indf2,f,c
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7468  000254  BAC7               	btfsc	4039,5,c	;volatile
  7469  000256  D019               	goto	i2l3330
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7473  000258  B4C7               	btfsc	4039,2,c	;volatile
  7474  00025A  D00B               	goto	i2l3324
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7478  00025C  0100               	movlb	0	; () banked
  7479  00025E  EE20 F00C          	lfsr	2,12
  7480  000262  0100               	movlb	0	; () banked
  7481  000264  51DD               	movf	_ic_ptr& (0+255),w,b
  7482  000266  26D9               	addwf	fsr2l,f,c
  7483  000268  0100               	movlb	0	; () banked
  7484  00026A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7485  00026C  22DA               	addwfc	fsr2h,f,c
  7486  00026E  0E07               	movlw	7
  7487  000270  D076               	goto	L11
  7488  000272                     i2l3324:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7492  000272  0100               	movlb	0	; () banked
  7493  000274  EE20 F00C          	lfsr	2,12
  7494  000278  0100               	movlb	0	; () banked
  7495  00027A  51DD               	movf	_ic_ptr& (0+255),w,b
  7496  00027C  26D9               	addwf	fsr2l,f,c
  7497  00027E  0100               	movlb	0	; () banked
  7498  000280  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7499  000282  22DA               	addwfc	fsr2h,f,c
  7500  000284  0E08               	movlw	8
  7501  000286  6EDF               	movwf	indf2,c
  7502  000288  D11D               	goto	L15
  7503  00028A                     i2l3330:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7507  00028A  0100               	movlb	0	; () banked
  7508  00028C  EE20 F00E          	lfsr	2,14
  7509  000290  0100               	movlb	0	; () banked
  7510  000292  51DD               	movf	_ic_ptr& (0+255),w,b
  7511  000294  26D9               	addwf	fsr2l,f,c
  7512  000296  0100               	movlb	0	; () banked
  7513  000298  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7514  00029A  22DA               	addwfc	fsr2h,f,c
  7515  00029C  2ADF               	incf	indf2,f,c
  7516                           
  7517                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7518  00029E  0100               	movlb	0	; () banked
  7519  0002A0  EE20 F00C          	lfsr	2,12
  7520  0002A4  0100               	movlb	0	; () banked
  7521  0002A6  51DD               	movf	_ic_ptr& (0+255),w,b
  7522  0002A8  26D9               	addwf	fsr2l,f,c
  7523  0002AA  0100               	movlb	0	; () banked
  7524  0002AC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7525  0002AE  22DA               	addwfc	fsr2h,f,c
  7526  0002B0  0E05               	movlw	5
  7527  0002B2  6EDF               	movwf	indf2,c
  7528                           
  7529                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7530  0002B4  0100               	movlb	0	; () banked
  7531  0002B6  EE20 F00D          	lfsr	2,13
  7532  0002BA  0100               	movlb	0	; () banked
  7533  0002BC  51DD               	movf	_ic_ptr& (0+255),w,b
  7534  0002BE  26D9               	addwf	fsr2l,f,c
  7535  0002C0  0100               	movlb	0	; () banked
  7536  0002C2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7537  0002C4  22DA               	addwfc	fsr2h,f,c
  7538  0002C6  0E06               	movlw	6
  7539  0002C8  D04A               	goto	L11
  7540  0002CA                     i2l3332:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;my_i2c.c: 177: {
  7544                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7545  0002CA  0100               	movlb	0	; () banked
  7546  0002CC  EE20 F01A          	lfsr	2,26
  7547  0002D0  0100               	movlb	0	; () banked
  7548  0002D2  51DD               	movf	_ic_ptr& (0+255),w,b
  7549  0002D4  26D9               	addwf	fsr2l,f,c
  7550  0002D6  0100               	movlb	0	; () banked
  7551  0002D8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7552  0002DA  22DA               	addwfc	fsr2h,f,c
  7553  0002DC  50DF               	movf	indf2,w,c
  7554  0002DE  0100               	movlb	0	; () banked
  7555  0002E0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7556  0002E2  0100               	movlb	0	; () banked
  7557  0002E4  EE20 F019          	lfsr	2,25
  7558  0002E8  0100               	movlb	0	; () banked
  7559  0002EA  51DD               	movf	_ic_ptr& (0+255),w,b
  7560  0002EC  26D9               	addwf	fsr2l,f,c
  7561  0002EE  0100               	movlb	0	; () banked
  7562  0002F0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7563  0002F2  22DA               	addwfc	fsr2h,f,c
  7564  0002F4  50DF               	movf	indf2,w,c
  7565  0002F6  0100               	movlb	0	; () banked
  7566  0002F8  5DBE               	subwf	??_i2c_int_handler& (0+255),w,b
  7567  0002FA  B0D8               	btfsc	status,0,c
  7568  0002FC  D0F4               	goto	L14
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7572  0002FE  0100               	movlb	0	; () banked
  7573  000300  EE20 F01A          	lfsr	2,26
  7574  000304  0100               	movlb	0	; () banked
  7575  000306  51DD               	movf	_ic_ptr& (0+255),w,b
  7576  000308  26D9               	addwf	fsr2l,f,c
  7577  00030A  0100               	movlb	0	; () banked
  7578  00030C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7579  00030E  22DA               	addwfc	fsr2h,f,c
  7580  000310  50DF               	movf	indf2,w,c
  7581  000312  0100               	movlb	0	; () banked
  7582  000314  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7583  000316  0100               	movlb	0	; () banked
  7584  000318  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7585  00031A  0D01               	mullw	1
  7586  00031C  0E0F               	movlw	15
  7587  00031E  26F3               	addwf	prodl,f,c
  7588  000320  0E00               	movlw	0
  7589  000322  22F4               	addwfc	prodh,f,c
  7590  000324  50F3               	movf	prodl,w,c
  7591  000326  0100               	movlb	0	; () banked
  7592  000328  0100               	movlb	0	; () banked
  7593  00032A  25DD               	addwf	_ic_ptr& (0+255),w,b
  7594  00032C  6ED9               	movwf	fsr2l,c
  7595  00032E  50F4               	movf	prodh,w,c
  7596  000330  0100               	movlb	0	; () banked
  7597  000332  0100               	movlb	0	; () banked
  7598  000334  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7599  000336  6EDA               	movwf	fsr2h,c
  7600  000338  50DF               	movf	indf2,w,c
  7601  00033A  6EC9               	movwf	4041,c	;volatile
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7605  00033C  0100               	movlb	0	; () banked
  7606  00033E  EE20 F01A          	lfsr	2,26
  7607  000342  0100               	movlb	0	; () banked
  7608  000344  51DD               	movf	_ic_ptr& (0+255),w,b
  7609  000346  26D9               	addwf	fsr2l,f,c
  7610  000348  0100               	movlb	0	; () banked
  7611  00034A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7612  00034C  22DA               	addwfc	fsr2h,f,c
  7613  00034E  2ADF               	incf	indf2,f,c
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 181: data_written = 1;
  7617  000350  0100               	movlb	0	; () banked
  7618  000352  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7619  000354  0E01               	movlw	1
  7620  000356  0100               	movlb	0	; () banked
  7621  000358  0100               	movlb	0	; () banked
  7622  00035A  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7623  00035C  D0C1               	goto	L12
  7624  00035E                     L11:
  7625  00035E  6EDF               	movwf	indf2,c
  7626  000360  D0E3               	goto	i2l277
  7627  000362                     i2l297:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;my_i2c.c: 189: {
  7631                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7632  000362  A8C7               	btfss	4039,4,c	;volatile
  7633  000364  D062               	goto	i2l3360
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7637  000366  0100               	movlb	0	; () banked
  7638  000368  EE20 F00B          	lfsr	2,11
  7639  00036C  0100               	movlb	0	; () banked
  7640  00036E  51DD               	movf	_ic_ptr& (0+255),w,b
  7641  000370  26D9               	addwf	fsr2l,f,c
  7642  000372  0100               	movlb	0	; () banked
  7643  000374  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7644  000376  22DA               	addwfc	fsr2h,f,c
  7645  000378  2ADF               	incf	indf2,f,c
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;my_i2c.c: 194: if (data_read) {
  7649  00037A  0100               	movlb	0	; () banked
  7650  00037C  0100               	movlb	0	; () banked
  7651  00037E  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7652  000380  B4D8               	btfsc	status,2,c
  7653  000382  D04A               	goto	i2l3356
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7657  000384  AAC7               	btfss	4039,5,c	;volatile
  7658  000386  D027               	goto	i2l3354
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7662  000388  0100               	movlb	0	; () banked
  7663  00038A  EE20 F00A          	lfsr	2,10
  7664  00038E  0100               	movlb	0	; () banked
  7665  000390  51DD               	movf	_ic_ptr& (0+255),w,b
  7666  000392  26D9               	addwf	fsr2l,f,c
  7667  000394  0100               	movlb	0	; () banked
  7668  000396  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7669  000398  22DA               	addwfc	fsr2h,f,c
  7670  00039A  50DF               	movf	indf2,w,c
  7671  00039C  0100               	movlb	0	; () banked
  7672  00039E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7673  0003A0  0100               	movlb	0	; () banked
  7674  0003A2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7675  0003A4  0D01               	mullw	1
  7676  0003A6  50F3               	movf	prodl,w,c
  7677  0003A8  0100               	movlb	0	; () banked
  7678  0003AA  0100               	movlb	0	; () banked
  7679  0003AC  25DD               	addwf	_ic_ptr& (0+255),w,b
  7680  0003AE  6ED9               	movwf	fsr2l,c
  7681  0003B0  50F4               	movf	prodh,w,c
  7682  0003B2  0100               	movlb	0	; () banked
  7683  0003B4  0100               	movlb	0	; () banked
  7684  0003B6  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7685  0003B8  6EDA               	movwf	fsr2h,c
  7686  0003BA  0100               	movlb	0	; () banked
  7687  0003BC  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7691  0003C0  0100               	movlb	0	; () banked
  7692  0003C2  EE20 F00A          	lfsr	2,10
  7693  0003C6  0100               	movlb	0	; () banked
  7694  0003C8  51DD               	movf	_ic_ptr& (0+255),w,b
  7695  0003CA  26D9               	addwf	fsr2l,f,c
  7696  0003CC  0100               	movlb	0	; () banked
  7697  0003CE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7698  0003D0  22DA               	addwfc	fsr2h,f,c
  7699  0003D2  2ADF               	incf	indf2,f,c
  7700  0003D4  D021               	goto	i2l3356
  7701  0003D6                     i2l3354:
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7705  0003D6  0100               	movlb	0	; () banked
  7706  0003D8  EE20 F00E          	lfsr	2,14
  7707  0003DC  0100               	movlb	0	; () banked
  7708  0003DE  51DD               	movf	_ic_ptr& (0+255),w,b
  7709  0003E0  26D9               	addwf	fsr2l,f,c
  7710  0003E2  0100               	movlb	0	; () banked
  7711  0003E4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7712  0003E6  22DA               	addwfc	fsr2h,f,c
  7713  0003E8  2ADF               	incf	indf2,f,c
  7714                           
  7715                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7716  0003EA  0100               	movlb	0	; () banked
  7717  0003EC  EE20 F00D          	lfsr	2,13
  7718  0003F0  0100               	movlb	0	; () banked
  7719  0003F2  51DD               	movf	_ic_ptr& (0+255),w,b
  7720  0003F4  26D9               	addwf	fsr2l,f,c
  7721  0003F6  0100               	movlb	0	; () banked
  7722  0003F8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7723  0003FA  22DA               	addwfc	fsr2h,f,c
  7724  0003FC  0E06               	movlw	6
  7725  0003FE  6EDF               	movwf	indf2,c
  7726                           
  7727                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7728  000400  0100               	movlb	0	; () banked
  7729  000402  EE20 F00C          	lfsr	2,12
  7730  000406  0100               	movlb	0	; () banked
  7731  000408  51DD               	movf	_ic_ptr& (0+255),w,b
  7732  00040A  26D9               	addwf	fsr2l,f,c
  7733  00040C  0100               	movlb	0	; () banked
  7734  00040E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7735  000410  22DA               	addwfc	fsr2h,f,c
  7736  000412  0E05               	movlw	5
  7737  000414  6EDF               	movwf	indf2,c
  7738  000416  D067               	goto	L14
  7739  000418                     i2l3356:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;my_i2c.c: 205: msg_ready = 1;
  7743  000418  0100               	movlb	0	; () banked
  7744  00041A  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7745  00041C  0E01               	movlw	1
  7746  00041E  0100               	movlb	0	; () banked
  7747  000420  0100               	movlb	0	; () banked
  7748  000422  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7749  000424  0100               	movlb	0	; () banked
  7750  000426  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7751                           
  7752                           ; BSR set to: 0
  7753  000428  D05E               	goto	L14
  7754  00042A                     i2l3360:
  7755                           
  7756                           ; BSR set to: 0
  7757  00042A  0100               	movlb	0	; () banked
  7758  00042C  0100               	movlb	0	; () banked
  7759  00042E  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7760  000430  B4D8               	btfsc	status,2,c
  7761  000432  D07A               	goto	i2l277
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7765  000434  0100               	movlb	0	; () banked
  7766  000436  EE20 F00B          	lfsr	2,11
  7767  00043A  0100               	movlb	0	; () banked
  7768  00043C  51DD               	movf	_ic_ptr& (0+255),w,b
  7769  00043E  26D9               	addwf	fsr2l,f,c
  7770  000440  0100               	movlb	0	; () banked
  7771  000442  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7772  000444  22DA               	addwfc	fsr2h,f,c
  7773  000446  2ADF               	incf	indf2,f,c
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7777  000448  AAC7               	btfss	4039,5,c	;volatile
  7778  00044A  D027               	goto	i2l305
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7782  00044C  0100               	movlb	0	; () banked
  7783  00044E  EE20 F00A          	lfsr	2,10
  7784  000452  0100               	movlb	0	; () banked
  7785  000454  51DD               	movf	_ic_ptr& (0+255),w,b
  7786  000456  26D9               	addwf	fsr2l,f,c
  7787  000458  0100               	movlb	0	; () banked
  7788  00045A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7789  00045C  22DA               	addwfc	fsr2h,f,c
  7790  00045E  50DF               	movf	indf2,w,c
  7791  000460  0100               	movlb	0	; () banked
  7792  000462  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7793  000464  0100               	movlb	0	; () banked
  7794  000466  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7795  000468  0D01               	mullw	1
  7796  00046A  50F3               	movf	prodl,w,c
  7797  00046C  0100               	movlb	0	; () banked
  7798  00046E  0100               	movlb	0	; () banked
  7799  000470  25DD               	addwf	_ic_ptr& (0+255),w,b
  7800  000472  6ED9               	movwf	fsr2l,c
  7801  000474  50F4               	movf	prodh,w,c
  7802  000476  0100               	movlb	0	; () banked
  7803  000478  0100               	movlb	0	; () banked
  7804  00047A  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7805  00047C  6EDA               	movwf	fsr2h,c
  7806  00047E  0100               	movlb	0	; () banked
  7807  000480  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7811  000484  0100               	movlb	0	; () banked
  7812  000486  EE20 F00A          	lfsr	2,10
  7813  00048A  0100               	movlb	0	; () banked
  7814  00048C  51DD               	movf	_ic_ptr& (0+255),w,b
  7815  00048E  26D9               	addwf	fsr2l,f,c
  7816  000490  0100               	movlb	0	; () banked
  7817  000492  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7818  000494  22DA               	addwfc	fsr2h,f,c
  7819  000496  2ADF               	incf	indf2,f,c
  7820                           
  7821                           ;my_i2c.c: 213: } else {
  7822  000498  D047               	goto	i2l277
  7823  00049A                     i2l305:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7827  00049A  A4C7               	btfss	4039,2,c	;volatile
  7828  00049C  D6B6               	goto	i2l3312
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7832  00049E  0100               	movlb	0	; () banked
  7833  0004A0  EE20 F00C          	lfsr	2,12
  7834  0004A4  0100               	movlb	0	; () banked
  7835  0004A6  51DD               	movf	_ic_ptr& (0+255),w,b
  7836  0004A8  26D9               	addwf	fsr2l,f,c
  7837  0004AA  0100               	movlb	0	; () banked
  7838  0004AC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7839  0004AE  22DA               	addwfc	fsr2h,f,c
  7840  0004B0  0E08               	movlw	8
  7841  0004B2  6EDF               	movwf	indf2,c
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;my_i2c.c: 216: msg_ready = 1;
  7845  0004B4  0100               	movlb	0	; () banked
  7846  0004B6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7847  0004B8  0E01               	movlw	1
  7848  0004BA  0100               	movlb	0	; () banked
  7849  0004BC  0100               	movlb	0	; () banked
  7850  0004BE  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7851  0004C0  0100               	movlb	0	; () banked
  7852  0004C2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7853  0004C4                     L15:
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;my_i2c.c: 217: msg_to_send = 1;
  7857  0004C4  0100               	movlb	0	; () banked
  7858  0004C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7859  0004C8  0E01               	movlw	1
  7860  0004CA  0100               	movlb	0	; () banked
  7861  0004CC  0100               	movlb	0	; () banked
  7862  0004CE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7863  0004D0  0100               	movlb	0	; () banked
  7864  0004D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;my_i2c.c: 219: data_read = 0;
  7868  0004D4  0100               	movlb	0	; () banked
  7869  0004D6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7870  0004D8  0E00               	movlw	0
  7871  0004DA  0100               	movlb	0	; () banked
  7872  0004DC  0100               	movlb	0	; () banked
  7873  0004DE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7874  0004E0                     L12:
  7875  0004E0  0100               	movlb	0	; () banked
  7876  0004E2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7877                           
  7878                           ;my_i2c.c: 220: } else {
  7879  0004E4  D021               	goto	i2l277
  7880  0004E6                     L14:
  7881                           
  7882                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7883  0004E6  0100               	movlb	0	; () banked
  7884  0004E8  EE20 F00C          	lfsr	2,12
  7885  0004EC  0100               	movlb	0	; () banked
  7886  0004EE  51DD               	movf	_ic_ptr& (0+255),w,b
  7887  0004F0  26D9               	addwf	fsr2l,f,c
  7888  0004F2  0100               	movlb	0	; () banked
  7889  0004F4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7890  0004F6  22DA               	addwfc	fsr2h,f,c
  7891  0004F8  0E05               	movlw	5
  7892  0004FA  D731               	goto	L11
  7893  0004FC                     i2l3382:
  7894                           
  7895                           ; BSR set to: 0
  7896  0004FC  0100               	movlb	0	; () banked
  7897  0004FE  EE20 F00C          	lfsr	2,12
  7898  000502  0100               	movlb	0	; () banked
  7899  000504  51DD               	movf	_ic_ptr& (0+255),w,b
  7900  000506  26D9               	addwf	fsr2l,f,c
  7901  000508  0100               	movlb	0	; () banked
  7902  00050A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7903  00050C  22DA               	addwfc	fsr2h,f,c
  7904  00050E  50DF               	movf	indf2,w,c
  7905                           
  7906                           ; Switch size 1, requested type "space"
  7907                           ; Number of cases is 4, Range of values is 5 to 8
  7908                           ; switch strategies available:
  7909                           ; Name         Instructions Cycles
  7910                           ; simple_byte           13     7 (average)
  7911                           ;	Chosen strategy is simple_byte
  7912  000510  0A05               	xorlw	5	; case 5
  7913  000512  B4D8               	btfsc	status,2,c
  7914  000514  D63C               	goto	i2l279
  7915  000516  0A03               	xorlw	3	; case 6
  7916  000518  B4D8               	btfsc	status,2,c
  7917  00051A  D65B               	goto	i2l283
  7918  00051C  0A01               	xorlw	1	; case 7
  7919  00051E  B4D8               	btfsc	status,2,c
  7920  000520  D720               	goto	i2l297
  7921  000522  0A0F               	xorlw	15	; case 8
  7922  000524  B4D8               	btfsc	status,2,c
  7923  000526  D6D1               	goto	i2l3332
  7924  000528                     i2l277:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;my_i2c.c: 230: }
  7928                           ;my_i2c.c: 233: if (data_read || data_written) {
  7929  000528  0100               	movlb	0	; () banked
  7930  00052A  0100               	movlb	0	; () banked
  7931  00052C  67C8               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7932  00052E  D005               	goto	i2l311
  7933                           
  7934                           ; BSR set to: 0
  7935  000530  0100               	movlb	0	; () banked
  7936  000532  0100               	movlb	0	; () banked
  7937  000534  51C3               	movf	i2c_int_handler@data_written& (0+255),w,b
  7938  000536  B4D8               	btfsc	status,2,c
  7939  000538  D002               	goto	i2l3388
  7940  00053A                     i2l311:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7944  00053A  A8C6               	btfss	4038,4,c	;volatile
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7948  00053C  88C6               	bsf	4038,4,c	;volatile
  7949  00053E                     i2l3388:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;my_i2c.c: 237: }
  7953                           ;my_i2c.c: 238: }
  7954                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7955  00053E  0100               	movlb	0	; () banked
  7956  000540  EE20 F00A          	lfsr	2,10
  7957  000544  0100               	movlb	0	; () banked
  7958  000546  51DD               	movf	_ic_ptr& (0+255),w,b
  7959  000548  26D9               	addwf	fsr2l,f,c
  7960  00054A  0100               	movlb	0	; () banked
  7961  00054C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7962  00054E  22DA               	addwfc	fsr2h,f,c
  7963  000550  0E08               	movlw	8
  7964  000552  64DF               	cpfsgt	indf2,c
  7965  000554  D024               	goto	i2l3394
  7966                           
  7967                           ; BSR set to: 0
  7968  000556  0100               	movlb	0	; () banked
  7969  000558  0100               	movlb	0	; () banked
  7970  00055A  67C7               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7971  00055C  D020               	goto	i2l3394
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7975  00055E  0100               	movlb	0	; () banked
  7976  000560  EE20 F00C          	lfsr	2,12
  7977  000564  0100               	movlb	0	; () banked
  7978  000566  51DD               	movf	_ic_ptr& (0+255),w,b
  7979  000568  26D9               	addwf	fsr2l,f,c
  7980  00056A  0100               	movlb	0	; () banked
  7981  00056C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7982  00056E  22DA               	addwfc	fsr2h,f,c
  7983  000570  0E05               	movlw	5
  7984  000572  6EDF               	movwf	indf2,c
  7985                           
  7986                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7987  000574  0100               	movlb	0	; () banked
  7988  000576  EE20 F00E          	lfsr	2,14
  7989  00057A  0100               	movlb	0	; () banked
  7990  00057C  51DD               	movf	_ic_ptr& (0+255),w,b
  7991  00057E  26D9               	addwf	fsr2l,f,c
  7992  000580  0100               	movlb	0	; () banked
  7993  000582  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7994  000584  22DA               	addwfc	fsr2h,f,c
  7995  000586  2ADF               	incf	indf2,f,c
  7996                           
  7997                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7998  000588  0100               	movlb	0	; () banked
  7999  00058A  EE20 F00D          	lfsr	2,13
  8000  00058E  0100               	movlb	0	; () banked
  8001  000590  51DD               	movf	_ic_ptr& (0+255),w,b
  8002  000592  26D9               	addwf	fsr2l,f,c
  8003  000594  0100               	movlb	0	; () banked
  8004  000596  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8005  000598  22DA               	addwfc	fsr2h,f,c
  8006  00059A  0E07               	movlw	7
  8007  00059C  6EDF               	movwf	indf2,c
  8008  00059E                     i2l3394:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;my_i2c.c: 245: }
  8012                           ;my_i2c.c: 247: if (msg_ready) {
  8013  00059E  0100               	movlb	0	; () banked
  8014  0005A0  0100               	movlb	0	; () banked
  8015  0005A2  51C7               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8016  0005A4  B4D8               	btfsc	status,2,c
  8017  0005A6  D048               	goto	i2l3402
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8021  0005A8  0100               	movlb	0	; () banked
  8022  0005AA  EE20 F00B          	lfsr	2,11
  8023  0005AE  0100               	movlb	0	; () banked
  8024  0005B0  51DD               	movf	_ic_ptr& (0+255),w,b
  8025  0005B2  26D9               	addwf	fsr2l,f,c
  8026  0005B4  0100               	movlb	0	; () banked
  8027  0005B6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8028  0005B8  22DA               	addwfc	fsr2h,f,c
  8029  0005BA  0100               	movlb	0	; () banked
  8030  0005BC  EE10 F00A          	lfsr	1,10
  8031  0005C0  0100               	movlb	0	; () banked
  8032  0005C2  51DD               	movf	_ic_ptr& (0+255),w,b
  8033  0005C4  26E1               	addwf	fsr1l,f,c
  8034  0005C6  0100               	movlb	0	; () banked
  8035  0005C8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8036  0005CA  22E2               	addwfc	fsr1h,f,c
  8037  0005CC  50E7               	movf	indf1,w,c
  8038  0005CE  0100               	movlb	0	; () banked
  8039  0005D0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8040  0005D2  0100               	movlb	0	; () banked
  8041  0005D4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8042  0005D6  0D01               	mullw	1
  8043  0005D8  50F3               	movf	prodl,w,c
  8044  0005DA  0100               	movlb	0	; () banked
  8045  0005DC  0100               	movlb	0	; () banked
  8046  0005DE  25DD               	addwf	_ic_ptr& (0+255),w,b
  8047  0005E0  6EE1               	movwf	fsr1l,c
  8048  0005E2  50F4               	movf	prodh,w,c
  8049  0005E4  0100               	movlb	0	; () banked
  8050  0005E6  0100               	movlb	0	; () banked
  8051  0005E8  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8052  0005EA  6EE2               	movwf	fsr1h,c
  8053  0005EC  CFDF FFE7          	movff	indf2,indf1
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8057  0005F0  0100               	movlb	0	; () banked
  8058  0005F2  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8059  0005F4  0E28               	movlw	40
  8060  0005F6  0100               	movlb	0	; () banked
  8061  0005F8  0100               	movlb	0	; () banked
  8062  0005FA  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8063  0005FC  0100               	movlb	0	; () banked
  8064  0005FE  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8065  000600  0100               	movlb	0	; () banked
  8066  000602  0100               	movlb	0	; () banked
  8067  000604  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8068  000608  0100               	movlb	0	; () banked
  8069  00060A  0100               	movlb	0	; () banked
  8070  00060C  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8071  000610  0100               	movlb	0	; () banked
  8072  000612  EE20 F00A          	lfsr	2,10
  8073  000616  0100               	movlb	0	; () banked
  8074  000618  51DD               	movf	_ic_ptr& (0+255),w,b
  8075  00061A  26D9               	addwf	fsr2l,f,c
  8076  00061C  0100               	movlb	0	; () banked
  8077  00061E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8078  000620  22DA               	addwfc	fsr2h,f,c
  8079  000622  50DF               	movf	indf2,w,c
  8080  000624  0100               	movlb	0	; () banked
  8081  000626  6FBF               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8082  000628  0100               	movlb	0	; () banked
  8083  00062A  29BF               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8084  00062C  EC6F  F00E         	call	_ToMainHigh_sendmsg
  8085                           
  8086                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8087  000630  0100               	movlb	0	; () banked
  8088  000632  EE20 F00A          	lfsr	2,10
  8089  000636  D04B               	goto	L13
  8090  000638                     i2l3402:
  8091                           
  8092                           ; BSR set to: 0
  8093  000638  0100               	movlb	0	; () banked
  8094  00063A  EE20 F00E          	lfsr	2,14
  8095  00063E  0100               	movlb	0	; () banked
  8096  000640  51DD               	movf	_ic_ptr& (0+255),w,b
  8097  000642  26D9               	addwf	fsr2l,f,c
  8098  000644  0100               	movlb	0	; () banked
  8099  000646  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8100  000648  22DA               	addwfc	fsr2h,f,c
  8101  00064A  50DF               	movf	indf2,w,c
  8102  00064C  B4D8               	btfsc	status,2,c
  8103  00064E  D047               	goto	i2l3410
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8107  000650  0100               	movlb	0	; () banked
  8108  000652  EE20 F00E          	lfsr	2,14
  8109  000656  0100               	movlb	0	; () banked
  8110  000658  51DD               	movf	_ic_ptr& (0+255),w,b
  8111  00065A  26D9               	addwf	fsr2l,f,c
  8112  00065C  0100               	movlb	0	; () banked
  8113  00065E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8114  000660  22DA               	addwfc	fsr2h,f,c
  8115  000662  50DF               	movf	indf2,w,c
  8116  000664  0100               	movlb	0	; () banked
  8117  000666  0100               	movlb	0	; () banked
  8118  000668  6FC0               	movwf	i2c_int_handler@error_buf& (0+255),b
  8119                           
  8120                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8121  00066A  0100               	movlb	0	; () banked
  8122  00066C  EE20 F00D          	lfsr	2,13
  8123  000670  0100               	movlb	0	; () banked
  8124  000672  51DD               	movf	_ic_ptr& (0+255),w,b
  8125  000674  26D9               	addwf	fsr2l,f,c
  8126  000676  0100               	movlb	0	; () banked
  8127  000678  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8128  00067A  22DA               	addwfc	fsr2h,f,c
  8129  00067C  50DF               	movf	indf2,w,c
  8130  00067E  0100               	movlb	0	; () banked
  8131  000680  0100               	movlb	0	; () banked
  8132  000682  6FC1               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8133                           
  8134                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8135  000684  0100               	movlb	0	; () banked
  8136  000686  EE20 F00B          	lfsr	2,11
  8137  00068A  0100               	movlb	0	; () banked
  8138  00068C  51DD               	movf	_ic_ptr& (0+255),w,b
  8139  00068E  26D9               	addwf	fsr2l,f,c
  8140  000690  0100               	movlb	0	; () banked
  8141  000692  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8142  000694  22DA               	addwfc	fsr2h,f,c
  8143  000696  50DF               	movf	indf2,w,c
  8144  000698  0100               	movlb	0	; () banked
  8145  00069A  0100               	movlb	0	; () banked
  8146  00069C  6FC2               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8150  00069E  0100               	movlb	0	; () banked
  8151  0006A0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8152  0006A2  0E29               	movlw	41
  8153  0006A4  0100               	movlb	0	; () banked
  8154  0006A6  0100               	movlb	0	; () banked
  8155  0006A8  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8156  0006AA  0100               	movlb	0	; () banked
  8157  0006AC  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8158  0006AE  0100               	movlb	0	; () banked
  8159  0006B0  0E00               	movlw	high i2c_int_handler@error_buf
  8160  0006B2  0100               	movlb	0	; () banked
  8161  0006B4  0100               	movlb	0	; () banked
  8162  0006B6  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8163  0006B8  0100               	movlb	0	; () banked
  8164  0006BA  0EC0               	movlw	low i2c_int_handler@error_buf
  8165  0006BC  0100               	movlb	0	; () banked
  8166  0006BE  0100               	movlb	0	; () banked
  8167  0006C0  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8168  0006C2  0E03               	movlw	3
  8169  0006C4  EC6F  F00E         	call	_ToMainHigh_sendmsg
  8170                           
  8171                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8172  0006C8  0100               	movlb	0	; () banked
  8173  0006CA  EE20 F00E          	lfsr	2,14
  8174  0006CE                     L13:
  8175  0006CE  0100               	movlb	0	; () banked
  8176  0006D0  51DD               	movf	_ic_ptr& (0+255),w,b
  8177  0006D2  26D9               	addwf	fsr2l,f,c
  8178  0006D4  0100               	movlb	0	; () banked
  8179  0006D6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8180  0006D8  22DA               	addwfc	fsr2h,f,c
  8181  0006DA  0E00               	movlw	0
  8182  0006DC  6EDF               	movwf	indf2,c
  8183  0006DE                     i2l3410:
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;my_i2c.c: 257: }
  8187                           ;my_i2c.c: 258: if (msg_to_send) {
  8188  0006DE  0100               	movlb	0	; () banked
  8189  0006E0  0100               	movlb	0	; () banked
  8190  0006E2  51C6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8191  0006E4  B4D8               	btfsc	status,2,c
  8192  0006E6  0012               	return	
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8196  0006E8  0100               	movlb	0	; () banked
  8197  0006EA  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8198  0006EC  0E2A               	movlw	42
  8199  0006EE  0100               	movlb	0	; () banked
  8200  0006F0  0100               	movlb	0	; () banked
  8201  0006F2  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8202  0006F4  0100               	movlb	0	; () banked
  8203  0006F6  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8204  0006F8  0100               	movlb	0	; () banked
  8205  0006FA  0100               	movlb	0	; () banked
  8206  0006FC  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8207  000700  0100               	movlb	0	; () banked
  8208  000702  0100               	movlb	0	; () banked
  8209  000704  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8210  000708  0E00               	movlw	0
  8211  00070A  EC6F  F00E         	call	_ToMainHigh_sendmsg
  8212                           
  8213                           ;my_i2c.c: 261: msg_to_send = 0;
  8214  00070E  0100               	movlb	0	; () banked
  8215  000710  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8216  000712  0E00               	movlw	0
  8217  000714  0100               	movlb	0	; () banked
  8218  000716  0100               	movlb	0	; () banked
  8219  000718  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8220  00071A  0100               	movlb	0	; () banked
  8221  00071C  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8222  00071E  0012               	return	
  8223  000720                     __end_of_i2c_int_handler:
  8224                           	opt stack 0
  8225                           pclatu	equ	0xFFB
  8226                           pclath	equ	0xFFA
  8227                           tblptru	equ	0xFF8
  8228                           tblptrh	equ	0xFF7
  8229                           tblptrl	equ	0xFF6
  8230                           tablat	equ	0xFF5
  8231                           prodh	equ	0xFF4
  8232                           prodl	equ	0xFF3
  8233                           intcon	equ	0xFF2
  8234                           postinc0	equ	0xFEE
  8235                           fsr0h	equ	0xFEA
  8236                           fsr0l	equ	0xFE9
  8237                           wreg	equ	0xFE8
  8238                           indf1	equ	0xFE7
  8239                           fsr1h	equ	0xFE2
  8240                           fsr1l	equ	0xFE1
  8241                           bsr	equ	0xFE0
  8242                           indf2	equ	0xFDF
  8243                           postinc2	equ	0xFDE
  8244                           postdec2	equ	0xFDD
  8245                           fsr2h	equ	0xFDA
  8246                           fsr2l	equ	0xFD9
  8247                           status	equ	0xFD8
  8248                           
  8249 ;; *************** function _handle_start *****************
  8250 ;; Defined at:
  8251 ;;		line 71 in file "src/my_i2c.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  data_read       1    wreg     unsigned char 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  data_read       1   52[COMRAM] unsigned char 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;		None               void
  8258 ;; Registers used:
  8259 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8265 ;;      Params:         0       0       0       0       0
  8266 ;;      Locals:         1       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0
  8268 ;;      Totals:         1       0       0       0       0
  8269 ;;Total ram usage:        1 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_i2c_int_handler
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text49
  8279  001266                     __ptext49:
  8280                           	opt stack 0
  8281  001266                     _handle_start:
  8282                           	opt stack 18
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;incstack = 0
  8286                           ;handle_start@data_read stored from wreg
  8287  001266  CFE8 F035          	movff	wreg,handle_start@data_read
  8288                           
  8289                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8290  00126A  0100               	movlb	0	; () banked
  8291  00126C  EE20 F00B          	lfsr	2,11
  8292  001270  0100               	movlb	0	; () banked
  8293  001272  51DD               	movf	_ic_ptr& (0+255),w,b
  8294  001274  26D9               	addwf	fsr2l,f,c
  8295  001276  0100               	movlb	0	; () banked
  8296  001278  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8297  00127A  22DA               	addwfc	fsr2h,f,c
  8298  00127C  0E01               	movlw	1
  8299  00127E  6EDF               	movwf	indf2,c
  8300                           
  8301                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8302  001280  0100               	movlb	0	; () banked
  8303  001282  EE20 F00A          	lfsr	2,10
  8304  001286  0100               	movlb	0	; () banked
  8305  001288  51DD               	movf	_ic_ptr& (0+255),w,b
  8306  00128A  26D9               	addwf	fsr2l,f,c
  8307  00128C  0100               	movlb	0	; () banked
  8308  00128E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8309  001290  22DA               	addwfc	fsr2h,f,c
  8310  001292  0E00               	movlw	0
  8311  001294  6EDF               	movwf	indf2,c
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;my_i2c.c: 75: if (data_read) {
  8315  001296  5035               	movf	handle_start@data_read,w,c
  8316  001298  B4D8               	btfsc	status,2,c
  8317  00129A  D03D               	goto	i2l3860
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8321  00129C  AAC7               	btfss	4039,5,c	;volatile
  8322  00129E  D021               	goto	i2l267
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8326  0012A0  0100               	movlb	0	; () banked
  8327  0012A2  EE20 F00C          	lfsr	2,12
  8328  0012A6  0100               	movlb	0	; () banked
  8329  0012A8  51DD               	movf	_ic_ptr& (0+255),w,b
  8330  0012AA  26D9               	addwf	fsr2l,f,c
  8331  0012AC  0100               	movlb	0	; () banked
  8332  0012AE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8333  0012B0  22DA               	addwfc	fsr2h,f,c
  8334  0012B2  0E05               	movlw	5
  8335  0012B4  6EDF               	movwf	indf2,c
  8336                           
  8337                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8338  0012B6  0100               	movlb	0	; () banked
  8339  0012B8  EE20 F00E          	lfsr	2,14
  8340  0012BC  0100               	movlb	0	; () banked
  8341  0012BE  51DD               	movf	_ic_ptr& (0+255),w,b
  8342  0012C0  26D9               	addwf	fsr2l,f,c
  8343  0012C2  0100               	movlb	0	; () banked
  8344  0012C4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8345  0012C6  22DA               	addwfc	fsr2h,f,c
  8346  0012C8  2ADF               	incf	indf2,f,c
  8347                           
  8348                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8349  0012CA  0100               	movlb	0	; () banked
  8350  0012CC  EE20 F00D          	lfsr	2,13
  8351  0012D0  0100               	movlb	0	; () banked
  8352  0012D2  51DD               	movf	_ic_ptr& (0+255),w,b
  8353  0012D4  26D9               	addwf	fsr2l,f,c
  8354  0012D6  0100               	movlb	0	; () banked
  8355  0012D8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8356  0012DA  22DA               	addwfc	fsr2h,f,c
  8357  0012DC  0E05               	movlw	5
  8358  0012DE  6EDF               	movwf	indf2,c
  8359                           
  8360                           ;my_i2c.c: 82: } else {
  8361  0012E0  0012               	return	
  8362  0012E2                     i2l267:
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8366  0012E2  A4C7               	btfss	4039,2,c	;volatile
  8367  0012E4  D00C               	goto	i2l3858
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8371  0012E6  0100               	movlb	0	; () banked
  8372  0012E8  EE20 F00C          	lfsr	2,12
  8373  0012EC  0100               	movlb	0	; () banked
  8374  0012EE  51DD               	movf	_ic_ptr& (0+255),w,b
  8375  0012F0  26D9               	addwf	fsr2l,f,c
  8376  0012F2  0100               	movlb	0	; () banked
  8377  0012F4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8378  0012F6  22DA               	addwfc	fsr2h,f,c
  8379  0012F8  0E08               	movlw	8
  8380  0012FA  6EDF               	movwf	indf2,c
  8381                           
  8382                           ;my_i2c.c: 85: } else {
  8383  0012FC  0012               	return	
  8384  0012FE                     i2l3858:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8388  0012FE  0100               	movlb	0	; () banked
  8389  001300  EE20 F00C          	lfsr	2,12
  8390  001304  0100               	movlb	0	; () banked
  8391  001306  51DD               	movf	_ic_ptr& (0+255),w,b
  8392  001308  26D9               	addwf	fsr2l,f,c
  8393  00130A  0100               	movlb	0	; () banked
  8394  00130C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8395  00130E  22DA               	addwfc	fsr2h,f,c
  8396  001310  0E07               	movlw	7
  8397  001312  6EDF               	movwf	indf2,c
  8398  001314  0012               	return	
  8399  001316                     i2l3860:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8403  001316  0100               	movlb	0	; () banked
  8404  001318  EE20 F00C          	lfsr	2,12
  8405  00131C  0100               	movlb	0	; () banked
  8406  00131E  51DD               	movf	_ic_ptr& (0+255),w,b
  8407  001320  26D9               	addwf	fsr2l,f,c
  8408  001322  0100               	movlb	0	; () banked
  8409  001324  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8410  001326  22DA               	addwfc	fsr2h,f,c
  8411  001328  0E06               	movlw	6
  8412  00132A  6EDF               	movwf	indf2,c
  8413  00132C  0012               	return	
  8414  00132E                     __end_of_handle_start:
  8415                           	opt stack 0
  8416                           pclatu	equ	0xFFB
  8417                           pclath	equ	0xFFA
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           prodh	equ	0xFF4
  8423                           prodl	equ	0xFF3
  8424                           intcon	equ	0xFF2
  8425                           postinc0	equ	0xFEE
  8426                           fsr0h	equ	0xFEA
  8427                           fsr0l	equ	0xFE9
  8428                           wreg	equ	0xFE8
  8429                           indf1	equ	0xFE7
  8430                           fsr1h	equ	0xFE2
  8431                           fsr1l	equ	0xFE1
  8432                           bsr	equ	0xFE0
  8433                           indf2	equ	0xFDF
  8434                           postinc2	equ	0xFDE
  8435                           postdec2	equ	0xFDD
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _ToMainHigh_sendmsg *****************
  8441 ;; Defined at:
  8442 ;;		line 126 in file "src/messages.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  length          1    wreg     unsigned char 
  8445 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8446 ;;  data            2    6[BANK0 ] PTR void 
  8447 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  length          1   69[COMRAM] unsigned char 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      char 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8459 ;;      Params:         0       3       0       0       0
  8460 ;;      Locals:         1       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0
  8462 ;;      Totals:         1       3       0       0       0
  8463 ;;Total ram usage:        4 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    2
  8466 ;; This function calls:
  8467 ;;		i2_send_msg
  8468 ;; This function is called by:
  8469 ;;		_i2c_int_handler
  8470 ;;		_timer0_int_handler
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text50
  8475  001CDE                     __ptext50:
  8476                           	opt stack 0
  8477  001CDE                     _ToMainHigh_sendmsg:
  8478                           	opt stack 16
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;incstack = 0
  8482                           ;ToMainHigh_sendmsg@length stored from wreg
  8483  001CDE  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  8484                           
  8485                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8486                           ;	Return value of _ToMainHigh_sendmsg is never used
  8487  001CE2  0101               	movlb	1	; () banked
  8488  001CE4  0E01               	movlw	high _ToMainHigh_MQ
  8489  001CE6  6E40               	movwf	i2send_msg@qptr+1,c
  8490  001CE8  0101               	movlb	1	; () banked
  8491  001CEA  0E6C               	movlw	low _ToMainHigh_MQ
  8492  001CEC  6E3F               	movwf	i2send_msg@qptr,c
  8493  001CEE  C046  F041         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8494  001CF2  C0BB  F042         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8495  001CF6  0100               	movlb	0	; () banked
  8496  001CF8  C0BD  F044         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8497  001CFC  0100               	movlb	0	; () banked
  8498  001CFE  C0BC  F043         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8499  001D02  ECCA  F008         	call	i2_send_msg	;wreg free
  8500  001D06  0012               	return	
  8501  001D08                     __end_of_ToMainHigh_sendmsg:
  8502                           	opt stack 0
  8503                           pclatu	equ	0xFFB
  8504                           pclath	equ	0xFFA
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           postinc0	equ	0xFEE
  8513                           fsr0h	equ	0xFEA
  8514                           fsr0l	equ	0xFE9
  8515                           wreg	equ	0xFE8
  8516                           indf1	equ	0xFE7
  8517                           fsr1h	equ	0xFE2
  8518                           fsr1l	equ	0xFE1
  8519                           bsr	equ	0xFE0
  8520                           indf2	equ	0xFDF
  8521                           postinc2	equ	0xFDE
  8522                           postdec2	equ	0xFDD
  8523                           fsr2h	equ	0xFDA
  8524                           fsr2l	equ	0xFD9
  8525                           status	equ	0xFD8
  8526                           
  8527 ;; *************** function i2_send_msg *****************
  8528 ;; Defined at:
  8529 ;;		line 24 in file "src/messages.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  8532 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8533 ;;  length          1   64[COMRAM] unsigned char 
  8534 ;;  msgtype         1   65[COMRAM] unsigned char 
  8535 ;;  data            2   66[COMRAM] PTR void 
  8536 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8537 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8540 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8541 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8542 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8543 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      char 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8553 ;;      Params:         6       0       0       0       0
  8554 ;;      Locals:         0       5       0       0       0
  8555 ;;      Temps:          1       0       0       0       0
  8556 ;;      Totals:         7       5       0       0       0
  8557 ;;Total ram usage:       12 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    1
  8560 ;; This function calls:
  8561 ;;		i2_memcpy
  8562 ;; This function is called by:
  8563 ;;		_ToMainHigh_sendmsg
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text51
  8568  001194                     __ptext51:
  8569                           	opt stack 0
  8570  001194                     i2_send_msg:
  8571                           	opt stack 16
  8572                           
  8573                           ;messages.c: 25: unsigned char slot;
  8574                           ;messages.c: 27: msg *qmsg;
  8575                           ;messages.c: 28: size_t tlength = length;
  8576                           
  8577                           ;incstack = 0
  8578  001194  0100               	movlb	0	; () banked
  8579  001196  C041  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8580  00119A  0100               	movlb	0	; () banked
  8581  00119C  0100               	movlb	0	; () banked
  8582  00119E  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8586  0011A0  EE20 F034          	lfsr	2,52
  8587  0011A4  503F               	movf	i2send_msg@qptr,w,c
  8588  0011A6  26D9               	addwf	fsr2l,f,c
  8589  0011A8  5040               	movf	i2send_msg@qptr+1,w,c
  8590  0011AA  22DA               	addwfc	fsr2h,f,c
  8591  0011AC  50DF               	movf	indf2,w,c
  8592  0011AE  0100               	movlb	0	; () banked
  8593  0011B0  0100               	movlb	0	; () banked
  8594  0011B2  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8598  0011B4  0100               	movlb	0	; () banked
  8599  0011B6  0100               	movlb	0	; () banked
  8600  0011B8  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8601  0011BA  0D0D               	mullw	13
  8602  0011BC  50F3               	movf	prodl,w,c
  8603  0011BE  243F               	addwf	i2send_msg@qptr,w,c
  8604  0011C0  0100               	movlb	0	; () banked
  8605  0011C2  0100               	movlb	0	; () banked
  8606  0011C4  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8607  0011C6  50F4               	movf	prodh,w,c
  8608  0011C8  2040               	addwfc	i2send_msg@qptr+1,w,c
  8609  0011CA  0100               	movlb	0	; () banked
  8610  0011CC  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;messages.c: 41: if (qmsg->full != 0) {
  8614  0011CE  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8615  0011D2  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8616  0011D6  50DF               	movf	indf2,w,c
  8617  0011D8  B4D8               	btfsc	status,2,c
  8618  0011DA  D002               	goto	i2l3908
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;messages.c: 42: return (-1);
  8622  0011DC  0EFF               	movlw	255
  8623  0011DE  0012               	return	
  8624  0011E0                     i2l3908:
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;messages.c: 43: }
  8628                           ;messages.c: 46: qmsg->length = length;
  8629  0011E0  0100               	movlb	0	; () banked
  8630  0011E2  EE20 F001          	lfsr	2,1
  8631  0011E6  0100               	movlb	0	; () banked
  8632  0011E8  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8633  0011EA  26D9               	addwf	fsr2l,f,c
  8634  0011EC  0100               	movlb	0	; () banked
  8635  0011EE  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8636  0011F0  22DA               	addwfc	fsr2h,f,c
  8637  0011F2  C041  FFDF         	movff	i2send_msg@length,indf2
  8638                           
  8639                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8640  0011F6  0100               	movlb	0	; () banked
  8641  0011F8  EE20 F002          	lfsr	2,2
  8642  0011FC  0100               	movlb	0	; () banked
  8643  0011FE  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8644  001200  26D9               	addwf	fsr2l,f,c
  8645  001202  0100               	movlb	0	; () banked
  8646  001204  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8647  001206  22DA               	addwfc	fsr2h,f,c
  8648  001208  C042  FFDF         	movff	i2send_msg@msgtype,indf2
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8652  00120C  0E03               	movlw	3
  8653  00120E  0100               	movlb	0	; () banked
  8654  001210  0100               	movlb	0	; () banked
  8655  001212  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8656  001214  6E35               	movwf	i2memcpy@d1,c
  8657  001216  0E00               	movlw	0
  8658  001218  0100               	movlb	0	; () banked
  8659  00121A  0100               	movlb	0	; () banked
  8660  00121C  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8661  00121E  6E36               	movwf	i2memcpy@d1+1,c
  8662  001220  C044  F038         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8663  001224  C043  F037         	movff	i2send_msg@data,i2memcpy@s1
  8664  001228  C0B6  F039         	movff	i2send_msg@tlength,i2memcpy@n
  8665  00122C  C0B7  F03A         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8666  001230  EC66  F00D         	call	i2_memcpy	;wreg free
  8667                           
  8668                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8669  001234  EE20 F034          	lfsr	2,52
  8670  001238  503F               	movf	i2send_msg@qptr,w,c
  8671  00123A  26D9               	addwf	fsr2l,f,c
  8672  00123C  5040               	movf	i2send_msg@qptr+1,w,c
  8673  00123E  22DA               	addwfc	fsr2h,f,c
  8674  001240  EE10 F034          	lfsr	1,52
  8675  001244  503F               	movf	i2send_msg@qptr,w,c
  8676  001246  26E1               	addwf	fsr1l,f,c
  8677  001248  5040               	movf	i2send_msg@qptr+1,w,c
  8678  00124A  22E2               	addwfc	fsr1h,f,c
  8679  00124C  50E7               	movf	indf1,w,c
  8680  00124E  6E45               	movwf	??i2_send_msg& (0+255),c
  8681  001250  2845               	incf	??i2_send_msg,w,c
  8682  001252  0B03               	andlw	3
  8683  001254  6EDF               	movwf	indf2,c
  8684                           
  8685                           ;messages.c: 59: qmsg->full = 1;
  8686  001256  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8687  00125A  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8688  00125E  0E01               	movlw	1
  8689  001260  6EDF               	movwf	indf2,c
  8690                           
  8691                           ;messages.c: 60: return (1);
  8692  001262  0E01               	movlw	1
  8693  001264  0012               	return	
  8694  001266                     __end_ofi2_send_msg:
  8695                           	opt stack 0
  8696                           pclatu	equ	0xFFB
  8697                           pclath	equ	0xFFA
  8698                           tblptru	equ	0xFF8
  8699                           tblptrh	equ	0xFF7
  8700                           tblptrl	equ	0xFF6
  8701                           tablat	equ	0xFF5
  8702                           prodh	equ	0xFF4
  8703                           prodl	equ	0xFF3
  8704                           intcon	equ	0xFF2
  8705                           postinc0	equ	0xFEE
  8706                           fsr0h	equ	0xFEA
  8707                           fsr0l	equ	0xFE9
  8708                           wreg	equ	0xFE8
  8709                           indf1	equ	0xFE7
  8710                           fsr1h	equ	0xFE2
  8711                           fsr1l	equ	0xFE1
  8712                           bsr	equ	0xFE0
  8713                           indf2	equ	0xFDF
  8714                           postinc2	equ	0xFDE
  8715                           postdec2	equ	0xFDD
  8716                           fsr2h	equ	0xFDA
  8717                           fsr2l	equ	0xFD9
  8718                           status	equ	0xFD8
  8719                           
  8720 ;; *************** function i2_memcpy *****************
  8721 ;; Defined at:
  8722 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  d1              2   52[COMRAM] PTR void 
  8725 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8726 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8727 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8728 ;;  s1              2   54[COMRAM] PTR const void 
  8729 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8730 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8731 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8732 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8733 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8734 ;;  n               2   56[COMRAM] unsigned int 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  memcpy          2   60[COMRAM] PTR const unsigned char 
  8737 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8738 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8739 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8740 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8741 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8742 ;;  memcpy          2   58[COMRAM] PTR unsigned char 
  8743 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8744 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8745 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  2   52[COMRAM] PTR void 
  8748 ;; Registers used:
  8749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8755 ;;      Params:         6       0       0       0       0
  8756 ;;      Locals:         4       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0
  8758 ;;      Totals:        10       0       0       0       0
  8759 ;;Total ram usage:       10 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		i2_send_msg
  8765 ;;		i2_recv_msg
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text52
  8770  001ACC                     __ptext52:
  8771                           	opt stack 0
  8772  001ACC                     i2_memcpy:
  8773                           	opt stack 16
  8774                           
  8775                           ;incstack = 0
  8776  001ACC  C038  F03E         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8777  001AD0  C037  F03D         	movff	i2memcpy@s1,i2memcpy@s
  8778  001AD4  C036  F03C         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8779  001AD8  C035  F03B         	movff	i2memcpy@d1,i2memcpy@d
  8780  001ADC  D00E               	goto	i2l3970
  8781  001ADE                     i2l3964:
  8782  001ADE  C03D  FFD9         	movff	i2memcpy@s,fsr2l
  8783  001AE2  C03E  FFDA         	movff	i2memcpy@s+1,fsr2h
  8784  001AE6  C03B  FFE1         	movff	i2memcpy@d,fsr1l
  8785  001AEA  C03C  FFE2         	movff	i2memcpy@d+1,fsr1h
  8786  001AEE  CFDF FFE7          	movff	indf2,indf1
  8787  001AF2  4A3D               	infsnz	i2memcpy@s,f,c
  8788  001AF4  2A3E               	incf	i2memcpy@s+1,f,c
  8789  001AF6  4A3B               	infsnz	i2memcpy@d,f,c
  8790  001AF8  2A3C               	incf	i2memcpy@d+1,f,c
  8791  001AFA                     i2l3970:
  8792  001AFA  0639               	decf	i2memcpy@n,f,c
  8793  001AFC  A0D8               	btfss	status,0,c
  8794  001AFE  063A               	decf	i2memcpy@n+1,f,c
  8795  001B00  2839               	incf	i2memcpy@n& (0+255),w,c
  8796  001B02  B4D8               	btfsc	status,2,c
  8797  001B04  283A               	incf	(i2memcpy@n+1)& (0+255),w,c
  8798  001B06  B4D8               	btfsc	status,2,c
  8799                           
  8800                           ;	Return value of i2_memcpy is never used
  8801  001B08  0012               	return	
  8802  001B0A  D7E9               	goto	i2l3964
  8803  001B0C                     __end_ofi2_memcpy:
  8804                           	opt stack 0
  8805                           pclatu	equ	0xFFB
  8806                           pclath	equ	0xFFA
  8807                           tblptru	equ	0xFF8
  8808                           tblptrh	equ	0xFF7
  8809                           tblptrl	equ	0xFF6
  8810                           tablat	equ	0xFF5
  8811                           prodh	equ	0xFF4
  8812                           prodl	equ	0xFF3
  8813                           intcon	equ	0xFF2
  8814                           postinc0	equ	0xFEE
  8815                           fsr0h	equ	0xFEA
  8816                           fsr0l	equ	0xFE9
  8817                           wreg	equ	0xFE8
  8818                           indf1	equ	0xFE7
  8819                           fsr1h	equ	0xFE2
  8820                           fsr1l	equ	0xFE1
  8821                           bsr	equ	0xFE0
  8822                           indf2	equ	0xFDF
  8823                           postinc2	equ	0xFDE
  8824                           postdec2	equ	0xFDD
  8825                           fsr2h	equ	0xFDA
  8826                           fsr2l	equ	0xFD9
  8827                           status	equ	0xFD8
  8828                           
  8829 ;; *************** function _SleepIfOkay *****************
  8830 ;; Defined at:
  8831 ;;		line 228 in file "src/messages.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;		None               void
  8838 ;; Registers used:
  8839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8845 ;;      Params:         0       0       0       0       0
  8846 ;;      Locals:         0       0       0       0       0
  8847 ;;      Temps:          0       0       0       0       0
  8848 ;;      Totals:         0       0       0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    2
  8852 ;; This function calls:
  8853 ;;		_enter_sleep_mode
  8854 ;;		i2_check_msg
  8855 ;;		i2_in_high_int
  8856 ;;		i2_in_low_int
  8857 ;; This function is called by:
  8858 ;;		_InterruptHandlerHigh
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text53
  8863  001930                     __ptext53:
  8864                           	opt stack 0
  8865  001930                     _SleepIfOkay:
  8866                           	opt stack 17
  8867                           
  8868                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8869                           
  8870                           ;incstack = 0
  8871  001930  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  8872  001932  D001               	goto	i2l2470
  8873  001934  0012               	return	
  8874  001936                     i2l2470:
  8875                           
  8876                           ;messages.c: 232: }
  8877                           ;messages.c: 235: if (in_low_int()) {
  8878  001936  EC43  F00E         	call	i2_in_low_int	;wreg free
  8879  00193A  5038               	movf	?i2_in_low_int+1,w,c
  8880  00193C  1037               	iorwf	?i2_in_low_int,w,c
  8881  00193E  A4D8               	btfss	status,2,c
  8882  001940  0012               	return	
  8883                           
  8884                           ;messages.c: 237: }
  8885                           ;messages.c: 240: if (!in_high_int()) {
  8886                           
  8887                           ;messages.c: 236: return;
  8888  001942  EC43  F00F         	call	i2_in_high_int	;wreg free
  8889  001946  5036               	movf	?i2_in_high_int+1,w,c
  8890  001948  1035               	iorwf	?i2_in_high_int,w,c
  8891  00194A  B4D8               	btfsc	status,2,c
  8892  00194C  0012               	return	
  8893                           
  8894                           ;messages.c: 242: }
  8895                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8896                           
  8897                           ;messages.c: 241: return;
  8898  00194E  0101               	movlb	1	; () banked
  8899  001950  0E01               	movlw	high _ToMainHigh_MQ
  8900  001952  6E36               	movwf	i2check_msg@qptr+1,c
  8901  001954  0101               	movlb	1	; () banked
  8902  001956  0E6C               	movlw	low _ToMainHigh_MQ
  8903  001958  6E35               	movwf	i2check_msg@qptr,c
  8904  00195A  ECD2  F00E         	call	i2_check_msg	;wreg free
  8905  00195E  0900               	iorlw	0
  8906  001960  A4D8               	btfss	status,2,c
  8907  001962  0012               	return	
  8908                           
  8909                           ;messages.c: 249: }
  8910                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8911                           
  8912                           ;messages.c: 248: return;
  8913  001964  0100               	movlb	0	; () banked
  8914  001966  0E00               	movlw	high _ToMainLow_MQ
  8915  001968  6E36               	movwf	i2check_msg@qptr+1,c
  8916  00196A  0100               	movlb	0	; () banked
  8917  00196C  0E80               	movlw	low _ToMainLow_MQ
  8918  00196E  6E35               	movwf	i2check_msg@qptr,c
  8919  001970  ECD2  F00E         	call	i2_check_msg	;wreg free
  8920  001974  0900               	iorlw	0
  8921  001976  B4D8               	btfsc	status,2,c
  8922                           
  8923                           ;messages.c: 252: }
  8924                           ;messages.c: 253: enter_sleep_mode();
  8925                           
  8926                           ;messages.c: 251: return;
  8927  001978  EC4D  F00F         	call	_enter_sleep_mode	;wreg free
  8928  00197C  0012               	return	
  8929  00197E                     __end_of_SleepIfOkay:
  8930                           	opt stack 0
  8931                           pclatu	equ	0xFFB
  8932                           pclath	equ	0xFFA
  8933                           tblptru	equ	0xFF8
  8934                           tblptrh	equ	0xFF7
  8935                           tblptrl	equ	0xFF6
  8936                           tablat	equ	0xFF5
  8937                           prodh	equ	0xFF4
  8938                           prodl	equ	0xFF3
  8939                           intcon	equ	0xFF2
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           bsr	equ	0xFE0
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function i2_in_low_int *****************
  8956 ;; Defined at:
  8957 ;;		line 30 in file "src/interrupts.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  2   54[COMRAM] int 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8971 ;;      Params:         2       0       0       0       0
  8972 ;;      Locals:         0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0
  8974 ;;      Totals:         2       0       0       0       0
  8975 ;;Total ram usage:        2 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    1
  8978 ;; This function calls:
  8979 ;;		i2_in_high_int
  8980 ;; This function is called by:
  8981 ;;		_SleepIfOkay
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text54
  8986  001C86                     __ptext54:
  8987                           	opt stack 0
  8988  001C86                     i2_in_low_int:
  8989                           	opt stack 17
  8990                           
  8991                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8992                           
  8993                           ;incstack = 0
  8994  001C86  ACF2               	btfss	intcon,6,c	;volatile
  8995  001C88  D005               	goto	i2l2976
  8996                           
  8997                           ;interrupts.c: 32: return (0);
  8998  001C8A  0E00               	movlw	0
  8999  001C8C  6E38               	movwf	?i2_in_low_int+1,c
  9000  001C8E  0E00               	movlw	0
  9001  001C90  6E37               	movwf	?i2_in_low_int,c
  9002  001C92  0012               	return	
  9003  001C94                     i2l2976:
  9004  001C94  EC43  F00F         	call	i2_in_high_int	;wreg free
  9005  001C98  5036               	movf	?i2_in_high_int+1,w,c
  9006  001C9A  1035               	iorwf	?i2_in_high_int,w,c
  9007  001C9C  B4D8               	btfsc	status,2,c
  9008  001C9E  D005               	goto	i2l2984
  9009                           
  9010                           ;interrupts.c: 34: return (0);
  9011  001CA0  0E00               	movlw	0
  9012  001CA2  6E38               	movwf	?i2_in_low_int+1,c
  9013  001CA4  0E00               	movlw	0
  9014  001CA6  6E37               	movwf	?i2_in_low_int,c
  9015  001CA8  0012               	return	
  9016  001CAA                     i2l2984:
  9017                           
  9018                           ;interrupts.c: 36: return (1);
  9019  001CAA  0E00               	movlw	0
  9020  001CAC  6E38               	movwf	?i2_in_low_int+1,c
  9021  001CAE  0E01               	movlw	1
  9022  001CB0  6E37               	movwf	?i2_in_low_int,c
  9023  001CB2  0012               	return	
  9024  001CB4                     __end_ofi2_in_low_int:
  9025                           	opt stack 0
  9026                           pclatu	equ	0xFFB
  9027                           pclath	equ	0xFFA
  9028                           tblptru	equ	0xFF8
  9029                           tblptrh	equ	0xFF7
  9030                           tblptrl	equ	0xFF6
  9031                           tablat	equ	0xFF5
  9032                           prodh	equ	0xFF4
  9033                           prodl	equ	0xFF3
  9034                           intcon	equ	0xFF2
  9035                           postinc0	equ	0xFEE
  9036                           fsr0h	equ	0xFEA
  9037                           fsr0l	equ	0xFE9
  9038                           wreg	equ	0xFE8
  9039                           indf1	equ	0xFE7
  9040                           fsr1h	equ	0xFE2
  9041                           fsr1l	equ	0xFE1
  9042                           bsr	equ	0xFE0
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function i2_in_high_int *****************
  9051 ;; Defined at:
  9052 ;;		line 22 in file "src/interrupts.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  2   52[COMRAM] int 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9066 ;;      Params:         2       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0
  9069 ;;      Totals:         2       0       0       0       0
  9070 ;;Total ram usage:        2 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_SleepIfOkay
  9076 ;;		i2_in_low_int
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text55
  9081  001E86                     __ptext55:
  9082                           	opt stack 0
  9083  001E86                     i2_in_high_int:
  9084                           	opt stack 17
  9085                           
  9086                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9087                           
  9088                           ;incstack = 0
  9089  001E86  0E00               	movlw	0
  9090  001E88  AEF2               	btfss	intcon,7,c	;volatile
  9091  001E8A  0E01               	movlw	1
  9092  001E8C  6E35               	movwf	?i2_in_high_int,c
  9093  001E8E  6A36               	clrf	?i2_in_high_int+1,c
  9094  001E90  0012               	return	
  9095  001E92                     __end_ofi2_in_high_int:
  9096                           	opt stack 0
  9097                           pclatu	equ	0xFFB
  9098                           pclath	equ	0xFFA
  9099                           tblptru	equ	0xFF8
  9100                           tblptrh	equ	0xFF7
  9101                           tblptrl	equ	0xFF6
  9102                           tablat	equ	0xFF5
  9103                           prodh	equ	0xFF4
  9104                           prodl	equ	0xFF3
  9105                           intcon	equ	0xFF2
  9106                           postinc0	equ	0xFEE
  9107                           fsr0h	equ	0xFEA
  9108                           fsr0l	equ	0xFE9
  9109                           wreg	equ	0xFE8
  9110                           indf1	equ	0xFE7
  9111                           fsr1h	equ	0xFE2
  9112                           fsr1l	equ	0xFE1
  9113                           bsr	equ	0xFE0
  9114                           indf2	equ	0xFDF
  9115                           postinc2	equ	0xFDE
  9116                           postdec2	equ	0xFDD
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function i2_check_msg *****************
  9122 ;; Defined at:
  9123 ;;		line 222 in file "src/messages.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  qptr            2   52[COMRAM] PTR struct __msg_queue
  9126 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      unsigned char 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9138 ;;      Params:         2       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0
  9140 ;;      Temps:          1       0       0       0       0
  9141 ;;      Totals:         3       0       0       0       0
  9142 ;;Total ram usage:        3 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_SleepIfOkay
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text56
  9152  001DA4                     __ptext56:
  9153                           	opt stack 0
  9154  001DA4                     i2_check_msg:
  9155                           	opt stack 18
  9156                           
  9157                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9158                           
  9159                           ;incstack = 0
  9160  001DA4  EE20 F035          	lfsr	2,53
  9161  001DA8  5035               	movf	i2check_msg@qptr,w,c
  9162  001DAA  26D9               	addwf	fsr2l,f,c
  9163  001DAC  5036               	movf	i2check_msg@qptr+1,w,c
  9164  001DAE  22DA               	addwfc	fsr2h,f,c
  9165  001DB0  50DF               	movf	indf2,w,c
  9166  001DB2  6E37               	movwf	??i2_check_msg& (0+255),c
  9167  001DB4  5037               	movf	??i2_check_msg,w,c
  9168  001DB6  0D0D               	mullw	13
  9169  001DB8  50F3               	movf	prodl,w,c
  9170  001DBA  2435               	addwf	i2check_msg@qptr,w,c
  9171  001DBC  6ED9               	movwf	fsr2l,c
  9172  001DBE  50F4               	movf	prodh,w,c
  9173  001DC0  2036               	addwfc	i2check_msg@qptr+1,w,c
  9174  001DC2  6EDA               	movwf	fsr2h,c
  9175  001DC4  50DF               	movf	indf2,w,c
  9176  001DC6  0012               	return	
  9177  001DC8                     __end_ofi2_check_msg:
  9178                           	opt stack 0
  9179                           pclatu	equ	0xFFB
  9180                           pclath	equ	0xFFA
  9181                           tblptru	equ	0xFF8
  9182                           tblptrh	equ	0xFF7
  9183                           tblptrl	equ	0xFF6
  9184                           tablat	equ	0xFF5
  9185                           prodh	equ	0xFF4
  9186                           prodl	equ	0xFF3
  9187                           intcon	equ	0xFF2
  9188                           postinc0	equ	0xFEE
  9189                           fsr0h	equ	0xFEA
  9190                           fsr0l	equ	0xFE9
  9191                           wreg	equ	0xFE8
  9192                           indf1	equ	0xFE7
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           bsr	equ	0xFE0
  9196                           indf2	equ	0xFDF
  9197                           postinc2	equ	0xFDE
  9198                           postdec2	equ	0xFDD
  9199                           fsr2h	equ	0xFDA
  9200                           fsr2l	equ	0xFD9
  9201                           status	equ	0xFD8
  9202                           
  9203 ;; *************** function _enter_sleep_mode *****************
  9204 ;; Defined at:
  9205 ;;		line 202 in file "src/messages.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;		None               void
  9212 ;; Registers used:
  9213 ;;		None
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9219 ;;      Params:         0       0       0       0       0
  9220 ;;      Locals:         0       0       0       0       0
  9221 ;;      Temps:          0       0       0       0       0
  9222 ;;      Totals:         0       0       0       0       0
  9223 ;;Total ram usage:        0 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		_SleepIfOkay
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text57
  9233  001E9A                     __ptext57:
  9234                           	opt stack 0
  9235  001E9A                     _enter_sleep_mode:
  9236                           	opt stack 18
  9237                           
  9238                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9239                           
  9240                           ;incstack = 0
  9241  001E9A  8ED3               	bsf	4051,7,c	;volatile
  9242  001E9C  0003               	sleep		;# 
  9243  001E9E  0012               	return	
  9244  001EA0                     __end_of_enter_sleep_mode:
  9245                           	opt stack 0
  9246  0000                     pclatu	equ	0xFFB
  9247                           pclath	equ	0xFFA
  9248                           tblptru	equ	0xFF8
  9249                           tblptrh	equ	0xFF7
  9250                           tblptrl	equ	0xFF6
  9251                           tablat	equ	0xFF5
  9252                           prodh	equ	0xFF4
  9253                           prodl	equ	0xFF3
  9254                           intcon	equ	0xFF2
  9255                           postinc0	equ	0xFEE
  9256                           fsr0h	equ	0xFEA
  9257                           fsr0l	equ	0xFE9
  9258                           wreg	equ	0xFE8
  9259                           indf1	equ	0xFE7
  9260                           fsr1h	equ	0xFE2
  9261                           fsr1l	equ	0xFE1
  9262                           bsr	equ	0xFE0
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           postdec2	equ	0xFDD
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8
  9269                           pclatu	equ	0xFFB
  9270                           pclath	equ	0xFFA
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           postinc0	equ	0xFEE
  9279                           fsr0h	equ	0xFEA
  9280                           fsr0l	equ	0xFE9
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           fsr1h	equ	0xFE2
  9284                           fsr1l	equ	0xFE1
  9285                           bsr	equ	0xFE0
  9286                           indf2	equ	0xFDF
  9287                           postinc2	equ	0xFDE
  9288                           postdec2	equ	0xFDD
  9289                           fsr2h	equ	0xFDA
  9290                           fsr2l	equ	0xFD9
  9291                           status	equ	0xFD8
  9292                           
  9293                           	psect	rparam
  9294  0000                     pclatu	equ	0xFFB
  9295                           pclath	equ	0xFFA
  9296                           tblptru	equ	0xFF8
  9297                           tblptrh	equ	0xFF7
  9298                           tblptrl	equ	0xFF6
  9299                           tablat	equ	0xFF5
  9300                           prodh	equ	0xFF4
  9301                           prodl	equ	0xFF3
  9302                           intcon	equ	0xFF2
  9303                           postinc0	equ	0xFEE
  9304                           fsr0h	equ	0xFEA
  9305                           fsr0l	equ	0xFE9
  9306                           wreg	equ	0xFE8
  9307                           indf1	equ	0xFE7
  9308                           fsr1h	equ	0xFE2
  9309                           fsr1l	equ	0xFE1
  9310                           bsr	equ	0xFE0
  9311                           indf2	equ	0xFDF
  9312                           postinc2	equ	0xFDE
  9313                           postdec2	equ	0xFDD
  9314                           fsr2h	equ	0xFDA
  9315                           fsr2l	equ	0xFD9
  9316                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      75
    BANK0           128     39      95
    BANK1           256     34     196
    BANK2           256     73      73
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 12
		 -> NULL(NULL[0]), main@t1thread_data(BANK2[12]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_OpenUSART
    _timer1_lthread->___lwmod
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0   15604
                                             33 BANK1      1     1      0
                                              0 BANK2     73    73      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             20 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      13     5      8    3683
                                             20 BANK1     13     5      8
                         _ReadTimer1
                  _ToMainLow_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2701
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                              4 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             33 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     170
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             37 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              0 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             37 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             33 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                              4 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             33 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             33 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   10457
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               6     6      0    3280
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3481
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3696
                                             26 COMRAM     3     3      0
                        _WriteTimer1
                       i1_ReadTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3447
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2859
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) i1_ReadTimer1                                         4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10905
                                             19 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6686
                                             10 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             52 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                              5 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             62 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3983
                                              8 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             62 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             52 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             54 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             52 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             52 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     i1_ReadTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     49      49       8       28.5%
BITBANK1           100      0       0      10        0.0%
BANK1              100     22      C4       6       76.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     27      5F       5       74.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7       9        0.0%
DATA                 0      0     1B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 23 22:29:12 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 004A  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1A4A  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1BEE  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0042  
              i2recv_msg@tlength 00B7             ?_FromMainLow_recvmsg 0019  
                            l119 0892                              l510 14CA  
                            l511 14D8                              l512 14DA  
                            l505 14A8                              l437 1CD8  
                            l461 1B64                              l509 14C8  
                            l438 1CDA                              l463 1B7C  
                            l464 1B7E                              l738 1E08  
           ?_FromMainLow_sendmsg 01B2  __size_of_uart_trans_int_handler 006C  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D7  
               ??_init_uart_recv 00D9                  ReadTimer1@timer 00D9  
            i2recv_msg@maxlength 0041                             l1050 1586  
                           l3242 19B4                             l3234 1992  
                           l3500 093A                             l3510 09E8  
                           l3502 0958                             l3256 19F8  
                           l3514 0A3A                             l3700 0C36  
                           l3508 0996                             l3800 0AC6  
                           l3704 0C64                             l3650 16B4  
                           l3706 0C8A                             l3490 08E4  
                           l3564 1B66                             l3732 106A  
                           l3484 0840                             l3476 07FE  
                           l3590 14AA                             l3582 1494  
                           l3662 170C                             l3486 0898  
                           l3494 0902                             l3816 0B8C  
                           l3656 16E0                             l3672 0CDE  
                           l3736 1092                             l3488 08C6  
                           l3496 091A                             l3780 18F4  
                           l3748 175C                             l3676 0D62  
                           l3766 0E2C                             l3696 0BFA  
                           l3786 1918                             l3698 0C0A  
                           l3892 1572                             l3884 1524  
                           l3886 1536                             l3888 153E  
                           _LATA 000F89                             _LATB 000F8A  
                           u3077 1E0A                             i1l52 007C  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 10C2  
                           _main 0720                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 022B  
                     i1_send_msg 132E                             pclat 000FFA  
                    i2_check_msg 1DA4                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0035  
                           start 00C2                       i2_recv_msg 0ED4  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 1194  
      ToMainHigh_recvmsg@msgtype 01B4                   send_msg@length 01A8  
    __size_of_timer0_int_handler 0084                      _Delay1KTCYx 1E04  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00DD  
                          ?_main 0001     __size_ofi1_ToMainLow_sendmsg 0026  
                          _CMCON 000FB4                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D7  
                          i1l350 1864                            i1l353 183C  
                __end_of___lwmod 1590                       i1memcpy@d1 0001  
                          i1l523 1DF4                            i2l311 053A  
                          i2l305 049A                            i2l267 12E2  
                          i2l283 01D2                            i2l277 0528  
                          i2l279 018E                            i2l297 0362  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 00BB  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0035                       i2memcpy@s1 0037  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1A08       ToMainLow_recvmsg@maxlength 01B8  
        timer0_lthread@msgbuffer 01A8          i2c_configure_slave@addr 00D7  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 17FC                 __end_ofi1_memcpy 1ACC  
               __end_ofi2_memcpy 1B0C                  __initialization 1D58  
     uart_trans_int_handler@data 001F                     __end_of_main 0A5A  
   uart_trans_int_handler@length 0023                       _ReadTimer1 1E1A  
    __size_of_timer1_int_handler 0030       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0036    __size_of_FromMainHigh_recvmsg 0032  
          __size_ofi2_in_low_int 002E                           ??_main 01C3  
                send_msg@msgtype 01A9                    __activetblptr 000002  
                send_msg@tlength 01AD       FromMainLow_sendmsg@msgtype 01B2  
           __end_of_handle_start 132E                           _ADCON1 000FC1  
        ??_uart_recv_int_handler 001B                           i1l4008 1108  
                         i1l4024 1190                           i1l4054 1454  
                         i1l4070 182C                           i1l4072 1832  
                         i1l4092 0070                           i1l4078 1856  
                         i1l4086 0066                           i2l3312 020A  
                         i1l3960 1ABA                       _OpenTimer0 1CB4  
                         i2l3410 06DE                           i2l3402 0638  
                         i2l3330 028A                           i2l3314 0236  
                         i1l3954 1A9E                       _OpenTimer1 1B4A  
                         i2l3332 02CA                           i2l3324 0272  
                         i2l2470 1936                   __CFG_WDTEN$OFF 000000  
                         i2l3360 042A                           i2l3272 1658  
                         i1l3984 1366                           i2l3354 03D6  
                         i2l3266 164E                           i2l3356 0418  
                         i2l3382 04FC                           i2l3294 0184  
                         i2l3288 016C                           i2l3394 059E  
                         i2l3388 053E                           i2l3908 11E0  
                         i2l3860 1316                           i2l3932 0F2E  
                         i2l2984 1CAA                           i2l2976 1C94  
                         i2l3970 1AFA                           i2l3858 12FE  
                         i2l3964 1ADE                           i2l3948 0FD4  
    __end_of_i2c_configure_slave 1D30                    ??_SleepIfOkay 0039  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                      ?i1_send_msg 000B  
  __end_of_start_i2c_slave_reply 0DD0               timer0_lthread@tptr 01A2  
        FromMainLow_recvmsg@data 001B                      ?i2_recv_msg 003F  
                   i2_in_low_int 1C86                      ?i2_send_msg 003F  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 00C6                 OpenTimer0@config 00D7  
                         _ic_ptr 00DD                        ??___lwmod 00DB  
                  main@msgbuffer 0200                 __end_of_init_i2c 18D2  
               OpenTimer1@config 00D7                           _memcpy 18D2  
                         clear_0 1D5E                           clear_1 1D6A  
                         _uc_ptr 0048                           main@ic 022D  
                         main@uc 021A                 __end_of_recv_msg 0B90  
    start_i2c_slave_reply@length 00DB                        ??_in_main 00DD  
               __end_of_send_msg 0ED4            timer0_int_handler@val 00C5  
        i2c_int_handler@i2c_data 00C5                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00DA         ToMainLow_recvmsg@msgtype 01B4  
           __size_of_in_high_int 0012          FromMainLow_sendmsg@data 01B3  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1EA0  
                     __accesstop 0080          __end_of__initialization 1D74  
     __end_of_ToMainHigh_recvmsg 1A8C       __end_of_ToMainHigh_sendmsg 1D08  
             ?_init_uart_lthread 00D7      __end_of_init_timer1_lthread 1B4A  
            __end_of_SleepIfOkay 197E                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 00D9  
                    ?_ReadTimer1 00D7               __size_of_check_msg 0036  
              __end_of_ReadUSART 1E04        timer0_int_handler@msgtype 00C3  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 168E  
    __end_of_InterruptHandlerLow 00C2                        ?i2_memcpy 0035  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 0104  
               _enter_sleep_mode 1E9A              __size_ofi2_send_msg 00D2  
           timer1_lthread@length 01BA                    ReadUSART@data 0001  
              __end_of_OpenUSART 1506                    check_msg@qptr 00D7  
           timer1_lthread@retval 01C0        __end_of_init_uart_lthread 1EA2  
        ??_block_on_To_msgqueues 01A2             __size_of_init_queues 006E  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0048  
            i1_ToMainLow_sendmsg 1D7E          __end_of_i2c_int_handler 0720  
                   ?i2_check_msg 0035               timer1_lthread@even 01C1  
             timer1_lthread@tptr 01B6                recv_msg@maxlength 01A8  
                recv_msg@msgtype 01A9                  recv_msg@tlength 01B0  
          __size_of_handle_start 00C8                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0037                          ?_memcpy 00D7  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0037  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 0012  
           ?i1_ToMainLow_sendmsg 0017          __size_of_timer1_lthread 0132  
                     ??i1_memcpy 0007                       ??i2_memcpy 003B  
               i1send_msg@length 000D                    i2_in_high_int 1E86  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1C24  
                      ?_init_i2c 00D7                      _SleepIfOkay 1930  
                      ?_recv_msg 01A6                       _in_low_int 197E  
                   _handle_start 1266                          __Hparam 0000  
                      ?_send_msg 01A6                          __Lparam 0000  
     __end_of_timer0_int_handler 1614      __end_of_FromMainLow_recvmsg 1D58  
    __end_of_FromMainLow_sendmsg 1BB8                 init_uart_recv@uc 00D7  
                        ___lwmod 1506                  __CFG_STVREN$OFF 000000  
                        __pcinit 1D58                  __size_of_memcpy 005E  
                     _init_queue 1714                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0038                          __ptext0 0720  
                        __ptext1 0FD8                          __ptext2 1B82  
                        __ptext3 0B90                          __ptext4 1506  
                        __ptext5 1BB8                          __ptext6 0DD0  
                        __ptext7 1E1A                          __ptext8 1E2C  
                        __ptext9 0CC2                uart_lthread@index 01BF  
                      _T0CONbits 000FD5                          _in_main 19C4  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1E86  
            __end_of_WriteTimer1 1E74                   ?i2_in_high_int 0035  
 __end_of_uart_trans_int_handler 1868                    ?i1_ReadTimer1 0001  
     __size_of_init_uart_lthread 0002                   __pintcode_body 1614  
   __end_of_FromMainHigh_recvmsg 1C56             end_of_initialization 1D74  
        timer1_lthread@msgbuffer 01BC   __size_of_uart_recv_int_handler 009C  
                        memcpy@d 01A2                          memcpy@n 00DB  
                        memcpy@s 01A4    __end_of_uart_recv_int_handler 1474  
                     ??_init_i2c 00D9                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00C3                    __Lmediumconst 0000  
                        int_func 1614                     ??i1_send_msg 0011  
                  ?_uart_lthread 01B6          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                     ??i2_recv_msg 0046  
                     ??_recv_msg 01AD                     ??i2_send_msg 0045  
                     ??_send_msg 01AC       __end_of_timer1_int_handler 1C86  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 00BB               __end_ofi1_recv_msg 1194  
             __end_ofi1_send_msg 13D8                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0FD8                   ??i1_ReadTimer1 0003  
             __end_ofi2_send_msg 1266    FromMainHigh_recvmsg@maxlength 00BF  
       timer1_int_handler@result 001C                   ??_uart_lthread 00DD  
                      _TXSTAbits 000FAC                       main@length 022C  
                    ?_in_low_int 00D9            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0CC2     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1EA0  
                   ??_ReadTimer1 00D9               _ToMainHigh_recvmsg 1A4A  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1CDE  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 1E2C                      ?_init_queue 00D7  
                      i2memcpy@d 003B                      _WriteTimer0 1E74  
                    _WriteTimer1 1E62                        i2memcpy@n 0039  
                      i2memcpy@s 003D                   _timer1_lthread 0B90  
                 __end_of_memcpy 1930                _enable_interrupts 1E92  
           __size_of_Delay1KTCYx 0016              ?_ToMainHigh_recvmsg 01B4  
                ??i2_in_high_int 0037         i2c_int_handler@data_read 00C8  
            ?_ToMainHigh_sendmsg 00BB          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1D58  
                  ??_in_high_int 00D9                        _ReadUSART 1DE6  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
      FromMainLow_sendmsg@length 01B5              ??_enable_interrupts 00D7  
                   ??_OpenTimer0 00D7                     ??_OpenTimer1 00D7  
 __size_of_block_on_To_msgqueues 007E               __end_of_ReadTimer1 1E2C  
  __end_of_block_on_To_msgqueues 1714                        _OpenUSART 1474  
   __end_of_InterruptHandlerHigh 1696                       init_i2c@ic 00D7  
           ??_ToMainHigh_recvmsg 00DD             ??_ToMainHigh_sendmsg 0046  
         __end_of_timer0_lthread 1E3E         i2c_int_handler@error_buf 00C0  
         __end_of_timer1_lthread 0CC2        __end_of_enable_interrupts 1E9A  
                       ??_memcpy 00DD            timer1_lthread@msgtype 01B8  
           _FromMainHigh_recvmsg 1C24     __size_of_init_timer1_lthread 003E  
             __end_of_OpenTimer0 1CDE               __end_of_OpenTimer1 1B82  
       i2c_int_handler@msg_ready 00C7                i1ReadTimer1@timer 0003  
                    __pbssCOMRAM 004A                       ?_ReadUSART 0001  
                  ??_init_queues 00DB                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2                    __pcstackBANK2 0200  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00D7  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D7  
       ToMainLow_sendmsg@msgtype 01B2     __size_of_InterruptHandlerLow 00AA  
            __end_of_in_high_int 1E50                       ?_OpenUSART 00D7  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B6  
                   _ToMainLow_MQ 0080              __size_of_init_queue 007A  
                 _init_uart_recv 1DC8                        _check_msg 1BEE  
                      __pnvBANK0 00DD           ?_start_i2c_slave_reply 00D7  
              __size_of_init_i2c 006A                     recv_msg@data 01AB  
                   recv_msg@qmsg 01B2                     recv_msg@slot 01AF  
                   recv_msg@qptr 01A6                __size_of_recv_msg 0136  
                      __pintcode 0008                __size_of_send_msg 0104  
           __end_ofi1_ReadTimer1 1E62                  ?_timer0_lthread 01A2  
                       ?___lwmod 00D7            ?_FromMainHigh_recvmsg 00BB  
                ?_timer1_lthread 01B6                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B6             __end_of_uart_lthread 10C2  
     i2c_int_handler@msg_to_send 00C6                         ?_in_main 00DB  
              WriteTimer0@timer0 0035               _timer0_int_handler 1590  
              WriteTimer1@timer1 0001       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 01B8            ToMainLow_sendmsg@data 01B3  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01B6           __end_of_init_uart_recv 1DE6  
            __end_of_init_queues 17FC                  i2check_msg@qptr 0035  
                     ?_check_msg 00D7                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0037  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00BC  
    __end_ofi1_ToMainLow_sendmsg 1DA4                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 00C0                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1C56                         i1_memcpy 1A8C  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1ACC             timer0_lthread@msgval 00D7  
       FromMainHigh_recvmsg@data 00BD                      _in_high_int 1E3E  
                   send_msg@data 01AA              _i2c_configure_slave 1D08  
                   send_msg@qmsg 01B0                     send_msg@slot 01AF  
                   send_msg@qptr 01A6            uart_lthread@msgbuffer 01BC  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D7  
                    ??_OpenUSART 00D9                  OpenUSART@config 00DC  
                 ??i2_in_low_int 0039            _uart_recv_int_handler 13D8  
                   ??_in_low_int 00DB                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0048  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 065A  
             ??_enter_sleep_mode 0035                 __size_of___lwmod 008A  
                   ??_init_queue 00D9                     ?_WriteTimer0 0035  
                   ?_WriteTimer1 0001          ToMainLow_sendmsg@length 01B5  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 0042  
    ToMainHigh_recvmsg@maxlength 01B8                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D7                      _init_queues 178E  
             __end_of_in_low_int 19C4                         __ptext10 1DC8  
                       __ptext11 1EA0                         __ptext20 197E  
                       __ptext12 1B0C                         __ptext21 1E3E  
                       __ptext13 178E                         __ptext30 1CB4  
                       __ptext22 1BEE                         __ptext14 1714  
                       __ptext23 1E04                         __ptext15 1868  
                       __ptext40 1A8C                         __ptext32 17FC  
                       __ptext24 1A08                         __ptext16 1D08  
                       __ptext41 1E50                         __ptext33 1D30  
                       __ptext25 1A4A                         __ptext17 1E92  
                       __ptext50 1CDE                         __ptext42 1E62  
                       __ptext34 10C2                         __ptext26 0A5A  
                       __ptext18 1696                         __ptext51 1194  
                       __ptext35 13D8                         __ptext27 18D2  
                       __ptext19 19C4                         __ptext52 1ACC  
                       __ptext44 1590                         __ptext36 1DE6  
                       __ptext28 1474                         __ptext53 1930  
                       __ptext45 1E74                         __ptext37 1C56  
                       __ptext29 1B4A                         __ptext54 1C86  
                       __ptext46 1C24                         __ptext38 1D7E  
                       __ptext55 1E86                         __ptext47 0ED4  
                       __ptext39 132E                         __ptext56 1DA4  
                       __ptext48 00C6                         __ptext57 1E9A  
                       __ptext49 1266                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 01BA         timer0_int_handler@length 00C1  
             uart_lthread@status 01BE                         _init_i2c 1868  
            _init_timer1_lthread 1B0C                    __size_of_main 033A  
                  ??i2_check_msg 0037                main@t1thread_data 021F  
                    ??_check_msg 00D9               __end_of_init_queue 178E  
          __size_ofi1_ReadTimer1 0012             __size_of_SleepIfOkay 004E  
                       _recv_msg 0A5A            ??_i2c_configure_slave 00D7  
                       _send_msg 0DD0                   init_queue@qptr 00D7  
          __size_of_uart_lthread 00EA                   i2recv_msg@data 0044  
  uart_trans_int_handler@msgtype 0022                   i2recv_msg@qmsg 00B9  
                  ??_Delay1KTCYx 00D7                   i2recv_msg@slot 00B6  
                 i2recv_msg@qptr 003F                         main@baud 020E  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00D7  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00D7  
                       memcpy@d1 00D7                         memcpy@s1 00D9  
          __end_ofi2_in_high_int 1E92     i2c_int_handler@overrun_error 00C4  
                   i1_ReadTimer1 1E50                 i2send_msg@length 0041  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D9  
               ___lwmod@dividend 00D7           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0FD8                   main@UARTConfig 020F  
          _block_on_To_msgqueues 1696                    ?_handle_start 0001  
               ??_timer0_lthread 00D7      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01BE                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0046  
            __end_ofi2_check_msg 1DC8            ??_init_timer1_lthread 00D9  
         ??_InterruptHandlerHigh 00C9                _ToMainLow_recvmsg 1A08  
              _ToMainLow_sendmsg 1BB8               main@last_reg_recvd 020D  
                ___lwmod@divisor 00D9             __end_ofi2_in_low_int 1CB4  
             ?_ToMainLow_recvmsg 01B4              __end_of_Delay1KTCYx 1E1A  
              ??_i2c_int_handler 00BE                  ___lwmod@counter 00DC  
             ?_ToMainLow_sendmsg 01B2                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0043  
          ??_InterruptHandlerLow 0024              ??_ToMainLow_recvmsg 00DD  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003F              ??_ToMainLow_sendmsg 00DD  
            _FromMainLow_recvmsg 1D30                   ??_handle_start 0035  
            _FromMainLow_sendmsg 1B82                     _USART_Status 004B  
