

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb 14 15:36:33 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  001BA6                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for timer1_lthread@F5129
    79  001BA6  C8                 	db	200
    80  001BA7  48                 	db	72
    81  0000                     _ADCON1	set	4033
    82  0000                     _CMCON	set	4020
    83  0000                     _INTCONbits	set	4082
    84  0000                     _IPR1bits	set	3999
    85  0000                     _LATA	set	3977
    86  0000                     _LATB	set	3978
    87  0000                     _OSCCON	set	4051
    88  0000                     _OSCCONbits	set	4051
    89  0000                     _OSCTUNEbits	set	3995
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIR1bits	set	3998
    92  0000                     _PORTA	set	3968
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCREG	set	4014
    95  0000                     _RCSTA	set	4011
    96  0000                     _RCSTAbits	set	4011
    97  0000                     _SPBRG	set	4015
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPBUF	set	4041
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPCON1bits	set	4038
   103  0000                     _SSPCON2	set	4037
   104  0000                     _SSPCON2bits	set	4037
   105  0000                     _SSPSTAT	set	4039
   106  0000                     _SSPSTATbits	set	4039
   107  0000                     _T0CON	set	4053
   108  0000                     _T0CONbits	set	4053
   109  0000                     _T1CON	set	4045
   110  0000                     _T1CONbits	set	4045
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _TRISA	set	3986
   116  0000                     _TRISB	set	3987
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TXREG	set	4013
   119  0000                     _TXSTA	set	4012
   120  0000                     _TXSTAbits	set	4012
   121                           
   122                           	psect	nvCOMRAM
   123  00004D                     __pnvCOMRAM:
   124                           	opt stack 0
   125  00004D                     _uc_ptr:
   126                           	opt stack 0
   127  00004D                     	ds	2
   128                           
   129                           	psect	nvBANK0
   130  0000E5                     __pnvBANK0:
   131                           	opt stack 0
   132  0000E5                     _ic_ptr:
   133                           	opt stack 0
   134  0000E5                     	ds	2
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  00187C                     __pcinit:
   140                           	opt stack 0
   141  00187C                     start_initialization:
   142                           	opt stack 0
   143  00187C                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK1 (162 bytes)
   147  00187C  EE01  F000         	lfsr	0,__pbssBANK1
   148  001880  0EA2               	movlw	162
   149  001882                     clear_0:
   150  001882  6AEE               	clrf	postinc0,c
   151  001884  06E8               	decf	wreg,f,c
   152  001886  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to BANK0 (54 bytes)
   155  001888  EE00  F080         	lfsr	0,__pbssBANK0
   156  00188C  0E36               	movlw	54
   157  00188E                     clear_1:
   158  00188E  6AEE               	clrf	postinc0,c
   159  001890  06E8               	decf	wreg,f,c
   160  001892  E1FD               	bnz	clear_1
   161                           
   162                           ; Clear objects allocated to COMRAM (2 bytes)
   163  001894  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   164  001896  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   165                           
   166                           ; Initialize objects allocated to BANK0 (2 bytes)
   167                           ; load TBLPTR registers with __pidataBANK0
   168  001898  0EA6               	movlw	low __pidataBANK0
   169  00189A  6EF6               	movwf	tblptrl,c
   170  00189C  0E1B               	movlw	high __pidataBANK0
   171  00189E  6EF7               	movwf	tblptrh,c
   172  0018A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   173  0018A2  6EF8               	movwf	tblptru,c
   174  0018A4  0009               	tblrd		*+	;fetch initializer
   175  0018A6  CFF5 F0E7          	movff	tablat,__pdataBANK0
   176  0018AA  0009               	tblrd		*+	;fetch initializer
   177  0018AC  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   178  0018B0                     end_of_initialization:
   179                           	opt stack 0
   180  0018B0                     __end_of__initialization:
   181                           	opt stack 0
   182  0018B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  0018B2  6EF8               	movwf	tblptru,c
   184  0018B4  0100               	movlb	0
   185  0018B6  EF4E  F003         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           
   193                           	psect	bssCOMRAM
   194  00004F                     __pbssCOMRAM:
   195                           	opt stack 0
   196  00004F                     _MQ_Main_Willing_to_block:
   197                           	opt stack 0
   198  00004F                     	ds	1
   199  000050                     _USART_Status:
   200                           	opt stack 0
   201  000050                     	ds	1
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	bssBANK0
   210  000080                     __pbssBANK0:
   211                           	opt stack 0
   212  000080                     _ToMainLow_MQ:
   213                           	opt stack 0
   214  000080                     	ds	54
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           
   222                           	psect	dataBANK0
   223  0000E7                     __pdataBANK0:
   224                           	opt stack 0
   225  0000E7                     timer1_lthread@F5129:
   226                           	opt stack 0
   227  0000E7                     	ds	2
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssBANK1
   236  000100                     __pbssBANK1:
   237                           	opt stack 0
   238  000100                     _FromMainHigh_MQ:
   239                           	opt stack 0
   240  000100                     	ds	54
   241  000136                     _FromMainLow_MQ:
   242                           	opt stack 0
   243  000136                     	ds	54
   244  00016C                     _ToMainHigh_MQ:
   245                           	opt stack 0
   246  00016C                     	ds	54
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254                           	psect	cstackBANK1
   255  0001A2                     __pcstackBANK1:
   256                           	opt stack 0
   257  0001A2                     ToMainLow_sendmsg@msgtype:
   258                           	opt stack 0
   259  0001A2                     ToMainLow_recvmsg@msgtype:
   260                           	opt stack 0
   261  0001A2                     ToMainHigh_recvmsg@msgtype:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x0
   265  0001A2                     	ds	1
   266  0001A3                     ToMainLow_sendmsg@data:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x1
   270  0001A3                     	ds	1
   271  0001A4                     ToMainLow_recvmsg@data:
   272                           	opt stack 0
   273  0001A4                     ToMainHigh_recvmsg@data:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x2
   277  0001A4                     	ds	1
   278  0001A5                     timer1_lthread@tptr:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x3
   282  0001A5                     	ds	1
   283  0001A6                     ToMainLow_recvmsg@maxlength:
   284                           	opt stack 0
   285  0001A6                     ToMainHigh_recvmsg@maxlength:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x4
   289  0001A6                     	ds	1
   290  0001A7                     timer1_lthread@msgtype:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x5
   294  0001A7                     	ds	2
   295  0001A9                     timer1_lthread@length:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x7
   299  0001A9                     	ds	2
   300  0001AB                     timer1_lthread@msgbuffer:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x9
   304  0001AB                     	ds	2
   305  0001AD                     ??_timer1_lthread:
   306                           
   307                           ; 0 bytes @ 0xB
   308  0001AD                     	ds	2
   309  0001AF                     timer1_lthread@retval:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0xD
   313  0001AF                     	ds	1
   314  0001B0                     timer1_lthread@even:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0xE
   318  0001B0                     	ds	2
   319  0001B2                     timer1_lthread@ctrl:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x10
   323  0001B2                     	ds	2
   324  0001B4                     ??_main:
   325                           
   326                           ; 0 bytes @ 0x12
   327  0001B4                     	ds	1
   328  0001B5                     main@t0thread_data:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x13
   332  0001B5                     	ds	2
   333  0001B7                     main@msgbuffer:
   334                           	opt stack 0
   335                           
   336                           ; 11 bytes @ 0x15
   337  0001B7                     	ds	11
   338  0001C2                     main@last_reg_recvd:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x20
   342  0001C2                     	ds	1
   343  0001C3                     main@baud:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x21
   347  0001C3                     	ds	1
   348  0001C4                     main@UARTConfig:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x22
   352  0001C4                     	ds	1
   353  0001C5                     main@uthread_data:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x23
   357  0001C5                     	ds	2
   358  0001C7                     main@t1thread_data:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x25
   362  0001C7                     	ds	2
   363  0001C9                     main@uc:
   364                           	opt stack 0
   365                           
   366                           ; 5 bytes @ 0x27
   367  0001C9                     	ds	5
   368  0001CE                     main@msgtype:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x2C
   372  0001CE                     	ds	1
   373  0001CF                     main@length:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x2D
   377  0001CF                     	ds	1
   378  0001D0                     main@ic:
   379                           	opt stack 0
   380                           
   381                           ; 28 bytes @ 0x2E
   382  0001D0                     	ds	28
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           
   390                           	psect	cstackBANK0
   391  0000B6                     __pcstackBANK0:
   392                           	opt stack 0
   393  0000B6                     timer0_int_handler@length:
   394                           	opt stack 0
   395  0000B6                     i2c_int_handler@error_buf:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x0
   399  0000B6                     	ds	2
   400  0000B8                     timer0_int_handler@msgtype:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x2
   404  0000B8                     	ds	1
   405  0000B9                     i2c_int_handler@data_written:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x3
   409  0000B9                     	ds	1
   410  0000BA                     i2c_int_handler@overrun_error:
   411                           	opt stack 0
   412  0000BA                     timer0_int_handler@val:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x4
   416  0000BA                     	ds	1
   417  0000BB                     i2c_int_handler@i2c_data:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x5
   421  0000BB                     	ds	1
   422  0000BC                     i2c_int_handler@msg_to_send:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x6
   426  0000BC                     	ds	1
   427  0000BD                     i2c_int_handler@msg_ready:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x7
   431  0000BD                     	ds	1
   432  0000BE                     i2c_int_handler@data_read:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x8
   436  0000BE                     	ds	1
   437  0000BF                     ??_InterruptHandlerHigh:
   438                           
   439                           ; 0 bytes @ 0x9
   440  0000BF                     	ds	14
   441  0000CD                     ?_ReadTimer1:
   442                           	opt stack 0
   443  0000CD                     ?_in_high_int:
   444                           	opt stack 0
   445  0000CD                     ?___lwmod:
   446                           	opt stack 0
   447  0000CD                     i2c_configure_slave@addr:
   448                           	opt stack 0
   449  0000CD                     OpenTimer0@config:
   450                           	opt stack 0
   451  0000CD                     OpenTimer1@config:
   452                           	opt stack 0
   453  0000CD                     WriteUSART@data:
   454                           	opt stack 0
   455  0000CD                     Delay1KTCYx@unit:
   456                           	opt stack 0
   457  0000CD                     init_queue@qptr:
   458                           	opt stack 0
   459  0000CD                     check_msg@qptr:
   460                           	opt stack 0
   461  0000CD                     start_i2c_slave_reply@msg:
   462                           	opt stack 0
   463  0000CD                     init_i2c@ic:
   464                           	opt stack 0
   465  0000CD                     init_uart_recv@uc:
   466                           	opt stack 0
   467  0000CD                     timer0_lthread@tptr:
   468                           	opt stack 0
   469  0000CD                     init_timer1_lthread@tptr:
   470                           	opt stack 0
   471  0000CD                     OpenUSART@spbrg:
   472                           	opt stack 0
   473  0000CD                     ___lwmod@dividend:
   474                           	opt stack 0
   475  0000CD                     memcpy@d1:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x17
   479  0000CD                     	ds	1
   480  0000CE                     uart_lthread@uptr:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x18
   484  0000CE                     	ds	1
   485  0000CF                     ??_OpenUSART:
   486  0000CF                     ??_start_i2c_slave_reply:
   487  0000CF                     ??_init_queue:
   488  0000CF                     ??_check_msg:
   489  0000CF                     ?_in_low_int:
   490                           	opt stack 0
   491  0000CF                     timer0_lthread@msgtype:
   492                           	opt stack 0
   493  0000CF                     ReadTimer1@timer:
   494                           	opt stack 0
   495  0000CF                     ___lwmod@divisor:
   496                           	opt stack 0
   497  0000CF                     memcpy@s1:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x19
   501  0000CF                     	ds	1
   502  0000D0                     init_queue@i:
   503                           	opt stack 0
   504  0000D0                     uart_lthread@msgtype:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  0000D0                     	ds	1
   509  0000D1                     ??_init_queues:
   510  0000D1                     ??___lwmod:
   511  0000D1                     ?_in_main:
   512                           	opt stack 0
   513  0000D1                     start_i2c_slave_reply@length:
   514                           	opt stack 0
   515  0000D1                     timer0_lthread@length:
   516                           	opt stack 0
   517  0000D1                     memcpy@n:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521  0000D1                     	ds	1
   522  0000D2                     OpenUSART@config:
   523                           	opt stack 0
   524  0000D2                     ___lwmod@counter:
   525                           	opt stack 0
   526  0000D2                     uart_lthread@length:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  0000D2                     	ds	1
   531  0000D3                     ??_block_on_To_msgqueues:
   532  0000D3                     timer0_lthread@msgbuffer:
   533                           	opt stack 0
   534  0000D3                     memcpy@d:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1D
   538  0000D3                     	ds	1
   539  0000D4                     uart_lthread@msgbuffer:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x1E
   543  0000D4                     	ds	1
   544  0000D5                     timer0_lthread@msgval:
   545                           	opt stack 0
   546  0000D5                     memcpy@s:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1F
   550  0000D5                     	ds	1
   551  0000D6                     
   552                           ; 0 bytes @ 0x20
   553  0000D6                     	ds	1
   554  0000D7                     send_msg@qptr:
   555                           	opt stack 0
   556  0000D7                     recv_msg@qptr:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x21
   560  0000D7                     	ds	2
   561  0000D9                     send_msg@length:
   562                           	opt stack 0
   563  0000D9                     recv_msg@maxlength:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x23
   567  0000D9                     	ds	1
   568  0000DA                     send_msg@msgtype:
   569                           	opt stack 0
   570  0000DA                     recv_msg@msgtype:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x24
   574  0000DA                     	ds	1
   575  0000DB                     send_msg@data:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x25
   579  0000DB                     	ds	1
   580  0000DC                     recv_msg@data:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x26
   584  0000DC                     	ds	1
   585  0000DD                     ??_send_msg:
   586                           
   587                           ; 0 bytes @ 0x27
   588  0000DD                     	ds	1
   589  0000DE                     ??_recv_msg:
   590  0000DE                     send_msg@tlength:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x28
   594  0000DE                     	ds	2
   595  0000E0                     send_msg@slot:
   596                           	opt stack 0
   597  0000E0                     recv_msg@slot:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x2A
   601  0000E0                     	ds	1
   602  0000E1                     send_msg@qmsg:
   603                           	opt stack 0
   604  0000E1                     recv_msg@tlength:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x2B
   608  0000E1                     	ds	2
   609  0000E3                     ToMainLow_sendmsg@length:
   610                           	opt stack 0
   611  0000E3                     recv_msg@qmsg:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x2D
   615  0000E3                     	ds	2
   616  0000E5                     tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           
   623                           ; 0 bytes @ 0x2F
   624                           
   625                           	psect	cstackCOMRAM
   626  000001                     __pcstackCOMRAM:
   627                           	opt stack 0
   628  000001                     ?i1_ReadTimer1:
   629                           	opt stack 0
   630  000001                     ReadUSART@data:
   631                           	opt stack 0
   632  000001                     WriteTimer1@timer1:
   633                           	opt stack 0
   634  000001                     i1memcpy@d1:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x0
   638  000001                     	ds	2
   639  000003                     WriteTimer1@timer:
   640                           	opt stack 0
   641  000003                     i1ReadTimer1@timer:
   642                           	opt stack 0
   643  000003                     i1memcpy@s1:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647  000003                     	ds	2
   648  000005                     i1memcpy@n:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x4
   652  000005                     	ds	2
   653  000007                     i1memcpy@d:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x6
   657  000007                     	ds	2
   658  000009                     i1memcpy@s:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x8
   662  000009                     	ds	2
   663  00000B                     i1send_msg@qptr:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xA
   667  00000B                     	ds	2
   668  00000D                     i1send_msg@length:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     i1send_msg@msgtype:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0xD
   677  00000E                     	ds	1
   678  00000F                     i1send_msg@data:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0xE
   682  00000F                     	ds	2
   683  000011                     ??i1_send_msg:
   684                           
   685                           ; 0 bytes @ 0x10
   686  000011                     	ds	1
   687  000012                     i1send_msg@tlength:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x11
   691  000012                     	ds	2
   692  000014                     i1send_msg@slot:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x13
   696  000014                     	ds	1
   697  000015                     i1send_msg@qmsg:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x14
   701  000015                     	ds	2
   702  000017                     i1ToMainLow_sendmsg@msgtype:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x16
   706  000017                     	ds	1
   707  000018                     i1ToMainLow_sendmsg@data:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x17
   711  000018                     	ds	2
   712  00001A                     i1ToMainLow_sendmsg@length:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x19
   716  00001A                     	ds	1
   717  00001B                     ??_timer1_int_handler:
   718  00001B                     ??_uart_recv_int_handler:
   719                           
   720                           ; 0 bytes @ 0x1A
   721  00001B                     	ds	1
   722  00001C                     timer1_int_handler@result:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1B
   726  00001C                     	ds	2
   727  00001E                     ??_InterruptHandlerLow:
   728                           
   729                           ; 0 bytes @ 0x1D
   730  00001E                     	ds	17
   731  00002F                     ?i2_in_high_int:
   732                           	opt stack 0
   733  00002F                     handle_start@data_read:
   734                           	opt stack 0
   735  00002F                     WriteTimer0@timer0:
   736                           	opt stack 0
   737  00002F                     i2check_msg@qptr:
   738                           	opt stack 0
   739  00002F                     i2memcpy@d1:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x2E
   743  00002F                     	ds	2
   744  000031                     ??i2_check_msg:
   745  000031                     ?i2_in_low_int:
   746                           	opt stack 0
   747  000031                     WriteTimer0@timer:
   748                           	opt stack 0
   749  000031                     i2memcpy@s1:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x30
   753  000031                     	ds	2
   754  000033                     i2memcpy@n:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x32
   758  000033                     	ds	2
   759  000035                     i2memcpy@d:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x34
   763  000035                     	ds	2
   764  000037                     i2memcpy@s:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x36
   768  000037                     	ds	2
   769  000039                     i2send_msg@qptr:
   770                           	opt stack 0
   771  000039                     i2recv_msg@qptr:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x38
   775  000039                     	ds	2
   776  00003B                     i2send_msg@length:
   777                           	opt stack 0
   778  00003B                     i2recv_msg@maxlength:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3A
   782  00003B                     	ds	1
   783  00003C                     i2send_msg@msgtype:
   784                           	opt stack 0
   785  00003C                     i2recv_msg@msgtype:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x3B
   789  00003C                     	ds	1
   790  00003D                     i2send_msg@data:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x3C
   794  00003D                     	ds	1
   795  00003E                     i2recv_msg@data:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x3D
   799  00003E                     	ds	1
   800  00003F                     ??i2_send_msg:
   801                           
   802                           ; 0 bytes @ 0x3E
   803  00003F                     	ds	1
   804  000040                     ??i2_recv_msg:
   805  000040                     i2send_msg@tlength:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x3F
   809  000040                     	ds	2
   810  000042                     i2send_msg@slot:
   811                           	opt stack 0
   812  000042                     i2recv_msg@slot:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x41
   816  000042                     	ds	1
   817  000043                     i2send_msg@qmsg:
   818                           	opt stack 0
   819  000043                     i2recv_msg@tlength:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x42
   823  000043                     	ds	2
   824  000045                     ToMainHigh_sendmsg@msgtype:
   825                           	opt stack 0
   826  000045                     i2recv_msg@qmsg:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x44
   830  000045                     	ds	1
   831  000046                     ToMainHigh_sendmsg@data:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x45
   835  000046                     	ds	1
   836  000047                     FromMainHigh_recvmsg@msgtype:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x46
   840  000047                     	ds	1
   841  000048                     ToMainHigh_sendmsg@length:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x47
   845  000048                     	ds	1
   846  000049                     ??_i2c_int_handler:
   847  000049                     FromMainHigh_recvmsg@data:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x48
   851  000049                     	ds	2
   852  00004B                     FromMainHigh_recvmsg@maxlength:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x4A
   856  00004B                     	ds	1
   857  00004C                     ??_timer0_int_handler:
   858                           
   859                           ; 0 bytes @ 0x4B
   860  00004C                     	ds	1
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 186 in file "src/main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  ic             28   46[BANK1 ] struct __i2c_comm
   878 ;;  msgbuffer      11   21[BANK1 ] unsigned char [11]
   879 ;;  uc              5   39[BANK1 ] struct __uart_comm
   880 ;;  t1thread_dat    2   37[BANK1 ] struct __timer1_thread_s
   881 ;;  uthread_data    2   35[BANK1 ] struct __uart_thread_str
   882 ;;  t0thread_dat    2   19[BANK1 ] struct __timer0_thread_s
   883 ;;  length          1   45[BANK1 ] char 
   884 ;;  msgtype         1   44[BANK1 ] unsigned char 
   885 ;;  UARTConfig      1   34[BANK1 ] unsigned char 
   886 ;;  baud            1   33[BANK1 ] unsigned char 
   887 ;;  last_reg_rec    1   32[BANK1 ] unsigned char 
   888 ;;  i               1    0        unsigned char 
   889 ;;  c               1    0        unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0       0      55       0       0
   901 ;;      Temps:          0       0       1       0       0
   902 ;;      Totals:         0       0      56       0       0
   903 ;;Total ram usage:       56 bytes
   904 ;; Hardware stack levels required when called:   14
   905 ;; This function calls:
   906 ;;		_OpenTimer0
   907 ;;		_OpenTimer1
   908 ;;		_OpenUSART
   909 ;;		_ToMainHigh_recvmsg
   910 ;;		_ToMainLow_recvmsg
   911 ;;		_block_on_To_msgqueues
   912 ;;		_enable_interrupts
   913 ;;		_i2c_configure_slave
   914 ;;		_init_i2c
   915 ;;		_init_queues
   916 ;;		_init_timer1_lthread
   917 ;;		_init_uart_recv
   918 ;;		_start_i2c_slave_reply
   919 ;;		_timer0_lthread
   920 ;;		_timer1_lthread
   921 ;;		_uart_lthread
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text0
   928  00069C                     __ptext0:
   929                           	opt stack 0
   930  00069C                     _main:
   931                           	opt stack 16
   932                           
   933                           ;main.c: 187: char c;
   934                           ;main.c: 188: signed char length;
   935                           ;main.c: 189: unsigned char msgtype;
   936                           ;main.c: 190: unsigned char last_reg_recvd;
   937                           ;main.c: 191: unsigned char baud, UARTConfig;
   938                           ;main.c: 192: uart_comm uc;
   939                           ;main.c: 193: i2c_comm ic;
   940                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   941                           ;main.c: 195: unsigned char i;
   942                           ;main.c: 196: uart_thread_struct uthread_data;
   943                           ;main.c: 197: timer1_thread_struct t1thread_data;
   944                           ;main.c: 198: timer0_thread_struct t0thread_data;
   945                           ;main.c: 206: OSCCON = 0x82;
   946                           
   947                           ;incstack = 0
   948  00069C  0E82               	movlw	130
   949  00069E  6ED3               	movwf	4051,c	;volatile
   950                           
   951                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   952  0006A0  9C9B               	bcf	3995,6,c	;volatile
   953                           
   954                           ;main.c: 225: init_uart_recv(&uc);
   955  0006A2  0101               	movlb	1	; () banked
   956  0006A4  0E01               	movlw	high main@uc
   957  0006A6  0100               	movlb	0	; () banked
   958  0006A8  0100               	movlb	0	; () banked
   959  0006AA  6FCE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   960  0006AC  0101               	movlb	1	; () banked
   961  0006AE  0EC9               	movlw	low main@uc
   962  0006B0  0100               	movlb	0	; () banked
   963  0006B2  0100               	movlb	0	; () banked
   964  0006B4  6FCD               	movwf	init_uart_recv@uc& (0+255),b
   965  0006B6  EC54  F00D         	call	_init_uart_recv	;wreg free
   966                           
   967                           ;main.c: 228: init_i2c(&ic);
   968  0006BA  0101               	movlb	1	; () banked
   969  0006BC  0E01               	movlw	high main@ic
   970  0006BE  0100               	movlb	0	; () banked
   971  0006C0  0100               	movlb	0	; () banked
   972  0006C2  6FCE               	movwf	(init_i2c@ic+1)& (0+255),b
   973  0006C4  0101               	movlb	1	; () banked
   974  0006C6  0ED0               	movlw	low main@ic
   975  0006C8  0100               	movlb	0	; () banked
   976  0006CA  0100               	movlb	0	; () banked
   977  0006CC  6FCD               	movwf	init_i2c@ic& (0+255),b
   978  0006CE  ECBA  F00A         	call	_init_i2c	;wreg free
   979                           
   980                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   981  0006D2  0101               	movlb	1	; () banked
   982  0006D4  0E01               	movlw	high main@t1thread_data
   983  0006D6  0100               	movlb	0	; () banked
   984  0006D8  0100               	movlb	0	; () banked
   985  0006DA  6FCE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   986  0006DC  0101               	movlb	1	; () banked
   987  0006DE  0EC7               	movlw	low main@t1thread_data
   988  0006E0  0100               	movlb	0	; () banked
   989  0006E2  0100               	movlb	0	; () banked
   990  0006E4  6FCD               	movwf	init_timer1_lthread@tptr& (0+255),b
   991  0006E6  EC99  F00D         	call	_init_timer1_lthread	;wreg free
   992                           
   993                           ;main.c: 234: init_queues();
   994  0006EA  EC83  F00A         	call	_init_queues	;wreg free
   995                           
   996                           ;main.c: 238: TRISB = 0x0;
   997  0006EE  0E00               	movlw	0
   998  0006F0  6E93               	movwf	3987,c	;volatile
   999                           
  1000                           ;main.c: 239: LATB = 0x0;
  1001  0006F2  0E00               	movlw	0
  1002  0006F4  6E8A               	movwf	3978,c	;volatile
  1003                           
  1004                           ;main.c: 243: PORTA = 0x0;
  1005  0006F6  0E00               	movlw	0
  1006  0006F8  6E80               	movwf	3968,c	;volatile
  1007                           
  1008                           ;main.c: 244: LATA = 0x0;
  1009  0006FA  0E00               	movlw	0
  1010  0006FC  6E89               	movwf	3977,c	;volatile
  1011                           
  1012                           ;main.c: 245: ADCON1 = 0x0F;
  1013  0006FE  0E0F               	movlw	15
  1014  000700  6EC1               	movwf	4033,c	;volatile
  1015                           
  1016                           ;main.c: 246: CMCON = 0x07;
  1017  000702  0E07               	movlw	7
  1018  000704  6EB4               	movwf	4020,c	;volatile
  1019                           
  1020                           ;main.c: 247: TRISA = 0x00;
  1021  000706  0E00               	movlw	0
  1022  000708  6E92               	movwf	3986,c	;volatile
  1023                           
  1024                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1025  00070A  0E96               	movlw	150
  1026  00070C  ECDE  F00C         	call	_OpenTimer0
  1027                           
  1028                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1029  000710  0EF5               	movlw	245
  1030  000712  EC5D  F00C         	call	_OpenTimer1
  1031                           
  1032                           ;main.c: 267: IPR1bits.TMR1IP = 0;
  1033  000716  909F               	bcf	3999,0,c	;volatile
  1034                           
  1035                           ;main.c: 269: IPR1bits.RCIP = 0;
  1036  000718  9A9F               	bcf	3999,5,c	;volatile
  1037                           
  1038                           ;main.c: 273: IPR1bits.SSPIP = 1;
  1039  00071A  869F               	bsf	3999,3,c	;volatile
  1040                           
  1041                           ;main.c: 282: i2c_configure_slave(0x9E);
  1042  00071C  0E9E               	movlw	158
  1043  00071E  EC08  F00D         	call	_i2c_configure_slave
  1044                           
  1045                           ;main.c: 297: PIE1bits.SSPIE = 1;
  1046  000722  869D               	bsf	3997,3,c	;volatile
  1047                           
  1048                           ;main.c: 308: UARTConfig = 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1049  000724  0101               	movlb	1	; () banked
  1050  000726  6FB4               	movwf	??_main& (0+255),b
  1051  000728  0E7C               	movlw	124
  1052  00072A  0101               	movlb	1	; () banked
  1053  00072C  0101               	movlb	1	; () banked
  1054  00072E  6FC4               	movwf	main@UARTConfig& (0+255),b
  1055  000730  0101               	movlb	1	; () banked
  1056  000732  51B4               	movf	??_main& (0+255),w,b
  1057                           
  1058                           ; BSR set to: 1
  1059                           ;main.c: 309: baud = 77;
  1060  000734  0101               	movlb	1	; () banked
  1061  000736  6FB4               	movwf	??_main& (0+255),b
  1062  000738  0E4D               	movlw	77
  1063  00073A  0101               	movlb	1	; () banked
  1064  00073C  0101               	movlb	1	; () banked
  1065  00073E  6FC3               	movwf	main@baud& (0+255),b
  1066  000740  0101               	movlb	1	; () banked
  1067  000742  51B4               	movf	??_main& (0+255),w,b
  1068                           
  1069                           ; BSR set to: 1
  1070                           ;main.c: 310: OpenUSART(UARTConfig,baud);
  1071  000744  0101               	movlb	1	; () banked
  1072  000746  0100               	movlb	0	; () banked
  1073  000748  C1C3  F0CD         	movff	main@baud,OpenUSART@spbrg
  1074  00074C  0100               	movlb	0	; () banked
  1075  00074E  0100               	movlb	0	; () banked
  1076  000750  6BCE               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1077  000752  0101               	movlb	1	; () banked
  1078  000754  0101               	movlb	1	; () banked
  1079  000756  51C4               	movf	main@UARTConfig& (0+255),w,b
  1080  000758  ECFA  F008         	call	_OpenUSART
  1081                           
  1082                           ;main.c: 316: enable_interrupts();
  1083  00075C  ECCC  F00D         	call	_enable_interrupts	;wreg free
  1084  000760                     l3248:
  1085                           
  1086                           ;main.c: 340: block_on_To_msgqueues();
  1087  000760  ECC9  F009         	call	_block_on_To_msgqueues	;wreg free
  1088                           
  1089                           ;main.c: 347: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1090  000764  0101               	movlb	1	; () banked
  1091  000766  0E01               	movlw	high main@msgtype
  1092  000768  0101               	movlb	1	; () banked
  1093  00076A  0101               	movlb	1	; () banked
  1094  00076C  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1095  00076E  0101               	movlb	1	; () banked
  1096  000770  0ECE               	movlw	low main@msgtype
  1097  000772  0101               	movlb	1	; () banked
  1098  000774  0101               	movlb	1	; () banked
  1099  000776  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1100  000778  0101               	movlb	1	; () banked
  1101  00077A  0E01               	movlw	high main@msgbuffer
  1102  00077C  0101               	movlb	1	; () banked
  1103  00077E  0101               	movlb	1	; () banked
  1104  000780  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1105  000782  0101               	movlb	1	; () banked
  1106  000784  0EB7               	movlw	low main@msgbuffer
  1107  000786  0101               	movlb	1	; () banked
  1108  000788  0101               	movlb	1	; () banked
  1109  00078A  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1110  00078C  0E0A               	movlw	10
  1111  00078E  ECDD  F00B         	call	_ToMainHigh_recvmsg
  1112  000792  0101               	movlb	1	; () banked
  1113  000794  0101               	movlb	1	; () banked
  1114  000796  6FCF               	movwf	main@length& (0+255),b
  1115                           
  1116                           ; BSR set to: 1
  1117                           ;main.c: 348: if (length < 0) {
  1118  000798  0101               	movlb	1	; () banked
  1119  00079A  0101               	movlb	1	; () banked
  1120  00079C  BFCF               	btfsc	main@length& (0+255),7,b
  1121  00079E  D08D               	goto	l3274
  1122  0007A0  D07D               	goto	l3272
  1123  0007A2                     l3256:
  1124                           
  1125                           ; BSR set to: 1
  1126                           ;main.c: 356: {
  1127                           ;main.c: 357: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1128  0007A2  0101               	movlb	1	; () banked
  1129  0007A4  0E01               	movlw	high main@t0thread_data
  1130  0007A6  0100               	movlb	0	; () banked
  1131  0007A8  0100               	movlb	0	; () banked
  1132  0007AA  6FCE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1133  0007AC  0101               	movlb	1	; () banked
  1134  0007AE  0EB5               	movlw	low main@t0thread_data
  1135  0007B0  0100               	movlb	0	; () banked
  1136  0007B2  0100               	movlb	0	; () banked
  1137  0007B4  6FCD               	movwf	timer0_lthread@tptr& (0+255),b
  1138  0007B6  0101               	movlb	1	; () banked
  1139  0007B8  0100               	movlb	0	; () banked
  1140  0007BA  C1CE  F0CF         	movff	main@msgtype,timer0_lthread@msgtype
  1141  0007BE  0100               	movlb	0	; () banked
  1142  0007C0  0100               	movlb	0	; () banked
  1143  0007C2  6BD0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1144  0007C4  0101               	movlb	1	; () banked
  1145  0007C6  0101               	movlb	1	; () banked
  1146  0007C8  51CF               	movf	main@length& (0+255),w,b
  1147  0007CA  0100               	movlb	0	; () banked
  1148  0007CC  0100               	movlb	0	; () banked
  1149  0007CE  6FD1               	movwf	timer0_lthread@length& (0+255),b
  1150  0007D0  0100               	movlb	0	; () banked
  1151  0007D2  6BD2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1152  0007D4  0100               	movlb	0	; () banked
  1153  0007D6  BFD1               	btfsc	timer0_lthread@length& (0+255),7,b
  1154  0007D8  07D2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1155  0007DA  0101               	movlb	1	; () banked
  1156  0007DC  0E01               	movlw	high main@msgbuffer
  1157  0007DE  0100               	movlb	0	; () banked
  1158  0007E0  0100               	movlb	0	; () banked
  1159  0007E2  6FD4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1160  0007E4  0101               	movlb	1	; () banked
  1161  0007E6  0EB7               	movlw	low main@msgbuffer
  1162  0007E8  0100               	movlb	0	; () banked
  1163  0007EA  0100               	movlb	0	; () banked
  1164  0007EC  6FD3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1165  0007EE  EC90  F00D         	call	_timer0_lthread	;wreg free
  1166                           
  1167                           ;main.c: 358: break;
  1168  0007F2  D063               	goto	l3274
  1169  0007F4                     l113:
  1170                           
  1171                           ;main.c: 361: case 41:
  1172                           ;main.c: 362: {
  1173                           ;main.c: 365: last_reg_recvd = msgbuffer[0];
  1174  0007F4  C1B7  F1C2         	movff	main@msgbuffer,main@last_reg_recvd
  1175                           
  1176                           ;main.c: 366: break;
  1177  0007F8  D060               	goto	l3274
  1178  0007FA                     l3258:
  1179                           
  1180                           ;main.c: 379: {
  1181                           ;main.c: 380: length = 2;
  1182  0007FA  0101               	movlb	1	; () banked
  1183  0007FC  6FB4               	movwf	??_main& (0+255),b
  1184  0007FE  0E02               	movlw	2
  1185  000800  0101               	movlb	1	; () banked
  1186  000802  0101               	movlb	1	; () banked
  1187  000804  6FCF               	movwf	main@length& (0+255),b
  1188  000806  0101               	movlb	1	; () banked
  1189  000808  51B4               	movf	??_main& (0+255),w,b
  1190                           
  1191                           ;main.c: 381: msgbuffer[0] = 0x55;
  1192  00080A  0101               	movlb	1	; () banked
  1193  00080C  6FB4               	movwf	??_main& (0+255),b
  1194  00080E  0E55               	movlw	85
  1195  000810  0101               	movlb	1	; () banked
  1196  000812  0101               	movlb	1	; () banked
  1197  000814  6FB7               	movwf	main@msgbuffer& (0+255),b
  1198  000816  0101               	movlb	1	; () banked
  1199  000818  51B4               	movf	??_main& (0+255),w,b
  1200                           
  1201                           ;main.c: 382: msgbuffer[1] = 0xAA;
  1202  00081A  0101               	movlb	1	; () banked
  1203  00081C  6FB4               	movwf	??_main& (0+255),b
  1204  00081E  0EAA               	movlw	170
  1205  000820  0101               	movlb	1	; () banked
  1206  000822  0101               	movlb	1	; () banked
  1207  000824  6FB8               	movwf	(main@msgbuffer+1)& (0+255),b
  1208  000826  D00C               	goto	L1
  1209  000828                     l3260:
  1210                           
  1211                           ; BSR set to: 1
  1212                           ;main.c: 386: {
  1213                           ;main.c: 387: length = 1;
  1214  000828  0101               	movlb	1	; () banked
  1215  00082A  6FB4               	movwf	??_main& (0+255),b
  1216  00082C  0E01               	movlw	1
  1217  00082E  0101               	movlb	1	; () banked
  1218  000830  0101               	movlb	1	; () banked
  1219  000832  6FCF               	movwf	main@length& (0+255),b
  1220  000834  0101               	movlb	1	; () banked
  1221  000836  51B4               	movf	??_main& (0+255),w,b
  1222                           
  1223                           ;main.c: 388: msgbuffer[0] = 0x3A;
  1224  000838  0101               	movlb	1	; () banked
  1225  00083A  6FB4               	movwf	??_main& (0+255),b
  1226  00083C  0E3A               	movlw	58
  1227  00083E  D00E               	goto	L2
  1228  000840                     L1:
  1229  000840  0101               	movlb	1	; () banked
  1230  000842  51B4               	movf	??_main& (0+255),w,b
  1231                           
  1232                           ;main.c: 389: break;
  1233  000844  D01B               	goto	l3268
  1234  000846                     l3262:
  1235                           
  1236                           ; BSR set to: 1
  1237                           ;main.c: 392: {
  1238                           ;main.c: 393: length = 1;
  1239  000846  0101               	movlb	1	; () banked
  1240  000848  6FB4               	movwf	??_main& (0+255),b
  1241  00084A  0E01               	movlw	1
  1242  00084C  0101               	movlb	1	; () banked
  1243  00084E  0101               	movlb	1	; () banked
  1244  000850  6FCF               	movwf	main@length& (0+255),b
  1245  000852  0101               	movlb	1	; () banked
  1246  000854  51B4               	movf	??_main& (0+255),w,b
  1247                           
  1248                           ;main.c: 394: msgbuffer[0] = 0xA3;
  1249  000856  0101               	movlb	1	; () banked
  1250  000858  6FB4               	movwf	??_main& (0+255),b
  1251  00085A  0EA3               	movlw	163
  1252  00085C                     L2:
  1253  00085C  0101               	movlb	1	; () banked
  1254  00085E  0101               	movlb	1	; () banked
  1255  000860  6FB7               	movwf	main@msgbuffer& (0+255),b
  1256  000862  D7EE               	goto	L1
  1257  000864                     l3266:
  1258  000864  0101               	movlb	1	; () banked
  1259  000866  0101               	movlb	1	; () banked
  1260  000868  51C2               	movf	main@last_reg_recvd& (0+255),w,b
  1261                           
  1262                           ; Switch size 1, requested type "space"
  1263                           ; Number of cases is 3, Range of values is 168 to 170
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           10     6 (average)
  1267                           ;	Chosen strategy is simple_byte
  1268  00086A  0AA8               	xorlw	168	; case 168
  1269  00086C  B4D8               	btfsc	status,2,c
  1270  00086E  D7DC               	goto	l3260
  1271  000870  0A01               	xorlw	1	; case 169
  1272  000872  B4D8               	btfsc	status,2,c
  1273  000874  D7E8               	goto	l3262
  1274  000876  0A03               	xorlw	3	; case 170
  1275  000878  B4D8               	btfsc	status,2,c
  1276  00087A  D7BF               	goto	l3258
  1277  00087C                     l3268:
  1278                           
  1279                           ; BSR set to: 1
  1280                           ;main.c: 398: start_i2c_slave_reply(length, msgbuffer);
  1281  00087C  0101               	movlb	1	; () banked
  1282  00087E  0E01               	movlw	high main@msgbuffer
  1283  000880  0100               	movlb	0	; () banked
  1284  000882  0100               	movlb	0	; () banked
  1285  000884  6FCE               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1286  000886  0101               	movlb	1	; () banked
  1287  000888  0EB7               	movlw	low main@msgbuffer
  1288  00088A  0100               	movlb	0	; () banked
  1289  00088C  0100               	movlb	0	; () banked
  1290  00088E  6FCD               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1291  000890  0101               	movlb	1	; () banked
  1292  000892  0101               	movlb	1	; () banked
  1293  000894  51CF               	movf	main@length& (0+255),w,b
  1294  000896  EC2C  F006         	call	_start_i2c_slave_reply
  1295                           
  1296                           ;main.c: 399: break;
  1297  00089A  D00F               	goto	l3274
  1298  00089C                     l3272:
  1299  00089C  0101               	movlb	1	; () banked
  1300  00089E  0101               	movlb	1	; () banked
  1301  0008A0  51CE               	movf	main@msgtype& (0+255),w,b
  1302                           
  1303                           ; Switch size 1, requested type "space"
  1304                           ; Number of cases is 4, Range of values is 10 to 42
  1305                           ; switch strategies available:
  1306                           ; Name         Instructions Cycles
  1307                           ; simple_byte           13     7 (average)
  1308                           ;	Chosen strategy is simple_byte
  1309  0008A2  0A0A               	xorlw	10	; case 10
  1310  0008A4  B4D8               	btfsc	status,2,c
  1311  0008A6  D77D               	goto	l3256
  1312  0008A8  0A22               	xorlw	34	; case 40
  1313  0008AA  B4D8               	btfsc	status,2,c
  1314  0008AC  D7A3               	goto	l113
  1315  0008AE  0A01               	xorlw	1	; case 41
  1316  0008B0  B4D8               	btfsc	status,2,c
  1317  0008B2  D7A0               	goto	l113
  1318  0008B4  0A03               	xorlw	3	; case 42
  1319  0008B6  B4D8               	btfsc	status,2,c
  1320  0008B8  D7D5               	goto	l3266
  1321  0008BA                     l3274:
  1322                           
  1323                           ;main.c: 407: }
  1324                           ;main.c: 410: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1325  0008BA  0101               	movlb	1	; () banked
  1326  0008BC  0E01               	movlw	high main@msgtype
  1327  0008BE  0101               	movlb	1	; () banked
  1328  0008C0  0101               	movlb	1	; () banked
  1329  0008C2  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1330  0008C4  0101               	movlb	1	; () banked
  1331  0008C6  0ECE               	movlw	low main@msgtype
  1332  0008C8  0101               	movlb	1	; () banked
  1333  0008CA  0101               	movlb	1	; () banked
  1334  0008CC  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1335  0008CE  0101               	movlb	1	; () banked
  1336  0008D0  0E01               	movlw	high main@msgbuffer
  1337  0008D2  0101               	movlb	1	; () banked
  1338  0008D4  0101               	movlb	1	; () banked
  1339  0008D6  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1340  0008D8  0101               	movlb	1	; () banked
  1341  0008DA  0EB7               	movlw	low main@msgbuffer
  1342  0008DC  0101               	movlb	1	; () banked
  1343  0008DE  0101               	movlb	1	; () banked
  1344  0008E0  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1345  0008E2  0E0A               	movlw	10
  1346  0008E4  ECBC  F00B         	call	_ToMainLow_recvmsg
  1347  0008E8  0101               	movlb	1	; () banked
  1348  0008EA  0101               	movlb	1	; () banked
  1349  0008EC  6FCF               	movwf	main@length& (0+255),b
  1350                           
  1351                           ; BSR set to: 1
  1352                           ;main.c: 411: if (length < 0) {
  1353  0008EE  0101               	movlb	1	; () banked
  1354  0008F0  0101               	movlb	1	; () banked
  1355  0008F2  BFCF               	btfsc	main@length& (0+255),7,b
  1356  0008F4  D735               	goto	l3248
  1357  0008F6  D07B               	goto	l3288
  1358  0008F8                     l3280:
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 419: {
  1362                           ;main.c: 420: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1363  0008F8  0101               	movlb	1	; () banked
  1364  0008FA  0E01               	movlw	high main@t1thread_data
  1365  0008FC  0101               	movlb	1	; () banked
  1366  0008FE  0101               	movlb	1	; () banked
  1367  000900  6FA6               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1368  000902  0101               	movlb	1	; () banked
  1369  000904  0EC7               	movlw	low main@t1thread_data
  1370  000906  0101               	movlb	1	; () banked
  1371  000908  0101               	movlb	1	; () banked
  1372  00090A  6FA5               	movwf	timer1_lthread@tptr& (0+255),b
  1373  00090C  0101               	movlb	1	; () banked
  1374  00090E  0101               	movlb	1	; () banked
  1375  000910  C1CE  F1A7         	movff	main@msgtype,timer1_lthread@msgtype
  1376  000914  0101               	movlb	1	; () banked
  1377  000916  0101               	movlb	1	; () banked
  1378  000918  6BA8               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1379  00091A  0101               	movlb	1	; () banked
  1380  00091C  0101               	movlb	1	; () banked
  1381  00091E  51CF               	movf	main@length& (0+255),w,b
  1382  000920  0101               	movlb	1	; () banked
  1383  000922  0101               	movlb	1	; () banked
  1384  000924  6FA9               	movwf	timer1_lthread@length& (0+255),b
  1385  000926  0101               	movlb	1	; () banked
  1386  000928  6BAA               	clrf	(timer1_lthread@length+1)& (0+255),b
  1387  00092A  0101               	movlb	1	; () banked
  1388  00092C  BFA9               	btfsc	timer1_lthread@length& (0+255),7,b
  1389  00092E  07AA               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1390  000930  0101               	movlb	1	; () banked
  1391  000932  0E01               	movlw	high main@msgbuffer
  1392  000934  0101               	movlb	1	; () banked
  1393  000936  0101               	movlb	1	; () banked
  1394  000938  6FAC               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1395  00093A  0101               	movlb	1	; () banked
  1396  00093C  0EB7               	movlw	low main@msgbuffer
  1397  00093E  0101               	movlb	1	; () banked
  1398  000940  0101               	movlb	1	; () banked
  1399  000942  6FAB               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1400  000944  ECA2  F005         	call	_timer1_lthread	;wreg free
  1401                           
  1402                           ;main.c: 421: break;
  1403  000948  D70B               	goto	l3248
  1404  00094A                     l3282:
  1405                           
  1406                           ;main.c: 424: case 31:
  1407                           ;main.c: 425: {
  1408                           ;main.c: 426: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1409  00094A  0101               	movlb	1	; () banked
  1410  00094C  0E01               	movlw	high main@uthread_data
  1411  00094E  0100               	movlb	0	; () banked
  1412  000950  0100               	movlb	0	; () banked
  1413  000952  6FCF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1414  000954  0101               	movlb	1	; () banked
  1415  000956  0EC5               	movlw	low main@uthread_data
  1416  000958  0100               	movlb	0	; () banked
  1417  00095A  0100               	movlb	0	; () banked
  1418  00095C  6FCE               	movwf	uart_lthread@uptr& (0+255),b
  1419  00095E  0101               	movlb	1	; () banked
  1420  000960  0100               	movlb	0	; () banked
  1421  000962  C1CE  F0D0         	movff	main@msgtype,uart_lthread@msgtype
  1422  000966  0100               	movlb	0	; () banked
  1423  000968  0100               	movlb	0	; () banked
  1424  00096A  6BD1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1425  00096C  0101               	movlb	1	; () banked
  1426  00096E  0101               	movlb	1	; () banked
  1427  000970  51CF               	movf	main@length& (0+255),w,b
  1428  000972  0100               	movlb	0	; () banked
  1429  000974  0100               	movlb	0	; () banked
  1430  000976  6FD2               	movwf	uart_lthread@length& (0+255),b
  1431  000978  0100               	movlb	0	; () banked
  1432  00097A  6BD3               	clrf	(uart_lthread@length+1)& (0+255),b
  1433  00097C  0100               	movlb	0	; () banked
  1434  00097E  BFD2               	btfsc	uart_lthread@length& (0+255),7,b
  1435  000980  07D3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1436  000982  0101               	movlb	1	; () banked
  1437  000984  0E01               	movlw	high main@msgbuffer
  1438  000986  0100               	movlb	0	; () banked
  1439  000988  0100               	movlb	0	; () banked
  1440  00098A  6FD5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1441  00098C  0101               	movlb	1	; () banked
  1442  00098E  0EB7               	movlw	low main@msgbuffer
  1443  000990  0100               	movlb	0	; () banked
  1444  000992  0100               	movlb	0	; () banked
  1445  000994  6FD4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1446  000996  EC08  F00A         	call	_uart_lthread	;wreg free
  1447                           
  1448                           ;main.c: 427: break;
  1449  00099A  D6E2               	goto	l3248
  1450  00099C                     l3284:
  1451                           
  1452                           ;main.c: 430: {
  1453                           ;main.c: 431: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1454  00099C  0101               	movlb	1	; () banked
  1455  00099E  0E01               	movlw	high main@uthread_data
  1456  0009A0  0100               	movlb	0	; () banked
  1457  0009A2  0100               	movlb	0	; () banked
  1458  0009A4  6FCF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1459  0009A6  0101               	movlb	1	; () banked
  1460  0009A8  0EC5               	movlw	low main@uthread_data
  1461  0009AA  0100               	movlb	0	; () banked
  1462  0009AC  0100               	movlb	0	; () banked
  1463  0009AE  6FCE               	movwf	uart_lthread@uptr& (0+255),b
  1464  0009B0  0101               	movlb	1	; () banked
  1465  0009B2  0100               	movlb	0	; () banked
  1466  0009B4  C1CE  F0D0         	movff	main@msgtype,uart_lthread@msgtype
  1467  0009B8  0100               	movlb	0	; () banked
  1468  0009BA  0100               	movlb	0	; () banked
  1469  0009BC  6BD1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1470  0009BE  0101               	movlb	1	; () banked
  1471  0009C0  0101               	movlb	1	; () banked
  1472  0009C2  51CF               	movf	main@length& (0+255),w,b
  1473  0009C4  0100               	movlb	0	; () banked
  1474  0009C6  0100               	movlb	0	; () banked
  1475  0009C8  6FD2               	movwf	uart_lthread@length& (0+255),b
  1476  0009CA  0100               	movlb	0	; () banked
  1477  0009CC  6BD3               	clrf	(uart_lthread@length+1)& (0+255),b
  1478  0009CE  0100               	movlb	0	; () banked
  1479  0009D0  BFD2               	btfsc	uart_lthread@length& (0+255),7,b
  1480  0009D2  07D3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1481  0009D4  0101               	movlb	1	; () banked
  1482  0009D6  0E01               	movlw	high main@msgbuffer
  1483  0009D8  0100               	movlb	0	; () banked
  1484  0009DA  0100               	movlb	0	; () banked
  1485  0009DC  6FD5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1486  0009DE  0101               	movlb	1	; () banked
  1487  0009E0  0EB7               	movlw	low main@msgbuffer
  1488  0009E2  0100               	movlb	0	; () banked
  1489  0009E4  0100               	movlb	0	; () banked
  1490  0009E6  6FD4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1491  0009E8  EC08  F00A         	call	_uart_lthread	;wreg free
  1492                           
  1493                           ;main.c: 432: break;
  1494  0009EC  D6B9               	goto	l3248
  1495  0009EE                     l3288:
  1496  0009EE  0101               	movlb	1	; () banked
  1497  0009F0  0101               	movlb	1	; () banked
  1498  0009F2  51CE               	movf	main@msgtype& (0+255),w,b
  1499                           
  1500                           ; Switch size 1, requested type "space"
  1501                           ; Number of cases is 4, Range of values is 11 to 32
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte           13     7 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506  0009F4  0A0B               	xorlw	11	; case 11
  1507  0009F6  B4D8               	btfsc	status,2,c
  1508  0009F8  D77F               	goto	l3280
  1509  0009FA  0A15               	xorlw	21	; case 30
  1510  0009FC  B4D8               	btfsc	status,2,c
  1511  0009FE  D7A5               	goto	l3282
  1512  000A00  0A01               	xorlw	1	; case 31
  1513  000A02  B4D8               	btfsc	status,2,c
  1514  000A04  D7A2               	goto	l3282
  1515  000A06  0A3F               	xorlw	63	; case 32
  1516  000A08  B4D8               	btfsc	status,2,c
  1517  000A0A  D7C8               	goto	l3284
  1518  000A0C  D6A9               	goto	l3248
  1519  000A0E                     __end_of_main:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _uart_lthread *****************
  1530 ;; Defined at:
  1531 ;;		line 9 in file "src/uart_thread.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  uptr            2   24[BANK0 ] PTR struct __uart_thread
  1534 ;;		 -> main@uthread_data(2), 
  1535 ;;  msgtype         2   26[BANK0 ] int 
  1536 ;;  length          2   28[BANK0 ] int 
  1537 ;;  msgbuffer       2   30[BANK0 ] PTR unsigned char 
  1538 ;;		 -> main@msgbuffer(11), 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2   24[BANK0 ] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1550 ;;      Params:         0       8       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       8       0       0       0
  1554 ;;Total ram usage:        8 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:   11
  1557 ;; This function calls:
  1558 ;;		_WriteUSART
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text1
  1565  001410                     __ptext1:
  1566                           	opt stack 0
  1567  001410                     _uart_lthread:
  1568                           	opt stack 18
  1569                           
  1570                           ;uart_thread.c: 10: if (msgtype == 30) {
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;incstack = 0
  1574  001410  0100               	movlb	0	; () banked
  1575  001412  0100               	movlb	0	; () banked
  1576  001414  51D0               	movf	uart_lthread@msgtype& (0+255),w,b
  1577  001416  0A1E               	xorlw	30
  1578  001418  11D1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1579  00141A  B4D8               	btfsc	status,2,c
  1580  00141C  0012               	return	
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;uart_thread.c: 18: else if(msgtype == 31){
  1584                           
  1585                           ; BSR set to: 0
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;uart_thread.c: 11: }
  1589  00141E  0100               	movlb	0	; () banked
  1590  001420  0100               	movlb	0	; () banked
  1591  001422  51D0               	movf	uart_lthread@msgtype& (0+255),w,b
  1592  001424  0A1F               	xorlw	31
  1593  001426  11D1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1594  001428  A4D8               	btfss	status,2,c
  1595  00142A  D018               	goto	l2664
  1596  00142C                     l372:
  1597  00142C  A2AC               	btfss	4012,1,c	;volatile
  1598  00142E  D7FE               	goto	l372
  1599                           
  1600                           ;uart_thread.c: 20: WriteUSART(msgbuffer[0]);
  1601  001430  C0D4  FFD9         	movff	uart_lthread@msgbuffer,fsr2l
  1602  001434  C0D5  FFDA         	movff	uart_lthread@msgbuffer+1,fsr2h
  1603  001438  50DF               	movf	indf2,w,c
  1604  00143A  EC7D  F00D         	call	_WriteUSART
  1605  00143E                     l375:
  1606  00143E  A2AC               	btfss	4012,1,c	;volatile
  1607  001440  D7FE               	goto	l375
  1608                           
  1609                           ;uart_thread.c: 22: WriteUSART(msgbuffer[1]);
  1610  001442  0100               	movlb	0	; () banked
  1611  001444  EE20 F001          	lfsr	2,1
  1612  001448  0100               	movlb	0	; () banked
  1613  00144A  51D4               	movf	uart_lthread@msgbuffer& (0+255),w,b
  1614  00144C  26D9               	addwf	fsr2l,f,c
  1615  00144E  0100               	movlb	0	; () banked
  1616  001450  51D5               	movf	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1617  001452  22DA               	addwfc	fsr2h,f,c
  1618  001454  50DF               	movf	indf2,w,c
  1619  001456  EC7D  F00D         	call	_WriteUSART
  1620                           
  1621                           ;uart_thread.c: 23: }
  1622  00145A  0012               	return	
  1623  00145C                     l2664:
  1624                           
  1625                           ;uart_thread.c: 25: else if(msgtype == 32){
  1626  00145C  0100               	movlb	0	; () banked
  1627  00145E  0100               	movlb	0	; () banked
  1628  001460  51D0               	movf	uart_lthread@msgtype& (0+255),w,b
  1629  001462  0A20               	xorlw	32
  1630  001464  11D1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1631  001466  A4D8               	btfss	status,2,c
  1632  001468  0012               	return	
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;uart_thread.c: 29: msgbuffer[length] = '\0';
  1636  00146A  0100               	movlb	0	; () banked
  1637  00146C  0100               	movlb	0	; () banked
  1638  00146E  51D2               	movf	uart_lthread@length& (0+255),w,b
  1639  001470  0100               	movlb	0	; () banked
  1640  001472  0100               	movlb	0	; () banked
  1641  001474  25D4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1642  001476  6ED9               	movwf	fsr2l,c
  1643  001478  0100               	movlb	0	; () banked
  1644  00147A  0100               	movlb	0	; () banked
  1645  00147C  51D3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1646  00147E  0100               	movlb	0	; () banked
  1647  001480  0100               	movlb	0	; () banked
  1648  001482  21D5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1649  001484  6EDA               	movwf	fsr2h,c
  1650  001486  0E00               	movlw	0
  1651  001488  6EDF               	movwf	indf2,c
  1652  00148A  0012               	return	
  1653  00148C                     __end_of_uart_lthread:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           indf2	equ	0xFDF
  1662                           fsr2h	equ	0xFDA
  1663                           fsr2l	equ	0xFD9
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _WriteUSART *****************
  1667 ;; Defined at:
  1668 ;;		line 13 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  data            1    wreg     unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  data            1   23[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       1       0       0       0
  1684 ;;      Temps:          0       0       0       0       0
  1685 ;;      Totals:         0       1       0       0       0
  1686 ;;Total ram usage:        1 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:   10
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_uart_lthread
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text2
  1697  001AFA                     __ptext2:
  1698                           	opt stack 0
  1699  001AFA                     _WriteUSART:
  1700                           	opt stack 18
  1701                           
  1702                           ;incstack = 0
  1703                           ;WriteUSART@data stored from wreg
  1704  001AFA  CFE8 F0CD          	movff	wreg,WriteUSART@data
  1705  001AFE  ACAC               	btfss	4012,6,c	;volatile
  1706  001B00  D003               	goto	l2820
  1707  001B02  90AC               	bcf	4012,0,c	;volatile
  1708  001B04  B250               	btfsc	_USART_Status,1,c
  1709  001B06  80AC               	bsf	4012,0,c	;volatile
  1710  001B08                     l2820:
  1711  001B08  C0CD  FFAD         	movff	WriteUSART@data,4013	;volatile
  1712  001B0C  0012               	return	
  1713  001B0E                     __end_of_WriteUSART:
  1714                           	opt stack 0
  1715                           tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           indf2	equ	0xFDF
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _timer1_lthread *****************
  1727 ;; Defined at:
  1728 ;;		line 14 in file "src/timer1_thread.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  tptr            2    3[BANK1 ] PTR struct __timer1_thre
  1731 ;;		 -> main@t1thread_data(2), 
  1732 ;;  msgtype         2    5[BANK1 ] int 
  1733 ;;  length          2    7[BANK1 ] int 
  1734 ;;  msgbuffer       2    9[BANK1 ] PTR unsigned char 
  1735 ;;		 -> main@msgbuffer(11), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  ctrl            2   16[BANK1 ] unsigned char [2]
  1738 ;;  even            2   14[BANK1 ] int 
  1739 ;;  retval          1   13[BANK1 ] char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2    3[BANK1 ] int 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1749 ;;      Params:         0       0       8       0       0
  1750 ;;      Locals:         0       0       5       0       0
  1751 ;;      Temps:          0       0       2       0       0
  1752 ;;      Totals:         0       0      15       0       0
  1753 ;;Total ram usage:       15 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:   13
  1756 ;; This function calls:
  1757 ;;		_ReadTimer1
  1758 ;;		_ToMainLow_sendmsg
  1759 ;;		___lwmod
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text3
  1766  000B44                     __ptext3:
  1767                           	opt stack 0
  1768  000B44                     _timer1_lthread:
  1769                           	opt stack 16
  1770                           
  1771                           ;timer1_thread.c: 15: signed char retval;
  1772                           ;timer1_thread.c: 17: unsigned char ctrl[2] = {200,72};
  1773                           
  1774                           ;incstack = 0
  1775  000B44  C0E7  F1B2         	movff	timer1_lthread@F5129,timer1_lthread@ctrl
  1776  000B48  C0E8  F1B3         	movff	timer1_lthread@F5129+1,timer1_lthread@ctrl+1
  1777                           
  1778                           ;timer1_thread.c: 18: int even = 0;
  1779  000B4C  0E00               	movlw	0
  1780  000B4E  0101               	movlb	1	; () banked
  1781  000B50  0101               	movlb	1	; () banked
  1782  000B52  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1783  000B54  0E00               	movlw	0
  1784  000B56  0101               	movlb	1	; () banked
  1785  000B58  6FB0               	movwf	timer1_lthread@even& (0+255),b
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;timer1_thread.c: 20: tptr->msgcount++;
  1789  000B5A  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1790  000B5E  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1791  000B62  2ADE               	incf	postinc2,f,c
  1792  000B64  0E00               	movlw	0
  1793  000B66  22DD               	addwfc	postdec2,f,c
  1794                           
  1795                           ; BSR set to: 1
  1796                           ;timer1_thread.c: 22: if ((tptr->msgcount % 6) == 5) {
  1797  000B68  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1798  000B6C  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1799  000B70  0100               	movlb	0	; () banked
  1800  000B72  CFDE F0CD          	movff	postinc2,___lwmod@dividend
  1801  000B76  0100               	movlb	0	; () banked
  1802  000B78  CFDD F0CE          	movff	postdec2,___lwmod@dividend+1
  1803  000B7C  0E00               	movlw	0
  1804  000B7E  0100               	movlb	0	; () banked
  1805  000B80  0100               	movlb	0	; () banked
  1806  000B82  6FD0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1807  000B84  0E06               	movlw	6
  1808  000B86  0100               	movlb	0	; () banked
  1809  000B88  6FCF               	movwf	___lwmod@divisor& (0+255),b
  1810  000B8A  EC43  F009         	call	___lwmod	;wreg free
  1811  000B8E  0100               	movlb	0	; () banked
  1812  000B90  0100               	movlb	0	; () banked
  1813  000B92  51CD               	movf	?___lwmod& (0+255),w,b
  1814  000B94  0A05               	xorlw	5
  1815  000B96  0100               	movlb	0	; () banked
  1816  000B98  11CE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1817  000B9A  A4D8               	btfss	status,2,c
  1818  000B9C  0012               	return	
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;timer1_thread.c: 27: if(ReadTimer1()%2 == 0) even = 0;
  1822  000B9E  EC87  F00D         	call	_ReadTimer1	;wreg free
  1823  000BA2  0100               	movlb	0	; () banked
  1824  000BA4  0100               	movlb	0	; () banked
  1825  000BA6  B1CD               	btfsc	?_ReadTimer1& (0+255),0,b
  1826  000BA8  D006               	goto	l3310
  1827                           
  1828                           ; BSR set to: 0
  1829  000BAA  0E00               	movlw	0
  1830  000BAC  0101               	movlb	1	; () banked
  1831  000BAE  0101               	movlb	1	; () banked
  1832  000BB0  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1833  000BB2  0E00               	movlw	0
  1834  000BB4  D005               	goto	L3
  1835  000BB6                     l3310:
  1836                           
  1837                           ;timer1_thread.c: 28: else even = 1;
  1838  000BB6  0E00               	movlw	0
  1839  000BB8  0101               	movlb	1	; () banked
  1840  000BBA  0101               	movlb	1	; () banked
  1841  000BBC  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1842  000BBE  0E01               	movlw	1
  1843  000BC0                     L3:
  1844  000BC0  0101               	movlb	1	; () banked
  1845  000BC2  6FB0               	movwf	timer1_lthread@even& (0+255),b
  1846  000BC4  D01D               	goto	l3318
  1847  000BC6                     l3312:
  1848                           
  1849                           ; BSR set to: 1
  1850                           ;timer1_thread.c: 31: ctrl[0] = 0;
  1851  000BC6  0101               	movlb	1	; () banked
  1852  000BC8  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1853  000BCA  0E00               	movlw	0
  1854  000BCC  0101               	movlb	1	; () banked
  1855  000BCE  0101               	movlb	1	; () banked
  1856  000BD0  6FB2               	movwf	timer1_lthread@ctrl& (0+255),b
  1857  000BD2  0101               	movlb	1	; () banked
  1858  000BD4  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1859                           
  1860                           ;timer1_thread.c: 32: ctrl[1] = 0;
  1861  000BD6  0101               	movlb	1	; () banked
  1862  000BD8  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1863  000BDA  0E00               	movlw	0
  1864  000BDC  D00B               	goto	L4
  1865  000BDE                     l3314:
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;timer1_thread.c: 35: ctrl[0] = 200;
  1869  000BDE  0101               	movlb	1	; () banked
  1870  000BE0  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1871  000BE2  0EC8               	movlw	200
  1872  000BE4  0101               	movlb	1	; () banked
  1873  000BE6  0101               	movlb	1	; () banked
  1874  000BE8  6FB2               	movwf	timer1_lthread@ctrl& (0+255),b
  1875  000BEA  0101               	movlb	1	; () banked
  1876  000BEC  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1877                           
  1878                           ;timer1_thread.c: 36: ctrl[1] = 72;
  1879  000BEE  0101               	movlb	1	; () banked
  1880  000BF0  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1881  000BF2  0E48               	movlw	72
  1882  000BF4                     L4:
  1883  000BF4  0101               	movlb	1	; () banked
  1884  000BF6  0101               	movlb	1	; () banked
  1885  000BF8  6FB3               	movwf	(timer1_lthread@ctrl+1)& (0+255),b
  1886  000BFA  0101               	movlb	1	; () banked
  1887  000BFC  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1888                           
  1889                           ;timer1_thread.c: 37: break;
  1890  000BFE  D013               	goto	l3320
  1891  000C00                     l3318:
  1892                           
  1893                           ; BSR set to: 1
  1894  000C00  0101               	movlb	1	; () banked
  1895  000C02  C1B0  F1AD         	movff	timer1_lthread@even,??_timer1_lthread
  1896  000C06  0101               	movlb	1	; () banked
  1897  000C08  C1B1  F1AE         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  1898                           
  1899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1900                           ; Switch size 1, requested type "space"
  1901                           ; Number of cases is 1, Range of values is 0 to 0
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte            4     3 (average)
  1905                           ;	Chosen strategy is simple_byte
  1906  000C0C  0101               	movlb	1	; () banked
  1907  000C0E  51AE               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1908  000C10  0A00               	xorlw	0	; case 0
  1909  000C12  A4D8               	btfss	status,2,c
  1910  000C14  D008               	goto	l3320
  1911                           
  1912                           ; BSR set to: 1
  1913                           ; Switch size 1, requested type "space"
  1914                           ; Number of cases is 2, Range of values is 0 to 1
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            7     4 (average)
  1918                           ;	Chosen strategy is simple_byte
  1919  000C16  0101               	movlb	1	; () banked
  1920  000C18  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1921  000C1A  0A00               	xorlw	0	; case 0
  1922  000C1C  B4D8               	btfsc	status,2,c
  1923  000C1E  D7D3               	goto	l3312
  1924  000C20  0A01               	xorlw	1	; case 1
  1925  000C22  B4D8               	btfsc	status,2,c
  1926  000C24  D7DC               	goto	l3314
  1927  000C26                     l3320:
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;timer1_thread.c: 40: retval = ToMainLow_sendmsg(sizeof (tptr->msgcount), 31, (void *) &
      +                          ctrl);
  1931  000C26  0101               	movlb	1	; () banked
  1932  000C28  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1933  000C2A  0E1F               	movlw	31
  1934  000C2C  0101               	movlb	1	; () banked
  1935  000C2E  0101               	movlb	1	; () banked
  1936  000C30  6FA2               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  1937  000C32  0101               	movlb	1	; () banked
  1938  000C34  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1939  000C36  0101               	movlb	1	; () banked
  1940  000C38  0E01               	movlw	high timer1_lthread@ctrl
  1941  000C3A  0101               	movlb	1	; () banked
  1942  000C3C  0101               	movlb	1	; () banked
  1943  000C3E  6FA4               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  1944  000C40  0101               	movlb	1	; () banked
  1945  000C42  0EB2               	movlw	low timer1_lthread@ctrl
  1946  000C44  0101               	movlb	1	; () banked
  1947  000C46  0101               	movlb	1	; () banked
  1948  000C48  6FA3               	movwf	ToMainLow_sendmsg@data& (0+255),b
  1949  000C4A  0E02               	movlw	2
  1950  000C4C  EC79  F00C         	call	_ToMainLow_sendmsg
  1951  000C50  0101               	movlb	1	; () banked
  1952  000C52  0101               	movlb	1	; () banked
  1953  000C54  6FAF               	movwf	timer1_lthread@retval& (0+255),b
  1954  000C56  0012               	return	
  1955  000C58                     __end_of_timer1_lthread:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           indf2	equ	0xFDF
  1964                           postinc2	equ	0xFDE
  1965                           postdec2	equ	0xFDD
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function ___lwmod *****************
  1971 ;; Defined at:
  1972 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  dividend        2   23[BANK0 ] unsigned int 
  1975 ;;  divisor         2   25[BANK0 ] unsigned int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  counter         1   28[BANK0 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2   23[BANK0 ] unsigned int 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1987 ;;      Params:         0       4       0       0       0
  1988 ;;      Locals:         0       1       0       0       0
  1989 ;;      Temps:          0       1       0       0       0
  1990 ;;      Totals:         0       6       0       0       0
  1991 ;;Total ram usage:        6 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:   10
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_timer1_lthread
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text4
  2002  001286                     __ptext4:
  2003                           	opt stack 0
  2004  001286                     ___lwmod:
  2005                           	opt stack 18
  2006                           
  2007                           ;incstack = 0
  2008  001286  0100               	movlb	0	; () banked
  2009  001288  0100               	movlb	0	; () banked
  2010  00128A  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2011  00128C  11CF               	iorwf	___lwmod@divisor& (0+255),w,b
  2012  00128E  B4D8               	btfsc	status,2,c
  2013  001290  D03A               	goto	l1036
  2014                           
  2015                           ; BSR set to: 0
  2016  001292  0100               	movlb	0	; () banked
  2017  001294  6FD1               	movwf	??___lwmod& (0+255),b
  2018  001296  0E01               	movlw	1
  2019  001298  0100               	movlb	0	; () banked
  2020  00129A  0100               	movlb	0	; () banked
  2021  00129C  6FD2               	movwf	___lwmod@counter& (0+255),b
  2022  00129E  0100               	movlb	0	; () banked
  2023  0012A0  51D1               	movf	??___lwmod& (0+255),w,b
  2024  0012A2  D009               	goto	l3426
  2025  0012A4                     l3424:
  2026                           
  2027                           ; BSR set to: 0
  2028  0012A4  0100               	movlb	0	; () banked
  2029  0012A6  0100               	movlb	0	; () banked
  2030  0012A8  0100               	movlb	0	; () banked
  2031  0012AA  90D8               	bcf	status,0,c
  2032  0012AC  37CF               	rlcf	___lwmod@divisor& (0+255),f,b
  2033  0012AE  37D0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2034  0012B0  0100               	movlb	0	; () banked
  2035  0012B2  0100               	movlb	0	; () banked
  2036  0012B4  2BD2               	incf	___lwmod@counter& (0+255),f,b
  2037  0012B6                     l3426:
  2038                           
  2039                           ; BSR set to: 0
  2040  0012B6  0100               	movlb	0	; () banked
  2041  0012B8  0100               	movlb	0	; () banked
  2042  0012BA  AFD0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2043  0012BC  D7F3               	goto	l3424
  2044  0012BE                     l3428:
  2045                           
  2046                           ; BSR set to: 0
  2047  0012BE  0100               	movlb	0	; () banked
  2048  0012C0  0100               	movlb	0	; () banked
  2049  0012C2  51CF               	movf	___lwmod@divisor& (0+255),w,b
  2050  0012C4  0100               	movlb	0	; () banked
  2051  0012C6  0100               	movlb	0	; () banked
  2052  0012C8  5DCD               	subwf	___lwmod@dividend& (0+255),w,b
  2053  0012CA  0100               	movlb	0	; () banked
  2054  0012CC  0100               	movlb	0	; () banked
  2055  0012CE  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2056  0012D0  0100               	movlb	0	; () banked
  2057  0012D2  0100               	movlb	0	; () banked
  2058  0012D4  59CE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2059  0012D6  A0D8               	btfss	status,0,c
  2060  0012D8  D00C               	goto	l3432
  2061                           
  2062                           ; BSR set to: 0
  2063  0012DA  0100               	movlb	0	; () banked
  2064  0012DC  0100               	movlb	0	; () banked
  2065  0012DE  51CF               	movf	___lwmod@divisor& (0+255),w,b
  2066  0012E0  0100               	movlb	0	; () banked
  2067  0012E2  0100               	movlb	0	; () banked
  2068  0012E4  5FCD               	subwf	___lwmod@dividend& (0+255),f,b
  2069  0012E6  0100               	movlb	0	; () banked
  2070  0012E8  0100               	movlb	0	; () banked
  2071  0012EA  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2072  0012EC  0100               	movlb	0	; () banked
  2073  0012EE  0100               	movlb	0	; () banked
  2074  0012F0  5BCE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2075  0012F2                     l3432:
  2076                           
  2077                           ; BSR set to: 0
  2078  0012F2  0100               	movlb	0	; () banked
  2079  0012F4  0100               	movlb	0	; () banked
  2080  0012F6  0100               	movlb	0	; () banked
  2081  0012F8  90D8               	bcf	status,0,c
  2082  0012FA  33D0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2083  0012FC  33CF               	rrcf	___lwmod@divisor& (0+255),f,b
  2084                           
  2085                           ; BSR set to: 0
  2086  0012FE  0100               	movlb	0	; () banked
  2087  001300  0100               	movlb	0	; () banked
  2088  001302  2FD2               	decfsz	___lwmod@counter& (0+255),f,b
  2089  001304  D7DC               	goto	l3428
  2090  001306                     l1036:
  2091                           
  2092                           ; BSR set to: 0
  2093  001306  C0CD  F0CD         	movff	___lwmod@dividend,?___lwmod
  2094  00130A  C0CE  F0CE         	movff	___lwmod@dividend+1,?___lwmod+1
  2095                           
  2096                           ; BSR set to: 0
  2097  00130E  0012               	return	
  2098  001310                     __end_of___lwmod:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           indf2	equ	0xFDF
  2107                           postinc2	equ	0xFDE
  2108                           postdec2	equ	0xFDD
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _ToMainLow_sendmsg *****************
  2114 ;; Defined at:
  2115 ;;		line 103 in file "src/messages.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  length          1    wreg     unsigned char 
  2118 ;;  msgtype         1    0[BANK1 ] unsigned char 
  2119 ;;  data            2    1[BANK1 ] PTR void 
  2120 ;;		 -> timer1_lthread@ctrl(2), NULL(0), main@uc(5), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  length          1   45[BANK0 ] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      char 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2132 ;;      Params:         0       0       3       0       0
  2133 ;;      Locals:         0       1       0       0       0
  2134 ;;      Temps:          0       0       0       0       0
  2135 ;;      Totals:         0       1       3       0       0
  2136 ;;Total ram usage:        4 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:   12
  2139 ;; This function calls:
  2140 ;;		_send_msg
  2141 ;; This function is called by:
  2142 ;;		_timer1_lthread
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text5
  2147  0018F2                     __ptext5:
  2148                           	opt stack 0
  2149  0018F2                     _ToMainLow_sendmsg:
  2150                           	opt stack 16
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;incstack = 0
  2154                           ;ToMainLow_sendmsg@length stored from wreg
  2155  0018F2  CFE8 F0E3          	movff	wreg,ToMainLow_sendmsg@length
  2156                           
  2157                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2158  0018F6  0100               	movlb	0	; () banked
  2159  0018F8  0E00               	movlw	high _ToMainLow_MQ
  2160  0018FA  0100               	movlb	0	; () banked
  2161  0018FC  0100               	movlb	0	; () banked
  2162  0018FE  6FD8               	movwf	(send_msg@qptr+1)& (0+255),b
  2163  001900  0100               	movlb	0	; () banked
  2164  001902  0E80               	movlw	low _ToMainLow_MQ
  2165  001904  0100               	movlb	0	; () banked
  2166  001906  0100               	movlb	0	; () banked
  2167  001908  6FD7               	movwf	send_msg@qptr& (0+255),b
  2168  00190A  C0E3  F0D9         	movff	ToMainLow_sendmsg@length,send_msg@length
  2169  00190E  C1A2  F0DA         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2170  001912  0101               	movlb	1	; () banked
  2171  001914  0100               	movlb	0	; () banked
  2172  001916  C1A4  F0DC         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2173  00191A  0101               	movlb	1	; () banked
  2174  00191C  0100               	movlb	0	; () banked
  2175  00191E  C1A3  F0DB         	movff	ToMainLow_sendmsg@data,send_msg@data
  2176  001922  ECB3  F006         	call	_send_msg	;wreg free
  2177  001926  0012               	return	
  2178  001928                     __end_of_ToMainLow_sendmsg:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _send_msg *****************
  2194 ;; Defined at:
  2195 ;;		line 24 in file "src/messages.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2198 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2199 ;;  length          1   35[BANK0 ] unsigned char 
  2200 ;;  msgtype         1   36[BANK0 ] unsigned char 
  2201 ;;  data            2   37[BANK0 ] PTR void 
  2202 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  2203 ;;		 -> main@ic(28), main@uc(5), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  2206 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2207 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2208 ;;  tlength         2   40[BANK0 ] unsigned int 
  2209 ;;  slot            1   42[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      char 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2219 ;;      Params:         0       6       0       0       0
  2220 ;;      Locals:         0       5       0       0       0
  2221 ;;      Temps:          0       1       0       0       0
  2222 ;;      Totals:         0      12       0       0       0
  2223 ;;Total ram usage:       12 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:   11
  2226 ;; This function calls:
  2227 ;;		_memcpy
  2228 ;; This function is called by:
  2229 ;;		_ToMainLow_sendmsg
  2230 ;;		_FromMainLow_sendmsg
  2231 ;;		_FromMainHigh_sendmsg
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text6
  2236  000D66                     __ptext6:
  2237                           	opt stack 0
  2238  000D66                     _send_msg:
  2239                           	opt stack 16
  2240                           
  2241                           ;messages.c: 25: unsigned char slot;
  2242                           ;messages.c: 27: msg *qmsg;
  2243                           ;messages.c: 28: size_t tlength = length;
  2244                           
  2245                           ;incstack = 0
  2246  000D66  0100               	movlb	0	; () banked
  2247  000D68  0100               	movlb	0	; () banked
  2248  000D6A  C0D9  F0DE         	movff	send_msg@length,send_msg@tlength
  2249  000D6E  0100               	movlb	0	; () banked
  2250  000D70  0100               	movlb	0	; () banked
  2251  000D72  6BDF               	clrf	(send_msg@tlength+1)& (0+255),b
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2255  000D74  0100               	movlb	0	; () banked
  2256  000D76  EE20 F034          	lfsr	2,52
  2257  000D7A  0100               	movlb	0	; () banked
  2258  000D7C  51D7               	movf	send_msg@qptr& (0+255),w,b
  2259  000D7E  26D9               	addwf	fsr2l,f,c
  2260  000D80  0100               	movlb	0	; () banked
  2261  000D82  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2262  000D84  22DA               	addwfc	fsr2h,f,c
  2263  000D86  50DF               	movf	indf2,w,c
  2264  000D88  0100               	movlb	0	; () banked
  2265  000D8A  0100               	movlb	0	; () banked
  2266  000D8C  6FE0               	movwf	send_msg@slot& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2270  000D8E  0100               	movlb	0	; () banked
  2271  000D90  0100               	movlb	0	; () banked
  2272  000D92  51E0               	movf	send_msg@slot& (0+255),w,b
  2273  000D94  0D0D               	mullw	13
  2274  000D96  50F3               	movf	prodl,w,c
  2275  000D98  0100               	movlb	0	; () banked
  2276  000D9A  0100               	movlb	0	; () banked
  2277  000D9C  25D7               	addwf	send_msg@qptr& (0+255),w,b
  2278  000D9E  0100               	movlb	0	; () banked
  2279  000DA0  0100               	movlb	0	; () banked
  2280  000DA2  6FE1               	movwf	send_msg@qmsg& (0+255),b
  2281  000DA4  50F4               	movf	prodh,w,c
  2282  000DA6  0100               	movlb	0	; () banked
  2283  000DA8  0100               	movlb	0	; () banked
  2284  000DAA  21D8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2285  000DAC  0100               	movlb	0	; () banked
  2286  000DAE  6FE2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;messages.c: 41: if (qmsg->full != 0) {
  2290  000DB0  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2291  000DB4  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2292  000DB8  50DF               	movf	indf2,w,c
  2293  000DBA  B4D8               	btfsc	status,2,c
  2294  000DBC  D002               	goto	l3340
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;messages.c: 42: return (-1);
  2298  000DBE  0EFF               	movlw	255
  2299  000DC0  0012               	return	
  2300  000DC2                     l3340:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;messages.c: 43: }
  2304                           ;messages.c: 46: qmsg->length = length;
  2305  000DC2  0100               	movlb	0	; () banked
  2306  000DC4  EE20 F001          	lfsr	2,1
  2307  000DC8  0100               	movlb	0	; () banked
  2308  000DCA  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2309  000DCC  26D9               	addwf	fsr2l,f,c
  2310  000DCE  0100               	movlb	0	; () banked
  2311  000DD0  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2312  000DD2  22DA               	addwfc	fsr2h,f,c
  2313  000DD4  0100               	movlb	0	; () banked
  2314  000DD6  C0D9  FFDF         	movff	send_msg@length,indf2
  2315                           
  2316                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2317  000DDA  0100               	movlb	0	; () banked
  2318  000DDC  EE20 F002          	lfsr	2,2
  2319  000DE0  0100               	movlb	0	; () banked
  2320  000DE2  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2321  000DE4  26D9               	addwf	fsr2l,f,c
  2322  000DE6  0100               	movlb	0	; () banked
  2323  000DE8  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2324  000DEA  22DA               	addwfc	fsr2h,f,c
  2325  000DEC  0100               	movlb	0	; () banked
  2326  000DEE  C0DA  FFDF         	movff	send_msg@msgtype,indf2
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2330  000DF2  0E03               	movlw	3
  2331  000DF4  0100               	movlb	0	; () banked
  2332  000DF6  0100               	movlb	0	; () banked
  2333  000DF8  25E1               	addwf	send_msg@qmsg& (0+255),w,b
  2334  000DFA  0100               	movlb	0	; () banked
  2335  000DFC  0100               	movlb	0	; () banked
  2336  000DFE  6FCD               	movwf	memcpy@d1& (0+255),b
  2337  000E00  0E00               	movlw	0
  2338  000E02  0100               	movlb	0	; () banked
  2339  000E04  0100               	movlb	0	; () banked
  2340  000E06  21E2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2341  000E08  0100               	movlb	0	; () banked
  2342  000E0A  6FCE               	movwf	(memcpy@d1+1)& (0+255),b
  2343  000E0C  0100               	movlb	0	; () banked
  2344  000E0E  0100               	movlb	0	; () banked
  2345  000E10  C0DC  F0D0         	movff	send_msg@data+1,memcpy@s1+1
  2346  000E14  0100               	movlb	0	; () banked
  2347  000E16  0100               	movlb	0	; () banked
  2348  000E18  C0DB  F0CF         	movff	send_msg@data,memcpy@s1
  2349  000E1C  C0DE  F0D1         	movff	send_msg@tlength,memcpy@n
  2350  000E20  C0DF  F0D2         	movff	send_msg@tlength+1,memcpy@n+1
  2351  000E24  EC21  F00B         	call	_memcpy	;wreg free
  2352                           
  2353                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2354  000E28  0100               	movlb	0	; () banked
  2355  000E2A  EE20 F034          	lfsr	2,52
  2356  000E2E  0100               	movlb	0	; () banked
  2357  000E30  51D7               	movf	send_msg@qptr& (0+255),w,b
  2358  000E32  26D9               	addwf	fsr2l,f,c
  2359  000E34  0100               	movlb	0	; () banked
  2360  000E36  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2361  000E38  22DA               	addwfc	fsr2h,f,c
  2362  000E3A  0100               	movlb	0	; () banked
  2363  000E3C  EE10 F034          	lfsr	1,52
  2364  000E40  0100               	movlb	0	; () banked
  2365  000E42  51D7               	movf	send_msg@qptr& (0+255),w,b
  2366  000E44  26E1               	addwf	fsr1l,f,c
  2367  000E46  0100               	movlb	0	; () banked
  2368  000E48  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2369  000E4A  22E2               	addwfc	fsr1h,f,c
  2370  000E4C  50E7               	movf	indf1,w,c
  2371  000E4E  0100               	movlb	0	; () banked
  2372  000E50  6FDD               	movwf	??_send_msg& (0+255),b
  2373  000E52  0100               	movlb	0	; () banked
  2374  000E54  29DD               	incf	??_send_msg& (0+255),w,b
  2375  000E56  0B03               	andlw	3
  2376  000E58  6EDF               	movwf	indf2,c
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;messages.c: 59: qmsg->full = 1;
  2380  000E5A  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2381  000E5E  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2382  000E62  0E01               	movlw	1
  2383  000E64  6EDF               	movwf	indf2,c
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;messages.c: 60: return (1);
  2387  000E66  0E01               	movlw	1
  2388  000E68  0012               	return	
  2389  000E6A                     __end_of_send_msg:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           postinc0	equ	0xFEE
  2398                           wreg	equ	0xFE8
  2399                           indf1	equ	0xFE7
  2400                           fsr1h	equ	0xFE2
  2401                           fsr1l	equ	0xFE1
  2402                           indf2	equ	0xFDF
  2403                           postinc2	equ	0xFDE
  2404                           postdec2	equ	0xFDD
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _ReadTimer1 *****************
  2410 ;; Defined at:
  2411 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  timer           2   25[BANK0 ] struct Timers
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2   23[BANK0 ] unsigned int 
  2418 ;; Registers used:
  2419 ;;		None
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2425 ;;      Params:         0       2       0       0       0
  2426 ;;      Locals:         0       2       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         0       4       0       0       0
  2429 ;;Total ram usage:        4 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:   10
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_timer1_lthread
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text7
  2440  001B0E                     __ptext7:
  2441                           	opt stack 0
  2442  001B0E                     _ReadTimer1:
  2443                           	opt stack 18
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;incstack = 0
  2447  001B0E  CFCE F0CF          	movff	4046,ReadTimer1@timer	;volatile
  2448  001B12  CFCF F0D0          	movff	4047,ReadTimer1@timer+1	;volatile
  2449  001B16  C0CF  F0CD         	movff	ReadTimer1@timer,?_ReadTimer1
  2450  001B1A  C0D0  F0CE         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2451  001B1E  0012               	return	
  2452  001B20                     __end_of_ReadTimer1:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           prodh	equ	0xFF4
  2459                           prodl	equ	0xFF3
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           indf1	equ	0xFE7
  2463                           fsr1h	equ	0xFE2
  2464                           fsr1l	equ	0xFE1
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _timer0_lthread *****************
  2473 ;; Defined at:
  2474 ;;		line 9 in file "src/timer0_thread.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  2477 ;;		 -> main@t0thread_data(2), 
  2478 ;;  msgtype         2   25[BANK0 ] int 
  2479 ;;  length          2   27[BANK0 ] int 
  2480 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  2481 ;;		 -> main@msgbuffer(11), 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  2484 ;;		 -> main@msgbuffer(11), 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2   23[BANK0 ] int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2494 ;;      Params:         0       8       0       0       0
  2495 ;;      Locals:         0       2       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         0      10       0       0       0
  2498 ;;Total ram usage:       10 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:   10
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text8
  2509  001B20                     __ptext8:
  2510                           	opt stack 0
  2511  001B20                     _timer0_lthread:
  2512                           	opt stack 19
  2513                           
  2514                           ;timer0_thread.c: 10: unsigned int *msgval;
  2515                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2516                           
  2517                           ;incstack = 0
  2518  001B20  0100               	movlb	0	; () banked
  2519  001B22  0100               	movlb	0	; () banked
  2520  001B24  C0D4  F0D6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2521  001B28  0100               	movlb	0	; () banked
  2522  001B2A  0100               	movlb	0	; () banked
  2523  001B2C  C0D3  F0D5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2524                           
  2525                           ; BSR set to: 0
  2526  001B30  0012               	return	
  2527  001B32                     __end_of_timer0_lthread:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           indf1	equ	0xFE7
  2538                           fsr1h	equ	0xFE2
  2539                           fsr1l	equ	0xFE1
  2540                           indf2	equ	0xFDF
  2541                           postinc2	equ	0xFDE
  2542                           postdec2	equ	0xFDD
  2543                           fsr2h	equ	0xFDA
  2544                           fsr2l	equ	0xFD9
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _start_i2c_slave_reply *****************
  2548 ;; Defined at:
  2549 ;;		line 53 in file "src/my_i2c.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  length          1    wreg     unsigned char 
  2552 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  2553 ;;		 -> main@msgbuffer(11), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  length          1   27[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;		None               void
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2565 ;;      Params:         0       2       0       0       0
  2566 ;;      Locals:         0       1       0       0       0
  2567 ;;      Temps:          0       2       0       0       0
  2568 ;;      Totals:         0       5       0       0       0
  2569 ;;Total ram usage:        5 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:   10
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text9
  2580  000C58                     __ptext9:
  2581                           	opt stack 0
  2582  000C58                     _start_i2c_slave_reply:
  2583                           	opt stack 19
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;incstack = 0
  2587                           ;start_i2c_slave_reply@length stored from wreg
  2588  000C58  CFE8 F0D1          	movff	wreg,start_i2c_slave_reply@length
  2589                           
  2590                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2591  000C5C  0100               	movlb	0	; () banked
  2592  000C5E  EE20 F019          	lfsr	2,25
  2593  000C62  0100               	movlb	0	; () banked
  2594  000C64  51E5               	movf	_ic_ptr& (0+255),w,b
  2595  000C66  26D9               	addwf	fsr2l,f,c
  2596  000C68  0100               	movlb	0	; () banked
  2597  000C6A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2598  000C6C  22DA               	addwfc	fsr2h,f,c
  2599  000C6E  0E00               	movlw	0
  2600  000C70  6EDF               	movwf	indf2,c
  2601  000C72  D042               	goto	l2612
  2602  000C74                     l2608:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2606  000C74  0100               	movlb	0	; () banked
  2607  000C76  EE20 F019          	lfsr	2,25
  2608  000C7A  0100               	movlb	0	; () banked
  2609  000C7C  51E5               	movf	_ic_ptr& (0+255),w,b
  2610  000C7E  26D9               	addwf	fsr2l,f,c
  2611  000C80  0100               	movlb	0	; () banked
  2612  000C82  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2613  000C84  22DA               	addwfc	fsr2h,f,c
  2614  000C86  50DF               	movf	indf2,w,c
  2615  000C88  0100               	movlb	0	; () banked
  2616  000C8A  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2617  000C8C  0100               	movlb	0	; () banked
  2618  000C8E  51CF               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2619  000C90  0D01               	mullw	1
  2620  000C92  50F3               	movf	prodl,w,c
  2621  000C94  0100               	movlb	0	; () banked
  2622  000C96  0100               	movlb	0	; () banked
  2623  000C98  25CD               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2624  000C9A  6ED9               	movwf	fsr2l,c
  2625  000C9C  50F4               	movf	prodh,w,c
  2626  000C9E  0100               	movlb	0	; () banked
  2627  000CA0  0100               	movlb	0	; () banked
  2628  000CA2  21CE               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2629  000CA4  6EDA               	movwf	fsr2h,c
  2630  000CA6  0100               	movlb	0	; () banked
  2631  000CA8  EE10 F019          	lfsr	1,25
  2632  000CAC  0100               	movlb	0	; () banked
  2633  000CAE  51E5               	movf	_ic_ptr& (0+255),w,b
  2634  000CB0  26E1               	addwf	fsr1l,f,c
  2635  000CB2  0100               	movlb	0	; () banked
  2636  000CB4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2637  000CB6  22E2               	addwfc	fsr1h,f,c
  2638  000CB8  50E7               	movf	indf1,w,c
  2639  000CBA  0100               	movlb	0	; () banked
  2640  000CBC  6FD0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2641  000CBE  0100               	movlb	0	; () banked
  2642  000CC0  51D0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2643  000CC2  0D01               	mullw	1
  2644  000CC4  0E0F               	movlw	15
  2645  000CC6  26F3               	addwf	prodl,f,c
  2646  000CC8  0E00               	movlw	0
  2647  000CCA  22F4               	addwfc	prodh,f,c
  2648  000CCC  50F3               	movf	prodl,w,c
  2649  000CCE  0100               	movlb	0	; () banked
  2650  000CD0  0100               	movlb	0	; () banked
  2651  000CD2  25E5               	addwf	_ic_ptr& (0+255),w,b
  2652  000CD4  6EE1               	movwf	fsr1l,c
  2653  000CD6  50F4               	movf	prodh,w,c
  2654  000CD8  0100               	movlb	0	; () banked
  2655  000CDA  0100               	movlb	0	; () banked
  2656  000CDC  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2657  000CDE  6EE2               	movwf	fsr1h,c
  2658  000CE0  CFDF FFE7          	movff	indf2,indf1
  2659                           
  2660                           ; BSR set to: 0
  2661  000CE4  0100               	movlb	0	; () banked
  2662  000CE6  EE20 F019          	lfsr	2,25
  2663  000CEA  0100               	movlb	0	; () banked
  2664  000CEC  51E5               	movf	_ic_ptr& (0+255),w,b
  2665  000CEE  26D9               	addwf	fsr2l,f,c
  2666  000CF0  0100               	movlb	0	; () banked
  2667  000CF2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2668  000CF4  22DA               	addwfc	fsr2h,f,c
  2669  000CF6  2ADF               	incf	indf2,f,c
  2670  000CF8                     l2612:
  2671                           
  2672                           ; BSR set to: 0
  2673  000CF8  0100               	movlb	0	; () banked
  2674  000CFA  EE20 F019          	lfsr	2,25
  2675  000CFE  0100               	movlb	0	; () banked
  2676  000D00  51E5               	movf	_ic_ptr& (0+255),w,b
  2677  000D02  26D9               	addwf	fsr2l,f,c
  2678  000D04  0100               	movlb	0	; () banked
  2679  000D06  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2680  000D08  22DA               	addwfc	fsr2h,f,c
  2681  000D0A  50DF               	movf	indf2,w,c
  2682  000D0C  0100               	movlb	0	; () banked
  2683  000D0E  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2684  000D10  0100               	movlb	0	; () banked
  2685  000D12  0100               	movlb	0	; () banked
  2686  000D14  51D1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2687  000D16  0100               	movlb	0	; () banked
  2688  000D18  5DCF               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2689  000D1A  A0D8               	btfss	status,0,c
  2690  000D1C  D7AB               	goto	l2608
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;my_i2c.c: 57: }
  2694                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2695                           
  2696                           ; BSR set to: 0
  2697  000D1E  0100               	movlb	0	; () banked
  2698  000D20  EE20 F019          	lfsr	2,25
  2699  000D24  0100               	movlb	0	; () banked
  2700  000D26  51E5               	movf	_ic_ptr& (0+255),w,b
  2701  000D28  26D9               	addwf	fsr2l,f,c
  2702  000D2A  0100               	movlb	0	; () banked
  2703  000D2C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2704  000D2E  22DA               	addwfc	fsr2h,f,c
  2705  000D30  0100               	movlb	0	; () banked
  2706  000D32  C0D1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2707                           
  2708                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2709  000D36  0100               	movlb	0	; () banked
  2710  000D38  EE20 F01A          	lfsr	2,26
  2711  000D3C  0100               	movlb	0	; () banked
  2712  000D3E  51E5               	movf	_ic_ptr& (0+255),w,b
  2713  000D40  26D9               	addwf	fsr2l,f,c
  2714  000D42  0100               	movlb	0	; () banked
  2715  000D44  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2716  000D46  22DA               	addwfc	fsr2h,f,c
  2717  000D48  0E01               	movlw	1
  2718  000D4A  6EDF               	movwf	indf2,c
  2719                           
  2720                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2721  000D4C  0100               	movlb	0	; () banked
  2722  000D4E  EE20 F00F          	lfsr	2,15
  2723  000D52  0100               	movlb	0	; () banked
  2724  000D54  51E5               	movf	_ic_ptr& (0+255),w,b
  2725  000D56  26D9               	addwf	fsr2l,f,c
  2726  000D58  0100               	movlb	0	; () banked
  2727  000D5A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2728  000D5C  22DA               	addwfc	fsr2h,f,c
  2729  000D5E  50DF               	movf	indf2,w,c
  2730  000D60  6EC9               	movwf	4041,c	;volatile
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2734  000D62  88C6               	bsf	4038,4,c	;volatile
  2735                           
  2736                           ; BSR set to: 0
  2737  000D64  0012               	return	
  2738  000D66                     __end_of_start_i2c_slave_reply:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           prodh	equ	0xFF4
  2745                           prodl	equ	0xFF3
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf1	equ	0xFE7
  2749                           fsr1h	equ	0xFE2
  2750                           fsr1l	equ	0xFE1
  2751                           indf2	equ	0xFDF
  2752                           postinc2	equ	0xFDE
  2753                           postdec2	equ	0xFDD
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _init_uart_recv *****************
  2759 ;; Defined at:
  2760 ;;		line 49 in file "src/my_uart.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2763 ;;		 -> main@uc(5), 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2775 ;;      Params:         0       2       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0
  2778 ;;      Totals:         0       2       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:   10
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text10
  2790  001AA8                     __ptext10:
  2791                           	opt stack 0
  2792  001AA8                     _init_uart_recv:
  2793                           	opt stack 19
  2794                           
  2795                           ;my_uart.c: 50: uc_ptr = uc;
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;incstack = 0
  2799  001AA8  0100               	movlb	0	; () banked
  2800  001AAA  C0CE  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2801  001AAE  0100               	movlb	0	; () banked
  2802  001AB0  C0CD  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2806  001AB4  EE20 F004          	lfsr	2,4
  2807  001AB8  504D               	movf	_uc_ptr,w,c
  2808  001ABA  26D9               	addwf	fsr2l,f,c
  2809  001ABC  504E               	movf	_uc_ptr+1,w,c
  2810  001ABE  22DA               	addwfc	fsr2h,f,c
  2811  001AC0  0E00               	movlw	0
  2812  001AC2  6EDF               	movwf	indf2,c
  2813                           
  2814                           ; BSR set to: 0
  2815  001AC4  0012               	return	
  2816  001AC6                     __end_of_init_uart_recv:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           postinc0	equ	0xFEE
  2825                           wreg	equ	0xFE8
  2826                           indf1	equ	0xFE7
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           postinc2	equ	0xFDE
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _init_timer1_lthread *****************
  2837 ;; Defined at:
  2838 ;;		line 6 in file "src/timer1_thread.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2841 ;;		 -> main@t1thread_data(2), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2853 ;;      Params:         0       2       0       0       0
  2854 ;;      Locals:         0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       2       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:   10
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text11
  2868  001B32                     __ptext11:
  2869                           	opt stack 0
  2870  001B32                     _init_timer1_lthread:
  2871                           	opt stack 19
  2872                           
  2873                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;incstack = 0
  2877  001B32  C0CD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2878  001B36  C0CE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2879  001B3A  0E00               	movlw	0
  2880  001B3C  6EDE               	movwf	postinc2,c
  2881  001B3E  0E00               	movlw	0
  2882  001B40  6EDD               	movwf	postdec2,c
  2883  001B42  0012               	return	
  2884  001B44                     __end_of_init_timer1_lthread:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           indf1	equ	0xFE7
  2895                           fsr1h	equ	0xFE2
  2896                           fsr1l	equ	0xFE1
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           postdec2	equ	0xFDD
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _init_queues *****************
  2905 ;; Defined at:
  2906 ;;		line 194 in file "src/messages.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0
  2922 ;;      Temps:          0       1       0       0       0
  2923 ;;      Totals:         0       1       0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:   11
  2927 ;; This function calls:
  2928 ;;		_init_queue
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text12
  2935  001506                     __ptext12:
  2936                           	opt stack 0
  2937  001506                     _init_queues:
  2938                           	opt stack 18
  2939                           
  2940                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2941                           
  2942                           ;incstack = 0
  2943  001506  0100               	movlb	0	; () banked
  2944  001508  6FD1               	movwf	??_init_queues& (0+255),b
  2945  00150A  0E00               	movlw	0
  2946  00150C  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  2947  00150E  0100               	movlb	0	; () banked
  2948  001510  51D1               	movf	??_init_queues& (0+255),w,b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2952  001512  0100               	movlb	0	; () banked
  2953  001514  0E00               	movlw	high _ToMainLow_MQ
  2954  001516  0100               	movlb	0	; () banked
  2955  001518  0100               	movlb	0	; () banked
  2956  00151A  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2957  00151C  0100               	movlb	0	; () banked
  2958  00151E  0E80               	movlw	low _ToMainLow_MQ
  2959  001520  0100               	movlb	0	; () banked
  2960  001522  0100               	movlb	0	; () banked
  2961  001524  6FCD               	movwf	init_queue@qptr& (0+255),b
  2962  001526  EC46  F00A         	call	_init_queue	;wreg free
  2963                           
  2964                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2965  00152A  0101               	movlb	1	; () banked
  2966  00152C  0E01               	movlw	high _ToMainHigh_MQ
  2967  00152E  0100               	movlb	0	; () banked
  2968  001530  0100               	movlb	0	; () banked
  2969  001532  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2970  001534  0101               	movlb	1	; () banked
  2971  001536  0E6C               	movlw	low _ToMainHigh_MQ
  2972  001538  0100               	movlb	0	; () banked
  2973  00153A  0100               	movlb	0	; () banked
  2974  00153C  6FCD               	movwf	init_queue@qptr& (0+255),b
  2975  00153E  EC46  F00A         	call	_init_queue	;wreg free
  2976                           
  2977                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2978  001542  0101               	movlb	1	; () banked
  2979  001544  0E01               	movlw	high _FromMainLow_MQ
  2980  001546  0100               	movlb	0	; () banked
  2981  001548  0100               	movlb	0	; () banked
  2982  00154A  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2983  00154C  0101               	movlb	1	; () banked
  2984  00154E  0E36               	movlw	low _FromMainLow_MQ
  2985  001550  0100               	movlb	0	; () banked
  2986  001552  0100               	movlb	0	; () banked
  2987  001554  6FCD               	movwf	init_queue@qptr& (0+255),b
  2988  001556  EC46  F00A         	call	_init_queue	;wreg free
  2989                           
  2990                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2991  00155A  0101               	movlb	1	; () banked
  2992  00155C  0E01               	movlw	high _FromMainHigh_MQ
  2993  00155E  0100               	movlb	0	; () banked
  2994  001560  0100               	movlb	0	; () banked
  2995  001562  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  2996  001564  0101               	movlb	1	; () banked
  2997  001566  0E00               	movlw	low _FromMainHigh_MQ
  2998  001568  0100               	movlb	0	; () banked
  2999  00156A  0100               	movlb	0	; () banked
  3000  00156C  6FCD               	movwf	init_queue@qptr& (0+255),b
  3001  00156E  EC46  F00A         	call	_init_queue	;wreg free
  3002  001572  0012               	return	
  3003  001574                     __end_of_init_queues:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           postinc0	equ	0xFEE
  3012                           wreg	equ	0xFE8
  3013                           indf1	equ	0xFE7
  3014                           fsr1h	equ	0xFE2
  3015                           fsr1l	equ	0xFE1
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _init_queue *****************
  3024 ;; Defined at:
  3025 ;;		line 14 in file "src/messages.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3028 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  i               1   26[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3040 ;;      Params:         0       2       0       0       0
  3041 ;;      Locals:         0       1       0       0       0
  3042 ;;      Temps:          0       1       0       0       0
  3043 ;;      Totals:         0       4       0       0       0
  3044 ;;Total ram usage:        4 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:   10
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_init_queues
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text13
  3055  00148C                     __ptext13:
  3056                           	opt stack 0
  3057  00148C                     _init_queue:
  3058                           	opt stack 18
  3059                           
  3060                           ;messages.c: 15: unsigned char i;
  3061                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3062                           
  3063                           ;incstack = 0
  3064  00148C  0100               	movlb	0	; () banked
  3065  00148E  EE20 F034          	lfsr	2,52
  3066  001492  0100               	movlb	0	; () banked
  3067  001494  51CD               	movf	init_queue@qptr& (0+255),w,b
  3068  001496  26D9               	addwf	fsr2l,f,c
  3069  001498  0100               	movlb	0	; () banked
  3070  00149A  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3071  00149C  22DA               	addwfc	fsr2h,f,c
  3072  00149E  0E00               	movlw	0
  3073  0014A0  6EDF               	movwf	indf2,c
  3074                           
  3075                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3076  0014A2  0100               	movlb	0	; () banked
  3077  0014A4  EE20 F035          	lfsr	2,53
  3078  0014A8  0100               	movlb	0	; () banked
  3079  0014AA  51CD               	movf	init_queue@qptr& (0+255),w,b
  3080  0014AC  26D9               	addwf	fsr2l,f,c
  3081  0014AE  0100               	movlb	0	; () banked
  3082  0014B0  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3083  0014B2  22DA               	addwfc	fsr2h,f,c
  3084  0014B4  0E00               	movlw	0
  3085  0014B6  6EDF               	movwf	indf2,c
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3089  0014B8  0100               	movlb	0	; () banked
  3090  0014BA  6FCF               	movwf	??_init_queue& (0+255),b
  3091  0014BC  0E00               	movlw	0
  3092  0014BE  0100               	movlb	0	; () banked
  3093  0014C0  0100               	movlb	0	; () banked
  3094  0014C2  6FD0               	movwf	init_queue@i& (0+255),b
  3095  0014C4  0100               	movlb	0	; () banked
  3096  0014C6  51CF               	movf	??_init_queue& (0+255),w,b
  3097                           
  3098                           ; BSR set to: 0
  3099  0014C8  0E03               	movlw	3
  3100  0014CA  0100               	movlb	0	; () banked
  3101  0014CC  0100               	movlb	0	; () banked
  3102  0014CE  65D0               	cpfsgt	init_queue@i& (0+255),b
  3103  0014D0  D001               	goto	l2676
  3104  0014D2  0012               	return	
  3105  0014D4                     l2676:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;messages.c: 20: qptr->queue[i].full = 0;
  3109  0014D4  0100               	movlb	0	; () banked
  3110  0014D6  0100               	movlb	0	; () banked
  3111  0014D8  51D0               	movf	init_queue@i& (0+255),w,b
  3112  0014DA  0D0D               	mullw	13
  3113  0014DC  50F3               	movf	prodl,w,c
  3114  0014DE  0100               	movlb	0	; () banked
  3115  0014E0  0100               	movlb	0	; () banked
  3116  0014E2  25CD               	addwf	init_queue@qptr& (0+255),w,b
  3117  0014E4  6ED9               	movwf	fsr2l,c
  3118  0014E6  50F4               	movf	prodh,w,c
  3119  0014E8  0100               	movlb	0	; () banked
  3120  0014EA  0100               	movlb	0	; () banked
  3121  0014EC  21CE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3122  0014EE  6EDA               	movwf	fsr2h,c
  3123  0014F0  0E00               	movlw	0
  3124  0014F2  6EDF               	movwf	indf2,c
  3125                           
  3126                           ; BSR set to: 0
  3127  0014F4  0100               	movlb	0	; () banked
  3128  0014F6  0100               	movlb	0	; () banked
  3129  0014F8  2BD0               	incf	init_queue@i& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 0
  3132  0014FA  0E03               	movlw	3
  3133  0014FC  0100               	movlb	0	; () banked
  3134  0014FE  0100               	movlb	0	; () banked
  3135  001500  65D0               	cpfsgt	init_queue@i& (0+255),b
  3136  001502  D7E8               	goto	l2676
  3137  001504  0012               	return	
  3138  001506                     __end_of_init_queue:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           postinc0	equ	0xFEE
  3147                           wreg	equ	0xFE8
  3148                           indf1	equ	0xFE7
  3149                           fsr1h	equ	0xFE2
  3150                           fsr1l	equ	0xFE1
  3151                           indf2	equ	0xFDF
  3152                           postinc2	equ	0xFDE
  3153                           postdec2	equ	0xFDD
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _init_i2c *****************
  3159 ;; Defined at:
  3160 ;;		line 268 in file "src/my_i2c.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  3163 ;;		 -> main@ic(28), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3175 ;;      Params:         0       2       0       0       0
  3176 ;;      Locals:         0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0
  3178 ;;      Totals:         0       2       0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:   10
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text14
  3190  001574                     __ptext14:
  3191                           	opt stack 0
  3192  001574                     _init_i2c:
  3193                           	opt stack 19
  3194                           
  3195                           ;my_i2c.c: 269: ic_ptr = ic;
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;incstack = 0
  3199  001574  0100               	movlb	0	; () banked
  3200  001576  0100               	movlb	0	; () banked
  3201  001578  C0CE  F0E6         	movff	init_i2c@ic+1,_ic_ptr+1
  3202  00157C  0100               	movlb	0	; () banked
  3203  00157E  0100               	movlb	0	; () banked
  3204  001580  C0CD  F0E5         	movff	init_i2c@ic,_ic_ptr
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3208  001584  0100               	movlb	0	; () banked
  3209  001586  EE20 F00A          	lfsr	2,10
  3210  00158A  0100               	movlb	0	; () banked
  3211  00158C  51E5               	movf	_ic_ptr& (0+255),w,b
  3212  00158E  26D9               	addwf	fsr2l,f,c
  3213  001590  0100               	movlb	0	; () banked
  3214  001592  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3215  001594  22DA               	addwfc	fsr2h,f,c
  3216  001596  0E00               	movlw	0
  3217  001598  6EDF               	movwf	indf2,c
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3221  00159A  0100               	movlb	0	; () banked
  3222  00159C  EE20 F00B          	lfsr	2,11
  3223  0015A0  0100               	movlb	0	; () banked
  3224  0015A2  51E5               	movf	_ic_ptr& (0+255),w,b
  3225  0015A4  26D9               	addwf	fsr2l,f,c
  3226  0015A6  0100               	movlb	0	; () banked
  3227  0015A8  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3228  0015AA  22DA               	addwfc	fsr2h,f,c
  3229  0015AC  0E00               	movlw	0
  3230  0015AE  6EDF               	movwf	indf2,c
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3234  0015B0  0100               	movlb	0	; () banked
  3235  0015B2  EE20 F00C          	lfsr	2,12
  3236  0015B6  0100               	movlb	0	; () banked
  3237  0015B8  51E5               	movf	_ic_ptr& (0+255),w,b
  3238  0015BA  26D9               	addwf	fsr2l,f,c
  3239  0015BC  0100               	movlb	0	; () banked
  3240  0015BE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3241  0015C0  22DA               	addwfc	fsr2h,f,c
  3242  0015C2  0E05               	movlw	5
  3243  0015C4  6EDF               	movwf	indf2,c
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3247  0015C6  0100               	movlb	0	; () banked
  3248  0015C8  EE20 F00E          	lfsr	2,14
  3249  0015CC  0100               	movlb	0	; () banked
  3250  0015CE  51E5               	movf	_ic_ptr& (0+255),w,b
  3251  0015D0  26D9               	addwf	fsr2l,f,c
  3252  0015D2  0100               	movlb	0	; () banked
  3253  0015D4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3254  0015D6  22DA               	addwfc	fsr2h,f,c
  3255  0015D8  0E00               	movlw	0
  3256  0015DA  6EDF               	movwf	indf2,c
  3257                           
  3258                           ; BSR set to: 0
  3259  0015DC  0012               	return	
  3260  0015DE                     __end_of_init_i2c:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           postdec2	equ	0xFDD
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8
  3279                           
  3280 ;; *************** function _i2c_configure_slave *****************
  3281 ;; Defined at:
  3282 ;;		line 279 in file "src/my_i2c.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  addr            1    wreg     unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  addr            1   23[BANK0 ] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       1       0       0       0
  3298 ;;      Temps:          0       0       0       0       0
  3299 ;;      Totals:         0       1       0       0       0
  3300 ;;Total ram usage:        1 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:   10
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text15
  3311  001A10                     __ptext15:
  3312                           	opt stack 0
  3313  001A10                     _i2c_configure_slave:
  3314                           	opt stack 19
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;incstack = 0
  3318                           ;i2c_configure_slave@addr stored from wreg
  3319  001A10  CFE8 F0CD          	movff	wreg,i2c_configure_slave@addr
  3320                           
  3321                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3322  001A14  8694               	bsf	3988,3,c	;volatile
  3323                           
  3324                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3325  001A16  8894               	bsf	3988,4,c	;volatile
  3326                           
  3327                           ;my_i2c.c: 297: SSPADD = addr;
  3328  001A18  C0CD  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3329                           
  3330                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3331  001A1C  0E00               	movlw	0
  3332  001A1E  6EC7               	movwf	4039,c	;volatile
  3333                           
  3334                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3335  001A20  0E00               	movlw	0
  3336  001A22  6EC6               	movwf	4038,c	;volatile
  3337                           
  3338                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3339  001A24  0E00               	movlw	0
  3340  001A26  6EC5               	movwf	4037,c	;volatile
  3341                           
  3342                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3343  001A28  0E0E               	movlw	14
  3344  001A2A  12C6               	iorwf	4038,f,c	;volatile
  3345                           
  3346                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3347  001A2C  8EC7               	bsf	4039,7,c	;volatile
  3348                           
  3349                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3350  001A2E  8694               	bsf	3988,3,c	;volatile
  3351                           
  3352                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3353  001A30  8894               	bsf	3988,4,c	;volatile
  3354                           
  3355                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3356  001A32  80C5               	bsf	4037,0,c	;volatile
  3357                           
  3358                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3359  001A34  8AC6               	bsf	4038,5,c	;volatile
  3360  001A36  0012               	return	
  3361  001A38                     __end_of_i2c_configure_slave:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           prodh	equ	0xFF4
  3368                           prodl	equ	0xFF3
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           postinc2	equ	0xFDE
  3376                           postdec2	equ	0xFDD
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _enable_interrupts *****************
  3382 ;; Defined at:
  3383 ;;		line 14 in file "src/interrupts.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;		None               void
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:   10
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text16
  3412  001B98                     __ptext16:
  3413                           	opt stack 0
  3414  001B98                     _enable_interrupts:
  3415                           	opt stack 19
  3416                           
  3417                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3418                           
  3419                           ;incstack = 0
  3420  001B98  8ED0               	bsf	4048,7,c	;volatile
  3421                           
  3422                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3423  001B9A  8EF2               	bsf	intcon,7,c	;volatile
  3424                           
  3425                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3426  001B9C  8CF2               	bsf	intcon,6,c	;volatile
  3427  001B9E  0012               	return	
  3428  001BA0                     __end_of_enable_interrupts:
  3429                           	opt stack 0
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           indf1	equ	0xFE7
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           postinc2	equ	0xFDE
  3444                           postdec2	equ	0xFDD
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _block_on_To_msgqueues *****************
  3450 ;; Defined at:
  3451 ;;		line 258 in file "src/messages.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;		None               void
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3465 ;;      Params:         0       0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0
  3467 ;;      Temps:          0       1       0       0       0
  3468 ;;      Totals:         0       1       0       0       0
  3469 ;;Total ram usage:        1 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:   13
  3472 ;; This function calls:
  3473 ;;		_Delay1KTCYx
  3474 ;;		_check_msg
  3475 ;;		_in_main
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text17
  3482  001392                     __ptext17:
  3483                           	opt stack 0
  3484  001392                     _block_on_To_msgqueues:
  3485                           	opt stack 16
  3486                           
  3487                           ;messages.c: 259: if (!in_main()) {
  3488                           
  3489                           ;incstack = 0
  3490  001392  EC9A  F00B         	call	_in_main	;wreg free
  3491  001396  0100               	movlb	0	; () banked
  3492  001398  0100               	movlb	0	; () banked
  3493  00139A  51D2               	movf	(?_in_main+1)& (0+255),w,b
  3494  00139C  0100               	movlb	0	; () banked
  3495  00139E  11D1               	iorwf	?_in_main& (0+255),w,b
  3496  0013A0  B4D8               	btfsc	status,2,c
  3497  0013A2  0012               	return	
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;messages.c: 261: }
  3501                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3502                           
  3503                           ; BSR set to: 0
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;messages.c: 260: return;
  3507  0013A4  0100               	movlb	0	; () banked
  3508  0013A6  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3509  0013A8  0E01               	movlw	1
  3510  0013AA  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3511  0013AC  0100               	movlb	0	; () banked
  3512  0013AE  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3513  0013B0                     l2586:
  3514                           
  3515                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3516  0013B0  0101               	movlb	1	; () banked
  3517  0013B2  0E01               	movlw	high _ToMainHigh_MQ
  3518  0013B4  0100               	movlb	0	; () banked
  3519  0013B6  0100               	movlb	0	; () banked
  3520  0013B8  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3521  0013BA  0101               	movlb	1	; () banked
  3522  0013BC  0E6C               	movlw	low _ToMainHigh_MQ
  3523  0013BE  0100               	movlb	0	; () banked
  3524  0013C0  0100               	movlb	0	; () banked
  3525  0013C2  6FCD               	movwf	check_msg@qptr& (0+255),b
  3526  0013C4  EC94  F00C         	call	_check_msg	;wreg free
  3527  0013C8  0900               	iorlw	0
  3528  0013CA  B4D8               	btfsc	status,2,c
  3529  0013CC  D007               	goto	l2592
  3530                           
  3531                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3532  0013CE  0100               	movlb	0	; () banked
  3533  0013D0  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3534  0013D2  0E00               	movlw	0
  3535  0013D4  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3536  0013D6  0100               	movlb	0	; () banked
  3537  0013D8  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3538  0013DA  0012               	return	
  3539  0013DC                     l2592:
  3540                           
  3541                           ;messages.c: 271: }
  3542                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3543  0013DC  0100               	movlb	0	; () banked
  3544  0013DE  0E00               	movlw	high _ToMainLow_MQ
  3545  0013E0  0100               	movlb	0	; () banked
  3546  0013E2  0100               	movlb	0	; () banked
  3547  0013E4  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3548  0013E6  0100               	movlb	0	; () banked
  3549  0013E8  0E80               	movlw	low _ToMainLow_MQ
  3550  0013EA  0100               	movlb	0	; () banked
  3551  0013EC  0100               	movlb	0	; () banked
  3552  0013EE  6FCD               	movwf	check_msg@qptr& (0+255),b
  3553  0013F0  EC94  F00C         	call	_check_msg	;wreg free
  3554  0013F4  0900               	iorlw	0
  3555  0013F6  B4D8               	btfsc	status,2,c
  3556  0013F8  D007               	goto	l2598
  3557                           
  3558                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3559  0013FA  0100               	movlb	0	; () banked
  3560  0013FC  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3561  0013FE  0E00               	movlw	0
  3562  001400  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3563  001402  0100               	movlb	0	; () banked
  3564  001404  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3565  001406  0012               	return	
  3566  001408                     l2598:
  3567                           
  3568                           ;messages.c: 278: }
  3569                           ;messages.c: 279: Delay1KTCYx(10);
  3570  001408  0E0A               	movlw	10
  3571  00140A  EC72  F00D         	call	_Delay1KTCYx
  3572  00140E  D7D0               	goto	l2586
  3573  001410                     __end_of_block_on_To_msgqueues:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           indf1	equ	0xFE7
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _in_main *****************
  3595 ;; Defined at:
  3596 ;;		line 40 in file "src/interrupts.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   27[BANK0 ] int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3610 ;;      Params:         0       2       0       0       0
  3611 ;;      Locals:         0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0
  3613 ;;      Totals:         0       2       0       0       0
  3614 ;;Total ram usage:        2 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   12
  3617 ;; This function calls:
  3618 ;;		_in_high_int
  3619 ;;		_in_low_int
  3620 ;; This function is called by:
  3621 ;;		_block_on_To_msgqueues
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text18
  3626  001734                     __ptext18:
  3627                           	opt stack 0
  3628  001734                     _in_main:
  3629                           	opt stack 16
  3630                           
  3631                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3632                           
  3633                           ;incstack = 0
  3634  001734  EC77  F00B         	call	_in_low_int	;wreg free
  3635  001738  0100               	movlb	0	; () banked
  3636  00173A  0100               	movlb	0	; () banked
  3637  00173C  51D0               	movf	(?_in_low_int+1)& (0+255),w,b
  3638  00173E  0100               	movlb	0	; () banked
  3639  001740  11CF               	iorwf	?_in_low_int& (0+255),w,b
  3640  001742  A4D8               	btfss	status,2,c
  3641  001744  D011               	goto	l2178
  3642                           
  3643                           ; BSR set to: 0
  3644  001746  ECA2  F00D         	call	_in_high_int	;wreg free
  3645  00174A  0100               	movlb	0	; () banked
  3646  00174C  0100               	movlb	0	; () banked
  3647  00174E  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3648  001750  0100               	movlb	0	; () banked
  3649  001752  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3650  001754  A4D8               	btfss	status,2,c
  3651  001756  D008               	goto	l2178
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;interrupts.c: 42: return (1);
  3655  001758  0E00               	movlw	0
  3656  00175A  0100               	movlb	0	; () banked
  3657  00175C  0100               	movlb	0	; () banked
  3658  00175E  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3659  001760  0E01               	movlw	1
  3660  001762  0100               	movlb	0	; () banked
  3661  001764  6FD1               	movwf	?_in_main& (0+255),b
  3662  001766  0012               	return	
  3663  001768                     l2178:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;interrupts.c: 44: return (0);
  3667  001768  0E00               	movlw	0
  3668  00176A  0100               	movlb	0	; () banked
  3669  00176C  0100               	movlb	0	; () banked
  3670  00176E  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3671  001770  0E00               	movlw	0
  3672  001772  0100               	movlb	0	; () banked
  3673  001774  6FD1               	movwf	?_in_main& (0+255),b
  3674  001776  0012               	return	
  3675  001778                     __end_of_in_main:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           intcon	equ	0xFF2
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           indf1	equ	0xFE7
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           postdec2	equ	0xFDD
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _in_low_int *****************
  3697 ;; Defined at:
  3698 ;;		line 30 in file "src/interrupts.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2   25[BANK0 ] int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3712 ;;      Params:         0       2       0       0       0
  3713 ;;      Locals:         0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0
  3715 ;;      Totals:         0       2       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:   11
  3719 ;; This function calls:
  3720 ;;		_in_high_int
  3721 ;; This function is called by:
  3722 ;;		_in_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text19
  3727  0016EE                     __ptext19:
  3728                           	opt stack 0
  3729  0016EE                     _in_low_int:
  3730                           	opt stack 16
  3731                           
  3732                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;incstack = 0
  3736  0016EE  ACF2               	btfss	intcon,6,c	;volatile
  3737  0016F0  D008               	goto	l2156
  3738                           
  3739                           ;interrupts.c: 32: return (0);
  3740  0016F2  0E00               	movlw	0
  3741  0016F4  0100               	movlb	0	; () banked
  3742  0016F6  0100               	movlb	0	; () banked
  3743  0016F8  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3744  0016FA  0E00               	movlw	0
  3745  0016FC  0100               	movlb	0	; () banked
  3746  0016FE  6FCF               	movwf	?_in_low_int& (0+255),b
  3747  001700  0012               	return	
  3748  001702                     l2156:
  3749  001702  ECA2  F00D         	call	_in_high_int	;wreg free
  3750  001706  0100               	movlb	0	; () banked
  3751  001708  0100               	movlb	0	; () banked
  3752  00170A  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3753  00170C  0100               	movlb	0	; () banked
  3754  00170E  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3755  001710  B4D8               	btfsc	status,2,c
  3756  001712  D008               	goto	l2164
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;interrupts.c: 34: return (0);
  3760  001714  0E00               	movlw	0
  3761  001716  0100               	movlb	0	; () banked
  3762  001718  0100               	movlb	0	; () banked
  3763  00171A  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3764  00171C  0E00               	movlw	0
  3765  00171E  0100               	movlb	0	; () banked
  3766  001720  6FCF               	movwf	?_in_low_int& (0+255),b
  3767  001722  0012               	return	
  3768  001724                     l2164:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;interrupts.c: 36: return (1);
  3772  001724  0E00               	movlw	0
  3773  001726  0100               	movlb	0	; () banked
  3774  001728  0100               	movlb	0	; () banked
  3775  00172A  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3776  00172C  0E01               	movlw	1
  3777  00172E  0100               	movlb	0	; () banked
  3778  001730  6FCF               	movwf	?_in_low_int& (0+255),b
  3779  001732  0012               	return	
  3780  001734                     __end_of_in_low_int:
  3781                           	opt stack 0
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           prodh	equ	0xFF4
  3787                           prodl	equ	0xFF3
  3788                           intcon	equ	0xFF2
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           indf1	equ	0xFE7
  3792                           fsr1h	equ	0xFE2
  3793                           fsr1l	equ	0xFE1
  3794                           indf2	equ	0xFDF
  3795                           postinc2	equ	0xFDE
  3796                           postdec2	equ	0xFDD
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _in_high_int *****************
  3802 ;; Defined at:
  3803 ;;		line 22 in file "src/interrupts.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  2   23[BANK0 ] int 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3817 ;;      Params:         0       2       0       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:         0       2       0       0       0
  3821 ;;Total ram usage:        2 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   10
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_in_low_int
  3828 ;;		_in_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text20
  3833  001B44                     __ptext20:
  3834                           	opt stack 0
  3835  001B44                     _in_high_int:
  3836                           	opt stack 16
  3837                           
  3838                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;incstack = 0
  3842  001B44  0E00               	movlw	0
  3843  001B46  AEF2               	btfss	intcon,7,c	;volatile
  3844  001B48  0E01               	movlw	1
  3845  001B4A  0100               	movlb	0	; () banked
  3846  001B4C  0100               	movlb	0	; () banked
  3847  001B4E  6FCD               	movwf	?_in_high_int& (0+255),b
  3848  001B50  0100               	movlb	0	; () banked
  3849  001B52  6BCE               	clrf	(?_in_high_int+1)& (0+255),b
  3850  001B54  0012               	return	
  3851  001B56                     __end_of_in_high_int:
  3852                           	opt stack 0
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           intcon	equ	0xFF2
  3860                           postinc0	equ	0xFEE
  3861                           wreg	equ	0xFE8
  3862                           indf1	equ	0xFE7
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           indf2	equ	0xFDF
  3866                           postinc2	equ	0xFDE
  3867                           postdec2	equ	0xFDD
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function _check_msg *****************
  3873 ;; Defined at:
  3874 ;;		line 222 in file "src/messages.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3877 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      unsigned char 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3889 ;;      Params:         0       2       0       0       0
  3890 ;;      Locals:         0       0       0       0       0
  3891 ;;      Temps:          0       1       0       0       0
  3892 ;;      Totals:         0       3       0       0       0
  3893 ;;Total ram usage:        3 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:   10
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_block_on_To_msgqueues
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text21
  3904  001928                     __ptext21:
  3905                           	opt stack 0
  3906  001928                     _check_msg:
  3907                           	opt stack 18
  3908                           
  3909                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;incstack = 0
  3913  001928  0100               	movlb	0	; () banked
  3914  00192A  EE20 F035          	lfsr	2,53
  3915  00192E  0100               	movlb	0	; () banked
  3916  001930  51CD               	movf	check_msg@qptr& (0+255),w,b
  3917  001932  26D9               	addwf	fsr2l,f,c
  3918  001934  0100               	movlb	0	; () banked
  3919  001936  51CE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3920  001938  22DA               	addwfc	fsr2h,f,c
  3921  00193A  50DF               	movf	indf2,w,c
  3922  00193C  0100               	movlb	0	; () banked
  3923  00193E  6FCF               	movwf	??_check_msg& (0+255),b
  3924  001940  0100               	movlb	0	; () banked
  3925  001942  51CF               	movf	??_check_msg& (0+255),w,b
  3926  001944  0D0D               	mullw	13
  3927  001946  50F3               	movf	prodl,w,c
  3928  001948  0100               	movlb	0	; () banked
  3929  00194A  0100               	movlb	0	; () banked
  3930  00194C  25CD               	addwf	check_msg@qptr& (0+255),w,b
  3931  00194E  6ED9               	movwf	fsr2l,c
  3932  001950  50F4               	movf	prodh,w,c
  3933  001952  0100               	movlb	0	; () banked
  3934  001954  0100               	movlb	0	; () banked
  3935  001956  21CE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3936  001958  6EDA               	movwf	fsr2h,c
  3937  00195A  50DF               	movf	indf2,w,c
  3938  00195C  0012               	return	
  3939  00195E                     __end_of_check_msg:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _Delay1KTCYx *****************
  3961 ;; Defined at:
  3962 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  unit            1    wreg     unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  unit            1   23[BANK0 ] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       1       0       0       0
  3978 ;;      Temps:          0       0       0       0       0
  3979 ;;      Totals:         0       1       0       0       0
  3980 ;;Total ram usage:        1 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:   10
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_block_on_To_msgqueues
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text22
  3991  001AE4                     __ptext22:
  3992                           	opt stack 0
  3993  001AE4                     _Delay1KTCYx:
  3994                           	opt stack 18
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;incstack = 0
  3998                           ;Delay1KTCYx@unit stored from wreg
  3999  001AE4  CFE8 F0CD          	movff	wreg,Delay1KTCYx@unit
  4000  001AE8                     l724:
  4001  001AE8  0EFA               	movlw	250
  4002  001AEA                     u2537:
  4003  001AEA  F000               	nop	
  4004  001AEC  2EE8               	decfsz	wreg,f,c
  4005  001AEE  D7FD               	goto	u2537
  4006  001AF0  0100               	movlb	0	; () banked
  4007  001AF2  0100               	movlb	0	; () banked
  4008  001AF4  2FCD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4009  001AF6  D7F8               	goto	l724
  4010  001AF8  0012               	return	
  4011  001AFA                     __end_of_Delay1KTCYx:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           prodh	equ	0xFF4
  4018                           prodl	equ	0xFF3
  4019                           intcon	equ	0xFF2
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           indf1	equ	0xFE7
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _ToMainLow_recvmsg *****************
  4033 ;; Defined at:
  4034 ;;		line 112 in file "src/messages.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  maxlength       1    wreg     unsigned char 
  4037 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4038 ;;		 -> main@msgtype(1), 
  4039 ;;  data            2    2[BANK1 ] PTR void 
  4040 ;;		 -> main@msgbuffer(11), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      char 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4052 ;;      Params:         0       0       4       0       0
  4053 ;;      Locals:         0       0       1       0       0
  4054 ;;      Temps:          0       0       0       0       0
  4055 ;;      Totals:         0       0       5       0       0
  4056 ;;Total ram usage:        5 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:   12
  4059 ;; This function calls:
  4060 ;;		_recv_msg
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text23
  4067  001778                     __ptext23:
  4068                           	opt stack 0
  4069  001778                     _ToMainLow_recvmsg:
  4070                           	opt stack 17
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;incstack = 0
  4074                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4075  001778  CFE8 F1A6          	movff	wreg,ToMainLow_recvmsg@maxlength
  4076                           
  4077                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4078  00177C  0100               	movlb	0	; () banked
  4079  00177E  0E00               	movlw	high _ToMainLow_MQ
  4080  001780  0100               	movlb	0	; () banked
  4081  001782  0100               	movlb	0	; () banked
  4082  001784  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4083  001786  0100               	movlb	0	; () banked
  4084  001788  0E80               	movlw	low _ToMainLow_MQ
  4085  00178A  0100               	movlb	0	; () banked
  4086  00178C  0100               	movlb	0	; () banked
  4087  00178E  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4088  001790  C1A6  F0D9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4089  001794  0101               	movlb	1	; () banked
  4090  001796  0100               	movlb	0	; () banked
  4091  001798  C1A3  F0DB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4092  00179C  0101               	movlb	1	; () banked
  4093  00179E  0100               	movlb	0	; () banked
  4094  0017A0  C1A2  F0DA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4095  0017A4  0101               	movlb	1	; () banked
  4096  0017A6  0100               	movlb	0	; () banked
  4097  0017A8  C1A5  F0DD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4098  0017AC  0101               	movlb	1	; () banked
  4099  0017AE  0100               	movlb	0	; () banked
  4100  0017B0  C1A4  F0DC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4101  0017B4  EC07  F005         	call	_recv_msg	;wreg free
  4102  0017B8  0012               	return	
  4103  0017BA                     __end_of_ToMainLow_recvmsg:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           indf1	equ	0xFE7
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           postinc2	equ	0xFDE
  4119                           postdec2	equ	0xFDD
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8
  4123                           
  4124 ;; *************** function _ToMainHigh_recvmsg *****************
  4125 ;; Defined at:
  4126 ;;		line 135 in file "src/messages.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  maxlength       1    wreg     unsigned char 
  4129 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4130 ;;		 -> main@msgtype(1), 
  4131 ;;  data            2    2[BANK1 ] PTR void 
  4132 ;;		 -> main@msgbuffer(11), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      char 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4144 ;;      Params:         0       0       4       0       0
  4145 ;;      Locals:         0       0       1       0       0
  4146 ;;      Temps:          0       0       0       0       0
  4147 ;;      Totals:         0       0       5       0       0
  4148 ;;Total ram usage:        5 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:   12
  4151 ;; This function calls:
  4152 ;;		_recv_msg
  4153 ;; This function is called by:
  4154 ;;		_main
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text24
  4159  0017BA                     __ptext24:
  4160                           	opt stack 0
  4161  0017BA                     _ToMainHigh_recvmsg:
  4162                           	opt stack 17
  4163                           
  4164                           ;incstack = 0
  4165                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4166  0017BA  CFE8 F1A6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4167                           
  4168                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4169  0017BE  0101               	movlb	1	; () banked
  4170  0017C0  0E01               	movlw	high _ToMainHigh_MQ
  4171  0017C2  0100               	movlb	0	; () banked
  4172  0017C4  0100               	movlb	0	; () banked
  4173  0017C6  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4174  0017C8  0101               	movlb	1	; () banked
  4175  0017CA  0E6C               	movlw	low _ToMainHigh_MQ
  4176  0017CC  0100               	movlb	0	; () banked
  4177  0017CE  0100               	movlb	0	; () banked
  4178  0017D0  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4179  0017D2  C1A6  F0D9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4180  0017D6  0101               	movlb	1	; () banked
  4181  0017D8  0100               	movlb	0	; () banked
  4182  0017DA  C1A3  F0DB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4183  0017DE  0101               	movlb	1	; () banked
  4184  0017E0  0100               	movlb	0	; () banked
  4185  0017E2  C1A2  F0DA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4186  0017E6  0101               	movlb	1	; () banked
  4187  0017E8  0100               	movlb	0	; () banked
  4188  0017EA  C1A5  F0DD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4189  0017EE  0101               	movlb	1	; () banked
  4190  0017F0  0100               	movlb	0	; () banked
  4191  0017F2  C1A4  F0DC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4192  0017F6  EC07  F005         	call	_recv_msg	;wreg free
  4193  0017FA  0012               	return	
  4194  0017FC                     __end_of_ToMainHigh_recvmsg:
  4195                           	opt stack 0
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _recv_msg *****************
  4216 ;; Defined at:
  4217 ;;		line 63 in file "src/messages.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4220 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4221 ;;  maxlength       1   35[BANK0 ] unsigned char 
  4222 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  4223 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4224 ;;  data            2   38[BANK0 ] PTR void 
  4225 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  4228 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4229 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4230 ;;  tlength         2   43[BANK0 ] unsigned int 
  4231 ;;  slot            1   42[BANK0 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      char 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4241 ;;      Params:         0       7       0       0       0
  4242 ;;      Locals:         0       5       0       0       0
  4243 ;;      Temps:          0       2       0       0       0
  4244 ;;      Totals:         0      14       0       0       0
  4245 ;;Total ram usage:       14 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:   11
  4248 ;; This function calls:
  4249 ;;		_memcpy
  4250 ;; This function is called by:
  4251 ;;		_ToMainLow_recvmsg
  4252 ;;		_ToMainHigh_recvmsg
  4253 ;;		_FromMainLow_recvmsg
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text25
  4258  000A0E                     __ptext25:
  4259                           	opt stack 0
  4260  000A0E                     _recv_msg:
  4261                           	opt stack 17
  4262                           
  4263                           ;messages.c: 64: unsigned char slot;
  4264                           ;messages.c: 68: msg *qmsg;
  4265                           ;messages.c: 69: size_t tlength;
  4266                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4267                           
  4268                           ;incstack = 0
  4269  000A0E  0100               	movlb	0	; () banked
  4270  000A10  EE20 F035          	lfsr	2,53
  4271  000A14  0100               	movlb	0	; () banked
  4272  000A16  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4273  000A18  26D9               	addwf	fsr2l,f,c
  4274  000A1A  0100               	movlb	0	; () banked
  4275  000A1C  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4276  000A1E  22DA               	addwfc	fsr2h,f,c
  4277  000A20  50DF               	movf	indf2,w,c
  4278  000A22  0100               	movlb	0	; () banked
  4279  000A24  0100               	movlb	0	; () banked
  4280  000A26  6FE0               	movwf	recv_msg@slot& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4284  000A28  0100               	movlb	0	; () banked
  4285  000A2A  0100               	movlb	0	; () banked
  4286  000A2C  51E0               	movf	recv_msg@slot& (0+255),w,b
  4287  000A2E  0D0D               	mullw	13
  4288  000A30  50F3               	movf	prodl,w,c
  4289  000A32  0100               	movlb	0	; () banked
  4290  000A34  0100               	movlb	0	; () banked
  4291  000A36  25D7               	addwf	recv_msg@qptr& (0+255),w,b
  4292  000A38  0100               	movlb	0	; () banked
  4293  000A3A  0100               	movlb	0	; () banked
  4294  000A3C  6FE3               	movwf	recv_msg@qmsg& (0+255),b
  4295  000A3E  50F4               	movf	prodh,w,c
  4296  000A40  0100               	movlb	0	; () banked
  4297  000A42  0100               	movlb	0	; () banked
  4298  000A44  21D8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4299  000A46  0100               	movlb	0	; () banked
  4300  000A48  6FE4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;messages.c: 74: if (qmsg->full == 1) {
  4304  000A4A  0E01               	movlw	1
  4305  000A4C  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4306  000A50  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4307  000A54  62DF               	cpfseq	indf2,c
  4308  000A56  D074               	goto	l3390
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4312  000A58  0100               	movlb	0	; () banked
  4313  000A5A  EE20 F001          	lfsr	2,1
  4314  000A5E  0100               	movlb	0	; () banked
  4315  000A60  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4316  000A62  26D9               	addwf	fsr2l,f,c
  4317  000A64  0100               	movlb	0	; () banked
  4318  000A66  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4319  000A68  22DA               	addwfc	fsr2h,f,c
  4320  000A6A  50DF               	movf	indf2,w,c
  4321  000A6C  0100               	movlb	0	; () banked
  4322  000A6E  0100               	movlb	0	; () banked
  4323  000A70  5DD9               	subwf	recv_msg@maxlength& (0+255),w,b
  4324  000A72  B0D8               	btfsc	status,0,c
  4325  000A74  D002               	goto	l3374
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;messages.c: 77: return (-3);
  4329  000A76  0EFD               	movlw	253
  4330  000A78  0012               	return	
  4331  000A7A                     l3374:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;messages.c: 78: }
  4335                           ;messages.c: 80: tlength = qmsg->length;
  4336  000A7A  0100               	movlb	0	; () banked
  4337  000A7C  EE20 F001          	lfsr	2,1
  4338  000A80  0100               	movlb	0	; () banked
  4339  000A82  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4340  000A84  26D9               	addwf	fsr2l,f,c
  4341  000A86  0100               	movlb	0	; () banked
  4342  000A88  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4343  000A8A  22DA               	addwfc	fsr2h,f,c
  4344  000A8C  50DF               	movf	indf2,w,c
  4345  000A8E  0100               	movlb	0	; () banked
  4346  000A90  6FDE               	movwf	??_recv_msg& (0+255),b
  4347  000A92  0100               	movlb	0	; () banked
  4348  000A94  51DE               	movf	??_recv_msg& (0+255),w,b
  4349  000A96  0100               	movlb	0	; () banked
  4350  000A98  0100               	movlb	0	; () banked
  4351  000A9A  6FE1               	movwf	recv_msg@tlength& (0+255),b
  4352  000A9C  0100               	movlb	0	; () banked
  4353  000A9E  6BE2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4357  000AA0  0100               	movlb	0	; () banked
  4358  000AA2  0100               	movlb	0	; () banked
  4359  000AA4  C0DD  F0CE         	movff	recv_msg@data+1,memcpy@d1+1
  4360  000AA8  0100               	movlb	0	; () banked
  4361  000AAA  0100               	movlb	0	; () banked
  4362  000AAC  C0DC  F0CD         	movff	recv_msg@data,memcpy@d1
  4363  000AB0  0E03               	movlw	3
  4364  000AB2  0100               	movlb	0	; () banked
  4365  000AB4  0100               	movlb	0	; () banked
  4366  000AB6  25E3               	addwf	recv_msg@qmsg& (0+255),w,b
  4367  000AB8  0100               	movlb	0	; () banked
  4368  000ABA  6FDE               	movwf	??_recv_msg& (0+255),b
  4369  000ABC  0E00               	movlw	0
  4370  000ABE  0100               	movlb	0	; () banked
  4371  000AC0  0100               	movlb	0	; () banked
  4372  000AC2  21E4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4373  000AC4  0100               	movlb	0	; () banked
  4374  000AC6  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  4375  000AC8  C0DE  F0CF         	movff	??_recv_msg,memcpy@s1
  4376  000ACC  C0DF  F0D0         	movff	??_recv_msg+1,memcpy@s1+1
  4377  000AD0  C0E1  F0D1         	movff	recv_msg@tlength,memcpy@n
  4378  000AD4  C0E2  F0D2         	movff	recv_msg@tlength+1,memcpy@n+1
  4379  000AD8  EC21  F00B         	call	_memcpy	;wreg free
  4380                           
  4381                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4382  000ADC  0100               	movlb	0	; () banked
  4383  000ADE  EE20 F035          	lfsr	2,53
  4384  000AE2  0100               	movlb	0	; () banked
  4385  000AE4  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4386  000AE6  26D9               	addwf	fsr2l,f,c
  4387  000AE8  0100               	movlb	0	; () banked
  4388  000AEA  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4389  000AEC  22DA               	addwfc	fsr2h,f,c
  4390  000AEE  0100               	movlb	0	; () banked
  4391  000AF0  EE10 F035          	lfsr	1,53
  4392  000AF4  0100               	movlb	0	; () banked
  4393  000AF6  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4394  000AF8  26E1               	addwf	fsr1l,f,c
  4395  000AFA  0100               	movlb	0	; () banked
  4396  000AFC  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4397  000AFE  22E2               	addwfc	fsr1h,f,c
  4398  000B00  50E7               	movf	indf1,w,c
  4399  000B02  0100               	movlb	0	; () banked
  4400  000B04  6FDE               	movwf	??_recv_msg& (0+255),b
  4401  000B06  0100               	movlb	0	; () banked
  4402  000B08  29DE               	incf	??_recv_msg& (0+255),w,b
  4403  000B0A  0B03               	andlw	3
  4404  000B0C  6EDF               	movwf	indf2,c
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4408  000B0E  0100               	movlb	0	; () banked
  4409  000B10  EE20 F002          	lfsr	2,2
  4410  000B14  0100               	movlb	0	; () banked
  4411  000B16  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4412  000B18  26D9               	addwf	fsr2l,f,c
  4413  000B1A  0100               	movlb	0	; () banked
  4414  000B1C  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4415  000B1E  22DA               	addwfc	fsr2h,f,c
  4416  000B20  C0DA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4417  000B24  C0DB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4418  000B28  CFDF FFE7          	movff	indf2,indf1
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;messages.c: 91: qmsg->full = 0;
  4422  000B2C  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4423  000B30  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4424  000B34  0E00               	movlw	0
  4425  000B36  6EDF               	movwf	indf2,c
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;messages.c: 92: return (tlength);
  4429  000B38  0100               	movlb	0	; () banked
  4430  000B3A  0100               	movlb	0	; () banked
  4431  000B3C  51E1               	movf	recv_msg@tlength& (0+255),w,b
  4432  000B3E  0012               	return	
  4433  000B40                     l3390:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;messages.c: 94: return (-4);
  4437  000B40  0EFC               	movlw	252
  4438  000B42  0012               	return	
  4439  000B44                     __end_of_recv_msg:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           indf1	equ	0xFE7
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           postinc2	equ	0xFDE
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _memcpy *****************
  4461 ;; Defined at:
  4462 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  d1              2   23[BANK0 ] PTR void 
  4465 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4466 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4467 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4468 ;;  s1              2   25[BANK0 ] PTR const void 
  4469 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4470 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4471 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  4472 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4473 ;;		 -> main@ic(28), main@uc(5), 
  4474 ;;  n               2   27[BANK0 ] unsigned int 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  4477 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4478 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4479 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  4480 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4481 ;;		 -> main@ic(28), main@uc(5), 
  4482 ;;  d               2   29[BANK0 ] PTR unsigned char 
  4483 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4484 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4485 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2   23[BANK0 ] PTR void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4495 ;;      Params:         0       6       0       0       0
  4496 ;;      Locals:         0       4       0       0       0
  4497 ;;      Temps:          0       0       0       0       0
  4498 ;;      Totals:         0      10       0       0       0
  4499 ;;Total ram usage:       10 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:   10
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_send_msg
  4506 ;;		_recv_msg
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text26
  4511  001642                     __ptext26:
  4512                           	opt stack 0
  4513  001642                     _memcpy:
  4514                           	opt stack 16
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;incstack = 0
  4518  001642  0100               	movlb	0	; () banked
  4519  001644  0100               	movlb	0	; () banked
  4520  001646  C0D0  F0D6         	movff	memcpy@s1+1,memcpy@s+1
  4521  00164A  0100               	movlb	0	; () banked
  4522  00164C  0100               	movlb	0	; () banked
  4523  00164E  C0CF  F0D5         	movff	memcpy@s1,memcpy@s
  4524  001652  0100               	movlb	0	; () banked
  4525  001654  0100               	movlb	0	; () banked
  4526  001656  C0CE  F0D4         	movff	memcpy@d1+1,memcpy@d+1
  4527  00165A  0100               	movlb	0	; () banked
  4528  00165C  0100               	movlb	0	; () banked
  4529  00165E  C0CD  F0D3         	movff	memcpy@d1,memcpy@d
  4530  001662  D012               	goto	l3360
  4531  001664                     l3354:
  4532                           
  4533                           ; BSR set to: 0
  4534  001664  C0D5  FFD9         	movff	memcpy@s,fsr2l
  4535  001668  C0D6  FFDA         	movff	memcpy@s+1,fsr2h
  4536  00166C  C0D3  FFE1         	movff	memcpy@d,fsr1l
  4537  001670  C0D4  FFE2         	movff	memcpy@d+1,fsr1h
  4538  001674  CFDF FFE7          	movff	indf2,indf1
  4539                           
  4540                           ; BSR set to: 0
  4541  001678  0100               	movlb	0	; () banked
  4542  00167A  0100               	movlb	0	; () banked
  4543  00167C  4BD5               	infsnz	memcpy@s& (0+255),f,b
  4544  00167E  2BD6               	incf	(memcpy@s+1)& (0+255),f,b
  4545                           
  4546                           ; BSR set to: 0
  4547  001680  0100               	movlb	0	; () banked
  4548  001682  0100               	movlb	0	; () banked
  4549  001684  4BD3               	infsnz	memcpy@d& (0+255),f,b
  4550  001686  2BD4               	incf	(memcpy@d+1)& (0+255),f,b
  4551  001688                     l3360:
  4552                           
  4553                           ; BSR set to: 0
  4554  001688  0100               	movlb	0	; () banked
  4555  00168A  0100               	movlb	0	; () banked
  4556  00168C  07D1               	decf	memcpy@n& (0+255),f,b
  4557  00168E  A0D8               	btfss	status,0,c
  4558  001690  07D2               	decf	(memcpy@n+1)& (0+255),f,b
  4559  001692  0100               	movlb	0	; () banked
  4560  001694  29D1               	incf	memcpy@n& (0+255),w,b
  4561  001696  B4D8               	btfsc	status,2,c
  4562  001698  29D2               	incf	(memcpy@n+1)& (0+255),w,b
  4563  00169A  B4D8               	btfsc	status,2,c
  4564                           
  4565                           ; BSR set to: 0
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;	Return value of _memcpy is never used
  4569  00169C  0012               	return	
  4570  00169E  D7E2               	goto	l3354
  4571  0016A0                     __end_of_memcpy:
  4572                           	opt stack 0
  4573                           tblptru	equ	0xFF8
  4574                           tblptrh	equ	0xFF7
  4575                           tblptrl	equ	0xFF6
  4576                           tablat	equ	0xFF5
  4577                           prodh	equ	0xFF4
  4578                           prodl	equ	0xFF3
  4579                           intcon	equ	0xFF2
  4580                           postinc0	equ	0xFEE
  4581                           wreg	equ	0xFE8
  4582                           indf1	equ	0xFE7
  4583                           fsr1h	equ	0xFE2
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function _OpenUSART *****************
  4593 ;; Defined at:
  4594 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  config          1    wreg     unsigned char 
  4597 ;;  spbrg           2   23[BANK0 ] unsigned int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  config          1   28[BANK0 ] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;		None               void
  4602 ;; Registers used:
  4603 ;;		wreg, status,2
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4609 ;;      Params:         0       2       0       0       0
  4610 ;;      Locals:         0       1       0       0       0
  4611 ;;      Temps:          0       3       0       0       0
  4612 ;;      Totals:         0       6       0       0       0
  4613 ;;Total ram usage:        6 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:   10
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text27
  4624  0011F4                     __ptext27:
  4625                           	opt stack 0
  4626  0011F4                     _OpenUSART:
  4627                           	opt stack 19
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;incstack = 0
  4631                           ;OpenUSART@config stored from wreg
  4632  0011F4  CFE8 F0D2          	movff	wreg,OpenUSART@config
  4633  0011F8  0E00               	movlw	0
  4634  0011FA  6EAC               	movwf	4012,c	;volatile
  4635  0011FC  0E00               	movlw	0
  4636  0011FE  6EAB               	movwf	4011,c	;volatile
  4637  001200  0100               	movlb	0	; () banked
  4638  001202  0100               	movlb	0	; () banked
  4639  001204  B1D2               	btfsc	OpenUSART@config& (0+255),0,b
  4640                           
  4641                           ; BSR set to: 0
  4642  001206  88AC               	bsf	4012,4,c	;volatile
  4643                           
  4644                           ; BSR set to: 0
  4645                           
  4646                           ; BSR set to: 0
  4647  001208  0100               	movlb	0	; () banked
  4648  00120A  0100               	movlb	0	; () banked
  4649  00120C  A3D2               	btfss	OpenUSART@config& (0+255),1,b
  4650  00120E  D002               	goto	l2540
  4651                           
  4652                           ; BSR set to: 0
  4653  001210  8CAC               	bsf	4012,6,c	;volatile
  4654  001212  8CAB               	bsf	4011,6,c	;volatile
  4655  001214                     l2540:
  4656                           
  4657                           ; BSR set to: 0
  4658  001214  0100               	movlb	0	; () banked
  4659  001216  0100               	movlb	0	; () banked
  4660  001218  B5D2               	btfsc	OpenUSART@config& (0+255),2,b
  4661                           
  4662                           ; BSR set to: 0
  4663  00121A  8EAC               	bsf	4012,7,c	;volatile
  4664                           
  4665                           ; BSR set to: 0
  4666                           
  4667                           ; BSR set to: 0
  4668  00121C  0100               	movlb	0	; () banked
  4669  00121E  0100               	movlb	0	; () banked
  4670  001220  A7D2               	btfss	OpenUSART@config& (0+255),3,b
  4671  001222  D002               	goto	l480
  4672                           
  4673                           ; BSR set to: 0
  4674  001224  88AB               	bsf	4011,4,c	;volatile
  4675  001226  D001               	goto	l2548
  4676  001228                     l480:
  4677                           
  4678                           ; BSR set to: 0
  4679  001228  8AAB               	bsf	4011,5,c	;volatile
  4680  00122A                     l2548:
  4681                           
  4682                           ; BSR set to: 0
  4683  00122A  0100               	movlb	0	; () banked
  4684  00122C  0100               	movlb	0	; () banked
  4685  00122E  B9D2               	btfsc	OpenUSART@config& (0+255),4,b
  4686                           
  4687                           ; BSR set to: 0
  4688  001230  84AC               	bsf	4012,2,c	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691  001232  989E               	bcf	3998,4,c	;volatile
  4692                           
  4693                           ; BSR set to: 0
  4694  001234  0100               	movlb	0	; () banked
  4695  001236  0100               	movlb	0	; () banked
  4696  001238  BBD2               	btfsc	OpenUSART@config& (0+255),5,b
  4697                           
  4698                           ; BSR set to: 0
  4699  00123A  86AB               	bsf	4011,3,c	;volatile
  4700                           
  4701                           ; BSR set to: 0
  4702                           
  4703                           ; BSR set to: 0
  4704  00123C  0100               	movlb	0	; () banked
  4705  00123E  0100               	movlb	0	; () banked
  4706  001240  ADD2               	btfss	OpenUSART@config& (0+255),6,b
  4707  001242  D002               	goto	l484
  4708                           
  4709                           ; BSR set to: 0
  4710  001244  8A9D               	bsf	3997,5,c	;volatile
  4711  001246  D001               	goto	l485
  4712  001248                     l484:
  4713                           
  4714                           ; BSR set to: 0
  4715  001248  9A9D               	bcf	3997,5,c	;volatile
  4716  00124A                     l485:
  4717                           
  4718                           ; BSR set to: 0
  4719  00124A  9A9E               	bcf	3998,5,c	;volatile
  4720                           
  4721                           ; BSR set to: 0
  4722  00124C  0100               	movlb	0	; () banked
  4723  00124E  0100               	movlb	0	; () banked
  4724  001250  AFD2               	btfss	OpenUSART@config& (0+255),7,b
  4725  001252  D002               	goto	l486
  4726                           
  4727                           ; BSR set to: 0
  4728  001254  889D               	bsf	3997,4,c	;volatile
  4729  001256  D001               	goto	l487
  4730  001258                     l486:
  4731                           
  4732                           ; BSR set to: 0
  4733  001258  989D               	bcf	3997,4,c	;volatile
  4734  00125A                     l487:
  4735                           
  4736                           ; BSR set to: 0
  4737  00125A  C0CD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4738                           
  4739                           ; BSR set to: 0
  4740  00125E  0100               	movlb	0	; () banked
  4741  001260  C0CE  F0CF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4742  001264  C0CF  F0D0         	movff	??_OpenUSART,??_OpenUSART+1
  4743  001268  0100               	movlb	0	; () banked
  4744  00126A  6BD1               	clrf	(??_OpenUSART+2)& (0+255),b
  4745  00126C  0100               	movlb	0	; () banked
  4746  00126E  51D0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4747  001270  6EB0               	movwf	4016,c	;volatile
  4748                           
  4749                           ; BSR set to: 0
  4750  001272  8AAC               	bsf	4012,5,c	;volatile
  4751                           
  4752                           ; BSR set to: 0
  4753  001274  8EAB               	bsf	4011,7,c	;volatile
  4754                           
  4755                           ; BSR set to: 0
  4756  001276  9C94               	bcf	3988,6,c	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759  001278  8E94               	bsf	3988,7,c	;volatile
  4760                           
  4761                           ; BSR set to: 0
  4762  00127A  A8AC               	btfss	4012,4,c	;volatile
  4763  00127C  0012               	return	
  4764                           
  4765                           ; BSR set to: 0
  4766  00127E  BEAC               	btfsc	4012,7,c	;volatile
  4767  001280  0012               	return	
  4768                           
  4769                           ; BSR set to: 0
  4770  001282  8C94               	bsf	3988,6,c	;volatile
  4771  001284  0012               	return	
  4772  001286                     __end_of_OpenUSART:
  4773                           	opt stack 0
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           prodh	equ	0xFF4
  4779                           prodl	equ	0xFF3
  4780                           intcon	equ	0xFF2
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           indf1	equ	0xFE7
  4784                           fsr1h	equ	0xFE2
  4785                           fsr1l	equ	0xFE1
  4786                           indf2	equ	0xFDF
  4787                           postinc2	equ	0xFDE
  4788                           postdec2	equ	0xFDD
  4789                           fsr2h	equ	0xFDA
  4790                           fsr2l	equ	0xFD9
  4791                           status	equ	0xFD8
  4792                           
  4793 ;; *************** function _OpenTimer1 *****************
  4794 ;; Defined at:
  4795 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  config          1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  config          1   23[BANK0 ] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;		None               void
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4809 ;;      Params:         0       0       0       0       0
  4810 ;;      Locals:         0       1       0       0       0
  4811 ;;      Temps:          0       0       0       0       0
  4812 ;;      Totals:         0       1       0       0       0
  4813 ;;Total ram usage:        1 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:   10
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text28
  4824  0018BA                     __ptext28:
  4825                           	opt stack 0
  4826  0018BA                     _OpenTimer1:
  4827                           	opt stack 19
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;incstack = 0
  4831                           ;OpenTimer1@config stored from wreg
  4832  0018BA  CFE8 F0CD          	movff	wreg,OpenTimer1@config
  4833  0018BE  0100               	movlb	0	; () banked
  4834  0018C0  0100               	movlb	0	; () banked
  4835  0018C2  51CD               	movf	OpenTimer1@config& (0+255),w,b
  4836  0018C4  0B7E               	andlw	126
  4837  0018C6  6ECD               	movwf	4045,c	;volatile
  4838                           
  4839                           ; BSR set to: 0
  4840  0018C8  0100               	movlb	0	; () banked
  4841  0018CA  0100               	movlb	0	; () banked
  4842  0018CC  ADCD               	btfss	OpenTimer1@config& (0+255),6,b
  4843  0018CE  D002               	goto	l436
  4844                           
  4845                           ; BSR set to: 0
  4846  0018D0  8ECD               	bsf	4045,7,c	;volatile
  4847  0018D2  D001               	goto	l2500
  4848  0018D4                     l436:
  4849                           
  4850                           ; BSR set to: 0
  4851  0018D4  9ECD               	bcf	4045,7,c	;volatile
  4852  0018D6                     l2500:
  4853                           
  4854                           ; BSR set to: 0
  4855  0018D6  0E00               	movlw	0
  4856  0018D8  6ECF               	movwf	4047,c	;volatile
  4857  0018DA  0E00               	movlw	0
  4858  0018DC  6ECE               	movwf	4046,c	;volatile
  4859                           
  4860                           ; BSR set to: 0
  4861  0018DE  909E               	bcf	3998,0,c	;volatile
  4862                           
  4863                           ; BSR set to: 0
  4864  0018E0  0100               	movlb	0	; () banked
  4865  0018E2  0100               	movlb	0	; () banked
  4866  0018E4  AFCD               	btfss	OpenTimer1@config& (0+255),7,b
  4867  0018E6  D002               	goto	l438
  4868                           
  4869                           ; BSR set to: 0
  4870  0018E8  809D               	bsf	3997,0,c	;volatile
  4871  0018EA  D001               	goto	l439
  4872  0018EC                     l438:
  4873                           
  4874                           ; BSR set to: 0
  4875  0018EC  909D               	bcf	3997,0,c	;volatile
  4876  0018EE                     l439:
  4877                           
  4878                           ; BSR set to: 0
  4879  0018EE  80CD               	bsf	4045,0,c	;volatile
  4880                           
  4881                           ; BSR set to: 0
  4882  0018F0  0012               	return	
  4883  0018F2                     __end_of_OpenTimer1:
  4884                           	opt stack 0
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           intcon	equ	0xFF2
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           indf1	equ	0xFE7
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _OpenTimer0 *****************
  4905 ;; Defined at:
  4906 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  config          1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  config          1   23[BANK0 ] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         0       1       0       0       0
  4922 ;;      Temps:          0       0       0       0       0
  4923 ;;      Totals:         0       1       0       0       0
  4924 ;;Total ram usage:        1 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   10
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text29
  4935  0019BC                     __ptext29:
  4936                           	opt stack 0
  4937  0019BC                     _OpenTimer0:
  4938                           	opt stack 19
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;incstack = 0
  4942                           ;OpenTimer0@config stored from wreg
  4943  0019BC  CFE8 F0CD          	movff	wreg,OpenTimer0@config
  4944  0019C0  0100               	movlb	0	; () banked
  4945  0019C2  0100               	movlb	0	; () banked
  4946  0019C4  51CD               	movf	OpenTimer0@config& (0+255),w,b
  4947  0019C6  0B7F               	andlw	127
  4948  0019C8  6ED5               	movwf	4053,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951  0019CA  0E00               	movlw	0
  4952  0019CC  6ED7               	movwf	4055,c	;volatile
  4953                           
  4954                           ; BSR set to: 0
  4955  0019CE  0E00               	movlw	0
  4956  0019D0  6ED6               	movwf	4054,c	;volatile
  4957                           
  4958                           ; BSR set to: 0
  4959  0019D2  94F2               	bcf	intcon,2,c	;volatile
  4960                           
  4961                           ; BSR set to: 0
  4962  0019D4  0100               	movlb	0	; () banked
  4963  0019D6  0100               	movlb	0	; () banked
  4964  0019D8  AFCD               	btfss	OpenTimer0@config& (0+255),7,b
  4965  0019DA  D002               	goto	l412
  4966                           
  4967                           ; BSR set to: 0
  4968  0019DC  8AF2               	bsf	intcon,5,c	;volatile
  4969  0019DE  D001               	goto	l413
  4970  0019E0                     l412:
  4971                           
  4972                           ; BSR set to: 0
  4973  0019E0  9AF2               	bcf	intcon,5,c	;volatile
  4974  0019E2                     l413:
  4975                           
  4976                           ; BSR set to: 0
  4977  0019E2  8ED5               	bsf	4053,7,c	;volatile
  4978                           
  4979                           ; BSR set to: 0
  4980  0019E4  0012               	return	
  4981  0019E6                     __end_of_OpenTimer0:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           indf1	equ	0xFE7
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function _InterruptHandlerLow *****************
  5003 ;; Defined at:
  5004 ;;		line 122 in file "src/interrupts.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;		None               void
  5011 ;; Registers used:
  5012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5018 ;;      Params:         0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0
  5020 ;;      Temps:         17       0       0       0       0
  5021 ;;      Totals:        17       0       0       0       0
  5022 ;;Total ram usage:       17 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    9
  5025 ;; This function calls:
  5026 ;;		_timer1_int_handler
  5027 ;;		_uart_recv_int_handler
  5028 ;; This function is called by:
  5029 ;;		Interrupt level 1
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	intcodelo
  5034  000018                     __pintcodelo:
  5035                           	opt stack 0
  5036  000018                     _InterruptHandlerLow:
  5037                           	opt stack 16
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;incstack = 0
  5041  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5042  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5043  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5044  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5045  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5046  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5047  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5048  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5049  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5050  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5051  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5052  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5053  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5054  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5055  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5056  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5057  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5058                           
  5059                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5060  00005C  A09E               	btfss	3998,0,c	;volatile
  5061  00005E  D003               	goto	i1l3570
  5062                           
  5063                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5064  000060  909E               	bcf	3998,0,c	;volatile
  5065                           
  5066                           ;interrupts.c: 126: timer1_int_handler();
  5067  000062  ECAF  F00C         	call	_timer1_int_handler	;wreg free
  5068  000066                     i1l3570:
  5069                           
  5070                           ;interrupts.c: 127: }
  5071                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5072  000066  AA9E               	btfss	3998,5,c	;volatile
  5073  000068  D003               	goto	i1l3576
  5074                           
  5075                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5076  00006A  9A9E               	bcf	3998,5,c	;volatile
  5077                           
  5078                           ;interrupts.c: 132: uart_recv_int_handler();
  5079  00006C  ECAC  F008         	call	_uart_recv_int_handler	;wreg free
  5080  000070                     i1l3576:
  5081                           
  5082                           ;interrupts.c: 133: }
  5083                           ;interrupts.c: 136: if (PIR1bits.TXIF) {
  5084  000070  B89E               	btfsc	3998,4,c	;volatile
  5085                           
  5086                           ;interrupts.c: 137: PIR1bits.TXIF = 0;
  5087  000072  989E               	bcf	3998,4,c	;volatile
  5088  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5089  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5090  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5091  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5092  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5093  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5094  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5095  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5096  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5097  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5098  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5099  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5100  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5101  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5102  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5103  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5104  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5105  0000B8  0010               	retfie	
  5106  0000BA                     __end_of_InterruptHandlerLow:
  5107                           	opt stack 0
  5108                           pclatu	equ	0xFFB
  5109                           pclath	equ	0xFFA
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           postinc0	equ	0xFEE
  5118                           fsr0h	equ	0xFEA
  5119                           fsr0l	equ	0xFE9
  5120                           wreg	equ	0xFE8
  5121                           indf1	equ	0xFE7
  5122                           fsr1h	equ	0xFE2
  5123                           fsr1l	equ	0xFE1
  5124                           bsr	equ	0xFE0
  5125                           indf2	equ	0xFDF
  5126                           postinc2	equ	0xFDE
  5127                           postdec2	equ	0xFDD
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8
  5131                           
  5132 ;; *************** function _uart_recv_int_handler *****************
  5133 ;; Defined at:
  5134 ;;		line 11 in file "src/my_uart.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;		None               void
  5141 ;; Registers used:
  5142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5148 ;;      Params:         0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0
  5150 ;;      Temps:          1       0       0       0       0
  5151 ;;      Totals:         1       0       0       0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    8
  5155 ;; This function calls:
  5156 ;;		_ReadUSART
  5157 ;;		i1_ToMainLow_sendmsg
  5158 ;; This function is called by:
  5159 ;;		_InterruptHandlerLow
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text31
  5164  001158                     __ptext31:
  5165                           	opt stack 0
  5166  001158                     _uart_recv_int_handler:
  5167                           	opt stack 16
  5168                           
  5169                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5170                           
  5171                           ;incstack = 0
  5172  001158  AA9E               	btfss	3998,5,c	;volatile
  5173  00115A  D03C               	goto	i1l3558
  5174                           
  5175                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5176  00115C  EE20 F004          	lfsr	2,4
  5177  001160  504D               	movf	_uc_ptr,w,c
  5178  001162  26D9               	addwf	fsr2l,f,c
  5179  001164  504E               	movf	_uc_ptr+1,w,c
  5180  001166  22DA               	addwfc	fsr2h,f,c
  5181  001168  50DF               	movf	indf2,w,c
  5182  00116A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5183  00116C  501B               	movf	??_uart_recv_int_handler,w,c
  5184  00116E  0D01               	mullw	1
  5185  001170  50F3               	movf	prodl,w,c
  5186  001172  244D               	addwf	_uc_ptr,w,c
  5187  001174  6ED9               	movwf	fsr2l,c
  5188  001176  50F4               	movf	prodh,w,c
  5189  001178  204E               	addwfc	_uc_ptr+1,w,c
  5190  00117A  6EDA               	movwf	fsr2h,c
  5191  00117C  EC63  F00D         	call	_ReadUSART	;wreg free
  5192  001180  6EDF               	movwf	indf2,c
  5193                           
  5194                           ;my_uart.c: 25: uc_ptr->buflen++;
  5195  001182  EE20 F004          	lfsr	2,4
  5196  001186  504D               	movf	_uc_ptr,w,c
  5197  001188  26D9               	addwf	fsr2l,f,c
  5198  00118A  504E               	movf	_uc_ptr+1,w,c
  5199  00118C  22DA               	addwfc	fsr2h,f,c
  5200  00118E  2ADF               	incf	indf2,f,c
  5201                           
  5202                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5203  001190  EE20 F004          	lfsr	2,4
  5204  001194  504D               	movf	_uc_ptr,w,c
  5205  001196  26D9               	addwf	fsr2l,f,c
  5206  001198  504E               	movf	_uc_ptr+1,w,c
  5207  00119A  22DA               	addwfc	fsr2h,f,c
  5208  00119C  0E04               	movlw	4
  5209  00119E  62DF               	cpfseq	indf2,c
  5210  0011A0  D019               	goto	i1l3558
  5211                           
  5212                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5213  0011A2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5214  0011A4  0E20               	movlw	32
  5215  0011A6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5216  0011A8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5217  0011AA  C04E  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5218  0011AE  C04D  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5219  0011B2  EE20 F004          	lfsr	2,4
  5220  0011B6  504D               	movf	_uc_ptr,w,c
  5221  0011B8  26D9               	addwf	fsr2l,f,c
  5222  0011BA  504E               	movf	_uc_ptr+1,w,c
  5223  0011BC  22DA               	addwfc	fsr2h,f,c
  5224  0011BE  50DF               	movf	indf2,w,c
  5225  0011C0  EC1C  F00D         	call	i1_ToMainLow_sendmsg
  5226                           
  5227                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5228  0011C4  EE20 F004          	lfsr	2,4
  5229  0011C8  504D               	movf	_uc_ptr,w,c
  5230  0011CA  26D9               	addwf	fsr2l,f,c
  5231  0011CC  504E               	movf	_uc_ptr+1,w,c
  5232  0011CE  22DA               	addwfc	fsr2h,f,c
  5233  0011D0  0E00               	movlw	0
  5234  0011D2  6EDF               	movwf	indf2,c
  5235  0011D4                     i1l3558:
  5236                           
  5237                           ;my_uart.c: 30: }
  5238                           ;my_uart.c: 31: }
  5239                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5240  0011D4  A650               	btfss	_USART_Status,3,c
  5241  0011D6  0012               	return	
  5242                           
  5243                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5244  0011D8  98AB               	bcf	4011,4,c	;volatile
  5245                           
  5246                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5247  0011DA  88AB               	bsf	4011,4,c	;volatile
  5248                           
  5249                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5250  0011DC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5251  0011DE  0E1E               	movlw	30
  5252  0011E0  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5253  0011E2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5254  0011E4  0E00               	movlw	0
  5255  0011E6  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5256  0011E8  0E00               	movlw	0
  5257  0011EA  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5258  0011EC  0E00               	movlw	0
  5259  0011EE  EC1C  F00D         	call	i1_ToMainLow_sendmsg
  5260  0011F2  0012               	return	
  5261  0011F4                     __end_of_uart_recv_int_handler:
  5262                           	opt stack 0
  5263                           pclatu	equ	0xFFB
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           fsr0h	equ	0xFEA
  5274                           fsr0l	equ	0xFE9
  5275                           wreg	equ	0xFE8
  5276                           indf1	equ	0xFE7
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           bsr	equ	0xFE0
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function _ReadUSART *****************
  5288 ;; Defined at:
  5289 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  data            1    0[COMRAM] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5303 ;;      Params:         0       0       0       0       0
  5304 ;;      Locals:         1       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0
  5306 ;;      Totals:         1       0       0       0       0
  5307 ;;Total ram usage:        1 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    5
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_uart_recv_int_handler
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text32
  5318  001AC6                     __ptext32:
  5319                           	opt stack 0
  5320  001AC6                     _ReadUSART:
  5321                           	opt stack 18
  5322                           
  5323                           ;incstack = 0
  5324  001AC6  0EF2               	movlw	242
  5325  001AC8  1650               	andwf	_USART_Status,f,c
  5326  001ACA  ACAB               	btfss	4011,6,c	;volatile
  5327  001ACC  D003               	goto	i1l498
  5328  001ACE  9050               	bcf	_USART_Status,0,c
  5329  001AD0  B0AB               	btfsc	4011,0,c	;volatile
  5330  001AD2  8050               	bsf	_USART_Status,0,c
  5331  001AD4                     i1l498:
  5332  001AD4  B4AB               	btfsc	4011,2,c	;volatile
  5333  001AD6  8450               	bsf	_USART_Status,2,c
  5334  001AD8  B2AB               	btfsc	4011,1,c	;volatile
  5335  001ADA  8650               	bsf	_USART_Status,3,c
  5336  001ADC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5337  001AE0  5001               	movf	ReadUSART@data,w,c
  5338  001AE2  0012               	return	
  5339  001AE4                     __end_of_ReadUSART:
  5340                           	opt stack 0
  5341                           pclatu	equ	0xFFB
  5342                           pclath	equ	0xFFA
  5343                           tblptru	equ	0xFF8
  5344                           tblptrh	equ	0xFF7
  5345                           tblptrl	equ	0xFF6
  5346                           tablat	equ	0xFF5
  5347                           prodh	equ	0xFF4
  5348                           prodl	equ	0xFF3
  5349                           intcon	equ	0xFF2
  5350                           postinc0	equ	0xFEE
  5351                           fsr0h	equ	0xFEA
  5352                           fsr0l	equ	0xFE9
  5353                           wreg	equ	0xFE8
  5354                           indf1	equ	0xFE7
  5355                           fsr1h	equ	0xFE2
  5356                           fsr1l	equ	0xFE1
  5357                           bsr	equ	0xFE0
  5358                           indf2	equ	0xFDF
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8
  5364                           
  5365 ;; *************** function _timer1_int_handler *****************
  5366 ;; Defined at:
  5367 ;;		line 36 in file "src/user_interrupts.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  result          2   27[COMRAM] unsigned int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0
  5383 ;;      Temps:          1       0       0       0       0
  5384 ;;      Totals:         3       0       0       0       0
  5385 ;;Total ram usage:        3 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    8
  5388 ;; This function calls:
  5389 ;;		_WriteTimer1
  5390 ;;		i1_ReadTimer1
  5391 ;;		i1_ToMainLow_sendmsg
  5392 ;; This function is called by:
  5393 ;;		_InterruptHandlerLow
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text33
  5398  00195E                     __ptext33:
  5399                           	opt stack 0
  5400  00195E                     _timer1_int_handler:
  5401                           	opt stack 16
  5402                           
  5403                           ;user_interrupts.c: 37: unsigned int result;
  5404                           ;user_interrupts.c: 44: result = ReadTimer1();
  5405                           
  5406                           ;incstack = 0
  5407  00195E  ECAB  F00D         	call	i1_ReadTimer1	;wreg free
  5408  001962  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  5409  001966  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  5410                           
  5411                           ;user_interrupts.c: 46: ToMainLow_sendmsg(0, 11, (void *) 0);
  5412  00196A  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5413  00196C  0E0B               	movlw	11
  5414  00196E  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5415  001970  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5416  001972  0E00               	movlw	0
  5417  001974  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5418  001976  0E00               	movlw	0
  5419  001978  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5420  00197A  0E00               	movlw	0
  5421  00197C  EC1C  F00D         	call	i1_ToMainLow_sendmsg
  5422                           
  5423                           ;user_interrupts.c: 49: WriteTimer1(0);
  5424  001980  0E00               	movlw	0
  5425  001982  6E02               	movwf	WriteTimer1@timer1+1,c
  5426  001984  0E00               	movlw	0
  5427  001986  6E01               	movwf	WriteTimer1@timer1,c
  5428  001988  ECB4  F00D         	call	_WriteTimer1	;wreg free
  5429  00198C  0012               	return	
  5430  00198E                     __end_of_timer1_int_handler:
  5431                           	opt stack 0
  5432                           pclatu	equ	0xFFB
  5433                           pclath	equ	0xFFA
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           postinc0	equ	0xFEE
  5442                           fsr0h	equ	0xFEA
  5443                           fsr0l	equ	0xFE9
  5444                           wreg	equ	0xFE8
  5445                           indf1	equ	0xFE7
  5446                           fsr1h	equ	0xFE2
  5447                           fsr1l	equ	0xFE1
  5448                           bsr	equ	0xFE0
  5449                           indf2	equ	0xFDF
  5450                           postinc2	equ	0xFDE
  5451                           postdec2	equ	0xFDD
  5452                           fsr2h	equ	0xFDA
  5453                           fsr2l	equ	0xFD9
  5454                           status	equ	0xFD8
  5455                           
  5456 ;; *************** function i1_ToMainLow_sendmsg *****************
  5457 ;; Defined at:
  5458 ;;		line 103 in file "src/messages.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  length          1    wreg     unsigned char 
  5461 ;;  msgtype         1   22[COMRAM] unsigned char 
  5462 ;;  data            2   23[COMRAM] PTR void 
  5463 ;;		 -> timer1_lthread@ctrl(2), NULL(0), main@uc(5), 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  length          1   25[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      char 
  5468 ;; Registers used:
  5469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5475 ;;      Params:         3       0       0       0       0
  5476 ;;      Locals:         1       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0
  5478 ;;      Totals:         4       0       0       0       0
  5479 ;;Total ram usage:        4 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    7
  5482 ;; This function calls:
  5483 ;;		i1_send_msg
  5484 ;; This function is called by:
  5485 ;;		_uart_recv_int_handler
  5486 ;;		_timer1_int_handler
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text34
  5491  001A38                     __ptext34:
  5492                           	opt stack 0
  5493  001A38                     i1_ToMainLow_sendmsg:
  5494                           	opt stack 16
  5495                           
  5496                           ;incstack = 0
  5497                           ;i1ToMainLow_sendmsg@length stored from wreg
  5498  001A38  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  5499                           
  5500                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5501                           ;	Return value of i1_ToMainLow_sendmsg is never used
  5502  001A3C  0100               	movlb	0	; () banked
  5503  001A3E  0E00               	movlw	high _ToMainLow_MQ
  5504  001A40  6E0C               	movwf	i1send_msg@qptr+1,c
  5505  001A42  0100               	movlb	0	; () banked
  5506  001A44  0E80               	movlw	low _ToMainLow_MQ
  5507  001A46  6E0B               	movwf	i1send_msg@qptr,c
  5508  001A48  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  5509  001A4C  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5510  001A50  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5511  001A54  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  5512  001A58  EC02  F008         	call	i1_send_msg	;wreg free
  5513  001A5C  0012               	return	
  5514  001A5E                     __end_ofi1_ToMainLow_sendmsg:
  5515                           	opt stack 0
  5516                           pclatu	equ	0xFFB
  5517                           pclath	equ	0xFFA
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           postinc0	equ	0xFEE
  5526                           fsr0h	equ	0xFEA
  5527                           fsr0l	equ	0xFE9
  5528                           wreg	equ	0xFE8
  5529                           indf1	equ	0xFE7
  5530                           fsr1h	equ	0xFE2
  5531                           fsr1l	equ	0xFE1
  5532                           bsr	equ	0xFE0
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           postdec2	equ	0xFDD
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function i1_send_msg *****************
  5541 ;; Defined at:
  5542 ;;		line 24 in file "src/messages.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5545 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5546 ;;  length          1   12[COMRAM] unsigned char 
  5547 ;;  msgtype         1   13[COMRAM] unsigned char 
  5548 ;;  data            2   14[COMRAM] PTR void 
  5549 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5550 ;;		 -> main@ic(28), main@uc(5), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5553 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5554 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5555 ;;  send_msg        2   17[COMRAM] unsigned int 
  5556 ;;  send_msg        1   19[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      char 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5566 ;;      Params:         6       0       0       0       0
  5567 ;;      Locals:         5       0       0       0       0
  5568 ;;      Temps:          1       0       0       0       0
  5569 ;;      Totals:        12       0       0       0       0
  5570 ;;Total ram usage:       12 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    6
  5573 ;; This function calls:
  5574 ;;		i1_memcpy
  5575 ;; This function is called by:
  5576 ;;		i1_ToMainLow_sendmsg
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text35
  5581  001004                     __ptext35:
  5582                           	opt stack 0
  5583  001004                     i1_send_msg:
  5584                           	opt stack 16
  5585                           
  5586                           ;messages.c: 25: unsigned char slot;
  5587                           ;messages.c: 27: msg *qmsg;
  5588                           ;messages.c: 28: size_t tlength = length;
  5589                           
  5590                           ;incstack = 0
  5591  001004  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5592  001008  6A13               	clrf	i1send_msg@tlength+1,c
  5593                           
  5594                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5595  00100A  EE20 F034          	lfsr	2,52
  5596  00100E  500B               	movf	i1send_msg@qptr,w,c
  5597  001010  26D9               	addwf	fsr2l,f,c
  5598  001012  500C               	movf	i1send_msg@qptr+1,w,c
  5599  001014  22DA               	addwfc	fsr2h,f,c
  5600  001016  50DF               	movf	indf2,w,c
  5601  001018  6E14               	movwf	i1send_msg@slot,c
  5602                           
  5603                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5604  00101A  5014               	movf	i1send_msg@slot,w,c
  5605  00101C  0D0D               	mullw	13
  5606  00101E  50F3               	movf	prodl,w,c
  5607  001020  240B               	addwf	i1send_msg@qptr,w,c
  5608  001022  6E15               	movwf	i1send_msg@qmsg,c
  5609  001024  50F4               	movf	prodh,w,c
  5610  001026  200C               	addwfc	i1send_msg@qptr+1,w,c
  5611  001028  6E16               	movwf	i1send_msg@qmsg+1,c
  5612                           
  5613                           ;messages.c: 41: if (qmsg->full != 0) {
  5614  00102A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5615  00102E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5616  001032  50DF               	movf	indf2,w,c
  5617  001034  B4D8               	btfsc	status,2,c
  5618  001036  D002               	goto	i1l3524
  5619                           
  5620                           ;messages.c: 42: return (-1);
  5621  001038  0EFF               	movlw	255
  5622  00103A  0012               	return	
  5623  00103C                     i1l3524:
  5624                           
  5625                           ;messages.c: 43: }
  5626                           ;messages.c: 46: qmsg->length = length;
  5627  00103C  EE20 F001          	lfsr	2,1
  5628  001040  5015               	movf	i1send_msg@qmsg,w,c
  5629  001042  26D9               	addwf	fsr2l,f,c
  5630  001044  5016               	movf	i1send_msg@qmsg+1,w,c
  5631  001046  22DA               	addwfc	fsr2h,f,c
  5632  001048  C00D  FFDF         	movff	i1send_msg@length,indf2
  5633                           
  5634                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5635  00104C  EE20 F002          	lfsr	2,2
  5636  001050  5015               	movf	i1send_msg@qmsg,w,c
  5637  001052  26D9               	addwf	fsr2l,f,c
  5638  001054  5016               	movf	i1send_msg@qmsg+1,w,c
  5639  001056  22DA               	addwfc	fsr2h,f,c
  5640  001058  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5641                           
  5642                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5643  00105C  0E03               	movlw	3
  5644  00105E  2415               	addwf	i1send_msg@qmsg,w,c
  5645  001060  6E01               	movwf	i1memcpy@d1,c
  5646  001062  0E00               	movlw	0
  5647  001064  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5648  001066  6E02               	movwf	i1memcpy@d1+1,c
  5649  001068  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5650  00106C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5651  001070  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5652  001074  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5653  001078  ECFE  F00B         	call	i1_memcpy	;wreg free
  5654                           
  5655                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5656  00107C  EE20 F034          	lfsr	2,52
  5657  001080  500B               	movf	i1send_msg@qptr,w,c
  5658  001082  26D9               	addwf	fsr2l,f,c
  5659  001084  500C               	movf	i1send_msg@qptr+1,w,c
  5660  001086  22DA               	addwfc	fsr2h,f,c
  5661  001088  EE10 F034          	lfsr	1,52
  5662  00108C  500B               	movf	i1send_msg@qptr,w,c
  5663  00108E  26E1               	addwf	fsr1l,f,c
  5664  001090  500C               	movf	i1send_msg@qptr+1,w,c
  5665  001092  22E2               	addwfc	fsr1h,f,c
  5666  001094  50E7               	movf	indf1,w,c
  5667  001096  6E11               	movwf	??i1_send_msg& (0+255),c
  5668  001098  2811               	incf	??i1_send_msg,w,c
  5669  00109A  0B03               	andlw	3
  5670  00109C  6EDF               	movwf	indf2,c
  5671                           
  5672                           ;messages.c: 59: qmsg->full = 1;
  5673  00109E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5674  0010A2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5675  0010A6  0E01               	movlw	1
  5676  0010A8  6EDF               	movwf	indf2,c
  5677                           
  5678                           ;messages.c: 60: return (1);
  5679  0010AA  0E01               	movlw	1
  5680  0010AC  0012               	return	
  5681  0010AE                     __end_ofi1_send_msg:
  5682                           	opt stack 0
  5683                           pclatu	equ	0xFFB
  5684                           pclath	equ	0xFFA
  5685                           tblptru	equ	0xFF8
  5686                           tblptrh	equ	0xFF7
  5687                           tblptrl	equ	0xFF6
  5688                           tablat	equ	0xFF5
  5689                           prodh	equ	0xFF4
  5690                           prodl	equ	0xFF3
  5691                           intcon	equ	0xFF2
  5692                           postinc0	equ	0xFEE
  5693                           fsr0h	equ	0xFEA
  5694                           fsr0l	equ	0xFE9
  5695                           wreg	equ	0xFE8
  5696                           indf1	equ	0xFE7
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           bsr	equ	0xFE0
  5700                           indf2	equ	0xFDF
  5701                           postinc2	equ	0xFDE
  5702                           postdec2	equ	0xFDD
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function i1_memcpy *****************
  5708 ;; Defined at:
  5709 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  d1              2    0[COMRAM] PTR void 
  5712 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5713 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5714 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5715 ;;  s1              2    2[COMRAM] PTR const void 
  5716 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5717 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5718 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5719 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5720 ;;		 -> main@ic(28), main@uc(5), 
  5721 ;;  n               2    4[COMRAM] unsigned int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5724 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5725 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5726 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5727 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5728 ;;		 -> main@ic(28), main@uc(5), 
  5729 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5730 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5731 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5732 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  2    0[COMRAM] PTR void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5742 ;;      Params:         6       0       0       0       0
  5743 ;;      Locals:         4       0       0       0       0
  5744 ;;      Temps:          0       0       0       0       0
  5745 ;;      Totals:        10       0       0       0       0
  5746 ;;Total ram usage:       10 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    5
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		i1_send_msg
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text36
  5757  0017FC                     __ptext36:
  5758                           	opt stack 0
  5759  0017FC                     i1_memcpy:
  5760                           	opt stack 16
  5761                           
  5762                           ;incstack = 0
  5763  0017FC  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5764  001800  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5765  001804  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5766  001808  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5767  00180C  D00E               	goto	i1l3500
  5768  00180E                     i1l3494:
  5769  00180E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5770  001812  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5771  001816  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5772  00181A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5773  00181E  CFDF FFE7          	movff	indf2,indf1
  5774  001822  4A09               	infsnz	i1memcpy@s,f,c
  5775  001824  2A0A               	incf	i1memcpy@s+1,f,c
  5776  001826  4A07               	infsnz	i1memcpy@d,f,c
  5777  001828  2A08               	incf	i1memcpy@d+1,f,c
  5778  00182A                     i1l3500:
  5779  00182A  0605               	decf	i1memcpy@n,f,c
  5780  00182C  A0D8               	btfss	status,0,c
  5781  00182E  0606               	decf	i1memcpy@n+1,f,c
  5782  001830  2805               	incf	i1memcpy@n& (0+255),w,c
  5783  001832  B4D8               	btfsc	status,2,c
  5784  001834  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5785  001836  B4D8               	btfsc	status,2,c
  5786                           
  5787                           ;	Return value of i1_memcpy is never used
  5788  001838  0012               	return	
  5789  00183A  D7E9               	goto	i1l3494
  5790  00183C                     __end_ofi1_memcpy:
  5791                           	opt stack 0
  5792                           pclatu	equ	0xFFB
  5793                           pclath	equ	0xFFA
  5794                           tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           prodh	equ	0xFF4
  5799                           prodl	equ	0xFF3
  5800                           intcon	equ	0xFF2
  5801                           postinc0	equ	0xFEE
  5802                           fsr0h	equ	0xFEA
  5803                           fsr0l	equ	0xFE9
  5804                           wreg	equ	0xFE8
  5805                           indf1	equ	0xFE7
  5806                           fsr1h	equ	0xFE2
  5807                           fsr1l	equ	0xFE1
  5808                           bsr	equ	0xFE0
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           
  5816 ;; *************** function i1_ReadTimer1 *****************
  5817 ;; Defined at:
  5818 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  2    0[COMRAM] unsigned int 
  5825 ;; Registers used:
  5826 ;;		None
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5832 ;;      Params:         2       0       0       0       0
  5833 ;;      Locals:         2       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0
  5835 ;;      Totals:         4       0       0       0       0
  5836 ;;Total ram usage:        4 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    5
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_timer1_int_handler
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text37
  5847  001B56                     __ptext37:
  5848                           	opt stack 0
  5849  001B56                     i1_ReadTimer1:
  5850                           	opt stack 18
  5851                           
  5852                           ;incstack = 0
  5853  001B56  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  5854  001B5A  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  5855  001B5E  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  5856  001B62  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  5857  001B66  0012               	return	
  5858  001B68                     __end_ofi1_ReadTimer1:
  5859                           	opt stack 0
  5860                           pclatu	equ	0xFFB
  5861                           pclath	equ	0xFFA
  5862                           tblptru	equ	0xFF8
  5863                           tblptrh	equ	0xFF7
  5864                           tblptrl	equ	0xFF6
  5865                           tablat	equ	0xFF5
  5866                           prodh	equ	0xFF4
  5867                           prodl	equ	0xFF3
  5868                           intcon	equ	0xFF2
  5869                           postinc0	equ	0xFEE
  5870                           fsr0h	equ	0xFEA
  5871                           fsr0l	equ	0xFE9
  5872                           wreg	equ	0xFE8
  5873                           indf1	equ	0xFE7
  5874                           fsr1h	equ	0xFE2
  5875                           fsr1l	equ	0xFE1
  5876                           bsr	equ	0xFE0
  5877                           indf2	equ	0xFDF
  5878                           postinc2	equ	0xFDE
  5879                           postdec2	equ	0xFDD
  5880                           fsr2h	equ	0xFDA
  5881                           fsr2l	equ	0xFD9
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function _WriteTimer1 *****************
  5885 ;; Defined at:
  5886 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  timer1          2    0[COMRAM] unsigned int 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  timer           2    2[COMRAM] struct Timers
  5891 ;; Return value:  Size  Location     Type
  5892 ;;		None               void
  5893 ;; Registers used:
  5894 ;;		None
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5900 ;;      Params:         2       0       0       0       0
  5901 ;;      Locals:         2       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0
  5903 ;;      Totals:         4       0       0       0       0
  5904 ;;Total ram usage:        4 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    5
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_timer1_int_handler
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text38
  5915  001B68                     __ptext38:
  5916                           	opt stack 0
  5917  001B68                     _WriteTimer1:
  5918                           	opt stack 18
  5919                           
  5920                           ;incstack = 0
  5921  001B68  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5922  001B6C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5923  001B70  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5924  001B74  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5925  001B78  0012               	return	
  5926  001B7A                     __end_of_WriteTimer1:
  5927                           	opt stack 0
  5928                           pclatu	equ	0xFFB
  5929                           pclath	equ	0xFFA
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           prodh	equ	0xFF4
  5935                           prodl	equ	0xFF3
  5936                           intcon	equ	0xFF2
  5937                           postinc0	equ	0xFEE
  5938                           fsr0h	equ	0xFEA
  5939                           fsr0l	equ	0xFE9
  5940                           wreg	equ	0xFE8
  5941                           indf1	equ	0xFE7
  5942                           fsr1h	equ	0xFE2
  5943                           fsr1l	equ	0xFE1
  5944                           bsr	equ	0xFE0
  5945                           indf2	equ	0xFDF
  5946                           postinc2	equ	0xFDE
  5947                           postdec2	equ	0xFDD
  5948                           fsr2h	equ	0xFDA
  5949                           fsr2l	equ	0xFD9
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function _InterruptHandlerHigh *****************
  5953 ;; Defined at:
  5954 ;;		line 83 in file "src/interrupts.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;		None               void
  5961 ;; Registers used:
  5962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5968 ;;      Params:         0       0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0
  5970 ;;      Temps:          0      14       0       0       0
  5971 ;;      Totals:         0      14       0       0       0
  5972 ;;Total ram usage:       14 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    4
  5975 ;; This function calls:
  5976 ;;		_SleepIfOkay
  5977 ;;		_i2c_int_handler
  5978 ;;		_timer0_int_handler
  5979 ;; This function is called by:
  5980 ;;		Interrupt level 2
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	intcode
  5985  000008                     __pintcode:
  5986                           	opt stack 0
  5987  000008                     _InterruptHandlerHigh:
  5988                           	opt stack 16
  5989                           
  5990                           ;incstack = 0
  5991  000008  CFFA F0BF          	movff	pclath,??_InterruptHandlerHigh
  5992  00000C  CFFB F0C0          	movff	pclatu,??_InterruptHandlerHigh+1
  5993  000010  EF88  F009         	goto	int_func
  5994                           pclatu	equ	0xFFB
  5995                           pclath	equ	0xFFA
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           postinc0	equ	0xFEE
  6004                           fsr0h	equ	0xFEA
  6005                           fsr0l	equ	0xFE9
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           fsr1h	equ	0xFE2
  6009                           fsr1l	equ	0xFE1
  6010                           bsr	equ	0xFE0
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           postdec2	equ	0xFDD
  6014                           fsr2h	equ	0xFDA
  6015                           fsr2l	equ	0xFD9
  6016                           status	equ	0xFD8
  6017                           
  6018                           	psect	intcode_body
  6019  001310                     __pintcode_body:
  6020                           	opt stack 16
  6021  001310                     int_func:
  6022                           	opt stack 16
  6023  001310  CFE9 F0C1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6024  001314  CFEA F0C2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6025  001318  CFE1 F0C3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6026  00131C  CFE2 F0C4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6027  001320  CFD9 F0C5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6028  001324  CFDA F0C6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6029  001328  CFF3 F0C7          	movff	prodl,??_InterruptHandlerHigh+8
  6030  00132C  CFF4 F0C8          	movff	prodh,??_InterruptHandlerHigh+9
  6031  001330  CFF6 F0C9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6032  001334  CFF7 F0CA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6033  001338  CFF8 F0CB          	movff	tblptru,??_InterruptHandlerHigh+12
  6034  00133C  CFF5 F0CC          	movff	tablat,??_InterruptHandlerHigh+13
  6035                           
  6036                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6037  001340  A69E               	btfss	3998,3,c	;volatile
  6038  001342  D003               	goto	i2l3042
  6039                           
  6040                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6041  001344  969E               	bcf	3998,3,c	;volatile
  6042                           
  6043                           ;interrupts.c: 92: i2c_int_handler();
  6044  001346  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6045  00134A                     i2l3042:
  6046                           
  6047                           ;interrupts.c: 93: }
  6048                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6049  00134A  A4F2               	btfss	intcon,2,c	;volatile
  6050  00134C  D003               	goto	i2l3048
  6051                           
  6052                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6053  00134E  94F2               	bcf	intcon,2,c	;volatile
  6054                           
  6055                           ;interrupts.c: 99: timer0_int_handler();
  6056  001350  ECEF  F00A         	call	_timer0_int_handler	;wreg free
  6057  001354                     i2l3048:
  6058                           
  6059                           ;interrupts.c: 100: }
  6060                           ;interrupts.c: 109: SleepIfOkay();
  6061  001354  EC50  F00B         	call	_SleepIfOkay	;wreg free
  6062  001358  C0CC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6063  00135C  C0CB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6064  001360  C0CA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6065  001364  C0C9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6066  001368  C0C8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6067  00136C  C0C7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6068  001370  C0C6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6069  001374  C0C5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6070  001378  C0C4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6071  00137C  C0C3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6072  001380  C0C2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6073  001384  C0C1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6074  001388  C0C0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6075  00138C  C0BF  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6076  001390  0011               	retfie		f
  6077  001392                     __end_of_InterruptHandlerHigh:
  6078                           	opt stack 0
  6079                           pclatu	equ	0xFFB
  6080                           pclath	equ	0xFFA
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           intcon	equ	0xFF2
  6088                           postinc0	equ	0xFEE
  6089                           fsr0h	equ	0xFEA
  6090                           fsr0l	equ	0xFE9
  6091                           wreg	equ	0xFE8
  6092                           indf1	equ	0xFE7
  6093                           fsr1h	equ	0xFE2
  6094                           fsr1l	equ	0xFE1
  6095                           bsr	equ	0xFE0
  6096                           indf2	equ	0xFDF
  6097                           postinc2	equ	0xFDE
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function _timer0_int_handler *****************
  6104 ;; Defined at:
  6105 ;;		line 16 in file "src/user_interrupts.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  val             2    4[BANK0 ] unsigned int 
  6110 ;;  msgtype         2    2[BANK0 ] int 
  6111 ;;  length          2    0[BANK0 ] int 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;		None               void
  6114 ;; Registers used:
  6115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6121 ;;      Params:         0       0       0       0       0
  6122 ;;      Locals:         0       6       0       0       0
  6123 ;;      Temps:          1       0       0       0       0
  6124 ;;      Totals:         1       6       0       0       0
  6125 ;;Total ram usage:        7 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    3
  6128 ;; This function calls:
  6129 ;;		_FromMainHigh_recvmsg
  6130 ;;		_ToMainHigh_sendmsg
  6131 ;;		_WriteTimer0
  6132 ;; This function is called by:
  6133 ;;		_InterruptHandlerHigh
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text40
  6138  0015DE                     __ptext40:
  6139                           	opt stack 0
  6140  0015DE                     _timer0_int_handler:
  6141                           	opt stack 16
  6142                           
  6143                           ;user_interrupts.c: 17: unsigned int val;
  6144                           ;user_interrupts.c: 18: int length, msgtype;
  6145                           ;user_interrupts.c: 25: WriteTimer0(0);
  6146                           
  6147                           ;incstack = 0
  6148  0015DE  0E00               	movlw	0
  6149  0015E0  6E30               	movwf	WriteTimer0@timer0+1,c
  6150  0015E2  0E00               	movlw	0
  6151  0015E4  6E2F               	movwf	WriteTimer0@timer0,c
  6152  0015E6  ECBD  F00D         	call	_WriteTimer0	;wreg free
  6153                           
  6154                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6155  0015EA  0100               	movlb	0	; () banked
  6156  0015EC  0E00               	movlw	high timer0_int_handler@msgtype
  6157  0015EE  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6158  0015F0  0100               	movlb	0	; () banked
  6159  0015F2  0EB8               	movlw	low timer0_int_handler@msgtype
  6160  0015F4  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6161  0015F6  0100               	movlb	0	; () banked
  6162  0015F8  0E00               	movlw	high timer0_int_handler@val
  6163  0015FA  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6164  0015FC  0100               	movlb	0	; () banked
  6165  0015FE  0EBA               	movlw	low timer0_int_handler@val
  6166  001600  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6167  001602  0E02               	movlw	2
  6168  001604  ECF3  F00C         	call	_FromMainHigh_recvmsg
  6169  001608  0100               	movlb	0	; () banked
  6170  00160A  0100               	movlb	0	; () banked
  6171  00160C  6FB6               	movwf	timer0_int_handler@length& (0+255),b
  6172  00160E  0100               	movlb	0	; () banked
  6173  001610  6BB7               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6174  001612  0100               	movlb	0	; () banked
  6175  001614  BFB6               	btfsc	timer0_int_handler@length& (0+255),7,b
  6176  001616  07B7               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6180  001618  0100               	movlb	0	; () banked
  6181  00161A  0100               	movlb	0	; () banked
  6182  00161C  51B6               	movf	timer0_int_handler@length& (0+255),w,b
  6183  00161E  0A02               	xorlw	2
  6184  001620  11B7               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6185  001622  A4D8               	btfss	status,2,c
  6186  001624  0012               	return	
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6190  001626  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6191  001628  0E0A               	movlw	10
  6192  00162A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6193  00162C  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6194  00162E  0100               	movlb	0	; () banked
  6195  001630  0E00               	movlw	high timer0_int_handler@val
  6196  001632  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6197  001634  0100               	movlb	0	; () banked
  6198  001636  0EBA               	movlw	low timer0_int_handler@val
  6199  001638  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6200  00163A  0E02               	movlw	2
  6201  00163C  EC2F  F00D         	call	_ToMainHigh_sendmsg
  6202  001640  0012               	return	
  6203  001642                     __end_of_timer0_int_handler:
  6204                           	opt stack 0
  6205                           pclatu	equ	0xFFB
  6206                           pclath	equ	0xFFA
  6207                           tblptru	equ	0xFF8
  6208                           tblptrh	equ	0xFF7
  6209                           tblptrl	equ	0xFF6
  6210                           tablat	equ	0xFF5
  6211                           prodh	equ	0xFF4
  6212                           prodl	equ	0xFF3
  6213                           intcon	equ	0xFF2
  6214                           postinc0	equ	0xFEE
  6215                           fsr0h	equ	0xFEA
  6216                           fsr0l	equ	0xFE9
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           bsr	equ	0xFE0
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function _WriteTimer0 *****************
  6230 ;; Defined at:
  6231 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  timer0          2   46[COMRAM] unsigned int 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  timer           2   48[COMRAM] struct Timers
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		None
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6245 ;;      Params:         2       0       0       0       0
  6246 ;;      Locals:         2       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0
  6248 ;;      Totals:         4       0       0       0       0
  6249 ;;Total ram usage:        4 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_timer0_int_handler
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text41
  6259  001B7A                     __ptext41:
  6260                           	opt stack 0
  6261  001B7A                     _WriteTimer0:
  6262                           	opt stack 18
  6263                           
  6264                           ;incstack = 0
  6265  001B7A  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6266  001B7E  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6267  001B82  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6268  001B86  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6269  001B8A  0012               	return	
  6270  001B8C                     __end_of_WriteTimer0:
  6271                           	opt stack 0
  6272                           pclatu	equ	0xFFB
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           postinc0	equ	0xFEE
  6282                           fsr0h	equ	0xFEA
  6283                           fsr0l	equ	0xFE9
  6284                           wreg	equ	0xFE8
  6285                           indf1	equ	0xFE7
  6286                           fsr1h	equ	0xFE2
  6287                           fsr1l	equ	0xFE1
  6288                           bsr	equ	0xFE0
  6289                           indf2	equ	0xFDF
  6290                           postinc2	equ	0xFDE
  6291                           postdec2	equ	0xFDD
  6292                           fsr2h	equ	0xFDA
  6293                           fsr2l	equ	0xFD9
  6294                           status	equ	0xFD8
  6295                           
  6296 ;; *************** function _FromMainHigh_recvmsg *****************
  6297 ;; Defined at:
  6298 ;;		line 183 in file "src/messages.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  maxlength       1    wreg     unsigned char 
  6301 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6302 ;;		 -> timer0_int_handler@msgtype(2), 
  6303 ;;  data            2   72[COMRAM] PTR void 
  6304 ;;		 -> timer0_int_handler@val(2), 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  maxlength       1   74[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      char 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6316 ;;      Params:         4       0       0       0       0
  6317 ;;      Locals:         1       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0
  6319 ;;      Totals:         5       0       0       0       0
  6320 ;;Total ram usage:        5 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    2
  6323 ;; This function calls:
  6324 ;;		i2_recv_msg
  6325 ;; This function is called by:
  6326 ;;		_timer0_int_handler
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text42
  6331  0019E6                     __ptext42:
  6332                           	opt stack 0
  6333  0019E6                     _FromMainHigh_recvmsg:
  6334                           	opt stack 16
  6335                           
  6336                           ;incstack = 0
  6337                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6338  0019E6  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6339                           
  6340                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6341  0019EA  0101               	movlb	1	; () banked
  6342  0019EC  0E01               	movlw	high _FromMainHigh_MQ
  6343  0019EE  6E3A               	movwf	i2recv_msg@qptr+1,c
  6344  0019F0  0101               	movlb	1	; () banked
  6345  0019F2  0E00               	movlw	low _FromMainHigh_MQ
  6346  0019F4  6E39               	movwf	i2recv_msg@qptr,c
  6347  0019F6  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6348  0019FA  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6349  0019FE  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6350  001A02  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6351  001A06  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6352  001A0A  EC35  F007         	call	i2_recv_msg	;wreg free
  6353  001A0E  0012               	return	
  6354  001A10                     __end_of_FromMainHigh_recvmsg:
  6355                           	opt stack 0
  6356                           pclatu	equ	0xFFB
  6357                           pclath	equ	0xFFA
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           prodh	equ	0xFF4
  6363                           prodl	equ	0xFF3
  6364                           intcon	equ	0xFF2
  6365                           postinc0	equ	0xFEE
  6366                           fsr0h	equ	0xFEA
  6367                           fsr0l	equ	0xFE9
  6368                           wreg	equ	0xFE8
  6369                           indf1	equ	0xFE7
  6370                           fsr1h	equ	0xFE2
  6371                           fsr1l	equ	0xFE1
  6372                           bsr	equ	0xFE0
  6373                           indf2	equ	0xFDF
  6374                           postinc2	equ	0xFDE
  6375                           postdec2	equ	0xFDD
  6376                           fsr2h	equ	0xFDA
  6377                           fsr2l	equ	0xFD9
  6378                           status	equ	0xFD8
  6379                           
  6380 ;; *************** function i2_recv_msg *****************
  6381 ;; Defined at:
  6382 ;;		line 63 in file "src/messages.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6385 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6386 ;;  maxlength       1   58[COMRAM] unsigned char 
  6387 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6388 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6389 ;;  data            2   61[COMRAM] PTR void 
  6390 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6393 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6394 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6395 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6396 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      char 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6406 ;;      Params:         7       0       0       0       0
  6407 ;;      Locals:         5       0       0       0       0
  6408 ;;      Temps:          2       0       0       0       0
  6409 ;;      Totals:        14       0       0       0       0
  6410 ;;Total ram usage:       14 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    1
  6413 ;; This function calls:
  6414 ;;		i2_memcpy
  6415 ;; This function is called by:
  6416 ;;		_FromMainHigh_recvmsg
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text43
  6421  000E6A                     __ptext43:
  6422                           	opt stack 0
  6423  000E6A                     i2_recv_msg:
  6424                           	opt stack 16
  6425                           
  6426                           ;messages.c: 64: unsigned char slot;
  6427                           ;messages.c: 68: msg *qmsg;
  6428                           ;messages.c: 69: size_t tlength;
  6429                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6430                           
  6431                           ;incstack = 0
  6432  000E6A  EE20 F035          	lfsr	2,53
  6433  000E6E  5039               	movf	i2recv_msg@qptr,w,c
  6434  000E70  26D9               	addwf	fsr2l,f,c
  6435  000E72  503A               	movf	i2recv_msg@qptr+1,w,c
  6436  000E74  22DA               	addwfc	fsr2h,f,c
  6437  000E76  50DF               	movf	indf2,w,c
  6438  000E78  6E42               	movwf	i2recv_msg@slot,c
  6439                           
  6440                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6441  000E7A  5042               	movf	i2recv_msg@slot,w,c
  6442  000E7C  0D0D               	mullw	13
  6443  000E7E  50F3               	movf	prodl,w,c
  6444  000E80  2439               	addwf	i2recv_msg@qptr,w,c
  6445  000E82  6E45               	movwf	i2recv_msg@qmsg,c
  6446  000E84  50F4               	movf	prodh,w,c
  6447  000E86  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6448  000E88  6E46               	movwf	i2recv_msg@qmsg+1,c
  6449                           
  6450                           ;messages.c: 74: if (qmsg->full == 1) {
  6451  000E8A  0E01               	movlw	1
  6452  000E8C  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6453  000E90  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6454  000E94  62DF               	cpfseq	indf2,c
  6455  000E96  D050               	goto	i2l3488
  6456                           
  6457                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6458  000E98  EE20 F001          	lfsr	2,1
  6459  000E9C  5045               	movf	i2recv_msg@qmsg,w,c
  6460  000E9E  26D9               	addwf	fsr2l,f,c
  6461  000EA0  5046               	movf	i2recv_msg@qmsg+1,w,c
  6462  000EA2  22DA               	addwfc	fsr2h,f,c
  6463  000EA4  50DF               	movf	indf2,w,c
  6464  000EA6  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6465  000EA8  B0D8               	btfsc	status,0,c
  6466  000EAA  D002               	goto	i2l3472
  6467                           
  6468                           ;messages.c: 77: return (-3);
  6469  000EAC  0EFD               	movlw	253
  6470  000EAE  0012               	return	
  6471  000EB0                     i2l3472:
  6472                           
  6473                           ;messages.c: 78: }
  6474                           ;messages.c: 80: tlength = qmsg->length;
  6475  000EB0  EE20 F001          	lfsr	2,1
  6476  000EB4  5045               	movf	i2recv_msg@qmsg,w,c
  6477  000EB6  26D9               	addwf	fsr2l,f,c
  6478  000EB8  5046               	movf	i2recv_msg@qmsg+1,w,c
  6479  000EBA  22DA               	addwfc	fsr2h,f,c
  6480  000EBC  50DF               	movf	indf2,w,c
  6481  000EBE  6E40               	movwf	??i2_recv_msg& (0+255),c
  6482  000EC0  5040               	movf	??i2_recv_msg,w,c
  6483  000EC2  6E43               	movwf	i2recv_msg@tlength,c
  6484  000EC4  6A44               	clrf	i2recv_msg@tlength+1,c
  6485                           
  6486                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6487  000EC6  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6488  000ECA  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6489  000ECE  0E03               	movlw	3
  6490  000ED0  2445               	addwf	i2recv_msg@qmsg,w,c
  6491  000ED2  6E40               	movwf	??i2_recv_msg& (0+255),c
  6492  000ED4  0E00               	movlw	0
  6493  000ED6  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6494  000ED8  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6495  000EDA  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6496  000EDE  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6497  000EE2  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6498  000EE6  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6499  000EEA  EC1E  F00C         	call	i2_memcpy	;wreg free
  6500                           
  6501                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6502  000EEE  EE20 F035          	lfsr	2,53
  6503  000EF2  5039               	movf	i2recv_msg@qptr,w,c
  6504  000EF4  26D9               	addwf	fsr2l,f,c
  6505  000EF6  503A               	movf	i2recv_msg@qptr+1,w,c
  6506  000EF8  22DA               	addwfc	fsr2h,f,c
  6507  000EFA  EE10 F035          	lfsr	1,53
  6508  000EFE  5039               	movf	i2recv_msg@qptr,w,c
  6509  000F00  26E1               	addwf	fsr1l,f,c
  6510  000F02  503A               	movf	i2recv_msg@qptr+1,w,c
  6511  000F04  22E2               	addwfc	fsr1h,f,c
  6512  000F06  50E7               	movf	indf1,w,c
  6513  000F08  6E40               	movwf	??i2_recv_msg& (0+255),c
  6514  000F0A  2840               	incf	??i2_recv_msg,w,c
  6515  000F0C  0B03               	andlw	3
  6516  000F0E  6EDF               	movwf	indf2,c
  6517                           
  6518                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6519  000F10  EE20 F002          	lfsr	2,2
  6520  000F14  5045               	movf	i2recv_msg@qmsg,w,c
  6521  000F16  26D9               	addwf	fsr2l,f,c
  6522  000F18  5046               	movf	i2recv_msg@qmsg+1,w,c
  6523  000F1A  22DA               	addwfc	fsr2h,f,c
  6524  000F1C  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6525  000F20  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6526  000F24  CFDF FFE7          	movff	indf2,indf1
  6527                           
  6528                           ;messages.c: 91: qmsg->full = 0;
  6529  000F28  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6530  000F2C  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6531  000F30  0E00               	movlw	0
  6532  000F32  6EDF               	movwf	indf2,c
  6533                           
  6534                           ;messages.c: 92: return (tlength);
  6535  000F34  5043               	movf	i2recv_msg@tlength,w,c
  6536  000F36  0012               	return	
  6537  000F38                     i2l3488:
  6538                           
  6539                           ;messages.c: 94: return (-4);
  6540  000F38  0EFC               	movlw	252
  6541  000F3A  0012               	return	
  6542  000F3C                     __end_ofi2_recv_msg:
  6543                           	opt stack 0
  6544                           pclatu	equ	0xFFB
  6545                           pclath	equ	0xFFA
  6546                           tblptru	equ	0xFF8
  6547                           tblptrh	equ	0xFF7
  6548                           tblptrl	equ	0xFF6
  6549                           tablat	equ	0xFF5
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           intcon	equ	0xFF2
  6553                           postinc0	equ	0xFEE
  6554                           fsr0h	equ	0xFEA
  6555                           fsr0l	equ	0xFE9
  6556                           wreg	equ	0xFE8
  6557                           indf1	equ	0xFE7
  6558                           fsr1h	equ	0xFE2
  6559                           fsr1l	equ	0xFE1
  6560                           bsr	equ	0xFE0
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           postdec2	equ	0xFDD
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568 ;; *************** function _i2c_int_handler *****************
  6569 ;; Defined at:
  6570 ;;		line 100 in file "src/my_i2c.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  6575 ;;  data_read       1    8[BANK0 ] unsigned char 
  6576 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  6577 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  6578 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  6579 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  6580 ;;  data_written    1    3[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6590 ;;      Params:         0       0       0       0       0
  6591 ;;      Locals:         0       9       0       0       0
  6592 ;;      Temps:          2       0       0       0       0
  6593 ;;      Totals:         2       9       0       0       0
  6594 ;;Total ram usage:       11 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    3
  6597 ;; This function calls:
  6598 ;;		_ToMainHigh_sendmsg
  6599 ;;		_handle_start
  6600 ;; This function is called by:
  6601 ;;		_InterruptHandlerHigh
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text44
  6606  0000BE                     __ptext44:
  6607                           	opt stack 0
  6608  0000BE                     _i2c_int_handler:
  6609                           	opt stack 16
  6610                           
  6611                           ;my_i2c.c: 101: unsigned char i2c_data;
  6612                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6613                           
  6614                           ;incstack = 0
  6615  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6616  0000C0  0E00               	movlw	0
  6617  0000C2  0100               	movlb	0	; () banked
  6618  0000C4  0100               	movlb	0	; () banked
  6619  0000C6  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6620  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6621                           
  6622                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6623  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6624  0000CC  0E00               	movlw	0
  6625  0000CE  0100               	movlb	0	; () banked
  6626  0000D0  0100               	movlb	0	; () banked
  6627  0000D2  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6628  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6629                           
  6630                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6631  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6632  0000D8  0E00               	movlw	0
  6633  0000DA  0100               	movlb	0	; () banked
  6634  0000DC  0100               	movlb	0	; () banked
  6635  0000DE  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6636  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6637                           
  6638                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6639  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6640  0000E4  0E00               	movlw	0
  6641  0000E6  0100               	movlb	0	; () banked
  6642  0000E8  0100               	movlb	0	; () banked
  6643  0000EA  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6644  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6645                           
  6646                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6647  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6648  0000F0  0E00               	movlw	0
  6649  0000F2  0100               	movlb	0	; () banked
  6650  0000F4  0100               	movlb	0	; () banked
  6651  0000F6  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6652  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6656                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6657  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6658  0000FC  D027               	goto	i2l3064
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6662  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6666  000100  0100               	movlb	0	; () banked
  6667  000102  EE20 F00C          	lfsr	2,12
  6668  000106  0100               	movlb	0	; () banked
  6669  000108  51E5               	movf	_ic_ptr& (0+255),w,b
  6670  00010A  26D9               	addwf	fsr2l,f,c
  6671  00010C  0100               	movlb	0	; () banked
  6672  00010E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6673  000110  22DA               	addwfc	fsr2h,f,c
  6674  000112  0E05               	movlw	5
  6675  000114  6EDF               	movwf	indf2,c
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;my_i2c.c: 116: overrun_error = 1;
  6679  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6680  000118  0E01               	movlw	1
  6681  00011A  0100               	movlb	0	; () banked
  6682  00011C  0100               	movlb	0	; () banked
  6683  00011E  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6684  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6688  000122  0100               	movlb	0	; () banked
  6689  000124  EE20 F00E          	lfsr	2,14
  6690  000128  0100               	movlb	0	; () banked
  6691  00012A  51E5               	movf	_ic_ptr& (0+255),w,b
  6692  00012C  26D9               	addwf	fsr2l,f,c
  6693  00012E  0100               	movlb	0	; () banked
  6694  000130  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6695  000132  22DA               	addwfc	fsr2h,f,c
  6696  000134  2ADF               	incf	indf2,f,c
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6700  000136  0100               	movlb	0	; () banked
  6701  000138  EE20 F00D          	lfsr	2,13
  6702  00013C  0100               	movlb	0	; () banked
  6703  00013E  51E5               	movf	_ic_ptr& (0+255),w,b
  6704  000140  26D9               	addwf	fsr2l,f,c
  6705  000142  0100               	movlb	0	; () banked
  6706  000144  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6707  000146  22DA               	addwfc	fsr2h,f,c
  6708  000148  0E04               	movlw	4
  6709  00014A  6EDF               	movwf	indf2,c
  6710  00014C                     i2l3064:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;my_i2c.c: 119: }
  6714                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6715  00014C  A0C7               	btfss	4039,0,c	;volatile
  6716  00014E  D008               	goto	i2l3070
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6720  000150  CFC9 F0BB          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;my_i2c.c: 123: data_read = 1;
  6724  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6725  000156  0E01               	movlw	1
  6726  000158  0100               	movlb	0	; () banked
  6727  00015A  0100               	movlb	0	; () banked
  6728  00015C  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6729  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6730  000160                     i2l3070:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;my_i2c.c: 124: }
  6734                           ;my_i2c.c: 126: if (!overrun_error) {
  6735  000160  0100               	movlb	0	; () banked
  6736  000162  0100               	movlb	0	; () banked
  6737  000164  67BA               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6738  000166  D1B8               	goto	i2l271
  6739  000168  D1A1               	goto	i2l3158
  6740  00016A                     i2l273:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;my_i2c.c: 129: {
  6744                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6745  00016A  A6C7               	btfss	4039,3,c	;volatile
  6746  00016C  D1B5               	goto	i2l271
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;my_i2c.c: 132: handle_start(data_read);
  6750  00016E  0100               	movlb	0	; () banked
  6751  000170  0100               	movlb	0	; () banked
  6752  000172  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6753  000174  EC9E  F007         	call	_handle_start
  6754                           
  6755                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6756  000178  0100               	movlb	0	; () banked
  6757  00017A  EE20 F00C          	lfsr	2,12
  6758  00017E  0100               	movlb	0	; () banked
  6759  000180  51E5               	movf	_ic_ptr& (0+255),w,b
  6760  000182  26D9               	addwf	fsr2l,f,c
  6761  000184  0100               	movlb	0	; () banked
  6762  000186  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6763  000188  22DA               	addwfc	fsr2h,f,c
  6764  00018A  0E08               	movlw	8
  6765  00018C  62DF               	cpfseq	indf2,c
  6766  00018E  D1A4               	goto	i2l271
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;my_i2c.c: 135: data_read = 0;
  6770  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6771  000192  0E00               	movlw	0
  6772  000194  0100               	movlb	0	; () banked
  6773  000196  0100               	movlb	0	; () banked
  6774  000198  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6775  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6776                           
  6777                           ;my_i2c.c: 136: msg_to_send = 1;
  6778  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6779  00019E  0E01               	movlw	1
  6780  0001A0  0100               	movlb	0	; () banked
  6781  0001A2  0100               	movlb	0	; () banked
  6782  0001A4  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6783  0001A6  D175               	goto	L10
  6784  0001A8                     i2l277:
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;my_i2c.c: 142: {
  6788                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6789  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6790  0001AA  D02E               	goto	i2l3090
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6794  0001AC  0100               	movlb	0	; () banked
  6795  0001AE  EE20 F00B          	lfsr	2,11
  6796  0001B2  0100               	movlb	0	; () banked
  6797  0001B4  51E5               	movf	_ic_ptr& (0+255),w,b
  6798  0001B6  26D9               	addwf	fsr2l,f,c
  6799  0001B8  0100               	movlb	0	; () banked
  6800  0001BA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6801  0001BC  22DA               	addwfc	fsr2h,f,c
  6802  0001BE  2ADF               	incf	indf2,f,c
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;my_i2c.c: 148: if (data_read) {
  6806  0001C0  0100               	movlb	0	; () banked
  6807  0001C2  0100               	movlb	0	; () banked
  6808  0001C4  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6809  0001C6  B4D8               	btfsc	status,2,c
  6810  0001C8  D166               	goto	L12
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6814  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6815  0001CC  D007               	goto	i2l3088
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;my_i2c.c: 150: msg_ready = 1;
  6819  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6820  0001D0  0E01               	movlw	1
  6821  0001D2  0100               	movlb	0	; () banked
  6822  0001D4  0100               	movlb	0	; () banked
  6823  0001D6  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6824  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6825                           
  6826                           ;my_i2c.c: 151: } else {
  6827  0001DA  D15D               	goto	L12
  6828  0001DC                     i2l3088:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6832  0001DC  0100               	movlb	0	; () banked
  6833  0001DE  EE20 F00E          	lfsr	2,14
  6834  0001E2  0100               	movlb	0	; () banked
  6835  0001E4  51E5               	movf	_ic_ptr& (0+255),w,b
  6836  0001E6  26D9               	addwf	fsr2l,f,c
  6837  0001E8  0100               	movlb	0	; () banked
  6838  0001EA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6839  0001EC  22DA               	addwfc	fsr2h,f,c
  6840  0001EE  2ADF               	incf	indf2,f,c
  6841                           
  6842                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6843  0001F0  0100               	movlb	0	; () banked
  6844  0001F2  EE20 F00D          	lfsr	2,13
  6845  0001F6  0100               	movlb	0	; () banked
  6846  0001F8  51E5               	movf	_ic_ptr& (0+255),w,b
  6847  0001FA  26D9               	addwf	fsr2l,f,c
  6848  0001FC  0100               	movlb	0	; () banked
  6849  0001FE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6850  000200  22DA               	addwfc	fsr2h,f,c
  6851  000202  0E06               	movlw	6
  6852  000204  6EDF               	movwf	indf2,c
  6853                           
  6854                           ; BSR set to: 0
  6855  000206  D147               	goto	L12
  6856  000208                     i2l3090:
  6857                           
  6858                           ; BSR set to: 0
  6859  000208  0100               	movlb	0	; () banked
  6860  00020A  0100               	movlb	0	; () banked
  6861  00020C  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6862  00020E  B4D8               	btfsc	status,2,c
  6863  000210  D163               	goto	i2l271
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6867  000212  0100               	movlb	0	; () banked
  6868  000214  EE20 F00B          	lfsr	2,11
  6869  000218  0100               	movlb	0	; () banked
  6870  00021A  51E5               	movf	_ic_ptr& (0+255),w,b
  6871  00021C  26D9               	addwf	fsr2l,f,c
  6872  00021E  0100               	movlb	0	; () banked
  6873  000220  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6874  000222  22DA               	addwfc	fsr2h,f,c
  6875  000224  2ADF               	incf	indf2,f,c
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6879  000226  BAC7               	btfsc	4039,5,c	;volatile
  6880  000228  D019               	goto	i2l3106
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6884  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6885  00022C  D00B               	goto	i2l3100
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6889  00022E  0100               	movlb	0	; () banked
  6890  000230  EE20 F00C          	lfsr	2,12
  6891  000234  0100               	movlb	0	; () banked
  6892  000236  51E5               	movf	_ic_ptr& (0+255),w,b
  6893  000238  26D9               	addwf	fsr2l,f,c
  6894  00023A  0100               	movlb	0	; () banked
  6895  00023C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6896  00023E  22DA               	addwfc	fsr2h,f,c
  6897  000240  0E07               	movlw	7
  6898  000242  D071               	goto	L9
  6899  000244                     i2l3100:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6903  000244  0100               	movlb	0	; () banked
  6904  000246  EE20 F00C          	lfsr	2,12
  6905  00024A  0100               	movlb	0	; () banked
  6906  00024C  51E5               	movf	_ic_ptr& (0+255),w,b
  6907  00024E  26D9               	addwf	fsr2l,f,c
  6908  000250  0100               	movlb	0	; () banked
  6909  000252  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6910  000254  22DA               	addwfc	fsr2h,f,c
  6911  000256  0E08               	movlw	8
  6912  000258  6EDF               	movwf	indf2,c
  6913  00025A  D110               	goto	L13
  6914  00025C                     i2l3106:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6918  00025C  0100               	movlb	0	; () banked
  6919  00025E  EE20 F00E          	lfsr	2,14
  6920  000262  0100               	movlb	0	; () banked
  6921  000264  51E5               	movf	_ic_ptr& (0+255),w,b
  6922  000266  26D9               	addwf	fsr2l,f,c
  6923  000268  0100               	movlb	0	; () banked
  6924  00026A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  00026C  22DA               	addwfc	fsr2h,f,c
  6926  00026E  2ADF               	incf	indf2,f,c
  6927                           
  6928                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6929  000270  0100               	movlb	0	; () banked
  6930  000272  EE20 F00C          	lfsr	2,12
  6931  000276  0100               	movlb	0	; () banked
  6932  000278  51E5               	movf	_ic_ptr& (0+255),w,b
  6933  00027A  26D9               	addwf	fsr2l,f,c
  6934  00027C  0100               	movlb	0	; () banked
  6935  00027E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6936  000280  22DA               	addwfc	fsr2h,f,c
  6937  000282  0E05               	movlw	5
  6938  000284  6EDF               	movwf	indf2,c
  6939                           
  6940                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6941  000286  0100               	movlb	0	; () banked
  6942  000288  EE20 F00D          	lfsr	2,13
  6943  00028C  0100               	movlb	0	; () banked
  6944  00028E  51E5               	movf	_ic_ptr& (0+255),w,b
  6945  000290  26D9               	addwf	fsr2l,f,c
  6946  000292  0100               	movlb	0	; () banked
  6947  000294  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6948  000296  22DA               	addwfc	fsr2h,f,c
  6949  000298  0E06               	movlw	6
  6950  00029A  D045               	goto	L9
  6951  00029C                     i2l3108:
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;my_i2c.c: 177: {
  6955                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6956  00029C  0100               	movlb	0	; () banked
  6957  00029E  EE20 F01A          	lfsr	2,26
  6958  0002A2  0100               	movlb	0	; () banked
  6959  0002A4  51E5               	movf	_ic_ptr& (0+255),w,b
  6960  0002A6  26D9               	addwf	fsr2l,f,c
  6961  0002A8  0100               	movlb	0	; () banked
  6962  0002AA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6963  0002AC  22DA               	addwfc	fsr2h,f,c
  6964  0002AE  50DF               	movf	indf2,w,c
  6965  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6966  0002B2  0100               	movlb	0	; () banked
  6967  0002B4  EE20 F019          	lfsr	2,25
  6968  0002B8  0100               	movlb	0	; () banked
  6969  0002BA  51E5               	movf	_ic_ptr& (0+255),w,b
  6970  0002BC  26D9               	addwf	fsr2l,f,c
  6971  0002BE  0100               	movlb	0	; () banked
  6972  0002C0  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6973  0002C2  22DA               	addwfc	fsr2h,f,c
  6974  0002C4  50DF               	movf	indf2,w,c
  6975  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  6976  0002C8  B0D8               	btfsc	status,0,c
  6977  0002CA  D0E5               	goto	L12
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6981  0002CC  0100               	movlb	0	; () banked
  6982  0002CE  EE20 F01A          	lfsr	2,26
  6983  0002D2  0100               	movlb	0	; () banked
  6984  0002D4  51E5               	movf	_ic_ptr& (0+255),w,b
  6985  0002D6  26D9               	addwf	fsr2l,f,c
  6986  0002D8  0100               	movlb	0	; () banked
  6987  0002DA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6988  0002DC  22DA               	addwfc	fsr2h,f,c
  6989  0002DE  50DF               	movf	indf2,w,c
  6990  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6991  0002E2  5049               	movf	??_i2c_int_handler,w,c
  6992  0002E4  0D01               	mullw	1
  6993  0002E6  0E0F               	movlw	15
  6994  0002E8  26F3               	addwf	prodl,f,c
  6995  0002EA  0E00               	movlw	0
  6996  0002EC  22F4               	addwfc	prodh,f,c
  6997  0002EE  50F3               	movf	prodl,w,c
  6998  0002F0  0100               	movlb	0	; () banked
  6999  0002F2  0100               	movlb	0	; () banked
  7000  0002F4  25E5               	addwf	_ic_ptr& (0+255),w,b
  7001  0002F6  6ED9               	movwf	fsr2l,c
  7002  0002F8  50F4               	movf	prodh,w,c
  7003  0002FA  0100               	movlb	0	; () banked
  7004  0002FC  0100               	movlb	0	; () banked
  7005  0002FE  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7006  000300  6EDA               	movwf	fsr2h,c
  7007  000302  50DF               	movf	indf2,w,c
  7008  000304  6EC9               	movwf	4041,c	;volatile
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7012  000306  0100               	movlb	0	; () banked
  7013  000308  EE20 F01A          	lfsr	2,26
  7014  00030C  0100               	movlb	0	; () banked
  7015  00030E  51E5               	movf	_ic_ptr& (0+255),w,b
  7016  000310  26D9               	addwf	fsr2l,f,c
  7017  000312  0100               	movlb	0	; () banked
  7018  000314  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7019  000316  22DA               	addwfc	fsr2h,f,c
  7020  000318  2ADF               	incf	indf2,f,c
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 181: data_written = 1;
  7024  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7025  00031C  0E01               	movlw	1
  7026  00031E  0100               	movlb	0	; () banked
  7027  000320  0100               	movlb	0	; () banked
  7028  000322  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  7029  000324  D0B6               	goto	L10
  7030  000326                     L9:
  7031  000326  6EDF               	movwf	indf2,c
  7032  000328  D0D7               	goto	i2l271
  7033  00032A                     i2l291:
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;my_i2c.c: 189: {
  7037                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7038  00032A  A8C7               	btfss	4039,4,c	;volatile
  7039  00032C  D05E               	goto	i2l3136
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7043  00032E  0100               	movlb	0	; () banked
  7044  000330  EE20 F00B          	lfsr	2,11
  7045  000334  0100               	movlb	0	; () banked
  7046  000336  51E5               	movf	_ic_ptr& (0+255),w,b
  7047  000338  26D9               	addwf	fsr2l,f,c
  7048  00033A  0100               	movlb	0	; () banked
  7049  00033C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7050  00033E  22DA               	addwfc	fsr2h,f,c
  7051  000340  2ADF               	incf	indf2,f,c
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 194: if (data_read) {
  7055  000342  0100               	movlb	0	; () banked
  7056  000344  0100               	movlb	0	; () banked
  7057  000346  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7058  000348  B4D8               	btfsc	status,2,c
  7059  00034A  D048               	goto	i2l3132
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7063  00034C  AAC7               	btfss	4039,5,c	;volatile
  7064  00034E  D025               	goto	i2l3130
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7068  000350  0100               	movlb	0	; () banked
  7069  000352  EE20 F00A          	lfsr	2,10
  7070  000356  0100               	movlb	0	; () banked
  7071  000358  51E5               	movf	_ic_ptr& (0+255),w,b
  7072  00035A  26D9               	addwf	fsr2l,f,c
  7073  00035C  0100               	movlb	0	; () banked
  7074  00035E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7075  000360  22DA               	addwfc	fsr2h,f,c
  7076  000362  50DF               	movf	indf2,w,c
  7077  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7078  000366  5049               	movf	??_i2c_int_handler,w,c
  7079  000368  0D01               	mullw	1
  7080  00036A  50F3               	movf	prodl,w,c
  7081  00036C  0100               	movlb	0	; () banked
  7082  00036E  0100               	movlb	0	; () banked
  7083  000370  25E5               	addwf	_ic_ptr& (0+255),w,b
  7084  000372  6ED9               	movwf	fsr2l,c
  7085  000374  50F4               	movf	prodh,w,c
  7086  000376  0100               	movlb	0	; () banked
  7087  000378  0100               	movlb	0	; () banked
  7088  00037A  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7089  00037C  6EDA               	movwf	fsr2h,c
  7090  00037E  0100               	movlb	0	; () banked
  7091  000380  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7095  000384  0100               	movlb	0	; () banked
  7096  000386  EE20 F00A          	lfsr	2,10
  7097  00038A  0100               	movlb	0	; () banked
  7098  00038C  51E5               	movf	_ic_ptr& (0+255),w,b
  7099  00038E  26D9               	addwf	fsr2l,f,c
  7100  000390  0100               	movlb	0	; () banked
  7101  000392  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7102  000394  22DA               	addwfc	fsr2h,f,c
  7103  000396  2ADF               	incf	indf2,f,c
  7104  000398  D021               	goto	i2l3132
  7105  00039A                     i2l3130:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7109  00039A  0100               	movlb	0	; () banked
  7110  00039C  EE20 F00E          	lfsr	2,14
  7111  0003A0  0100               	movlb	0	; () banked
  7112  0003A2  51E5               	movf	_ic_ptr& (0+255),w,b
  7113  0003A4  26D9               	addwf	fsr2l,f,c
  7114  0003A6  0100               	movlb	0	; () banked
  7115  0003A8  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7116  0003AA  22DA               	addwfc	fsr2h,f,c
  7117  0003AC  2ADF               	incf	indf2,f,c
  7118                           
  7119                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7120  0003AE  0100               	movlb	0	; () banked
  7121  0003B0  EE20 F00D          	lfsr	2,13
  7122  0003B4  0100               	movlb	0	; () banked
  7123  0003B6  51E5               	movf	_ic_ptr& (0+255),w,b
  7124  0003B8  26D9               	addwf	fsr2l,f,c
  7125  0003BA  0100               	movlb	0	; () banked
  7126  0003BC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7127  0003BE  22DA               	addwfc	fsr2h,f,c
  7128  0003C0  0E06               	movlw	6
  7129  0003C2  6EDF               	movwf	indf2,c
  7130                           
  7131                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7132  0003C4  0100               	movlb	0	; () banked
  7133  0003C6  EE20 F00C          	lfsr	2,12
  7134  0003CA  0100               	movlb	0	; () banked
  7135  0003CC  51E5               	movf	_ic_ptr& (0+255),w,b
  7136  0003CE  26D9               	addwf	fsr2l,f,c
  7137  0003D0  0100               	movlb	0	; () banked
  7138  0003D2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7139  0003D4  22DA               	addwfc	fsr2h,f,c
  7140  0003D6  0E05               	movlw	5
  7141  0003D8  6EDF               	movwf	indf2,c
  7142  0003DA  D05D               	goto	L12
  7143  0003DC                     i2l3132:
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;my_i2c.c: 205: msg_ready = 1;
  7147  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7148  0003DE  0E01               	movlw	1
  7149  0003E0  0100               	movlb	0	; () banked
  7150  0003E2  0100               	movlb	0	; () banked
  7151  0003E4  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7152  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7153                           
  7154                           ; BSR set to: 0
  7155  0003E8  D056               	goto	L12
  7156  0003EA                     i2l3136:
  7157                           
  7158                           ; BSR set to: 0
  7159  0003EA  0100               	movlb	0	; () banked
  7160  0003EC  0100               	movlb	0	; () banked
  7161  0003EE  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7162  0003F0  B4D8               	btfsc	status,2,c
  7163  0003F2  D072               	goto	i2l271
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7167  0003F4  0100               	movlb	0	; () banked
  7168  0003F6  EE20 F00B          	lfsr	2,11
  7169  0003FA  0100               	movlb	0	; () banked
  7170  0003FC  51E5               	movf	_ic_ptr& (0+255),w,b
  7171  0003FE  26D9               	addwf	fsr2l,f,c
  7172  000400  0100               	movlb	0	; () banked
  7173  000402  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7174  000404  22DA               	addwfc	fsr2h,f,c
  7175  000406  2ADF               	incf	indf2,f,c
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7179  000408  AAC7               	btfss	4039,5,c	;volatile
  7180  00040A  D025               	goto	i2l299
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7184  00040C  0100               	movlb	0	; () banked
  7185  00040E  EE20 F00A          	lfsr	2,10
  7186  000412  0100               	movlb	0	; () banked
  7187  000414  51E5               	movf	_ic_ptr& (0+255),w,b
  7188  000416  26D9               	addwf	fsr2l,f,c
  7189  000418  0100               	movlb	0	; () banked
  7190  00041A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7191  00041C  22DA               	addwfc	fsr2h,f,c
  7192  00041E  50DF               	movf	indf2,w,c
  7193  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7194  000422  5049               	movf	??_i2c_int_handler,w,c
  7195  000424  0D01               	mullw	1
  7196  000426  50F3               	movf	prodl,w,c
  7197  000428  0100               	movlb	0	; () banked
  7198  00042A  0100               	movlb	0	; () banked
  7199  00042C  25E5               	addwf	_ic_ptr& (0+255),w,b
  7200  00042E  6ED9               	movwf	fsr2l,c
  7201  000430  50F4               	movf	prodh,w,c
  7202  000432  0100               	movlb	0	; () banked
  7203  000434  0100               	movlb	0	; () banked
  7204  000436  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7205  000438  6EDA               	movwf	fsr2h,c
  7206  00043A  0100               	movlb	0	; () banked
  7207  00043C  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7211  000440  0100               	movlb	0	; () banked
  7212  000442  EE20 F00A          	lfsr	2,10
  7213  000446  0100               	movlb	0	; () banked
  7214  000448  51E5               	movf	_ic_ptr& (0+255),w,b
  7215  00044A  26D9               	addwf	fsr2l,f,c
  7216  00044C  0100               	movlb	0	; () banked
  7217  00044E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7218  000450  22DA               	addwfc	fsr2h,f,c
  7219  000452  2ADF               	incf	indf2,f,c
  7220                           
  7221                           ;my_i2c.c: 213: } else {
  7222  000454  D041               	goto	i2l271
  7223  000456                     i2l299:
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7227  000456  A4C7               	btfss	4039,2,c	;volatile
  7228  000458  D6C1               	goto	i2l3088
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7232  00045A  0100               	movlb	0	; () banked
  7233  00045C  EE20 F00C          	lfsr	2,12
  7234  000460  0100               	movlb	0	; () banked
  7235  000462  51E5               	movf	_ic_ptr& (0+255),w,b
  7236  000464  26D9               	addwf	fsr2l,f,c
  7237  000466  0100               	movlb	0	; () banked
  7238  000468  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7239  00046A  22DA               	addwfc	fsr2h,f,c
  7240  00046C  0E08               	movlw	8
  7241  00046E  6EDF               	movwf	indf2,c
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;my_i2c.c: 216: msg_ready = 1;
  7245  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7246  000472  0E01               	movlw	1
  7247  000474  0100               	movlb	0	; () banked
  7248  000476  0100               	movlb	0	; () banked
  7249  000478  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7250  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7251  00047C                     L13:
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;my_i2c.c: 217: msg_to_send = 1;
  7255  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7256  00047E  0E01               	movlw	1
  7257  000480  0100               	movlb	0	; () banked
  7258  000482  0100               	movlb	0	; () banked
  7259  000484  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7260  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;my_i2c.c: 219: data_read = 0;
  7264  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7265  00048A  0E00               	movlw	0
  7266  00048C  0100               	movlb	0	; () banked
  7267  00048E  0100               	movlb	0	; () banked
  7268  000490  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  7269  000492                     L10:
  7270  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7271                           
  7272                           ;my_i2c.c: 220: } else {
  7273  000494  D021               	goto	i2l271
  7274  000496                     L12:
  7275                           
  7276                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7277  000496  0100               	movlb	0	; () banked
  7278  000498  EE20 F00C          	lfsr	2,12
  7279  00049C  0100               	movlb	0	; () banked
  7280  00049E  51E5               	movf	_ic_ptr& (0+255),w,b
  7281  0004A0  26D9               	addwf	fsr2l,f,c
  7282  0004A2  0100               	movlb	0	; () banked
  7283  0004A4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7284  0004A6  22DA               	addwfc	fsr2h,f,c
  7285  0004A8  0E05               	movlw	5
  7286  0004AA  D73D               	goto	L9
  7287  0004AC                     i2l3158:
  7288                           
  7289                           ; BSR set to: 0
  7290  0004AC  0100               	movlb	0	; () banked
  7291  0004AE  EE20 F00C          	lfsr	2,12
  7292  0004B2  0100               	movlb	0	; () banked
  7293  0004B4  51E5               	movf	_ic_ptr& (0+255),w,b
  7294  0004B6  26D9               	addwf	fsr2l,f,c
  7295  0004B8  0100               	movlb	0	; () banked
  7296  0004BA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7297  0004BC  22DA               	addwfc	fsr2h,f,c
  7298  0004BE  50DF               	movf	indf2,w,c
  7299                           
  7300                           ; Switch size 1, requested type "space"
  7301                           ; Number of cases is 4, Range of values is 5 to 8
  7302                           ; switch strategies available:
  7303                           ; Name         Instructions Cycles
  7304                           ; simple_byte           13     7 (average)
  7305                           ;	Chosen strategy is simple_byte
  7306  0004C0  0A05               	xorlw	5	; case 5
  7307  0004C2  B4D8               	btfsc	status,2,c
  7308  0004C4  D652               	goto	i2l273
  7309  0004C6  0A03               	xorlw	3	; case 6
  7310  0004C8  B4D8               	btfsc	status,2,c
  7311  0004CA  D66E               	goto	i2l277
  7312  0004CC  0A01               	xorlw	1	; case 7
  7313  0004CE  B4D8               	btfsc	status,2,c
  7314  0004D0  D72C               	goto	i2l291
  7315  0004D2  0A0F               	xorlw	15	; case 8
  7316  0004D4  B4D8               	btfsc	status,2,c
  7317  0004D6  D6E2               	goto	i2l3108
  7318  0004D8                     i2l271:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;my_i2c.c: 230: }
  7322                           ;my_i2c.c: 233: if (data_read || data_written) {
  7323  0004D8  0100               	movlb	0	; () banked
  7324  0004DA  0100               	movlb	0	; () banked
  7325  0004DC  67BE               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7326  0004DE  D005               	goto	i2l305
  7327                           
  7328                           ; BSR set to: 0
  7329  0004E0  0100               	movlb	0	; () banked
  7330  0004E2  0100               	movlb	0	; () banked
  7331  0004E4  51B9               	movf	i2c_int_handler@data_written& (0+255),w,b
  7332  0004E6  B4D8               	btfsc	status,2,c
  7333  0004E8  D002               	goto	i2l3164
  7334  0004EA                     i2l305:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7338  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7342  0004EC  88C6               	bsf	4038,4,c	;volatile
  7343  0004EE                     i2l3164:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;my_i2c.c: 237: }
  7347                           ;my_i2c.c: 238: }
  7348                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7349  0004EE  0100               	movlb	0	; () banked
  7350  0004F0  EE20 F00A          	lfsr	2,10
  7351  0004F4  0100               	movlb	0	; () banked
  7352  0004F6  51E5               	movf	_ic_ptr& (0+255),w,b
  7353  0004F8  26D9               	addwf	fsr2l,f,c
  7354  0004FA  0100               	movlb	0	; () banked
  7355  0004FC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7356  0004FE  22DA               	addwfc	fsr2h,f,c
  7357  000500  0E08               	movlw	8
  7358  000502  64DF               	cpfsgt	indf2,c
  7359  000504  D024               	goto	i2l3170
  7360                           
  7361                           ; BSR set to: 0
  7362  000506  0100               	movlb	0	; () banked
  7363  000508  0100               	movlb	0	; () banked
  7364  00050A  67BD               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7365  00050C  D020               	goto	i2l3170
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7369  00050E  0100               	movlb	0	; () banked
  7370  000510  EE20 F00C          	lfsr	2,12
  7371  000514  0100               	movlb	0	; () banked
  7372  000516  51E5               	movf	_ic_ptr& (0+255),w,b
  7373  000518  26D9               	addwf	fsr2l,f,c
  7374  00051A  0100               	movlb	0	; () banked
  7375  00051C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7376  00051E  22DA               	addwfc	fsr2h,f,c
  7377  000520  0E05               	movlw	5
  7378  000522  6EDF               	movwf	indf2,c
  7379                           
  7380                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7381  000524  0100               	movlb	0	; () banked
  7382  000526  EE20 F00E          	lfsr	2,14
  7383  00052A  0100               	movlb	0	; () banked
  7384  00052C  51E5               	movf	_ic_ptr& (0+255),w,b
  7385  00052E  26D9               	addwf	fsr2l,f,c
  7386  000530  0100               	movlb	0	; () banked
  7387  000532  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7388  000534  22DA               	addwfc	fsr2h,f,c
  7389  000536  2ADF               	incf	indf2,f,c
  7390                           
  7391                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7392  000538  0100               	movlb	0	; () banked
  7393  00053A  EE20 F00D          	lfsr	2,13
  7394  00053E  0100               	movlb	0	; () banked
  7395  000540  51E5               	movf	_ic_ptr& (0+255),w,b
  7396  000542  26D9               	addwf	fsr2l,f,c
  7397  000544  0100               	movlb	0	; () banked
  7398  000546  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7399  000548  22DA               	addwfc	fsr2h,f,c
  7400  00054A  0E07               	movlw	7
  7401  00054C  6EDF               	movwf	indf2,c
  7402  00054E                     i2l3170:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;my_i2c.c: 245: }
  7406                           ;my_i2c.c: 247: if (msg_ready) {
  7407  00054E  0100               	movlb	0	; () banked
  7408  000550  0100               	movlb	0	; () banked
  7409  000552  51BD               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7410  000554  B4D8               	btfsc	status,2,c
  7411  000556  D03E               	goto	i2l3178
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7415  000558  0100               	movlb	0	; () banked
  7416  00055A  EE20 F00B          	lfsr	2,11
  7417  00055E  0100               	movlb	0	; () banked
  7418  000560  51E5               	movf	_ic_ptr& (0+255),w,b
  7419  000562  26D9               	addwf	fsr2l,f,c
  7420  000564  0100               	movlb	0	; () banked
  7421  000566  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7422  000568  22DA               	addwfc	fsr2h,f,c
  7423  00056A  0100               	movlb	0	; () banked
  7424  00056C  EE10 F00A          	lfsr	1,10
  7425  000570  0100               	movlb	0	; () banked
  7426  000572  51E5               	movf	_ic_ptr& (0+255),w,b
  7427  000574  26E1               	addwf	fsr1l,f,c
  7428  000576  0100               	movlb	0	; () banked
  7429  000578  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7430  00057A  22E2               	addwfc	fsr1h,f,c
  7431  00057C  50E7               	movf	indf1,w,c
  7432  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7433  000580  5049               	movf	??_i2c_int_handler,w,c
  7434  000582  0D01               	mullw	1
  7435  000584  50F3               	movf	prodl,w,c
  7436  000586  0100               	movlb	0	; () banked
  7437  000588  0100               	movlb	0	; () banked
  7438  00058A  25E5               	addwf	_ic_ptr& (0+255),w,b
  7439  00058C  6EE1               	movwf	fsr1l,c
  7440  00058E  50F4               	movf	prodh,w,c
  7441  000590  0100               	movlb	0	; () banked
  7442  000592  0100               	movlb	0	; () banked
  7443  000594  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7444  000596  6EE2               	movwf	fsr1h,c
  7445  000598  CFDF FFE7          	movff	indf2,indf1
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7449  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7450  00059E  0E28               	movlw	40
  7451  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7452  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7453  0005A4  0100               	movlb	0	; () banked
  7454  0005A6  C0E6  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7455  0005AA  0100               	movlb	0	; () banked
  7456  0005AC  C0E5  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7457  0005B0  0100               	movlb	0	; () banked
  7458  0005B2  EE20 F00A          	lfsr	2,10
  7459  0005B6  0100               	movlb	0	; () banked
  7460  0005B8  51E5               	movf	_ic_ptr& (0+255),w,b
  7461  0005BA  26D9               	addwf	fsr2l,f,c
  7462  0005BC  0100               	movlb	0	; () banked
  7463  0005BE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7464  0005C0  22DA               	addwfc	fsr2h,f,c
  7465  0005C2  50DF               	movf	indf2,w,c
  7466  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7467  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7468  0005C8  EC2F  F00D         	call	_ToMainHigh_sendmsg
  7469                           
  7470                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7471  0005CC  0100               	movlb	0	; () banked
  7472  0005CE  EE20 F00A          	lfsr	2,10
  7473  0005D2  D043               	goto	L11
  7474  0005D4                     i2l3178:
  7475                           
  7476                           ; BSR set to: 0
  7477  0005D4  0100               	movlb	0	; () banked
  7478  0005D6  EE20 F00E          	lfsr	2,14
  7479  0005DA  0100               	movlb	0	; () banked
  7480  0005DC  51E5               	movf	_ic_ptr& (0+255),w,b
  7481  0005DE  26D9               	addwf	fsr2l,f,c
  7482  0005E0  0100               	movlb	0	; () banked
  7483  0005E2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7484  0005E4  22DA               	addwfc	fsr2h,f,c
  7485  0005E6  50DF               	movf	indf2,w,c
  7486  0005E8  B4D8               	btfsc	status,2,c
  7487  0005EA  D03F               	goto	i2l3186
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7491  0005EC  0100               	movlb	0	; () banked
  7492  0005EE  EE20 F00E          	lfsr	2,14
  7493  0005F2  0100               	movlb	0	; () banked
  7494  0005F4  51E5               	movf	_ic_ptr& (0+255),w,b
  7495  0005F6  26D9               	addwf	fsr2l,f,c
  7496  0005F8  0100               	movlb	0	; () banked
  7497  0005FA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7498  0005FC  22DA               	addwfc	fsr2h,f,c
  7499  0005FE  50DF               	movf	indf2,w,c
  7500  000600  0100               	movlb	0	; () banked
  7501  000602  0100               	movlb	0	; () banked
  7502  000604  6FB6               	movwf	i2c_int_handler@error_buf& (0+255),b
  7503                           
  7504                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7505  000606  0100               	movlb	0	; () banked
  7506  000608  EE20 F00D          	lfsr	2,13
  7507  00060C  0100               	movlb	0	; () banked
  7508  00060E  51E5               	movf	_ic_ptr& (0+255),w,b
  7509  000610  26D9               	addwf	fsr2l,f,c
  7510  000612  0100               	movlb	0	; () banked
  7511  000614  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7512  000616  22DA               	addwfc	fsr2h,f,c
  7513  000618  50DF               	movf	indf2,w,c
  7514  00061A  0100               	movlb	0	; () banked
  7515  00061C  0100               	movlb	0	; () banked
  7516  00061E  6FB7               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7517                           
  7518                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7519  000620  0100               	movlb	0	; () banked
  7520  000622  EE20 F00B          	lfsr	2,11
  7521  000626  0100               	movlb	0	; () banked
  7522  000628  51E5               	movf	_ic_ptr& (0+255),w,b
  7523  00062A  26D9               	addwf	fsr2l,f,c
  7524  00062C  0100               	movlb	0	; () banked
  7525  00062E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7526  000630  22DA               	addwfc	fsr2h,f,c
  7527  000632  50DF               	movf	indf2,w,c
  7528  000634  0100               	movlb	0	; () banked
  7529  000636  0100               	movlb	0	; () banked
  7530  000638  6FB8               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7534  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7535  00063C  0E29               	movlw	41
  7536  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7537  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7538  000642  0100               	movlb	0	; () banked
  7539  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7540  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7541  000648  0100               	movlb	0	; () banked
  7542  00064A  0EB6               	movlw	low i2c_int_handler@error_buf
  7543  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7544  00064E  0E03               	movlw	3
  7545  000650  EC2F  F00D         	call	_ToMainHigh_sendmsg
  7546                           
  7547                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7548  000654  0100               	movlb	0	; () banked
  7549  000656  EE20 F00E          	lfsr	2,14
  7550  00065A                     L11:
  7551  00065A  0100               	movlb	0	; () banked
  7552  00065C  51E5               	movf	_ic_ptr& (0+255),w,b
  7553  00065E  26D9               	addwf	fsr2l,f,c
  7554  000660  0100               	movlb	0	; () banked
  7555  000662  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7556  000664  22DA               	addwfc	fsr2h,f,c
  7557  000666  0E00               	movlw	0
  7558  000668  6EDF               	movwf	indf2,c
  7559  00066A                     i2l3186:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;my_i2c.c: 257: }
  7563                           ;my_i2c.c: 258: if (msg_to_send) {
  7564  00066A  0100               	movlb	0	; () banked
  7565  00066C  0100               	movlb	0	; () banked
  7566  00066E  51BC               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7567  000670  B4D8               	btfsc	status,2,c
  7568  000672  0012               	return	
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7572  000674  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7573  000676  0E2A               	movlw	42
  7574  000678  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7575  00067A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7576  00067C  0100               	movlb	0	; () banked
  7577  00067E  C0E6  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7578  000682  0100               	movlb	0	; () banked
  7579  000684  C0E5  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7580  000688  0E00               	movlw	0
  7581  00068A  EC2F  F00D         	call	_ToMainHigh_sendmsg
  7582                           
  7583                           ;my_i2c.c: 261: msg_to_send = 0;
  7584  00068E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7585  000690  0E00               	movlw	0
  7586  000692  0100               	movlb	0	; () banked
  7587  000694  0100               	movlb	0	; () banked
  7588  000696  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7589  000698  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7590  00069A  0012               	return	
  7591  00069C                     __end_of_i2c_int_handler:
  7592                           	opt stack 0
  7593                           pclatu	equ	0xFFB
  7594                           pclath	equ	0xFFA
  7595                           tblptru	equ	0xFF8
  7596                           tblptrh	equ	0xFF7
  7597                           tblptrl	equ	0xFF6
  7598                           tablat	equ	0xFF5
  7599                           prodh	equ	0xFF4
  7600                           prodl	equ	0xFF3
  7601                           intcon	equ	0xFF2
  7602                           postinc0	equ	0xFEE
  7603                           fsr0h	equ	0xFEA
  7604                           fsr0l	equ	0xFE9
  7605                           wreg	equ	0xFE8
  7606                           indf1	equ	0xFE7
  7607                           fsr1h	equ	0xFE2
  7608                           fsr1l	equ	0xFE1
  7609                           bsr	equ	0xFE0
  7610                           indf2	equ	0xFDF
  7611                           postinc2	equ	0xFDE
  7612                           postdec2	equ	0xFDD
  7613                           fsr2h	equ	0xFDA
  7614                           fsr2l	equ	0xFD9
  7615                           status	equ	0xFD8
  7616                           
  7617 ;; *************** function _handle_start *****************
  7618 ;; Defined at:
  7619 ;;		line 71 in file "src/my_i2c.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;  data_read       1    wreg     unsigned char 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  data_read       1   46[COMRAM] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;		None               void
  7626 ;; Registers used:
  7627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7633 ;;      Params:         0       0       0       0       0
  7634 ;;      Locals:         1       0       0       0       0
  7635 ;;      Temps:          0       0       0       0       0
  7636 ;;      Totals:         1       0       0       0       0
  7637 ;;Total ram usage:        1 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_i2c_int_handler
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text45
  7647  000F3C                     __ptext45:
  7648                           	opt stack 0
  7649  000F3C                     _handle_start:
  7650                           	opt stack 18
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;incstack = 0
  7654                           ;handle_start@data_read stored from wreg
  7655  000F3C  CFE8 F02F          	movff	wreg,handle_start@data_read
  7656                           
  7657                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7658  000F40  0100               	movlb	0	; () banked
  7659  000F42  EE20 F00B          	lfsr	2,11
  7660  000F46  0100               	movlb	0	; () banked
  7661  000F48  51E5               	movf	_ic_ptr& (0+255),w,b
  7662  000F4A  26D9               	addwf	fsr2l,f,c
  7663  000F4C  0100               	movlb	0	; () banked
  7664  000F4E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7665  000F50  22DA               	addwfc	fsr2h,f,c
  7666  000F52  0E01               	movlw	1
  7667  000F54  6EDF               	movwf	indf2,c
  7668                           
  7669                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7670  000F56  0100               	movlb	0	; () banked
  7671  000F58  EE20 F00A          	lfsr	2,10
  7672  000F5C  0100               	movlb	0	; () banked
  7673  000F5E  51E5               	movf	_ic_ptr& (0+255),w,b
  7674  000F60  26D9               	addwf	fsr2l,f,c
  7675  000F62  0100               	movlb	0	; () banked
  7676  000F64  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7677  000F66  22DA               	addwfc	fsr2h,f,c
  7678  000F68  0E00               	movlw	0
  7679  000F6A  6EDF               	movwf	indf2,c
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;my_i2c.c: 75: if (data_read) {
  7683  000F6C  502F               	movf	handle_start@data_read,w,c
  7684  000F6E  B4D8               	btfsc	status,2,c
  7685  000F70  D03D               	goto	i2l2794
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7689  000F72  AAC7               	btfss	4039,5,c	;volatile
  7690  000F74  D021               	goto	i2l261
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7694  000F76  0100               	movlb	0	; () banked
  7695  000F78  EE20 F00C          	lfsr	2,12
  7696  000F7C  0100               	movlb	0	; () banked
  7697  000F7E  51E5               	movf	_ic_ptr& (0+255),w,b
  7698  000F80  26D9               	addwf	fsr2l,f,c
  7699  000F82  0100               	movlb	0	; () banked
  7700  000F84  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7701  000F86  22DA               	addwfc	fsr2h,f,c
  7702  000F88  0E05               	movlw	5
  7703  000F8A  6EDF               	movwf	indf2,c
  7704                           
  7705                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7706  000F8C  0100               	movlb	0	; () banked
  7707  000F8E  EE20 F00E          	lfsr	2,14
  7708  000F92  0100               	movlb	0	; () banked
  7709  000F94  51E5               	movf	_ic_ptr& (0+255),w,b
  7710  000F96  26D9               	addwf	fsr2l,f,c
  7711  000F98  0100               	movlb	0	; () banked
  7712  000F9A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7713  000F9C  22DA               	addwfc	fsr2h,f,c
  7714  000F9E  2ADF               	incf	indf2,f,c
  7715                           
  7716                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7717  000FA0  0100               	movlb	0	; () banked
  7718  000FA2  EE20 F00D          	lfsr	2,13
  7719  000FA6  0100               	movlb	0	; () banked
  7720  000FA8  51E5               	movf	_ic_ptr& (0+255),w,b
  7721  000FAA  26D9               	addwf	fsr2l,f,c
  7722  000FAC  0100               	movlb	0	; () banked
  7723  000FAE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7724  000FB0  22DA               	addwfc	fsr2h,f,c
  7725  000FB2  0E05               	movlw	5
  7726  000FB4  6EDF               	movwf	indf2,c
  7727                           
  7728                           ;my_i2c.c: 82: } else {
  7729  000FB6  0012               	return	
  7730  000FB8                     i2l261:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7734  000FB8  A4C7               	btfss	4039,2,c	;volatile
  7735  000FBA  D00C               	goto	i2l2792
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7739  000FBC  0100               	movlb	0	; () banked
  7740  000FBE  EE20 F00C          	lfsr	2,12
  7741  000FC2  0100               	movlb	0	; () banked
  7742  000FC4  51E5               	movf	_ic_ptr& (0+255),w,b
  7743  000FC6  26D9               	addwf	fsr2l,f,c
  7744  000FC8  0100               	movlb	0	; () banked
  7745  000FCA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  000FCC  22DA               	addwfc	fsr2h,f,c
  7747  000FCE  0E08               	movlw	8
  7748  000FD0  6EDF               	movwf	indf2,c
  7749                           
  7750                           ;my_i2c.c: 85: } else {
  7751  000FD2  0012               	return	
  7752  000FD4                     i2l2792:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7756  000FD4  0100               	movlb	0	; () banked
  7757  000FD6  EE20 F00C          	lfsr	2,12
  7758  000FDA  0100               	movlb	0	; () banked
  7759  000FDC  51E5               	movf	_ic_ptr& (0+255),w,b
  7760  000FDE  26D9               	addwf	fsr2l,f,c
  7761  000FE0  0100               	movlb	0	; () banked
  7762  000FE2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7763  000FE4  22DA               	addwfc	fsr2h,f,c
  7764  000FE6  0E07               	movlw	7
  7765  000FE8  6EDF               	movwf	indf2,c
  7766  000FEA  0012               	return	
  7767  000FEC                     i2l2794:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7771  000FEC  0100               	movlb	0	; () banked
  7772  000FEE  EE20 F00C          	lfsr	2,12
  7773  000FF2  0100               	movlb	0	; () banked
  7774  000FF4  51E5               	movf	_ic_ptr& (0+255),w,b
  7775  000FF6  26D9               	addwf	fsr2l,f,c
  7776  000FF8  0100               	movlb	0	; () banked
  7777  000FFA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  000FFC  22DA               	addwfc	fsr2h,f,c
  7779  000FFE  0E06               	movlw	6
  7780  001000  6EDF               	movwf	indf2,c
  7781  001002  0012               	return	
  7782  001004                     __end_of_handle_start:
  7783                           	opt stack 0
  7784                           pclatu	equ	0xFFB
  7785                           pclath	equ	0xFFA
  7786                           tblptru	equ	0xFF8
  7787                           tblptrh	equ	0xFF7
  7788                           tblptrl	equ	0xFF6
  7789                           tablat	equ	0xFF5
  7790                           prodh	equ	0xFF4
  7791                           prodl	equ	0xFF3
  7792                           intcon	equ	0xFF2
  7793                           postinc0	equ	0xFEE
  7794                           fsr0h	equ	0xFEA
  7795                           fsr0l	equ	0xFE9
  7796                           wreg	equ	0xFE8
  7797                           indf1	equ	0xFE7
  7798                           fsr1h	equ	0xFE2
  7799                           fsr1l	equ	0xFE1
  7800                           bsr	equ	0xFE0
  7801                           indf2	equ	0xFDF
  7802                           postinc2	equ	0xFDE
  7803                           postdec2	equ	0xFDD
  7804                           fsr2h	equ	0xFDA
  7805                           fsr2l	equ	0xFD9
  7806                           status	equ	0xFD8
  7807                           
  7808 ;; *************** function _ToMainHigh_sendmsg *****************
  7809 ;; Defined at:
  7810 ;;		line 126 in file "src/messages.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  length          1    wreg     unsigned char 
  7813 ;;  msgtype         1   68[COMRAM] unsigned char 
  7814 ;;  data            2   69[COMRAM] PTR void 
  7815 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  length          1   71[COMRAM] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      char 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7827 ;;      Params:         3       0       0       0       0
  7828 ;;      Locals:         1       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0
  7830 ;;      Totals:         4       0       0       0       0
  7831 ;;Total ram usage:        4 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    2
  7834 ;; This function calls:
  7835 ;;		i2_send_msg
  7836 ;; This function is called by:
  7837 ;;		_i2c_int_handler
  7838 ;;		_timer0_int_handler
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text46
  7843  001A5E                     __ptext46:
  7844                           	opt stack 0
  7845  001A5E                     _ToMainHigh_sendmsg:
  7846                           	opt stack 16
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;incstack = 0
  7850                           ;ToMainHigh_sendmsg@length stored from wreg
  7851  001A5E  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  7852                           
  7853                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7854                           ;	Return value of _ToMainHigh_sendmsg is never used
  7855  001A62  0101               	movlb	1	; () banked
  7856  001A64  0E01               	movlw	high _ToMainHigh_MQ
  7857  001A66  6E3A               	movwf	i2send_msg@qptr+1,c
  7858  001A68  0101               	movlb	1	; () banked
  7859  001A6A  0E6C               	movlw	low _ToMainHigh_MQ
  7860  001A6C  6E39               	movwf	i2send_msg@qptr,c
  7861  001A6E  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7862  001A72  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7863  001A76  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7864  001A7A  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7865  001A7E  EC57  F008         	call	i2_send_msg	;wreg free
  7866  001A82  0012               	return	
  7867  001A84                     __end_of_ToMainHigh_sendmsg:
  7868                           	opt stack 0
  7869                           pclatu	equ	0xFFB
  7870                           pclath	equ	0xFFA
  7871                           tblptru	equ	0xFF8
  7872                           tblptrh	equ	0xFF7
  7873                           tblptrl	equ	0xFF6
  7874                           tablat	equ	0xFF5
  7875                           prodh	equ	0xFF4
  7876                           prodl	equ	0xFF3
  7877                           intcon	equ	0xFF2
  7878                           postinc0	equ	0xFEE
  7879                           fsr0h	equ	0xFEA
  7880                           fsr0l	equ	0xFE9
  7881                           wreg	equ	0xFE8
  7882                           indf1	equ	0xFE7
  7883                           fsr1h	equ	0xFE2
  7884                           fsr1l	equ	0xFE1
  7885                           bsr	equ	0xFE0
  7886                           indf2	equ	0xFDF
  7887                           postinc2	equ	0xFDE
  7888                           postdec2	equ	0xFDD
  7889                           fsr2h	equ	0xFDA
  7890                           fsr2l	equ	0xFD9
  7891                           status	equ	0xFD8
  7892                           
  7893 ;; *************** function i2_send_msg *****************
  7894 ;; Defined at:
  7895 ;;		line 24 in file "src/messages.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7898 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7899 ;;  length          1   58[COMRAM] unsigned char 
  7900 ;;  msgtype         1   59[COMRAM] unsigned char 
  7901 ;;  data            2   60[COMRAM] PTR void 
  7902 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  7903 ;;		 -> main@ic(28), main@uc(5), 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  7906 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7907 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7908 ;;  send_msg        2   63[COMRAM] unsigned int 
  7909 ;;  send_msg        1   65[COMRAM] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      char 
  7912 ;; Registers used:
  7913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7919 ;;      Params:         6       0       0       0       0
  7920 ;;      Locals:         5       0       0       0       0
  7921 ;;      Temps:          1       0       0       0       0
  7922 ;;      Totals:        12       0       0       0       0
  7923 ;;Total ram usage:       12 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    1
  7926 ;; This function calls:
  7927 ;;		i2_memcpy
  7928 ;; This function is called by:
  7929 ;;		_ToMainHigh_sendmsg
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text47
  7934  0010AE                     __ptext47:
  7935                           	opt stack 0
  7936  0010AE                     i2_send_msg:
  7937                           	opt stack 16
  7938                           
  7939                           ;messages.c: 25: unsigned char slot;
  7940                           ;messages.c: 27: msg *qmsg;
  7941                           ;messages.c: 28: size_t tlength = length;
  7942                           
  7943                           ;incstack = 0
  7944  0010AE  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  7945  0010B2  6A41               	clrf	i2send_msg@tlength+1,c
  7946                           
  7947                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7948  0010B4  EE20 F034          	lfsr	2,52
  7949  0010B8  5039               	movf	i2send_msg@qptr,w,c
  7950  0010BA  26D9               	addwf	fsr2l,f,c
  7951  0010BC  503A               	movf	i2send_msg@qptr+1,w,c
  7952  0010BE  22DA               	addwfc	fsr2h,f,c
  7953  0010C0  50DF               	movf	indf2,w,c
  7954  0010C2  6E42               	movwf	i2send_msg@slot,c
  7955                           
  7956                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7957  0010C4  5042               	movf	i2send_msg@slot,w,c
  7958  0010C6  0D0D               	mullw	13
  7959  0010C8  50F3               	movf	prodl,w,c
  7960  0010CA  2439               	addwf	i2send_msg@qptr,w,c
  7961  0010CC  6E43               	movwf	i2send_msg@qmsg,c
  7962  0010CE  50F4               	movf	prodh,w,c
  7963  0010D0  203A               	addwfc	i2send_msg@qptr+1,w,c
  7964  0010D2  6E44               	movwf	i2send_msg@qmsg+1,c
  7965                           
  7966                           ;messages.c: 41: if (qmsg->full != 0) {
  7967  0010D4  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7968  0010D8  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7969  0010DC  50DF               	movf	indf2,w,c
  7970  0010DE  B4D8               	btfsc	status,2,c
  7971  0010E0  D002               	goto	i2l3448
  7972                           
  7973                           ;messages.c: 42: return (-1);
  7974  0010E2  0EFF               	movlw	255
  7975  0010E4  0012               	return	
  7976  0010E6                     i2l3448:
  7977                           
  7978                           ;messages.c: 43: }
  7979                           ;messages.c: 46: qmsg->length = length;
  7980  0010E6  EE20 F001          	lfsr	2,1
  7981  0010EA  5043               	movf	i2send_msg@qmsg,w,c
  7982  0010EC  26D9               	addwf	fsr2l,f,c
  7983  0010EE  5044               	movf	i2send_msg@qmsg+1,w,c
  7984  0010F0  22DA               	addwfc	fsr2h,f,c
  7985  0010F2  C03B  FFDF         	movff	i2send_msg@length,indf2
  7986                           
  7987                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7988  0010F6  EE20 F002          	lfsr	2,2
  7989  0010FA  5043               	movf	i2send_msg@qmsg,w,c
  7990  0010FC  26D9               	addwf	fsr2l,f,c
  7991  0010FE  5044               	movf	i2send_msg@qmsg+1,w,c
  7992  001100  22DA               	addwfc	fsr2h,f,c
  7993  001102  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7994                           
  7995                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7996  001106  0E03               	movlw	3
  7997  001108  2443               	addwf	i2send_msg@qmsg,w,c
  7998  00110A  6E2F               	movwf	i2memcpy@d1,c
  7999  00110C  0E00               	movlw	0
  8000  00110E  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8001  001110  6E30               	movwf	i2memcpy@d1+1,c
  8002  001112  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8003  001116  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8004  00111A  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8005  00111E  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8006  001122  EC1E  F00C         	call	i2_memcpy	;wreg free
  8007                           
  8008                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8009  001126  EE20 F034          	lfsr	2,52
  8010  00112A  5039               	movf	i2send_msg@qptr,w,c
  8011  00112C  26D9               	addwf	fsr2l,f,c
  8012  00112E  503A               	movf	i2send_msg@qptr+1,w,c
  8013  001130  22DA               	addwfc	fsr2h,f,c
  8014  001132  EE10 F034          	lfsr	1,52
  8015  001136  5039               	movf	i2send_msg@qptr,w,c
  8016  001138  26E1               	addwf	fsr1l,f,c
  8017  00113A  503A               	movf	i2send_msg@qptr+1,w,c
  8018  00113C  22E2               	addwfc	fsr1h,f,c
  8019  00113E  50E7               	movf	indf1,w,c
  8020  001140  6E3F               	movwf	??i2_send_msg& (0+255),c
  8021  001142  283F               	incf	??i2_send_msg,w,c
  8022  001144  0B03               	andlw	3
  8023  001146  6EDF               	movwf	indf2,c
  8024                           
  8025                           ;messages.c: 59: qmsg->full = 1;
  8026  001148  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8027  00114C  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8028  001150  0E01               	movlw	1
  8029  001152  6EDF               	movwf	indf2,c
  8030                           
  8031                           ;messages.c: 60: return (1);
  8032  001154  0E01               	movlw	1
  8033  001156  0012               	return	
  8034  001158                     __end_ofi2_send_msg:
  8035                           	opt stack 0
  8036                           pclatu	equ	0xFFB
  8037                           pclath	equ	0xFFA
  8038                           tblptru	equ	0xFF8
  8039                           tblptrh	equ	0xFF7
  8040                           tblptrl	equ	0xFF6
  8041                           tablat	equ	0xFF5
  8042                           prodh	equ	0xFF4
  8043                           prodl	equ	0xFF3
  8044                           intcon	equ	0xFF2
  8045                           postinc0	equ	0xFEE
  8046                           fsr0h	equ	0xFEA
  8047                           fsr0l	equ	0xFE9
  8048                           wreg	equ	0xFE8
  8049                           indf1	equ	0xFE7
  8050                           fsr1h	equ	0xFE2
  8051                           fsr1l	equ	0xFE1
  8052                           bsr	equ	0xFE0
  8053                           indf2	equ	0xFDF
  8054                           postinc2	equ	0xFDE
  8055                           postdec2	equ	0xFDD
  8056                           fsr2h	equ	0xFDA
  8057                           fsr2l	equ	0xFD9
  8058                           status	equ	0xFD8
  8059                           
  8060 ;; *************** function i2_memcpy *****************
  8061 ;; Defined at:
  8062 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  d1              2   46[COMRAM] PTR void 
  8065 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8066 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8067 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8068 ;;  s1              2   48[COMRAM] PTR const void 
  8069 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8070 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8071 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  8072 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8073 ;;		 -> main@ic(28), main@uc(5), 
  8074 ;;  n               2   50[COMRAM] unsigned int 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8077 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8078 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8079 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  8080 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8081 ;;		 -> main@ic(28), main@uc(5), 
  8082 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8083 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8084 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8085 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2   46[COMRAM] PTR void 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8095 ;;      Params:         6       0       0       0       0
  8096 ;;      Locals:         4       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0
  8098 ;;      Totals:        10       0       0       0       0
  8099 ;;Total ram usage:       10 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		i2_send_msg
  8105 ;;		i2_recv_msg
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text48
  8110  00183C                     __ptext48:
  8111                           	opt stack 0
  8112  00183C                     i2_memcpy:
  8113                           	opt stack 16
  8114                           
  8115                           ;incstack = 0
  8116  00183C  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8117  001840  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8118  001844  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8119  001848  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8120  00184C  D00E               	goto	i2l3510
  8121  00184E                     i2l3504:
  8122  00184E  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8123  001852  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8124  001856  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8125  00185A  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8126  00185E  CFDF FFE7          	movff	indf2,indf1
  8127  001862  4A37               	infsnz	i2memcpy@s,f,c
  8128  001864  2A38               	incf	i2memcpy@s+1,f,c
  8129  001866  4A35               	infsnz	i2memcpy@d,f,c
  8130  001868  2A36               	incf	i2memcpy@d+1,f,c
  8131  00186A                     i2l3510:
  8132  00186A  0633               	decf	i2memcpy@n,f,c
  8133  00186C  A0D8               	btfss	status,0,c
  8134  00186E  0634               	decf	i2memcpy@n+1,f,c
  8135  001870  2833               	incf	i2memcpy@n& (0+255),w,c
  8136  001872  B4D8               	btfsc	status,2,c
  8137  001874  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8138  001876  B4D8               	btfsc	status,2,c
  8139                           
  8140                           ;	Return value of i2_memcpy is never used
  8141  001878  0012               	return	
  8142  00187A  D7E9               	goto	i2l3504
  8143  00187C                     __end_ofi2_memcpy:
  8144                           	opt stack 0
  8145                           pclatu	equ	0xFFB
  8146                           pclath	equ	0xFFA
  8147                           tblptru	equ	0xFF8
  8148                           tblptrh	equ	0xFF7
  8149                           tblptrl	equ	0xFF6
  8150                           tablat	equ	0xFF5
  8151                           prodh	equ	0xFF4
  8152                           prodl	equ	0xFF3
  8153                           intcon	equ	0xFF2
  8154                           postinc0	equ	0xFEE
  8155                           fsr0h	equ	0xFEA
  8156                           fsr0l	equ	0xFE9
  8157                           wreg	equ	0xFE8
  8158                           indf1	equ	0xFE7
  8159                           fsr1h	equ	0xFE2
  8160                           fsr1l	equ	0xFE1
  8161                           bsr	equ	0xFE0
  8162                           indf2	equ	0xFDF
  8163                           postinc2	equ	0xFDE
  8164                           postdec2	equ	0xFDD
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function _SleepIfOkay *****************
  8170 ;; Defined at:
  8171 ;;		line 228 in file "src/messages.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;		None               void
  8178 ;; Registers used:
  8179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8185 ;;      Params:         0       0       0       0       0
  8186 ;;      Locals:         0       0       0       0       0
  8187 ;;      Temps:          0       0       0       0       0
  8188 ;;      Totals:         0       0       0       0       0
  8189 ;;Total ram usage:        0 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:    2
  8192 ;; This function calls:
  8193 ;;		_enter_sleep_mode
  8194 ;;		i2_check_msg
  8195 ;;		i2_in_high_int
  8196 ;;		i2_in_low_int
  8197 ;; This function is called by:
  8198 ;;		_InterruptHandlerHigh
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text49
  8203  0016A0                     __ptext49:
  8204                           	opt stack 0
  8205  0016A0                     _SleepIfOkay:
  8206                           	opt stack 17
  8207                           
  8208                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8209                           
  8210                           ;incstack = 0
  8211  0016A0  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8212  0016A2  D001               	goto	i2l2348
  8213  0016A4  0012               	return	
  8214  0016A6                     i2l2348:
  8215                           
  8216                           ;messages.c: 232: }
  8217                           ;messages.c: 235: if (in_low_int()) {
  8218  0016A6  ECC7  F00C         	call	i2_in_low_int	;wreg free
  8219  0016AA  5032               	movf	?i2_in_low_int+1,w,c
  8220  0016AC  1031               	iorwf	?i2_in_low_int,w,c
  8221  0016AE  A4D8               	btfss	status,2,c
  8222  0016B0  0012               	return	
  8223                           
  8224                           ;messages.c: 237: }
  8225                           ;messages.c: 240: if (!in_high_int()) {
  8226                           
  8227                           ;messages.c: 236: return;
  8228  0016B2  ECC6  F00D         	call	i2_in_high_int	;wreg free
  8229  0016B6  5030               	movf	?i2_in_high_int+1,w,c
  8230  0016B8  102F               	iorwf	?i2_in_high_int,w,c
  8231  0016BA  B4D8               	btfsc	status,2,c
  8232  0016BC  0012               	return	
  8233                           
  8234                           ;messages.c: 242: }
  8235                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8236                           
  8237                           ;messages.c: 241: return;
  8238  0016BE  0101               	movlb	1	; () banked
  8239  0016C0  0E01               	movlw	high _ToMainHigh_MQ
  8240  0016C2  6E30               	movwf	i2check_msg@qptr+1,c
  8241  0016C4  0101               	movlb	1	; () banked
  8242  0016C6  0E6C               	movlw	low _ToMainHigh_MQ
  8243  0016C8  6E2F               	movwf	i2check_msg@qptr,c
  8244  0016CA  EC42  F00D         	call	i2_check_msg	;wreg free
  8245  0016CE  0900               	iorlw	0
  8246  0016D0  A4D8               	btfss	status,2,c
  8247  0016D2  0012               	return	
  8248                           
  8249                           ;messages.c: 249: }
  8250                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8251                           
  8252                           ;messages.c: 248: return;
  8253  0016D4  0100               	movlb	0	; () banked
  8254  0016D6  0E00               	movlw	high _ToMainLow_MQ
  8255  0016D8  6E30               	movwf	i2check_msg@qptr+1,c
  8256  0016DA  0100               	movlb	0	; () banked
  8257  0016DC  0E80               	movlw	low _ToMainLow_MQ
  8258  0016DE  6E2F               	movwf	i2check_msg@qptr,c
  8259  0016E0  EC42  F00D         	call	i2_check_msg	;wreg free
  8260  0016E4  0900               	iorlw	0
  8261  0016E6  B4D8               	btfsc	status,2,c
  8262                           
  8263                           ;messages.c: 252: }
  8264                           ;messages.c: 253: enter_sleep_mode();
  8265                           
  8266                           ;messages.c: 251: return;
  8267  0016E8  ECD0  F00D         	call	_enter_sleep_mode	;wreg free
  8268  0016EC  0012               	return	
  8269  0016EE                     __end_of_SleepIfOkay:
  8270                           	opt stack 0
  8271                           pclatu	equ	0xFFB
  8272                           pclath	equ	0xFFA
  8273                           tblptru	equ	0xFF8
  8274                           tblptrh	equ	0xFF7
  8275                           tblptrl	equ	0xFF6
  8276                           tablat	equ	0xFF5
  8277                           prodh	equ	0xFF4
  8278                           prodl	equ	0xFF3
  8279                           intcon	equ	0xFF2
  8280                           postinc0	equ	0xFEE
  8281                           fsr0h	equ	0xFEA
  8282                           fsr0l	equ	0xFE9
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           fsr1h	equ	0xFE2
  8286                           fsr1l	equ	0xFE1
  8287                           bsr	equ	0xFE0
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           postdec2	equ	0xFDD
  8291                           fsr2h	equ	0xFDA
  8292                           fsr2l	equ	0xFD9
  8293                           status	equ	0xFD8
  8294                           
  8295 ;; *************** function i2_in_low_int *****************
  8296 ;; Defined at:
  8297 ;;		line 30 in file "src/interrupts.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  2   48[COMRAM] int 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8311 ;;      Params:         2       0       0       0       0
  8312 ;;      Locals:         0       0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0
  8314 ;;      Totals:         2       0       0       0       0
  8315 ;;Total ram usage:        2 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    1
  8318 ;; This function calls:
  8319 ;;		i2_in_high_int
  8320 ;; This function is called by:
  8321 ;;		_SleepIfOkay
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text50
  8326  00198E                     __ptext50:
  8327                           	opt stack 0
  8328  00198E                     i2_in_low_int:
  8329                           	opt stack 17
  8330                           
  8331                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8332                           
  8333                           ;incstack = 0
  8334  00198E  ACF2               	btfss	intcon,6,c	;volatile
  8335  001990  D005               	goto	i2l2852
  8336                           
  8337                           ;interrupts.c: 32: return (0);
  8338  001992  0E00               	movlw	0
  8339  001994  6E32               	movwf	?i2_in_low_int+1,c
  8340  001996  0E00               	movlw	0
  8341  001998  6E31               	movwf	?i2_in_low_int,c
  8342  00199A  0012               	return	
  8343  00199C                     i2l2852:
  8344  00199C  ECC6  F00D         	call	i2_in_high_int	;wreg free
  8345  0019A0  5030               	movf	?i2_in_high_int+1,w,c
  8346  0019A2  102F               	iorwf	?i2_in_high_int,w,c
  8347  0019A4  B4D8               	btfsc	status,2,c
  8348  0019A6  D005               	goto	i2l2860
  8349                           
  8350                           ;interrupts.c: 34: return (0);
  8351  0019A8  0E00               	movlw	0
  8352  0019AA  6E32               	movwf	?i2_in_low_int+1,c
  8353  0019AC  0E00               	movlw	0
  8354  0019AE  6E31               	movwf	?i2_in_low_int,c
  8355  0019B0  0012               	return	
  8356  0019B2                     i2l2860:
  8357                           
  8358                           ;interrupts.c: 36: return (1);
  8359  0019B2  0E00               	movlw	0
  8360  0019B4  6E32               	movwf	?i2_in_low_int+1,c
  8361  0019B6  0E01               	movlw	1
  8362  0019B8  6E31               	movwf	?i2_in_low_int,c
  8363  0019BA  0012               	return	
  8364  0019BC                     __end_ofi2_in_low_int:
  8365                           	opt stack 0
  8366                           pclatu	equ	0xFFB
  8367                           pclath	equ	0xFFA
  8368                           tblptru	equ	0xFF8
  8369                           tblptrh	equ	0xFF7
  8370                           tblptrl	equ	0xFF6
  8371                           tablat	equ	0xFF5
  8372                           prodh	equ	0xFF4
  8373                           prodl	equ	0xFF3
  8374                           intcon	equ	0xFF2
  8375                           postinc0	equ	0xFEE
  8376                           fsr0h	equ	0xFEA
  8377                           fsr0l	equ	0xFE9
  8378                           wreg	equ	0xFE8
  8379                           indf1	equ	0xFE7
  8380                           fsr1h	equ	0xFE2
  8381                           fsr1l	equ	0xFE1
  8382                           bsr	equ	0xFE0
  8383                           indf2	equ	0xFDF
  8384                           postinc2	equ	0xFDE
  8385                           postdec2	equ	0xFDD
  8386                           fsr2h	equ	0xFDA
  8387                           fsr2l	equ	0xFD9
  8388                           status	equ	0xFD8
  8389                           
  8390 ;; *************** function i2_in_high_int *****************
  8391 ;; Defined at:
  8392 ;;		line 22 in file "src/interrupts.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  2   46[COMRAM] int 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8406 ;;      Params:         2       0       0       0       0
  8407 ;;      Locals:         0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0
  8409 ;;      Totals:         2       0       0       0       0
  8410 ;;Total ram usage:        2 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_SleepIfOkay
  8416 ;;		i2_in_low_int
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text51
  8421  001B8C                     __ptext51:
  8422                           	opt stack 0
  8423  001B8C                     i2_in_high_int:
  8424                           	opt stack 17
  8425                           
  8426                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8427                           
  8428                           ;incstack = 0
  8429  001B8C  0E00               	movlw	0
  8430  001B8E  AEF2               	btfss	intcon,7,c	;volatile
  8431  001B90  0E01               	movlw	1
  8432  001B92  6E2F               	movwf	?i2_in_high_int,c
  8433  001B94  6A30               	clrf	?i2_in_high_int+1,c
  8434  001B96  0012               	return	
  8435  001B98                     __end_ofi2_in_high_int:
  8436                           	opt stack 0
  8437                           pclatu	equ	0xFFB
  8438                           pclath	equ	0xFFA
  8439                           tblptru	equ	0xFF8
  8440                           tblptrh	equ	0xFF7
  8441                           tblptrl	equ	0xFF6
  8442                           tablat	equ	0xFF5
  8443                           prodh	equ	0xFF4
  8444                           prodl	equ	0xFF3
  8445                           intcon	equ	0xFF2
  8446                           postinc0	equ	0xFEE
  8447                           fsr0h	equ	0xFEA
  8448                           fsr0l	equ	0xFE9
  8449                           wreg	equ	0xFE8
  8450                           indf1	equ	0xFE7
  8451                           fsr1h	equ	0xFE2
  8452                           fsr1l	equ	0xFE1
  8453                           bsr	equ	0xFE0
  8454                           indf2	equ	0xFDF
  8455                           postinc2	equ	0xFDE
  8456                           postdec2	equ	0xFDD
  8457                           fsr2h	equ	0xFDA
  8458                           fsr2l	equ	0xFD9
  8459                           status	equ	0xFD8
  8460                           
  8461 ;; *************** function i2_check_msg *****************
  8462 ;; Defined at:
  8463 ;;		line 222 in file "src/messages.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8466 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      unsigned char 
  8471 ;; Registers used:
  8472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8478 ;;      Params:         2       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0
  8480 ;;      Temps:          1       0       0       0       0
  8481 ;;      Totals:         3       0       0       0       0
  8482 ;;Total ram usage:        3 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_SleepIfOkay
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text52
  8492  001A84                     __ptext52:
  8493                           	opt stack 0
  8494  001A84                     i2_check_msg:
  8495                           	opt stack 18
  8496                           
  8497                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8498                           
  8499                           ;incstack = 0
  8500  001A84  EE20 F035          	lfsr	2,53
  8501  001A88  502F               	movf	i2check_msg@qptr,w,c
  8502  001A8A  26D9               	addwf	fsr2l,f,c
  8503  001A8C  5030               	movf	i2check_msg@qptr+1,w,c
  8504  001A8E  22DA               	addwfc	fsr2h,f,c
  8505  001A90  50DF               	movf	indf2,w,c
  8506  001A92  6E31               	movwf	??i2_check_msg& (0+255),c
  8507  001A94  5031               	movf	??i2_check_msg,w,c
  8508  001A96  0D0D               	mullw	13
  8509  001A98  50F3               	movf	prodl,w,c
  8510  001A9A  242F               	addwf	i2check_msg@qptr,w,c
  8511  001A9C  6ED9               	movwf	fsr2l,c
  8512  001A9E  50F4               	movf	prodh,w,c
  8513  001AA0  2030               	addwfc	i2check_msg@qptr+1,w,c
  8514  001AA2  6EDA               	movwf	fsr2h,c
  8515  001AA4  50DF               	movf	indf2,w,c
  8516  001AA6  0012               	return	
  8517  001AA8                     __end_ofi2_check_msg:
  8518                           	opt stack 0
  8519                           pclatu	equ	0xFFB
  8520                           pclath	equ	0xFFA
  8521                           tblptru	equ	0xFF8
  8522                           tblptrh	equ	0xFF7
  8523                           tblptrl	equ	0xFF6
  8524                           tablat	equ	0xFF5
  8525                           prodh	equ	0xFF4
  8526                           prodl	equ	0xFF3
  8527                           intcon	equ	0xFF2
  8528                           postinc0	equ	0xFEE
  8529                           fsr0h	equ	0xFEA
  8530                           fsr0l	equ	0xFE9
  8531                           wreg	equ	0xFE8
  8532                           indf1	equ	0xFE7
  8533                           fsr1h	equ	0xFE2
  8534                           fsr1l	equ	0xFE1
  8535                           bsr	equ	0xFE0
  8536                           indf2	equ	0xFDF
  8537                           postinc2	equ	0xFDE
  8538                           postdec2	equ	0xFDD
  8539                           fsr2h	equ	0xFDA
  8540                           fsr2l	equ	0xFD9
  8541                           status	equ	0xFD8
  8542                           
  8543 ;; *************** function _enter_sleep_mode *****************
  8544 ;; Defined at:
  8545 ;;		line 202 in file "src/messages.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;		None               void
  8552 ;; Registers used:
  8553 ;;		None
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8559 ;;      Params:         0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0
  8562 ;;      Totals:         0       0       0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_SleepIfOkay
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text53
  8573  001BA0                     __ptext53:
  8574                           	opt stack 0
  8575  001BA0                     _enter_sleep_mode:
  8576                           	opt stack 18
  8577                           
  8578                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8579                           
  8580                           ;incstack = 0
  8581  001BA0  8ED3               	bsf	4051,7,c	;volatile
  8582  001BA2  0003               	sleep		;# 
  8583  001BA4  0012               	return	
  8584  001BA6                     __end_of_enter_sleep_mode:
  8585                           	opt stack 0
  8586  0000                     pclatu	equ	0xFFB
  8587                           pclath	equ	0xFFA
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           postinc0	equ	0xFEE
  8596                           fsr0h	equ	0xFEA
  8597                           fsr0l	equ	0xFE9
  8598                           wreg	equ	0xFE8
  8599                           indf1	equ	0xFE7
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           bsr	equ	0xFE0
  8603                           indf2	equ	0xFDF
  8604                           postinc2	equ	0xFDE
  8605                           postdec2	equ	0xFDD
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           pclatu	equ	0xFFB
  8610                           pclath	equ	0xFFA
  8611                           tblptru	equ	0xFF8
  8612                           tblptrh	equ	0xFF7
  8613                           tblptrl	equ	0xFF6
  8614                           tablat	equ	0xFF5
  8615                           prodh	equ	0xFF4
  8616                           prodl	equ	0xFF3
  8617                           intcon	equ	0xFF2
  8618                           postinc0	equ	0xFEE
  8619                           fsr0h	equ	0xFEA
  8620                           fsr0l	equ	0xFE9
  8621                           wreg	equ	0xFE8
  8622                           indf1	equ	0xFE7
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           bsr	equ	0xFE0
  8626                           indf2	equ	0xFDF
  8627                           postinc2	equ	0xFDE
  8628                           postdec2	equ	0xFDD
  8629                           fsr2h	equ	0xFDA
  8630                           fsr2l	equ	0xFD9
  8631                           status	equ	0xFD8
  8632                           
  8633                           	psect	rparam
  8634  0000                     pclatu	equ	0xFFB
  8635                           pclath	equ	0xFFA
  8636                           tblptru	equ	0xFF8
  8637                           tblptrh	equ	0xFF7
  8638                           tblptrl	equ	0xFF6
  8639                           tablat	equ	0xFF5
  8640                           prodh	equ	0xFF4
  8641                           prodl	equ	0xFF3
  8642                           intcon	equ	0xFF2
  8643                           postinc0	equ	0xFEE
  8644                           fsr0h	equ	0xFEA
  8645                           fsr0l	equ	0xFE9
  8646                           wreg	equ	0xFE8
  8647                           indf1	equ	0xFE7
  8648                           fsr1h	equ	0xFE2
  8649                           fsr1l	equ	0xFE1
  8650                           bsr	equ	0xFE0
  8651                           indf2	equ	0xFDF
  8652                           postinc2	equ	0xFDE
  8653                           postdec2	equ	0xFDD
  8654                           fsr2h	equ	0xFDA
  8655                           fsr2l	equ	0xFD9
  8656                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     47     105
    BANK1           256     74     236
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_WriteUSART
    _timer1_lthread->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_ToMainLow_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   11436
                                             18 BANK1     56    56      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     600
                                             24 BANK0      8     0      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      15     7      8    3247
                                              3 BANK1     15     7      8
                         _ReadTimer1
                  _ToMainLow_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2341
                                             45 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     119
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             27 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             29 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6532
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3158
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3374
                                             26 COMRAM     3     3      0
                        _WriteTimer1
                       i1_ReadTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3135
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2547
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) i1_ReadTimer1                                         4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10659
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6545
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3878
                                             72 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3272
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     i1_ReadTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     4A      EC       6       92.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2F      69       5       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5       9        0.0%
DATA                 0      0     1A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb 14 15:36:33 2015

              main@uthread_data 01C5        _MQ_Main_Willing_to_block 004F                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 17BA                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1928  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003C               i2recv_msg@tlength 0043  
                           l113 07F4                             l412 19E0                             l413 19E2  
                           l436 18D4                             l372 142C                             l438 18EC  
                           l439 18EE                             l375 143E                             l480 1228  
                           l484 1248                             l724 1AE8                             l485 124A  
                           l486 1258                             l487 125A            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0136                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    ?_in_high_int 00CD                ??_init_uart_recv 00CF  
               ReadTimer1@timer 00CF             i2recv_msg@maxlength 003B                            l1036 1306  
                          l2500 18D6                            l2164 1724                            l2156 1702  
                          l3310 0BB6                            l3320 0C26                            l3312 0BC6  
                          l2178 1768                            l3314 0BDE                            l2540 1214  
                          l2612 0CF8                            l3340 0DC2                            l3260 0828  
                          l3318 0C00                            l3262 0846                            l3360 1688  
                          l2608 0C74                            l3432 12F2                            l3424 12A4  
                          l3280 08F8                            l3256 07A2                            l3272 089C  
                          l3248 0760                            l3354 1664                            l3426 12B6  
                          l3282 094A                            l3258 07FA                            l3266 0864  
                          l3274 08BA                            l2548 122A                            l3428 12BE  
                          l2820 1B08                            l3284 099C                            l3268 087C  
                          l3374 0A7A                            l3390 0B40                            l2592 13DC  
                          l2664 145C                            l3288 09EE                            l2586 13B0  
                          l2676 14D4                            l2598 1408                            _LATA 000F89  
                          _LATB 000F8A                            u2537 1AEA                 _FromMainHigh_MQ 0100  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 069C  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01CE  
                    i1_send_msg 1004                            pclat 000FFA                     i2_check_msg 1A84  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002F  
                          start 00BA                      i2_recv_msg 0E6A                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 10AE       ToMainHigh_recvmsg@msgtype 01A2                  send_msg@length 00D9  
   __size_of_timer0_int_handler 0064                     _Delay1KTCYx 1AE4                           ?_main 0001  
  __size_ofi1_ToMainLow_sendmsg 0026                           _CMCON 000FB4                           _T0CON 000FD5  
                         _T1CON 000FCD                 __end_of___lwmod 1310                      i1memcpy@d1 0001  
                         i2l305 04EA                           i2l261 0FB8                           i2l271 04D8  
                         i2l273 016A                           i1l498 1AD4                           i2l291 032A  
                         i2l277 01A8                           i2l299 0456                      i1memcpy@s1 0003  
   FromMainHigh_recvmsg@msgtype 0047                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _SPBRG 000FAF                           _PORTA 000F80  
                         _TRISA 000F92                           _TRISB 000F93                           _TXREG 000FAD  
                         _TXSTA 000FAC                      i2memcpy@d1 002F                      i2memcpy@s1 0031  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 1778  
    ToMainLow_recvmsg@maxlength 01A6         timer0_lthread@msgbuffer 00D3         i2c_configure_slave@addr 00CD  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 183C  
              __end_ofi2_memcpy 187C                  WriteUSART@data 00CD                 __initialization 187C  
                  __end_of_main 0A0E                      _ReadTimer1 1B0E     __size_of_timer1_int_handler 0030  
    __size_of_ToMainLow_recvmsg 0042      __size_of_ToMainLow_sendmsg 0036   __size_of_FromMainHigh_recvmsg 002A  
         __size_ofi2_in_low_int 002E                          ??_main 01B4                 send_msg@msgtype 00DA  
                 __activetblptr 000002                 send_msg@tlength 00DE            __end_of_handle_start 1004  
                        _ADCON1 000FC1         ??_uart_recv_int_handler 001B                          i1l3500 182A  
                        i1l3524 103C                          i1l3570 0066                          i2l3100 0244  
                        i1l3494 180E                          i1l3558 11D4                          i1l3576 0070  
                        i2l3130 039A                          i2l3106 025C                          i2l3042 134A  
                        i2l3132 03DC                          i2l3108 029C                          i2l3070 0160  
                        i2l3136 03EA                          i2l3064 014C                          i2l3048 1354  
                    _OpenTimer0 19BC                          i2l3170 054E                          i2l3090 0208  
                    _OpenTimer1 18BA                          i2l2348 16A6                          i2l3164 04EE  
                        i2l3510 186A                          i2l3158 04AC                  __CFG_WDTEN$OFF 000000  
                        i2l3504 184E                          i2l3088 01DC                          i2l3186 066A  
                        i2l3178 05D4                          i2l3448 10E6                          i2l3472 0EB0  
                        i2l2860 19B2                          i2l2852 199C                          i2l2792 0FD4  
                        i2l3488 0F38                          i2l2794 0FEC     __end_of_i2c_configure_slave 1A38  
                 ??_SleepIfOkay 0033              __size_of_ReadUSART 001E                          _OSCCON 000FD3  
                        _SPBRGH 000FB0                          _SSPADD 000FC8                          _SSPBUF 000FC9  
__size_of_start_i2c_slave_reply 010E                     ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0D66  
            timer0_lthread@tptr 00CD                     ?i2_recv_msg 0039                    i2_in_low_int 198E  
                   ?i2_send_msg 0039                  __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092  
               _i2c_int_handler 00BE                OpenTimer0@config 00CD                          _ic_ptr 00E5  
                     ??___lwmod 00D1                   main@msgbuffer 01B7                __end_of_init_i2c 15DE  
              OpenTimer1@config 00CD                          _memcpy 1642                          clear_0 1882  
                        clear_1 188E                          _uc_ptr 004D                          main@ic 01D0  
                        main@uc 01C9                __end_of_recv_msg 0B44     start_i2c_slave_reply@length 00D1  
                     ??_in_main 00D3                __end_of_send_msg 0E6A           timer0_int_handler@val 00BA  
       i2c_int_handler@i2c_data 00BB                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     init_queue@i 00D0        ToMainLow_recvmsg@msgtype 01A2  
          __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 18B0      __end_of_ToMainHigh_recvmsg 17FC      __end_of_ToMainHigh_sendmsg 1A84  
   __end_of_init_timer1_lthread 1B44             __end_of_SleepIfOkay 16EE                      _WriteUSART 1AFA  
                __pcstackCOMRAM 0001                    __pidataBANK0 1BA6          __size_ofi2_in_high_int 000C  
                   ?_ReadTimer1 00CD              __size_of_check_msg 0036               __end_of_ReadUSART 1AE4  
     timer0_int_handler@msgtype 00B8             __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 138A     __end_of_InterruptHandlerLow 00BA                       ?i2_memcpy 002F  
                 _ToMainHigh_MQ 016C             __size_ofi2_recv_msg 00D2                _enter_sleep_mode 1BA0  
           __size_ofi2_send_msg 00AA            timer1_lthread@length 01A9                   ReadUSART@data 0001  
             __end_of_OpenUSART 1286                   check_msg@qptr 00CD            timer1_lthread@retval 01AF  
       ??_block_on_To_msgqueues 00D3            __size_of_init_queues 006E                      __pbssBANK0 0080  
                    __pbssBANK1 0100                     ?_OpenTimer0 0001                     ?_OpenTimer1 0001  
                    __pnvCOMRAM 004D             i1_ToMainLow_sendmsg 1A38         __end_of_i2c_int_handler 069C  
                  ?i2_check_msg 002F              timer1_lthread@ctrl 01B2              timer1_lthread@even 01B0  
            timer1_lthread@tptr 01A5               recv_msg@maxlength 00D9                 recv_msg@msgtype 00DA  
               recv_msg@tlength 00E1           __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0031                         ?_memcpy 00CD                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0031                   ??_WriteTimer1 0003         __size_of_timer0_lthread 0012  
          ?i1_ToMainLow_sendmsg 0017         __size_of_timer1_lthread 0114                      ??i1_memcpy 0007  
                    ??i2_memcpy 0035                i1send_msg@length 000D                   i2_in_high_int 1B8C  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
           __size_of_ReadTimer1 0012               __end_of_check_msg 195E                       ?_init_i2c 00CD  
                   _SleepIfOkay 16A0                       ?_recv_msg 00D7                      _in_low_int 16EE  
                  _handle_start 0F3C                         __Hparam 0000                       ?_send_msg 00D7  
                       __Lparam 0000      __end_of_timer0_int_handler 1642                     ?_WriteUSART 0001  
              init_uart_recv@uc 00CD                         ___lwmod 1286                 __CFG_STVREN$OFF 000000  
                       __pcinit 187C                 __size_of_memcpy 005E                      _init_queue 148C  
                       __ramtop 0400           ??i1_ToMainLow_sendmsg 001A             __size_of_OpenTimer0 002A  
           __size_of_OpenTimer1 0038                         __ptext0 069C                         __ptext1 1410  
                       __ptext2 1AFA                         __ptext3 0B44                         __ptext4 1286  
                       __ptext5 18F2                         __ptext6 0D66                         __ptext7 1B0E  
                       __ptext8 1B20                         __ptext9 0C58                       _T0CONbits 000FD5  
                       _in_main 1734                       _T1CONbits 000FCD             __end_of_WriteTimer0 1B8C  
           __end_of_WriteTimer1 1B7A                  ?i2_in_high_int 002F                   ?i1_ReadTimer1 0001  
                __pintcode_body 1310    __end_of_FromMainHigh_recvmsg 1A10            end_of_initialization 18B0  
       timer1_lthread@msgbuffer 01AB  __size_of_uart_recv_int_handler 009C                         memcpy@d 00D3  
                       memcpy@n 00D1                         memcpy@s 00D5   __end_of_uart_recv_int_handler 11F4  
                    ??_init_i2c 00CF     i2c_int_handler@data_written 00B9                   __Lmediumconst 0000  
                       int_func 1310                    ??i1_send_msg 0011                   ?_uart_lthread 00CE  
       __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001                    ??i2_recv_msg 0040  
                    ??_recv_msg 00DE                    ??i2_send_msg 003F                      ??_send_msg 00DD  
    __end_of_timer1_int_handler 198E                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 0045  
            __end_ofi1_send_msg 10AE                       _TRISCbits 000F94              __end_ofi2_recv_msg 0F3C  
                ??i1_ReadTimer1 0003              __end_ofi2_send_msg 1158             __size_of_WriteUSART 0014  
 FromMainHigh_recvmsg@maxlength 004B        timer1_int_handler@result 001C                  ??_uart_lthread 00D6  
                     _TXSTAbits 000FAC                      main@length 01CF                     ?_in_low_int 00CF  
         timer0_lthread@msgtype 00CF           _start_i2c_slave_reply 0C58    __size_of_i2c_configure_slave 0028  
          __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 1BA6                    ??_ReadTimer1 00CF  
            _ToMainHigh_recvmsg 17BA                       i1memcpy@d 0007              _ToMainHigh_sendmsg 1A5E  
                     i1memcpy@n 0005                       i1memcpy@s 0009                  _timer0_lthread 1B20  
                   ?_init_queue 00CD                       i2memcpy@d 0035                     _WriteTimer0 1B7A  
                   _WriteTimer1 1B68                       i2memcpy@n 0033                       i2memcpy@s 0037  
                _timer1_lthread 0B44                  __end_of_memcpy 16A0               _enable_interrupts 1B98  
          __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 01A2                 ??i2_in_high_int 0031  
      i2c_int_handler@data_read 00BE             ?_ToMainHigh_sendmsg 0045         i1ToMainLow_sendmsg@data 0018  
            ?_enable_interrupts 0001             start_initialization 187C                   ??_in_high_int 00CF  
                     _ReadUSART 1AC6               __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040  
           ??_enable_interrupts 00CD                    ??_OpenTimer0 00CD                    ??_OpenTimer1 00CD  
__size_of_block_on_To_msgqueues 007E              __end_of_ReadTimer1 1B20   __end_of_block_on_To_msgqueues 1410  
                     _OpenUSART 11F4    __end_of_InterruptHandlerHigh 1392                      init_i2c@ic 00CD  
          ??_ToMainHigh_recvmsg 00E5            ??_ToMainHigh_sendmsg 0048          __end_of_timer0_lthread 1B32  
      i2c_int_handler@error_buf 00B6                     __pdataBANK0 00E7          __end_of_timer1_lthread 0C58  
     __end_of_enable_interrupts 1BA0                        ??_memcpy 00D3           timer1_lthread@msgtype 01A7  
          _FromMainHigh_recvmsg 19E6    __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 19E6  
            __end_of_OpenTimer1 18F2        i2c_int_handler@msg_ready 00BD             timer1_lthread@F5129 00E7  
             i1ReadTimer1@timer 0003                     __pbssCOMRAM 004F                      ?_ReadUSART 0001  
                 ??_init_queues 00D1                   __pcstackBANK0 00B6                   __pcstackBANK1 01A2  
           __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00CD             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00CD        ToMainLow_sendmsg@msgtype 01A2    __size_of_InterruptHandlerLow 00A2  
           __end_of_in_high_int 1B56                      ?_OpenUSART 00CD                    ?_SleepIfOkay 0001  
         ToMainLow_recvmsg@data 01A4                    _ToMainLow_MQ 0080             __size_of_init_queue 007A  
                _init_uart_recv 1AA8                       _check_msg 1928                       __pnvBANK0 00E5  
        ?_start_i2c_slave_reply 00CD               __size_of_init_i2c 006A                    recv_msg@data 00DC  
                  ??_WriteUSART 00CD                    recv_msg@qmsg 00E3                    recv_msg@slot 00E0  
                  recv_msg@qptr 00D7               __size_of_recv_msg 0136                       __pintcode 0008  
             __size_of_send_msg 0104            __end_ofi1_ReadTimer1 1B68                 ?_timer0_lthread 00CD  
                      ?___lwmod 00CD           ?_FromMainHigh_recvmsg 0047                 ?_timer1_lthread 01A5  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 01A4            __end_of_uart_lthread 148C  
    i2c_int_handler@msg_to_send 00BC                        ?_in_main 00D1               WriteTimer0@timer0 002F  
            _timer0_int_handler 15DE               WriteTimer1@timer1 0001      i1ToMainLow_sendmsg@msgtype 0017  
           uart_lthread@msgtype 00D0           ToMainLow_sendmsg@data 01A3             ?_timer0_int_handler 0001  
            __end_of_WriteUSART 1B0E                uart_lthread@uptr 00CE          __end_of_init_uart_recv 1AC6  
           __end_of_init_queues 1574                 i2check_msg@qptr 002F                      ?_check_msg 00CD  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                   ?i2_in_low_int 0031  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 0046     __end_ofi1_ToMainLow_sendmsg 1A5E  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000            ??_timer0_int_handler 004C  
    __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E               i1send_msg@tlength 0012  
          timer0_lthread@length 00D1              _timer1_int_handler 195E                        i1_memcpy 17FC  
          _InterruptHandlerHigh 0008                     ??_ReadUSART 0001                        i2_memcpy 183C  
          timer0_lthread@msgval 00D5        FromMainHigh_recvmsg@data 0049                     _in_high_int 1B44  
                  send_msg@data 00DB             _i2c_configure_slave 1A10                    send_msg@qmsg 00E1  
                  send_msg@slot 00E0                    send_msg@qptr 00D7           uart_lthread@msgbuffer 00D4  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00CD                     ??_OpenUSART 00CF  
               OpenUSART@config 00D2                  ??i2_in_low_int 0033           _uart_recv_int_handler 1158  
                  ??_in_low_int 00D1                        __Hrparam 0000            ?_i2c_configure_slave 0001  
                      __Lrparam 0000               ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 004B  
          ??_timer1_int_handler 001B        __size_of_i2c_int_handler 05DE              ??_enter_sleep_mode 002F  
              __size_of___lwmod 008A                    ??_init_queue 00CF                    ?_WriteTimer0 002F  
                  ?_WriteTimer1 0001         ToMainLow_sendmsg@length 00E3               main@t0thread_data 01B5  
         ?_InterruptHandlerHigh 0001                __size_of_in_main 0044               i2send_msg@msgtype 003C  
   ToMainHigh_recvmsg@maxlength 01A6               i2send_msg@tlength 0040         init_timer1_lthread@tptr 00CD  
                   _init_queues 1506              __end_of_in_low_int 1734                        __ptext10 1AA8  
                      __ptext11 1B32                        __ptext20 1B44                        __ptext12 1506  
                      __ptext21 1928                        __ptext13 148C                        __ptext22 1AE4  
                      __ptext14 1574                        __ptext31 1158                        __ptext23 1778  
                      __ptext15 1A10                        __ptext40 15DE                        __ptext32 1AC6  
                      __ptext24 17BA                        __ptext16 1B98                        __ptext41 1B7A  
                      __ptext33 195E                        __ptext25 0A0E                        __ptext17 1392  
                      __ptext50 198E                        __ptext42 19E6                        __ptext34 1A38  
                      __ptext26 1642                        __ptext18 1734                        __ptext51 1B8C  
                      __ptext43 0E6A                        __ptext35 1004                        __ptext27 11F4  
                      __ptext19 16EE                        __ptext52 1A84                        __ptext44 00BE  
                      __ptext36 17FC                        __ptext28 18BA                        __ptext53 1BA0  
                      __ptext45 0F3C                        __ptext37 1B56                        __ptext29 19BC  
                      __ptext46 1A5E                        __ptext38 1B68                        __ptext47 10AE  
                      __ptext48 183C                        __ptext49 16A0                  i1send_msg@data 000F  
     i1ToMainLow_sendmsg@length 001A                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B              uart_lthread@length 00D2        timer0_int_handler@length 00B6  
                      _init_i2c 1574             _init_timer1_lthread 1B32                   __size_of_main 0372  
                 ??i2_check_msg 0031               main@t1thread_data 01C7                     ??_check_msg 00CF  
            __end_of_init_queue 1506           __size_ofi1_ReadTimer1 0012            __size_of_SleepIfOkay 004E  
                      _recv_msg 0A0E           ??_i2c_configure_slave 00CD                        _send_msg 0D66  
                init_queue@qptr 00CD           __size_of_uart_lthread 007C                  i2recv_msg@data 003E  
                i2recv_msg@qmsg 0045                   ??_Delay1KTCYx 00CD                  i2recv_msg@slot 0042  
                i2recv_msg@qptr 0039                        main@baud 01C3             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00CD                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
                OpenUSART@spbrg 00CD                        memcpy@d1 00CD                        memcpy@s1 00CF  
         __end_ofi2_in_high_int 1B98    i2c_int_handler@overrun_error 00BA                    i1_ReadTimer1 1B56  
              i2send_msg@length 003B                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00CF                ___lwmod@dividend 00CD  
        ?_uart_recv_int_handler 0001                    _uart_lthread 1410                  main@UARTConfig 01C4  
         _block_on_To_msgqueues 1392                   ?_handle_start 0001                ??_timer0_lthread 00D5  
   __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026                      _OSCCONbits 000FD3  
              ??_timer1_lthread 01AD        ToMainHigh_sendmsg@length 0048             __end_ofi2_check_msg 1AA8  
         ??_init_timer1_lthread 00CF          ??_InterruptHandlerHigh 00BF               _ToMainLow_recvmsg 1778  
             _ToMainLow_sendmsg 18F2              main@last_reg_recvd 01C2                 ___lwmod@divisor 00CF  
          __end_ofi2_in_low_int 19BC              ?_ToMainLow_recvmsg 01A2             __end_of_Delay1KTCYx 1AFA  
             ??_i2c_int_handler 0049                 ___lwmod@counter 00D2              ?_ToMainLow_sendmsg 01A2  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                  i2send_msg@data 003D  
         ??_InterruptHandlerLow 001E             ??_ToMainLow_recvmsg 00E5                  i2send_msg@qmsg 0043  
                i2send_msg@slot 0042                  i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 00E3  
                ??_handle_start 002F                    _USART_Status 0050  
