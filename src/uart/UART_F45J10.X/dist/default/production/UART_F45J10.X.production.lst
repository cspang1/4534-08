

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 23 22:08:23 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     _ADCON1	set	4033
    76  0000                     _CMCON	set	4020
    77  0000                     _INTCONbits	set	4082
    78  0000                     _IPR1bits	set	3999
    79  0000                     _LATA	set	3977
    80  0000                     _LATB	set	3978
    81  0000                     _OSCCON	set	4051
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _OSCTUNEbits	set	3995
    84  0000                     _PIE1bits	set	3997
    85  0000                     _PIR1bits	set	3998
    86  0000                     _PORTA	set	3968
    87  0000                     _RCONbits	set	4048
    88  0000                     _RCREG	set	4014
    89  0000                     _RCSTA	set	4011
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _SPBRGH	set	4016
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPCON2	set	4037
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTAT	set	4039
   100  0000                     _SSPSTATbits	set	4039
   101  0000                     _T0CON	set	4053
   102  0000                     _T0CONbits	set	4053
   103  0000                     _T1CON	set	4045
   104  0000                     _T1CONbits	set	4045
   105  0000                     _TMR0H	set	4055
   106  0000                     _TMR0L	set	4054
   107  0000                     _TMR1H	set	4047
   108  0000                     _TMR1L	set	4046
   109  0000                     _TRISA	set	3986
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISCbits	set	3988
   112  0000                     _TXREG	set	4013
   113  0000                     _TXSTA	set	4012
   114  0000                     _TXSTAbits	set	4012
   115                           
   116                           	psect	nvCOMRAM
   117  000074                     __pnvCOMRAM:
   118                           	opt stack 0
   119  000074                     _uc_ptr:
   120                           	opt stack 0
   121  000074                     	ds	2
   122                           
   123                           	psect	nvBANK0
   124  0000CB                     __pnvBANK0:
   125                           	opt stack 0
   126  0000CB                     _ic_ptr:
   127                           	opt stack 0
   128  0000CB                     	ds	2
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  001E48                     __pcinit:
   134                           	opt stack 0
   135  001E48                     start_initialization:
   136                           	opt stack 0
   137  001E48                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK2 (108 bytes)
   141  001E48  EE02  F080         	lfsr	0,__pbssBANK2
   142  001E4C  0E6C               	movlw	108
   143  001E4E                     clear_0:
   144  001E4E  6AEE               	clrf	postinc0,c
   145  001E50  06E8               	decf	wreg,f,c
   146  001E52  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to BANK1 (54 bytes)
   149  001E54  EE01  F0C8         	lfsr	0,__pbssBANK1
   150  001E58  0E36               	movlw	54
   151  001E5A                     clear_1:
   152  001E5A  6AEE               	clrf	postinc0,c
   153  001E5C  06E8               	decf	wreg,f,c
   154  001E5E  E1FD               	bnz	clear_1
   155                           
   156                           ; Clear objects allocated to COMRAM (56 bytes)
   157  001E60  EE00  F03C         	lfsr	0,__pbssCOMRAM
   158  001E64  0E38               	movlw	56
   159  001E66                     clear_2:
   160  001E66  6AEE               	clrf	postinc0,c
   161  001E68  06E8               	decf	wreg,f,c
   162  001E6A  E1FD               	bnz	clear_2
   163  001E6C                     end_of_initialization:
   164                           	opt stack 0
   165  001E6C                     __end_of__initialization:
   166                           	opt stack 0
   167  001E6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  001E6E  6EF8               	movwf	tblptru,c
   169  001E70  0100               	movlb	0
   170  001E72  EF90  F003         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  00003C                     __pbssCOMRAM:
   177                           	opt stack 0
   178  00003C                     _MQ_Main_Willing_to_block:
   179                           	opt stack 0
   180  00003C                     	ds	1
   181  00003D                     _USART_Status:
   182                           	opt stack 0
   183  00003D                     	ds	1
   184  00003E                     _ToMainLow_MQ:
   185                           	opt stack 0
   186  00003E                     	ds	54
   187                           tblptru	equ	0xFF8
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	bssBANK1
   192  0001C8                     __pbssBANK1:
   193                           	opt stack 0
   194  0001C8                     _ToMainHigh_MQ:
   195                           	opt stack 0
   196  0001C8                     	ds	54
   197                           tblptru	equ	0xFF8
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	bssBANK2
   202  000280                     __pbssBANK2:
   203                           	opt stack 0
   204  000280                     _FromMainHigh_MQ:
   205                           	opt stack 0
   206  000280                     	ds	54
   207  0002B6                     _FromMainLow_MQ:
   208                           	opt stack 0
   209  0002B6                     	ds	54
   210                           tblptru	equ	0xFF8
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	cstackBANK2
   215  000200                     __pcstackBANK2:
   216                           	opt stack 0
   217  000200                     main@uthread_data:
   218                           	opt stack 0
   219                           
   220                           ; 128 bytes @ 0x0
   221  000200                     	ds	128
   222                           tblptru	equ	0xFF8
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	cstackBANK1
   227  000100                     __pcstackBANK1:
   228                           	opt stack 0
   229  000100                     FromMainLow_sendmsg@msgtype:
   230                           	opt stack 0
   231  000100                     ToMainLow_recvmsg@msgtype:
   232                           	opt stack 0
   233  000100                     ToMainHigh_recvmsg@msgtype:
   234                           	opt stack 0
   235  000100                     timer1_lthread@x:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000100                     	ds	1
   240  000101                     FromMainLow_sendmsg@data:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x1
   244  000101                     	ds	1
   245  000102                     ToMainLow_recvmsg@data:
   246                           	opt stack 0
   247  000102                     ToMainHigh_recvmsg@data:
   248                           	opt stack 0
   249  000102                     timer1_lthread@y:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  000102                     	ds	1
   254  000103                     uart_lthread@uptr:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x3
   258  000103                     	ds	1
   259  000104                     ToMainLow_recvmsg@maxlength:
   260                           	opt stack 0
   261  000104                     ToMainHigh_recvmsg@maxlength:
   262                           	opt stack 0
   263  000104                     timer1_lthread@z:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x4
   267  000104                     	ds	1
   268  000105                     uart_lthread@msgtype:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x5
   272  000105                     	ds	1
   273  000106                     timer1_lthread@retval:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x6
   277  000106                     	ds	1
   278  000107                     timer1_lthread@even:
   279                           	opt stack 0
   280  000107                     uart_lthread@length:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x7
   284  000107                     	ds	2
   285  000109                     uart_lthread@msgbuffer:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x9
   289  000109                     	ds	2
   290  00010B                     uart_lthread@a:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0xB
   294  00010B                     	ds	2
   295  00010D                     uart_lthread@b:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xD
   299  00010D                     	ds	2
   300  00010F                     uart_lthread@c:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0xF
   304  00010F                     	ds	2
   305  000111                     uart_lthread@status:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x11
   309  000111                     	ds	1
   310  000112                     ??_main:
   311                           
   312                           ; 0 bytes @ 0x12
   313  000112                     	ds	1
   314  000113                     main@t0thread_data:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x13
   318  000113                     	ds	2
   319  000115                     main@msgbuffer:
   320                           	opt stack 0
   321                           
   322                           ; 11 bytes @ 0x15
   323  000115                     	ds	11
   324  000120                     main@last_reg_recvd:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x20
   328  000120                     	ds	1
   329  000121                     main@baud:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x21
   333  000121                     	ds	1
   334  000122                     main@UARTConfig:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x22
   338  000122                     	ds	1
   339  000123                     main@uc:
   340                           	opt stack 0
   341                           
   342                           ; 5 bytes @ 0x23
   343  000123                     	ds	5
   344  000128                     main@t1thread_data:
   345                           	opt stack 0
   346                           
   347                           ; 130 bytes @ 0x28
   348  000128                     	ds	130
   349  0001AA                     main@msgtype:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0xAA
   353  0001AA                     	ds	1
   354  0001AB                     main@length:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0xAB
   358  0001AB                     	ds	1
   359  0001AC                     main@ic:
   360                           	opt stack 0
   361                           
   362                           ; 28 bytes @ 0xAC
   363  0001AC                     	ds	28
   364                           tblptru	equ	0xFF8
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	cstackBANK0
   369  000080                     __pcstackBANK0:
   370                           	opt stack 0
   371  000080                     ?i2_in_high_int:
   372                           	opt stack 0
   373  000080                     handle_start@data_read:
   374                           	opt stack 0
   375  000080                     WriteTimer0@timer0:
   376                           	opt stack 0
   377  000080                     i2check_msg@qptr:
   378                           	opt stack 0
   379  000080                     i2memcpy@d1:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x0
   383  000080                     	ds	2
   384  000082                     ??i2_check_msg:
   385  000082                     ?i2_in_low_int:
   386                           	opt stack 0
   387  000082                     WriteTimer0@timer:
   388                           	opt stack 0
   389  000082                     i2memcpy@s1:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x2
   393  000082                     	ds	2
   394  000084                     i2memcpy@n:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398  000084                     	ds	2
   399  000086                     i2memcpy@d:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x6
   403  000086                     	ds	2
   404  000088                     i2memcpy@s:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x8
   408  000088                     	ds	2
   409  00008A                     i2send_msg@qptr:
   410                           	opt stack 0
   411  00008A                     i2recv_msg@qptr:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xA
   415  00008A                     	ds	2
   416  00008C                     i2send_msg@length:
   417                           	opt stack 0
   418  00008C                     i2recv_msg@maxlength:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422  00008C                     	ds	1
   423  00008D                     i2send_msg@msgtype:
   424                           	opt stack 0
   425  00008D                     i2recv_msg@msgtype:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0xD
   429  00008D                     	ds	1
   430  00008E                     i2send_msg@data:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xE
   434  00008E                     	ds	1
   435  00008F                     i2recv_msg@data:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0xF
   439  00008F                     	ds	1
   440  000090                     ??i2_send_msg:
   441                           
   442                           ; 0 bytes @ 0x10
   443  000090                     	ds	1
   444  000091                     ??i2_recv_msg:
   445  000091                     i2send_msg@tlength:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x11
   449  000091                     	ds	2
   450  000093                     i2send_msg@slot:
   451                           	opt stack 0
   452  000093                     i2recv_msg@slot:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x13
   456  000093                     	ds	1
   457  000094                     i2send_msg@qmsg:
   458                           	opt stack 0
   459  000094                     i2recv_msg@tlength:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x14
   463  000094                     	ds	2
   464  000096                     ToMainHigh_sendmsg@msgtype:
   465                           	opt stack 0
   466  000096                     i2recv_msg@qmsg:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x16
   470  000096                     	ds	1
   471  000097                     ToMainHigh_sendmsg@data:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x17
   475  000097                     	ds	1
   476  000098                     FromMainHigh_recvmsg@msgtype:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x18
   480  000098                     	ds	1
   481  000099                     ToMainHigh_sendmsg@length:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x19
   485  000099                     	ds	1
   486  00009A                     ??_i2c_int_handler:
   487  00009A                     FromMainHigh_recvmsg@data:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x1A
   491  00009A                     	ds	2
   492  00009C                     FromMainHigh_recvmsg@maxlength:
   493                           	opt stack 0
   494  00009C                     i2c_int_handler@error_buf:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x1C
   498  00009C                     	ds	1
   499  00009D                     ??_timer0_int_handler:
   500                           
   501                           ; 0 bytes @ 0x1D
   502  00009D                     	ds	1
   503  00009E                     timer0_int_handler@length:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x1E
   507  00009E                     	ds	1
   508  00009F                     i2c_int_handler@data_written:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x1F
   512  00009F                     	ds	1
   513  0000A0                     i2c_int_handler@overrun_error:
   514                           	opt stack 0
   515  0000A0                     timer0_int_handler@msgtype:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x20
   519  0000A0                     	ds	1
   520  0000A1                     i2c_int_handler@i2c_data:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x21
   524  0000A1                     	ds	1
   525  0000A2                     i2c_int_handler@msg_to_send:
   526                           	opt stack 0
   527  0000A2                     timer0_int_handler@val:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x22
   531  0000A2                     	ds	1
   532  0000A3                     i2c_int_handler@msg_ready:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x23
   536  0000A3                     	ds	1
   537  0000A4                     i2c_int_handler@data_read:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x24
   541  0000A4                     	ds	1
   542  0000A5                     ??_InterruptHandlerHigh:
   543                           
   544                           ; 0 bytes @ 0x25
   545  0000A5                     	ds	14
   546  0000B3                     ?_ReadTimer1:
   547                           	opt stack 0
   548  0000B3                     ?_in_high_int:
   549                           	opt stack 0
   550  0000B3                     ?___lwmod:
   551                           	opt stack 0
   552  0000B3                     i2c_configure_slave@addr:
   553                           	opt stack 0
   554  0000B3                     OpenTimer0@config:
   555                           	opt stack 0
   556  0000B3                     OpenTimer1@config:
   557                           	opt stack 0
   558  0000B3                     Delay1KTCYx@unit:
   559                           	opt stack 0
   560  0000B3                     init_queue@qptr:
   561                           	opt stack 0
   562  0000B3                     check_msg@qptr:
   563                           	opt stack 0
   564  0000B3                     start_i2c_slave_reply@msg:
   565                           	opt stack 0
   566  0000B3                     init_i2c@ic:
   567                           	opt stack 0
   568  0000B3                     init_uart_recv@uc:
   569                           	opt stack 0
   570  0000B3                     timer0_lthread@tptr:
   571                           	opt stack 0
   572  0000B3                     init_timer1_lthread@tptr:
   573                           	opt stack 0
   574  0000B3                     init_uart_lthread@uptr:
   575                           	opt stack 0
   576  0000B3                     OpenUSART@spbrg:
   577                           	opt stack 0
   578  0000B3                     ___lwmod@dividend:
   579                           	opt stack 0
   580  0000B3                     memcpy@d1:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x33
   584  0000B3                     	ds	2
   585  0000B5                     ??_OpenUSART:
   586  0000B5                     ??_start_i2c_slave_reply:
   587  0000B5                     ??_init_queue:
   588  0000B5                     ??_check_msg:
   589  0000B5                     ?_in_low_int:
   590                           	opt stack 0
   591  0000B5                     timer0_lthread@msgtype:
   592                           	opt stack 0
   593  0000B5                     ReadTimer1@timer:
   594                           	opt stack 0
   595  0000B5                     ___lwmod@divisor:
   596                           	opt stack 0
   597  0000B5                     memcpy@s1:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x35
   601  0000B5                     	ds	1
   602  0000B6                     init_queue@i:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x36
   606  0000B6                     	ds	1
   607  0000B7                     ??_init_queues:
   608  0000B7                     ??___lwmod:
   609  0000B7                     ?_in_main:
   610                           	opt stack 0
   611  0000B7                     start_i2c_slave_reply@length:
   612                           	opt stack 0
   613  0000B7                     timer0_lthread@length:
   614                           	opt stack 0
   615  0000B7                     memcpy@n:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x37
   619  0000B7                     	ds	1
   620  0000B8                     OpenUSART@config:
   621                           	opt stack 0
   622  0000B8                     ___lwmod@counter:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x38
   626  0000B8                     	ds	1
   627  0000B9                     ??_block_on_To_msgqueues:
   628  0000B9                     timer0_lthread@msgbuffer:
   629                           	opt stack 0
   630  0000B9                     timer1_lthread@tptr:
   631                           	opt stack 0
   632  0000B9                     memcpy@d:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x39
   636  0000B9                     	ds	2
   637  0000BB                     timer0_lthread@msgval:
   638                           	opt stack 0
   639  0000BB                     timer1_lthread@msgtype:
   640                           	opt stack 0
   641  0000BB                     memcpy@s:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x3B
   645  0000BB                     	ds	2
   646  0000BD                     send_msg@qptr:
   647                           	opt stack 0
   648  0000BD                     recv_msg@qptr:
   649                           	opt stack 0
   650  0000BD                     timer1_lthread@length:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x3D
   654  0000BD                     	ds	2
   655  0000BF                     send_msg@length:
   656                           	opt stack 0
   657  0000BF                     recv_msg@maxlength:
   658                           	opt stack 0
   659  0000BF                     timer1_lthread@msgbuffer:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x3F
   663  0000BF                     	ds	1
   664  0000C0                     send_msg@msgtype:
   665                           	opt stack 0
   666  0000C0                     recv_msg@msgtype:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x40
   670  0000C0                     	ds	1
   671  0000C1                     ??_timer1_lthread:
   672  0000C1                     send_msg@data:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x41
   676  0000C1                     	ds	1
   677  0000C2                     recv_msg@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x42
   681  0000C2                     	ds	1
   682  0000C3                     ??_send_msg:
   683                           
   684                           ; 0 bytes @ 0x43
   685  0000C3                     	ds	1
   686  0000C4                     ??_recv_msg:
   687  0000C4                     send_msg@tlength:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x44
   691  0000C4                     	ds	2
   692  0000C6                     send_msg@slot:
   693                           	opt stack 0
   694  0000C6                     recv_msg@slot:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x46
   698  0000C6                     	ds	1
   699  0000C7                     send_msg@qmsg:
   700                           	opt stack 0
   701  0000C7                     recv_msg@tlength:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x47
   705  0000C7                     	ds	2
   706  0000C9                     FromMainLow_sendmsg@length:
   707                           	opt stack 0
   708  0000C9                     recv_msg@qmsg:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x49
   712  0000C9                     	ds	1
   713  0000CA                     ??_uart_lthread:
   714                           
   715                           ; 0 bytes @ 0x4A
   716  0000CA                     	ds	1
   717  0000CB                     tblptru	equ	0xFF8
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           
   721                           ; 0 bytes @ 0x4B
   722                           
   723                           	psect	cstackCOMRAM
   724  000001                     __pcstackCOMRAM:
   725                           	opt stack 0
   726  000001                     ?i1_ReadTimer1:
   727                           	opt stack 0
   728  000001                     ReadUSART@data:
   729                           	opt stack 0
   730  000001                     WriteTimer1@timer1:
   731                           	opt stack 0
   732  000001                     i1memcpy@d1:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x0
   736  000001                     	ds	2
   737  000003                     WriteTimer1@timer:
   738                           	opt stack 0
   739  000003                     i1ReadTimer1@timer:
   740                           	opt stack 0
   741  000003                     i1memcpy@s1:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x2
   745  000003                     	ds	2
   746  000005                     i1memcpy@n:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x4
   750  000005                     	ds	2
   751  000007                     i1memcpy@d:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x6
   755  000007                     	ds	2
   756  000009                     i1memcpy@s:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x8
   760  000009                     	ds	2
   761  00000B                     i1send_msg@qptr:
   762                           	opt stack 0
   763  00000B                     i1recv_msg@qptr:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0xA
   767  00000B                     	ds	2
   768  00000D                     i1send_msg@length:
   769                           	opt stack 0
   770  00000D                     i1recv_msg@maxlength:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0xC
   774  00000D                     	ds	1
   775  00000E                     i1send_msg@msgtype:
   776                           	opt stack 0
   777  00000E                     i1recv_msg@msgtype:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0xD
   781  00000E                     	ds	1
   782  00000F                     i1send_msg@data:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0xE
   786  00000F                     	ds	1
   787  000010                     i1recv_msg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xF
   791  000010                     	ds	1
   792  000011                     ??i1_send_msg:
   793                           
   794                           ; 0 bytes @ 0x10
   795  000011                     	ds	1
   796  000012                     ??i1_recv_msg:
   797  000012                     i1send_msg@tlength:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x11
   801  000012                     	ds	2
   802  000014                     i1send_msg@slot:
   803                           	opt stack 0
   804  000014                     i1recv_msg@slot:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x13
   808  000014                     	ds	1
   809  000015                     i1send_msg@qmsg:
   810                           	opt stack 0
   811  000015                     i1recv_msg@tlength:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x14
   815  000015                     	ds	2
   816  000017                     ToMainLow_sendmsg@msgtype:
   817                           	opt stack 0
   818  000017                     i1recv_msg@qmsg:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x16
   822  000017                     	ds	1
   823  000018                     ToMainLow_sendmsg@data:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x17
   827  000018                     	ds	1
   828  000019                     FromMainLow_recvmsg@msgtype:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x18
   832  000019                     	ds	1
   833  00001A                     ToMainLow_sendmsg@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x19
   837  00001A                     	ds	1
   838  00001B                     ??_timer1_int_handler:
   839  00001B                     ??_uart_recv_int_handler:
   840  00001B                     FromMainLow_recvmsg@data:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x1A
   844  00001B                     	ds	1
   845  00001C                     timer1_int_handler@result:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x1B
   849  00001C                     	ds	1
   850  00001D                     FromMainLow_recvmsg@maxlength:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x1C
   854  00001D                     	ds	1
   855  00001E                     ??_uart_trans_int_handler:
   856                           
   857                           ; 0 bytes @ 0x1D
   858  00001E                     	ds	1
   859  00001F                     uart_trans_int_handler@l:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x1E
   863  00001F                     	ds	2
   864  000021                     uart_trans_int_handler@m:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x20
   868  000021                     	ds	2
   869  000023                     uart_trans_int_handler@n:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x22
   873  000023                     	ds	2
   874  000025                     uart_trans_int_handler@numBytes:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x24
   878  000025                     	ds	1
   879  000026                     uart_trans_int_handler@length:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x25
   883  000026                     	ds	1
   884  000027                     uart_trans_int_handler@curIndex:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x26
   888  000027                     	ds	1
   889  000028                     uart_trans_int_handler@msgtype:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x27
   893  000028                     	ds	1
   894  000029                     uart_trans_int_handler@data:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x28
   898  000029                     	ds	2
   899  00002B                     ??_InterruptHandlerLow:
   900                           
   901                           ; 0 bytes @ 0x2A
   902  00002B                     	ds	17
   903                           tblptru	equ	0xFF8
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 186 in file "src/main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  t1thread_dat  130   40[BANK1 ] struct __timer1_thread_s
   917 ;;  uthread_data  128    0[BANK2 ] struct __uart_thread_str
   918 ;;  ic             28  172[BANK1 ] struct __i2c_comm
   919 ;;  msgbuffer      11   21[BANK1 ] unsigned char [11]
   920 ;;  uc              5   35[BANK1 ] struct __uart_comm
   921 ;;  t0thread_dat    2   19[BANK1 ] struct __timer0_thread_s
   922 ;;  length          1  171[BANK1 ] char 
   923 ;;  msgtype         1  170[BANK1 ] unsigned char 
   924 ;;  UARTConfig      1   34[BANK1 ] unsigned char 
   925 ;;  baud            1   33[BANK1 ] unsigned char 
   926 ;;  last_reg_rec    1   32[BANK1 ] unsigned char 
   927 ;;  i               1    0        unsigned char 
   928 ;;  c               1    0        unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;		None               void
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0     181     128       0
   940 ;;      Temps:          0       0       1       0       0
   941 ;;      Totals:         0       0     182     128       0
   942 ;;Total ram usage:      310 bytes
   943 ;; Hardware stack levels required when called:   14
   944 ;; This function calls:
   945 ;;		_OpenTimer0
   946 ;;		_OpenTimer1
   947 ;;		_OpenUSART
   948 ;;		_ToMainHigh_recvmsg
   949 ;;		_ToMainLow_recvmsg
   950 ;;		_block_on_To_msgqueues
   951 ;;		_enable_interrupts
   952 ;;		_i2c_configure_slave
   953 ;;		_init_i2c
   954 ;;		_init_queues
   955 ;;		_init_timer1_lthread
   956 ;;		_init_uart_lthread
   957 ;;		_init_uart_recv
   958 ;;		_start_i2c_slave_reply
   959 ;;		_timer0_lthread
   960 ;;		_timer1_lthread
   961 ;;		_uart_lthread
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text0
   968  000720                     __ptext0:
   969                           	opt stack 0
   970  000720                     _main:
   971                           	opt stack 17
   972                           
   973                           ;main.c: 187: char c;
   974                           ;main.c: 188: signed char length;
   975                           ;main.c: 189: unsigned char msgtype;
   976                           ;main.c: 190: unsigned char last_reg_recvd;
   977                           ;main.c: 191: unsigned char baud, UARTConfig;
   978                           ;main.c: 192: uart_comm uc;
   979                           ;main.c: 193: i2c_comm ic;
   980                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   981                           ;main.c: 195: unsigned char i;
   982                           ;main.c: 196: uart_thread_struct uthread_data;
   983                           ;main.c: 197: timer1_thread_struct t1thread_data;
   984                           ;main.c: 198: timer0_thread_struct t0thread_data;
   985                           ;main.c: 206: OSCCON = 0x82;
   986                           
   987                           ;incstack = 0
   988  000720  0E82               	movlw	130
   989  000722  6ED3               	movwf	4051,c	;volatile
   990                           
   991                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   992  000724  9C9B               	bcf	3995,6,c	;volatile
   993                           
   994                           ;main.c: 225: init_uart_recv(&uc);
   995  000726  0101               	movlb	1	; () banked
   996  000728  0E01               	movlw	high main@uc
   997  00072A  0100               	movlb	0	; () banked
   998  00072C  0100               	movlb	0	; () banked
   999  00072E  6FB4               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1000  000730  0101               	movlb	1	; () banked
  1001  000732  0E23               	movlw	low main@uc
  1002  000734  0100               	movlb	0	; () banked
  1003  000736  0100               	movlb	0	; () banked
  1004  000738  6FB3               	movwf	init_uart_recv@uc& (0+255),b
  1005  00073A  EC89  F00F         	call	_init_uart_recv	;wreg free
  1006                           
  1007                           ;main.c: 228: init_i2c(&ic);
  1008  00073E  0101               	movlb	1	; () banked
  1009  000740  0E01               	movlw	high main@ic
  1010  000742  0100               	movlb	0	; () banked
  1011  000744  0100               	movlb	0	; () banked
  1012  000746  6FB4               	movwf	(init_i2c@ic+1)& (0+255),b
  1013  000748  0101               	movlb	1	; () banked
  1014  00074A  0EAC               	movlw	low main@ic
  1015  00074C  0100               	movlb	0	; () banked
  1016  00074E  0100               	movlb	0	; () banked
  1017  000750  6FB3               	movwf	init_i2c@ic& (0+255),b
  1018  000752  ECAB  F00C         	call	_init_i2c	;wreg free
  1019                           
  1020                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
  1021  000756  0101               	movlb	1	; () banked
  1022  000758  0E01               	movlw	high main@t1thread_data
  1023  00075A  0100               	movlb	0	; () banked
  1024  00075C  0100               	movlb	0	; () banked
  1025  00075E  6FB4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1026  000760  0101               	movlb	1	; () banked
  1027  000762  0E28               	movlw	low main@t1thread_data
  1028  000764  0100               	movlb	0	; () banked
  1029  000766  0100               	movlb	0	; () banked
  1030  000768  6FB3               	movwf	init_timer1_lthread@tptr& (0+255),b
  1031  00076A  EC71  F00D         	call	_init_timer1_lthread	;wreg free
  1032                           
  1033                           ;main.c: 234: init_uart_lthread(&uthread_data);
  1034  00076E  0102               	movlb	2	; () banked
  1035  000770  0E02               	movlw	high main@uthread_data
  1036  000772  0100               	movlb	0	; () banked
  1037  000774  0100               	movlb	0	; () banked
  1038  000776  6FB4               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1039  000778  0102               	movlb	2	; () banked
  1040  00077A  0E00               	movlw	low main@uthread_data
  1041  00077C  0100               	movlb	0	; () banked
  1042  00077E  0100               	movlb	0	; () banked
  1043  000780  6FB3               	movwf	init_uart_lthread@uptr& (0+255),b
  1044  000782  ECF8  F00F         	call	_init_uart_lthread	;wreg free
  1045                           
  1046                           ;main.c: 238: init_queues();
  1047  000786  EC76  F00C         	call	_init_queues	;wreg free
  1048                           
  1049                           ;main.c: 242: TRISB = 0x0;
  1050  00078A  0E00               	movlw	0
  1051  00078C  6E93               	movwf	3987,c	;volatile
  1052                           
  1053                           ;main.c: 243: LATB = 0x0;
  1054  00078E  0E00               	movlw	0
  1055  000790  6E8A               	movwf	3978,c	;volatile
  1056                           
  1057                           ;main.c: 247: PORTA = 0x0;
  1058  000792  0E00               	movlw	0
  1059  000794  6E80               	movwf	3968,c	;volatile
  1060                           
  1061                           ;main.c: 248: LATA = 0x0;
  1062  000796  0E00               	movlw	0
  1063  000798  6E89               	movwf	3977,c	;volatile
  1064                           
  1065                           ;main.c: 249: ADCON1 = 0x0F;
  1066  00079A  0E0F               	movlw	15
  1067  00079C  6EC1               	movwf	4033,c	;volatile
  1068                           
  1069                           ;main.c: 250: CMCON = 0x07;
  1070  00079E  0E07               	movlw	7
  1071  0007A0  6EB4               	movwf	4020,c	;volatile
  1072                           
  1073                           ;main.c: 251: TRISA = 0x00;
  1074  0007A2  0E00               	movlw	0
  1075  0007A4  6E92               	movwf	3986,c	;volatile
  1076                           
  1077                           ;main.c: 255: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1078  0007A6  0E96               	movlw	150
  1079  0007A8  EC3B  F00F         	call	_OpenTimer0
  1080                           
  1081                           ;main.c: 264: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1082  0007AC  0EF5               	movlw	245
  1083  0007AE  EC84  F00E         	call	_OpenTimer1
  1084                           
  1085                           ;main.c: 277: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1086  0007B2  0101               	movlb	1	; () banked
  1087  0007B4  6F12               	movwf	??_main& (0+255),b
  1088  0007B6  0EFC               	movlw	252
  1089  0007B8  0101               	movlb	1	; () banked
  1090  0007BA  0101               	movlb	1	; () banked
  1091  0007BC  6F22               	movwf	main@UARTConfig& (0+255),b
  1092  0007BE  0101               	movlb	1	; () banked
  1093  0007C0  5112               	movf	??_main& (0+255),w,b
  1094                           
  1095                           ; BSR set to: 1
  1096                           ;main.c: 278: baud = 77;
  1097  0007C2  0101               	movlb	1	; () banked
  1098  0007C4  6F12               	movwf	??_main& (0+255),b
  1099  0007C6  0E4D               	movlw	77
  1100  0007C8  0101               	movlb	1	; () banked
  1101  0007CA  0101               	movlb	1	; () banked
  1102  0007CC  6F21               	movwf	main@baud& (0+255),b
  1103  0007CE  0101               	movlb	1	; () banked
  1104  0007D0  5112               	movf	??_main& (0+255),w,b
  1105                           
  1106                           ; BSR set to: 1
  1107                           ;main.c: 279: OpenUSART(UARTConfig,baud);
  1108  0007D2  0101               	movlb	1	; () banked
  1109  0007D4  0100               	movlb	0	; () banked
  1110  0007D6  C121  F0B3         	movff	main@baud,OpenUSART@spbrg
  1111  0007DA  0100               	movlb	0	; () banked
  1112  0007DC  0100               	movlb	0	; () banked
  1113  0007DE  6BB4               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1114  0007E0  0101               	movlb	1	; () banked
  1115  0007E2  0101               	movlb	1	; () banked
  1116  0007E4  5122               	movf	main@UARTConfig& (0+255),w,b
  1117  0007E6  ECE8  F00A         	call	_OpenUSART
  1118                           
  1119                           ;main.c: 286: IPR1bits.TMR1IP = 0;
  1120  0007EA  909F               	bcf	3999,0,c	;volatile
  1121                           
  1122                           ;main.c: 288: IPR1bits.RCIP = 0;
  1123  0007EC  9A9F               	bcf	3999,5,c	;volatile
  1124                           
  1125                           ;main.c: 290: IPR1bits.TXIP = 0;
  1126  0007EE  989F               	bcf	3999,4,c	;volatile
  1127                           
  1128                           ;main.c: 292: IPR1bits.SSPIP = 1;
  1129  0007F0  869F               	bsf	3999,3,c	;volatile
  1130                           
  1131                           ;main.c: 301: i2c_configure_slave(0x9E);
  1132  0007F2  0E9E               	movlw	158
  1133  0007F4  EC50  F00F         	call	_i2c_configure_slave
  1134                           
  1135                           ;main.c: 316: PIE1bits.SSPIE = 1;
  1136  0007F8  869D               	bsf	3997,3,c	;volatile
  1137                           
  1138                           ;main.c: 320: enable_interrupts();
  1139  0007FA  ECF1  F00F         	call	_enable_interrupts	;wreg free
  1140  0007FE                     l3434:
  1141                           
  1142                           ;main.c: 344: block_on_To_msgqueues();
  1143  0007FE  EC39  F00C         	call	_block_on_To_msgqueues	;wreg free
  1144                           
  1145                           ;main.c: 351: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1146  000802  0101               	movlb	1	; () banked
  1147  000804  0E01               	movlw	high main@msgtype
  1148  000806  0101               	movlb	1	; () banked
  1149  000808  0101               	movlb	1	; () banked
  1150  00080A  6F01               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1151  00080C  0101               	movlb	1	; () banked
  1152  00080E  0EAA               	movlw	low main@msgtype
  1153  000810  0101               	movlb	1	; () banked
  1154  000812  0101               	movlb	1	; () banked
  1155  000814  6F00               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1156  000816  0101               	movlb	1	; () banked
  1157  000818  0E01               	movlw	high main@msgbuffer
  1158  00081A  0101               	movlb	1	; () banked
  1159  00081C  0101               	movlb	1	; () banked
  1160  00081E  6F03               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1161  000820  0101               	movlb	1	; () banked
  1162  000822  0E15               	movlw	low main@msgbuffer
  1163  000824  0101               	movlb	1	; () banked
  1164  000826  0101               	movlb	1	; () banked
  1165  000828  6F02               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1166  00082A  0E0A               	movlw	10
  1167  00082C  EC03  F00E         	call	_ToMainHigh_recvmsg
  1168  000830  0101               	movlb	1	; () banked
  1169  000832  0101               	movlb	1	; () banked
  1170  000834  6FAB               	movwf	main@length& (0+255),b
  1171                           
  1172                           ; BSR set to: 1
  1173                           ;main.c: 352: if (length < 0) {
  1174  000836  0101               	movlb	1	; () banked
  1175  000838  0101               	movlb	1	; () banked
  1176  00083A  BFAB               	btfsc	main@length& (0+255),7,b
  1177  00083C  D08D               	goto	l3460
  1178  00083E  D07D               	goto	l3458
  1179  000840                     l3442:
  1180                           
  1181                           ; BSR set to: 1
  1182                           ;main.c: 360: {
  1183                           ;main.c: 361: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1184  000840  0101               	movlb	1	; () banked
  1185  000842  0E01               	movlw	high main@t0thread_data
  1186  000844  0100               	movlb	0	; () banked
  1187  000846  0100               	movlb	0	; () banked
  1188  000848  6FB4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1189  00084A  0101               	movlb	1	; () banked
  1190  00084C  0E13               	movlw	low main@t0thread_data
  1191  00084E  0100               	movlb	0	; () banked
  1192  000850  0100               	movlb	0	; () banked
  1193  000852  6FB3               	movwf	timer0_lthread@tptr& (0+255),b
  1194  000854  0101               	movlb	1	; () banked
  1195  000856  0100               	movlb	0	; () banked
  1196  000858  C1AA  F0B5         	movff	main@msgtype,timer0_lthread@msgtype
  1197  00085C  0100               	movlb	0	; () banked
  1198  00085E  0100               	movlb	0	; () banked
  1199  000860  6BB6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1200  000862  0101               	movlb	1	; () banked
  1201  000864  0101               	movlb	1	; () banked
  1202  000866  51AB               	movf	main@length& (0+255),w,b
  1203  000868  0100               	movlb	0	; () banked
  1204  00086A  0100               	movlb	0	; () banked
  1205  00086C  6FB7               	movwf	timer0_lthread@length& (0+255),b
  1206  00086E  0100               	movlb	0	; () banked
  1207  000870  6BB8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1208  000872  0100               	movlb	0	; () banked
  1209  000874  BFB7               	btfsc	timer0_lthread@length& (0+255),7,b
  1210  000876  07B8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1211  000878  0101               	movlb	1	; () banked
  1212  00087A  0E01               	movlw	high main@msgbuffer
  1213  00087C  0100               	movlb	0	; () banked
  1214  00087E  0100               	movlb	0	; () banked
  1215  000880  6FBA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1216  000882  0101               	movlb	1	; () banked
  1217  000884  0E15               	movlw	low main@msgbuffer
  1218  000886  0100               	movlb	0	; () banked
  1219  000888  0100               	movlb	0	; () banked
  1220  00088A  6FB9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1221  00088C  ECBB  F00F         	call	_timer0_lthread	;wreg free
  1222                           
  1223                           ;main.c: 362: break;
  1224  000890  D063               	goto	l3460
  1225  000892                     l119:
  1226                           
  1227                           ;main.c: 365: case 41:
  1228                           ;main.c: 366: {
  1229                           ;main.c: 369: last_reg_recvd = msgbuffer[0];
  1230  000892  C115  F120         	movff	main@msgbuffer,main@last_reg_recvd
  1231                           
  1232                           ;main.c: 370: break;
  1233  000896  D060               	goto	l3460
  1234  000898                     l3444:
  1235                           
  1236                           ;main.c: 383: {
  1237                           ;main.c: 384: length = 2;
  1238  000898  0101               	movlb	1	; () banked
  1239  00089A  6F12               	movwf	??_main& (0+255),b
  1240  00089C  0E02               	movlw	2
  1241  00089E  0101               	movlb	1	; () banked
  1242  0008A0  0101               	movlb	1	; () banked
  1243  0008A2  6FAB               	movwf	main@length& (0+255),b
  1244  0008A4  0101               	movlb	1	; () banked
  1245  0008A6  5112               	movf	??_main& (0+255),w,b
  1246                           
  1247                           ;main.c: 385: msgbuffer[0] = 0x55;
  1248  0008A8  0101               	movlb	1	; () banked
  1249  0008AA  6F12               	movwf	??_main& (0+255),b
  1250  0008AC  0E55               	movlw	85
  1251  0008AE  0101               	movlb	1	; () banked
  1252  0008B0  0101               	movlb	1	; () banked
  1253  0008B2  6F15               	movwf	main@msgbuffer& (0+255),b
  1254  0008B4  0101               	movlb	1	; () banked
  1255  0008B6  5112               	movf	??_main& (0+255),w,b
  1256                           
  1257                           ;main.c: 386: msgbuffer[1] = 0xAA;
  1258  0008B8  0101               	movlb	1	; () banked
  1259  0008BA  6F12               	movwf	??_main& (0+255),b
  1260  0008BC  0EAA               	movlw	170
  1261  0008BE  0101               	movlb	1	; () banked
  1262  0008C0  0101               	movlb	1	; () banked
  1263  0008C2  6F16               	movwf	(main@msgbuffer+1)& (0+255),b
  1264  0008C4  D00C               	goto	L1
  1265  0008C6                     l3446:
  1266                           
  1267                           ; BSR set to: 1
  1268                           ;main.c: 390: {
  1269                           ;main.c: 391: length = 1;
  1270  0008C6  0101               	movlb	1	; () banked
  1271  0008C8  6F12               	movwf	??_main& (0+255),b
  1272  0008CA  0E01               	movlw	1
  1273  0008CC  0101               	movlb	1	; () banked
  1274  0008CE  0101               	movlb	1	; () banked
  1275  0008D0  6FAB               	movwf	main@length& (0+255),b
  1276  0008D2  0101               	movlb	1	; () banked
  1277  0008D4  5112               	movf	??_main& (0+255),w,b
  1278                           
  1279                           ;main.c: 392: msgbuffer[0] = 0x3A;
  1280  0008D6  0101               	movlb	1	; () banked
  1281  0008D8  6F12               	movwf	??_main& (0+255),b
  1282  0008DA  0E3A               	movlw	58
  1283  0008DC  D00E               	goto	L2
  1284  0008DE                     L1:
  1285  0008DE  0101               	movlb	1	; () banked
  1286  0008E0  5112               	movf	??_main& (0+255),w,b
  1287                           
  1288                           ;main.c: 393: break;
  1289  0008E2  D01B               	goto	l3454
  1290  0008E4                     l3448:
  1291                           
  1292                           ; BSR set to: 1
  1293                           ;main.c: 396: {
  1294                           ;main.c: 397: length = 1;
  1295  0008E4  0101               	movlb	1	; () banked
  1296  0008E6  6F12               	movwf	??_main& (0+255),b
  1297  0008E8  0E01               	movlw	1
  1298  0008EA  0101               	movlb	1	; () banked
  1299  0008EC  0101               	movlb	1	; () banked
  1300  0008EE  6FAB               	movwf	main@length& (0+255),b
  1301  0008F0  0101               	movlb	1	; () banked
  1302  0008F2  5112               	movf	??_main& (0+255),w,b
  1303                           
  1304                           ;main.c: 398: msgbuffer[0] = 0xA3;
  1305  0008F4  0101               	movlb	1	; () banked
  1306  0008F6  6F12               	movwf	??_main& (0+255),b
  1307  0008F8  0EA3               	movlw	163
  1308  0008FA                     L2:
  1309  0008FA  0101               	movlb	1	; () banked
  1310  0008FC  0101               	movlb	1	; () banked
  1311  0008FE  6F15               	movwf	main@msgbuffer& (0+255),b
  1312  000900  D7EE               	goto	L1
  1313  000902                     l3452:
  1314  000902  0101               	movlb	1	; () banked
  1315  000904  0101               	movlb	1	; () banked
  1316  000906  5120               	movf	main@last_reg_recvd& (0+255),w,b
  1317                           
  1318                           ; Switch size 1, requested type "space"
  1319                           ; Number of cases is 3, Range of values is 168 to 170
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           10     6 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324  000908  0AA8               	xorlw	168	; case 168
  1325  00090A  B4D8               	btfsc	status,2,c
  1326  00090C  D7DC               	goto	l3446
  1327  00090E  0A01               	xorlw	1	; case 169
  1328  000910  B4D8               	btfsc	status,2,c
  1329  000912  D7E8               	goto	l3448
  1330  000914  0A03               	xorlw	3	; case 170
  1331  000916  B4D8               	btfsc	status,2,c
  1332  000918  D7BF               	goto	l3444
  1333  00091A                     l3454:
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 402: start_i2c_slave_reply(length, msgbuffer);
  1337  00091A  0101               	movlb	1	; () banked
  1338  00091C  0E01               	movlw	high main@msgbuffer
  1339  00091E  0100               	movlb	0	; () banked
  1340  000920  0100               	movlb	0	; () banked
  1341  000922  6FB4               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1342  000924  0101               	movlb	1	; () banked
  1343  000926  0E15               	movlw	low main@msgbuffer
  1344  000928  0100               	movlb	0	; () banked
  1345  00092A  0100               	movlb	0	; () banked
  1346  00092C  6FB3               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1347  00092E  0101               	movlb	1	; () banked
  1348  000930  0101               	movlb	1	; () banked
  1349  000932  51AB               	movf	main@length& (0+255),w,b
  1350  000934  EC25  F007         	call	_start_i2c_slave_reply
  1351                           
  1352                           ;main.c: 403: break;
  1353  000938  D00F               	goto	l3460
  1354  00093A                     l3458:
  1355  00093A  0101               	movlb	1	; () banked
  1356  00093C  0101               	movlb	1	; () banked
  1357  00093E  51AA               	movf	main@msgtype& (0+255),w,b
  1358                           
  1359                           ; Switch size 1, requested type "space"
  1360                           ; Number of cases is 4, Range of values is 10 to 42
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           13     7 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365  000940  0A0A               	xorlw	10	; case 10
  1366  000942  B4D8               	btfsc	status,2,c
  1367  000944  D77D               	goto	l3442
  1368  000946  0A22               	xorlw	34	; case 40
  1369  000948  B4D8               	btfsc	status,2,c
  1370  00094A  D7A3               	goto	l119
  1371  00094C  0A01               	xorlw	1	; case 41
  1372  00094E  B4D8               	btfsc	status,2,c
  1373  000950  D7A0               	goto	l119
  1374  000952  0A03               	xorlw	3	; case 42
  1375  000954  B4D8               	btfsc	status,2,c
  1376  000956  D7D5               	goto	l3452
  1377  000958                     l3460:
  1378                           
  1379                           ;main.c: 411: }
  1380                           ;main.c: 414: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1381  000958  0101               	movlb	1	; () banked
  1382  00095A  0E01               	movlw	high main@msgtype
  1383  00095C  0101               	movlb	1	; () banked
  1384  00095E  0101               	movlb	1	; () banked
  1385  000960  6F01               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1386  000962  0101               	movlb	1	; () banked
  1387  000964  0EAA               	movlw	low main@msgtype
  1388  000966  0101               	movlb	1	; () banked
  1389  000968  0101               	movlb	1	; () banked
  1390  00096A  6F00               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1391  00096C  0101               	movlb	1	; () banked
  1392  00096E  0E01               	movlw	high main@msgbuffer
  1393  000970  0101               	movlb	1	; () banked
  1394  000972  0101               	movlb	1	; () banked
  1395  000974  6F03               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1396  000976  0101               	movlb	1	; () banked
  1397  000978  0E15               	movlw	low main@msgbuffer
  1398  00097A  0101               	movlb	1	; () banked
  1399  00097C  0101               	movlb	1	; () banked
  1400  00097E  6F02               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1401  000980  0E0A               	movlw	10
  1402  000982  EC65  F00E         	call	_ToMainLow_recvmsg
  1403  000986  0101               	movlb	1	; () banked
  1404  000988  0101               	movlb	1	; () banked
  1405  00098A  6FAB               	movwf	main@length& (0+255),b
  1406                           
  1407                           ; BSR set to: 1
  1408                           ;main.c: 415: if (length < 0) {
  1409  00098C  0101               	movlb	1	; () banked
  1410  00098E  0101               	movlb	1	; () banked
  1411  000990  BFAB               	btfsc	main@length& (0+255),7,b
  1412  000992  D735               	goto	l3434
  1413  000994  D052               	goto	l3472
  1414  000996                     l3466:
  1415                           
  1416                           ; BSR set to: 1
  1417                           ;main.c: 423: {
  1418                           ;main.c: 424: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1419  000996  0101               	movlb	1	; () banked
  1420  000998  0E01               	movlw	high main@t1thread_data
  1421  00099A  0100               	movlb	0	; () banked
  1422  00099C  0100               	movlb	0	; () banked
  1423  00099E  6FBA               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1424  0009A0  0101               	movlb	1	; () banked
  1425  0009A2  0E28               	movlw	low main@t1thread_data
  1426  0009A4  0100               	movlb	0	; () banked
  1427  0009A6  0100               	movlb	0	; () banked
  1428  0009A8  6FB9               	movwf	timer1_lthread@tptr& (0+255),b
  1429  0009AA  0101               	movlb	1	; () banked
  1430  0009AC  0100               	movlb	0	; () banked
  1431  0009AE  C1AA  F0BB         	movff	main@msgtype,timer1_lthread@msgtype
  1432  0009B2  0100               	movlb	0	; () banked
  1433  0009B4  0100               	movlb	0	; () banked
  1434  0009B6  6BBC               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1435  0009B8  0101               	movlb	1	; () banked
  1436  0009BA  0101               	movlb	1	; () banked
  1437  0009BC  51AB               	movf	main@length& (0+255),w,b
  1438  0009BE  0100               	movlb	0	; () banked
  1439  0009C0  0100               	movlb	0	; () banked
  1440  0009C2  6FBD               	movwf	timer1_lthread@length& (0+255),b
  1441  0009C4  0100               	movlb	0	; () banked
  1442  0009C6  6BBE               	clrf	(timer1_lthread@length+1)& (0+255),b
  1443  0009C8  0100               	movlb	0	; () banked
  1444  0009CA  BFBD               	btfsc	timer1_lthread@length& (0+255),7,b
  1445  0009CC  07BE               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1446  0009CE  0101               	movlb	1	; () banked
  1447  0009D0  0E01               	movlw	high main@msgbuffer
  1448  0009D2  0100               	movlb	0	; () banked
  1449  0009D4  0100               	movlb	0	; () banked
  1450  0009D6  6FC0               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1451  0009D8  0101               	movlb	1	; () banked
  1452  0009DA  0E15               	movlw	low main@msgbuffer
  1453  0009DC  0100               	movlb	0	; () banked
  1454  0009DE  0100               	movlb	0	; () banked
  1455  0009E0  6FBF               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1456  0009E2  EC2D  F005         	call	_timer1_lthread	;wreg free
  1457                           
  1458                           ;main.c: 425: break;
  1459  0009E6  D70B               	goto	l3434
  1460  0009E8                     l3468:
  1461                           
  1462                           ;main.c: 428: case 31:
  1463                           ;main.c: 429: case 32:
  1464                           ;main.c: 430: {
  1465                           ;main.c: 431: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1466  0009E8  0102               	movlb	2	; () banked
  1467  0009EA  0E02               	movlw	high main@uthread_data
  1468  0009EC  0101               	movlb	1	; () banked
  1469  0009EE  0101               	movlb	1	; () banked
  1470  0009F0  6F04               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1471  0009F2  0102               	movlb	2	; () banked
  1472  0009F4  0E00               	movlw	low main@uthread_data
  1473  0009F6  0101               	movlb	1	; () banked
  1474  0009F8  0101               	movlb	1	; () banked
  1475  0009FA  6F03               	movwf	uart_lthread@uptr& (0+255),b
  1476  0009FC  0101               	movlb	1	; () banked
  1477  0009FE  0101               	movlb	1	; () banked
  1478  000A00  C1AA  F105         	movff	main@msgtype,uart_lthread@msgtype
  1479  000A04  0101               	movlb	1	; () banked
  1480  000A06  0101               	movlb	1	; () banked
  1481  000A08  6B06               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1482  000A0A  0101               	movlb	1	; () banked
  1483  000A0C  0101               	movlb	1	; () banked
  1484  000A0E  51AB               	movf	main@length& (0+255),w,b
  1485  000A10  0101               	movlb	1	; () banked
  1486  000A12  0101               	movlb	1	; () banked
  1487  000A14  6F07               	movwf	uart_lthread@length& (0+255),b
  1488  000A16  0101               	movlb	1	; () banked
  1489  000A18  6B08               	clrf	(uart_lthread@length+1)& (0+255),b
  1490  000A1A  0101               	movlb	1	; () banked
  1491  000A1C  BF07               	btfsc	uart_lthread@length& (0+255),7,b
  1492  000A1E  0708               	decf	(uart_lthread@length+1)& (0+255),f,b
  1493  000A20  0101               	movlb	1	; () banked
  1494  000A22  0E01               	movlw	high main@msgbuffer
  1495  000A24  0101               	movlb	1	; () banked
  1496  000A26  0101               	movlb	1	; () banked
  1497  000A28  6F0A               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1498  000A2A  0101               	movlb	1	; () banked
  1499  000A2C  0E15               	movlw	low main@msgbuffer
  1500  000A2E  0101               	movlb	1	; () banked
  1501  000A30  0101               	movlb	1	; () banked
  1502  000A32  6F09               	movwf	uart_lthread@msgbuffer& (0+255),b
  1503  000A34  ECB0  F008         	call	_uart_lthread	;wreg free
  1504                           
  1505                           ;main.c: 432: break;
  1506  000A38  D6E2               	goto	l3434
  1507  000A3A                     l3472:
  1508  000A3A  0101               	movlb	1	; () banked
  1509  000A3C  0101               	movlb	1	; () banked
  1510  000A3E  51AA               	movf	main@msgtype& (0+255),w,b
  1511                           
  1512                           ; Switch size 1, requested type "space"
  1513                           ; Number of cases is 4, Range of values is 11 to 32
  1514                           ; switch strategies available:
  1515                           ; Name         Instructions Cycles
  1516                           ; simple_byte           13     7 (average)
  1517                           ;	Chosen strategy is simple_byte
  1518  000A40  0A0B               	xorlw	11	; case 11
  1519  000A42  B4D8               	btfsc	status,2,c
  1520  000A44  D7A8               	goto	l3466
  1521  000A46  0A15               	xorlw	21	; case 30
  1522  000A48  B4D8               	btfsc	status,2,c
  1523  000A4A  D7CE               	goto	l3468
  1524  000A4C  0A01               	xorlw	1	; case 31
  1525  000A4E  B4D8               	btfsc	status,2,c
  1526  000A50  D7CB               	goto	l3468
  1527  000A52  0A3F               	xorlw	63	; case 32
  1528  000A54  B4D8               	btfsc	status,2,c
  1529  000A56  D7C8               	goto	l3468
  1530  000A58  D6D2               	goto	l3434
  1531  000A5A                     __end_of_main:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _uart_lthread *****************
  1539 ;; Defined at:
  1540 ;;		line 12 in file "src/uart_thread.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  uptr            2    3[BANK1 ] PTR struct __uart_thread
  1543 ;;		 -> main@uthread_data(128), 
  1544 ;;  msgtype         2    5[BANK1 ] int 
  1545 ;;  length          2    7[BANK1 ] int 
  1546 ;;  msgbuffer       2    9[BANK1 ] PTR unsigned char 
  1547 ;;		 -> main@msgbuffer(11), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  c               2   15[BANK1 ] int 
  1550 ;;  b               2   13[BANK1 ] int 
  1551 ;;  a               2   11[BANK1 ] int 
  1552 ;;  status          1   17[BANK1 ] char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  2    3[BANK1 ] int 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1562 ;;      Params:         0       0       8       0       0
  1563 ;;      Locals:         0       0       7       0       0
  1564 ;;      Temps:          0       1       0       0       0
  1565 ;;      Totals:         0       1      15       0       0
  1566 ;;Total ram usage:       16 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:   13
  1569 ;; This function calls:
  1570 ;;		_FromMainLow_sendmsg
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text1
  1577  001160                     __ptext1:
  1578                           	opt stack 0
  1579  001160                     _uart_lthread:
  1580                           	opt stack 17
  1581                           
  1582                           ;uart_thread.c: 13: if (msgtype == 30) {
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;incstack = 0
  1586  001160  0101               	movlb	1	; () banked
  1587  001162  0101               	movlb	1	; () banked
  1588  001164  5105               	movf	uart_lthread@msgtype& (0+255),w,b
  1589  001166  0A1E               	xorlw	30
  1590  001168  1106               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1591  00116A  B4D8               	btfsc	status,2,c
  1592  00116C  0012               	return	
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;uart_thread.c: 21: else if(msgtype == 31){
  1596                           
  1597                           ; BSR set to: 1
  1598                           
  1599                           ; BSR set to: 1
  1600                           ;uart_thread.c: 14: }
  1601  00116E  0101               	movlb	1	; () banked
  1602  001170  0101               	movlb	1	; () banked
  1603  001172  5105               	movf	uart_lthread@msgtype& (0+255),w,b
  1604  001174  0A1F               	xorlw	31
  1605  001176  1106               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1606  001178  A4D8               	btfss	status,2,c
  1607  00117A  D046               	goto	l3522
  1608                           
  1609                           ; BSR set to: 1
  1610                           ;uart_thread.c: 26: int a = uptr->data[0], b = uptr->data[1], c = uptr->data[2];
  1611  00117C  C103  FFD9         	movff	uart_lthread@uptr,fsr2l
  1612  001180  C104  FFDA         	movff	uart_lthread@uptr+1,fsr2h
  1613  001184  50DF               	movf	indf2,w,c
  1614  001186  0100               	movlb	0	; () banked
  1615  001188  6FCA               	movwf	??_uart_lthread& (0+255),b
  1616  00118A  0100               	movlb	0	; () banked
  1617  00118C  51CA               	movf	??_uart_lthread& (0+255),w,b
  1618  00118E  0101               	movlb	1	; () banked
  1619  001190  0101               	movlb	1	; () banked
  1620  001192  6F0B               	movwf	uart_lthread@a& (0+255),b
  1621  001194  0101               	movlb	1	; () banked
  1622  001196  6B0C               	clrf	(uart_lthread@a+1)& (0+255),b
  1623  001198  0101               	movlb	1	; () banked
  1624  00119A  EE20 F001          	lfsr	2,1
  1625  00119E  0101               	movlb	1	; () banked
  1626  0011A0  5103               	movf	uart_lthread@uptr& (0+255),w,b
  1627  0011A2  26D9               	addwf	fsr2l,f,c
  1628  0011A4  0101               	movlb	1	; () banked
  1629  0011A6  5104               	movf	(uart_lthread@uptr+1)& (0+255),w,b
  1630  0011A8  22DA               	addwfc	fsr2h,f,c
  1631  0011AA  50DF               	movf	indf2,w,c
  1632  0011AC  0100               	movlb	0	; () banked
  1633  0011AE  6FCA               	movwf	??_uart_lthread& (0+255),b
  1634  0011B0  0100               	movlb	0	; () banked
  1635  0011B2  51CA               	movf	??_uart_lthread& (0+255),w,b
  1636  0011B4  0101               	movlb	1	; () banked
  1637  0011B6  0101               	movlb	1	; () banked
  1638  0011B8  6F0D               	movwf	uart_lthread@b& (0+255),b
  1639  0011BA  0101               	movlb	1	; () banked
  1640  0011BC  6B0E               	clrf	(uart_lthread@b+1)& (0+255),b
  1641  0011BE  0101               	movlb	1	; () banked
  1642  0011C0  EE20 F002          	lfsr	2,2
  1643  0011C4  0101               	movlb	1	; () banked
  1644  0011C6  5103               	movf	uart_lthread@uptr& (0+255),w,b
  1645  0011C8  26D9               	addwf	fsr2l,f,c
  1646  0011CA  0101               	movlb	1	; () banked
  1647  0011CC  5104               	movf	(uart_lthread@uptr+1)& (0+255),w,b
  1648  0011CE  22DA               	addwfc	fsr2h,f,c
  1649  0011D0  50DF               	movf	indf2,w,c
  1650  0011D2  0100               	movlb	0	; () banked
  1651  0011D4  6FCA               	movwf	??_uart_lthread& (0+255),b
  1652  0011D6  0100               	movlb	0	; () banked
  1653  0011D8  51CA               	movf	??_uart_lthread& (0+255),w,b
  1654  0011DA  0101               	movlb	1	; () banked
  1655  0011DC  0101               	movlb	1	; () banked
  1656  0011DE  6F0F               	movwf	uart_lthread@c& (0+255),b
  1657  0011E0  0101               	movlb	1	; () banked
  1658  0011E2  6B10               	clrf	(uart_lthread@c+1)& (0+255),b
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;uart_thread.c: 29: signed char status = FromMainLow_sendmsg(sizeof(uptr->data), msgtype
      +                          , (void*)msgbuffer);
  1662  0011E4  C105  F100         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1663  0011E8  0101               	movlb	1	; () banked
  1664  0011EA  0101               	movlb	1	; () banked
  1665  0011EC  C10A  F102         	movff	uart_lthread@msgbuffer+1,FromMainLow_sendmsg@data+1
  1666  0011F0  0101               	movlb	1	; () banked
  1667  0011F2  0101               	movlb	1	; () banked
  1668  0011F4  C109  F101         	movff	uart_lthread@msgbuffer,FromMainLow_sendmsg@data
  1669  0011F8  0E80               	movlw	128
  1670  0011FA  ECA0  F00E         	call	_FromMainLow_sendmsg
  1671  0011FE  0101               	movlb	1	; () banked
  1672  001200  0101               	movlb	1	; () banked
  1673  001202  6F11               	movwf	uart_lthread@status& (0+255),b
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;uart_thread.c: 32: }
  1677                           ;uart_thread.c: 34: PIE1bits.TXIE = 1;
  1678                           
  1679                           ; BSR set to: 1
  1680  001204  889D               	bsf	3997,4,c	;volatile
  1681                           
  1682                           ;uart_thread.c: 35: }
  1683  001206  0012               	return	
  1684  001208                     l3522:
  1685                           
  1686                           ; BSR set to: 1
  1687                           ;uart_thread.c: 36: else if(msgtype == 32){
  1688  001208  0101               	movlb	1	; () banked
  1689  00120A  0101               	movlb	1	; () banked
  1690  00120C  5105               	movf	uart_lthread@msgtype& (0+255),w,b
  1691  00120E  0A20               	xorlw	32
  1692  001210  1106               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1693  001212  A4D8               	btfss	status,2,c
  1694  001214  0012               	return	
  1695                           
  1696                           ; BSR set to: 1
  1697                           ;uart_thread.c: 40: msgbuffer[length] = '\0';
  1698  001216  0101               	movlb	1	; () banked
  1699  001218  0101               	movlb	1	; () banked
  1700  00121A  5107               	movf	uart_lthread@length& (0+255),w,b
  1701  00121C  0101               	movlb	1	; () banked
  1702  00121E  0101               	movlb	1	; () banked
  1703  001220  2509               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1704  001222  6ED9               	movwf	fsr2l,c
  1705  001224  0101               	movlb	1	; () banked
  1706  001226  0101               	movlb	1	; () banked
  1707  001228  5108               	movf	(uart_lthread@length+1)& (0+255),w,b
  1708  00122A  0101               	movlb	1	; () banked
  1709  00122C  0101               	movlb	1	; () banked
  1710  00122E  210A               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1711  001230  6EDA               	movwf	fsr2h,c
  1712  001232  0E00               	movlw	0
  1713  001234  6EDF               	movwf	indf2,c
  1714  001236  0012               	return	
  1715  001238                     __end_of_uart_lthread:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           indf2	equ	0xFDF
  1721                           fsr2h	equ	0xFDA
  1722                           fsr2l	equ	0xFD9
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _FromMainLow_sendmsg *****************
  1726 ;; Defined at:
  1727 ;;		line 150 in file "src/messages.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  length          1    wreg     unsigned char 
  1730 ;;  msgtype         1    0[BANK1 ] unsigned char 
  1731 ;;  data            2    1[BANK1 ] PTR void 
  1732 ;;		 -> main@msgbuffer(11), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  length          1   73[BANK0 ] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      char 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1744 ;;      Params:         0       0       3       0       0
  1745 ;;      Locals:         0       1       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       1       3       0       0
  1748 ;;Total ram usage:        4 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:   12
  1751 ;; This function calls:
  1752 ;;		_send_msg
  1753 ;; This function is called by:
  1754 ;;		_uart_lthread
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text2
  1759  001D40                     __ptext2:
  1760                           	opt stack 0
  1761  001D40                     _FromMainLow_sendmsg:
  1762                           	opt stack 17
  1763                           
  1764                           ; BSR set to: 1
  1765                           ;incstack = 0
  1766                           ;FromMainLow_sendmsg@length stored from wreg
  1767  001D40  CFE8 F0C9          	movff	wreg,FromMainLow_sendmsg@length
  1768                           
  1769                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1770  001D44  0102               	movlb	2	; () banked
  1771  001D46  0E02               	movlw	high _FromMainLow_MQ
  1772  001D48  0100               	movlb	0	; () banked
  1773  001D4A  0100               	movlb	0	; () banked
  1774  001D4C  6FBE               	movwf	(send_msg@qptr+1)& (0+255),b
  1775  001D4E  0102               	movlb	2	; () banked
  1776  001D50  0EB6               	movlw	low _FromMainLow_MQ
  1777  001D52  0100               	movlb	0	; () banked
  1778  001D54  0100               	movlb	0	; () banked
  1779  001D56  6FBD               	movwf	send_msg@qptr& (0+255),b
  1780  001D58  C0C9  F0BF         	movff	FromMainLow_sendmsg@length,send_msg@length
  1781  001D5C  C100  F0C0         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1782  001D60  0101               	movlb	1	; () banked
  1783  001D62  0100               	movlb	0	; () banked
  1784  001D64  C102  F0C2         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1785  001D68  0101               	movlb	1	; () banked
  1786  001D6A  0100               	movlb	0	; () banked
  1787  001D6C  C101  F0C1         	movff	FromMainLow_sendmsg@data,send_msg@data
  1788  001D70  ECAC  F007         	call	_send_msg	;wreg free
  1789  001D74  0012               	return	
  1790  001D76                     __end_of_FromMainLow_sendmsg:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           indf2	equ	0xFDF
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _send_msg *****************
  1801 ;; Defined at:
  1802 ;;		line 24 in file "src/messages.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  qptr            2   61[BANK0 ] PTR struct __msg_queue
  1805 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1806 ;;  length          1   63[BANK0 ] unsigned char 
  1807 ;;  msgtype         1   64[BANK0 ] unsigned char 
  1808 ;;  data            2   65[BANK0 ] PTR void 
  1809 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@msgbuffer(11), 
  1810 ;;		 -> main@ic(28), main@uc(5), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  qmsg            2   71[BANK0 ] PTR struct __msg
  1813 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1814 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1815 ;;  tlength         2   68[BANK0 ] unsigned int 
  1816 ;;  slot            1   70[BANK0 ] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      char 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1826 ;;      Params:         0       6       0       0       0
  1827 ;;      Locals:         0       5       0       0       0
  1828 ;;      Temps:          0       1       0       0       0
  1829 ;;      Totals:         0      12       0       0       0
  1830 ;;Total ram usage:       12 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:   11
  1833 ;; This function calls:
  1834 ;;		_memcpy
  1835 ;; This function is called by:
  1836 ;;		_FromMainLow_sendmsg
  1837 ;;		_FromMainHigh_sendmsg
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text3
  1842  000F58                     __ptext3:
  1843                           	opt stack 0
  1844  000F58                     _send_msg:
  1845                           	opt stack 17
  1846                           
  1847                           ;messages.c: 25: unsigned char slot;
  1848                           ;messages.c: 27: msg *qmsg;
  1849                           ;messages.c: 28: size_t tlength = length;
  1850                           
  1851                           ;incstack = 0
  1852  000F58  0100               	movlb	0	; () banked
  1853  000F5A  0100               	movlb	0	; () banked
  1854  000F5C  C0BF  F0C4         	movff	send_msg@length,send_msg@tlength
  1855  000F60  0100               	movlb	0	; () banked
  1856  000F62  0100               	movlb	0	; () banked
  1857  000F64  6BC5               	clrf	(send_msg@tlength+1)& (0+255),b
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1861  000F66  0100               	movlb	0	; () banked
  1862  000F68  EE20 F034          	lfsr	2,52
  1863  000F6C  0100               	movlb	0	; () banked
  1864  000F6E  51BD               	movf	send_msg@qptr& (0+255),w,b
  1865  000F70  26D9               	addwf	fsr2l,f,c
  1866  000F72  0100               	movlb	0	; () banked
  1867  000F74  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  1868  000F76  22DA               	addwfc	fsr2h,f,c
  1869  000F78  50DF               	movf	indf2,w,c
  1870  000F7A  0100               	movlb	0	; () banked
  1871  000F7C  0100               	movlb	0	; () banked
  1872  000F7E  6FC6               	movwf	send_msg@slot& (0+255),b
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1876  000F80  0100               	movlb	0	; () banked
  1877  000F82  0100               	movlb	0	; () banked
  1878  000F84  51C6               	movf	send_msg@slot& (0+255),w,b
  1879  000F86  0D0D               	mullw	13
  1880  000F88  50F3               	movf	prodl,w,c
  1881  000F8A  0100               	movlb	0	; () banked
  1882  000F8C  0100               	movlb	0	; () banked
  1883  000F8E  25BD               	addwf	send_msg@qptr& (0+255),w,b
  1884  000F90  0100               	movlb	0	; () banked
  1885  000F92  0100               	movlb	0	; () banked
  1886  000F94  6FC7               	movwf	send_msg@qmsg& (0+255),b
  1887  000F96  50F4               	movf	prodh,w,c
  1888  000F98  0100               	movlb	0	; () banked
  1889  000F9A  0100               	movlb	0	; () banked
  1890  000F9C  21BE               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1891  000F9E  0100               	movlb	0	; () banked
  1892  000FA0  6FC8               	movwf	(send_msg@qmsg+1)& (0+255),b
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;messages.c: 41: if (qmsg->full != 0) {
  1896  000FA2  C0C7  FFD9         	movff	send_msg@qmsg,fsr2l
  1897  000FA6  C0C8  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1898  000FAA  50DF               	movf	indf2,w,c
  1899  000FAC  B4D8               	btfsc	status,2,c
  1900  000FAE  D002               	goto	l3538
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;messages.c: 42: return (-1);
  1904  000FB0  0EFF               	movlw	255
  1905  000FB2  0012               	return	
  1906  000FB4                     l3538:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;messages.c: 43: }
  1910                           ;messages.c: 46: qmsg->length = length;
  1911  000FB4  0100               	movlb	0	; () banked
  1912  000FB6  EE20 F001          	lfsr	2,1
  1913  000FBA  0100               	movlb	0	; () banked
  1914  000FBC  51C7               	movf	send_msg@qmsg& (0+255),w,b
  1915  000FBE  26D9               	addwf	fsr2l,f,c
  1916  000FC0  0100               	movlb	0	; () banked
  1917  000FC2  51C8               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1918  000FC4  22DA               	addwfc	fsr2h,f,c
  1919  000FC6  0100               	movlb	0	; () banked
  1920  000FC8  C0BF  FFDF         	movff	send_msg@length,indf2
  1921                           
  1922                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1923  000FCC  0100               	movlb	0	; () banked
  1924  000FCE  EE20 F002          	lfsr	2,2
  1925  000FD2  0100               	movlb	0	; () banked
  1926  000FD4  51C7               	movf	send_msg@qmsg& (0+255),w,b
  1927  000FD6  26D9               	addwf	fsr2l,f,c
  1928  000FD8  0100               	movlb	0	; () banked
  1929  000FDA  51C8               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1930  000FDC  22DA               	addwfc	fsr2h,f,c
  1931  000FDE  0100               	movlb	0	; () banked
  1932  000FE0  C0C0  FFDF         	movff	send_msg@msgtype,indf2
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1936  000FE4  0E03               	movlw	3
  1937  000FE6  0100               	movlb	0	; () banked
  1938  000FE8  0100               	movlb	0	; () banked
  1939  000FEA  25C7               	addwf	send_msg@qmsg& (0+255),w,b
  1940  000FEC  0100               	movlb	0	; () banked
  1941  000FEE  0100               	movlb	0	; () banked
  1942  000FF0  6FB3               	movwf	memcpy@d1& (0+255),b
  1943  000FF2  0E00               	movlw	0
  1944  000FF4  0100               	movlb	0	; () banked
  1945  000FF6  0100               	movlb	0	; () banked
  1946  000FF8  21C8               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1947  000FFA  0100               	movlb	0	; () banked
  1948  000FFC  6FB4               	movwf	(memcpy@d1+1)& (0+255),b
  1949  000FFE  0100               	movlb	0	; () banked
  1950  001000  0100               	movlb	0	; () banked
  1951  001002  C0C2  F0B6         	movff	send_msg@data+1,memcpy@s1+1
  1952  001006  0100               	movlb	0	; () banked
  1953  001008  0100               	movlb	0	; () banked
  1954  00100A  C0C1  F0B5         	movff	send_msg@data,memcpy@s1
  1955  00100E  C0C4  F0B7         	movff	send_msg@tlength,memcpy@n
  1956  001012  C0C5  F0B8         	movff	send_msg@tlength+1,memcpy@n+1
  1957  001016  EC13  F00D         	call	_memcpy	;wreg free
  1958                           
  1959                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1960  00101A  0100               	movlb	0	; () banked
  1961  00101C  EE20 F034          	lfsr	2,52
  1962  001020  0100               	movlb	0	; () banked
  1963  001022  51BD               	movf	send_msg@qptr& (0+255),w,b
  1964  001024  26D9               	addwf	fsr2l,f,c
  1965  001026  0100               	movlb	0	; () banked
  1966  001028  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  1967  00102A  22DA               	addwfc	fsr2h,f,c
  1968  00102C  0100               	movlb	0	; () banked
  1969  00102E  EE10 F034          	lfsr	1,52
  1970  001032  0100               	movlb	0	; () banked
  1971  001034  51BD               	movf	send_msg@qptr& (0+255),w,b
  1972  001036  26E1               	addwf	fsr1l,f,c
  1973  001038  0100               	movlb	0	; () banked
  1974  00103A  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  1975  00103C  22E2               	addwfc	fsr1h,f,c
  1976  00103E  50E7               	movf	indf1,w,c
  1977  001040  0100               	movlb	0	; () banked
  1978  001042  6FC3               	movwf	??_send_msg& (0+255),b
  1979  001044  0100               	movlb	0	; () banked
  1980  001046  29C3               	incf	??_send_msg& (0+255),w,b
  1981  001048  0B03               	andlw	3
  1982  00104A  6EDF               	movwf	indf2,c
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;messages.c: 59: qmsg->full = 1;
  1986  00104C  C0C7  FFD9         	movff	send_msg@qmsg,fsr2l
  1987  001050  C0C8  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1988  001054  0E01               	movlw	1
  1989  001056  6EDF               	movwf	indf2,c
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;messages.c: 60: return (1);
  1993  001058  0E01               	movlw	1
  1994  00105A  0012               	return	
  1995  00105C                     __end_of_send_msg:
  1996                           	opt stack 0
  1997                           tblptru	equ	0xFF8
  1998                           prodh	equ	0xFF4
  1999                           prodl	equ	0xFF3
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           indf1	equ	0xFE7
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _timer1_lthread *****************
  2011 ;; Defined at:
  2012 ;;		line 18 in file "src/timer1_thread.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  tptr            2   57[BANK0 ] PTR struct __timer1_thre
  2015 ;;		 -> main@t1thread_data(130), 
  2016 ;;  msgtype         2   59[BANK0 ] int 
  2017 ;;  length          2   61[BANK0 ] int 
  2018 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  2019 ;;		 -> main@msgbuffer(11), 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  z               2    4[BANK1 ] int 
  2022 ;;  y               2    2[BANK1 ] int 
  2023 ;;  x               2    0[BANK1 ] int 
  2024 ;;  even            2    7[BANK1 ] int 
  2025 ;;  retval          1    6[BANK1 ] char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2   57[BANK0 ] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2035 ;;      Params:         0       8       0       0       0
  2036 ;;      Locals:         0       0       9       0       0
  2037 ;;      Temps:          0       2       0       0       0
  2038 ;;      Totals:         0      10       9       0       0
  2039 ;;Total ram usage:       19 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:   11
  2042 ;; This function calls:
  2043 ;;		_ReadTimer1
  2044 ;;		___lwmod
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text4
  2051  000A5A                     __ptext4:
  2052                           	opt stack 0
  2053  000A5A                     _timer1_lthread:
  2054                           	opt stack 19
  2055                           
  2056                           ;timer1_thread.c: 19: signed char retval;
  2057                           ;timer1_thread.c: 21: int even = 0;
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;incstack = 0
  2061  000A5A  0E00               	movlw	0
  2062  000A5C  0101               	movlb	1	; () banked
  2063  000A5E  0101               	movlb	1	; () banked
  2064  000A60  6F08               	movwf	(timer1_lthread@even+1)& (0+255),b
  2065  000A62  0E00               	movlw	0
  2066  000A64  0101               	movlb	1	; () banked
  2067  000A66  6F07               	movwf	timer1_lthread@even& (0+255),b
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;timer1_thread.c: 23: tptr->msgcount++;
  2071  000A68  C0B9  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2072  000A6C  C0BA  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2073  000A70  2ADE               	incf	postinc2,f,c
  2074  000A72  0E00               	movlw	0
  2075  000A74  22DD               	addwfc	postdec2,f,c
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;timer1_thread.c: 25: if ((tptr->msgcount % 6) == 5) {
  2079  000A76  C0B9  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2080  000A7A  C0BA  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2081  000A7E  0100               	movlb	0	; () banked
  2082  000A80  CFDE F0B3          	movff	postinc2,___lwmod@dividend
  2083  000A84  0100               	movlb	0	; () banked
  2084  000A86  CFDD F0B4          	movff	postdec2,___lwmod@dividend+1
  2085  000A8A  0E00               	movlw	0
  2086  000A8C  0100               	movlb	0	; () banked
  2087  000A8E  0100               	movlb	0	; () banked
  2088  000A90  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  2089  000A92  0E06               	movlw	6
  2090  000A94  0100               	movlb	0	; () banked
  2091  000A96  6FB5               	movwf	___lwmod@divisor& (0+255),b
  2092  000A98  EC31  F00B         	call	___lwmod	;wreg free
  2093  000A9C  0100               	movlb	0	; () banked
  2094  000A9E  0100               	movlb	0	; () banked
  2095  000AA0  51B3               	movf	?___lwmod& (0+255),w,b
  2096  000AA2  0A05               	xorlw	5
  2097  000AA4  0100               	movlb	0	; () banked
  2098  000AA6  11B4               	iorwf	(?___lwmod+1)& (0+255),w,b
  2099  000AA8  A4D8               	btfss	status,2,c
  2100  000AAA  0012               	return	
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;timer1_thread.c: 26: if(ReadTimer1()%2 == 0) even = 0;
  2104  000AAC  ECB2  F00F         	call	_ReadTimer1	;wreg free
  2105  000AB0  0100               	movlb	0	; () banked
  2106  000AB2  0100               	movlb	0	; () banked
  2107  000AB4  B1B3               	btfsc	?_ReadTimer1& (0+255),0,b
  2108  000AB6  D006               	goto	l3492
  2109                           
  2110                           ; BSR set to: 0
  2111  000AB8  0E00               	movlw	0
  2112  000ABA  0101               	movlb	1	; () banked
  2113  000ABC  0101               	movlb	1	; () banked
  2114  000ABE  6F08               	movwf	(timer1_lthread@even+1)& (0+255),b
  2115  000AC0  0E00               	movlw	0
  2116  000AC2  D005               	goto	L3
  2117  000AC4                     l3492:
  2118                           
  2119                           ;timer1_thread.c: 27: else even = 1;
  2120  000AC4  0E00               	movlw	0
  2121  000AC6  0101               	movlb	1	; () banked
  2122  000AC8  0101               	movlb	1	; () banked
  2123  000ACA  6F08               	movwf	(timer1_lthread@even+1)& (0+255),b
  2124  000ACC  0E01               	movlw	1
  2125  000ACE                     L3:
  2126  000ACE  0101               	movlb	1	; () banked
  2127  000AD0  6F07               	movwf	timer1_lthread@even& (0+255),b
  2128  000AD2  D02D               	goto	l3500
  2129  000AD4                     l3494:
  2130                           
  2131                           ;timer1_thread.c: 30: tptr->buffer[1] = 0x00;
  2132  000AD4  0100               	movlb	0	; () banked
  2133  000AD6  EE20 F003          	lfsr	2,3
  2134  000ADA  0100               	movlb	0	; () banked
  2135  000ADC  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2136  000ADE  26D9               	addwf	fsr2l,f,c
  2137  000AE0  0100               	movlb	0	; () banked
  2138  000AE2  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2139  000AE4  22DA               	addwfc	fsr2h,f,c
  2140  000AE6  0E00               	movlw	0
  2141  000AE8  6EDF               	movwf	indf2,c
  2142                           
  2143                           ;timer1_thread.c: 31: tptr->buffer[2] = 0x00;
  2144  000AEA  0100               	movlb	0	; () banked
  2145  000AEC  EE20 F004          	lfsr	2,4
  2146  000AF0  0100               	movlb	0	; () banked
  2147  000AF2  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2148  000AF4  26D9               	addwf	fsr2l,f,c
  2149  000AF6  0100               	movlb	0	; () banked
  2150  000AF8  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2151  000AFA  22DA               	addwfc	fsr2h,f,c
  2152  000AFC  0E00               	movlw	0
  2153  000AFE  D015               	goto	L4
  2154  000B00                     l3496:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;timer1_thread.c: 34: tptr->buffer[1] = 0xC8;
  2158  000B00  0100               	movlb	0	; () banked
  2159  000B02  EE20 F003          	lfsr	2,3
  2160  000B06  0100               	movlb	0	; () banked
  2161  000B08  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2162  000B0A  26D9               	addwf	fsr2l,f,c
  2163  000B0C  0100               	movlb	0	; () banked
  2164  000B0E  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2165  000B10  22DA               	addwfc	fsr2h,f,c
  2166  000B12  0EC8               	movlw	200
  2167  000B14  6EDF               	movwf	indf2,c
  2168                           
  2169                           ;timer1_thread.c: 35: tptr->buffer[2] = 0x4B;
  2170  000B16  0100               	movlb	0	; () banked
  2171  000B18  EE20 F004          	lfsr	2,4
  2172  000B1C  0100               	movlb	0	; () banked
  2173  000B1E  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2174  000B20  26D9               	addwf	fsr2l,f,c
  2175  000B22  0100               	movlb	0	; () banked
  2176  000B24  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2177  000B26  22DA               	addwfc	fsr2h,f,c
  2178  000B28  0E4B               	movlw	75
  2179  000B2A                     L4:
  2180  000B2A  6EDF               	movwf	indf2,c
  2181                           
  2182                           ;timer1_thread.c: 36: break;
  2183  000B2C  D013               	goto	l3502
  2184  000B2E                     l3500:
  2185  000B2E  0101               	movlb	1	; () banked
  2186  000B30  C107  F0C1         	movff	timer1_lthread@even,??_timer1_lthread
  2187  000B34  0101               	movlb	1	; () banked
  2188  000B36  C108  F0C2         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "space"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ;	Chosen strategy is simple_byte
  2197  000B3A  0100               	movlb	0	; () banked
  2198  000B3C  51C2               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2199  000B3E  0A00               	xorlw	0	; case 0
  2200  000B40  A4D8               	btfss	status,2,c
  2201  000B42  D008               	goto	l3502
  2202                           
  2203                           ; BSR set to: 0
  2204                           ; Switch size 1, requested type "space"
  2205                           ; Number of cases is 2, Range of values is 0 to 1
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            7     4 (average)
  2209                           ;	Chosen strategy is simple_byte
  2210  000B44  0100               	movlb	0	; () banked
  2211  000B46  51C1               	movf	??_timer1_lthread& (0+255),w,b
  2212  000B48  0A00               	xorlw	0	; case 0
  2213  000B4A  B4D8               	btfsc	status,2,c
  2214  000B4C  D7C3               	goto	l3494
  2215  000B4E  0A01               	xorlw	1	; case 1
  2216  000B50  B4D8               	btfsc	status,2,c
  2217  000B52  D7D6               	goto	l3496
  2218  000B54                     l3502:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;timer1_thread.c: 38: tptr->buffer[0] = 0x02;
  2222  000B54  0100               	movlb	0	; () banked
  2223  000B56  EE20 F002          	lfsr	2,2
  2224  000B5A  0100               	movlb	0	; () banked
  2225  000B5C  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2226  000B5E  26D9               	addwf	fsr2l,f,c
  2227  000B60  0100               	movlb	0	; () banked
  2228  000B62  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2229  000B64  22DA               	addwfc	fsr2h,f,c
  2230  000B66  0E02               	movlw	2
  2231  000B68  6EDF               	movwf	indf2,c
  2232                           
  2233                           ;timer1_thread.c: 40: int x = tptr->buffer[0], y = tptr->buffer[1], z = tptr->buffer[2];
  2234  000B6A  0100               	movlb	0	; () banked
  2235  000B6C  EE20 F002          	lfsr	2,2
  2236  000B70  0100               	movlb	0	; () banked
  2237  000B72  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2238  000B74  26D9               	addwf	fsr2l,f,c
  2239  000B76  0100               	movlb	0	; () banked
  2240  000B78  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2241  000B7A  22DA               	addwfc	fsr2h,f,c
  2242  000B7C  50DF               	movf	indf2,w,c
  2243  000B7E  0100               	movlb	0	; () banked
  2244  000B80  6FC1               	movwf	??_timer1_lthread& (0+255),b
  2245  000B82  0100               	movlb	0	; () banked
  2246  000B84  51C1               	movf	??_timer1_lthread& (0+255),w,b
  2247  000B86  0101               	movlb	1	; () banked
  2248  000B88  0101               	movlb	1	; () banked
  2249  000B8A  6F00               	movwf	timer1_lthread@x& (0+255),b
  2250  000B8C  0101               	movlb	1	; () banked
  2251  000B8E  6B01               	clrf	(timer1_lthread@x+1)& (0+255),b
  2252  000B90  0100               	movlb	0	; () banked
  2253  000B92  EE20 F003          	lfsr	2,3
  2254  000B96  0100               	movlb	0	; () banked
  2255  000B98  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2256  000B9A  26D9               	addwf	fsr2l,f,c
  2257  000B9C  0100               	movlb	0	; () banked
  2258  000B9E  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2259  000BA0  22DA               	addwfc	fsr2h,f,c
  2260  000BA2  50DF               	movf	indf2,w,c
  2261  000BA4  0100               	movlb	0	; () banked
  2262  000BA6  6FC1               	movwf	??_timer1_lthread& (0+255),b
  2263  000BA8  0100               	movlb	0	; () banked
  2264  000BAA  51C1               	movf	??_timer1_lthread& (0+255),w,b
  2265  000BAC  0101               	movlb	1	; () banked
  2266  000BAE  0101               	movlb	1	; () banked
  2267  000BB0  6F02               	movwf	timer1_lthread@y& (0+255),b
  2268  000BB2  0101               	movlb	1	; () banked
  2269  000BB4  6B03               	clrf	(timer1_lthread@y+1)& (0+255),b
  2270  000BB6  0100               	movlb	0	; () banked
  2271  000BB8  EE20 F004          	lfsr	2,4
  2272  000BBC  0100               	movlb	0	; () banked
  2273  000BBE  51B9               	movf	timer1_lthread@tptr& (0+255),w,b
  2274  000BC0  26D9               	addwf	fsr2l,f,c
  2275  000BC2  0100               	movlb	0	; () banked
  2276  000BC4  51BA               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2277  000BC6  22DA               	addwfc	fsr2h,f,c
  2278  000BC8  50DF               	movf	indf2,w,c
  2279  000BCA  0100               	movlb	0	; () banked
  2280  000BCC  6FC1               	movwf	??_timer1_lthread& (0+255),b
  2281  000BCE  0100               	movlb	0	; () banked
  2282  000BD0  51C1               	movf	??_timer1_lthread& (0+255),w,b
  2283  000BD2  0101               	movlb	1	; () banked
  2284  000BD4  0101               	movlb	1	; () banked
  2285  000BD6  6F04               	movwf	timer1_lthread@z& (0+255),b
  2286  000BD8  0101               	movlb	1	; () banked
  2287  000BDA  6B05               	clrf	(timer1_lthread@z+1)& (0+255),b
  2288  000BDC  0012               	return	
  2289  000BDE                     __end_of_timer1_lthread:
  2290                           	opt stack 0
  2291                           tblptru	equ	0xFF8
  2292                           prodh	equ	0xFF4
  2293                           prodl	equ	0xFF3
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           indf1	equ	0xFE7
  2297                           fsr1h	equ	0xFE2
  2298                           fsr1l	equ	0xFE1
  2299                           indf2	equ	0xFDF
  2300                           postinc2	equ	0xFDE
  2301                           postdec2	equ	0xFDD
  2302                           fsr2h	equ	0xFDA
  2303                           fsr2l	equ	0xFD9
  2304                           status	equ	0xFD8
  2305                           
  2306 ;; *************** function ___lwmod *****************
  2307 ;; Defined at:
  2308 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  dividend        2   51[BANK0 ] unsigned int 
  2311 ;;  divisor         2   53[BANK0 ] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  counter         1   56[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2   51[BANK0 ] unsigned int 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2323 ;;      Params:         0       4       0       0       0
  2324 ;;      Locals:         0       1       0       0       0
  2325 ;;      Temps:          0       1       0       0       0
  2326 ;;      Totals:         0       6       0       0       0
  2327 ;;Total ram usage:        6 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:   10
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_timer1_lthread
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text5
  2338  001662                     __ptext5:
  2339                           	opt stack 0
  2340  001662                     ___lwmod:
  2341                           	opt stack 19
  2342                           
  2343                           ;incstack = 0
  2344  001662  0100               	movlb	0	; () banked
  2345  001664  0100               	movlb	0	; () banked
  2346  001666  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2347  001668  11B5               	iorwf	___lwmod@divisor& (0+255),w,b
  2348  00166A  B4D8               	btfsc	status,2,c
  2349  00166C  D03A               	goto	l1046
  2350                           
  2351                           ; BSR set to: 0
  2352  00166E  0100               	movlb	0	; () banked
  2353  001670  6FB7               	movwf	??___lwmod& (0+255),b
  2354  001672  0E01               	movlw	1
  2355  001674  0100               	movlb	0	; () banked
  2356  001676  0100               	movlb	0	; () banked
  2357  001678  6FB8               	movwf	___lwmod@counter& (0+255),b
  2358  00167A  0100               	movlb	0	; () banked
  2359  00167C  51B7               	movf	??___lwmod& (0+255),w,b
  2360  00167E  D009               	goto	l3634
  2361  001680                     l3632:
  2362                           
  2363                           ; BSR set to: 0
  2364  001680  0100               	movlb	0	; () banked
  2365  001682  0100               	movlb	0	; () banked
  2366  001684  0100               	movlb	0	; () banked
  2367  001686  90D8               	bcf	status,0,c
  2368  001688  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  2369  00168A  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2370  00168C  0100               	movlb	0	; () banked
  2371  00168E  0100               	movlb	0	; () banked
  2372  001690  2BB8               	incf	___lwmod@counter& (0+255),f,b
  2373  001692                     l3634:
  2374                           
  2375                           ; BSR set to: 0
  2376  001692  0100               	movlb	0	; () banked
  2377  001694  0100               	movlb	0	; () banked
  2378  001696  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2379  001698  D7F3               	goto	l3632
  2380  00169A                     l3636:
  2381                           
  2382                           ; BSR set to: 0
  2383  00169A  0100               	movlb	0	; () banked
  2384  00169C  0100               	movlb	0	; () banked
  2385  00169E  51B5               	movf	___lwmod@divisor& (0+255),w,b
  2386  0016A0  0100               	movlb	0	; () banked
  2387  0016A2  0100               	movlb	0	; () banked
  2388  0016A4  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  2389  0016A6  0100               	movlb	0	; () banked
  2390  0016A8  0100               	movlb	0	; () banked
  2391  0016AA  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2392  0016AC  0100               	movlb	0	; () banked
  2393  0016AE  0100               	movlb	0	; () banked
  2394  0016B0  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2395  0016B2  A0D8               	btfss	status,0,c
  2396  0016B4  D00C               	goto	l3640
  2397                           
  2398                           ; BSR set to: 0
  2399  0016B6  0100               	movlb	0	; () banked
  2400  0016B8  0100               	movlb	0	; () banked
  2401  0016BA  51B5               	movf	___lwmod@divisor& (0+255),w,b
  2402  0016BC  0100               	movlb	0	; () banked
  2403  0016BE  0100               	movlb	0	; () banked
  2404  0016C0  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  2405  0016C2  0100               	movlb	0	; () banked
  2406  0016C4  0100               	movlb	0	; () banked
  2407  0016C6  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2408  0016C8  0100               	movlb	0	; () banked
  2409  0016CA  0100               	movlb	0	; () banked
  2410  0016CC  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2411  0016CE                     l3640:
  2412                           
  2413                           ; BSR set to: 0
  2414  0016CE  0100               	movlb	0	; () banked
  2415  0016D0  0100               	movlb	0	; () banked
  2416  0016D2  0100               	movlb	0	; () banked
  2417  0016D4  90D8               	bcf	status,0,c
  2418  0016D6  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2419  0016D8  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  2420                           
  2421                           ; BSR set to: 0
  2422  0016DA  0100               	movlb	0	; () banked
  2423  0016DC  0100               	movlb	0	; () banked
  2424  0016DE  2FB8               	decfsz	___lwmod@counter& (0+255),f,b
  2425  0016E0  D7DC               	goto	l3636
  2426  0016E2                     l1046:
  2427                           
  2428                           ; BSR set to: 0
  2429  0016E2  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  2430  0016E6  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  2431                           
  2432                           ; BSR set to: 0
  2433  0016EA  0012               	return	
  2434  0016EC                     __end_of___lwmod:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           prodh	equ	0xFF4
  2438                           prodl	equ	0xFF3
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           indf1	equ	0xFE7
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           postinc2	equ	0xFDE
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           status	equ	0xFD8
  2450                           
  2451 ;; *************** function _ReadTimer1 *****************
  2452 ;; Defined at:
  2453 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  timer           2   53[BANK0 ] struct Timers
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  2   51[BANK0 ] unsigned int 
  2460 ;; Registers used:
  2461 ;;		None
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2467 ;;      Params:         0       2       0       0       0
  2468 ;;      Locals:         0       2       0       0       0
  2469 ;;      Temps:          0       0       0       0       0
  2470 ;;      Totals:         0       4       0       0       0
  2471 ;;Total ram usage:        4 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:   10
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_timer1_lthread
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text6
  2482  001F64                     __ptext6:
  2483                           	opt stack 0
  2484  001F64                     _ReadTimer1:
  2485                           	opt stack 19
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;incstack = 0
  2489  001F64  CFCE F0B5          	movff	4046,ReadTimer1@timer	;volatile
  2490  001F68  CFCF F0B6          	movff	4047,ReadTimer1@timer+1	;volatile
  2491  001F6C  C0B5  F0B3         	movff	ReadTimer1@timer,?_ReadTimer1
  2492  001F70  C0B6  F0B4         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2493  001F74  0012               	return	
  2494  001F76                     __end_of_ReadTimer1:
  2495                           	opt stack 0
  2496                           tblptru	equ	0xFF8
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           indf1	equ	0xFE7
  2502                           fsr1h	equ	0xFE2
  2503                           fsr1l	equ	0xFE1
  2504                           indf2	equ	0xFDF
  2505                           postinc2	equ	0xFDE
  2506                           postdec2	equ	0xFDD
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _timer0_lthread *****************
  2512 ;; Defined at:
  2513 ;;		line 9 in file "src/timer0_thread.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  tptr            2   51[BANK0 ] PTR struct __timer0_thre
  2516 ;;		 -> main@t0thread_data(2), 
  2517 ;;  msgtype         2   53[BANK0 ] int 
  2518 ;;  length          2   55[BANK0 ] int 
  2519 ;;  msgbuffer       2   57[BANK0 ] PTR unsigned char 
  2520 ;;		 -> main@msgbuffer(11), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  msgval          2   59[BANK0 ] PTR unsigned int 
  2523 ;;		 -> main@msgbuffer(11), 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2   51[BANK0 ] int 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2533 ;;      Params:         0       8       0       0       0
  2534 ;;      Locals:         0       2       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         0      10       0       0       0
  2537 ;;Total ram usage:       10 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:   10
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text7
  2548  001F76                     __ptext7:
  2549                           	opt stack 0
  2550  001F76                     _timer0_lthread:
  2551                           	opt stack 20
  2552                           
  2553                           ;timer0_thread.c: 10: unsigned int *msgval;
  2554                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2555                           
  2556                           ;incstack = 0
  2557  001F76  0100               	movlb	0	; () banked
  2558  001F78  0100               	movlb	0	; () banked
  2559  001F7A  C0BA  F0BC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2560  001F7E  0100               	movlb	0	; () banked
  2561  001F80  0100               	movlb	0	; () banked
  2562  001F82  C0B9  F0BB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2563                           
  2564                           ; BSR set to: 0
  2565  001F86  0012               	return	
  2566  001F88                     __end_of_timer0_lthread:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           prodh	equ	0xFF4
  2570                           prodl	equ	0xFF3
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           indf1	equ	0xFE7
  2574                           fsr1h	equ	0xFE2
  2575                           fsr1l	equ	0xFE1
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _start_i2c_slave_reply *****************
  2584 ;; Defined at:
  2585 ;;		line 53 in file "src/my_i2c.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  length          1    wreg     unsigned char 
  2588 ;;  msg             2   51[BANK0 ] PTR unsigned char 
  2589 ;;		 -> main@msgbuffer(11), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  length          1   55[BANK0 ] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2601 ;;      Params:         0       2       0       0       0
  2602 ;;      Locals:         0       1       0       0       0
  2603 ;;      Temps:          0       2       0       0       0
  2604 ;;      Totals:         0       5       0       0       0
  2605 ;;Total ram usage:        5 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:   10
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text8
  2616  000E4A                     __ptext8:
  2617                           	opt stack 0
  2618  000E4A                     _start_i2c_slave_reply:
  2619                           	opt stack 20
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;incstack = 0
  2623                           ;start_i2c_slave_reply@length stored from wreg
  2624  000E4A  CFE8 F0B7          	movff	wreg,start_i2c_slave_reply@length
  2625                           
  2626                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2627  000E4E  0100               	movlb	0	; () banked
  2628  000E50  EE20 F019          	lfsr	2,25
  2629  000E54  0100               	movlb	0	; () banked
  2630  000E56  51CB               	movf	_ic_ptr& (0+255),w,b
  2631  000E58  26D9               	addwf	fsr2l,f,c
  2632  000E5A  0100               	movlb	0	; () banked
  2633  000E5C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2634  000E5E  22DA               	addwfc	fsr2h,f,c
  2635  000E60  0E00               	movlw	0
  2636  000E62  6EDF               	movwf	indf2,c
  2637  000E64  D042               	goto	l2722
  2638  000E66                     l2718:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2642  000E66  0100               	movlb	0	; () banked
  2643  000E68  EE20 F019          	lfsr	2,25
  2644  000E6C  0100               	movlb	0	; () banked
  2645  000E6E  51CB               	movf	_ic_ptr& (0+255),w,b
  2646  000E70  26D9               	addwf	fsr2l,f,c
  2647  000E72  0100               	movlb	0	; () banked
  2648  000E74  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2649  000E76  22DA               	addwfc	fsr2h,f,c
  2650  000E78  50DF               	movf	indf2,w,c
  2651  000E7A  0100               	movlb	0	; () banked
  2652  000E7C  6FB5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2653  000E7E  0100               	movlb	0	; () banked
  2654  000E80  51B5               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2655  000E82  0D01               	mullw	1
  2656  000E84  50F3               	movf	prodl,w,c
  2657  000E86  0100               	movlb	0	; () banked
  2658  000E88  0100               	movlb	0	; () banked
  2659  000E8A  25B3               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2660  000E8C  6ED9               	movwf	fsr2l,c
  2661  000E8E  50F4               	movf	prodh,w,c
  2662  000E90  0100               	movlb	0	; () banked
  2663  000E92  0100               	movlb	0	; () banked
  2664  000E94  21B4               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2665  000E96  6EDA               	movwf	fsr2h,c
  2666  000E98  0100               	movlb	0	; () banked
  2667  000E9A  EE10 F019          	lfsr	1,25
  2668  000E9E  0100               	movlb	0	; () banked
  2669  000EA0  51CB               	movf	_ic_ptr& (0+255),w,b
  2670  000EA2  26E1               	addwf	fsr1l,f,c
  2671  000EA4  0100               	movlb	0	; () banked
  2672  000EA6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2673  000EA8  22E2               	addwfc	fsr1h,f,c
  2674  000EAA  50E7               	movf	indf1,w,c
  2675  000EAC  0100               	movlb	0	; () banked
  2676  000EAE  6FB6               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2677  000EB0  0100               	movlb	0	; () banked
  2678  000EB2  51B6               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2679  000EB4  0D01               	mullw	1
  2680  000EB6  0E0F               	movlw	15
  2681  000EB8  26F3               	addwf	prodl,f,c
  2682  000EBA  0E00               	movlw	0
  2683  000EBC  22F4               	addwfc	prodh,f,c
  2684  000EBE  50F3               	movf	prodl,w,c
  2685  000EC0  0100               	movlb	0	; () banked
  2686  000EC2  0100               	movlb	0	; () banked
  2687  000EC4  25CB               	addwf	_ic_ptr& (0+255),w,b
  2688  000EC6  6EE1               	movwf	fsr1l,c
  2689  000EC8  50F4               	movf	prodh,w,c
  2690  000ECA  0100               	movlb	0	; () banked
  2691  000ECC  0100               	movlb	0	; () banked
  2692  000ECE  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2693  000ED0  6EE2               	movwf	fsr1h,c
  2694  000ED2  CFDF FFE7          	movff	indf2,indf1
  2695                           
  2696                           ; BSR set to: 0
  2697  000ED6  0100               	movlb	0	; () banked
  2698  000ED8  EE20 F019          	lfsr	2,25
  2699  000EDC  0100               	movlb	0	; () banked
  2700  000EDE  51CB               	movf	_ic_ptr& (0+255),w,b
  2701  000EE0  26D9               	addwf	fsr2l,f,c
  2702  000EE2  0100               	movlb	0	; () banked
  2703  000EE4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2704  000EE6  22DA               	addwfc	fsr2h,f,c
  2705  000EE8  2ADF               	incf	indf2,f,c
  2706  000EEA                     l2722:
  2707                           
  2708                           ; BSR set to: 0
  2709  000EEA  0100               	movlb	0	; () banked
  2710  000EEC  EE20 F019          	lfsr	2,25
  2711  000EF0  0100               	movlb	0	; () banked
  2712  000EF2  51CB               	movf	_ic_ptr& (0+255),w,b
  2713  000EF4  26D9               	addwf	fsr2l,f,c
  2714  000EF6  0100               	movlb	0	; () banked
  2715  000EF8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2716  000EFA  22DA               	addwfc	fsr2h,f,c
  2717  000EFC  50DF               	movf	indf2,w,c
  2718  000EFE  0100               	movlb	0	; () banked
  2719  000F00  6FB5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2720  000F02  0100               	movlb	0	; () banked
  2721  000F04  0100               	movlb	0	; () banked
  2722  000F06  51B7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2723  000F08  0100               	movlb	0	; () banked
  2724  000F0A  5DB5               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2725  000F0C  A0D8               	btfss	status,0,c
  2726  000F0E  D7AB               	goto	l2718
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;my_i2c.c: 57: }
  2730                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2731                           
  2732                           ; BSR set to: 0
  2733  000F10  0100               	movlb	0	; () banked
  2734  000F12  EE20 F019          	lfsr	2,25
  2735  000F16  0100               	movlb	0	; () banked
  2736  000F18  51CB               	movf	_ic_ptr& (0+255),w,b
  2737  000F1A  26D9               	addwf	fsr2l,f,c
  2738  000F1C  0100               	movlb	0	; () banked
  2739  000F1E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2740  000F20  22DA               	addwfc	fsr2h,f,c
  2741  000F22  0100               	movlb	0	; () banked
  2742  000F24  C0B7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2743                           
  2744                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2745  000F28  0100               	movlb	0	; () banked
  2746  000F2A  EE20 F01A          	lfsr	2,26
  2747  000F2E  0100               	movlb	0	; () banked
  2748  000F30  51CB               	movf	_ic_ptr& (0+255),w,b
  2749  000F32  26D9               	addwf	fsr2l,f,c
  2750  000F34  0100               	movlb	0	; () banked
  2751  000F36  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2752  000F38  22DA               	addwfc	fsr2h,f,c
  2753  000F3A  0E01               	movlw	1
  2754  000F3C  6EDF               	movwf	indf2,c
  2755                           
  2756                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2757  000F3E  0100               	movlb	0	; () banked
  2758  000F40  EE20 F00F          	lfsr	2,15
  2759  000F44  0100               	movlb	0	; () banked
  2760  000F46  51CB               	movf	_ic_ptr& (0+255),w,b
  2761  000F48  26D9               	addwf	fsr2l,f,c
  2762  000F4A  0100               	movlb	0	; () banked
  2763  000F4C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2764  000F4E  22DA               	addwfc	fsr2h,f,c
  2765  000F50  50DF               	movf	indf2,w,c
  2766  000F52  6EC9               	movwf	4041,c	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2770  000F54  88C6               	bsf	4038,4,c	;volatile
  2771                           
  2772                           ; BSR set to: 0
  2773  000F56  0012               	return	
  2774  000F58                     __end_of_start_i2c_slave_reply:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           prodh	equ	0xFF4
  2778                           prodl	equ	0xFF3
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           indf1	equ	0xFE7
  2782                           fsr1h	equ	0xFE2
  2783                           fsr1l	equ	0xFE1
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           postdec2	equ	0xFDD
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _init_uart_recv *****************
  2792 ;; Defined at:
  2793 ;;		line 78 in file "src/my_uart.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  uc              2   51[BANK0 ] PTR struct __uart_comm
  2796 ;;		 -> main@uc(5), 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;		None               void
  2801 ;; Registers used:
  2802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2808 ;;      Params:         0       2       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0
  2811 ;;      Totals:         0       2       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:   10
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text9
  2823  001F12                     __ptext9:
  2824                           	opt stack 0
  2825  001F12                     _init_uart_recv:
  2826                           	opt stack 20
  2827                           
  2828                           ;my_uart.c: 79: uc_ptr = uc;
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;incstack = 0
  2832  001F12  0100               	movlb	0	; () banked
  2833  001F14  C0B4  F075         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2834  001F18  0100               	movlb	0	; () banked
  2835  001F1A  C0B3  F074         	movff	init_uart_recv@uc,_uc_ptr
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;my_uart.c: 80: uc_ptr->buflen = 0;
  2839  001F1E  EE20 F004          	lfsr	2,4
  2840  001F22  5074               	movf	_uc_ptr,w,c
  2841  001F24  26D9               	addwf	fsr2l,f,c
  2842  001F26  5075               	movf	_uc_ptr+1,w,c
  2843  001F28  22DA               	addwfc	fsr2h,f,c
  2844  001F2A  0E00               	movlw	0
  2845  001F2C  6EDF               	movwf	indf2,c
  2846                           
  2847                           ; BSR set to: 0
  2848  001F2E  0012               	return	
  2849  001F30                     __end_of_init_uart_recv:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           indf1	equ	0xFE7
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _init_uart_lthread *****************
  2867 ;; Defined at:
  2868 ;;		line 6 in file "src/uart_thread.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  uptr            2   51[BANK0 ] PTR struct __uart_thread
  2871 ;;		 -> main@uthread_data(128), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		None
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2883 ;;      Params:         0       2       0       0       0
  2884 ;;      Locals:         0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:   10
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text10
  2898  001FF0                     __ptext10:
  2899                           	opt stack 0
  2900  001FF0                     _init_uart_lthread:
  2901                           	opt stack 20
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;incstack = 0
  2905  001FF0  0012               	return	
  2906  001FF2                     __end_of_init_uart_lthread:
  2907                           	opt stack 0
  2908                           tblptru	equ	0xFF8
  2909                           prodh	equ	0xFF4
  2910                           prodl	equ	0xFF3
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           indf1	equ	0xFE7
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           indf2	equ	0xFDF
  2917                           postinc2	equ	0xFDE
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _init_timer1_lthread *****************
  2924 ;; Defined at:
  2925 ;;		line 6 in file "src/timer1_thread.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  tptr            2   51[BANK0 ] PTR struct __timer1_thre
  2928 ;;		 -> main@t1thread_data(130), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2940 ;;      Params:         0       2       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         0       2       0       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:   10
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text11
  2955  001AE2                     __ptext11:
  2956                           	opt stack 0
  2957  001AE2                     _init_timer1_lthread:
  2958                           	opt stack 20
  2959                           
  2960                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2961                           
  2962                           ;incstack = 0
  2963  001AE2  C0B3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2964  001AE6  C0B4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2965  001AEA  0E00               	movlw	0
  2966  001AEC  6EDE               	movwf	postinc2,c
  2967  001AEE  0E00               	movlw	0
  2968  001AF0  6EDD               	movwf	postdec2,c
  2969                           
  2970                           ;timer1_thread.c: 8: tptr->buffer[0] = 0x02;
  2971  001AF2  0100               	movlb	0	; () banked
  2972  001AF4  EE20 F002          	lfsr	2,2
  2973  001AF8  0100               	movlb	0	; () banked
  2974  001AFA  51B3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2975  001AFC  26D9               	addwf	fsr2l,f,c
  2976  001AFE  0100               	movlb	0	; () banked
  2977  001B00  51B4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2978  001B02  22DA               	addwfc	fsr2h,f,c
  2979  001B04  0E02               	movlw	2
  2980  001B06  6EDF               	movwf	indf2,c
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;timer1_thread.c: 9: tptr->buffer[1] = 0xC8;
  2984  001B08  0100               	movlb	0	; () banked
  2985  001B0A  EE20 F003          	lfsr	2,3
  2986  001B0E  0100               	movlb	0	; () banked
  2987  001B10  51B3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2988  001B12  26D9               	addwf	fsr2l,f,c
  2989  001B14  0100               	movlb	0	; () banked
  2990  001B16  51B4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2991  001B18  22DA               	addwfc	fsr2h,f,c
  2992  001B1A  0EC8               	movlw	200
  2993  001B1C  6EDF               	movwf	indf2,c
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;timer1_thread.c: 10: tptr->buffer[2] = 0x4B;
  2997  001B1E  0100               	movlb	0	; () banked
  2998  001B20  EE20 F004          	lfsr	2,4
  2999  001B24  0100               	movlb	0	; () banked
  3000  001B26  51B3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3001  001B28  26D9               	addwf	fsr2l,f,c
  3002  001B2A  0100               	movlb	0	; () banked
  3003  001B2C  51B4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3004  001B2E  22DA               	addwfc	fsr2h,f,c
  3005  001B30  0E4B               	movlw	75
  3006  001B32  6EDF               	movwf	indf2,c
  3007                           
  3008                           ; BSR set to: 0
  3009  001B34  0012               	return	
  3010  001B36                     __end_of_init_timer1_lthread:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           indf1	equ	0xFE7
  3018                           fsr1h	equ	0xFE2
  3019                           fsr1l	equ	0xFE1
  3020                           indf2	equ	0xFDF
  3021                           postinc2	equ	0xFDE
  3022                           postdec2	equ	0xFDD
  3023                           fsr2h	equ	0xFDA
  3024                           fsr2l	equ	0xFD9
  3025                           status	equ	0xFD8
  3026                           
  3027 ;; *************** function _init_queues *****************
  3028 ;; Defined at:
  3029 ;;		line 194 in file "src/messages.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;		None               void
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          0       1       0       0       0
  3046 ;;      Totals:         0       1       0       0       0
  3047 ;;Total ram usage:        1 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:   11
  3050 ;; This function calls:
  3051 ;;		_init_queue
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text12
  3058  0018EC                     __ptext12:
  3059                           	opt stack 0
  3060  0018EC                     _init_queues:
  3061                           	opt stack 19
  3062                           
  3063                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;incstack = 0
  3067  0018EC  0100               	movlb	0	; () banked
  3068  0018EE  6FB7               	movwf	??_init_queues& (0+255),b
  3069  0018F0  0E00               	movlw	0
  3070  0018F2  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  3071  0018F4  0100               	movlb	0	; () banked
  3072  0018F6  51B7               	movf	??_init_queues& (0+255),w,b
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3076  0018F8  0E00               	movlw	high _ToMainLow_MQ
  3077  0018FA  0100               	movlb	0	; () banked
  3078  0018FC  0100               	movlb	0	; () banked
  3079  0018FE  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3080  001900  0E3E               	movlw	low _ToMainLow_MQ
  3081  001902  0100               	movlb	0	; () banked
  3082  001904  0100               	movlb	0	; () banked
  3083  001906  6FB3               	movwf	init_queue@qptr& (0+255),b
  3084  001908  ECFC  F00B         	call	_init_queue	;wreg free
  3085                           
  3086                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3087  00190C  0101               	movlb	1	; () banked
  3088  00190E  0E01               	movlw	high _ToMainHigh_MQ
  3089  001910  0100               	movlb	0	; () banked
  3090  001912  0100               	movlb	0	; () banked
  3091  001914  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3092  001916  0101               	movlb	1	; () banked
  3093  001918  0EC8               	movlw	low _ToMainHigh_MQ
  3094  00191A  0100               	movlb	0	; () banked
  3095  00191C  0100               	movlb	0	; () banked
  3096  00191E  6FB3               	movwf	init_queue@qptr& (0+255),b
  3097  001920  ECFC  F00B         	call	_init_queue	;wreg free
  3098                           
  3099                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3100  001924  0102               	movlb	2	; () banked
  3101  001926  0E02               	movlw	high _FromMainLow_MQ
  3102  001928  0100               	movlb	0	; () banked
  3103  00192A  0100               	movlb	0	; () banked
  3104  00192C  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3105  00192E  0102               	movlb	2	; () banked
  3106  001930  0EB6               	movlw	low _FromMainLow_MQ
  3107  001932  0100               	movlb	0	; () banked
  3108  001934  0100               	movlb	0	; () banked
  3109  001936  6FB3               	movwf	init_queue@qptr& (0+255),b
  3110  001938  ECFC  F00B         	call	_init_queue	;wreg free
  3111                           
  3112                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3113  00193C  0102               	movlb	2	; () banked
  3114  00193E  0E02               	movlw	high _FromMainHigh_MQ
  3115  001940  0100               	movlb	0	; () banked
  3116  001942  0100               	movlb	0	; () banked
  3117  001944  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3118  001946  0102               	movlb	2	; () banked
  3119  001948  0E80               	movlw	low _FromMainHigh_MQ
  3120  00194A  0100               	movlb	0	; () banked
  3121  00194C  0100               	movlb	0	; () banked
  3122  00194E  6FB3               	movwf	init_queue@qptr& (0+255),b
  3123  001950  ECFC  F00B         	call	_init_queue	;wreg free
  3124  001954  0012               	return	
  3125  001956                     __end_of_init_queues:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           postinc0	equ	0xFEE
  3131                           wreg	equ	0xFE8
  3132                           indf1	equ	0xFE7
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           postdec2	equ	0xFDD
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _init_queue *****************
  3143 ;; Defined at:
  3144 ;;		line 14 in file "src/messages.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  3147 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  i               1   54[BANK0 ] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3159 ;;      Params:         0       2       0       0       0
  3160 ;;      Locals:         0       1       0       0       0
  3161 ;;      Temps:          0       1       0       0       0
  3162 ;;      Totals:         0       4       0       0       0
  3163 ;;Total ram usage:        4 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:   10
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_init_queues
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text13
  3174  0017F8                     __ptext13:
  3175                           	opt stack 0
  3176  0017F8                     _init_queue:
  3177                           	opt stack 19
  3178                           
  3179                           ;messages.c: 15: unsigned char i;
  3180                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3181                           
  3182                           ;incstack = 0
  3183  0017F8  0100               	movlb	0	; () banked
  3184  0017FA  EE20 F034          	lfsr	2,52
  3185  0017FE  0100               	movlb	0	; () banked
  3186  001800  51B3               	movf	init_queue@qptr& (0+255),w,b
  3187  001802  26D9               	addwf	fsr2l,f,c
  3188  001804  0100               	movlb	0	; () banked
  3189  001806  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3190  001808  22DA               	addwfc	fsr2h,f,c
  3191  00180A  0E00               	movlw	0
  3192  00180C  6EDF               	movwf	indf2,c
  3193                           
  3194                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3195  00180E  0100               	movlb	0	; () banked
  3196  001810  EE20 F035          	lfsr	2,53
  3197  001814  0100               	movlb	0	; () banked
  3198  001816  51B3               	movf	init_queue@qptr& (0+255),w,b
  3199  001818  26D9               	addwf	fsr2l,f,c
  3200  00181A  0100               	movlb	0	; () banked
  3201  00181C  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3202  00181E  22DA               	addwfc	fsr2h,f,c
  3203  001820  0E00               	movlw	0
  3204  001822  6EDF               	movwf	indf2,c
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3208  001824  0100               	movlb	0	; () banked
  3209  001826  6FB5               	movwf	??_init_queue& (0+255),b
  3210  001828  0E00               	movlw	0
  3211  00182A  0100               	movlb	0	; () banked
  3212  00182C  0100               	movlb	0	; () banked
  3213  00182E  6FB6               	movwf	init_queue@i& (0+255),b
  3214  001830  0100               	movlb	0	; () banked
  3215  001832  51B5               	movf	??_init_queue& (0+255),w,b
  3216                           
  3217                           ; BSR set to: 0
  3218  001834  0E03               	movlw	3
  3219  001836  0100               	movlb	0	; () banked
  3220  001838  0100               	movlb	0	; () banked
  3221  00183A  65B6               	cpfsgt	init_queue@i& (0+255),b
  3222  00183C  D001               	goto	l2784
  3223  00183E  0012               	return	
  3224  001840                     l2784:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;messages.c: 20: qptr->queue[i].full = 0;
  3228  001840  0100               	movlb	0	; () banked
  3229  001842  0100               	movlb	0	; () banked
  3230  001844  51B6               	movf	init_queue@i& (0+255),w,b
  3231  001846  0D0D               	mullw	13
  3232  001848  50F3               	movf	prodl,w,c
  3233  00184A  0100               	movlb	0	; () banked
  3234  00184C  0100               	movlb	0	; () banked
  3235  00184E  25B3               	addwf	init_queue@qptr& (0+255),w,b
  3236  001850  6ED9               	movwf	fsr2l,c
  3237  001852  50F4               	movf	prodh,w,c
  3238  001854  0100               	movlb	0	; () banked
  3239  001856  0100               	movlb	0	; () banked
  3240  001858  21B4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3241  00185A  6EDA               	movwf	fsr2h,c
  3242  00185C  0E00               	movlw	0
  3243  00185E  6EDF               	movwf	indf2,c
  3244                           
  3245                           ; BSR set to: 0
  3246  001860  0100               	movlb	0	; () banked
  3247  001862  0100               	movlb	0	; () banked
  3248  001864  2BB6               	incf	init_queue@i& (0+255),f,b
  3249                           
  3250                           ; BSR set to: 0
  3251  001866  0E03               	movlw	3
  3252  001868  0100               	movlb	0	; () banked
  3253  00186A  0100               	movlb	0	; () banked
  3254  00186C  65B6               	cpfsgt	init_queue@i& (0+255),b
  3255  00186E  D7E8               	goto	l2784
  3256  001870  0012               	return	
  3257  001872                     __end_of_init_queue:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           postinc0	equ	0xFEE
  3263                           wreg	equ	0xFE8
  3264                           indf1	equ	0xFE7
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           indf2	equ	0xFDF
  3268                           postinc2	equ	0xFDE
  3269                           postdec2	equ	0xFDD
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _init_i2c *****************
  3275 ;; Defined at:
  3276 ;;		line 268 in file "src/my_i2c.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  ic              2   51[BANK0 ] PTR struct __i2c_comm
  3279 ;;		 -> main@ic(28), 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3291 ;;      Params:         0       2       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0
  3294 ;;      Totals:         0       2       0       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:   10
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text14
  3306  001956                     __ptext14:
  3307                           	opt stack 0
  3308  001956                     _init_i2c:
  3309                           	opt stack 20
  3310                           
  3311                           ;my_i2c.c: 269: ic_ptr = ic;
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;incstack = 0
  3315  001956  0100               	movlb	0	; () banked
  3316  001958  0100               	movlb	0	; () banked
  3317  00195A  C0B4  F0CC         	movff	init_i2c@ic+1,_ic_ptr+1
  3318  00195E  0100               	movlb	0	; () banked
  3319  001960  0100               	movlb	0	; () banked
  3320  001962  C0B3  F0CB         	movff	init_i2c@ic,_ic_ptr
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3324  001966  0100               	movlb	0	; () banked
  3325  001968  EE20 F00A          	lfsr	2,10
  3326  00196C  0100               	movlb	0	; () banked
  3327  00196E  51CB               	movf	_ic_ptr& (0+255),w,b
  3328  001970  26D9               	addwf	fsr2l,f,c
  3329  001972  0100               	movlb	0	; () banked
  3330  001974  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3331  001976  22DA               	addwfc	fsr2h,f,c
  3332  001978  0E00               	movlw	0
  3333  00197A  6EDF               	movwf	indf2,c
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3337  00197C  0100               	movlb	0	; () banked
  3338  00197E  EE20 F00B          	lfsr	2,11
  3339  001982  0100               	movlb	0	; () banked
  3340  001984  51CB               	movf	_ic_ptr& (0+255),w,b
  3341  001986  26D9               	addwf	fsr2l,f,c
  3342  001988  0100               	movlb	0	; () banked
  3343  00198A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3344  00198C  22DA               	addwfc	fsr2h,f,c
  3345  00198E  0E00               	movlw	0
  3346  001990  6EDF               	movwf	indf2,c
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3350  001992  0100               	movlb	0	; () banked
  3351  001994  EE20 F00C          	lfsr	2,12
  3352  001998  0100               	movlb	0	; () banked
  3353  00199A  51CB               	movf	_ic_ptr& (0+255),w,b
  3354  00199C  26D9               	addwf	fsr2l,f,c
  3355  00199E  0100               	movlb	0	; () banked
  3356  0019A0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3357  0019A2  22DA               	addwfc	fsr2h,f,c
  3358  0019A4  0E05               	movlw	5
  3359  0019A6  6EDF               	movwf	indf2,c
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3363  0019A8  0100               	movlb	0	; () banked
  3364  0019AA  EE20 F00E          	lfsr	2,14
  3365  0019AE  0100               	movlb	0	; () banked
  3366  0019B0  51CB               	movf	_ic_ptr& (0+255),w,b
  3367  0019B2  26D9               	addwf	fsr2l,f,c
  3368  0019B4  0100               	movlb	0	; () banked
  3369  0019B6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3370  0019B8  22DA               	addwfc	fsr2h,f,c
  3371  0019BA  0E00               	movlw	0
  3372  0019BC  6EDF               	movwf	indf2,c
  3373                           
  3374                           ; BSR set to: 0
  3375  0019BE  0012               	return	
  3376  0019C0                     __end_of_init_i2c:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           indf1	equ	0xFE7
  3384                           fsr1h	equ	0xFE2
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           postinc2	equ	0xFDE
  3388                           postdec2	equ	0xFDD
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function _i2c_configure_slave *****************
  3394 ;; Defined at:
  3395 ;;		line 279 in file "src/my_i2c.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  addr            1    wreg     unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  addr            1   51[BANK0 ] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       1       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         0       1       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:   10
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text15
  3424  001EA0                     __ptext15:
  3425                           	opt stack 0
  3426  001EA0                     _i2c_configure_slave:
  3427                           	opt stack 20
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;incstack = 0
  3431                           ;i2c_configure_slave@addr stored from wreg
  3432  001EA0  CFE8 F0B3          	movff	wreg,i2c_configure_slave@addr
  3433                           
  3434                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3435  001EA4  8694               	bsf	3988,3,c	;volatile
  3436                           
  3437                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3438  001EA6  8894               	bsf	3988,4,c	;volatile
  3439                           
  3440                           ;my_i2c.c: 297: SSPADD = addr;
  3441  001EA8  C0B3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3442                           
  3443                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3444  001EAC  0E00               	movlw	0
  3445  001EAE  6EC7               	movwf	4039,c	;volatile
  3446                           
  3447                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3448  001EB0  0E00               	movlw	0
  3449  001EB2  6EC6               	movwf	4038,c	;volatile
  3450                           
  3451                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3452  001EB4  0E00               	movlw	0
  3453  001EB6  6EC5               	movwf	4037,c	;volatile
  3454                           
  3455                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3456  001EB8  0E0E               	movlw	14
  3457  001EBA  12C6               	iorwf	4038,f,c	;volatile
  3458                           
  3459                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3460  001EBC  8EC7               	bsf	4039,7,c	;volatile
  3461                           
  3462                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3463  001EBE  8694               	bsf	3988,3,c	;volatile
  3464                           
  3465                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3466  001EC0  8894               	bsf	3988,4,c	;volatile
  3467                           
  3468                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3469  001EC2  80C5               	bsf	4037,0,c	;volatile
  3470                           
  3471                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3472  001EC4  8AC6               	bsf	4038,5,c	;volatile
  3473  001EC6  0012               	return	
  3474  001EC8                     __end_of_i2c_configure_slave:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           postinc0	equ	0xFEE
  3480                           wreg	equ	0xFE8
  3481                           indf1	equ	0xFE7
  3482                           fsr1h	equ	0xFE2
  3483                           fsr1l	equ	0xFE1
  3484                           indf2	equ	0xFDF
  3485                           postinc2	equ	0xFDE
  3486                           postdec2	equ	0xFDD
  3487                           fsr2h	equ	0xFDA
  3488                           fsr2l	equ	0xFD9
  3489                           status	equ	0xFD8
  3490                           
  3491 ;; *************** function _enable_interrupts *****************
  3492 ;; Defined at:
  3493 ;;		line 14 in file "src/interrupts.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		None
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:   10
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text16
  3522  001FE2                     __ptext16:
  3523                           	opt stack 0
  3524  001FE2                     _enable_interrupts:
  3525                           	opt stack 20
  3526                           
  3527                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3528                           
  3529                           ;incstack = 0
  3530  001FE2  8ED0               	bsf	4048,7,c	;volatile
  3531                           
  3532                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3533  001FE4  8EF2               	bsf	intcon,7,c	;volatile
  3534                           
  3535                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3536  001FE6  8CF2               	bsf	intcon,6,c	;volatile
  3537  001FE8  0012               	return	
  3538  001FEA                     __end_of_enable_interrupts:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           wreg	equ	0xFE8
  3546                           indf1	equ	0xFE7
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _block_on_To_msgqueues *****************
  3557 ;; Defined at:
  3558 ;;		line 258 in file "src/messages.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;		None               void
  3565 ;; Registers used:
  3566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0
  3574 ;;      Temps:          0       1       0       0       0
  3575 ;;      Totals:         0       1       0       0       0
  3576 ;;Total ram usage:        1 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:   13
  3579 ;; This function calls:
  3580 ;;		_Delay1KTCYx
  3581 ;;		_check_msg
  3582 ;;		_in_main
  3583 ;; This function is called by:
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text17
  3589  001872                     __ptext17:
  3590                           	opt stack 0
  3591  001872                     _block_on_To_msgqueues:
  3592                           	opt stack 17
  3593                           
  3594                           ;messages.c: 259: if (!in_main()) {
  3595                           
  3596                           ;incstack = 0
  3597  001872  ECE1  F00D         	call	_in_main	;wreg free
  3598  001876  0100               	movlb	0	; () banked
  3599  001878  0100               	movlb	0	; () banked
  3600  00187A  51B8               	movf	(?_in_main+1)& (0+255),w,b
  3601  00187C  0100               	movlb	0	; () banked
  3602  00187E  11B7               	iorwf	?_in_main& (0+255),w,b
  3603  001880  B4D8               	btfsc	status,2,c
  3604  001882  0012               	return	
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;messages.c: 261: }
  3608                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3609                           
  3610                           ; BSR set to: 0
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;messages.c: 260: return;
  3614  001884  0100               	movlb	0	; () banked
  3615  001886  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3616  001888  0E01               	movlw	1
  3617  00188A  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  3618  00188C  0100               	movlb	0	; () banked
  3619  00188E  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3620  001890                     l2696:
  3621                           
  3622                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3623  001890  0101               	movlb	1	; () banked
  3624  001892  0E01               	movlw	high _ToMainHigh_MQ
  3625  001894  0100               	movlb	0	; () banked
  3626  001896  0100               	movlb	0	; () banked
  3627  001898  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  3628  00189A  0101               	movlb	1	; () banked
  3629  00189C  0EC8               	movlw	low _ToMainHigh_MQ
  3630  00189E  0100               	movlb	0	; () banked
  3631  0018A0  0100               	movlb	0	; () banked
  3632  0018A2  6FB3               	movwf	check_msg@qptr& (0+255),b
  3633  0018A4  ECBB  F00E         	call	_check_msg	;wreg free
  3634  0018A8  0900               	iorlw	0
  3635  0018AA  B4D8               	btfsc	status,2,c
  3636  0018AC  D007               	goto	l2702
  3637                           
  3638                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3639  0018AE  0100               	movlb	0	; () banked
  3640  0018B0  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3641  0018B2  0E00               	movlw	0
  3642  0018B4  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  3643  0018B6  0100               	movlb	0	; () banked
  3644  0018B8  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3645  0018BA  0012               	return	
  3646  0018BC                     l2702:
  3647                           
  3648                           ;messages.c: 271: }
  3649                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3650  0018BC  0E00               	movlw	high _ToMainLow_MQ
  3651  0018BE  0100               	movlb	0	; () banked
  3652  0018C0  0100               	movlb	0	; () banked
  3653  0018C2  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  3654  0018C4  0E3E               	movlw	low _ToMainLow_MQ
  3655  0018C6  0100               	movlb	0	; () banked
  3656  0018C8  0100               	movlb	0	; () banked
  3657  0018CA  6FB3               	movwf	check_msg@qptr& (0+255),b
  3658  0018CC  ECBB  F00E         	call	_check_msg	;wreg free
  3659  0018D0  0900               	iorlw	0
  3660  0018D2  B4D8               	btfsc	status,2,c
  3661  0018D4  D007               	goto	l2708
  3662                           
  3663                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3664  0018D6  0100               	movlb	0	; () banked
  3665  0018D8  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  3666  0018DA  0E00               	movlw	0
  3667  0018DC  6E3C               	movwf	_MQ_Main_Willing_to_block,c
  3668  0018DE  0100               	movlb	0	; () banked
  3669  0018E0  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3670  0018E2  0012               	return	
  3671  0018E4                     l2708:
  3672                           
  3673                           ;messages.c: 278: }
  3674                           ;messages.c: 279: Delay1KTCYx(10);
  3675  0018E4  0E0A               	movlw	10
  3676  0018E6  ECA7  F00F         	call	_Delay1KTCYx
  3677  0018EA  D7D2               	goto	l2696
  3678  0018EC                     __end_of_block_on_To_msgqueues:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           intcon	equ	0xFF2
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           indf1	equ	0xFE7
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           postdec2	equ	0xFDD
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _in_main *****************
  3697 ;; Defined at:
  3698 ;;		line 40 in file "src/interrupts.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2   55[BANK0 ] int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3712 ;;      Params:         0       2       0       0       0
  3713 ;;      Locals:         0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0
  3715 ;;      Totals:         0       2       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:   12
  3719 ;; This function calls:
  3720 ;;		_in_high_int
  3721 ;;		_in_low_int
  3722 ;; This function is called by:
  3723 ;;		_block_on_To_msgqueues
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text18
  3728  001BC2                     __ptext18:
  3729                           	opt stack 0
  3730  001BC2                     _in_main:
  3731                           	opt stack 17
  3732                           
  3733                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3734                           
  3735                           ;incstack = 0
  3736  001BC2  EC9B  F00D         	call	_in_low_int	;wreg free
  3737  001BC6  0100               	movlb	0	; () banked
  3738  001BC8  0100               	movlb	0	; () banked
  3739  001BCA  51B6               	movf	(?_in_low_int+1)& (0+255),w,b
  3740  001BCC  0100               	movlb	0	; () banked
  3741  001BCE  11B5               	iorwf	?_in_low_int& (0+255),w,b
  3742  001BD0  A4D8               	btfss	status,2,c
  3743  001BD2  D011               	goto	l2280
  3744                           
  3745                           ; BSR set to: 0
  3746  001BD4  ECC4  F00F         	call	_in_high_int	;wreg free
  3747  001BD8  0100               	movlb	0	; () banked
  3748  001BDA  0100               	movlb	0	; () banked
  3749  001BDC  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  3750  001BDE  0100               	movlb	0	; () banked
  3751  001BE0  11B3               	iorwf	?_in_high_int& (0+255),w,b
  3752  001BE2  A4D8               	btfss	status,2,c
  3753  001BE4  D008               	goto	l2280
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;interrupts.c: 42: return (1);
  3757  001BE6  0E00               	movlw	0
  3758  001BE8  0100               	movlb	0	; () banked
  3759  001BEA  0100               	movlb	0	; () banked
  3760  001BEC  6FB8               	movwf	(?_in_main+1)& (0+255),b
  3761  001BEE  0E01               	movlw	1
  3762  001BF0  0100               	movlb	0	; () banked
  3763  001BF2  6FB7               	movwf	?_in_main& (0+255),b
  3764  001BF4  0012               	return	
  3765  001BF6                     l2280:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;interrupts.c: 44: return (0);
  3769  001BF6  0E00               	movlw	0
  3770  001BF8  0100               	movlb	0	; () banked
  3771  001BFA  0100               	movlb	0	; () banked
  3772  001BFC  6FB8               	movwf	(?_in_main+1)& (0+255),b
  3773  001BFE  0E00               	movlw	0
  3774  001C00  0100               	movlb	0	; () banked
  3775  001C02  6FB7               	movwf	?_in_main& (0+255),b
  3776  001C04  0012               	return	
  3777  001C06                     __end_of_in_main:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           indf1	equ	0xFE7
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           postdec2	equ	0xFDD
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _in_low_int *****************
  3796 ;; Defined at:
  3797 ;;		line 30 in file "src/interrupts.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2   53[BANK0 ] int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3811 ;;      Params:         0       2       0       0       0
  3812 ;;      Locals:         0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0
  3814 ;;      Totals:         0       2       0       0       0
  3815 ;;Total ram usage:        2 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:   11
  3818 ;; This function calls:
  3819 ;;		_in_high_int
  3820 ;; This function is called by:
  3821 ;;		_in_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text19
  3826  001B36                     __ptext19:
  3827                           	opt stack 0
  3828  001B36                     _in_low_int:
  3829                           	opt stack 17
  3830                           
  3831                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;incstack = 0
  3835  001B36  ACF2               	btfss	intcon,6,c	;volatile
  3836  001B38  D008               	goto	l2258
  3837                           
  3838                           ;interrupts.c: 32: return (0);
  3839  001B3A  0E00               	movlw	0
  3840  001B3C  0100               	movlb	0	; () banked
  3841  001B3E  0100               	movlb	0	; () banked
  3842  001B40  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  3843  001B42  0E00               	movlw	0
  3844  001B44  0100               	movlb	0	; () banked
  3845  001B46  6FB5               	movwf	?_in_low_int& (0+255),b
  3846  001B48  0012               	return	
  3847  001B4A                     l2258:
  3848  001B4A  ECC4  F00F         	call	_in_high_int	;wreg free
  3849  001B4E  0100               	movlb	0	; () banked
  3850  001B50  0100               	movlb	0	; () banked
  3851  001B52  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  3852  001B54  0100               	movlb	0	; () banked
  3853  001B56  11B3               	iorwf	?_in_high_int& (0+255),w,b
  3854  001B58  B4D8               	btfsc	status,2,c
  3855  001B5A  D008               	goto	l2266
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;interrupts.c: 34: return (0);
  3859  001B5C  0E00               	movlw	0
  3860  001B5E  0100               	movlb	0	; () banked
  3861  001B60  0100               	movlb	0	; () banked
  3862  001B62  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  3863  001B64  0E00               	movlw	0
  3864  001B66  0100               	movlb	0	; () banked
  3865  001B68  6FB5               	movwf	?_in_low_int& (0+255),b
  3866  001B6A  0012               	return	
  3867  001B6C                     l2266:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;interrupts.c: 36: return (1);
  3871  001B6C  0E00               	movlw	0
  3872  001B6E  0100               	movlb	0	; () banked
  3873  001B70  0100               	movlb	0	; () banked
  3874  001B72  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  3875  001B74  0E01               	movlw	1
  3876  001B76  0100               	movlb	0	; () banked
  3877  001B78  6FB5               	movwf	?_in_low_int& (0+255),b
  3878  001B7A  0012               	return	
  3879  001B7C                     __end_of_in_low_int:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           postinc0	equ	0xFEE
  3886                           wreg	equ	0xFE8
  3887                           indf1	equ	0xFE7
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           indf2	equ	0xFDF
  3891                           postinc2	equ	0xFDE
  3892                           postdec2	equ	0xFDD
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function _in_high_int *****************
  3898 ;; Defined at:
  3899 ;;		line 22 in file "src/interrupts.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2   51[BANK0 ] int 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3913 ;;      Params:         0       2       0       0       0
  3914 ;;      Locals:         0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0
  3916 ;;      Totals:         0       2       0       0       0
  3917 ;;Total ram usage:        2 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:   10
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_in_low_int
  3924 ;;		_in_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text20
  3929  001F88                     __ptext20:
  3930                           	opt stack 0
  3931  001F88                     _in_high_int:
  3932                           	opt stack 17
  3933                           
  3934                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;incstack = 0
  3938  001F88  0E00               	movlw	0
  3939  001F8A  AEF2               	btfss	intcon,7,c	;volatile
  3940  001F8C  0E01               	movlw	1
  3941  001F8E  0100               	movlb	0	; () banked
  3942  001F90  0100               	movlb	0	; () banked
  3943  001F92  6FB3               	movwf	?_in_high_int& (0+255),b
  3944  001F94  0100               	movlb	0	; () banked
  3945  001F96  6BB4               	clrf	(?_in_high_int+1)& (0+255),b
  3946  001F98  0012               	return	
  3947  001F9A                     __end_of_in_high_int:
  3948                           	opt stack 0
  3949                           tblptru	equ	0xFF8
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           fsr1h	equ	0xFE2
  3957                           fsr1l	equ	0xFE1
  3958                           indf2	equ	0xFDF
  3959                           postinc2	equ	0xFDE
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _check_msg *****************
  3966 ;; Defined at:
  3967 ;;		line 222 in file "src/messages.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  3970 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      unsigned char 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3982 ;;      Params:         0       2       0       0       0
  3983 ;;      Locals:         0       0       0       0       0
  3984 ;;      Temps:          0       1       0       0       0
  3985 ;;      Totals:         0       3       0       0       0
  3986 ;;Total ram usage:        3 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:   10
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_block_on_To_msgqueues
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text21
  3997  001D76                     __ptext21:
  3998                           	opt stack 0
  3999  001D76                     _check_msg:
  4000                           	opt stack 19
  4001                           
  4002                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;incstack = 0
  4006  001D76  0100               	movlb	0	; () banked
  4007  001D78  EE20 F035          	lfsr	2,53
  4008  001D7C  0100               	movlb	0	; () banked
  4009  001D7E  51B3               	movf	check_msg@qptr& (0+255),w,b
  4010  001D80  26D9               	addwf	fsr2l,f,c
  4011  001D82  0100               	movlb	0	; () banked
  4012  001D84  51B4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4013  001D86  22DA               	addwfc	fsr2h,f,c
  4014  001D88  50DF               	movf	indf2,w,c
  4015  001D8A  0100               	movlb	0	; () banked
  4016  001D8C  6FB5               	movwf	??_check_msg& (0+255),b
  4017  001D8E  0100               	movlb	0	; () banked
  4018  001D90  51B5               	movf	??_check_msg& (0+255),w,b
  4019  001D92  0D0D               	mullw	13
  4020  001D94  50F3               	movf	prodl,w,c
  4021  001D96  0100               	movlb	0	; () banked
  4022  001D98  0100               	movlb	0	; () banked
  4023  001D9A  25B3               	addwf	check_msg@qptr& (0+255),w,b
  4024  001D9C  6ED9               	movwf	fsr2l,c
  4025  001D9E  50F4               	movf	prodh,w,c
  4026  001DA0  0100               	movlb	0	; () banked
  4027  001DA2  0100               	movlb	0	; () banked
  4028  001DA4  21B4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4029  001DA6  6EDA               	movwf	fsr2h,c
  4030  001DA8  50DF               	movf	indf2,w,c
  4031  001DAA  0012               	return	
  4032  001DAC                     __end_of_check_msg:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           fsr1h	equ	0xFE2
  4042                           fsr1l	equ	0xFE1
  4043                           indf2	equ	0xFDF
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           fsr2h	equ	0xFDA
  4047                           fsr2l	equ	0xFD9
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function _Delay1KTCYx *****************
  4051 ;; Defined at:
  4052 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  unit            1    wreg     unsigned char 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  unit            1   51[BANK0 ] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       1       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         0       1       0       0       0
  4070 ;;Total ram usage:        1 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:   10
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_block_on_To_msgqueues
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text22
  4081  001F4E                     __ptext22:
  4082                           	opt stack 0
  4083  001F4E                     _Delay1KTCYx:
  4084                           	opt stack 19
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;incstack = 0
  4088                           ;Delay1KTCYx@unit stored from wreg
  4089  001F4E  CFE8 F0B3          	movff	wreg,Delay1KTCYx@unit
  4090  001F52                     l734:
  4091  001F52  0EFA               	movlw	250
  4092  001F54                     u2667:
  4093  001F54  F000               	nop	
  4094  001F56  2EE8               	decfsz	wreg,f,c
  4095  001F58  D7FD               	goto	u2667
  4096  001F5A  0100               	movlb	0	; () banked
  4097  001F5C  0100               	movlb	0	; () banked
  4098  001F5E  2FB3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4099  001F60  D7F8               	goto	l734
  4100  001F62  0012               	return	
  4101  001F64                     __end_of_Delay1KTCYx:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           indf1	equ	0xFE7
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _ToMainLow_recvmsg *****************
  4120 ;; Defined at:
  4121 ;;		line 112 in file "src/messages.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  maxlength       1    wreg     unsigned char 
  4124 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4125 ;;		 -> main@msgtype(1), 
  4126 ;;  data            2    2[BANK1 ] PTR void 
  4127 ;;		 -> main@msgbuffer(11), 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      char 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4139 ;;      Params:         0       0       4       0       0
  4140 ;;      Locals:         0       0       1       0       0
  4141 ;;      Temps:          0       0       0       0       0
  4142 ;;      Totals:         0       0       5       0       0
  4143 ;;Total ram usage:        5 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:   12
  4146 ;; This function calls:
  4147 ;;		_recv_msg
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text23
  4154  001CCA                     __ptext23:
  4155                           	opt stack 0
  4156  001CCA                     _ToMainLow_recvmsg:
  4157                           	opt stack 18
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;incstack = 0
  4161                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4162  001CCA  CFE8 F104          	movff	wreg,ToMainLow_recvmsg@maxlength
  4163                           
  4164                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4165  001CCE  0E00               	movlw	high _ToMainLow_MQ
  4166  001CD0  0100               	movlb	0	; () banked
  4167  001CD2  0100               	movlb	0	; () banked
  4168  001CD4  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4169  001CD6  0E3E               	movlw	low _ToMainLow_MQ
  4170  001CD8  0100               	movlb	0	; () banked
  4171  001CDA  0100               	movlb	0	; () banked
  4172  001CDC  6FBD               	movwf	recv_msg@qptr& (0+255),b
  4173  001CDE  C104  F0BF         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4174  001CE2  0101               	movlb	1	; () banked
  4175  001CE4  0100               	movlb	0	; () banked
  4176  001CE6  C101  F0C1         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4177  001CEA  0101               	movlb	1	; () banked
  4178  001CEC  0100               	movlb	0	; () banked
  4179  001CEE  C100  F0C0         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4180  001CF2  0101               	movlb	1	; () banked
  4181  001CF4  0100               	movlb	0	; () banked
  4182  001CF6  C103  F0C3         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4183  001CFA  0101               	movlb	1	; () banked
  4184  001CFC  0100               	movlb	0	; () banked
  4185  001CFE  C102  F0C2         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4186  001D02  ECEF  F005         	call	_recv_msg	;wreg free
  4187  001D06  0012               	return	
  4188  001D08                     __end_of_ToMainLow_recvmsg:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           indf1	equ	0xFE7
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           indf2	equ	0xFDF
  4200                           postinc2	equ	0xFDE
  4201                           postdec2	equ	0xFDD
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206 ;; *************** function _ToMainHigh_recvmsg *****************
  4207 ;; Defined at:
  4208 ;;		line 135 in file "src/messages.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  maxlength       1    wreg     unsigned char 
  4211 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4212 ;;		 -> main@msgtype(1), 
  4213 ;;  data            2    2[BANK1 ] PTR void 
  4214 ;;		 -> main@msgbuffer(11), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      char 
  4219 ;; Registers used:
  4220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4226 ;;      Params:         0       0       4       0       0
  4227 ;;      Locals:         0       0       1       0       0
  4228 ;;      Temps:          0       0       0       0       0
  4229 ;;      Totals:         0       0       5       0       0
  4230 ;;Total ram usage:        5 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:   12
  4233 ;; This function calls:
  4234 ;;		_recv_msg
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text24
  4241  001C06                     __ptext24:
  4242                           	opt stack 0
  4243  001C06                     _ToMainHigh_recvmsg:
  4244                           	opt stack 18
  4245                           
  4246                           ;incstack = 0
  4247                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4248  001C06  CFE8 F104          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4249                           
  4250                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4251  001C0A  0101               	movlb	1	; () banked
  4252  001C0C  0E01               	movlw	high _ToMainHigh_MQ
  4253  001C0E  0100               	movlb	0	; () banked
  4254  001C10  0100               	movlb	0	; () banked
  4255  001C12  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4256  001C14  0101               	movlb	1	; () banked
  4257  001C16  0EC8               	movlw	low _ToMainHigh_MQ
  4258  001C18  0100               	movlb	0	; () banked
  4259  001C1A  0100               	movlb	0	; () banked
  4260  001C1C  6FBD               	movwf	recv_msg@qptr& (0+255),b
  4261  001C1E  C104  F0BF         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4262  001C22  0101               	movlb	1	; () banked
  4263  001C24  0100               	movlb	0	; () banked
  4264  001C26  C101  F0C1         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4265  001C2A  0101               	movlb	1	; () banked
  4266  001C2C  0100               	movlb	0	; () banked
  4267  001C2E  C100  F0C0         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4268  001C32  0101               	movlb	1	; () banked
  4269  001C34  0100               	movlb	0	; () banked
  4270  001C36  C103  F0C3         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4271  001C3A  0101               	movlb	1	; () banked
  4272  001C3C  0100               	movlb	0	; () banked
  4273  001C3E  C102  F0C2         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4274  001C42  ECEF  F005         	call	_recv_msg	;wreg free
  4275  001C46  0012               	return	
  4276  001C48                     __end_of_ToMainHigh_recvmsg:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           indf1	equ	0xFE7
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           postinc2	equ	0xFDE
  4289                           postdec2	equ	0xFDD
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _recv_msg *****************
  4295 ;; Defined at:
  4296 ;;		line 63 in file "src/messages.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  qptr            2   61[BANK0 ] PTR struct __msg_queue
  4299 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4300 ;;  maxlength       1   63[BANK0 ] unsigned char 
  4301 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4302 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4303 ;;  data            2   66[BANK0 ] PTR void 
  4304 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  qmsg            2   73[BANK0 ] PTR struct __msg
  4307 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4308 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4309 ;;  tlength         2   71[BANK0 ] unsigned int 
  4310 ;;  slot            1   70[BANK0 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      char 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4320 ;;      Params:         0       7       0       0       0
  4321 ;;      Locals:         0       5       0       0       0
  4322 ;;      Temps:          0       2       0       0       0
  4323 ;;      Totals:         0      14       0       0       0
  4324 ;;Total ram usage:       14 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   11
  4327 ;; This function calls:
  4328 ;;		_memcpy
  4329 ;; This function is called by:
  4330 ;;		_ToMainLow_recvmsg
  4331 ;;		_ToMainHigh_recvmsg
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text25
  4336  000BDE                     __ptext25:
  4337                           	opt stack 0
  4338  000BDE                     _recv_msg:
  4339                           	opt stack 18
  4340                           
  4341                           ;messages.c: 64: unsigned char slot;
  4342                           ;messages.c: 68: msg *qmsg;
  4343                           ;messages.c: 69: size_t tlength;
  4344                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4345                           
  4346                           ;incstack = 0
  4347  000BDE  0100               	movlb	0	; () banked
  4348  000BE0  EE20 F035          	lfsr	2,53
  4349  000BE4  0100               	movlb	0	; () banked
  4350  000BE6  51BD               	movf	recv_msg@qptr& (0+255),w,b
  4351  000BE8  26D9               	addwf	fsr2l,f,c
  4352  000BEA  0100               	movlb	0	; () banked
  4353  000BEC  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4354  000BEE  22DA               	addwfc	fsr2h,f,c
  4355  000BF0  50DF               	movf	indf2,w,c
  4356  000BF2  0100               	movlb	0	; () banked
  4357  000BF4  0100               	movlb	0	; () banked
  4358  000BF6  6FC6               	movwf	recv_msg@slot& (0+255),b
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4362  000BF8  0100               	movlb	0	; () banked
  4363  000BFA  0100               	movlb	0	; () banked
  4364  000BFC  51C6               	movf	recv_msg@slot& (0+255),w,b
  4365  000BFE  0D0D               	mullw	13
  4366  000C00  50F3               	movf	prodl,w,c
  4367  000C02  0100               	movlb	0	; () banked
  4368  000C04  0100               	movlb	0	; () banked
  4369  000C06  25BD               	addwf	recv_msg@qptr& (0+255),w,b
  4370  000C08  0100               	movlb	0	; () banked
  4371  000C0A  0100               	movlb	0	; () banked
  4372  000C0C  6FC9               	movwf	recv_msg@qmsg& (0+255),b
  4373  000C0E  50F4               	movf	prodh,w,c
  4374  000C10  0100               	movlb	0	; () banked
  4375  000C12  0100               	movlb	0	; () banked
  4376  000C14  21BE               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4377  000C16  0100               	movlb	0	; () banked
  4378  000C18  6FCA               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;messages.c: 74: if (qmsg->full == 1) {
  4382  000C1A  0E01               	movlw	1
  4383  000C1C  C0C9  FFD9         	movff	recv_msg@qmsg,fsr2l
  4384  000C20  C0CA  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4385  000C24  62DF               	cpfseq	indf2,c
  4386  000C26  D074               	goto	l3588
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4390  000C28  0100               	movlb	0	; () banked
  4391  000C2A  EE20 F001          	lfsr	2,1
  4392  000C2E  0100               	movlb	0	; () banked
  4393  000C30  51C9               	movf	recv_msg@qmsg& (0+255),w,b
  4394  000C32  26D9               	addwf	fsr2l,f,c
  4395  000C34  0100               	movlb	0	; () banked
  4396  000C36  51CA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4397  000C38  22DA               	addwfc	fsr2h,f,c
  4398  000C3A  50DF               	movf	indf2,w,c
  4399  000C3C  0100               	movlb	0	; () banked
  4400  000C3E  0100               	movlb	0	; () banked
  4401  000C40  5DBF               	subwf	recv_msg@maxlength& (0+255),w,b
  4402  000C42  B0D8               	btfsc	status,0,c
  4403  000C44  D002               	goto	l3572
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;messages.c: 77: return (-3);
  4407  000C46  0EFD               	movlw	253
  4408  000C48  0012               	return	
  4409  000C4A                     l3572:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;messages.c: 78: }
  4413                           ;messages.c: 80: tlength = qmsg->length;
  4414  000C4A  0100               	movlb	0	; () banked
  4415  000C4C  EE20 F001          	lfsr	2,1
  4416  000C50  0100               	movlb	0	; () banked
  4417  000C52  51C9               	movf	recv_msg@qmsg& (0+255),w,b
  4418  000C54  26D9               	addwf	fsr2l,f,c
  4419  000C56  0100               	movlb	0	; () banked
  4420  000C58  51CA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4421  000C5A  22DA               	addwfc	fsr2h,f,c
  4422  000C5C  50DF               	movf	indf2,w,c
  4423  000C5E  0100               	movlb	0	; () banked
  4424  000C60  6FC4               	movwf	??_recv_msg& (0+255),b
  4425  000C62  0100               	movlb	0	; () banked
  4426  000C64  51C4               	movf	??_recv_msg& (0+255),w,b
  4427  000C66  0100               	movlb	0	; () banked
  4428  000C68  0100               	movlb	0	; () banked
  4429  000C6A  6FC7               	movwf	recv_msg@tlength& (0+255),b
  4430  000C6C  0100               	movlb	0	; () banked
  4431  000C6E  6BC8               	clrf	(recv_msg@tlength+1)& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4435  000C70  0100               	movlb	0	; () banked
  4436  000C72  0100               	movlb	0	; () banked
  4437  000C74  C0C3  F0B4         	movff	recv_msg@data+1,memcpy@d1+1
  4438  000C78  0100               	movlb	0	; () banked
  4439  000C7A  0100               	movlb	0	; () banked
  4440  000C7C  C0C2  F0B3         	movff	recv_msg@data,memcpy@d1
  4441  000C80  0E03               	movlw	3
  4442  000C82  0100               	movlb	0	; () banked
  4443  000C84  0100               	movlb	0	; () banked
  4444  000C86  25C9               	addwf	recv_msg@qmsg& (0+255),w,b
  4445  000C88  0100               	movlb	0	; () banked
  4446  000C8A  6FC4               	movwf	??_recv_msg& (0+255),b
  4447  000C8C  0E00               	movlw	0
  4448  000C8E  0100               	movlb	0	; () banked
  4449  000C90  0100               	movlb	0	; () banked
  4450  000C92  21CA               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4451  000C94  0100               	movlb	0	; () banked
  4452  000C96  6FC5               	movwf	(??_recv_msg+1)& (0+255),b
  4453  000C98  C0C4  F0B5         	movff	??_recv_msg,memcpy@s1
  4454  000C9C  C0C5  F0B6         	movff	??_recv_msg+1,memcpy@s1+1
  4455  000CA0  C0C7  F0B7         	movff	recv_msg@tlength,memcpy@n
  4456  000CA4  C0C8  F0B8         	movff	recv_msg@tlength+1,memcpy@n+1
  4457  000CA8  EC13  F00D         	call	_memcpy	;wreg free
  4458                           
  4459                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4460  000CAC  0100               	movlb	0	; () banked
  4461  000CAE  EE20 F035          	lfsr	2,53
  4462  000CB2  0100               	movlb	0	; () banked
  4463  000CB4  51BD               	movf	recv_msg@qptr& (0+255),w,b
  4464  000CB6  26D9               	addwf	fsr2l,f,c
  4465  000CB8  0100               	movlb	0	; () banked
  4466  000CBA  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4467  000CBC  22DA               	addwfc	fsr2h,f,c
  4468  000CBE  0100               	movlb	0	; () banked
  4469  000CC0  EE10 F035          	lfsr	1,53
  4470  000CC4  0100               	movlb	0	; () banked
  4471  000CC6  51BD               	movf	recv_msg@qptr& (0+255),w,b
  4472  000CC8  26E1               	addwf	fsr1l,f,c
  4473  000CCA  0100               	movlb	0	; () banked
  4474  000CCC  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4475  000CCE  22E2               	addwfc	fsr1h,f,c
  4476  000CD0  50E7               	movf	indf1,w,c
  4477  000CD2  0100               	movlb	0	; () banked
  4478  000CD4  6FC4               	movwf	??_recv_msg& (0+255),b
  4479  000CD6  0100               	movlb	0	; () banked
  4480  000CD8  29C4               	incf	??_recv_msg& (0+255),w,b
  4481  000CDA  0B03               	andlw	3
  4482  000CDC  6EDF               	movwf	indf2,c
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4486  000CDE  0100               	movlb	0	; () banked
  4487  000CE0  EE20 F002          	lfsr	2,2
  4488  000CE4  0100               	movlb	0	; () banked
  4489  000CE6  51C9               	movf	recv_msg@qmsg& (0+255),w,b
  4490  000CE8  26D9               	addwf	fsr2l,f,c
  4491  000CEA  0100               	movlb	0	; () banked
  4492  000CEC  51CA               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4493  000CEE  22DA               	addwfc	fsr2h,f,c
  4494  000CF0  C0C0  FFE1         	movff	recv_msg@msgtype,fsr1l
  4495  000CF4  C0C1  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4496  000CF8  CFDF FFE7          	movff	indf2,indf1
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;messages.c: 91: qmsg->full = 0;
  4500  000CFC  C0C9  FFD9         	movff	recv_msg@qmsg,fsr2l
  4501  000D00  C0CA  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4502  000D04  0E00               	movlw	0
  4503  000D06  6EDF               	movwf	indf2,c
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;messages.c: 92: return (tlength);
  4507  000D08  0100               	movlb	0	; () banked
  4508  000D0A  0100               	movlb	0	; () banked
  4509  000D0C  51C7               	movf	recv_msg@tlength& (0+255),w,b
  4510  000D0E  0012               	return	
  4511  000D10                     l3588:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;messages.c: 94: return (-4);
  4515  000D10  0EFC               	movlw	252
  4516  000D12  0012               	return	
  4517  000D14                     __end_of_recv_msg:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           indf1	equ	0xFE7
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function _memcpy *****************
  4536 ;; Defined at:
  4537 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  d1              2   51[BANK0 ] PTR void 
  4540 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4541 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4542 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4543 ;;  s1              2   53[BANK0 ] PTR const void 
  4544 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4545 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4546 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4547 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4548 ;;		 -> main@ic(28), main@uc(5), 
  4549 ;;  n               2   55[BANK0 ] unsigned int 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  s               2   59[BANK0 ] PTR const unsigned char 
  4552 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4553 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4554 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4555 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4556 ;;		 -> main@ic(28), main@uc(5), 
  4557 ;;  d               2   57[BANK0 ] PTR unsigned char 
  4558 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4559 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4560 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   51[BANK0 ] PTR void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4570 ;;      Params:         0       6       0       0       0
  4571 ;;      Locals:         0       4       0       0       0
  4572 ;;      Temps:          0       0       0       0       0
  4573 ;;      Totals:         0      10       0       0       0
  4574 ;;Total ram usage:       10 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:   10
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_send_msg
  4581 ;;		_recv_msg
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text26
  4586  001A26                     __ptext26:
  4587                           	opt stack 0
  4588  001A26                     _memcpy:
  4589                           	opt stack 17
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;incstack = 0
  4593  001A26  0100               	movlb	0	; () banked
  4594  001A28  0100               	movlb	0	; () banked
  4595  001A2A  C0B6  F0BC         	movff	memcpy@s1+1,memcpy@s+1
  4596  001A2E  0100               	movlb	0	; () banked
  4597  001A30  0100               	movlb	0	; () banked
  4598  001A32  C0B5  F0BB         	movff	memcpy@s1,memcpy@s
  4599  001A36  0100               	movlb	0	; () banked
  4600  001A38  0100               	movlb	0	; () banked
  4601  001A3A  C0B4  F0BA         	movff	memcpy@d1+1,memcpy@d+1
  4602  001A3E  0100               	movlb	0	; () banked
  4603  001A40  0100               	movlb	0	; () banked
  4604  001A42  C0B3  F0B9         	movff	memcpy@d1,memcpy@d
  4605  001A46  D012               	goto	l3558
  4606  001A48                     l3552:
  4607                           
  4608                           ; BSR set to: 0
  4609  001A48  C0BB  FFD9         	movff	memcpy@s,fsr2l
  4610  001A4C  C0BC  FFDA         	movff	memcpy@s+1,fsr2h
  4611  001A50  C0B9  FFE1         	movff	memcpy@d,fsr1l
  4612  001A54  C0BA  FFE2         	movff	memcpy@d+1,fsr1h
  4613  001A58  CFDF FFE7          	movff	indf2,indf1
  4614                           
  4615                           ; BSR set to: 0
  4616  001A5C  0100               	movlb	0	; () banked
  4617  001A5E  0100               	movlb	0	; () banked
  4618  001A60  4BBB               	infsnz	memcpy@s& (0+255),f,b
  4619  001A62  2BBC               	incf	(memcpy@s+1)& (0+255),f,b
  4620                           
  4621                           ; BSR set to: 0
  4622  001A64  0100               	movlb	0	; () banked
  4623  001A66  0100               	movlb	0	; () banked
  4624  001A68  4BB9               	infsnz	memcpy@d& (0+255),f,b
  4625  001A6A  2BBA               	incf	(memcpy@d+1)& (0+255),f,b
  4626  001A6C                     l3558:
  4627                           
  4628                           ; BSR set to: 0
  4629  001A6C  0100               	movlb	0	; () banked
  4630  001A6E  0100               	movlb	0	; () banked
  4631  001A70  07B7               	decf	memcpy@n& (0+255),f,b
  4632  001A72  A0D8               	btfss	status,0,c
  4633  001A74  07B8               	decf	(memcpy@n+1)& (0+255),f,b
  4634  001A76  0100               	movlb	0	; () banked
  4635  001A78  29B7               	incf	memcpy@n& (0+255),w,b
  4636  001A7A  B4D8               	btfsc	status,2,c
  4637  001A7C  29B8               	incf	(memcpy@n+1)& (0+255),w,b
  4638  001A7E  B4D8               	btfsc	status,2,c
  4639                           
  4640                           ; BSR set to: 0
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;	Return value of _memcpy is never used
  4644  001A80  0012               	return	
  4645  001A82  D7E2               	goto	l3552
  4646  001A84                     __end_of_memcpy:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf1	equ	0xFE7
  4655                           fsr1h	equ	0xFE2
  4656                           fsr1l	equ	0xFE1
  4657                           indf2	equ	0xFDF
  4658                           postinc2	equ	0xFDE
  4659                           postdec2	equ	0xFDD
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _OpenUSART *****************
  4665 ;; Defined at:
  4666 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  config          1    wreg     unsigned char 
  4669 ;;  spbrg           2   51[BANK0 ] unsigned int 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  config          1   56[BANK0 ] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg, status,2
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4681 ;;      Params:         0       2       0       0       0
  4682 ;;      Locals:         0       1       0       0       0
  4683 ;;      Temps:          0       3       0       0       0
  4684 ;;      Totals:         0       6       0       0       0
  4685 ;;Total ram usage:        6 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:   10
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text27
  4696  0015D0                     __ptext27:
  4697                           	opt stack 0
  4698  0015D0                     _OpenUSART:
  4699                           	opt stack 20
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;incstack = 0
  4703                           ;OpenUSART@config stored from wreg
  4704  0015D0  CFE8 F0B8          	movff	wreg,OpenUSART@config
  4705  0015D4  0E00               	movlw	0
  4706  0015D6  6EAC               	movwf	4012,c	;volatile
  4707  0015D8  0E00               	movlw	0
  4708  0015DA  6EAB               	movwf	4011,c	;volatile
  4709  0015DC  0100               	movlb	0	; () banked
  4710  0015DE  0100               	movlb	0	; () banked
  4711  0015E0  B1B8               	btfsc	OpenUSART@config& (0+255),0,b
  4712                           
  4713                           ; BSR set to: 0
  4714  0015E2  88AC               	bsf	4012,4,c	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           
  4718                           ; BSR set to: 0
  4719  0015E4  0100               	movlb	0	; () banked
  4720  0015E6  0100               	movlb	0	; () banked
  4721  0015E8  A3B8               	btfss	OpenUSART@config& (0+255),1,b
  4722  0015EA  D002               	goto	l2628
  4723                           
  4724                           ; BSR set to: 0
  4725  0015EC  8CAC               	bsf	4012,6,c	;volatile
  4726  0015EE  8CAB               	bsf	4011,6,c	;volatile
  4727  0015F0                     l2628:
  4728                           
  4729                           ; BSR set to: 0
  4730  0015F0  0100               	movlb	0	; () banked
  4731  0015F2  0100               	movlb	0	; () banked
  4732  0015F4  B5B8               	btfsc	OpenUSART@config& (0+255),2,b
  4733                           
  4734                           ; BSR set to: 0
  4735  0015F6  8EAC               	bsf	4012,7,c	;volatile
  4736                           
  4737                           ; BSR set to: 0
  4738                           
  4739                           ; BSR set to: 0
  4740  0015F8  0100               	movlb	0	; () banked
  4741  0015FA  0100               	movlb	0	; () banked
  4742  0015FC  A7B8               	btfss	OpenUSART@config& (0+255),3,b
  4743  0015FE  D002               	goto	l501
  4744                           
  4745                           ; BSR set to: 0
  4746  001600  88AB               	bsf	4011,4,c	;volatile
  4747  001602  D001               	goto	l2636
  4748  001604                     l501:
  4749                           
  4750                           ; BSR set to: 0
  4751  001604  8AAB               	bsf	4011,5,c	;volatile
  4752  001606                     l2636:
  4753                           
  4754                           ; BSR set to: 0
  4755  001606  0100               	movlb	0	; () banked
  4756  001608  0100               	movlb	0	; () banked
  4757  00160A  B9B8               	btfsc	OpenUSART@config& (0+255),4,b
  4758                           
  4759                           ; BSR set to: 0
  4760  00160C  84AC               	bsf	4012,2,c	;volatile
  4761                           
  4762                           ; BSR set to: 0
  4763  00160E  989E               	bcf	3998,4,c	;volatile
  4764                           
  4765                           ; BSR set to: 0
  4766  001610  0100               	movlb	0	; () banked
  4767  001612  0100               	movlb	0	; () banked
  4768  001614  BBB8               	btfsc	OpenUSART@config& (0+255),5,b
  4769                           
  4770                           ; BSR set to: 0
  4771  001616  86AB               	bsf	4011,3,c	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774                           
  4775                           ; BSR set to: 0
  4776  001618  0100               	movlb	0	; () banked
  4777  00161A  0100               	movlb	0	; () banked
  4778  00161C  ADB8               	btfss	OpenUSART@config& (0+255),6,b
  4779  00161E  D002               	goto	l505
  4780                           
  4781                           ; BSR set to: 0
  4782  001620  8A9D               	bsf	3997,5,c	;volatile
  4783  001622  D001               	goto	l506
  4784  001624                     l505:
  4785                           
  4786                           ; BSR set to: 0
  4787  001624  9A9D               	bcf	3997,5,c	;volatile
  4788  001626                     l506:
  4789                           
  4790                           ; BSR set to: 0
  4791  001626  9A9E               	bcf	3998,5,c	;volatile
  4792                           
  4793                           ; BSR set to: 0
  4794  001628  0100               	movlb	0	; () banked
  4795  00162A  0100               	movlb	0	; () banked
  4796  00162C  AFB8               	btfss	OpenUSART@config& (0+255),7,b
  4797  00162E  D002               	goto	l507
  4798                           
  4799                           ; BSR set to: 0
  4800  001630  889D               	bsf	3997,4,c	;volatile
  4801  001632  D001               	goto	l508
  4802  001634                     l507:
  4803                           
  4804                           ; BSR set to: 0
  4805  001634  989D               	bcf	3997,4,c	;volatile
  4806  001636                     l508:
  4807                           
  4808                           ; BSR set to: 0
  4809  001636  C0B3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4810                           
  4811                           ; BSR set to: 0
  4812  00163A  0100               	movlb	0	; () banked
  4813  00163C  C0B4  F0B5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4814  001640  C0B5  F0B6         	movff	??_OpenUSART,??_OpenUSART+1
  4815  001644  0100               	movlb	0	; () banked
  4816  001646  6BB7               	clrf	(??_OpenUSART+2)& (0+255),b
  4817  001648  0100               	movlb	0	; () banked
  4818  00164A  51B6               	movf	(??_OpenUSART+1)& (0+255),w,b
  4819  00164C  6EB0               	movwf	4016,c	;volatile
  4820                           
  4821                           ; BSR set to: 0
  4822  00164E  8AAC               	bsf	4012,5,c	;volatile
  4823                           
  4824                           ; BSR set to: 0
  4825  001650  8EAB               	bsf	4011,7,c	;volatile
  4826                           
  4827                           ; BSR set to: 0
  4828  001652  9C94               	bcf	3988,6,c	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831  001654  8E94               	bsf	3988,7,c	;volatile
  4832                           
  4833                           ; BSR set to: 0
  4834  001656  A8AC               	btfss	4012,4,c	;volatile
  4835  001658  0012               	return	
  4836                           
  4837                           ; BSR set to: 0
  4838  00165A  BEAC               	btfsc	4012,7,c	;volatile
  4839  00165C  0012               	return	
  4840                           
  4841                           ; BSR set to: 0
  4842  00165E  8C94               	bsf	3988,6,c	;volatile
  4843  001660  0012               	return	
  4844  001662                     __end_of_OpenUSART:
  4845                           	opt stack 0
  4846                           tblptru	equ	0xFF8
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           indf1	equ	0xFE7
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _OpenTimer1 *****************
  4863 ;; Defined at:
  4864 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  config          1    wreg     unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  config          1   51[BANK0 ] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;		None               void
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4878 ;;      Params:         0       0       0       0       0
  4879 ;;      Locals:         0       1       0       0       0
  4880 ;;      Temps:          0       0       0       0       0
  4881 ;;      Totals:         0       1       0       0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:   10
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text28
  4893  001D08                     __ptext28:
  4894                           	opt stack 0
  4895  001D08                     _OpenTimer1:
  4896                           	opt stack 20
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;incstack = 0
  4900                           ;OpenTimer1@config stored from wreg
  4901  001D08  CFE8 F0B3          	movff	wreg,OpenTimer1@config
  4902  001D0C  0100               	movlb	0	; () banked
  4903  001D0E  0100               	movlb	0	; () banked
  4904  001D10  51B3               	movf	OpenTimer1@config& (0+255),w,b
  4905  001D12  0B7E               	andlw	126
  4906  001D14  6ECD               	movwf	4045,c	;volatile
  4907                           
  4908                           ; BSR set to: 0
  4909  001D16  0100               	movlb	0	; () banked
  4910  001D18  0100               	movlb	0	; () banked
  4911  001D1A  ADB3               	btfss	OpenTimer1@config& (0+255),6,b
  4912  001D1C  D002               	goto	l457
  4913                           
  4914                           ; BSR set to: 0
  4915  001D1E  8ECD               	bsf	4045,7,c	;volatile
  4916  001D20  D001               	goto	l2610
  4917  001D22                     l457:
  4918                           
  4919                           ; BSR set to: 0
  4920  001D22  9ECD               	bcf	4045,7,c	;volatile
  4921  001D24                     l2610:
  4922                           
  4923                           ; BSR set to: 0
  4924  001D24  0E00               	movlw	0
  4925  001D26  6ECF               	movwf	4047,c	;volatile
  4926  001D28  0E00               	movlw	0
  4927  001D2A  6ECE               	movwf	4046,c	;volatile
  4928                           
  4929                           ; BSR set to: 0
  4930  001D2C  909E               	bcf	3998,0,c	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933  001D2E  0100               	movlb	0	; () banked
  4934  001D30  0100               	movlb	0	; () banked
  4935  001D32  AFB3               	btfss	OpenTimer1@config& (0+255),7,b
  4936  001D34  D002               	goto	l459
  4937                           
  4938                           ; BSR set to: 0
  4939  001D36  809D               	bsf	3997,0,c	;volatile
  4940  001D38  D001               	goto	l460
  4941  001D3A                     l459:
  4942                           
  4943                           ; BSR set to: 0
  4944  001D3A  909D               	bcf	3997,0,c	;volatile
  4945  001D3C                     l460:
  4946                           
  4947                           ; BSR set to: 0
  4948  001D3C  80CD               	bsf	4045,0,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951  001D3E  0012               	return	
  4952  001D40                     __end_of_OpenTimer1:
  4953                           	opt stack 0
  4954                           tblptru	equ	0xFF8
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           postinc0	equ	0xFEE
  4959                           wreg	equ	0xFE8
  4960                           indf1	equ	0xFE7
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _OpenTimer0 *****************
  4971 ;; Defined at:
  4972 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  config          1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  config          1   51[BANK0 ] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;		None               void
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4986 ;;      Params:         0       0       0       0       0
  4987 ;;      Locals:         0       1       0       0       0
  4988 ;;      Temps:          0       0       0       0       0
  4989 ;;      Totals:         0       1       0       0       0
  4990 ;;Total ram usage:        1 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:   10
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text29
  5001  001E76                     __ptext29:
  5002                           	opt stack 0
  5003  001E76                     _OpenTimer0:
  5004                           	opt stack 20
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;incstack = 0
  5008                           ;OpenTimer0@config stored from wreg
  5009  001E76  CFE8 F0B3          	movff	wreg,OpenTimer0@config
  5010  001E7A  0100               	movlb	0	; () banked
  5011  001E7C  0100               	movlb	0	; () banked
  5012  001E7E  51B3               	movf	OpenTimer0@config& (0+255),w,b
  5013  001E80  0B7F               	andlw	127
  5014  001E82  6ED5               	movwf	4053,c	;volatile
  5015                           
  5016                           ; BSR set to: 0
  5017  001E84  0E00               	movlw	0
  5018  001E86  6ED7               	movwf	4055,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021  001E88  0E00               	movlw	0
  5022  001E8A  6ED6               	movwf	4054,c	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025  001E8C  94F2               	bcf	intcon,2,c	;volatile
  5026                           
  5027                           ; BSR set to: 0
  5028  001E8E  0100               	movlb	0	; () banked
  5029  001E90  0100               	movlb	0	; () banked
  5030  001E92  AFB3               	btfss	OpenTimer0@config& (0+255),7,b
  5031  001E94  D002               	goto	l433
  5032                           
  5033                           ; BSR set to: 0
  5034  001E96  8AF2               	bsf	intcon,5,c	;volatile
  5035  001E98  D001               	goto	l434
  5036  001E9A                     l433:
  5037                           
  5038                           ; BSR set to: 0
  5039  001E9A  9AF2               	bcf	intcon,5,c	;volatile
  5040  001E9C                     l434:
  5041                           
  5042                           ; BSR set to: 0
  5043  001E9C  8ED5               	bsf	4053,7,c	;volatile
  5044                           
  5045                           ; BSR set to: 0
  5046  001E9E  0012               	return	
  5047  001EA0                     __end_of_OpenTimer0:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           prodh	equ	0xFF4
  5051                           prodl	equ	0xFF3
  5052                           intcon	equ	0xFF2
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           indf1	equ	0xFE7
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           indf2	equ	0xFDF
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _InterruptHandlerLow *****************
  5066 ;; Defined at:
  5067 ;;		line 122 in file "src/interrupts.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;		None               void
  5074 ;; Registers used:
  5075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5081 ;;      Params:         0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0
  5083 ;;      Temps:         17       0       0       0       0
  5084 ;;      Totals:        17       0       0       0       0
  5085 ;;Total ram usage:       17 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    9
  5088 ;; This function calls:
  5089 ;;		_timer1_int_handler
  5090 ;;		_uart_recv_int_handler
  5091 ;;		_uart_trans_int_handler
  5092 ;; This function is called by:
  5093 ;;		Interrupt level 1
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	intcodelo
  5098  000018                     __pintcodelo:
  5099                           	opt stack 0
  5100  000018                     _InterruptHandlerLow:
  5101                           	opt stack 17
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;incstack = 0
  5105  000018  CFD8 F02B          	movff	status,??_InterruptHandlerLow
  5106  00001C  CFE8 F02C          	movff	wreg,??_InterruptHandlerLow+1
  5107  000020  CFE0 F02D          	movff	bsr,??_InterruptHandlerLow+2
  5108  000024  CFFA F02E          	movff	pclath,??_InterruptHandlerLow+3
  5109  000028  CFFB F02F          	movff	pclatu,??_InterruptHandlerLow+4
  5110  00002C  CFE9 F030          	movff	fsr0l,??_InterruptHandlerLow+5
  5111  000030  CFEA F031          	movff	fsr0h,??_InterruptHandlerLow+6
  5112  000034  CFE1 F032          	movff	fsr1l,??_InterruptHandlerLow+7
  5113  000038  CFE2 F033          	movff	fsr1h,??_InterruptHandlerLow+8
  5114  00003C  CFD9 F034          	movff	fsr2l,??_InterruptHandlerLow+9
  5115  000040  CFDA F035          	movff	fsr2h,??_InterruptHandlerLow+10
  5116  000044  CFF3 F036          	movff	prodl,??_InterruptHandlerLow+11
  5117  000048  CFF4 F037          	movff	prodh,??_InterruptHandlerLow+12
  5118  00004C  CFF6 F038          	movff	tblptrl,??_InterruptHandlerLow+13
  5119  000050  CFF7 F039          	movff	tblptrh,??_InterruptHandlerLow+14
  5120  000054  CFF8 F03A          	movff	tblptru,??_InterruptHandlerLow+15
  5121  000058  CFF5 F03B          	movff	tablat,??_InterruptHandlerLow+16
  5122                           
  5123                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5124  00005C  A09E               	btfss	3998,0,c	;volatile
  5125  00005E  D003               	goto	i1l3160
  5126                           
  5127                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5128  000060  909E               	bcf	3998,0,c	;volatile
  5129                           
  5130                           ;interrupts.c: 126: timer1_int_handler();
  5131  000062  EC0C  F00F         	call	_timer1_int_handler	;wreg free
  5132  000066                     i1l3160:
  5133                           
  5134                           ;interrupts.c: 127: }
  5135                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5136  000066  AA9E               	btfss	3998,5,c	;volatile
  5137  000068  D003               	goto	i1l3166
  5138                           
  5139                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5140  00006A  9A9E               	bcf	3998,5,c	;volatile
  5141                           
  5142                           ;interrupts.c: 132: uart_recv_int_handler();
  5143  00006C  EC9A  F00A         	call	_uart_recv_int_handler	;wreg free
  5144  000070                     i1l3166:
  5145                           
  5146                           ;interrupts.c: 133: }
  5147                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5148  000070  B89E               	btfsc	3998,4,c	;volatile
  5149  000072  A89D               	btfss	3997,4,c	;volatile
  5150  000074  D003               	goto	i1l52
  5151                           
  5152                           ;interrupts.c: 137: uart_trans_int_handler();
  5153  000076  ECEB  F009         	call	_uart_trans_int_handler	;wreg free
  5154                           
  5155                           ;interrupts.c: 138: PIR1bits.TXIF = 0;
  5156  00007A  989E               	bcf	3998,4,c	;volatile
  5157  00007C                     i1l52:
  5158  00007C  C03B  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5159  000080  C03A  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5160  000084  C039  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5161  000088  C038  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5162  00008C  C037  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5163  000090  C036  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5164  000094  C035  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5165  000098  C034  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5166  00009C  C033  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5167  0000A0  C032  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5168  0000A4  C031  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5169  0000A8  C030  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5170  0000AC  C02F  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5171  0000B0  C02E  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5172  0000B4  C02D  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5173  0000B8  C02C  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5174  0000BC  C02B  FFD8         	movff	??_InterruptHandlerLow,status
  5175  0000C0  0010               	retfie	
  5176  0000C2                     __end_of_InterruptHandlerLow:
  5177                           	opt stack 0
  5178                           pclatu	equ	0xFFB
  5179                           pclath	equ	0xFFA
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           postinc0	equ	0xFEE
  5188                           fsr0h	equ	0xFEA
  5189                           fsr0l	equ	0xFE9
  5190                           wreg	equ	0xFE8
  5191                           indf1	equ	0xFE7
  5192                           fsr1h	equ	0xFE2
  5193                           fsr1l	equ	0xFE1
  5194                           bsr	equ	0xFE0
  5195                           indf2	equ	0xFDF
  5196                           postinc2	equ	0xFDE
  5197                           postdec2	equ	0xFDD
  5198                           fsr2h	equ	0xFDA
  5199                           fsr2l	equ	0xFD9
  5200                           status	equ	0xFD8
  5201                           
  5202 ;; *************** function _uart_trans_int_handler *****************
  5203 ;; Defined at:
  5204 ;;		line 11 in file "src/my_uart.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  buffer        128    0        unsigned char [128]
  5209 ;;  data            2   40[COMRAM] PTR unsigned char 
  5210 ;;		 -> NULL(0), 
  5211 ;;  n               2   34[COMRAM] int 
  5212 ;;  m               2   32[COMRAM] int 
  5213 ;;  l               2   30[COMRAM] int 
  5214 ;;  msgtype         1   39[COMRAM] unsigned char 
  5215 ;;  curIndex        1   38[COMRAM] unsigned char 
  5216 ;;  length          1   37[COMRAM] char 
  5217 ;;  numBytes        1   36[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:        12       0       0       0       0
  5229 ;;      Temps:          1       0       0       0       0
  5230 ;;      Totals:        13       0       0       0       0
  5231 ;;Total ram usage:       13 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    8
  5234 ;; This function calls:
  5235 ;;		_FromMainLow_recvmsg
  5236 ;; This function is called by:
  5237 ;;		_InterruptHandlerLow
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text31
  5242  0013D6                     __ptext31:
  5243                           	opt stack 0
  5244  0013D6                     _uart_trans_int_handler:
  5245                           	opt stack 17
  5246                           
  5247                           ;my_uart.c: 13: unsigned char* data = (0);
  5248                           
  5249                           ;incstack = 0
  5250  0013D6  0E00               	movlw	0
  5251  0013D8  6E2A               	movwf	uart_trans_int_handler@data+1,c
  5252  0013DA  0E00               	movlw	0
  5253  0013DC  6E29               	movwf	uart_trans_int_handler@data,c
  5254                           
  5255                           ;my_uart.c: 14: unsigned char buffer[128];
  5256                           ;my_uart.c: 15: unsigned char msgtype;
  5257                           ;my_uart.c: 16: unsigned char numBytes, curIndex;
  5258                           ;my_uart.c: 17: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5259  0013DE  0E00               	movlw	high uart_trans_int_handler@msgtype
  5260  0013E0  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5261  0013E2  0E28               	movlw	low uart_trans_int_handler@msgtype
  5262  0013E4  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5263  0013E6  C02A  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5264  0013EA  C029  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5265  0013EE  0E0A               	movlw	10
  5266  0013F0  EC64  F00F         	call	_FromMainLow_recvmsg
  5267  0013F4  6E26               	movwf	uart_trans_int_handler@length,c
  5268                           
  5269                           ;my_uart.c: 18: int l = data[0], m = data[1], n = data[2];
  5270  0013F6  C029  FFD9         	movff	uart_trans_int_handler@data,fsr2l
  5271  0013FA  C02A  FFDA         	movff	uart_trans_int_handler@data+1,fsr2h
  5272  0013FE  50DF               	movf	indf2,w,c
  5273  001400  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5274  001402  501E               	movf	??_uart_trans_int_handler,w,c
  5275  001404  6E1F               	movwf	uart_trans_int_handler@l,c
  5276  001406  6A20               	clrf	uart_trans_int_handler@l+1,c
  5277  001408  EE20 F001          	lfsr	2,1
  5278  00140C  5029               	movf	uart_trans_int_handler@data,w,c
  5279  00140E  26D9               	addwf	fsr2l,f,c
  5280  001410  502A               	movf	uart_trans_int_handler@data+1,w,c
  5281  001412  22DA               	addwfc	fsr2h,f,c
  5282  001414  50DF               	movf	indf2,w,c
  5283  001416  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5284  001418  501E               	movf	??_uart_trans_int_handler,w,c
  5285  00141A  6E21               	movwf	uart_trans_int_handler@m,c
  5286  00141C  6A22               	clrf	uart_trans_int_handler@m+1,c
  5287  00141E  EE20 F002          	lfsr	2,2
  5288  001422  5029               	movf	uart_trans_int_handler@data,w,c
  5289  001424  26D9               	addwf	fsr2l,f,c
  5290  001426  502A               	movf	uart_trans_int_handler@data+1,w,c
  5291  001428  22DA               	addwfc	fsr2h,f,c
  5292  00142A  50DF               	movf	indf2,w,c
  5293  00142C  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5294  00142E  501E               	movf	??_uart_trans_int_handler,w,c
  5295  001430  6E23               	movwf	uart_trans_int_handler@n,c
  5296  001432  6A24               	clrf	uart_trans_int_handler@n+1,c
  5297                           
  5298                           ;my_uart.c: 19: if (length < 0) {
  5299  001434  AE26               	btfss	uart_trans_int_handler@length,7,c
  5300  001436  D009               	goto	i1l3144
  5301                           
  5302                           ;my_uart.c: 21: if (length != -4) {
  5303  001438  5026               	movf	uart_trans_int_handler@length,w,c
  5304  00143A  0AFC               	xorlw	252
  5305  00143C  B4D8               	btfsc	status,2,c
  5306  00143E  D002               	goto	i1l3142
  5307                           
  5308                           ;my_uart.c: 22: TXREG = 'Q';
  5309  001440  0E51               	movlw	81
  5310  001442  D001               	goto	L5
  5311  001444                     i1l3142:
  5312                           
  5313                           ;my_uart.c: 24: else{
  5314                           ;my_uart.c: 25: TXREG = 'X';
  5315  001444  0E58               	movlw	88
  5316  001446                     L5:
  5317  001446  6EAD               	movwf	4013,c	;volatile
  5318  001448  D01E               	goto	i1l350
  5319  00144A                     i1l3144:
  5320                           
  5321                           ;my_uart.c: 28: curIndex = 1;
  5322  00144A  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5323  00144C  0E01               	movlw	1
  5324  00144E  6E27               	movwf	uart_trans_int_handler@curIndex,c
  5325  001450  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5326                           
  5327                           ;my_uart.c: 29: numBytes = data[0]+1;
  5328  001452  C029  FFD9         	movff	uart_trans_int_handler@data,fsr2l
  5329  001456  C02A  FFDA         	movff	uart_trans_int_handler@data+1,fsr2h
  5330  00145A  50DF               	movf	indf2,w,c
  5331  00145C  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5332  00145E  281E               	incf	??_uart_trans_int_handler,w,c
  5333  001460  6E25               	movwf	uart_trans_int_handler@numBytes,c
  5334                           
  5335                           ;my_uart.c: 30: while(curIndex < numBytes){
  5336  001462  D00D               	goto	i1l3152
  5337  001464                     i1l353:
  5338  001464  A2AC               	btfss	4012,1,c	;volatile
  5339  001466  D7FE               	goto	i1l353
  5340                           
  5341                           ;my_uart.c: 32: TXREG = data[curIndex];
  5342  001468  5027               	movf	uart_trans_int_handler@curIndex,w,c
  5343  00146A  0D01               	mullw	1
  5344  00146C  50F3               	movf	prodl,w,c
  5345  00146E  2429               	addwf	uart_trans_int_handler@data,w,c
  5346  001470  6ED9               	movwf	fsr2l,c
  5347  001472  50F4               	movf	prodh,w,c
  5348  001474  202A               	addwfc	uart_trans_int_handler@data+1,w,c
  5349  001476  6EDA               	movwf	fsr2h,c
  5350  001478  50DF               	movf	indf2,w,c
  5351  00147A  6EAD               	movwf	4013,c	;volatile
  5352                           
  5353                           ;my_uart.c: 33: curIndex++;
  5354  00147C  2A27               	incf	uart_trans_int_handler@curIndex,f,c
  5355  00147E                     i1l3152:
  5356  00147E  5025               	movf	uart_trans_int_handler@numBytes,w,c
  5357  001480  5C27               	subwf	uart_trans_int_handler@curIndex,w,c
  5358  001482  A0D8               	btfss	status,0,c
  5359  001484  D7EF               	goto	i1l353
  5360  001486                     i1l350:
  5361                           
  5362                           ;my_uart.c: 34: }
  5363                           ;my_uart.c: 35: }
  5364                           ;my_uart.c: 37: PIE1bits.TXIE = 0;
  5365  001486  989D               	bcf	3997,4,c	;volatile
  5366  001488  0012               	return	
  5367  00148A                     __end_of_uart_trans_int_handler:
  5368                           	opt stack 0
  5369                           pclatu	equ	0xFFB
  5370                           pclath	equ	0xFFA
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           prodh	equ	0xFF4
  5376                           prodl	equ	0xFF3
  5377                           intcon	equ	0xFF2
  5378                           postinc0	equ	0xFEE
  5379                           fsr0h	equ	0xFEA
  5380                           fsr0l	equ	0xFE9
  5381                           wreg	equ	0xFE8
  5382                           indf1	equ	0xFE7
  5383                           fsr1h	equ	0xFE2
  5384                           fsr1l	equ	0xFE1
  5385                           bsr	equ	0xFE0
  5386                           indf2	equ	0xFDF
  5387                           postinc2	equ	0xFDE
  5388                           postdec2	equ	0xFDD
  5389                           fsr2h	equ	0xFDA
  5390                           fsr2l	equ	0xFD9
  5391                           status	equ	0xFD8
  5392                           
  5393 ;; *************** function _FromMainLow_recvmsg *****************
  5394 ;; Defined at:
  5395 ;;		line 159 in file "src/messages.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  maxlength       1    wreg     unsigned char 
  5398 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5399 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5400 ;;  data            2   26[COMRAM] PTR void 
  5401 ;;		 -> NULL(0), 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  maxlength       1   28[COMRAM] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      char 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5413 ;;      Params:         4       0       0       0       0
  5414 ;;      Locals:         1       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0
  5416 ;;      Totals:         5       0       0       0       0
  5417 ;;Total ram usage:        5 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    7
  5420 ;; This function calls:
  5421 ;;		i1_recv_msg
  5422 ;; This function is called by:
  5423 ;;		_uart_trans_int_handler
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text32
  5428  001EC8                     __ptext32:
  5429                           	opt stack 0
  5430  001EC8                     _FromMainLow_recvmsg:
  5431                           	opt stack 17
  5432                           
  5433                           ;incstack = 0
  5434                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5435  001EC8  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5436                           
  5437                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5438  001ECC  0102               	movlb	2	; () banked
  5439  001ECE  0E02               	movlw	high _FromMainLow_MQ
  5440  001ED0  6E0C               	movwf	i1recv_msg@qptr+1,c
  5441  001ED2  0102               	movlb	2	; () banked
  5442  001ED4  0EB6               	movlw	low _FromMainLow_MQ
  5443  001ED6  6E0B               	movwf	i1recv_msg@qptr,c
  5444  001ED8  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5445  001EDC  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5446  001EE0  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5447  001EE4  6A11               	clrf	i1recv_msg@data+1,c
  5448  001EE6  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5449  001EEA  EC1C  F009         	call	i1_recv_msg	;wreg free
  5450  001EEE  0012               	return	
  5451  001EF0                     __end_of_FromMainLow_recvmsg:
  5452                           	opt stack 0
  5453                           pclatu	equ	0xFFB
  5454                           pclath	equ	0xFFA
  5455                           tblptru	equ	0xFF8
  5456                           tblptrh	equ	0xFF7
  5457                           tblptrl	equ	0xFF6
  5458                           tablat	equ	0xFF5
  5459                           prodh	equ	0xFF4
  5460                           prodl	equ	0xFF3
  5461                           intcon	equ	0xFF2
  5462                           postinc0	equ	0xFEE
  5463                           fsr0h	equ	0xFEA
  5464                           fsr0l	equ	0xFE9
  5465                           wreg	equ	0xFE8
  5466                           indf1	equ	0xFE7
  5467                           fsr1h	equ	0xFE2
  5468                           fsr1l	equ	0xFE1
  5469                           bsr	equ	0xFE0
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477 ;; *************** function i1_recv_msg *****************
  5478 ;; Defined at:
  5479 ;;		line 63 in file "src/messages.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5482 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5483 ;;  maxlength       1   12[COMRAM] unsigned char 
  5484 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5485 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5486 ;;  data            2   15[COMRAM] PTR void 
  5487 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5490 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5491 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5492 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5493 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      char 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5503 ;;      Params:         7       0       0       0       0
  5504 ;;      Locals:         5       0       0       0       0
  5505 ;;      Temps:          2       0       0       0       0
  5506 ;;      Totals:        14       0       0       0       0
  5507 ;;Total ram usage:       14 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    6
  5510 ;; This function calls:
  5511 ;;		i1_memcpy
  5512 ;; This function is called by:
  5513 ;;		_FromMainLow_recvmsg
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text33
  5518  001238                     __ptext33:
  5519                           	opt stack 0
  5520  001238                     i1_recv_msg:
  5521                           	opt stack 17
  5522                           
  5523                           ;messages.c: 64: unsigned char slot;
  5524                           ;messages.c: 68: msg *qmsg;
  5525                           ;messages.c: 69: size_t tlength;
  5526                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5527                           
  5528                           ;incstack = 0
  5529  001238  EE20 F035          	lfsr	2,53
  5530  00123C  500B               	movf	i1recv_msg@qptr,w,c
  5531  00123E  26D9               	addwf	fsr2l,f,c
  5532  001240  500C               	movf	i1recv_msg@qptr+1,w,c
  5533  001242  22DA               	addwfc	fsr2h,f,c
  5534  001244  50DF               	movf	indf2,w,c
  5535  001246  6E14               	movwf	i1recv_msg@slot,c
  5536                           
  5537                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5538  001248  5014               	movf	i1recv_msg@slot,w,c
  5539  00124A  0D0D               	mullw	13
  5540  00124C  50F3               	movf	prodl,w,c
  5541  00124E  240B               	addwf	i1recv_msg@qptr,w,c
  5542  001250  6E17               	movwf	i1recv_msg@qmsg,c
  5543  001252  50F4               	movf	prodh,w,c
  5544  001254  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5545  001256  6E18               	movwf	i1recv_msg@qmsg+1,c
  5546                           
  5547                           ;messages.c: 74: if (qmsg->full == 1) {
  5548  001258  0E01               	movlw	1
  5549  00125A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5550  00125E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5551  001262  62DF               	cpfseq	indf2,c
  5552  001264  D050               	goto	i1l3090
  5553                           
  5554                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5555  001266  EE20 F001          	lfsr	2,1
  5556  00126A  5017               	movf	i1recv_msg@qmsg,w,c
  5557  00126C  26D9               	addwf	fsr2l,f,c
  5558  00126E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5559  001270  22DA               	addwfc	fsr2h,f,c
  5560  001272  50DF               	movf	indf2,w,c
  5561  001274  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5562  001276  B0D8               	btfsc	status,0,c
  5563  001278  D002               	goto	i1l3074
  5564                           
  5565                           ;messages.c: 77: return (-3);
  5566  00127A  0EFD               	movlw	253
  5567  00127C  0012               	return	
  5568  00127E                     i1l3074:
  5569                           
  5570                           ;messages.c: 78: }
  5571                           ;messages.c: 80: tlength = qmsg->length;
  5572  00127E  EE20 F001          	lfsr	2,1
  5573  001282  5017               	movf	i1recv_msg@qmsg,w,c
  5574  001284  26D9               	addwf	fsr2l,f,c
  5575  001286  5018               	movf	i1recv_msg@qmsg+1,w,c
  5576  001288  22DA               	addwfc	fsr2h,f,c
  5577  00128A  50DF               	movf	indf2,w,c
  5578  00128C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5579  00128E  5012               	movf	??i1_recv_msg,w,c
  5580  001290  6E15               	movwf	i1recv_msg@tlength,c
  5581  001292  6A16               	clrf	i1recv_msg@tlength+1,c
  5582                           
  5583                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5584  001294  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5585  001298  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5586  00129C  0E03               	movlw	3
  5587  00129E  2417               	addwf	i1recv_msg@qmsg,w,c
  5588  0012A0  6E12               	movwf	??i1_recv_msg& (0+255),c
  5589  0012A2  0E00               	movlw	0
  5590  0012A4  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5591  0012A6  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5592  0012A8  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5593  0012AC  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5594  0012B0  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5595  0012B4  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5596  0012B8  EC45  F00E         	call	i1_memcpy	;wreg free
  5597                           
  5598                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5599  0012BC  EE20 F035          	lfsr	2,53
  5600  0012C0  500B               	movf	i1recv_msg@qptr,w,c
  5601  0012C2  26D9               	addwf	fsr2l,f,c
  5602  0012C4  500C               	movf	i1recv_msg@qptr+1,w,c
  5603  0012C6  22DA               	addwfc	fsr2h,f,c
  5604  0012C8  EE10 F035          	lfsr	1,53
  5605  0012CC  500B               	movf	i1recv_msg@qptr,w,c
  5606  0012CE  26E1               	addwf	fsr1l,f,c
  5607  0012D0  500C               	movf	i1recv_msg@qptr+1,w,c
  5608  0012D2  22E2               	addwfc	fsr1h,f,c
  5609  0012D4  50E7               	movf	indf1,w,c
  5610  0012D6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5611  0012D8  2812               	incf	??i1_recv_msg,w,c
  5612  0012DA  0B03               	andlw	3
  5613  0012DC  6EDF               	movwf	indf2,c
  5614                           
  5615                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5616  0012DE  EE20 F002          	lfsr	2,2
  5617  0012E2  5017               	movf	i1recv_msg@qmsg,w,c
  5618  0012E4  26D9               	addwf	fsr2l,f,c
  5619  0012E6  5018               	movf	i1recv_msg@qmsg+1,w,c
  5620  0012E8  22DA               	addwfc	fsr2h,f,c
  5621  0012EA  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5622  0012EE  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5623  0012F2  CFDF FFE7          	movff	indf2,indf1
  5624                           
  5625                           ;messages.c: 91: qmsg->full = 0;
  5626  0012F6  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5627  0012FA  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5628  0012FE  0E00               	movlw	0
  5629  001300  6EDF               	movwf	indf2,c
  5630                           
  5631                           ;messages.c: 92: return (tlength);
  5632  001302  5015               	movf	i1recv_msg@tlength,w,c
  5633  001304  0012               	return	
  5634  001306                     i1l3090:
  5635                           
  5636                           ;messages.c: 94: return (-4);
  5637  001306  0EFC               	movlw	252
  5638  001308  0012               	return	
  5639  00130A                     __end_ofi1_recv_msg:
  5640                           	opt stack 0
  5641                           pclatu	equ	0xFFB
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           postinc0	equ	0xFEE
  5651                           fsr0h	equ	0xFEA
  5652                           fsr0l	equ	0xFE9
  5653                           wreg	equ	0xFE8
  5654                           indf1	equ	0xFE7
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           bsr	equ	0xFE0
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _uart_recv_int_handler *****************
  5666 ;; Defined at:
  5667 ;;		line 40 in file "src/my_uart.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;		None               void
  5674 ;; Registers used:
  5675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5681 ;;      Params:         0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0
  5683 ;;      Temps:          1       0       0       0       0
  5684 ;;      Totals:         1       0       0       0       0
  5685 ;;Total ram usage:        1 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    8
  5688 ;; This function calls:
  5689 ;;		_ReadUSART
  5690 ;;		_ToMainLow_sendmsg
  5691 ;; This function is called by:
  5692 ;;		_InterruptHandlerLow
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text34
  5697  001534                     __ptext34:
  5698                           	opt stack 0
  5699  001534                     _uart_recv_int_handler:
  5700                           	opt stack 17
  5701                           
  5702                           ;my_uart.c: 49: if ((PIR1bits.RCIF)) {
  5703                           
  5704                           ;incstack = 0
  5705  001534  AA9E               	btfss	3998,5,c	;volatile
  5706  001536  D03C               	goto	i1l3120
  5707                           
  5708                           ;my_uart.c: 50: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5709  001538  EE20 F004          	lfsr	2,4
  5710  00153C  5074               	movf	_uc_ptr,w,c
  5711  00153E  26D9               	addwf	fsr2l,f,c
  5712  001540  5075               	movf	_uc_ptr+1,w,c
  5713  001542  22DA               	addwfc	fsr2h,f,c
  5714  001544  50DF               	movf	indf2,w,c
  5715  001546  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5716  001548  501B               	movf	??_uart_recv_int_handler,w,c
  5717  00154A  0D01               	mullw	1
  5718  00154C  50F3               	movf	prodl,w,c
  5719  00154E  2474               	addwf	_uc_ptr,w,c
  5720  001550  6ED9               	movwf	fsr2l,c
  5721  001552  50F4               	movf	prodh,w,c
  5722  001554  2075               	addwfc	_uc_ptr+1,w,c
  5723  001556  6EDA               	movwf	fsr2h,c
  5724  001558  EC98  F00F         	call	_ReadUSART	;wreg free
  5725  00155C  6EDF               	movwf	indf2,c
  5726                           
  5727                           ;my_uart.c: 54: uc_ptr->buflen++;
  5728  00155E  EE20 F004          	lfsr	2,4
  5729  001562  5074               	movf	_uc_ptr,w,c
  5730  001564  26D9               	addwf	fsr2l,f,c
  5731  001566  5075               	movf	_uc_ptr+1,w,c
  5732  001568  22DA               	addwfc	fsr2h,f,c
  5733  00156A  2ADF               	incf	indf2,f,c
  5734                           
  5735                           ;my_uart.c: 56: if (uc_ptr->buflen == 4) {
  5736  00156C  EE20 F004          	lfsr	2,4
  5737  001570  5074               	movf	_uc_ptr,w,c
  5738  001572  26D9               	addwf	fsr2l,f,c
  5739  001574  5075               	movf	_uc_ptr+1,w,c
  5740  001576  22DA               	addwfc	fsr2h,f,c
  5741  001578  0E04               	movlw	4
  5742  00157A  62DF               	cpfseq	indf2,c
  5743  00157C  D019               	goto	i1l3120
  5744                           
  5745                           ;my_uart.c: 57: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5746  00157E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5747  001580  0E20               	movlw	32
  5748  001582  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5749  001584  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5750  001586  C075  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5751  00158A  C074  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5752  00158E  EE20 F004          	lfsr	2,4
  5753  001592  5074               	movf	_uc_ptr,w,c
  5754  001594  26D9               	addwf	fsr2l,f,c
  5755  001596  5075               	movf	_uc_ptr+1,w,c
  5756  001598  22DA               	addwfc	fsr2h,f,c
  5757  00159A  50DF               	movf	indf2,w,c
  5758  00159C  EC78  F00F         	call	_ToMainLow_sendmsg
  5759                           
  5760                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  5761  0015A0  EE20 F004          	lfsr	2,4
  5762  0015A4  5074               	movf	_uc_ptr,w,c
  5763  0015A6  26D9               	addwf	fsr2l,f,c
  5764  0015A8  5075               	movf	_uc_ptr+1,w,c
  5765  0015AA  22DA               	addwfc	fsr2h,f,c
  5766  0015AC  0E00               	movlw	0
  5767  0015AE  6EDF               	movwf	indf2,c
  5768  0015B0                     i1l3120:
  5769                           
  5770                           ;my_uart.c: 59: }
  5771                           ;my_uart.c: 60: }
  5772                           ;my_uart.c: 67: if (USART_Status.OVERRUN_ERROR == 1) {
  5773  0015B0  A63D               	btfss	_USART_Status,3,c
  5774  0015B2  0012               	return	
  5775                           
  5776                           ;my_uart.c: 72: RCSTAbits.CREN = 0;
  5777  0015B4  98AB               	bcf	4011,4,c	;volatile
  5778                           
  5779                           ;my_uart.c: 73: RCSTAbits.CREN = 1;
  5780  0015B6  88AB               	bsf	4011,4,c	;volatile
  5781                           
  5782                           ;my_uart.c: 74: ToMainLow_sendmsg(0, 30, (void *) 0);
  5783  0015B8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5784  0015BA  0E1E               	movlw	30
  5785  0015BC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5786  0015BE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5787  0015C0  0E00               	movlw	0
  5788  0015C2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5789  0015C4  0E00               	movlw	0
  5790  0015C6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5791  0015C8  0E00               	movlw	0
  5792  0015CA  EC78  F00F         	call	_ToMainLow_sendmsg
  5793  0015CE  0012               	return	
  5794  0015D0                     __end_of_uart_recv_int_handler:
  5795                           	opt stack 0
  5796                           pclatu	equ	0xFFB
  5797                           pclath	equ	0xFFA
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           postinc0	equ	0xFEE
  5806                           fsr0h	equ	0xFEA
  5807                           fsr0l	equ	0xFE9
  5808                           wreg	equ	0xFE8
  5809                           indf1	equ	0xFE7
  5810                           fsr1h	equ	0xFE2
  5811                           fsr1l	equ	0xFE1
  5812                           bsr	equ	0xFE0
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _ReadUSART *****************
  5821 ;; Defined at:
  5822 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  data            1    0[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      unsigned char 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2, status,0
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5836 ;;      Params:         0       0       0       0       0
  5837 ;;      Locals:         1       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0
  5839 ;;      Totals:         1       0       0       0       0
  5840 ;;Total ram usage:        1 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    5
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_uart_recv_int_handler
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text35
  5851  001F30                     __ptext35:
  5852                           	opt stack 0
  5853  001F30                     _ReadUSART:
  5854                           	opt stack 19
  5855                           
  5856                           ;incstack = 0
  5857  001F30  0EF2               	movlw	242
  5858  001F32  163D               	andwf	_USART_Status,f,c
  5859  001F34  ACAB               	btfss	4011,6,c	;volatile
  5860  001F36  D003               	goto	i1l519
  5861  001F38  903D               	bcf	_USART_Status,0,c
  5862  001F3A  B0AB               	btfsc	4011,0,c	;volatile
  5863  001F3C  803D               	bsf	_USART_Status,0,c
  5864  001F3E                     i1l519:
  5865  001F3E  B4AB               	btfsc	4011,2,c	;volatile
  5866  001F40  843D               	bsf	_USART_Status,2,c
  5867  001F42  B2AB               	btfsc	4011,1,c	;volatile
  5868  001F44  863D               	bsf	_USART_Status,3,c
  5869  001F46  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5870  001F4A  5001               	movf	ReadUSART@data,w,c
  5871  001F4C  0012               	return	
  5872  001F4E                     __end_of_ReadUSART:
  5873                           	opt stack 0
  5874                           pclatu	equ	0xFFB
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           bsr	equ	0xFE0
  5891                           indf2	equ	0xFDF
  5892                           postinc2	equ	0xFDE
  5893                           postdec2	equ	0xFDD
  5894                           fsr2h	equ	0xFDA
  5895                           fsr2l	equ	0xFD9
  5896                           status	equ	0xFD8
  5897                           
  5898 ;; *************** function _timer1_int_handler *****************
  5899 ;; Defined at:
  5900 ;;		line 36 in file "src/user_interrupts.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  result          2   27[COMRAM] unsigned int 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;		None               void
  5907 ;; Registers used:
  5908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5914 ;;      Params:         0       0       0       0       0
  5915 ;;      Locals:         2       0       0       0       0
  5916 ;;      Temps:          1       0       0       0       0
  5917 ;;      Totals:         3       0       0       0       0
  5918 ;;Total ram usage:        3 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    8
  5921 ;; This function calls:
  5922 ;;		_ToMainLow_sendmsg
  5923 ;;		_WriteTimer1
  5924 ;;		i1_ReadTimer1
  5925 ;; This function is called by:
  5926 ;;		_InterruptHandlerLow
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text36
  5931  001E18                     __ptext36:
  5932                           	opt stack 0
  5933  001E18                     _timer1_int_handler:
  5934                           	opt stack 17
  5935                           
  5936                           ;user_interrupts.c: 37: unsigned int result;
  5937                           ;user_interrupts.c: 44: result = ReadTimer1();
  5938                           
  5939                           ;incstack = 0
  5940  001E18  ECCD  F00F         	call	i1_ReadTimer1	;wreg free
  5941  001E1C  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  5942  001E20  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  5943                           
  5944                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5945  001E24  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5946  001E26  0E0B               	movlw	11
  5947  001E28  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5948  001E2A  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5949  001E2C  0E00               	movlw	0
  5950  001E2E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5951  001E30  0E00               	movlw	0
  5952  001E32  6E18               	movwf	ToMainLow_sendmsg@data,c
  5953  001E34  0E00               	movlw	0
  5954  001E36  EC78  F00F         	call	_ToMainLow_sendmsg
  5955                           
  5956                           ;user_interrupts.c: 48: WriteTimer1(0);
  5957  001E3A  0E00               	movlw	0
  5958  001E3C  6E02               	movwf	WriteTimer1@timer1+1,c
  5959  001E3E  0E00               	movlw	0
  5960  001E40  6E01               	movwf	WriteTimer1@timer1,c
  5961  001E42  ECD6  F00F         	call	_WriteTimer1	;wreg free
  5962  001E46  0012               	return	
  5963  001E48                     __end_of_timer1_int_handler:
  5964                           	opt stack 0
  5965                           pclatu	equ	0xFFB
  5966                           pclath	equ	0xFFA
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           postinc0	equ	0xFEE
  5975                           fsr0h	equ	0xFEA
  5976                           fsr0l	equ	0xFE9
  5977                           wreg	equ	0xFE8
  5978                           indf1	equ	0xFE7
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           bsr	equ	0xFE0
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           postdec2	equ	0xFDD
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function i1_ReadTimer1 *****************
  5990 ;; Defined at:
  5991 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    0[COMRAM] unsigned int 
  5998 ;; Registers used:
  5999 ;;		None
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6005 ;;      Params:         2       0       0       0       0
  6006 ;;      Locals:         2       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0
  6008 ;;      Totals:         4       0       0       0       0
  6009 ;;Total ram usage:        4 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    5
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_timer1_int_handler
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text37
  6020  001F9A                     __ptext37:
  6021                           	opt stack 0
  6022  001F9A                     i1_ReadTimer1:
  6023                           	opt stack 19
  6024                           
  6025                           ;incstack = 0
  6026  001F9A  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  6027  001F9E  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  6028  001FA2  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  6029  001FA6  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  6030  001FAA  0012               	return	
  6031  001FAC                     __end_ofi1_ReadTimer1:
  6032                           	opt stack 0
  6033                           pclatu	equ	0xFFB
  6034                           pclath	equ	0xFFA
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           intcon	equ	0xFF2
  6042                           postinc0	equ	0xFEE
  6043                           fsr0h	equ	0xFEA
  6044                           fsr0l	equ	0xFE9
  6045                           wreg	equ	0xFE8
  6046                           indf1	equ	0xFE7
  6047                           fsr1h	equ	0xFE2
  6048                           fsr1l	equ	0xFE1
  6049                           bsr	equ	0xFE0
  6050                           indf2	equ	0xFDF
  6051                           postinc2	equ	0xFDE
  6052                           postdec2	equ	0xFDD
  6053                           fsr2h	equ	0xFDA
  6054                           fsr2l	equ	0xFD9
  6055                           status	equ	0xFD8
  6056                           
  6057 ;; *************** function _WriteTimer1 *****************
  6058 ;; Defined at:
  6059 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  timer1          2    0[COMRAM] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  timer           2    2[COMRAM] struct Timers
  6064 ;; Return value:  Size  Location     Type
  6065 ;;		None               void
  6066 ;; Registers used:
  6067 ;;		None
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6073 ;;      Params:         2       0       0       0       0
  6074 ;;      Locals:         2       0       0       0       0
  6075 ;;      Temps:          0       0       0       0       0
  6076 ;;      Totals:         4       0       0       0       0
  6077 ;;Total ram usage:        4 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    5
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_timer1_int_handler
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text38
  6088  001FAC                     __ptext38:
  6089                           	opt stack 0
  6090  001FAC                     _WriteTimer1:
  6091                           	opt stack 19
  6092                           
  6093                           ;incstack = 0
  6094  001FAC  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6095  001FB0  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6096  001FB4  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6097  001FB8  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6098  001FBC  0012               	return	
  6099  001FBE                     __end_of_WriteTimer1:
  6100                           	opt stack 0
  6101                           pclatu	equ	0xFFB
  6102                           pclath	equ	0xFFA
  6103                           tblptru	equ	0xFF8
  6104                           tblptrh	equ	0xFF7
  6105                           tblptrl	equ	0xFF6
  6106                           tablat	equ	0xFF5
  6107                           prodh	equ	0xFF4
  6108                           prodl	equ	0xFF3
  6109                           intcon	equ	0xFF2
  6110                           postinc0	equ	0xFEE
  6111                           fsr0h	equ	0xFEA
  6112                           fsr0l	equ	0xFE9
  6113                           wreg	equ	0xFE8
  6114                           indf1	equ	0xFE7
  6115                           fsr1h	equ	0xFE2
  6116                           fsr1l	equ	0xFE1
  6117                           bsr	equ	0xFE0
  6118                           indf2	equ	0xFDF
  6119                           postinc2	equ	0xFDE
  6120                           postdec2	equ	0xFDD
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125 ;; *************** function _ToMainLow_sendmsg *****************
  6126 ;; Defined at:
  6127 ;;		line 103 in file "src/messages.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  length          1    wreg     unsigned char 
  6130 ;;  msgtype         1   22[COMRAM] unsigned char 
  6131 ;;  data            2   23[COMRAM] PTR void 
  6132 ;;		 -> NULL(0), main@uc(5), 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  length          1   25[COMRAM] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      char 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6144 ;;      Params:         3       0       0       0       0
  6145 ;;      Locals:         1       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0
  6147 ;;      Totals:         4       0       0       0       0
  6148 ;;Total ram usage:        4 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    7
  6151 ;; This function calls:
  6152 ;;		i1_send_msg
  6153 ;; This function is called by:
  6154 ;;		_uart_recv_int_handler
  6155 ;;		_timer1_int_handler
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           	psect	text39
  6160  001EF0                     __ptext39:
  6161                           	opt stack 0
  6162  001EF0                     _ToMainLow_sendmsg:
  6163                           	opt stack 17
  6164                           
  6165                           ;incstack = 0
  6166                           ;ToMainLow_sendmsg@length stored from wreg
  6167  001EF0  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6168                           
  6169                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6170                           ;	Return value of _ToMainLow_sendmsg is never used
  6171  001EF4  0E00               	movlw	high _ToMainLow_MQ
  6172  001EF6  6E0C               	movwf	i1send_msg@qptr+1,c
  6173  001EF8  0E3E               	movlw	low _ToMainLow_MQ
  6174  001EFA  6E0B               	movwf	i1send_msg@qptr,c
  6175  001EFC  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6176  001F00  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6177  001F04  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6178  001F08  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6179  001F0C  EC45  F00A         	call	i1_send_msg	;wreg free
  6180  001F10  0012               	return	
  6181  001F12                     __end_of_ToMainLow_sendmsg:
  6182                           	opt stack 0
  6183                           pclatu	equ	0xFFB
  6184                           pclath	equ	0xFFA
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           postinc0	equ	0xFEE
  6193                           fsr0h	equ	0xFEA
  6194                           fsr0l	equ	0xFE9
  6195                           wreg	equ	0xFE8
  6196                           indf1	equ	0xFE7
  6197                           fsr1h	equ	0xFE2
  6198                           fsr1l	equ	0xFE1
  6199                           bsr	equ	0xFE0
  6200                           indf2	equ	0xFDF
  6201                           postinc2	equ	0xFDE
  6202                           postdec2	equ	0xFDD
  6203                           fsr2h	equ	0xFDA
  6204                           fsr2l	equ	0xFD9
  6205                           status	equ	0xFD8
  6206                           
  6207 ;; *************** function i1_send_msg *****************
  6208 ;; Defined at:
  6209 ;;		line 24 in file "src/messages.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6212 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6213 ;;  length          1   12[COMRAM] unsigned char 
  6214 ;;  msgtype         1   13[COMRAM] unsigned char 
  6215 ;;  data            2   14[COMRAM] PTR void 
  6216 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@msgbuffer(11), 
  6217 ;;		 -> main@ic(28), main@uc(5), 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6220 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6221 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6222 ;;  send_msg        2   17[COMRAM] unsigned int 
  6223 ;;  send_msg        1   19[COMRAM] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      char 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6233 ;;      Params:         6       0       0       0       0
  6234 ;;      Locals:         5       0       0       0       0
  6235 ;;      Temps:          1       0       0       0       0
  6236 ;;      Totals:        12       0       0       0       0
  6237 ;;Total ram usage:       12 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    6
  6240 ;; This function calls:
  6241 ;;		i1_memcpy
  6242 ;; This function is called by:
  6243 ;;		_ToMainLow_sendmsg
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text40
  6248  00148A                     __ptext40:
  6249                           	opt stack 0
  6250  00148A                     i1_send_msg:
  6251                           	opt stack 17
  6252                           
  6253                           ;messages.c: 25: unsigned char slot;
  6254                           ;messages.c: 27: msg *qmsg;
  6255                           ;messages.c: 28: size_t tlength = length;
  6256                           
  6257                           ;incstack = 0
  6258  00148A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6259  00148E  6A13               	clrf	i1send_msg@tlength+1,c
  6260                           
  6261                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6262  001490  EE20 F034          	lfsr	2,52
  6263  001494  500B               	movf	i1send_msg@qptr,w,c
  6264  001496  26D9               	addwf	fsr2l,f,c
  6265  001498  500C               	movf	i1send_msg@qptr+1,w,c
  6266  00149A  22DA               	addwfc	fsr2h,f,c
  6267  00149C  50DF               	movf	indf2,w,c
  6268  00149E  6E14               	movwf	i1send_msg@slot,c
  6269                           
  6270                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6271  0014A0  5014               	movf	i1send_msg@slot,w,c
  6272  0014A2  0D0D               	mullw	13
  6273  0014A4  50F3               	movf	prodl,w,c
  6274  0014A6  240B               	addwf	i1send_msg@qptr,w,c
  6275  0014A8  6E15               	movwf	i1send_msg@qmsg,c
  6276  0014AA  50F4               	movf	prodh,w,c
  6277  0014AC  200C               	addwfc	i1send_msg@qptr+1,w,c
  6278  0014AE  6E16               	movwf	i1send_msg@qmsg+1,c
  6279                           
  6280                           ;messages.c: 41: if (qmsg->full != 0) {
  6281  0014B0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6282  0014B4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6283  0014B8  50DF               	movf	indf2,w,c
  6284  0014BA  B4D8               	btfsc	status,2,c
  6285  0014BC  D002               	goto	i1l3050
  6286                           
  6287                           ;messages.c: 42: return (-1);
  6288  0014BE  0EFF               	movlw	255
  6289  0014C0  0012               	return	
  6290  0014C2                     i1l3050:
  6291                           
  6292                           ;messages.c: 43: }
  6293                           ;messages.c: 46: qmsg->length = length;
  6294  0014C2  EE20 F001          	lfsr	2,1
  6295  0014C6  5015               	movf	i1send_msg@qmsg,w,c
  6296  0014C8  26D9               	addwf	fsr2l,f,c
  6297  0014CA  5016               	movf	i1send_msg@qmsg+1,w,c
  6298  0014CC  22DA               	addwfc	fsr2h,f,c
  6299  0014CE  C00D  FFDF         	movff	i1send_msg@length,indf2
  6300                           
  6301                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6302  0014D2  EE20 F002          	lfsr	2,2
  6303  0014D6  5015               	movf	i1send_msg@qmsg,w,c
  6304  0014D8  26D9               	addwf	fsr2l,f,c
  6305  0014DA  5016               	movf	i1send_msg@qmsg+1,w,c
  6306  0014DC  22DA               	addwfc	fsr2h,f,c
  6307  0014DE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6308                           
  6309                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6310  0014E2  0E03               	movlw	3
  6311  0014E4  2415               	addwf	i1send_msg@qmsg,w,c
  6312  0014E6  6E01               	movwf	i1memcpy@d1,c
  6313  0014E8  0E00               	movlw	0
  6314  0014EA  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6315  0014EC  6E02               	movwf	i1memcpy@d1+1,c
  6316  0014EE  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6317  0014F2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6318  0014F6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6319  0014FA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6320  0014FE  EC45  F00E         	call	i1_memcpy	;wreg free
  6321                           
  6322                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6323  001502  EE20 F034          	lfsr	2,52
  6324  001506  500B               	movf	i1send_msg@qptr,w,c
  6325  001508  26D9               	addwf	fsr2l,f,c
  6326  00150A  500C               	movf	i1send_msg@qptr+1,w,c
  6327  00150C  22DA               	addwfc	fsr2h,f,c
  6328  00150E  EE10 F034          	lfsr	1,52
  6329  001512  500B               	movf	i1send_msg@qptr,w,c
  6330  001514  26E1               	addwf	fsr1l,f,c
  6331  001516  500C               	movf	i1send_msg@qptr+1,w,c
  6332  001518  22E2               	addwfc	fsr1h,f,c
  6333  00151A  50E7               	movf	indf1,w,c
  6334  00151C  6E11               	movwf	??i1_send_msg& (0+255),c
  6335  00151E  2811               	incf	??i1_send_msg,w,c
  6336  001520  0B03               	andlw	3
  6337  001522  6EDF               	movwf	indf2,c
  6338                           
  6339                           ;messages.c: 59: qmsg->full = 1;
  6340  001524  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6341  001528  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6342  00152C  0E01               	movlw	1
  6343  00152E  6EDF               	movwf	indf2,c
  6344                           
  6345                           ;messages.c: 60: return (1);
  6346  001530  0E01               	movlw	1
  6347  001532  0012               	return	
  6348  001534                     __end_ofi1_send_msg:
  6349                           	opt stack 0
  6350                           pclatu	equ	0xFFB
  6351                           pclath	equ	0xFFA
  6352                           tblptru	equ	0xFF8
  6353                           tblptrh	equ	0xFF7
  6354                           tblptrl	equ	0xFF6
  6355                           tablat	equ	0xFF5
  6356                           prodh	equ	0xFF4
  6357                           prodl	equ	0xFF3
  6358                           intcon	equ	0xFF2
  6359                           postinc0	equ	0xFEE
  6360                           fsr0h	equ	0xFEA
  6361                           fsr0l	equ	0xFE9
  6362                           wreg	equ	0xFE8
  6363                           indf1	equ	0xFE7
  6364                           fsr1h	equ	0xFE2
  6365                           fsr1l	equ	0xFE1
  6366                           bsr	equ	0xFE0
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           
  6374 ;; *************** function i1_memcpy *****************
  6375 ;; Defined at:
  6376 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  d1              2    0[COMRAM] PTR void 
  6379 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6380 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6381 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6382 ;;  s1              2    2[COMRAM] PTR const void 
  6383 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6384 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6385 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6386 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6387 ;;		 -> main@ic(28), main@uc(5), 
  6388 ;;  n               2    4[COMRAM] unsigned int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6391 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6392 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6393 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6394 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6395 ;;		 -> main@ic(28), main@uc(5), 
  6396 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6397 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6398 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6399 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2    0[COMRAM] PTR void 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6409 ;;      Params:         6       0       0       0       0
  6410 ;;      Locals:         4       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0
  6412 ;;      Totals:        10       0       0       0       0
  6413 ;;Total ram usage:       10 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    5
  6416 ;; This function calls:
  6417 ;;		Nothing
  6418 ;; This function is called by:
  6419 ;;		i1_send_msg
  6420 ;;		i1_recv_msg
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text41
  6425  001C8A                     __ptext41:
  6426                           	opt stack 0
  6427  001C8A                     i1_memcpy:
  6428                           	opt stack 17
  6429                           
  6430                           ;incstack = 0
  6431  001C8A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6432  001C8E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6433  001C92  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6434  001C96  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6435  001C9A  D00E               	goto	i1l3026
  6436  001C9C                     i1l3020:
  6437  001C9C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6438  001CA0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6439  001CA4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6440  001CA8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6441  001CAC  CFDF FFE7          	movff	indf2,indf1
  6442  001CB0  4A09               	infsnz	i1memcpy@s,f,c
  6443  001CB2  2A0A               	incf	i1memcpy@s+1,f,c
  6444  001CB4  4A07               	infsnz	i1memcpy@d,f,c
  6445  001CB6  2A08               	incf	i1memcpy@d+1,f,c
  6446  001CB8                     i1l3026:
  6447  001CB8  0605               	decf	i1memcpy@n,f,c
  6448  001CBA  A0D8               	btfss	status,0,c
  6449  001CBC  0606               	decf	i1memcpy@n+1,f,c
  6450  001CBE  2805               	incf	i1memcpy@n& (0+255),w,c
  6451  001CC0  B4D8               	btfsc	status,2,c
  6452  001CC2  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6453  001CC4  B4D8               	btfsc	status,2,c
  6454                           
  6455                           ;	Return value of i1_memcpy is never used
  6456  001CC6  0012               	return	
  6457  001CC8  D7E9               	goto	i1l3020
  6458  001CCA                     __end_ofi1_memcpy:
  6459                           	opt stack 0
  6460                           pclatu	equ	0xFFB
  6461                           pclath	equ	0xFFA
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           prodh	equ	0xFF4
  6467                           prodl	equ	0xFF3
  6468                           intcon	equ	0xFF2
  6469                           postinc0	equ	0xFEE
  6470                           fsr0h	equ	0xFEA
  6471                           fsr0l	equ	0xFE9
  6472                           wreg	equ	0xFE8
  6473                           indf1	equ	0xFE7
  6474                           fsr1h	equ	0xFE2
  6475                           fsr1l	equ	0xFE1
  6476                           bsr	equ	0xFE0
  6477                           indf2	equ	0xFDF
  6478                           postinc2	equ	0xFDE
  6479                           postdec2	equ	0xFDD
  6480                           fsr2h	equ	0xFDA
  6481                           fsr2l	equ	0xFD9
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _InterruptHandlerHigh *****************
  6485 ;; Defined at:
  6486 ;;		line 83 in file "src/interrupts.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6500 ;;      Params:         0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0
  6502 ;;      Temps:          0      14       0       0       0
  6503 ;;      Totals:         0      14       0       0       0
  6504 ;;Total ram usage:       14 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    4
  6507 ;; This function calls:
  6508 ;;		_SleepIfOkay
  6509 ;;		_i2c_int_handler
  6510 ;;		_timer0_int_handler
  6511 ;; This function is called by:
  6512 ;;		Interrupt level 2
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	intcode
  6517  000008                     __pintcode:
  6518                           	opt stack 0
  6519  000008                     _InterruptHandlerHigh:
  6520                           	opt stack 17
  6521                           
  6522                           ;incstack = 0
  6523  000008  CFFA F0A5          	movff	pclath,??_InterruptHandlerHigh
  6524  00000C  CFFB F0A6          	movff	pclatu,??_InterruptHandlerHigh+1
  6525  000010  EFBB  F00B         	goto	int_func
  6526                           pclatu	equ	0xFFB
  6527                           pclath	equ	0xFFA
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           intcon	equ	0xFF2
  6535                           postinc0	equ	0xFEE
  6536                           fsr0h	equ	0xFEA
  6537                           fsr0l	equ	0xFE9
  6538                           wreg	equ	0xFE8
  6539                           indf1	equ	0xFE7
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           bsr	equ	0xFE0
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550                           	psect	intcode_body
  6551  001776                     __pintcode_body:
  6552                           	opt stack 17
  6553  001776                     int_func:
  6554                           	opt stack 17
  6555  001776  CFE9 F0A7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6556  00177A  CFEA F0A8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6557  00177E  CFE1 F0A9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6558  001782  CFE2 F0AA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6559  001786  CFD9 F0AB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6560  00178A  CFDA F0AC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6561  00178E  CFF3 F0AD          	movff	prodl,??_InterruptHandlerHigh+8
  6562  001792  CFF4 F0AE          	movff	prodh,??_InterruptHandlerHigh+9
  6563  001796  CFF6 F0AF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6564  00179A  CFF7 F0B0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6565  00179E  CFF8 F0B1          	movff	tblptru,??_InterruptHandlerHigh+12
  6566  0017A2  CFF5 F0B2          	movff	tablat,??_InterruptHandlerHigh+13
  6567                           
  6568                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6569  0017A6  A69E               	btfss	3998,3,c	;volatile
  6570  0017A8  D003               	goto	i2l3202
  6571                           
  6572                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6573  0017AA  969E               	bcf	3998,3,c	;volatile
  6574                           
  6575                           ;interrupts.c: 92: i2c_int_handler();
  6576  0017AC  EC63  F000         	call	_i2c_int_handler	;wreg free
  6577  0017B0                     i2l3202:
  6578                           
  6579                           ;interrupts.c: 93: }
  6580                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6581  0017B0  A4F2               	btfss	intcon,2,c	;volatile
  6582  0017B2  D003               	goto	i2l3208
  6583                           
  6584                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6585  0017B4  94F2               	bcf	intcon,2,c	;volatile
  6586                           
  6587                           ;interrupts.c: 99: timer0_int_handler();
  6588  0017B6  EC76  F00B         	call	_timer0_int_handler	;wreg free
  6589  0017BA                     i2l3208:
  6590                           
  6591                           ;interrupts.c: 100: }
  6592                           ;interrupts.c: 109: SleepIfOkay();
  6593  0017BA  ECE0  F00C         	call	_SleepIfOkay	;wreg free
  6594  0017BE  C0B2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6595  0017C2  C0B1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6596  0017C6  C0B0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6597  0017CA  C0AF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6598  0017CE  C0AE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6599  0017D2  C0AD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6600  0017D6  C0AC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6601  0017DA  C0AB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6602  0017DE  C0AA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6603  0017E2  C0A9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6604  0017E6  C0A8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6605  0017EA  C0A7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6606  0017EE  C0A6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6607  0017F2  C0A5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6608  0017F6  0011               	retfie		f
  6609  0017F8                     __end_of_InterruptHandlerHigh:
  6610                           	opt stack 0
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           postinc0	equ	0xFEE
  6621                           fsr0h	equ	0xFEA
  6622                           fsr0l	equ	0xFE9
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           fsr1h	equ	0xFE2
  6626                           fsr1l	equ	0xFE1
  6627                           bsr	equ	0xFE0
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _timer0_int_handler *****************
  6636 ;; Defined at:
  6637 ;;		line 16 in file "src/user_interrupts.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  val             2   34[BANK0 ] unsigned int 
  6642 ;;  msgtype         2   32[BANK0 ] int 
  6643 ;;  length          2   30[BANK0 ] int 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;		None               void
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6653 ;;      Params:         0       0       0       0       0
  6654 ;;      Locals:         0       6       0       0       0
  6655 ;;      Temps:          0       1       0       0       0
  6656 ;;      Totals:         0       7       0       0       0
  6657 ;;Total ram usage:        7 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    3
  6660 ;; This function calls:
  6661 ;;		_FromMainHigh_recvmsg
  6662 ;;		_ToMainHigh_sendmsg
  6663 ;;		_WriteTimer0
  6664 ;; This function is called by:
  6665 ;;		_InterruptHandlerHigh
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text43
  6670  0016EC                     __ptext43:
  6671                           	opt stack 0
  6672  0016EC                     _timer0_int_handler:
  6673                           	opt stack 17
  6674                           
  6675                           ;user_interrupts.c: 17: unsigned int val;
  6676                           ;user_interrupts.c: 18: int length, msgtype;
  6677                           ;user_interrupts.c: 25: WriteTimer0(0);
  6678                           
  6679                           ;incstack = 0
  6680  0016EC  0E00               	movlw	0
  6681  0016EE  0100               	movlb	0	; () banked
  6682  0016F0  0100               	movlb	0	; () banked
  6683  0016F2  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6684  0016F4  0E00               	movlw	0
  6685  0016F6  0100               	movlb	0	; () banked
  6686  0016F8  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6687  0016FA  ECDF  F00F         	call	_WriteTimer0	;wreg free
  6688                           
  6689                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6690  0016FE  0100               	movlb	0	; () banked
  6691  001700  0E00               	movlw	high timer0_int_handler@msgtype
  6692  001702  0100               	movlb	0	; () banked
  6693  001704  0100               	movlb	0	; () banked
  6694  001706  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6695  001708  0100               	movlb	0	; () banked
  6696  00170A  0EA0               	movlw	low timer0_int_handler@msgtype
  6697  00170C  0100               	movlb	0	; () banked
  6698  00170E  0100               	movlb	0	; () banked
  6699  001710  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6700  001712  0100               	movlb	0	; () banked
  6701  001714  0E00               	movlw	high timer0_int_handler@val
  6702  001716  0100               	movlb	0	; () banked
  6703  001718  0100               	movlb	0	; () banked
  6704  00171A  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6705  00171C  0100               	movlb	0	; () banked
  6706  00171E  0EA2               	movlw	low timer0_int_handler@val
  6707  001720  0100               	movlb	0	; () banked
  6708  001722  0100               	movlb	0	; () banked
  6709  001724  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6710  001726  0E02               	movlw	2
  6711  001728  EC24  F00E         	call	_FromMainHigh_recvmsg
  6712  00172C  0100               	movlb	0	; () banked
  6713  00172E  0100               	movlb	0	; () banked
  6714  001730  6F9E               	movwf	timer0_int_handler@length& (0+255),b
  6715  001732  0100               	movlb	0	; () banked
  6716  001734  6B9F               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6717  001736  0100               	movlb	0	; () banked
  6718  001738  BF9E               	btfsc	timer0_int_handler@length& (0+255),7,b
  6719  00173A  079F               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6723  00173C  0100               	movlb	0	; () banked
  6724  00173E  0100               	movlb	0	; () banked
  6725  001740  519E               	movf	timer0_int_handler@length& (0+255),w,b
  6726  001742  0A02               	xorlw	2
  6727  001744  119F               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6728  001746  A4D8               	btfss	status,2,c
  6729  001748  0012               	return	
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6733  00174A  0100               	movlb	0	; () banked
  6734  00174C  6F9D               	movwf	??_timer0_int_handler& (0+255),b
  6735  00174E  0E0A               	movlw	10
  6736  001750  0100               	movlb	0	; () banked
  6737  001752  0100               	movlb	0	; () banked
  6738  001754  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6739  001756  0100               	movlb	0	; () banked
  6740  001758  519D               	movf	??_timer0_int_handler& (0+255),w,b
  6741  00175A  0100               	movlb	0	; () banked
  6742  00175C  0E00               	movlw	high timer0_int_handler@val
  6743  00175E  0100               	movlb	0	; () banked
  6744  001760  0100               	movlb	0	; () banked
  6745  001762  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6746  001764  0100               	movlb	0	; () banked
  6747  001766  0EA2               	movlw	low timer0_int_handler@val
  6748  001768  0100               	movlb	0	; () banked
  6749  00176A  0100               	movlb	0	; () banked
  6750  00176C  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6751  00176E  0E02               	movlw	2
  6752  001770  ECD6  F00E         	call	_ToMainHigh_sendmsg
  6753  001774  0012               	return	
  6754  001776                     __end_of_timer0_int_handler:
  6755                           	opt stack 0
  6756                           pclatu	equ	0xFFB
  6757                           pclath	equ	0xFFA
  6758                           tblptru	equ	0xFF8
  6759                           tblptrh	equ	0xFF7
  6760                           tblptrl	equ	0xFF6
  6761                           tablat	equ	0xFF5
  6762                           prodh	equ	0xFF4
  6763                           prodl	equ	0xFF3
  6764                           intcon	equ	0xFF2
  6765                           postinc0	equ	0xFEE
  6766                           fsr0h	equ	0xFEA
  6767                           fsr0l	equ	0xFE9
  6768                           wreg	equ	0xFE8
  6769                           indf1	equ	0xFE7
  6770                           fsr1h	equ	0xFE2
  6771                           fsr1l	equ	0xFE1
  6772                           bsr	equ	0xFE0
  6773                           indf2	equ	0xFDF
  6774                           postinc2	equ	0xFDE
  6775                           postdec2	equ	0xFDD
  6776                           fsr2h	equ	0xFDA
  6777                           fsr2l	equ	0xFD9
  6778                           status	equ	0xFD8
  6779                           
  6780 ;; *************** function _WriteTimer0 *****************
  6781 ;; Defined at:
  6782 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  timer0          2    0[BANK0 ] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  timer           2    2[BANK0 ] struct Timers
  6787 ;; Return value:  Size  Location     Type
  6788 ;;		None               void
  6789 ;; Registers used:
  6790 ;;		None
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6796 ;;      Params:         0       2       0       0       0
  6797 ;;      Locals:         0       2       0       0       0
  6798 ;;      Temps:          0       0       0       0       0
  6799 ;;      Totals:         0       4       0       0       0
  6800 ;;Total ram usage:        4 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_timer0_int_handler
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text44
  6810  001FBE                     __ptext44:
  6811                           	opt stack 0
  6812  001FBE                     _WriteTimer0:
  6813                           	opt stack 19
  6814                           
  6815                           ;incstack = 0
  6816  001FBE  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6817  001FC2  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6818  001FC6  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6819  001FCA  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6820  001FCE  0012               	return	
  6821  001FD0                     __end_of_WriteTimer0:
  6822                           	opt stack 0
  6823                           pclatu	equ	0xFFB
  6824                           pclath	equ	0xFFA
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           postinc0	equ	0xFEE
  6833                           fsr0h	equ	0xFEA
  6834                           fsr0l	equ	0xFE9
  6835                           wreg	equ	0xFE8
  6836                           indf1	equ	0xFE7
  6837                           fsr1h	equ	0xFE2
  6838                           fsr1l	equ	0xFE1
  6839                           bsr	equ	0xFE0
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           postdec2	equ	0xFDD
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function _FromMainHigh_recvmsg *****************
  6848 ;; Defined at:
  6849 ;;		line 183 in file "src/messages.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  maxlength       1    wreg     unsigned char 
  6852 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  6853 ;;		 -> timer0_int_handler@msgtype(2), 
  6854 ;;  data            2   26[BANK0 ] PTR void 
  6855 ;;		 -> timer0_int_handler@val(2), 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  maxlength       1   28[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      char 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6867 ;;      Params:         0       4       0       0       0
  6868 ;;      Locals:         0       1       0       0       0
  6869 ;;      Temps:          0       0       0       0       0
  6870 ;;      Totals:         0       5       0       0       0
  6871 ;;Total ram usage:        5 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    2
  6874 ;; This function calls:
  6875 ;;		i2_recv_msg
  6876 ;; This function is called by:
  6877 ;;		_timer0_int_handler
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text45
  6882  001C48                     __ptext45:
  6883                           	opt stack 0
  6884  001C48                     _FromMainHigh_recvmsg:
  6885                           	opt stack 17
  6886                           
  6887                           ;incstack = 0
  6888                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6889  001C48  CFE8 F09C          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6890                           
  6891                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6892  001C4C  0102               	movlb	2	; () banked
  6893  001C4E  0E02               	movlw	high _FromMainHigh_MQ
  6894  001C50  0100               	movlb	0	; () banked
  6895  001C52  0100               	movlb	0	; () banked
  6896  001C54  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6897  001C56  0102               	movlb	2	; () banked
  6898  001C58  0E80               	movlw	low _FromMainHigh_MQ
  6899  001C5A  0100               	movlb	0	; () banked
  6900  001C5C  0100               	movlb	0	; () banked
  6901  001C5E  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  6902  001C60  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6903  001C64  0100               	movlb	0	; () banked
  6904  001C66  0100               	movlb	0	; () banked
  6905  001C68  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6906  001C6C  0100               	movlb	0	; () banked
  6907  001C6E  0100               	movlb	0	; () banked
  6908  001C70  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6909  001C74  0100               	movlb	0	; () banked
  6910  001C76  0100               	movlb	0	; () banked
  6911  001C78  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6912  001C7C  0100               	movlb	0	; () banked
  6913  001C7E  0100               	movlb	0	; () banked
  6914  001C80  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6915  001C84  EC8A  F006         	call	i2_recv_msg	;wreg free
  6916  001C88  0012               	return	
  6917  001C8A                     __end_of_FromMainHigh_recvmsg:
  6918                           	opt stack 0
  6919                           pclatu	equ	0xFFB
  6920                           pclath	equ	0xFFA
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           postinc0	equ	0xFEE
  6929                           fsr0h	equ	0xFEA
  6930                           fsr0l	equ	0xFE9
  6931                           wreg	equ	0xFE8
  6932                           indf1	equ	0xFE7
  6933                           fsr1h	equ	0xFE2
  6934                           fsr1l	equ	0xFE1
  6935                           bsr	equ	0xFE0
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function i2_recv_msg *****************
  6944 ;; Defined at:
  6945 ;;		line 63 in file "src/messages.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6948 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6949 ;;  maxlength       1   12[BANK0 ] unsigned char 
  6950 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  6951 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6952 ;;  data            2   15[BANK0 ] PTR void 
  6953 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  6956 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6957 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6958 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  6959 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      char 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6969 ;;      Params:         0       7       0       0       0
  6970 ;;      Locals:         0       5       0       0       0
  6971 ;;      Temps:          0       2       0       0       0
  6972 ;;      Totals:         0      14       0       0       0
  6973 ;;Total ram usage:       14 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    1
  6976 ;; This function calls:
  6977 ;;		i2_memcpy
  6978 ;; This function is called by:
  6979 ;;		_FromMainHigh_recvmsg
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text46
  6984  000D14                     __ptext46:
  6985                           	opt stack 0
  6986  000D14                     i2_recv_msg:
  6987                           	opt stack 17
  6988                           
  6989                           ;messages.c: 64: unsigned char slot;
  6990                           ;messages.c: 68: msg *qmsg;
  6991                           ;messages.c: 69: size_t tlength;
  6992                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6993                           
  6994                           ;incstack = 0
  6995  000D14  0100               	movlb	0	; () banked
  6996  000D16  EE20 F035          	lfsr	2,53
  6997  000D1A  0100               	movlb	0	; () banked
  6998  000D1C  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  6999  000D1E  26D9               	addwf	fsr2l,f,c
  7000  000D20  0100               	movlb	0	; () banked
  7001  000D22  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7002  000D24  22DA               	addwfc	fsr2h,f,c
  7003  000D26  50DF               	movf	indf2,w,c
  7004  000D28  0100               	movlb	0	; () banked
  7005  000D2A  0100               	movlb	0	; () banked
  7006  000D2C  6F93               	movwf	i2recv_msg@slot& (0+255),b
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7010  000D2E  0100               	movlb	0	; () banked
  7011  000D30  0100               	movlb	0	; () banked
  7012  000D32  5193               	movf	i2recv_msg@slot& (0+255),w,b
  7013  000D34  0D0D               	mullw	13
  7014  000D36  50F3               	movf	prodl,w,c
  7015  000D38  0100               	movlb	0	; () banked
  7016  000D3A  0100               	movlb	0	; () banked
  7017  000D3C  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  7018  000D3E  0100               	movlb	0	; () banked
  7019  000D40  0100               	movlb	0	; () banked
  7020  000D42  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  7021  000D44  50F4               	movf	prodh,w,c
  7022  000D46  0100               	movlb	0	; () banked
  7023  000D48  0100               	movlb	0	; () banked
  7024  000D4A  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7025  000D4C  0100               	movlb	0	; () banked
  7026  000D4E  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;messages.c: 74: if (qmsg->full == 1) {
  7030  000D50  0E01               	movlw	1
  7031  000D52  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7032  000D56  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7033  000D5A  62DF               	cpfseq	indf2,c
  7034  000D5C  D074               	goto	i2l3720
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7038  000D5E  0100               	movlb	0	; () banked
  7039  000D60  EE20 F001          	lfsr	2,1
  7040  000D64  0100               	movlb	0	; () banked
  7041  000D66  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7042  000D68  26D9               	addwf	fsr2l,f,c
  7043  000D6A  0100               	movlb	0	; () banked
  7044  000D6C  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7045  000D6E  22DA               	addwfc	fsr2h,f,c
  7046  000D70  50DF               	movf	indf2,w,c
  7047  000D72  0100               	movlb	0	; () banked
  7048  000D74  0100               	movlb	0	; () banked
  7049  000D76  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7050  000D78  B0D8               	btfsc	status,0,c
  7051  000D7A  D002               	goto	i2l3704
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;messages.c: 77: return (-3);
  7055  000D7C  0EFD               	movlw	253
  7056  000D7E  0012               	return	
  7057  000D80                     i2l3704:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;messages.c: 78: }
  7061                           ;messages.c: 80: tlength = qmsg->length;
  7062  000D80  0100               	movlb	0	; () banked
  7063  000D82  EE20 F001          	lfsr	2,1
  7064  000D86  0100               	movlb	0	; () banked
  7065  000D88  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7066  000D8A  26D9               	addwf	fsr2l,f,c
  7067  000D8C  0100               	movlb	0	; () banked
  7068  000D8E  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7069  000D90  22DA               	addwfc	fsr2h,f,c
  7070  000D92  50DF               	movf	indf2,w,c
  7071  000D94  0100               	movlb	0	; () banked
  7072  000D96  6F91               	movwf	??i2_recv_msg& (0+255),b
  7073  000D98  0100               	movlb	0	; () banked
  7074  000D9A  5191               	movf	??i2_recv_msg& (0+255),w,b
  7075  000D9C  0100               	movlb	0	; () banked
  7076  000D9E  0100               	movlb	0	; () banked
  7077  000DA0  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  7078  000DA2  0100               	movlb	0	; () banked
  7079  000DA4  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7083  000DA6  0100               	movlb	0	; () banked
  7084  000DA8  0100               	movlb	0	; () banked
  7085  000DAA  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7086  000DAE  0100               	movlb	0	; () banked
  7087  000DB0  0100               	movlb	0	; () banked
  7088  000DB2  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  7089  000DB6  0E03               	movlw	3
  7090  000DB8  0100               	movlb	0	; () banked
  7091  000DBA  0100               	movlb	0	; () banked
  7092  000DBC  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7093  000DBE  0100               	movlb	0	; () banked
  7094  000DC0  6F91               	movwf	??i2_recv_msg& (0+255),b
  7095  000DC2  0E00               	movlw	0
  7096  000DC4  0100               	movlb	0	; () banked
  7097  000DC6  0100               	movlb	0	; () banked
  7098  000DC8  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7099  000DCA  0100               	movlb	0	; () banked
  7100  000DCC  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  7101  000DCE  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  7102  000DD2  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7103  000DD6  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  7104  000DDA  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7105  000DDE  EC42  F00D         	call	i2_memcpy	;wreg free
  7106                           
  7107                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7108  000DE2  0100               	movlb	0	; () banked
  7109  000DE4  EE20 F035          	lfsr	2,53
  7110  000DE8  0100               	movlb	0	; () banked
  7111  000DEA  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  7112  000DEC  26D9               	addwf	fsr2l,f,c
  7113  000DEE  0100               	movlb	0	; () banked
  7114  000DF0  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7115  000DF2  22DA               	addwfc	fsr2h,f,c
  7116  000DF4  0100               	movlb	0	; () banked
  7117  000DF6  EE10 F035          	lfsr	1,53
  7118  000DFA  0100               	movlb	0	; () banked
  7119  000DFC  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  7120  000DFE  26E1               	addwf	fsr1l,f,c
  7121  000E00  0100               	movlb	0	; () banked
  7122  000E02  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7123  000E04  22E2               	addwfc	fsr1h,f,c
  7124  000E06  50E7               	movf	indf1,w,c
  7125  000E08  0100               	movlb	0	; () banked
  7126  000E0A  6F91               	movwf	??i2_recv_msg& (0+255),b
  7127  000E0C  0100               	movlb	0	; () banked
  7128  000E0E  2991               	incf	??i2_recv_msg& (0+255),w,b
  7129  000E10  0B03               	andlw	3
  7130  000E12  6EDF               	movwf	indf2,c
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7134  000E14  0100               	movlb	0	; () banked
  7135  000E16  EE20 F002          	lfsr	2,2
  7136  000E1A  0100               	movlb	0	; () banked
  7137  000E1C  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7138  000E1E  26D9               	addwf	fsr2l,f,c
  7139  000E20  0100               	movlb	0	; () banked
  7140  000E22  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7141  000E24  22DA               	addwfc	fsr2h,f,c
  7142  000E26  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7143  000E2A  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7144  000E2E  CFDF FFE7          	movff	indf2,indf1
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;messages.c: 91: qmsg->full = 0;
  7148  000E32  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7149  000E36  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7150  000E3A  0E00               	movlw	0
  7151  000E3C  6EDF               	movwf	indf2,c
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;messages.c: 92: return (tlength);
  7155  000E3E  0100               	movlb	0	; () banked
  7156  000E40  0100               	movlb	0	; () banked
  7157  000E42  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  7158  000E44  0012               	return	
  7159  000E46                     i2l3720:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;messages.c: 94: return (-4);
  7163  000E46  0EFC               	movlw	252
  7164  000E48  0012               	return	
  7165  000E4A                     __end_ofi2_recv_msg:
  7166                           	opt stack 0
  7167                           pclatu	equ	0xFFB
  7168                           pclath	equ	0xFFA
  7169                           tblptru	equ	0xFF8
  7170                           tblptrh	equ	0xFF7
  7171                           tblptrl	equ	0xFF6
  7172                           tablat	equ	0xFF5
  7173                           prodh	equ	0xFF4
  7174                           prodl	equ	0xFF3
  7175                           intcon	equ	0xFF2
  7176                           postinc0	equ	0xFEE
  7177                           fsr0h	equ	0xFEA
  7178                           fsr0l	equ	0xFE9
  7179                           wreg	equ	0xFE8
  7180                           indf1	equ	0xFE7
  7181                           fsr1h	equ	0xFE2
  7182                           fsr1l	equ	0xFE1
  7183                           bsr	equ	0xFE0
  7184                           indf2	equ	0xFDF
  7185                           postinc2	equ	0xFDE
  7186                           postdec2	equ	0xFDD
  7187                           fsr2h	equ	0xFDA
  7188                           fsr2l	equ	0xFD9
  7189                           status	equ	0xFD8
  7190                           
  7191 ;; *************** function _i2c_int_handler *****************
  7192 ;; Defined at:
  7193 ;;		line 100 in file "src/my_i2c.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  7198 ;;  data_read       1   36[BANK0 ] unsigned char 
  7199 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  7200 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  7201 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  7202 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  7203 ;;  data_written    1   31[BANK0 ] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;		None               void
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7213 ;;      Params:         0       0       0       0       0
  7214 ;;      Locals:         0       9       0       0       0
  7215 ;;      Temps:          0       2       0       0       0
  7216 ;;      Totals:         0      11       0       0       0
  7217 ;;Total ram usage:       11 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    3
  7220 ;; This function calls:
  7221 ;;		_ToMainHigh_sendmsg
  7222 ;;		_handle_start
  7223 ;; This function is called by:
  7224 ;;		_InterruptHandlerHigh
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text47
  7229  0000C6                     __ptext47:
  7230                           	opt stack 0
  7231  0000C6                     _i2c_int_handler:
  7232                           	opt stack 17
  7233                           
  7234                           ;my_i2c.c: 101: unsigned char i2c_data;
  7235                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;incstack = 0
  7239  0000C6  0100               	movlb	0	; () banked
  7240  0000C8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7241  0000CA  0E00               	movlw	0
  7242  0000CC  0100               	movlb	0	; () banked
  7243  0000CE  0100               	movlb	0	; () banked
  7244  0000D0  6FA4               	movwf	i2c_int_handler@data_read& (0+255),b
  7245  0000D2  0100               	movlb	0	; () banked
  7246  0000D4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7247                           
  7248                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7249  0000D6  0100               	movlb	0	; () banked
  7250  0000D8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7251  0000DA  0E00               	movlw	0
  7252  0000DC  0100               	movlb	0	; () banked
  7253  0000DE  0100               	movlb	0	; () banked
  7254  0000E0  6F9F               	movwf	i2c_int_handler@data_written& (0+255),b
  7255  0000E2  0100               	movlb	0	; () banked
  7256  0000E4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7257                           
  7258                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7259  0000E6  0100               	movlb	0	; () banked
  7260  0000E8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7261  0000EA  0E00               	movlw	0
  7262  0000EC  0100               	movlb	0	; () banked
  7263  0000EE  0100               	movlb	0	; () banked
  7264  0000F0  6FA3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7265  0000F2  0100               	movlb	0	; () banked
  7266  0000F4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7267                           
  7268                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7269  0000F6  0100               	movlb	0	; () banked
  7270  0000F8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7271  0000FA  0E00               	movlw	0
  7272  0000FC  0100               	movlb	0	; () banked
  7273  0000FE  0100               	movlb	0	; () banked
  7274  000100  6FA2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7275  000102  0100               	movlb	0	; () banked
  7276  000104  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7277                           
  7278                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7279  000106  0100               	movlb	0	; () banked
  7280  000108  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7281  00010A  0E00               	movlw	0
  7282  00010C  0100               	movlb	0	; () banked
  7283  00010E  0100               	movlb	0	; () banked
  7284  000110  6FA0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7285  000112  0100               	movlb	0	; () banked
  7286  000114  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7290                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7291  000116  ACC6               	btfss	4038,6,c	;volatile
  7292  000118  D029               	goto	i2l3224
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7296  00011A  9CC6               	bcf	4038,6,c	;volatile
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7300  00011C  0100               	movlb	0	; () banked
  7301  00011E  EE20 F00C          	lfsr	2,12
  7302  000122  0100               	movlb	0	; () banked
  7303  000124  51CB               	movf	_ic_ptr& (0+255),w,b
  7304  000126  26D9               	addwf	fsr2l,f,c
  7305  000128  0100               	movlb	0	; () banked
  7306  00012A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7307  00012C  22DA               	addwfc	fsr2h,f,c
  7308  00012E  0E05               	movlw	5
  7309  000130  6EDF               	movwf	indf2,c
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;my_i2c.c: 116: overrun_error = 1;
  7313  000132  0100               	movlb	0	; () banked
  7314  000134  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7315  000136  0E01               	movlw	1
  7316  000138  0100               	movlb	0	; () banked
  7317  00013A  0100               	movlb	0	; () banked
  7318  00013C  6FA0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7319  00013E  0100               	movlb	0	; () banked
  7320  000140  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7324  000142  0100               	movlb	0	; () banked
  7325  000144  EE20 F00E          	lfsr	2,14
  7326  000148  0100               	movlb	0	; () banked
  7327  00014A  51CB               	movf	_ic_ptr& (0+255),w,b
  7328  00014C  26D9               	addwf	fsr2l,f,c
  7329  00014E  0100               	movlb	0	; () banked
  7330  000150  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7331  000152  22DA               	addwfc	fsr2h,f,c
  7332  000154  2ADF               	incf	indf2,f,c
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7336  000156  0100               	movlb	0	; () banked
  7337  000158  EE20 F00D          	lfsr	2,13
  7338  00015C  0100               	movlb	0	; () banked
  7339  00015E  51CB               	movf	_ic_ptr& (0+255),w,b
  7340  000160  26D9               	addwf	fsr2l,f,c
  7341  000162  0100               	movlb	0	; () banked
  7342  000164  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7343  000166  22DA               	addwfc	fsr2h,f,c
  7344  000168  0E04               	movlw	4
  7345  00016A  6EDF               	movwf	indf2,c
  7346  00016C                     i2l3224:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;my_i2c.c: 119: }
  7350                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7351  00016C  A0C7               	btfss	4039,0,c	;volatile
  7352  00016E  D00A               	goto	i2l3230
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7356  000170  CFC9 F0A1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;my_i2c.c: 123: data_read = 1;
  7360  000174  0100               	movlb	0	; () banked
  7361  000176  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7362  000178  0E01               	movlw	1
  7363  00017A  0100               	movlb	0	; () banked
  7364  00017C  0100               	movlb	0	; () banked
  7365  00017E  6FA4               	movwf	i2c_int_handler@data_read& (0+255),b
  7366  000180  0100               	movlb	0	; () banked
  7367  000182  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7368  000184                     i2l3230:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;my_i2c.c: 124: }
  7372                           ;my_i2c.c: 126: if (!overrun_error) {
  7373  000184  0100               	movlb	0	; () banked
  7374  000186  0100               	movlb	0	; () banked
  7375  000188  67A0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7376  00018A  D1CE               	goto	i2l277
  7377  00018C  D1B7               	goto	i2l3318
  7378  00018E                     i2l279:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 129: {
  7382                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7383  00018E  A6C7               	btfss	4039,3,c	;volatile
  7384  000190  D1CB               	goto	i2l277
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;my_i2c.c: 132: handle_start(data_read);
  7388  000192  0100               	movlb	0	; () banked
  7389  000194  0100               	movlb	0	; () banked
  7390  000196  51A4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7391  000198  EC85  F009         	call	_handle_start
  7392                           
  7393                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7394  00019C  0100               	movlb	0	; () banked
  7395  00019E  EE20 F00C          	lfsr	2,12
  7396  0001A2  0100               	movlb	0	; () banked
  7397  0001A4  51CB               	movf	_ic_ptr& (0+255),w,b
  7398  0001A6  26D9               	addwf	fsr2l,f,c
  7399  0001A8  0100               	movlb	0	; () banked
  7400  0001AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7401  0001AC  22DA               	addwfc	fsr2h,f,c
  7402  0001AE  0E08               	movlw	8
  7403  0001B0  62DF               	cpfseq	indf2,c
  7404  0001B2  D1BA               	goto	i2l277
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;my_i2c.c: 135: data_read = 0;
  7408  0001B4  0100               	movlb	0	; () banked
  7409  0001B6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7410  0001B8  0E00               	movlw	0
  7411  0001BA  0100               	movlb	0	; () banked
  7412  0001BC  0100               	movlb	0	; () banked
  7413  0001BE  6FA4               	movwf	i2c_int_handler@data_read& (0+255),b
  7414  0001C0  0100               	movlb	0	; () banked
  7415  0001C2  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7416                           
  7417                           ;my_i2c.c: 136: msg_to_send = 1;
  7418  0001C4  0100               	movlb	0	; () banked
  7419  0001C6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7420  0001C8  0E01               	movlw	1
  7421  0001CA  0100               	movlb	0	; () banked
  7422  0001CC  0100               	movlb	0	; () banked
  7423  0001CE  6FA2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7424  0001D0  D187               	goto	L11
  7425  0001D2                     i2l283:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;my_i2c.c: 142: {
  7429                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7430  0001D2  A8C7               	btfss	4039,4,c	;volatile
  7431  0001D4  D030               	goto	i2l3250
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7435  0001D6  0100               	movlb	0	; () banked
  7436  0001D8  EE20 F00B          	lfsr	2,11
  7437  0001DC  0100               	movlb	0	; () banked
  7438  0001DE  51CB               	movf	_ic_ptr& (0+255),w,b
  7439  0001E0  26D9               	addwf	fsr2l,f,c
  7440  0001E2  0100               	movlb	0	; () banked
  7441  0001E4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7442  0001E6  22DA               	addwfc	fsr2h,f,c
  7443  0001E8  2ADF               	incf	indf2,f,c
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;my_i2c.c: 148: if (data_read) {
  7447  0001EA  0100               	movlb	0	; () banked
  7448  0001EC  0100               	movlb	0	; () banked
  7449  0001EE  51A4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7450  0001F0  B4D8               	btfsc	status,2,c
  7451  0001F2  D179               	goto	L13
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7455  0001F4  BAC7               	btfsc	4039,5,c	;volatile
  7456  0001F6  D009               	goto	i2l3248
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;my_i2c.c: 150: msg_ready = 1;
  7460  0001F8  0100               	movlb	0	; () banked
  7461  0001FA  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7462  0001FC  0E01               	movlw	1
  7463  0001FE  0100               	movlb	0	; () banked
  7464  000200  0100               	movlb	0	; () banked
  7465  000202  6FA3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7466  000204  0100               	movlb	0	; () banked
  7467  000206  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7468                           
  7469                           ;my_i2c.c: 151: } else {
  7470  000208  D16E               	goto	L13
  7471  00020A                     i2l3248:
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7475  00020A  0100               	movlb	0	; () banked
  7476  00020C  EE20 F00E          	lfsr	2,14
  7477  000210  0100               	movlb	0	; () banked
  7478  000212  51CB               	movf	_ic_ptr& (0+255),w,b
  7479  000214  26D9               	addwf	fsr2l,f,c
  7480  000216  0100               	movlb	0	; () banked
  7481  000218  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7482  00021A  22DA               	addwfc	fsr2h,f,c
  7483  00021C  2ADF               	incf	indf2,f,c
  7484                           
  7485                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7486  00021E  0100               	movlb	0	; () banked
  7487  000220  EE20 F00D          	lfsr	2,13
  7488  000224  0100               	movlb	0	; () banked
  7489  000226  51CB               	movf	_ic_ptr& (0+255),w,b
  7490  000228  26D9               	addwf	fsr2l,f,c
  7491  00022A  0100               	movlb	0	; () banked
  7492  00022C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7493  00022E  22DA               	addwfc	fsr2h,f,c
  7494  000230  0E06               	movlw	6
  7495  000232  6EDF               	movwf	indf2,c
  7496                           
  7497                           ; BSR set to: 0
  7498  000234  D158               	goto	L13
  7499  000236                     i2l3250:
  7500                           
  7501                           ; BSR set to: 0
  7502  000236  0100               	movlb	0	; () banked
  7503  000238  0100               	movlb	0	; () banked
  7504  00023A  51A4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7505  00023C  B4D8               	btfsc	status,2,c
  7506  00023E  D174               	goto	i2l277
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7510  000240  0100               	movlb	0	; () banked
  7511  000242  EE20 F00B          	lfsr	2,11
  7512  000246  0100               	movlb	0	; () banked
  7513  000248  51CB               	movf	_ic_ptr& (0+255),w,b
  7514  00024A  26D9               	addwf	fsr2l,f,c
  7515  00024C  0100               	movlb	0	; () banked
  7516  00024E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7517  000250  22DA               	addwfc	fsr2h,f,c
  7518  000252  2ADF               	incf	indf2,f,c
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7522  000254  BAC7               	btfsc	4039,5,c	;volatile
  7523  000256  D019               	goto	i2l3266
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7527  000258  B4C7               	btfsc	4039,2,c	;volatile
  7528  00025A  D00B               	goto	i2l3260
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7532  00025C  0100               	movlb	0	; () banked
  7533  00025E  EE20 F00C          	lfsr	2,12
  7534  000262  0100               	movlb	0	; () banked
  7535  000264  51CB               	movf	_ic_ptr& (0+255),w,b
  7536  000266  26D9               	addwf	fsr2l,f,c
  7537  000268  0100               	movlb	0	; () banked
  7538  00026A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7539  00026C  22DA               	addwfc	fsr2h,f,c
  7540  00026E  0E07               	movlw	7
  7541  000270  D076               	goto	L10
  7542  000272                     i2l3260:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7546  000272  0100               	movlb	0	; () banked
  7547  000274  EE20 F00C          	lfsr	2,12
  7548  000278  0100               	movlb	0	; () banked
  7549  00027A  51CB               	movf	_ic_ptr& (0+255),w,b
  7550  00027C  26D9               	addwf	fsr2l,f,c
  7551  00027E  0100               	movlb	0	; () banked
  7552  000280  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7553  000282  22DA               	addwfc	fsr2h,f,c
  7554  000284  0E08               	movlw	8
  7555  000286  6EDF               	movwf	indf2,c
  7556  000288  D11D               	goto	L14
  7557  00028A                     i2l3266:
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7561  00028A  0100               	movlb	0	; () banked
  7562  00028C  EE20 F00E          	lfsr	2,14
  7563  000290  0100               	movlb	0	; () banked
  7564  000292  51CB               	movf	_ic_ptr& (0+255),w,b
  7565  000294  26D9               	addwf	fsr2l,f,c
  7566  000296  0100               	movlb	0	; () banked
  7567  000298  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7568  00029A  22DA               	addwfc	fsr2h,f,c
  7569  00029C  2ADF               	incf	indf2,f,c
  7570                           
  7571                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7572  00029E  0100               	movlb	0	; () banked
  7573  0002A0  EE20 F00C          	lfsr	2,12
  7574  0002A4  0100               	movlb	0	; () banked
  7575  0002A6  51CB               	movf	_ic_ptr& (0+255),w,b
  7576  0002A8  26D9               	addwf	fsr2l,f,c
  7577  0002AA  0100               	movlb	0	; () banked
  7578  0002AC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7579  0002AE  22DA               	addwfc	fsr2h,f,c
  7580  0002B0  0E05               	movlw	5
  7581  0002B2  6EDF               	movwf	indf2,c
  7582                           
  7583                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7584  0002B4  0100               	movlb	0	; () banked
  7585  0002B6  EE20 F00D          	lfsr	2,13
  7586  0002BA  0100               	movlb	0	; () banked
  7587  0002BC  51CB               	movf	_ic_ptr& (0+255),w,b
  7588  0002BE  26D9               	addwf	fsr2l,f,c
  7589  0002C0  0100               	movlb	0	; () banked
  7590  0002C2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7591  0002C4  22DA               	addwfc	fsr2h,f,c
  7592  0002C6  0E06               	movlw	6
  7593  0002C8  D04A               	goto	L10
  7594  0002CA                     i2l3268:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;my_i2c.c: 177: {
  7598                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7599  0002CA  0100               	movlb	0	; () banked
  7600  0002CC  EE20 F01A          	lfsr	2,26
  7601  0002D0  0100               	movlb	0	; () banked
  7602  0002D2  51CB               	movf	_ic_ptr& (0+255),w,b
  7603  0002D4  26D9               	addwf	fsr2l,f,c
  7604  0002D6  0100               	movlb	0	; () banked
  7605  0002D8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7606  0002DA  22DA               	addwfc	fsr2h,f,c
  7607  0002DC  50DF               	movf	indf2,w,c
  7608  0002DE  0100               	movlb	0	; () banked
  7609  0002E0  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7610  0002E2  0100               	movlb	0	; () banked
  7611  0002E4  EE20 F019          	lfsr	2,25
  7612  0002E8  0100               	movlb	0	; () banked
  7613  0002EA  51CB               	movf	_ic_ptr& (0+255),w,b
  7614  0002EC  26D9               	addwf	fsr2l,f,c
  7615  0002EE  0100               	movlb	0	; () banked
  7616  0002F0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  0002F2  22DA               	addwfc	fsr2h,f,c
  7618  0002F4  50DF               	movf	indf2,w,c
  7619  0002F6  0100               	movlb	0	; () banked
  7620  0002F8  5D9A               	subwf	??_i2c_int_handler& (0+255),w,b
  7621  0002FA  B0D8               	btfsc	status,0,c
  7622  0002FC  D0F4               	goto	L13
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7626  0002FE  0100               	movlb	0	; () banked
  7627  000300  EE20 F01A          	lfsr	2,26
  7628  000304  0100               	movlb	0	; () banked
  7629  000306  51CB               	movf	_ic_ptr& (0+255),w,b
  7630  000308  26D9               	addwf	fsr2l,f,c
  7631  00030A  0100               	movlb	0	; () banked
  7632  00030C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7633  00030E  22DA               	addwfc	fsr2h,f,c
  7634  000310  50DF               	movf	indf2,w,c
  7635  000312  0100               	movlb	0	; () banked
  7636  000314  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7637  000316  0100               	movlb	0	; () banked
  7638  000318  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7639  00031A  0D01               	mullw	1
  7640  00031C  0E0F               	movlw	15
  7641  00031E  26F3               	addwf	prodl,f,c
  7642  000320  0E00               	movlw	0
  7643  000322  22F4               	addwfc	prodh,f,c
  7644  000324  50F3               	movf	prodl,w,c
  7645  000326  0100               	movlb	0	; () banked
  7646  000328  0100               	movlb	0	; () banked
  7647  00032A  25CB               	addwf	_ic_ptr& (0+255),w,b
  7648  00032C  6ED9               	movwf	fsr2l,c
  7649  00032E  50F4               	movf	prodh,w,c
  7650  000330  0100               	movlb	0	; () banked
  7651  000332  0100               	movlb	0	; () banked
  7652  000334  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7653  000336  6EDA               	movwf	fsr2h,c
  7654  000338  50DF               	movf	indf2,w,c
  7655  00033A  6EC9               	movwf	4041,c	;volatile
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7659  00033C  0100               	movlb	0	; () banked
  7660  00033E  EE20 F01A          	lfsr	2,26
  7661  000342  0100               	movlb	0	; () banked
  7662  000344  51CB               	movf	_ic_ptr& (0+255),w,b
  7663  000346  26D9               	addwf	fsr2l,f,c
  7664  000348  0100               	movlb	0	; () banked
  7665  00034A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7666  00034C  22DA               	addwfc	fsr2h,f,c
  7667  00034E  2ADF               	incf	indf2,f,c
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;my_i2c.c: 181: data_written = 1;
  7671  000350  0100               	movlb	0	; () banked
  7672  000352  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7673  000354  0E01               	movlw	1
  7674  000356  0100               	movlb	0	; () banked
  7675  000358  0100               	movlb	0	; () banked
  7676  00035A  6F9F               	movwf	i2c_int_handler@data_written& (0+255),b
  7677  00035C  D0C1               	goto	L11
  7678  00035E                     L10:
  7679  00035E  6EDF               	movwf	indf2,c
  7680  000360  D0E3               	goto	i2l277
  7681  000362                     i2l297:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;my_i2c.c: 189: {
  7685                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7686  000362  A8C7               	btfss	4039,4,c	;volatile
  7687  000364  D062               	goto	i2l3296
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7691  000366  0100               	movlb	0	; () banked
  7692  000368  EE20 F00B          	lfsr	2,11
  7693  00036C  0100               	movlb	0	; () banked
  7694  00036E  51CB               	movf	_ic_ptr& (0+255),w,b
  7695  000370  26D9               	addwf	fsr2l,f,c
  7696  000372  0100               	movlb	0	; () banked
  7697  000374  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7698  000376  22DA               	addwfc	fsr2h,f,c
  7699  000378  2ADF               	incf	indf2,f,c
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;my_i2c.c: 194: if (data_read) {
  7703  00037A  0100               	movlb	0	; () banked
  7704  00037C  0100               	movlb	0	; () banked
  7705  00037E  51A4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7706  000380  B4D8               	btfsc	status,2,c
  7707  000382  D04A               	goto	i2l3292
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7711  000384  AAC7               	btfss	4039,5,c	;volatile
  7712  000386  D027               	goto	i2l3290
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7716  000388  0100               	movlb	0	; () banked
  7717  00038A  EE20 F00A          	lfsr	2,10
  7718  00038E  0100               	movlb	0	; () banked
  7719  000390  51CB               	movf	_ic_ptr& (0+255),w,b
  7720  000392  26D9               	addwf	fsr2l,f,c
  7721  000394  0100               	movlb	0	; () banked
  7722  000396  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7723  000398  22DA               	addwfc	fsr2h,f,c
  7724  00039A  50DF               	movf	indf2,w,c
  7725  00039C  0100               	movlb	0	; () banked
  7726  00039E  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7727  0003A0  0100               	movlb	0	; () banked
  7728  0003A2  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7729  0003A4  0D01               	mullw	1
  7730  0003A6  50F3               	movf	prodl,w,c
  7731  0003A8  0100               	movlb	0	; () banked
  7732  0003AA  0100               	movlb	0	; () banked
  7733  0003AC  25CB               	addwf	_ic_ptr& (0+255),w,b
  7734  0003AE  6ED9               	movwf	fsr2l,c
  7735  0003B0  50F4               	movf	prodh,w,c
  7736  0003B2  0100               	movlb	0	; () banked
  7737  0003B4  0100               	movlb	0	; () banked
  7738  0003B6  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7739  0003B8  6EDA               	movwf	fsr2h,c
  7740  0003BA  0100               	movlb	0	; () banked
  7741  0003BC  C0A1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7745  0003C0  0100               	movlb	0	; () banked
  7746  0003C2  EE20 F00A          	lfsr	2,10
  7747  0003C6  0100               	movlb	0	; () banked
  7748  0003C8  51CB               	movf	_ic_ptr& (0+255),w,b
  7749  0003CA  26D9               	addwf	fsr2l,f,c
  7750  0003CC  0100               	movlb	0	; () banked
  7751  0003CE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7752  0003D0  22DA               	addwfc	fsr2h,f,c
  7753  0003D2  2ADF               	incf	indf2,f,c
  7754  0003D4  D021               	goto	i2l3292
  7755  0003D6                     i2l3290:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7759  0003D6  0100               	movlb	0	; () banked
  7760  0003D8  EE20 F00E          	lfsr	2,14
  7761  0003DC  0100               	movlb	0	; () banked
  7762  0003DE  51CB               	movf	_ic_ptr& (0+255),w,b
  7763  0003E0  26D9               	addwf	fsr2l,f,c
  7764  0003E2  0100               	movlb	0	; () banked
  7765  0003E4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7766  0003E6  22DA               	addwfc	fsr2h,f,c
  7767  0003E8  2ADF               	incf	indf2,f,c
  7768                           
  7769                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7770  0003EA  0100               	movlb	0	; () banked
  7771  0003EC  EE20 F00D          	lfsr	2,13
  7772  0003F0  0100               	movlb	0	; () banked
  7773  0003F2  51CB               	movf	_ic_ptr& (0+255),w,b
  7774  0003F4  26D9               	addwf	fsr2l,f,c
  7775  0003F6  0100               	movlb	0	; () banked
  7776  0003F8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7777  0003FA  22DA               	addwfc	fsr2h,f,c
  7778  0003FC  0E06               	movlw	6
  7779  0003FE  6EDF               	movwf	indf2,c
  7780                           
  7781                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7782  000400  0100               	movlb	0	; () banked
  7783  000402  EE20 F00C          	lfsr	2,12
  7784  000406  0100               	movlb	0	; () banked
  7785  000408  51CB               	movf	_ic_ptr& (0+255),w,b
  7786  00040A  26D9               	addwf	fsr2l,f,c
  7787  00040C  0100               	movlb	0	; () banked
  7788  00040E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7789  000410  22DA               	addwfc	fsr2h,f,c
  7790  000412  0E05               	movlw	5
  7791  000414  6EDF               	movwf	indf2,c
  7792  000416  D067               	goto	L13
  7793  000418                     i2l3292:
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;my_i2c.c: 205: msg_ready = 1;
  7797  000418  0100               	movlb	0	; () banked
  7798  00041A  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7799  00041C  0E01               	movlw	1
  7800  00041E  0100               	movlb	0	; () banked
  7801  000420  0100               	movlb	0	; () banked
  7802  000422  6FA3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7803  000424  0100               	movlb	0	; () banked
  7804  000426  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7805                           
  7806                           ; BSR set to: 0
  7807  000428  D05E               	goto	L13
  7808  00042A                     i2l3296:
  7809                           
  7810                           ; BSR set to: 0
  7811  00042A  0100               	movlb	0	; () banked
  7812  00042C  0100               	movlb	0	; () banked
  7813  00042E  51A4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7814  000430  B4D8               	btfsc	status,2,c
  7815  000432  D07A               	goto	i2l277
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7819  000434  0100               	movlb	0	; () banked
  7820  000436  EE20 F00B          	lfsr	2,11
  7821  00043A  0100               	movlb	0	; () banked
  7822  00043C  51CB               	movf	_ic_ptr& (0+255),w,b
  7823  00043E  26D9               	addwf	fsr2l,f,c
  7824  000440  0100               	movlb	0	; () banked
  7825  000442  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7826  000444  22DA               	addwfc	fsr2h,f,c
  7827  000446  2ADF               	incf	indf2,f,c
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7831  000448  AAC7               	btfss	4039,5,c	;volatile
  7832  00044A  D027               	goto	i2l305
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7836  00044C  0100               	movlb	0	; () banked
  7837  00044E  EE20 F00A          	lfsr	2,10
  7838  000452  0100               	movlb	0	; () banked
  7839  000454  51CB               	movf	_ic_ptr& (0+255),w,b
  7840  000456  26D9               	addwf	fsr2l,f,c
  7841  000458  0100               	movlb	0	; () banked
  7842  00045A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7843  00045C  22DA               	addwfc	fsr2h,f,c
  7844  00045E  50DF               	movf	indf2,w,c
  7845  000460  0100               	movlb	0	; () banked
  7846  000462  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7847  000464  0100               	movlb	0	; () banked
  7848  000466  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7849  000468  0D01               	mullw	1
  7850  00046A  50F3               	movf	prodl,w,c
  7851  00046C  0100               	movlb	0	; () banked
  7852  00046E  0100               	movlb	0	; () banked
  7853  000470  25CB               	addwf	_ic_ptr& (0+255),w,b
  7854  000472  6ED9               	movwf	fsr2l,c
  7855  000474  50F4               	movf	prodh,w,c
  7856  000476  0100               	movlb	0	; () banked
  7857  000478  0100               	movlb	0	; () banked
  7858  00047A  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7859  00047C  6EDA               	movwf	fsr2h,c
  7860  00047E  0100               	movlb	0	; () banked
  7861  000480  C0A1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7865  000484  0100               	movlb	0	; () banked
  7866  000486  EE20 F00A          	lfsr	2,10
  7867  00048A  0100               	movlb	0	; () banked
  7868  00048C  51CB               	movf	_ic_ptr& (0+255),w,b
  7869  00048E  26D9               	addwf	fsr2l,f,c
  7870  000490  0100               	movlb	0	; () banked
  7871  000492  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7872  000494  22DA               	addwfc	fsr2h,f,c
  7873  000496  2ADF               	incf	indf2,f,c
  7874                           
  7875                           ;my_i2c.c: 213: } else {
  7876  000498  D047               	goto	i2l277
  7877  00049A                     i2l305:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7881  00049A  A4C7               	btfss	4039,2,c	;volatile
  7882  00049C  D6B6               	goto	i2l3248
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7886  00049E  0100               	movlb	0	; () banked
  7887  0004A0  EE20 F00C          	lfsr	2,12
  7888  0004A4  0100               	movlb	0	; () banked
  7889  0004A6  51CB               	movf	_ic_ptr& (0+255),w,b
  7890  0004A8  26D9               	addwf	fsr2l,f,c
  7891  0004AA  0100               	movlb	0	; () banked
  7892  0004AC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7893  0004AE  22DA               	addwfc	fsr2h,f,c
  7894  0004B0  0E08               	movlw	8
  7895  0004B2  6EDF               	movwf	indf2,c
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;my_i2c.c: 216: msg_ready = 1;
  7899  0004B4  0100               	movlb	0	; () banked
  7900  0004B6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7901  0004B8  0E01               	movlw	1
  7902  0004BA  0100               	movlb	0	; () banked
  7903  0004BC  0100               	movlb	0	; () banked
  7904  0004BE  6FA3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7905  0004C0  0100               	movlb	0	; () banked
  7906  0004C2  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7907  0004C4                     L14:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;my_i2c.c: 217: msg_to_send = 1;
  7911  0004C4  0100               	movlb	0	; () banked
  7912  0004C6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7913  0004C8  0E01               	movlw	1
  7914  0004CA  0100               	movlb	0	; () banked
  7915  0004CC  0100               	movlb	0	; () banked
  7916  0004CE  6FA2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7917  0004D0  0100               	movlb	0	; () banked
  7918  0004D2  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;my_i2c.c: 219: data_read = 0;
  7922  0004D4  0100               	movlb	0	; () banked
  7923  0004D6  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  7924  0004D8  0E00               	movlw	0
  7925  0004DA  0100               	movlb	0	; () banked
  7926  0004DC  0100               	movlb	0	; () banked
  7927  0004DE  6FA4               	movwf	i2c_int_handler@data_read& (0+255),b
  7928  0004E0                     L11:
  7929  0004E0  0100               	movlb	0	; () banked
  7930  0004E2  519A               	movf	??_i2c_int_handler& (0+255),w,b
  7931                           
  7932                           ;my_i2c.c: 220: } else {
  7933  0004E4  D021               	goto	i2l277
  7934  0004E6                     L13:
  7935                           
  7936                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7937  0004E6  0100               	movlb	0	; () banked
  7938  0004E8  EE20 F00C          	lfsr	2,12
  7939  0004EC  0100               	movlb	0	; () banked
  7940  0004EE  51CB               	movf	_ic_ptr& (0+255),w,b
  7941  0004F0  26D9               	addwf	fsr2l,f,c
  7942  0004F2  0100               	movlb	0	; () banked
  7943  0004F4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7944  0004F6  22DA               	addwfc	fsr2h,f,c
  7945  0004F8  0E05               	movlw	5
  7946  0004FA  D731               	goto	L10
  7947  0004FC                     i2l3318:
  7948                           
  7949                           ; BSR set to: 0
  7950  0004FC  0100               	movlb	0	; () banked
  7951  0004FE  EE20 F00C          	lfsr	2,12
  7952  000502  0100               	movlb	0	; () banked
  7953  000504  51CB               	movf	_ic_ptr& (0+255),w,b
  7954  000506  26D9               	addwf	fsr2l,f,c
  7955  000508  0100               	movlb	0	; () banked
  7956  00050A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7957  00050C  22DA               	addwfc	fsr2h,f,c
  7958  00050E  50DF               	movf	indf2,w,c
  7959                           
  7960                           ; Switch size 1, requested type "space"
  7961                           ; Number of cases is 4, Range of values is 5 to 8
  7962                           ; switch strategies available:
  7963                           ; Name         Instructions Cycles
  7964                           ; simple_byte           13     7 (average)
  7965                           ;	Chosen strategy is simple_byte
  7966  000510  0A05               	xorlw	5	; case 5
  7967  000512  B4D8               	btfsc	status,2,c
  7968  000514  D63C               	goto	i2l279
  7969  000516  0A03               	xorlw	3	; case 6
  7970  000518  B4D8               	btfsc	status,2,c
  7971  00051A  D65B               	goto	i2l283
  7972  00051C  0A01               	xorlw	1	; case 7
  7973  00051E  B4D8               	btfsc	status,2,c
  7974  000520  D720               	goto	i2l297
  7975  000522  0A0F               	xorlw	15	; case 8
  7976  000524  B4D8               	btfsc	status,2,c
  7977  000526  D6D1               	goto	i2l3268
  7978  000528                     i2l277:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;my_i2c.c: 230: }
  7982                           ;my_i2c.c: 233: if (data_read || data_written) {
  7983  000528  0100               	movlb	0	; () banked
  7984  00052A  0100               	movlb	0	; () banked
  7985  00052C  67A4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7986  00052E  D005               	goto	i2l311
  7987                           
  7988                           ; BSR set to: 0
  7989  000530  0100               	movlb	0	; () banked
  7990  000532  0100               	movlb	0	; () banked
  7991  000534  519F               	movf	i2c_int_handler@data_written& (0+255),w,b
  7992  000536  B4D8               	btfsc	status,2,c
  7993  000538  D002               	goto	i2l3324
  7994  00053A                     i2l311:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7998  00053A  A8C6               	btfss	4038,4,c	;volatile
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8002  00053C  88C6               	bsf	4038,4,c	;volatile
  8003  00053E                     i2l3324:
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;my_i2c.c: 237: }
  8007                           ;my_i2c.c: 238: }
  8008                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8009  00053E  0100               	movlb	0	; () banked
  8010  000540  EE20 F00A          	lfsr	2,10
  8011  000544  0100               	movlb	0	; () banked
  8012  000546  51CB               	movf	_ic_ptr& (0+255),w,b
  8013  000548  26D9               	addwf	fsr2l,f,c
  8014  00054A  0100               	movlb	0	; () banked
  8015  00054C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8016  00054E  22DA               	addwfc	fsr2h,f,c
  8017  000550  0E08               	movlw	8
  8018  000552  64DF               	cpfsgt	indf2,c
  8019  000554  D024               	goto	i2l3330
  8020                           
  8021                           ; BSR set to: 0
  8022  000556  0100               	movlb	0	; () banked
  8023  000558  0100               	movlb	0	; () banked
  8024  00055A  67A3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8025  00055C  D020               	goto	i2l3330
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8029  00055E  0100               	movlb	0	; () banked
  8030  000560  EE20 F00C          	lfsr	2,12
  8031  000564  0100               	movlb	0	; () banked
  8032  000566  51CB               	movf	_ic_ptr& (0+255),w,b
  8033  000568  26D9               	addwf	fsr2l,f,c
  8034  00056A  0100               	movlb	0	; () banked
  8035  00056C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8036  00056E  22DA               	addwfc	fsr2h,f,c
  8037  000570  0E05               	movlw	5
  8038  000572  6EDF               	movwf	indf2,c
  8039                           
  8040                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8041  000574  0100               	movlb	0	; () banked
  8042  000576  EE20 F00E          	lfsr	2,14
  8043  00057A  0100               	movlb	0	; () banked
  8044  00057C  51CB               	movf	_ic_ptr& (0+255),w,b
  8045  00057E  26D9               	addwf	fsr2l,f,c
  8046  000580  0100               	movlb	0	; () banked
  8047  000582  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8048  000584  22DA               	addwfc	fsr2h,f,c
  8049  000586  2ADF               	incf	indf2,f,c
  8050                           
  8051                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8052  000588  0100               	movlb	0	; () banked
  8053  00058A  EE20 F00D          	lfsr	2,13
  8054  00058E  0100               	movlb	0	; () banked
  8055  000590  51CB               	movf	_ic_ptr& (0+255),w,b
  8056  000592  26D9               	addwf	fsr2l,f,c
  8057  000594  0100               	movlb	0	; () banked
  8058  000596  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8059  000598  22DA               	addwfc	fsr2h,f,c
  8060  00059A  0E07               	movlw	7
  8061  00059C  6EDF               	movwf	indf2,c
  8062  00059E                     i2l3330:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;my_i2c.c: 245: }
  8066                           ;my_i2c.c: 247: if (msg_ready) {
  8067  00059E  0100               	movlb	0	; () banked
  8068  0005A0  0100               	movlb	0	; () banked
  8069  0005A2  51A3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8070  0005A4  B4D8               	btfsc	status,2,c
  8071  0005A6  D048               	goto	i2l3338
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8075  0005A8  0100               	movlb	0	; () banked
  8076  0005AA  EE20 F00B          	lfsr	2,11
  8077  0005AE  0100               	movlb	0	; () banked
  8078  0005B0  51CB               	movf	_ic_ptr& (0+255),w,b
  8079  0005B2  26D9               	addwf	fsr2l,f,c
  8080  0005B4  0100               	movlb	0	; () banked
  8081  0005B6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8082  0005B8  22DA               	addwfc	fsr2h,f,c
  8083  0005BA  0100               	movlb	0	; () banked
  8084  0005BC  EE10 F00A          	lfsr	1,10
  8085  0005C0  0100               	movlb	0	; () banked
  8086  0005C2  51CB               	movf	_ic_ptr& (0+255),w,b
  8087  0005C4  26E1               	addwf	fsr1l,f,c
  8088  0005C6  0100               	movlb	0	; () banked
  8089  0005C8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8090  0005CA  22E2               	addwfc	fsr1h,f,c
  8091  0005CC  50E7               	movf	indf1,w,c
  8092  0005CE  0100               	movlb	0	; () banked
  8093  0005D0  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8094  0005D2  0100               	movlb	0	; () banked
  8095  0005D4  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8096  0005D6  0D01               	mullw	1
  8097  0005D8  50F3               	movf	prodl,w,c
  8098  0005DA  0100               	movlb	0	; () banked
  8099  0005DC  0100               	movlb	0	; () banked
  8100  0005DE  25CB               	addwf	_ic_ptr& (0+255),w,b
  8101  0005E0  6EE1               	movwf	fsr1l,c
  8102  0005E2  50F4               	movf	prodh,w,c
  8103  0005E4  0100               	movlb	0	; () banked
  8104  0005E6  0100               	movlb	0	; () banked
  8105  0005E8  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8106  0005EA  6EE2               	movwf	fsr1h,c
  8107  0005EC  CFDF FFE7          	movff	indf2,indf1
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8111  0005F0  0100               	movlb	0	; () banked
  8112  0005F2  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8113  0005F4  0E28               	movlw	40
  8114  0005F6  0100               	movlb	0	; () banked
  8115  0005F8  0100               	movlb	0	; () banked
  8116  0005FA  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8117  0005FC  0100               	movlb	0	; () banked
  8118  0005FE  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8119  000600  0100               	movlb	0	; () banked
  8120  000602  0100               	movlb	0	; () banked
  8121  000604  C0CC  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8122  000608  0100               	movlb	0	; () banked
  8123  00060A  0100               	movlb	0	; () banked
  8124  00060C  C0CB  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8125  000610  0100               	movlb	0	; () banked
  8126  000612  EE20 F00A          	lfsr	2,10
  8127  000616  0100               	movlb	0	; () banked
  8128  000618  51CB               	movf	_ic_ptr& (0+255),w,b
  8129  00061A  26D9               	addwf	fsr2l,f,c
  8130  00061C  0100               	movlb	0	; () banked
  8131  00061E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8132  000620  22DA               	addwfc	fsr2h,f,c
  8133  000622  50DF               	movf	indf2,w,c
  8134  000624  0100               	movlb	0	; () banked
  8135  000626  6F9B               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8136  000628  0100               	movlb	0	; () banked
  8137  00062A  299B               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8138  00062C  ECD6  F00E         	call	_ToMainHigh_sendmsg
  8139                           
  8140                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8141  000630  0100               	movlb	0	; () banked
  8142  000632  EE20 F00A          	lfsr	2,10
  8143  000636  D04B               	goto	L12
  8144  000638                     i2l3338:
  8145                           
  8146                           ; BSR set to: 0
  8147  000638  0100               	movlb	0	; () banked
  8148  00063A  EE20 F00E          	lfsr	2,14
  8149  00063E  0100               	movlb	0	; () banked
  8150  000640  51CB               	movf	_ic_ptr& (0+255),w,b
  8151  000642  26D9               	addwf	fsr2l,f,c
  8152  000644  0100               	movlb	0	; () banked
  8153  000646  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8154  000648  22DA               	addwfc	fsr2h,f,c
  8155  00064A  50DF               	movf	indf2,w,c
  8156  00064C  B4D8               	btfsc	status,2,c
  8157  00064E  D047               	goto	i2l3346
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8161  000650  0100               	movlb	0	; () banked
  8162  000652  EE20 F00E          	lfsr	2,14
  8163  000656  0100               	movlb	0	; () banked
  8164  000658  51CB               	movf	_ic_ptr& (0+255),w,b
  8165  00065A  26D9               	addwf	fsr2l,f,c
  8166  00065C  0100               	movlb	0	; () banked
  8167  00065E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8168  000660  22DA               	addwfc	fsr2h,f,c
  8169  000662  50DF               	movf	indf2,w,c
  8170  000664  0100               	movlb	0	; () banked
  8171  000666  0100               	movlb	0	; () banked
  8172  000668  6F9C               	movwf	i2c_int_handler@error_buf& (0+255),b
  8173                           
  8174                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8175  00066A  0100               	movlb	0	; () banked
  8176  00066C  EE20 F00D          	lfsr	2,13
  8177  000670  0100               	movlb	0	; () banked
  8178  000672  51CB               	movf	_ic_ptr& (0+255),w,b
  8179  000674  26D9               	addwf	fsr2l,f,c
  8180  000676  0100               	movlb	0	; () banked
  8181  000678  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8182  00067A  22DA               	addwfc	fsr2h,f,c
  8183  00067C  50DF               	movf	indf2,w,c
  8184  00067E  0100               	movlb	0	; () banked
  8185  000680  0100               	movlb	0	; () banked
  8186  000682  6F9D               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8187                           
  8188                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8189  000684  0100               	movlb	0	; () banked
  8190  000686  EE20 F00B          	lfsr	2,11
  8191  00068A  0100               	movlb	0	; () banked
  8192  00068C  51CB               	movf	_ic_ptr& (0+255),w,b
  8193  00068E  26D9               	addwf	fsr2l,f,c
  8194  000690  0100               	movlb	0	; () banked
  8195  000692  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8196  000694  22DA               	addwfc	fsr2h,f,c
  8197  000696  50DF               	movf	indf2,w,c
  8198  000698  0100               	movlb	0	; () banked
  8199  00069A  0100               	movlb	0	; () banked
  8200  00069C  6F9E               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8204  00069E  0100               	movlb	0	; () banked
  8205  0006A0  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8206  0006A2  0E29               	movlw	41
  8207  0006A4  0100               	movlb	0	; () banked
  8208  0006A6  0100               	movlb	0	; () banked
  8209  0006A8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8210  0006AA  0100               	movlb	0	; () banked
  8211  0006AC  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8212  0006AE  0100               	movlb	0	; () banked
  8213  0006B0  0E00               	movlw	high i2c_int_handler@error_buf
  8214  0006B2  0100               	movlb	0	; () banked
  8215  0006B4  0100               	movlb	0	; () banked
  8216  0006B6  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8217  0006B8  0100               	movlb	0	; () banked
  8218  0006BA  0E9C               	movlw	low i2c_int_handler@error_buf
  8219  0006BC  0100               	movlb	0	; () banked
  8220  0006BE  0100               	movlb	0	; () banked
  8221  0006C0  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8222  0006C2  0E03               	movlw	3
  8223  0006C4  ECD6  F00E         	call	_ToMainHigh_sendmsg
  8224                           
  8225                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8226  0006C8  0100               	movlb	0	; () banked
  8227  0006CA  EE20 F00E          	lfsr	2,14
  8228  0006CE                     L12:
  8229  0006CE  0100               	movlb	0	; () banked
  8230  0006D0  51CB               	movf	_ic_ptr& (0+255),w,b
  8231  0006D2  26D9               	addwf	fsr2l,f,c
  8232  0006D4  0100               	movlb	0	; () banked
  8233  0006D6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8234  0006D8  22DA               	addwfc	fsr2h,f,c
  8235  0006DA  0E00               	movlw	0
  8236  0006DC  6EDF               	movwf	indf2,c
  8237  0006DE                     i2l3346:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;my_i2c.c: 257: }
  8241                           ;my_i2c.c: 258: if (msg_to_send) {
  8242  0006DE  0100               	movlb	0	; () banked
  8243  0006E0  0100               	movlb	0	; () banked
  8244  0006E2  51A2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8245  0006E4  B4D8               	btfsc	status,2,c
  8246  0006E6  0012               	return	
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8250  0006E8  0100               	movlb	0	; () banked
  8251  0006EA  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8252  0006EC  0E2A               	movlw	42
  8253  0006EE  0100               	movlb	0	; () banked
  8254  0006F0  0100               	movlb	0	; () banked
  8255  0006F2  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8256  0006F4  0100               	movlb	0	; () banked
  8257  0006F6  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8258  0006F8  0100               	movlb	0	; () banked
  8259  0006FA  0100               	movlb	0	; () banked
  8260  0006FC  C0CC  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8261  000700  0100               	movlb	0	; () banked
  8262  000702  0100               	movlb	0	; () banked
  8263  000704  C0CB  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8264  000708  0E00               	movlw	0
  8265  00070A  ECD6  F00E         	call	_ToMainHigh_sendmsg
  8266                           
  8267                           ;my_i2c.c: 261: msg_to_send = 0;
  8268  00070E  0100               	movlb	0	; () banked
  8269  000710  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8270  000712  0E00               	movlw	0
  8271  000714  0100               	movlb	0	; () banked
  8272  000716  0100               	movlb	0	; () banked
  8273  000718  6FA2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8274  00071A  0100               	movlb	0	; () banked
  8275  00071C  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8276  00071E  0012               	return	
  8277  000720                     __end_of_i2c_int_handler:
  8278                           	opt stack 0
  8279                           pclatu	equ	0xFFB
  8280                           pclath	equ	0xFFA
  8281                           tblptru	equ	0xFF8
  8282                           tblptrh	equ	0xFF7
  8283                           tblptrl	equ	0xFF6
  8284                           tablat	equ	0xFF5
  8285                           prodh	equ	0xFF4
  8286                           prodl	equ	0xFF3
  8287                           intcon	equ	0xFF2
  8288                           postinc0	equ	0xFEE
  8289                           fsr0h	equ	0xFEA
  8290                           fsr0l	equ	0xFE9
  8291                           wreg	equ	0xFE8
  8292                           indf1	equ	0xFE7
  8293                           fsr1h	equ	0xFE2
  8294                           fsr1l	equ	0xFE1
  8295                           bsr	equ	0xFE0
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           postdec2	equ	0xFDD
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function _handle_start *****************
  8304 ;; Defined at:
  8305 ;;		line 71 in file "src/my_i2c.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  data_read       1    wreg     unsigned char 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  data_read       1    0[BANK0 ] unsigned char 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;		None               void
  8312 ;; Registers used:
  8313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8319 ;;      Params:         0       0       0       0       0
  8320 ;;      Locals:         0       1       0       0       0
  8321 ;;      Temps:          0       0       0       0       0
  8322 ;;      Totals:         0       1       0       0       0
  8323 ;;Total ram usage:        1 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; This function calls:
  8326 ;;		Nothing
  8327 ;; This function is called by:
  8328 ;;		_i2c_int_handler
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text48
  8333  00130A                     __ptext48:
  8334                           	opt stack 0
  8335  00130A                     _handle_start:
  8336                           	opt stack 19
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;incstack = 0
  8340                           ;handle_start@data_read stored from wreg
  8341  00130A  CFE8 F080          	movff	wreg,handle_start@data_read
  8342                           
  8343                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8344  00130E  0100               	movlb	0	; () banked
  8345  001310  EE20 F00B          	lfsr	2,11
  8346  001314  0100               	movlb	0	; () banked
  8347  001316  51CB               	movf	_ic_ptr& (0+255),w,b
  8348  001318  26D9               	addwf	fsr2l,f,c
  8349  00131A  0100               	movlb	0	; () banked
  8350  00131C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8351  00131E  22DA               	addwfc	fsr2h,f,c
  8352  001320  0E01               	movlw	1
  8353  001322  6EDF               	movwf	indf2,c
  8354                           
  8355                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8356  001324  0100               	movlb	0	; () banked
  8357  001326  EE20 F00A          	lfsr	2,10
  8358  00132A  0100               	movlb	0	; () banked
  8359  00132C  51CB               	movf	_ic_ptr& (0+255),w,b
  8360  00132E  26D9               	addwf	fsr2l,f,c
  8361  001330  0100               	movlb	0	; () banked
  8362  001332  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8363  001334  22DA               	addwfc	fsr2h,f,c
  8364  001336  0E00               	movlw	0
  8365  001338  6EDF               	movwf	indf2,c
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;my_i2c.c: 75: if (data_read) {
  8369  00133A  0100               	movlb	0	; () banked
  8370  00133C  0100               	movlb	0	; () banked
  8371  00133E  5180               	movf	handle_start@data_read& (0+255),w,b
  8372  001340  B4D8               	btfsc	status,2,c
  8373  001342  D03D               	goto	i2l3622
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8377  001344  AAC7               	btfss	4039,5,c	;volatile
  8378  001346  D021               	goto	i2l267
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8382  001348  0100               	movlb	0	; () banked
  8383  00134A  EE20 F00C          	lfsr	2,12
  8384  00134E  0100               	movlb	0	; () banked
  8385  001350  51CB               	movf	_ic_ptr& (0+255),w,b
  8386  001352  26D9               	addwf	fsr2l,f,c
  8387  001354  0100               	movlb	0	; () banked
  8388  001356  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8389  001358  22DA               	addwfc	fsr2h,f,c
  8390  00135A  0E05               	movlw	5
  8391  00135C  6EDF               	movwf	indf2,c
  8392                           
  8393                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8394  00135E  0100               	movlb	0	; () banked
  8395  001360  EE20 F00E          	lfsr	2,14
  8396  001364  0100               	movlb	0	; () banked
  8397  001366  51CB               	movf	_ic_ptr& (0+255),w,b
  8398  001368  26D9               	addwf	fsr2l,f,c
  8399  00136A  0100               	movlb	0	; () banked
  8400  00136C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8401  00136E  22DA               	addwfc	fsr2h,f,c
  8402  001370  2ADF               	incf	indf2,f,c
  8403                           
  8404                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8405  001372  0100               	movlb	0	; () banked
  8406  001374  EE20 F00D          	lfsr	2,13
  8407  001378  0100               	movlb	0	; () banked
  8408  00137A  51CB               	movf	_ic_ptr& (0+255),w,b
  8409  00137C  26D9               	addwf	fsr2l,f,c
  8410  00137E  0100               	movlb	0	; () banked
  8411  001380  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8412  001382  22DA               	addwfc	fsr2h,f,c
  8413  001384  0E05               	movlw	5
  8414  001386  6EDF               	movwf	indf2,c
  8415                           
  8416                           ;my_i2c.c: 82: } else {
  8417  001388  0012               	return	
  8418  00138A                     i2l267:
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8422  00138A  A4C7               	btfss	4039,2,c	;volatile
  8423  00138C  D00C               	goto	i2l3620
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8427  00138E  0100               	movlb	0	; () banked
  8428  001390  EE20 F00C          	lfsr	2,12
  8429  001394  0100               	movlb	0	; () banked
  8430  001396  51CB               	movf	_ic_ptr& (0+255),w,b
  8431  001398  26D9               	addwf	fsr2l,f,c
  8432  00139A  0100               	movlb	0	; () banked
  8433  00139C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8434  00139E  22DA               	addwfc	fsr2h,f,c
  8435  0013A0  0E08               	movlw	8
  8436  0013A2  6EDF               	movwf	indf2,c
  8437                           
  8438                           ;my_i2c.c: 85: } else {
  8439  0013A4  0012               	return	
  8440  0013A6                     i2l3620:
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8444  0013A6  0100               	movlb	0	; () banked
  8445  0013A8  EE20 F00C          	lfsr	2,12
  8446  0013AC  0100               	movlb	0	; () banked
  8447  0013AE  51CB               	movf	_ic_ptr& (0+255),w,b
  8448  0013B0  26D9               	addwf	fsr2l,f,c
  8449  0013B2  0100               	movlb	0	; () banked
  8450  0013B4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8451  0013B6  22DA               	addwfc	fsr2h,f,c
  8452  0013B8  0E07               	movlw	7
  8453  0013BA  6EDF               	movwf	indf2,c
  8454  0013BC  0012               	return	
  8455  0013BE                     i2l3622:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8459  0013BE  0100               	movlb	0	; () banked
  8460  0013C0  EE20 F00C          	lfsr	2,12
  8461  0013C4  0100               	movlb	0	; () banked
  8462  0013C6  51CB               	movf	_ic_ptr& (0+255),w,b
  8463  0013C8  26D9               	addwf	fsr2l,f,c
  8464  0013CA  0100               	movlb	0	; () banked
  8465  0013CC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8466  0013CE  22DA               	addwfc	fsr2h,f,c
  8467  0013D0  0E06               	movlw	6
  8468  0013D2  6EDF               	movwf	indf2,c
  8469  0013D4  0012               	return	
  8470  0013D6                     __end_of_handle_start:
  8471                           	opt stack 0
  8472                           pclatu	equ	0xFFB
  8473                           pclath	equ	0xFFA
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           postinc0	equ	0xFEE
  8482                           fsr0h	equ	0xFEA
  8483                           fsr0l	equ	0xFE9
  8484                           wreg	equ	0xFE8
  8485                           indf1	equ	0xFE7
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           bsr	equ	0xFE0
  8489                           indf2	equ	0xFDF
  8490                           postinc2	equ	0xFDE
  8491                           postdec2	equ	0xFDD
  8492                           fsr2h	equ	0xFDA
  8493                           fsr2l	equ	0xFD9
  8494                           status	equ	0xFD8
  8495                           
  8496 ;; *************** function _ToMainHigh_sendmsg *****************
  8497 ;; Defined at:
  8498 ;;		line 126 in file "src/messages.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  length          1    wreg     unsigned char 
  8501 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8502 ;;  data            2   23[BANK0 ] PTR void 
  8503 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  length          1   25[BANK0 ] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      char 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8515 ;;      Params:         0       3       0       0       0
  8516 ;;      Locals:         0       1       0       0       0
  8517 ;;      Temps:          0       0       0       0       0
  8518 ;;      Totals:         0       4       0       0       0
  8519 ;;Total ram usage:        4 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    2
  8522 ;; This function calls:
  8523 ;;		i2_send_msg
  8524 ;; This function is called by:
  8525 ;;		_i2c_int_handler
  8526 ;;		_timer0_int_handler
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text49
  8531  001DAC                     __ptext49:
  8532                           	opt stack 0
  8533  001DAC                     _ToMainHigh_sendmsg:
  8534                           	opt stack 17
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;incstack = 0
  8538                           ;ToMainHigh_sendmsg@length stored from wreg
  8539  001DAC  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  8540                           
  8541                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8542                           ;	Return value of _ToMainHigh_sendmsg is never used
  8543  001DB0  0101               	movlb	1	; () banked
  8544  001DB2  0E01               	movlw	high _ToMainHigh_MQ
  8545  001DB4  0100               	movlb	0	; () banked
  8546  001DB6  0100               	movlb	0	; () banked
  8547  001DB8  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8548  001DBA  0101               	movlb	1	; () banked
  8549  001DBC  0EC8               	movlw	low _ToMainHigh_MQ
  8550  001DBE  0100               	movlb	0	; () banked
  8551  001DC0  0100               	movlb	0	; () banked
  8552  001DC2  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8553  001DC4  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8554  001DC8  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8555  001DCC  0100               	movlb	0	; () banked
  8556  001DCE  0100               	movlb	0	; () banked
  8557  001DD0  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8558  001DD4  0100               	movlb	0	; () banked
  8559  001DD6  0100               	movlb	0	; () banked
  8560  001DD8  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8561  001DDC  EC2E  F008         	call	i2_send_msg	;wreg free
  8562  001DE0  0012               	return	
  8563  001DE2                     __end_of_ToMainHigh_sendmsg:
  8564                           	opt stack 0
  8565                           pclatu	equ	0xFFB
  8566                           pclath	equ	0xFFA
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           intcon	equ	0xFF2
  8574                           postinc0	equ	0xFEE
  8575                           fsr0h	equ	0xFEA
  8576                           fsr0l	equ	0xFE9
  8577                           wreg	equ	0xFE8
  8578                           indf1	equ	0xFE7
  8579                           fsr1h	equ	0xFE2
  8580                           fsr1l	equ	0xFE1
  8581                           bsr	equ	0xFE0
  8582                           indf2	equ	0xFDF
  8583                           postinc2	equ	0xFDE
  8584                           postdec2	equ	0xFDD
  8585                           fsr2h	equ	0xFDA
  8586                           fsr2l	equ	0xFD9
  8587                           status	equ	0xFD8
  8588                           
  8589 ;; *************** function i2_send_msg *****************
  8590 ;; Defined at:
  8591 ;;		line 24 in file "src/messages.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8594 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8595 ;;  length          1   12[BANK0 ] unsigned char 
  8596 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8597 ;;  data            2   14[BANK0 ] PTR void 
  8598 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@msgbuffer(11), 
  8599 ;;		 -> main@ic(28), main@uc(5), 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8602 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8603 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8604 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8605 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      char 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8615 ;;      Params:         0       6       0       0       0
  8616 ;;      Locals:         0       5       0       0       0
  8617 ;;      Temps:          0       1       0       0       0
  8618 ;;      Totals:         0      12       0       0       0
  8619 ;;Total ram usage:       12 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:    1
  8622 ;; This function calls:
  8623 ;;		i2_memcpy
  8624 ;; This function is called by:
  8625 ;;		_ToMainHigh_sendmsg
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text50
  8630  00105C                     __ptext50:
  8631                           	opt stack 0
  8632  00105C                     i2_send_msg:
  8633                           	opt stack 17
  8634                           
  8635                           ;messages.c: 25: unsigned char slot;
  8636                           ;messages.c: 27: msg *qmsg;
  8637                           ;messages.c: 28: size_t tlength = length;
  8638                           
  8639                           ;incstack = 0
  8640  00105C  0100               	movlb	0	; () banked
  8641  00105E  0100               	movlb	0	; () banked
  8642  001060  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8643  001064  0100               	movlb	0	; () banked
  8644  001066  0100               	movlb	0	; () banked
  8645  001068  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8649  00106A  0100               	movlb	0	; () banked
  8650  00106C  EE20 F034          	lfsr	2,52
  8651  001070  0100               	movlb	0	; () banked
  8652  001072  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8653  001074  26D9               	addwf	fsr2l,f,c
  8654  001076  0100               	movlb	0	; () banked
  8655  001078  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8656  00107A  22DA               	addwfc	fsr2h,f,c
  8657  00107C  50DF               	movf	indf2,w,c
  8658  00107E  0100               	movlb	0	; () banked
  8659  001080  0100               	movlb	0	; () banked
  8660  001082  6F93               	movwf	i2send_msg@slot& (0+255),b
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8664  001084  0100               	movlb	0	; () banked
  8665  001086  0100               	movlb	0	; () banked
  8666  001088  5193               	movf	i2send_msg@slot& (0+255),w,b
  8667  00108A  0D0D               	mullw	13
  8668  00108C  50F3               	movf	prodl,w,c
  8669  00108E  0100               	movlb	0	; () banked
  8670  001090  0100               	movlb	0	; () banked
  8671  001092  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8672  001094  0100               	movlb	0	; () banked
  8673  001096  0100               	movlb	0	; () banked
  8674  001098  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8675  00109A  50F4               	movf	prodh,w,c
  8676  00109C  0100               	movlb	0	; () banked
  8677  00109E  0100               	movlb	0	; () banked
  8678  0010A0  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8679  0010A2  0100               	movlb	0	; () banked
  8680  0010A4  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;messages.c: 41: if (qmsg->full != 0) {
  8684  0010A6  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8685  0010AA  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8686  0010AE  50DF               	movf	indf2,w,c
  8687  0010B0  B4D8               	btfsc	status,2,c
  8688  0010B2  D002               	goto	i2l3680
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;messages.c: 42: return (-1);
  8692  0010B4  0EFF               	movlw	255
  8693  0010B6  0012               	return	
  8694  0010B8                     i2l3680:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;messages.c: 43: }
  8698                           ;messages.c: 46: qmsg->length = length;
  8699  0010B8  0100               	movlb	0	; () banked
  8700  0010BA  EE20 F001          	lfsr	2,1
  8701  0010BE  0100               	movlb	0	; () banked
  8702  0010C0  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8703  0010C2  26D9               	addwf	fsr2l,f,c
  8704  0010C4  0100               	movlb	0	; () banked
  8705  0010C6  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8706  0010C8  22DA               	addwfc	fsr2h,f,c
  8707  0010CA  0100               	movlb	0	; () banked
  8708  0010CC  C08C  FFDF         	movff	i2send_msg@length,indf2
  8709                           
  8710                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8711  0010D0  0100               	movlb	0	; () banked
  8712  0010D2  EE20 F002          	lfsr	2,2
  8713  0010D6  0100               	movlb	0	; () banked
  8714  0010D8  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8715  0010DA  26D9               	addwf	fsr2l,f,c
  8716  0010DC  0100               	movlb	0	; () banked
  8717  0010DE  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8718  0010E0  22DA               	addwfc	fsr2h,f,c
  8719  0010E2  0100               	movlb	0	; () banked
  8720  0010E4  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8724  0010E8  0E03               	movlw	3
  8725  0010EA  0100               	movlb	0	; () banked
  8726  0010EC  0100               	movlb	0	; () banked
  8727  0010EE  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8728  0010F0  0100               	movlb	0	; () banked
  8729  0010F2  0100               	movlb	0	; () banked
  8730  0010F4  6F80               	movwf	i2memcpy@d1& (0+255),b
  8731  0010F6  0E00               	movlw	0
  8732  0010F8  0100               	movlb	0	; () banked
  8733  0010FA  0100               	movlb	0	; () banked
  8734  0010FC  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8735  0010FE  0100               	movlb	0	; () banked
  8736  001100  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8737  001102  0100               	movlb	0	; () banked
  8738  001104  0100               	movlb	0	; () banked
  8739  001106  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8740  00110A  0100               	movlb	0	; () banked
  8741  00110C  0100               	movlb	0	; () banked
  8742  00110E  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8743  001112  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8744  001116  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8745  00111A  EC42  F00D         	call	i2_memcpy	;wreg free
  8746                           
  8747                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8748  00111E  0100               	movlb	0	; () banked
  8749  001120  EE20 F034          	lfsr	2,52
  8750  001124  0100               	movlb	0	; () banked
  8751  001126  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8752  001128  26D9               	addwf	fsr2l,f,c
  8753  00112A  0100               	movlb	0	; () banked
  8754  00112C  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8755  00112E  22DA               	addwfc	fsr2h,f,c
  8756  001130  0100               	movlb	0	; () banked
  8757  001132  EE10 F034          	lfsr	1,52
  8758  001136  0100               	movlb	0	; () banked
  8759  001138  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8760  00113A  26E1               	addwf	fsr1l,f,c
  8761  00113C  0100               	movlb	0	; () banked
  8762  00113E  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8763  001140  22E2               	addwfc	fsr1h,f,c
  8764  001142  50E7               	movf	indf1,w,c
  8765  001144  0100               	movlb	0	; () banked
  8766  001146  6F90               	movwf	??i2_send_msg& (0+255),b
  8767  001148  0100               	movlb	0	; () banked
  8768  00114A  2990               	incf	??i2_send_msg& (0+255),w,b
  8769  00114C  0B03               	andlw	3
  8770  00114E  6EDF               	movwf	indf2,c
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;messages.c: 59: qmsg->full = 1;
  8774  001150  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8775  001154  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8776  001158  0E01               	movlw	1
  8777  00115A  6EDF               	movwf	indf2,c
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;messages.c: 60: return (1);
  8781  00115C  0E01               	movlw	1
  8782  00115E  0012               	return	
  8783  001160                     __end_ofi2_send_msg:
  8784                           	opt stack 0
  8785                           pclatu	equ	0xFFB
  8786                           pclath	equ	0xFFA
  8787                           tblptru	equ	0xFF8
  8788                           tblptrh	equ	0xFF7
  8789                           tblptrl	equ	0xFF6
  8790                           tablat	equ	0xFF5
  8791                           prodh	equ	0xFF4
  8792                           prodl	equ	0xFF3
  8793                           intcon	equ	0xFF2
  8794                           postinc0	equ	0xFEE
  8795                           fsr0h	equ	0xFEA
  8796                           fsr0l	equ	0xFE9
  8797                           wreg	equ	0xFE8
  8798                           indf1	equ	0xFE7
  8799                           fsr1h	equ	0xFE2
  8800                           fsr1l	equ	0xFE1
  8801                           bsr	equ	0xFE0
  8802                           indf2	equ	0xFDF
  8803                           postinc2	equ	0xFDE
  8804                           postdec2	equ	0xFDD
  8805                           fsr2h	equ	0xFDA
  8806                           fsr2l	equ	0xFD9
  8807                           status	equ	0xFD8
  8808                           
  8809 ;; *************** function i2_memcpy *****************
  8810 ;; Defined at:
  8811 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  d1              2    0[BANK0 ] PTR void 
  8814 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8815 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8816 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8817 ;;  s1              2    2[BANK0 ] PTR const void 
  8818 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8819 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8820 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8821 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8822 ;;		 -> main@ic(28), main@uc(5), 
  8823 ;;  n               2    4[BANK0 ] unsigned int 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8826 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8827 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8828 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8829 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8830 ;;		 -> main@ic(28), main@uc(5), 
  8831 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8832 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8833 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8834 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  2    0[BANK0 ] PTR void 
  8837 ;; Registers used:
  8838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8844 ;;      Params:         0       6       0       0       0
  8845 ;;      Locals:         0       4       0       0       0
  8846 ;;      Temps:          0       0       0       0       0
  8847 ;;      Totals:         0      10       0       0       0
  8848 ;;Total ram usage:       10 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		i2_send_msg
  8854 ;;		i2_recv_msg
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text51
  8859  001A84                     __ptext51:
  8860                           	opt stack 0
  8861  001A84                     i2_memcpy:
  8862                           	opt stack 17
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;incstack = 0
  8866  001A84  0100               	movlb	0	; () banked
  8867  001A86  0100               	movlb	0	; () banked
  8868  001A88  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8869  001A8C  0100               	movlb	0	; () banked
  8870  001A8E  0100               	movlb	0	; () banked
  8871  001A90  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  8872  001A94  0100               	movlb	0	; () banked
  8873  001A96  0100               	movlb	0	; () banked
  8874  001A98  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8875  001A9C  0100               	movlb	0	; () banked
  8876  001A9E  0100               	movlb	0	; () banked
  8877  001AA0  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  8878  001AA4  D012               	goto	i2l3736
  8879  001AA6                     i2l3730:
  8880                           
  8881                           ; BSR set to: 0
  8882  001AA6  C088  FFD9         	movff	i2memcpy@s,fsr2l
  8883  001AAA  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  8884  001AAE  C086  FFE1         	movff	i2memcpy@d,fsr1l
  8885  001AB2  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  8886  001AB6  CFDF FFE7          	movff	indf2,indf1
  8887                           
  8888                           ; BSR set to: 0
  8889  001ABA  0100               	movlb	0	; () banked
  8890  001ABC  0100               	movlb	0	; () banked
  8891  001ABE  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  8892  001AC0  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  8893                           
  8894                           ; BSR set to: 0
  8895  001AC2  0100               	movlb	0	; () banked
  8896  001AC4  0100               	movlb	0	; () banked
  8897  001AC6  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  8898  001AC8  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  8899  001ACA                     i2l3736:
  8900                           
  8901                           ; BSR set to: 0
  8902  001ACA  0100               	movlb	0	; () banked
  8903  001ACC  0100               	movlb	0	; () banked
  8904  001ACE  0784               	decf	i2memcpy@n& (0+255),f,b
  8905  001AD0  A0D8               	btfss	status,0,c
  8906  001AD2  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  8907  001AD4  0100               	movlb	0	; () banked
  8908  001AD6  2984               	incf	i2memcpy@n& (0+255),w,b
  8909  001AD8  B4D8               	btfsc	status,2,c
  8910  001ADA  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  8911  001ADC  B4D8               	btfsc	status,2,c
  8912                           
  8913                           ; BSR set to: 0
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;	Return value of i2_memcpy is never used
  8917  001ADE  0012               	return	
  8918  001AE0  D7E2               	goto	i2l3730
  8919  001AE2                     __end_ofi2_memcpy:
  8920                           	opt stack 0
  8921                           pclatu	equ	0xFFB
  8922                           pclath	equ	0xFFA
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           intcon	equ	0xFF2
  8930                           postinc0	equ	0xFEE
  8931                           fsr0h	equ	0xFEA
  8932                           fsr0l	equ	0xFE9
  8933                           wreg	equ	0xFE8
  8934                           indf1	equ	0xFE7
  8935                           fsr1h	equ	0xFE2
  8936                           fsr1l	equ	0xFE1
  8937                           bsr	equ	0xFE0
  8938                           indf2	equ	0xFDF
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           fsr2h	equ	0xFDA
  8942                           fsr2l	equ	0xFD9
  8943                           status	equ	0xFD8
  8944                           
  8945 ;; *************** function _SleepIfOkay *****************
  8946 ;; Defined at:
  8947 ;;		line 228 in file "src/messages.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;		None               void
  8954 ;; Registers used:
  8955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8961 ;;      Params:         0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:    2
  8968 ;; This function calls:
  8969 ;;		_enter_sleep_mode
  8970 ;;		i2_check_msg
  8971 ;;		i2_in_high_int
  8972 ;;		i2_in_low_int
  8973 ;; This function is called by:
  8974 ;;		_InterruptHandlerHigh
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text52
  8979  0019C0                     __ptext52:
  8980                           	opt stack 0
  8981  0019C0                     _SleepIfOkay:
  8982                           	opt stack 18
  8983                           
  8984                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;incstack = 0
  8988  0019C0  663C               	tstfsz	_MQ_Main_Willing_to_block,c
  8989  0019C2  D001               	goto	i2l3364
  8990  0019C4  0012               	return	
  8991  0019C6                     i2l3364:
  8992                           
  8993                           ;messages.c: 232: }
  8994                           ;messages.c: 235: if (in_low_int()) {
  8995  0019C6  ECBE  F00D         	call	i2_in_low_int	;wreg free
  8996  0019CA  0100               	movlb	0	; () banked
  8997  0019CC  0100               	movlb	0	; () banked
  8998  0019CE  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8999  0019D0  0100               	movlb	0	; () banked
  9000  0019D2  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  9001  0019D4  A4D8               	btfss	status,2,c
  9002  0019D6  0012               	return	
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;messages.c: 237: }
  9006                           ;messages.c: 240: if (!in_high_int()) {
  9007                           
  9008                           ; BSR set to: 0
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;messages.c: 236: return;
  9012  0019D8  ECE8  F00F         	call	i2_in_high_int	;wreg free
  9013  0019DC  0100               	movlb	0	; () banked
  9014  0019DE  0100               	movlb	0	; () banked
  9015  0019E0  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9016  0019E2  0100               	movlb	0	; () banked
  9017  0019E4  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  9018  0019E6  B4D8               	btfsc	status,2,c
  9019  0019E8  0012               	return	
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;messages.c: 242: }
  9023                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9024                           
  9025                           ; BSR set to: 0
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;messages.c: 241: return;
  9029  0019EA  0101               	movlb	1	; () banked
  9030  0019EC  0E01               	movlw	high _ToMainHigh_MQ
  9031  0019EE  0100               	movlb	0	; () banked
  9032  0019F0  0100               	movlb	0	; () banked
  9033  0019F2  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9034  0019F4  0101               	movlb	1	; () banked
  9035  0019F6  0EC8               	movlw	low _ToMainHigh_MQ
  9036  0019F8  0100               	movlb	0	; () banked
  9037  0019FA  0100               	movlb	0	; () banked
  9038  0019FC  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9039  0019FE  ECF1  F00E         	call	i2_check_msg	;wreg free
  9040  001A02  0900               	iorlw	0
  9041  001A04  A4D8               	btfss	status,2,c
  9042  001A06  0012               	return	
  9043                           
  9044                           ;messages.c: 249: }
  9045                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9046                           
  9047                           ;messages.c: 248: return;
  9048  001A08  0E00               	movlw	high _ToMainLow_MQ
  9049  001A0A  0100               	movlb	0	; () banked
  9050  001A0C  0100               	movlb	0	; () banked
  9051  001A0E  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9052  001A10  0E3E               	movlw	low _ToMainLow_MQ
  9053  001A12  0100               	movlb	0	; () banked
  9054  001A14  0100               	movlb	0	; () banked
  9055  001A16  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9056  001A18  ECF1  F00E         	call	i2_check_msg	;wreg free
  9057  001A1C  0900               	iorlw	0
  9058  001A1E  B4D8               	btfsc	status,2,c
  9059                           
  9060                           ;messages.c: 252: }
  9061                           ;messages.c: 253: enter_sleep_mode();
  9062                           
  9063                           ;messages.c: 251: return;
  9064  001A20  ECF5  F00F         	call	_enter_sleep_mode	;wreg free
  9065  001A24  0012               	return	
  9066  001A26                     __end_of_SleepIfOkay:
  9067                           	opt stack 0
  9068                           pclatu	equ	0xFFB
  9069                           pclath	equ	0xFFA
  9070                           tblptru	equ	0xFF8
  9071                           tblptrh	equ	0xFF7
  9072                           tblptrl	equ	0xFF6
  9073                           tablat	equ	0xFF5
  9074                           prodh	equ	0xFF4
  9075                           prodl	equ	0xFF3
  9076                           intcon	equ	0xFF2
  9077                           postinc0	equ	0xFEE
  9078                           fsr0h	equ	0xFEA
  9079                           fsr0l	equ	0xFE9
  9080                           wreg	equ	0xFE8
  9081                           indf1	equ	0xFE7
  9082                           fsr1h	equ	0xFE2
  9083                           fsr1l	equ	0xFE1
  9084                           bsr	equ	0xFE0
  9085                           indf2	equ	0xFDF
  9086                           postinc2	equ	0xFDE
  9087                           postdec2	equ	0xFDD
  9088                           fsr2h	equ	0xFDA
  9089                           fsr2l	equ	0xFD9
  9090                           status	equ	0xFD8
  9091                           
  9092 ;; *************** function i2_in_low_int *****************
  9093 ;; Defined at:
  9094 ;;		line 30 in file "src/interrupts.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;		None
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  2    2[BANK0 ] int 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2, status,0, cstack
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9108 ;;      Params:         0       2       0       0       0
  9109 ;;      Locals:         0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0
  9111 ;;      Totals:         0       2       0       0       0
  9112 ;;Total ram usage:        2 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    1
  9115 ;; This function calls:
  9116 ;;		i2_in_high_int
  9117 ;; This function is called by:
  9118 ;;		_SleepIfOkay
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text53
  9123  001B7C                     __ptext53:
  9124                           	opt stack 0
  9125  001B7C                     i2_in_low_int:
  9126                           	opt stack 18
  9127                           
  9128                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9129                           
  9130                           ;incstack = 0
  9131  001B7C  ACF2               	btfss	intcon,6,c	;volatile
  9132  001B7E  D008               	goto	i2l3656
  9133                           
  9134                           ;interrupts.c: 32: return (0);
  9135  001B80  0E00               	movlw	0
  9136  001B82  0100               	movlb	0	; () banked
  9137  001B84  0100               	movlb	0	; () banked
  9138  001B86  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9139  001B88  0E00               	movlw	0
  9140  001B8A  0100               	movlb	0	; () banked
  9141  001B8C  6F82               	movwf	?i2_in_low_int& (0+255),b
  9142  001B8E  0012               	return	
  9143  001B90                     i2l3656:
  9144  001B90  ECE8  F00F         	call	i2_in_high_int	;wreg free
  9145  001B94  0100               	movlb	0	; () banked
  9146  001B96  0100               	movlb	0	; () banked
  9147  001B98  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9148  001B9A  0100               	movlb	0	; () banked
  9149  001B9C  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  9150  001B9E  B4D8               	btfsc	status,2,c
  9151  001BA0  D008               	goto	i2l3664
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;interrupts.c: 34: return (0);
  9155  001BA2  0E00               	movlw	0
  9156  001BA4  0100               	movlb	0	; () banked
  9157  001BA6  0100               	movlb	0	; () banked
  9158  001BA8  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9159  001BAA  0E00               	movlw	0
  9160  001BAC  0100               	movlb	0	; () banked
  9161  001BAE  6F82               	movwf	?i2_in_low_int& (0+255),b
  9162  001BB0  0012               	return	
  9163  001BB2                     i2l3664:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;interrupts.c: 36: return (1);
  9167  001BB2  0E00               	movlw	0
  9168  001BB4  0100               	movlb	0	; () banked
  9169  001BB6  0100               	movlb	0	; () banked
  9170  001BB8  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9171  001BBA  0E01               	movlw	1
  9172  001BBC  0100               	movlb	0	; () banked
  9173  001BBE  6F82               	movwf	?i2_in_low_int& (0+255),b
  9174  001BC0  0012               	return	
  9175  001BC2                     __end_ofi2_in_low_int:
  9176                           	opt stack 0
  9177                           pclatu	equ	0xFFB
  9178                           pclath	equ	0xFFA
  9179                           tblptru	equ	0xFF8
  9180                           tblptrh	equ	0xFF7
  9181                           tblptrl	equ	0xFF6
  9182                           tablat	equ	0xFF5
  9183                           prodh	equ	0xFF4
  9184                           prodl	equ	0xFF3
  9185                           intcon	equ	0xFF2
  9186                           postinc0	equ	0xFEE
  9187                           fsr0h	equ	0xFEA
  9188                           fsr0l	equ	0xFE9
  9189                           wreg	equ	0xFE8
  9190                           indf1	equ	0xFE7
  9191                           fsr1h	equ	0xFE2
  9192                           fsr1l	equ	0xFE1
  9193                           bsr	equ	0xFE0
  9194                           indf2	equ	0xFDF
  9195                           postinc2	equ	0xFDE
  9196                           postdec2	equ	0xFDD
  9197                           fsr2h	equ	0xFDA
  9198                           fsr2l	equ	0xFD9
  9199                           status	equ	0xFD8
  9200                           
  9201 ;; *************** function i2_in_high_int *****************
  9202 ;; Defined at:
  9203 ;;		line 22 in file "src/interrupts.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;		None
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  2    0[BANK0 ] int 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9217 ;;      Params:         0       2       0       0       0
  9218 ;;      Locals:         0       0       0       0       0
  9219 ;;      Temps:          0       0       0       0       0
  9220 ;;      Totals:         0       2       0       0       0
  9221 ;;Total ram usage:        2 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_SleepIfOkay
  9227 ;;		i2_in_low_int
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text54
  9232  001FD0                     __ptext54:
  9233                           	opt stack 0
  9234  001FD0                     i2_in_high_int:
  9235                           	opt stack 18
  9236                           
  9237                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;incstack = 0
  9241  001FD0  0E00               	movlw	0
  9242  001FD2  AEF2               	btfss	intcon,7,c	;volatile
  9243  001FD4  0E01               	movlw	1
  9244  001FD6  0100               	movlb	0	; () banked
  9245  001FD8  0100               	movlb	0	; () banked
  9246  001FDA  6F80               	movwf	?i2_in_high_int& (0+255),b
  9247  001FDC  0100               	movlb	0	; () banked
  9248  001FDE  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
  9249  001FE0  0012               	return	
  9250  001FE2                     __end_ofi2_in_high_int:
  9251                           	opt stack 0
  9252                           pclatu	equ	0xFFB
  9253                           pclath	equ	0xFFA
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           postinc0	equ	0xFEE
  9262                           fsr0h	equ	0xFEA
  9263                           fsr0l	equ	0xFE9
  9264                           wreg	equ	0xFE8
  9265                           indf1	equ	0xFE7
  9266                           fsr1h	equ	0xFE2
  9267                           fsr1l	equ	0xFE1
  9268                           bsr	equ	0xFE0
  9269                           indf2	equ	0xFDF
  9270                           postinc2	equ	0xFDE
  9271                           postdec2	equ	0xFDD
  9272                           fsr2h	equ	0xFDA
  9273                           fsr2l	equ	0xFD9
  9274                           status	equ	0xFD8
  9275                           
  9276 ;; *************** function i2_check_msg *****************
  9277 ;; Defined at:
  9278 ;;		line 222 in file "src/messages.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9281 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      unsigned char 
  9286 ;; Registers used:
  9287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9293 ;;      Params:         0       2       0       0       0
  9294 ;;      Locals:         0       0       0       0       0
  9295 ;;      Temps:          0       1       0       0       0
  9296 ;;      Totals:         0       3       0       0       0
  9297 ;;Total ram usage:        3 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_SleepIfOkay
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text55
  9307  001DE2                     __ptext55:
  9308                           	opt stack 0
  9309  001DE2                     i2_check_msg:
  9310                           	opt stack 19
  9311                           
  9312                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;incstack = 0
  9316  001DE2  0100               	movlb	0	; () banked
  9317  001DE4  EE20 F035          	lfsr	2,53
  9318  001DE8  0100               	movlb	0	; () banked
  9319  001DEA  5180               	movf	i2check_msg@qptr& (0+255),w,b
  9320  001DEC  26D9               	addwf	fsr2l,f,c
  9321  001DEE  0100               	movlb	0	; () banked
  9322  001DF0  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9323  001DF2  22DA               	addwfc	fsr2h,f,c
  9324  001DF4  50DF               	movf	indf2,w,c
  9325  001DF6  0100               	movlb	0	; () banked
  9326  001DF8  6F82               	movwf	??i2_check_msg& (0+255),b
  9327  001DFA  0100               	movlb	0	; () banked
  9328  001DFC  5182               	movf	??i2_check_msg& (0+255),w,b
  9329  001DFE  0D0D               	mullw	13
  9330  001E00  50F3               	movf	prodl,w,c
  9331  001E02  0100               	movlb	0	; () banked
  9332  001E04  0100               	movlb	0	; () banked
  9333  001E06  2580               	addwf	i2check_msg@qptr& (0+255),w,b
  9334  001E08  6ED9               	movwf	fsr2l,c
  9335  001E0A  50F4               	movf	prodh,w,c
  9336  001E0C  0100               	movlb	0	; () banked
  9337  001E0E  0100               	movlb	0	; () banked
  9338  001E10  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9339  001E12  6EDA               	movwf	fsr2h,c
  9340  001E14  50DF               	movf	indf2,w,c
  9341  001E16  0012               	return	
  9342  001E18                     __end_ofi2_check_msg:
  9343                           	opt stack 0
  9344                           pclatu	equ	0xFFB
  9345                           pclath	equ	0xFFA
  9346                           tblptru	equ	0xFF8
  9347                           tblptrh	equ	0xFF7
  9348                           tblptrl	equ	0xFF6
  9349                           tablat	equ	0xFF5
  9350                           prodh	equ	0xFF4
  9351                           prodl	equ	0xFF3
  9352                           intcon	equ	0xFF2
  9353                           postinc0	equ	0xFEE
  9354                           fsr0h	equ	0xFEA
  9355                           fsr0l	equ	0xFE9
  9356                           wreg	equ	0xFE8
  9357                           indf1	equ	0xFE7
  9358                           fsr1h	equ	0xFE2
  9359                           fsr1l	equ	0xFE1
  9360                           bsr	equ	0xFE0
  9361                           indf2	equ	0xFDF
  9362                           postinc2	equ	0xFDE
  9363                           postdec2	equ	0xFDD
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function _enter_sleep_mode *****************
  9369 ;; Defined at:
  9370 ;;		line 202 in file "src/messages.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;		None               void
  9377 ;; Registers used:
  9378 ;;		None
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9384 ;;      Params:         0       0       0       0       0
  9385 ;;      Locals:         0       0       0       0       0
  9386 ;;      Temps:          0       0       0       0       0
  9387 ;;      Totals:         0       0       0       0       0
  9388 ;;Total ram usage:        0 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_SleepIfOkay
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text56
  9398  001FEA                     __ptext56:
  9399                           	opt stack 0
  9400  001FEA                     _enter_sleep_mode:
  9401                           	opt stack 19
  9402                           
  9403                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;incstack = 0
  9407  001FEA  8ED3               	bsf	4051,7,c	;volatile
  9408  001FEC  0003               	sleep		;# 
  9409  001FEE  0012               	return	
  9410  001FF0                     __end_of_enter_sleep_mode:
  9411                           	opt stack 0
  9412  0000                     pclatu	equ	0xFFB
  9413                           pclath	equ	0xFFA
  9414                           tblptru	equ	0xFF8
  9415                           tblptrh	equ	0xFF7
  9416                           tblptrl	equ	0xFF6
  9417                           tablat	equ	0xFF5
  9418                           prodh	equ	0xFF4
  9419                           prodl	equ	0xFF3
  9420                           intcon	equ	0xFF2
  9421                           postinc0	equ	0xFEE
  9422                           fsr0h	equ	0xFEA
  9423                           fsr0l	equ	0xFE9
  9424                           wreg	equ	0xFE8
  9425                           indf1	equ	0xFE7
  9426                           fsr1h	equ	0xFE2
  9427                           fsr1l	equ	0xFE1
  9428                           bsr	equ	0xFE0
  9429                           indf2	equ	0xFDF
  9430                           postinc2	equ	0xFDE
  9431                           postdec2	equ	0xFDD
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           pclatu	equ	0xFFB
  9436                           pclath	equ	0xFFA
  9437                           tblptru	equ	0xFF8
  9438                           tblptrh	equ	0xFF7
  9439                           tblptrl	equ	0xFF6
  9440                           tablat	equ	0xFF5
  9441                           prodh	equ	0xFF4
  9442                           prodl	equ	0xFF3
  9443                           intcon	equ	0xFF2
  9444                           postinc0	equ	0xFEE
  9445                           fsr0h	equ	0xFEA
  9446                           fsr0l	equ	0xFE9
  9447                           wreg	equ	0xFE8
  9448                           indf1	equ	0xFE7
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           bsr	equ	0xFE0
  9452                           indf2	equ	0xFDF
  9453                           postinc2	equ	0xFDE
  9454                           postdec2	equ	0xFDD
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459                           	psect	param0
  9460  0000                     pclatu	equ	0xFFB
  9461                           pclath	equ	0xFFA
  9462                           tblptru	equ	0xFF8
  9463                           tblptrh	equ	0xFF7
  9464                           tblptrl	equ	0xFF6
  9465                           tablat	equ	0xFF5
  9466                           prodh	equ	0xFF4
  9467                           prodl	equ	0xFF3
  9468                           intcon	equ	0xFF2
  9469                           postinc0	equ	0xFEE
  9470                           fsr0h	equ	0xFEA
  9471                           fsr0l	equ	0xFE9
  9472                           wreg	equ	0xFE8
  9473                           indf1	equ	0xFE7
  9474                           fsr1h	equ	0xFE2
  9475                           fsr1l	equ	0xFE1
  9476                           bsr	equ	0xFE0
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           postdec2	equ	0xFDD
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     59     117
    BANK0           128     75      77
    BANK1           256    200     254
    BANK2           256    128     236
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 128
		 -> main@uthread_data(BANK2[128]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(COMRAM[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(COMRAM[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(COMRAM[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(COMRAM[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), main@msgbuffer(BANK1[11]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(COMRAM[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(COMRAM[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), main@msgbuffer(BANK1[11]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 128
		 -> main@uthread_data(BANK2[128]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 130
		 -> main@t1thread_data(BANK1[130]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 130
		 -> main@t1thread_data(BANK1[130]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(COMRAM[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(COMRAM[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(COMRAM[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(COMRAM[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _timer1_lthread->___lwmod
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               312   312      0   11085
                                             18 BANK1    182   182      0
                                              0 BANK2    128   128      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        16     8      8    2634
                                             74 BANK0      1     1      0
                                              3 BANK1     15     7      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2021
                                             73 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             61 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      19    11      8    1033
                                             57 BANK0     10     2      8
                                              0 BANK1      9     9      0
                         _ReadTimer1
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             51 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                             51 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             51 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     119
                                             51 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      53
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     141
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             55 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             51 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             57 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             55 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             53 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             51 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2052
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2052
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1829
                                             61 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             51 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             51 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8185
                                             42 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                             141   141      0    2737
                                             29 COMRAM    13    13      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2455
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2283
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2617
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2831
                                             26 COMRAM     3     3      0
                  _ToMainLow_sendmsg
                        _WriteTimer1
                       i1_ReadTimer1
 ---------------------------------------------------------------------------------
 (7) i1_ReadTimer1                                         4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2594
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2210
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     929
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10769
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6598
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3887
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3272
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
     i1_ReadTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     80      EC       8       92.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100     C8      FE       6       99.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4B      4D       4       60.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3B      75       1       92.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AC      11        0.0%
DATA                 0      0     2AC      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 23 22:08:23 2015

               main@uthread_data 0200         _MQ_Main_Willing_to_block 003C  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1D08  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1F12  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 008D  
              i2recv_msg@tlength 0094             ?_FromMainLow_recvmsg 0019  
                            l119 0892                              l501 1604  
                            l433 1E9A                              l505 1624  
                            l434 1E9C                              l506 1626  
                            l507 1634                              l460 1D3C  
                            l508 1636                              l457 1D22  
                            l459 1D3A                              l734 1F52  
           ?_FromMainLow_sendmsg 0100  __size_of_uart_trans_int_handler 00B4  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 02B6                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00B3  
               ??_init_uart_recv 00B5                  ReadTimer1@timer 00B5  
            i2recv_msg@maxlength 008C                             l1046 16E2  
                           l2280 1BF6                             l2610 1D24  
                           l2266 1B6C                             l2258 1B4A  
                           l3500 0B2E                             l2702 18BC  
                           l3502 0B54                             l2722 0EEA  
                           l3522 1208                             l3442 0840  
                           l3434 07FE                             l2636 1606  
                           l2628 15F0                             l2708 18E4  
                           l3444 0898                             l3452 0902  
                           l3460 0958                             l2718 0E66  
                           l3446 08C6                             l3454 091A  
                           l3552 1A48                             l3640 16CE  
                           l3632 1680                             l3472 0A3A  
                           l3448 08E4                             l3634 1692  
                           l3538 0FB4                             l3466 0996  
                           l3458 093A                             l3572 0C4A  
                           l3636 169A                             l3492 0AC4  
                           l3468 09E8                             l3558 1A6C  
                           l3494 0AD4                             l2696 1890  
                           l2784 1840                             l3496 0B00  
                           l3588 0D10                             _LATA 000F89  
                           _LATB 000F8A                             u2667 1F54  
                           i1l52 007C          uart_trans_int_handler@l 001F  
        uart_trans_int_handler@m 0021          uart_trans_int_handler@n 0023  
                _FromMainHigh_MQ 0280                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 1238  
                           _main 0720                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 01AA  
                     i1_send_msg 148A                             pclat 000FFA  
                    i2_check_msg 1DE2                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0080  
                           start 00C2                       i2_recv_msg 0D14  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 105C  
      ToMainHigh_recvmsg@msgtype 0100                   send_msg@length 00BF  
    __size_of_timer0_int_handler 008A                      _Delay1KTCYx 1F4E  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00C9  
                          ?_main 0001                            _CMCON 000FB4  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 00B3                            i1l350 1486  
                          i1l353 1464                  __end_of___lwmod 16EC  
                     i1memcpy@d1 0001                            i2l311 053A  
                          i1l519 1F3E                            i2l305 049A  
                          i2l267 138A                            i2l283 01D2  
                          i2l277 0528                            i2l279 018E  
                          i2l297 0362                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 0098                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                       i2memcpy@d1 0080  
                     i2memcpy@s1 0082                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1C06  
     ToMainLow_recvmsg@maxlength 0104          timer0_lthread@msgbuffer 00B9  
        i2c_configure_slave@addr 00B3                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 13D6  
               __end_ofi1_memcpy 1CCA                 __end_ofi2_memcpy 1AE2  
                __initialization 1E48       uart_trans_int_handler@data 0029  
                   __end_of_main 0A5A     uart_trans_int_handler@length 0026  
                     _ReadTimer1 1F64      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_recvmsg 003E       __size_of_ToMainLow_sendmsg 0022  
  __size_of_FromMainHigh_recvmsg 0042            __size_ofi2_in_low_int 0046  
                         ??_main 0112                  send_msg@msgtype 00C0  
                  __activetblptr 000002                  send_msg@tlength 00C4  
     FromMainLow_sendmsg@msgtype 0100             __end_of_handle_start 13D6  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3020 1C9C                           i1l3120 15B0  
                         i1l3026 1CB8                           i1l3050 14C2  
                         i1l3142 1444                           i1l3152 147E  
                         i1l3144 144A                           i1l3160 0066  
                         i1l3074 127E                           i1l3090 1306  
                         i1l3166 0070                           i2l3202 17B0  
                         i2l3230 0184                           i2l3224 016C  
                         i2l3208 17BA                       _OpenTimer0 1E76  
                         i2l3330 059E                           i2l3250 0236  
                     _OpenTimer1 1D08                           i2l3324 053E  
                         i2l3260 0272                           i2l3318 04FC  
                 __CFG_WDTEN$OFF 000000                           i2l3248 020A  
                         i2l3346 06DE                           i2l3338 0638  
                         i2l3290 03D6                           i2l3266 028A  
                         i2l3364 19C6                           i2l3620 13A6  
                         i2l3292 0418                           i2l3268 02CA  
                         i2l3622 13BE                           i2l3296 042A  
                         i2l3704 0D80                           i2l3720 0E46  
                         i2l3730 1AA6                           i2l3664 1BB2  
                         i2l3656 1B90                           i2l3736 1ACA  
                         i2l3680 10B8      __end_of_i2c_configure_slave 1EC8  
                  ??_SleepIfOkay 0084               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 010E  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0F58  
             timer0_lthread@tptr 00B3          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 008A                     i2_in_low_int 1B7C  
                    ?i2_send_msg 008A                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0092                  _i2c_int_handler 00C6  
               OpenTimer0@config 00B3                           _ic_ptr 00CB  
                      ??___lwmod 00B7                    main@msgbuffer 0115  
               __end_of_init_i2c 19C0                 OpenTimer1@config 00B3  
                         _memcpy 1A26                           clear_0 1E4E  
                         clear_1 1E5A                           clear_2 1E66  
                         _uc_ptr 0074                           main@ic 01AC  
                         main@uc 0123                 __end_of_recv_msg 0D14  
    start_i2c_slave_reply@length 00B7                        ??_in_main 00B9  
               __end_of_send_msg 105C            timer0_int_handler@val 00A2  
        i2c_int_handler@i2c_data 00A1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00B6         ToMainLow_recvmsg@msgtype 0100  
           __size_of_in_high_int 0012          FromMainLow_sendmsg@data 0101  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1FF0  
                     __accesstop 0080          __end_of__initialization 1E6C  
     __end_of_ToMainHigh_recvmsg 1C48       __end_of_ToMainHigh_sendmsg 1DE2  
             ?_init_uart_lthread 00B3      __end_of_init_timer1_lthread 1B36  
            __end_of_SleepIfOkay 1A26                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 0012              ??_init_uart_lthread 00B5  
                    ?_ReadTimer1 00B3               __size_of_check_msg 0036  
              __end_of_ReadUSART 1F4E        timer0_int_handler@msgtype 00A0  
            __size_ofi1_recv_msg 00D2                  timer1_lthread@x 0100  
                timer1_lthread@y 0102                  timer1_lthread@z 0104  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 17F0      __end_of_InterruptHandlerLow 00C2  
                      ?i2_memcpy 0080                    _ToMainHigh_MQ 01C8  
            __size_ofi2_recv_msg 0136                 _enter_sleep_mode 1FEA  
            __size_ofi2_send_msg 0104             timer1_lthread@length 00BD  
                  ReadUSART@data 0001                __end_of_OpenUSART 1662  
                  check_msg@qptr 00B3             timer1_lthread@retval 0106  
      __end_of_init_uart_lthread 1FF2          ??_block_on_To_msgqueues 00B9  
           __size_of_init_queues 006A                       __pbssBANK1 01C8  
                     __pbssBANK2 0280                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001   uart_trans_int_handler@curIndex 0027  
                     __pnvCOMRAM 0074          __end_of_i2c_int_handler 0720  
                   ?i2_check_msg 0080               timer1_lthread@even 0107  
             timer1_lthread@tptr 00B9   uart_trans_int_handler@numBytes 0025  
              recv_msg@maxlength 00BF                  recv_msg@msgtype 00C0  
                recv_msg@tlength 00C7            __size_of_handle_start 00CC  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0082  
                        ?_memcpy 00B3                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0082                    ??_WriteTimer1 0003  
        __size_of_timer0_lthread 0012          __size_of_timer1_lthread 0184  
                     ??i1_memcpy 0007                       ??i2_memcpy 0086  
               i1send_msg@length 000D                    i2_in_high_int 1FD0  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1DAC  
                      ?_init_i2c 00B3                      _SleepIfOkay 19C0  
                      ?_recv_msg 00BD                       _in_low_int 1B36  
                   _handle_start 130A                          __Hparam 0000  
                      ?_send_msg 00BD                          __Lparam 0000  
     __end_of_timer0_int_handler 1776      __end_of_FromMainLow_recvmsg 1EF0  
    __end_of_FromMainLow_sendmsg 1D76                 init_uart_recv@uc 00B3  
                        ___lwmod 1662                  __CFG_STVREN$OFF 000000  
                        __pcinit 1E48                  __size_of_memcpy 005E  
                     _init_queue 17F8                          __ramtop 0400  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0038  
                        __ptext0 0720                          __ptext1 1160  
                        __ptext2 1D40                          __ptext3 0F58  
                        __ptext4 0A5A                          __ptext5 1662  
                        __ptext6 1F64                          __ptext7 1F76  
                        __ptext8 0E4A                          __ptext9 1F12  
                      _T0CONbits 000FD5                          _in_main 1BC2  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1FD0  
            __end_of_WriteTimer1 1FBE                   ?i2_in_high_int 0080  
 __end_of_uart_trans_int_handler 148A                    ?i1_ReadTimer1 0001  
     __size_of_init_uart_lthread 0002                   __pintcode_body 1776  
   __end_of_FromMainHigh_recvmsg 1C8A             end_of_initialization 1E6C  
        timer1_lthread@msgbuffer 00BF   __size_of_uart_recv_int_handler 009C  
                        memcpy@d 00B9                          memcpy@n 00B7  
                        memcpy@s 00BB    __end_of_uart_recv_int_handler 15D0  
                     ??_init_i2c 00B5                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 009F                    __Lmediumconst 0000  
                        int_func 1776                     ??i1_send_msg 0011  
                  ?_uart_lthread 0103          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                     ??i2_recv_msg 0091  
                     ??_recv_msg 00C4                     ??i2_send_msg 0090  
                     ??_send_msg 00C3       __end_of_timer1_int_handler 1E48  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0096               __end_ofi1_recv_msg 130A  
             __end_ofi1_send_msg 1534                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0E4A                   ??i1_ReadTimer1 0003  
             __end_ofi2_send_msg 1160    FromMainHigh_recvmsg@maxlength 009C  
       timer1_int_handler@result 001C                   ??_uart_lthread 00CA  
                      _TXSTAbits 000FAC                       main@length 01AB  
                    ?_in_low_int 00B5            timer0_lthread@msgtype 00B5  
          _start_i2c_slave_reply 0E4A     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0036         __end_of_enter_sleep_mode 1FF0  
                   ??_ReadTimer1 00B5               _ToMainHigh_recvmsg 1C06  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1DAC  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 1F76                      ?_init_queue 00B3  
                      i2memcpy@d 0086                      _WriteTimer0 1FBE  
                    _WriteTimer1 1FAC                        i2memcpy@n 0084  
                      i2memcpy@s 0088                   _timer1_lthread 0A5A  
                 __end_of_memcpy 1A84                _enable_interrupts 1FE2  
           __size_of_Delay1KTCYx 0016              ?_ToMainHigh_recvmsg 0100  
                ??i2_in_high_int 0082         i2c_int_handler@data_read 00A4  
            ?_ToMainHigh_sendmsg 0096               ?_enable_interrupts 0001  
            start_initialization 1E48                    ??_in_high_int 00B5  
                      _ReadUSART 1F30                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        FromMainLow_sendmsg@length 00C9  
            ??_enable_interrupts 00B3                     ??_OpenTimer0 00B3  
                   ??_OpenTimer1 00B3   __size_of_block_on_To_msgqueues 007A  
             __end_of_ReadTimer1 1F76    __end_of_block_on_To_msgqueues 18EC  
                      _OpenUSART 15D0     __end_of_InterruptHandlerHigh 17F8  
                     init_i2c@ic 00B3             ??_ToMainHigh_recvmsg 00CB  
           ??_ToMainHigh_sendmsg 0099           __end_of_timer0_lthread 1F88  
       i2c_int_handler@error_buf 009C           __end_of_timer1_lthread 0BDE  
      __end_of_enable_interrupts 1FEA                         ??_memcpy 00B9  
          timer1_lthread@msgtype 00BB             _FromMainHigh_recvmsg 1C48  
   __size_of_init_timer1_lthread 0054               __end_of_OpenTimer0 1EA0  
             __end_of_OpenTimer1 1D40         i2c_int_handler@msg_ready 00A3  
              i1ReadTimer1@timer 0003                      __pbssCOMRAM 003C  
                     ?_ReadUSART 0001                    ??_init_queues 00B7  
                  __pcstackBANK0 0080                    __pcstackBANK1 0100  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 00B3              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00B3         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00AA              __end_of_in_high_int 1F9A  
                     ?_OpenUSART 00B3                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 0102                     _ToMainLow_MQ 003E  
            __size_of_init_queue 007A                   _init_uart_recv 1F12  
                      _check_msg 1D76                        __pnvBANK0 00CB  
         ?_start_i2c_slave_reply 00B3                __size_of_init_i2c 006A  
                   recv_msg@data 00C2                     recv_msg@qmsg 00C9  
                   recv_msg@slot 00C6                     recv_msg@qptr 00BD  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 0104             __end_ofi1_ReadTimer1 1FAC  
                ?_timer0_lthread 00B3                         ?___lwmod 00B3  
          ?_FromMainHigh_recvmsg 0098                  ?_timer1_lthread 00B9  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 0102  
           __end_of_uart_lthread 1238       i2c_int_handler@msg_to_send 00A2  
                       ?_in_main 00B7                WriteTimer0@timer0 0080  
             _timer0_int_handler 16EC                WriteTimer1@timer1 0001  
            uart_lthread@msgtype 0105            ToMainLow_sendmsg@data 0018  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 0103           __end_of_init_uart_recv 1F30  
            __end_of_init_queues 1956                  i2check_msg@qptr 0080  
                     ?_check_msg 00B3                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0082  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0097  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010             ??_timer0_int_handler 009D  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0028     __size_of_FromMainLow_sendmsg 0036  
           timer0_lthread@length 00B7               _timer1_int_handler 1E18  
                       i1_memcpy 1C8A             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1A84  
           timer0_lthread@msgval 00BB         FromMainHigh_recvmsg@data 009A  
                    _in_high_int 1F88                     send_msg@data 00C1  
            _i2c_configure_slave 1EA0                     send_msg@qmsg 00C7  
                   send_msg@slot 00C6                     send_msg@qptr 00BD  
          uart_lthread@msgbuffer 0109              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00B3                      ??_OpenUSART 00B5  
                OpenUSART@config 00B8                   ??i2_in_low_int 0084  
                       __Hparam0 0000            _uart_recv_int_handler 1534  
                   ??_in_low_int 00B7                         __Lparam0 0000  
           ?_i2c_configure_slave 0001                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 009C             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0080  
               __size_of___lwmod 008A                     ??_init_queue 00B5  
                   ?_WriteTimer0 0080                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A                main@t0thread_data 0113  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 008D      ToMainHigh_recvmsg@maxlength 0104  
              i2send_msg@tlength 0091          init_timer1_lthread@tptr 00B3  
                    _init_queues 18EC               __end_of_in_low_int 1B7C  
                       __ptext10 1FF0                         __ptext11 1AE2  
                       __ptext20 1F88                         __ptext12 18EC  
                       __ptext21 1D76                         __ptext13 17F8  
                       __ptext22 1F4E                         __ptext14 1956  
                       __ptext31 13D6                         __ptext23 1CCA  
                       __ptext15 1EA0                         __ptext40 148A  
                       __ptext32 1EC8                         __ptext24 1C06  
                       __ptext16 1FE2                         __ptext41 1C8A  
                       __ptext33 1238                         __ptext25 0BDE  
                       __ptext17 1872                         __ptext50 105C  
                       __ptext34 1534                         __ptext26 1A26  
                       __ptext18 1BC2                         __ptext51 1A84  
                       __ptext43 16EC                         __ptext35 1F30  
                       __ptext27 15D0                         __ptext19 1B36  
                       __ptext52 19C0                         __ptext44 1FBE  
                       __ptext36 1E18                         __ptext28 1D08  
                       __ptext53 1B7C                         __ptext45 1C48  
                       __ptext37 1F9A                         __ptext29 1E76  
                       __ptext54 1FD0                         __ptext46 0D14  
                       __ptext38 1FAC                         __ptext55 1DE2  
                       __ptext47 00C6                         __ptext39 1EF0  
                       __ptext56 1FEA                         __ptext48 130A  
                       __ptext49 1DAC                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 0107  
       timer0_int_handler@length 009E               uart_lthread@status 0111  
                       _init_i2c 1956              _init_timer1_lthread 1AE2  
                  __size_of_main 033A                    ??i2_check_msg 0082  
              main@t1thread_data 0128                      ??_check_msg 00B5  
             __end_of_init_queue 1872            __size_ofi1_ReadTimer1 0012  
           __size_of_SleepIfOkay 0066                         _recv_msg 0BDE  
          ??_i2c_configure_slave 00B3                         _send_msg 0F58  
                 init_queue@qptr 00B3            __size_of_uart_lthread 00D8  
                 i2recv_msg@data 008F    uart_trans_int_handler@msgtype 0028  
                 i2recv_msg@qmsg 0096                    ??_Delay1KTCYx 00B3  
                 i2recv_msg@slot 0093                   i2recv_msg@qptr 008A  
                       main@baud 0121              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00B3         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00B3                         memcpy@d1 00B3  
                       memcpy@s1 00B5            __end_ofi2_in_high_int 1FE2  
   i2c_int_handler@overrun_error 00A0                     i1_ReadTimer1 1F9A  
               i2send_msg@length 008C                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 00B5                 ___lwmod@dividend 00B3  
         ?_uart_recv_int_handler 0001                     _uart_lthread 1160  
                 main@UARTConfig 0122            _block_on_To_msgqueues 1872  
                  ?_handle_start 0001                 ??_timer0_lthread 00BB  
    __size_of_ToMainHigh_recvmsg 0042      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00C1  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0099              __end_ofi2_check_msg 1E18  
          ??_init_timer1_lthread 00B5           ??_InterruptHandlerHigh 00A5  
              _ToMainLow_recvmsg 1CCA                _ToMainLow_sendmsg 1EF0  
             main@last_reg_recvd 0120                  ___lwmod@divisor 00B5  
           __end_ofi2_in_low_int 1BC2               ?_ToMainLow_recvmsg 0100  
            __end_of_Delay1KTCYx 1F64                ??_i2c_int_handler 009A  
                ___lwmod@counter 00B8               ?_ToMainLow_sendmsg 0017  
                  uart_lthread@a 010B                    uart_lthread@b 010D  
                  uart_lthread@c 010F                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 008E  
          ??_InterruptHandlerLow 002B              ??_ToMainLow_recvmsg 00CB  
                 i2send_msg@qmsg 0094                   i2send_msg@slot 0093  
                 i2send_msg@qptr 008A              ??_ToMainLow_sendmsg 001A  
            _FromMainLow_recvmsg 1EC8                   ??_handle_start 0080  
            _FromMainLow_sendmsg 1D40                     _USART_Status 003D  
