

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb 14 15:03:09 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK0
    76  001BBC                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for timer1_lthread@F5129
    80  001BBC  C8                 	db	200
    81  001BBD  48                 	db	72
    82  0000                     _ADCON1	set	4033
    83  0000                     _CMCON	set	4020
    84  0000                     _INTCONbits	set	4082
    85  0000                     _IPR1bits	set	3999
    86  0000                     _LATA	set	3977
    87  0000                     _LATB	set	3978
    88  0000                     _OSCCON	set	4051
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCTUNEbits	set	3995
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PORTA	set	3968
    94  0000                     _RCONbits	set	4048
    95  0000                     _RCREG	set	4014
    96  0000                     _RCSTA	set	4011
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _SPBRG	set	4015
    99  0000                     _SPBRGH	set	4016
   100  0000                     _SSPADD	set	4040
   101  0000                     _SSPBUF	set	4041
   102  0000                     _SSPCON1	set	4038
   103  0000                     _SSPCON1bits	set	4038
   104  0000                     _SSPCON2	set	4037
   105  0000                     _SSPCON2bits	set	4037
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPSTATbits	set	4039
   108  0000                     _T0CON	set	4053
   109  0000                     _T0CONbits	set	4053
   110  0000                     _T1CON	set	4045
   111  0000                     _T1CONbits	set	4045
   112  0000                     _TMR0H	set	4055
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR1H	set	4047
   115  0000                     _TMR1L	set	4046
   116  0000                     _TRISA	set	3986
   117  0000                     _TRISB	set	3987
   118  0000                     _TRISCbits	set	3988
   119  0000                     _TXREG	set	4013
   120  0000                     _TXSTA	set	4012
   121  0000                     _TXSTAbits	set	4012
   122                           
   123                           	psect	nvCOMRAM
   124  00004D                     __pnvCOMRAM:
   125                           	opt stack 0
   126  00004D                     _uc_ptr:
   127                           	opt stack 0
   128  00004D                     	ds	2
   129                           
   130                           	psect	nvBANK0
   131  0000E5                     __pnvBANK0:
   132                           	opt stack 0
   133  0000E5                     _ic_ptr:
   134                           	opt stack 0
   135  0000E5                     	ds	2
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  001864                     __pcinit:
   141                           	opt stack 0
   142  001864                     start_initialization:
   143                           	opt stack 0
   144  001864                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK1 (162 bytes)
   148  001864  EE01  F000         	lfsr	0,__pbssBANK1
   149  001868  0EA2               	movlw	162
   150  00186A                     clear_0:
   151  00186A  6AEE               	clrf	postinc0,c
   152  00186C  06E8               	decf	wreg,f,c
   153  00186E  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK0 (54 bytes)
   156  001870  EE00  F080         	lfsr	0,__pbssBANK0
   157  001874  0E36               	movlw	54
   158  001876                     clear_1:
   159  001876  6AEE               	clrf	postinc0,c
   160  001878  06E8               	decf	wreg,f,c
   161  00187A  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to COMRAM (2 bytes)
   164  00187C  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   165  00187E  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   166                           
   167                           ; Initialize objects allocated to BANK0 (2 bytes)
   168                           ; load TBLPTR registers with __pidataBANK0
   169  001880  0EBC               	movlw	low __pidataBANK0
   170  001882  6EF6               	movwf	tblptrl,c
   171  001884  0E1B               	movlw	high __pidataBANK0
   172  001886  6EF7               	movwf	tblptrh,c
   173  001888  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   174  00188A  6EF8               	movwf	tblptru,c
   175  00188C  0009               	tblrd		*+	;fetch initializer
   176  00188E  CFF5 F0E7          	movff	tablat,__pdataBANK0
   177  001892  0009               	tblrd		*+	;fetch initializer
   178  001894  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   179  001898                     end_of_initialization:
   180                           	opt stack 0
   181  001898                     __end_of__initialization:
   182                           	opt stack 0
   183  001898  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  00189A  6EF8               	movwf	tblptru,c
   185  00189C  0100               	movlb	0
   186  00189E  EF4E  F003         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssCOMRAM
   195  00004F                     __pbssCOMRAM:
   196                           	opt stack 0
   197  00004F                     _MQ_Main_Willing_to_block:
   198                           	opt stack 0
   199  00004F                     	ds	1
   200  000050                     _USART_Status:
   201                           	opt stack 0
   202  000050                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	bssBANK0
   211  000080                     __pbssBANK0:
   212                           	opt stack 0
   213  000080                     _ToMainLow_MQ:
   214                           	opt stack 0
   215  000080                     	ds	54
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           
   223                           	psect	dataBANK0
   224  0000E7                     __pdataBANK0:
   225                           	opt stack 0
   226  0000E7                     timer1_lthread@F5129:
   227                           	opt stack 0
   228  0000E7                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	bssBANK1
   237  000100                     __pbssBANK1:
   238                           	opt stack 0
   239  000100                     _FromMainHigh_MQ:
   240                           	opt stack 0
   241  000100                     	ds	54
   242  000136                     _FromMainLow_MQ:
   243                           	opt stack 0
   244  000136                     	ds	54
   245  00016C                     _ToMainHigh_MQ:
   246                           	opt stack 0
   247  00016C                     	ds	54
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	cstackBANK1
   256  0001A2                     __pcstackBANK1:
   257                           	opt stack 0
   258  0001A2                     ToMainLow_sendmsg@msgtype:
   259                           	opt stack 0
   260  0001A2                     ToMainLow_recvmsg@msgtype:
   261                           	opt stack 0
   262  0001A2                     ToMainHigh_recvmsg@msgtype:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x0
   266  0001A2                     	ds	1
   267  0001A3                     ToMainLow_sendmsg@data:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x1
   271  0001A3                     	ds	1
   272  0001A4                     ToMainLow_recvmsg@data:
   273                           	opt stack 0
   274  0001A4                     ToMainHigh_recvmsg@data:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278  0001A4                     	ds	1
   279  0001A5                     timer1_lthread@tptr:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x3
   283  0001A5                     	ds	1
   284  0001A6                     ToMainLow_recvmsg@maxlength:
   285                           	opt stack 0
   286  0001A6                     ToMainHigh_recvmsg@maxlength:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290  0001A6                     	ds	1
   291  0001A7                     timer1_lthread@msgtype:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x5
   295  0001A7                     	ds	2
   296  0001A9                     timer1_lthread@length:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x7
   300  0001A9                     	ds	2
   301  0001AB                     timer1_lthread@msgbuffer:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x9
   305  0001AB                     	ds	2
   306  0001AD                     ??_timer1_lthread:
   307                           
   308                           ; 0 bytes @ 0xB
   309  0001AD                     	ds	2
   310  0001AF                     timer1_lthread@retval:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0xD
   314  0001AF                     	ds	1
   315  0001B0                     timer1_lthread@even:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0xE
   319  0001B0                     	ds	2
   320  0001B2                     timer1_lthread@ctrl:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x10
   324  0001B2                     	ds	2
   325  0001B4                     ??_main:
   326                           
   327                           ; 0 bytes @ 0x12
   328  0001B4                     	ds	1
   329  0001B5                     main@t0thread_data:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x13
   333  0001B5                     	ds	2
   334  0001B7                     main@msgbuffer:
   335                           	opt stack 0
   336                           
   337                           ; 11 bytes @ 0x15
   338  0001B7                     	ds	11
   339  0001C2                     main@last_reg_recvd:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x20
   343  0001C2                     	ds	1
   344  0001C3                     main@baud:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x21
   348  0001C3                     	ds	1
   349  0001C4                     main@UARTConfig:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x22
   353  0001C4                     	ds	1
   354  0001C5                     main@uthread_data:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x23
   358  0001C5                     	ds	2
   359  0001C7                     main@t1thread_data:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x25
   363  0001C7                     	ds	2
   364  0001C9                     main@uc:
   365                           	opt stack 0
   366                           
   367                           ; 5 bytes @ 0x27
   368  0001C9                     	ds	5
   369  0001CE                     main@msgtype:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x2C
   373  0001CE                     	ds	1
   374  0001CF                     main@length:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x2D
   378  0001CF                     	ds	1
   379  0001D0                     main@ic:
   380                           	opt stack 0
   381                           
   382                           ; 28 bytes @ 0x2E
   383  0001D0                     	ds	28
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           
   391                           	psect	cstackBANK0
   392  0000B6                     __pcstackBANK0:
   393                           	opt stack 0
   394  0000B6                     timer0_int_handler@length:
   395                           	opt stack 0
   396  0000B6                     i2c_int_handler@error_buf:
   397                           	opt stack 0
   398                           
   399                           ; 3 bytes @ 0x0
   400  0000B6                     	ds	2
   401  0000B8                     timer0_int_handler@msgtype:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  0000B8                     	ds	1
   406  0000B9                     i2c_int_handler@data_written:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410  0000B9                     	ds	1
   411  0000BA                     i2c_int_handler@overrun_error:
   412                           	opt stack 0
   413  0000BA                     timer0_int_handler@val:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x4
   417  0000BA                     	ds	1
   418  0000BB                     i2c_int_handler@i2c_data:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x5
   422  0000BB                     	ds	1
   423  0000BC                     i2c_int_handler@msg_to_send:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x6
   427  0000BC                     	ds	1
   428  0000BD                     i2c_int_handler@msg_ready:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x7
   432  0000BD                     	ds	1
   433  0000BE                     i2c_int_handler@data_read:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x8
   437  0000BE                     	ds	1
   438  0000BF                     ??_InterruptHandlerHigh:
   439                           
   440                           ; 0 bytes @ 0x9
   441  0000BF                     	ds	14
   442  0000CD                     ?_ReadTimer1:
   443                           	opt stack 0
   444  0000CD                     ?_in_high_int:
   445                           	opt stack 0
   446  0000CD                     ?___lwmod:
   447                           	opt stack 0
   448  0000CD                     i2c_configure_slave@addr:
   449                           	opt stack 0
   450  0000CD                     OpenTimer0@config:
   451                           	opt stack 0
   452  0000CD                     OpenTimer1@config:
   453                           	opt stack 0
   454  0000CD                     WriteUSART@data:
   455                           	opt stack 0
   456  0000CD                     Delay1KTCYx@unit:
   457                           	opt stack 0
   458  0000CD                     init_queue@qptr:
   459                           	opt stack 0
   460  0000CD                     check_msg@qptr:
   461                           	opt stack 0
   462  0000CD                     start_i2c_slave_reply@msg:
   463                           	opt stack 0
   464  0000CD                     init_i2c@ic:
   465                           	opt stack 0
   466  0000CD                     init_uart_recv@uc:
   467                           	opt stack 0
   468  0000CD                     timer0_lthread@tptr:
   469                           	opt stack 0
   470  0000CD                     init_timer1_lthread@tptr:
   471                           	opt stack 0
   472  0000CD                     OpenUSART@spbrg:
   473                           	opt stack 0
   474  0000CD                     ___lwmod@dividend:
   475                           	opt stack 0
   476  0000CD                     memcpy@d1:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x17
   480  0000CD                     	ds	1
   481  0000CE                     putsUSART@data:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x18
   485  0000CE                     	ds	1
   486  0000CF                     ??_OpenUSART:
   487  0000CF                     ??_start_i2c_slave_reply:
   488  0000CF                     ??_init_queue:
   489  0000CF                     ??_check_msg:
   490  0000CF                     ?_in_low_int:
   491                           	opt stack 0
   492  0000CF                     timer0_lthread@msgtype:
   493                           	opt stack 0
   494  0000CF                     ReadTimer1@timer:
   495                           	opt stack 0
   496  0000CF                     ___lwmod@divisor:
   497                           	opt stack 0
   498  0000CF                     memcpy@s1:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x19
   502  0000CF                     	ds	1
   503  0000D0                     init_queue@i:
   504                           	opt stack 0
   505  0000D0                     uart_lthread@uptr:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x1A
   509  0000D0                     	ds	1
   510  0000D1                     ??_init_queues:
   511  0000D1                     ??___lwmod:
   512  0000D1                     ?_in_main:
   513                           	opt stack 0
   514  0000D1                     start_i2c_slave_reply@length:
   515                           	opt stack 0
   516  0000D1                     timer0_lthread@length:
   517                           	opt stack 0
   518  0000D1                     memcpy@n:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1B
   522  0000D1                     	ds	1
   523  0000D2                     OpenUSART@config:
   524                           	opt stack 0
   525  0000D2                     ___lwmod@counter:
   526                           	opt stack 0
   527  0000D2                     uart_lthread@msgtype:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x1C
   531  0000D2                     	ds	1
   532  0000D3                     ??_block_on_To_msgqueues:
   533  0000D3                     timer0_lthread@msgbuffer:
   534                           	opt stack 0
   535  0000D3                     memcpy@d:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x1D
   539  0000D3                     	ds	1
   540  0000D4                     uart_lthread@length:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x1E
   544  0000D4                     	ds	1
   545  0000D5                     timer0_lthread@msgval:
   546                           	opt stack 0
   547  0000D5                     memcpy@s:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x1F
   551  0000D5                     	ds	1
   552  0000D6                     uart_lthread@msgbuffer:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x20
   556  0000D6                     	ds	1
   557  0000D7                     send_msg@qptr:
   558                           	opt stack 0
   559  0000D7                     recv_msg@qptr:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x21
   563  0000D7                     	ds	1
   564  0000D8                     
   565                           ; 0 bytes @ 0x22
   566  0000D8                     	ds	1
   567  0000D9                     send_msg@length:
   568                           	opt stack 0
   569  0000D9                     recv_msg@maxlength:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x23
   573  0000D9                     	ds	1
   574  0000DA                     send_msg@msgtype:
   575                           	opt stack 0
   576  0000DA                     recv_msg@msgtype:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x24
   580  0000DA                     	ds	1
   581  0000DB                     send_msg@data:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x25
   585  0000DB                     	ds	1
   586  0000DC                     recv_msg@data:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x26
   590  0000DC                     	ds	1
   591  0000DD                     ??_send_msg:
   592                           
   593                           ; 0 bytes @ 0x27
   594  0000DD                     	ds	1
   595  0000DE                     ??_recv_msg:
   596  0000DE                     send_msg@tlength:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x28
   600  0000DE                     	ds	2
   601  0000E0                     send_msg@slot:
   602                           	opt stack 0
   603  0000E0                     recv_msg@slot:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x2A
   607  0000E0                     	ds	1
   608  0000E1                     send_msg@qmsg:
   609                           	opt stack 0
   610  0000E1                     recv_msg@tlength:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x2B
   614  0000E1                     	ds	2
   615  0000E3                     ToMainLow_sendmsg@length:
   616                           	opt stack 0
   617  0000E3                     recv_msg@qmsg:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x2D
   621  0000E3                     	ds	2
   622  0000E5                     tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           
   629                           ; 0 bytes @ 0x2F
   630                           
   631                           	psect	cstackCOMRAM
   632  000001                     __pcstackCOMRAM:
   633                           	opt stack 0
   634  000001                     ?i1_ReadTimer1:
   635                           	opt stack 0
   636  000001                     ReadUSART@data:
   637                           	opt stack 0
   638  000001                     WriteTimer1@timer1:
   639                           	opt stack 0
   640  000001                     i1memcpy@d1:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x0
   644  000001                     	ds	2
   645  000003                     WriteTimer1@timer:
   646                           	opt stack 0
   647  000003                     i1ReadTimer1@timer:
   648                           	opt stack 0
   649  000003                     i1memcpy@s1:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x2
   653  000003                     	ds	2
   654  000005                     i1memcpy@n:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x4
   658  000005                     	ds	2
   659  000007                     i1memcpy@d:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x6
   663  000007                     	ds	2
   664  000009                     i1memcpy@s:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x8
   668  000009                     	ds	2
   669  00000B                     i1send_msg@qptr:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xA
   673  00000B                     	ds	2
   674  00000D                     i1send_msg@length:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678  00000D                     	ds	1
   679  00000E                     i1send_msg@msgtype:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     i1send_msg@data:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0xE
   688  00000F                     	ds	2
   689  000011                     ??i1_send_msg:
   690                           
   691                           ; 0 bytes @ 0x10
   692  000011                     	ds	1
   693  000012                     i1send_msg@tlength:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x11
   697  000012                     	ds	2
   698  000014                     i1send_msg@slot:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x13
   702  000014                     	ds	1
   703  000015                     i1send_msg@qmsg:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000015                     	ds	2
   708  000017                     i1ToMainLow_sendmsg@msgtype:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x16
   712  000017                     	ds	1
   713  000018                     i1ToMainLow_sendmsg@data:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x17
   717  000018                     	ds	2
   718  00001A                     i1ToMainLow_sendmsg@length:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x19
   722  00001A                     	ds	1
   723  00001B                     ??_timer1_int_handler:
   724  00001B                     ??_uart_recv_int_handler:
   725                           
   726                           ; 0 bytes @ 0x1A
   727  00001B                     	ds	1
   728  00001C                     timer1_int_handler@result:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x1B
   732  00001C                     	ds	2
   733  00001E                     ??_InterruptHandlerLow:
   734                           
   735                           ; 0 bytes @ 0x1D
   736  00001E                     	ds	17
   737  00002F                     ?i2_in_high_int:
   738                           	opt stack 0
   739  00002F                     handle_start@data_read:
   740                           	opt stack 0
   741  00002F                     WriteTimer0@timer0:
   742                           	opt stack 0
   743  00002F                     i2check_msg@qptr:
   744                           	opt stack 0
   745  00002F                     i2memcpy@d1:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x2E
   749  00002F                     	ds	2
   750  000031                     ??i2_check_msg:
   751  000031                     ?i2_in_low_int:
   752                           	opt stack 0
   753  000031                     WriteTimer0@timer:
   754                           	opt stack 0
   755  000031                     i2memcpy@s1:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x30
   759  000031                     	ds	2
   760  000033                     i2memcpy@n:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x32
   764  000033                     	ds	2
   765  000035                     i2memcpy@d:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x34
   769  000035                     	ds	2
   770  000037                     i2memcpy@s:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x36
   774  000037                     	ds	2
   775  000039                     i2send_msg@qptr:
   776                           	opt stack 0
   777  000039                     i2recv_msg@qptr:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x38
   781  000039                     	ds	2
   782  00003B                     i2send_msg@length:
   783                           	opt stack 0
   784  00003B                     i2recv_msg@maxlength:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x3A
   788  00003B                     	ds	1
   789  00003C                     i2send_msg@msgtype:
   790                           	opt stack 0
   791  00003C                     i2recv_msg@msgtype:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x3B
   795  00003C                     	ds	1
   796  00003D                     i2send_msg@data:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x3C
   800  00003D                     	ds	1
   801  00003E                     i2recv_msg@data:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x3D
   805  00003E                     	ds	1
   806  00003F                     ??i2_send_msg:
   807                           
   808                           ; 0 bytes @ 0x3E
   809  00003F                     	ds	1
   810  000040                     ??i2_recv_msg:
   811  000040                     i2send_msg@tlength:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x3F
   815  000040                     	ds	2
   816  000042                     i2send_msg@slot:
   817                           	opt stack 0
   818  000042                     i2recv_msg@slot:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x41
   822  000042                     	ds	1
   823  000043                     i2send_msg@qmsg:
   824                           	opt stack 0
   825  000043                     i2recv_msg@tlength:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x42
   829  000043                     	ds	2
   830  000045                     ToMainHigh_sendmsg@msgtype:
   831                           	opt stack 0
   832  000045                     i2recv_msg@qmsg:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x44
   836  000045                     	ds	1
   837  000046                     ToMainHigh_sendmsg@data:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x45
   841  000046                     	ds	1
   842  000047                     FromMainHigh_recvmsg@msgtype:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x46
   846  000047                     	ds	1
   847  000048                     ToMainHigh_sendmsg@length:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x47
   851  000048                     	ds	1
   852  000049                     ??_i2c_int_handler:
   853  000049                     FromMainHigh_recvmsg@data:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x48
   857  000049                     	ds	2
   858  00004B                     FromMainHigh_recvmsg@maxlength:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x4A
   862  00004B                     	ds	1
   863  00004C                     ??_timer0_int_handler:
   864                           
   865                           ; 0 bytes @ 0x4B
   866  00004C                     	ds	1
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 186 in file "src/main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  ic             28   46[BANK1 ] struct __i2c_comm
   884 ;;  msgbuffer      11   21[BANK1 ] unsigned char [11]
   885 ;;  uc              5   39[BANK1 ] struct __uart_comm
   886 ;;  t1thread_dat    2   37[BANK1 ] struct __timer1_thread_s
   887 ;;  uthread_data    2   35[BANK1 ] struct __uart_thread_str
   888 ;;  t0thread_dat    2   19[BANK1 ] struct __timer0_thread_s
   889 ;;  length          1   45[BANK1 ] char 
   890 ;;  msgtype         1   44[BANK1 ] unsigned char 
   891 ;;  UARTConfig      1   34[BANK1 ] unsigned char 
   892 ;;  baud            1   33[BANK1 ] unsigned char 
   893 ;;  last_reg_rec    1   32[BANK1 ] unsigned char 
   894 ;;  i               1    0        unsigned char 
   895 ;;  c               1    0        unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;		None               void
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0      55       0       0
   907 ;;      Temps:          0       0       1       0       0
   908 ;;      Totals:         0       0      56       0       0
   909 ;;Total ram usage:       56 bytes
   910 ;; Hardware stack levels required when called:   14
   911 ;; This function calls:
   912 ;;		_OpenTimer0
   913 ;;		_OpenTimer1
   914 ;;		_OpenUSART
   915 ;;		_ToMainHigh_recvmsg
   916 ;;		_ToMainLow_recvmsg
   917 ;;		_block_on_To_msgqueues
   918 ;;		_enable_interrupts
   919 ;;		_i2c_configure_slave
   920 ;;		_init_i2c
   921 ;;		_init_queues
   922 ;;		_init_timer1_lthread
   923 ;;		_init_uart_recv
   924 ;;		_start_i2c_slave_reply
   925 ;;		_timer0_lthread
   926 ;;		_timer1_lthread
   927 ;;		_uart_lthread
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text0
   934  00069C                     __ptext0:
   935                           	opt stack 0
   936  00069C                     _main:
   937                           	opt stack 17
   938                           
   939                           ;main.c: 187: char c;
   940                           ;main.c: 188: signed char length;
   941                           ;main.c: 189: unsigned char msgtype;
   942                           ;main.c: 190: unsigned char last_reg_recvd;
   943                           ;main.c: 191: unsigned char baud, UARTConfig;
   944                           ;main.c: 192: uart_comm uc;
   945                           ;main.c: 193: i2c_comm ic;
   946                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   947                           ;main.c: 195: unsigned char i;
   948                           ;main.c: 196: uart_thread_struct uthread_data;
   949                           ;main.c: 197: timer1_thread_struct t1thread_data;
   950                           ;main.c: 198: timer0_thread_struct t0thread_data;
   951                           ;main.c: 206: OSCCON = 0x82;
   952                           
   953                           ;incstack = 0
   954  00069C  0E82               	movlw	130
   955  00069E  6ED3               	movwf	4051,c	;volatile
   956                           
   957                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   958  0006A0  9C9B               	bcf	3995,6,c	;volatile
   959                           
   960                           ;main.c: 225: init_uart_recv(&uc);
   961  0006A2  0101               	movlb	1	; () banked
   962  0006A4  0E01               	movlw	high main@uc
   963  0006A6  0100               	movlb	0	; () banked
   964  0006A8  0100               	movlb	0	; () banked
   965  0006AA  6FCE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   966  0006AC  0101               	movlb	1	; () banked
   967  0006AE  0EC9               	movlw	low main@uc
   968  0006B0  0100               	movlb	0	; () banked
   969  0006B2  0100               	movlb	0	; () banked
   970  0006B4  6FCD               	movwf	init_uart_recv@uc& (0+255),b
   971  0006B6  EC5F  F00D         	call	_init_uart_recv	;wreg free
   972                           
   973                           ;main.c: 228: init_i2c(&ic);
   974  0006BA  0101               	movlb	1	; () banked
   975  0006BC  0E01               	movlw	high main@ic
   976  0006BE  0100               	movlb	0	; () banked
   977  0006C0  0100               	movlb	0	; () banked
   978  0006C2  6FCE               	movwf	(init_i2c@ic+1)& (0+255),b
   979  0006C4  0101               	movlb	1	; () banked
   980  0006C6  0ED0               	movlw	low main@ic
   981  0006C8  0100               	movlb	0	; () banked
   982  0006CA  0100               	movlb	0	; () banked
   983  0006CC  6FCD               	movwf	init_i2c@ic& (0+255),b
   984  0006CE  EC7D  F00A         	call	_init_i2c	;wreg free
   985                           
   986                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   987  0006D2  0101               	movlb	1	; () banked
   988  0006D4  0E01               	movlw	high main@t1thread_data
   989  0006D6  0100               	movlb	0	; () banked
   990  0006D8  0100               	movlb	0	; () banked
   991  0006DA  6FCE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   992  0006DC  0101               	movlb	1	; () banked
   993  0006DE  0EC7               	movlw	low main@t1thread_data
   994  0006E0  0100               	movlb	0	; () banked
   995  0006E2  0100               	movlb	0	; () banked
   996  0006E4  6FCD               	movwf	init_timer1_lthread@tptr& (0+255),b
   997  0006E6  ECA4  F00D         	call	_init_timer1_lthread	;wreg free
   998                           
   999                           ;main.c: 234: init_queues();
  1000  0006EA  EC46  F00A         	call	_init_queues	;wreg free
  1001                           
  1002                           ;main.c: 238: TRISB = 0x0;
  1003  0006EE  0E00               	movlw	0
  1004  0006F0  6E93               	movwf	3987,c	;volatile
  1005                           
  1006                           ;main.c: 239: LATB = 0x0;
  1007  0006F2  0E00               	movlw	0
  1008  0006F4  6E8A               	movwf	3978,c	;volatile
  1009                           
  1010                           ;main.c: 243: PORTA = 0x0;
  1011  0006F6  0E00               	movlw	0
  1012  0006F8  6E80               	movwf	3968,c	;volatile
  1013                           
  1014                           ;main.c: 244: LATA = 0x0;
  1015  0006FA  0E00               	movlw	0
  1016  0006FC  6E89               	movwf	3977,c	;volatile
  1017                           
  1018                           ;main.c: 245: ADCON1 = 0x0F;
  1019  0006FE  0E0F               	movlw	15
  1020  000700  6EC1               	movwf	4033,c	;volatile
  1021                           
  1022                           ;main.c: 246: CMCON = 0x07;
  1023  000702  0E07               	movlw	7
  1024  000704  6EB4               	movwf	4020,c	;volatile
  1025                           
  1026                           ;main.c: 247: TRISA = 0x00;
  1027  000706  0E00               	movlw	0
  1028  000708  6E92               	movwf	3986,c	;volatile
  1029                           
  1030                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1031  00070A  0E96               	movlw	150
  1032  00070C  ECE9  F00C         	call	_OpenTimer0
  1033                           
  1034                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1035  000710  0EF5               	movlw	245
  1036  000712  EC51  F00C         	call	_OpenTimer1
  1037                           
  1038                           ;main.c: 267: IPR1bits.TMR1IP = 0;
  1039  000716  909F               	bcf	3999,0,c	;volatile
  1040                           
  1041                           ;main.c: 269: IPR1bits.RCIP = 0;
  1042  000718  9A9F               	bcf	3999,5,c	;volatile
  1043                           
  1044                           ;main.c: 271: IPR1bits.TXIP = 0;
  1045  00071A  989F               	bcf	3999,4,c	;volatile
  1046                           
  1047                           ;main.c: 273: IPR1bits.SSPIP = 1;
  1048  00071C  869F               	bsf	3999,3,c	;volatile
  1049                           
  1050                           ;main.c: 282: i2c_configure_slave(0x9E);
  1051  00071E  0E9E               	movlw	158
  1052  000720  EC13  F00D         	call	_i2c_configure_slave
  1053                           
  1054                           ;main.c: 297: PIE1bits.SSPIE = 1;
  1055  000724  869D               	bsf	3997,3,c	;volatile
  1056                           
  1057                           ;main.c: 308: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1058  000726  0101               	movlb	1	; () banked
  1059  000728  6FB4               	movwf	??_main& (0+255),b
  1060  00072A  0EFC               	movlw	252
  1061  00072C  0101               	movlb	1	; () banked
  1062  00072E  0101               	movlb	1	; () banked
  1063  000730  6FC4               	movwf	main@UARTConfig& (0+255),b
  1064  000732  0101               	movlb	1	; () banked
  1065  000734  51B4               	movf	??_main& (0+255),w,b
  1066                           
  1067                           ; BSR set to: 1
  1068                           ;main.c: 309: baud = 77;
  1069  000736  0101               	movlb	1	; () banked
  1070  000738  6FB4               	movwf	??_main& (0+255),b
  1071  00073A  0E4D               	movlw	77
  1072  00073C  0101               	movlb	1	; () banked
  1073  00073E  0101               	movlb	1	; () banked
  1074  000740  6FC3               	movwf	main@baud& (0+255),b
  1075  000742  0101               	movlb	1	; () banked
  1076  000744  51B4               	movf	??_main& (0+255),w,b
  1077                           
  1078                           ; BSR set to: 1
  1079                           ;main.c: 310: OpenUSART(UARTConfig,baud);
  1080  000746  0101               	movlb	1	; () banked
  1081  000748  0100               	movlb	0	; () banked
  1082  00074A  C1C3  F0CD         	movff	main@baud,OpenUSART@spbrg
  1083  00074E  0100               	movlb	0	; () banked
  1084  000750  0100               	movlb	0	; () banked
  1085  000752  6BCE               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1086  000754  0101               	movlb	1	; () banked
  1087  000756  0101               	movlb	1	; () banked
  1088  000758  51C4               	movf	main@UARTConfig& (0+255),w,b
  1089  00075A  ECFB  F008         	call	_OpenUSART
  1090                           
  1091                           ;main.c: 316: enable_interrupts();
  1092  00075E  ECD7  F00D         	call	_enable_interrupts	;wreg free
  1093  000762                     l3258:
  1094                           
  1095                           ;main.c: 340: block_on_To_msgqueues();
  1096  000762  ECCA  F009         	call	_block_on_To_msgqueues	;wreg free
  1097                           
  1098                           ;main.c: 347: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1099  000766  0101               	movlb	1	; () banked
  1100  000768  0E01               	movlw	high main@msgtype
  1101  00076A  0101               	movlb	1	; () banked
  1102  00076C  0101               	movlb	1	; () banked
  1103  00076E  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1104  000770  0101               	movlb	1	; () banked
  1105  000772  0ECE               	movlw	low main@msgtype
  1106  000774  0101               	movlb	1	; () banked
  1107  000776  0101               	movlb	1	; () banked
  1108  000778  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1109  00077A  0101               	movlb	1	; () banked
  1110  00077C  0E01               	movlw	high main@msgbuffer
  1111  00077E  0101               	movlb	1	; () banked
  1112  000780  0101               	movlb	1	; () banked
  1113  000782  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1114  000784  0101               	movlb	1	; () banked
  1115  000786  0EB7               	movlw	low main@msgbuffer
  1116  000788  0101               	movlb	1	; () banked
  1117  00078A  0101               	movlb	1	; () banked
  1118  00078C  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1119  00078E  0E0A               	movlw	10
  1120  000790  ECD1  F00B         	call	_ToMainHigh_recvmsg
  1121  000794  0101               	movlb	1	; () banked
  1122  000796  0101               	movlb	1	; () banked
  1123  000798  6FCF               	movwf	main@length& (0+255),b
  1124                           
  1125                           ; BSR set to: 1
  1126                           ;main.c: 348: if (length < 0) {
  1127  00079A  0101               	movlb	1	; () banked
  1128  00079C  0101               	movlb	1	; () banked
  1129  00079E  BFCF               	btfsc	main@length& (0+255),7,b
  1130  0007A0  D08D               	goto	l3284
  1131  0007A2  D07D               	goto	l3282
  1132  0007A4                     l3266:
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;main.c: 356: {
  1136                           ;main.c: 357: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1137  0007A4  0101               	movlb	1	; () banked
  1138  0007A6  0E01               	movlw	high main@t0thread_data
  1139  0007A8  0100               	movlb	0	; () banked
  1140  0007AA  0100               	movlb	0	; () banked
  1141  0007AC  6FCE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1142  0007AE  0101               	movlb	1	; () banked
  1143  0007B0  0EB5               	movlw	low main@t0thread_data
  1144  0007B2  0100               	movlb	0	; () banked
  1145  0007B4  0100               	movlb	0	; () banked
  1146  0007B6  6FCD               	movwf	timer0_lthread@tptr& (0+255),b
  1147  0007B8  0101               	movlb	1	; () banked
  1148  0007BA  0100               	movlb	0	; () banked
  1149  0007BC  C1CE  F0CF         	movff	main@msgtype,timer0_lthread@msgtype
  1150  0007C0  0100               	movlb	0	; () banked
  1151  0007C2  0100               	movlb	0	; () banked
  1152  0007C4  6BD0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1153  0007C6  0101               	movlb	1	; () banked
  1154  0007C8  0101               	movlb	1	; () banked
  1155  0007CA  51CF               	movf	main@length& (0+255),w,b
  1156  0007CC  0100               	movlb	0	; () banked
  1157  0007CE  0100               	movlb	0	; () banked
  1158  0007D0  6FD1               	movwf	timer0_lthread@length& (0+255),b
  1159  0007D2  0100               	movlb	0	; () banked
  1160  0007D4  6BD2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1161  0007D6  0100               	movlb	0	; () banked
  1162  0007D8  BFD1               	btfsc	timer0_lthread@length& (0+255),7,b
  1163  0007DA  07D2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1164  0007DC  0101               	movlb	1	; () banked
  1165  0007DE  0E01               	movlw	high main@msgbuffer
  1166  0007E0  0100               	movlb	0	; () banked
  1167  0007E2  0100               	movlb	0	; () banked
  1168  0007E4  6FD4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1169  0007E6  0101               	movlb	1	; () banked
  1170  0007E8  0EB7               	movlw	low main@msgbuffer
  1171  0007EA  0100               	movlb	0	; () banked
  1172  0007EC  0100               	movlb	0	; () banked
  1173  0007EE  6FD3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1174  0007F0  EC9B  F00D         	call	_timer0_lthread	;wreg free
  1175                           
  1176                           ;main.c: 358: break;
  1177  0007F4  D063               	goto	l3284
  1178  0007F6                     l113:
  1179                           
  1180                           ;main.c: 361: case 41:
  1181                           ;main.c: 362: {
  1182                           ;main.c: 365: last_reg_recvd = msgbuffer[0];
  1183  0007F6  C1B7  F1C2         	movff	main@msgbuffer,main@last_reg_recvd
  1184                           
  1185                           ;main.c: 366: break;
  1186  0007FA  D060               	goto	l3284
  1187  0007FC                     l3268:
  1188                           
  1189                           ;main.c: 379: {
  1190                           ;main.c: 380: length = 2;
  1191  0007FC  0101               	movlb	1	; () banked
  1192  0007FE  6FB4               	movwf	??_main& (0+255),b
  1193  000800  0E02               	movlw	2
  1194  000802  0101               	movlb	1	; () banked
  1195  000804  0101               	movlb	1	; () banked
  1196  000806  6FCF               	movwf	main@length& (0+255),b
  1197  000808  0101               	movlb	1	; () banked
  1198  00080A  51B4               	movf	??_main& (0+255),w,b
  1199                           
  1200                           ;main.c: 381: msgbuffer[0] = 0x55;
  1201  00080C  0101               	movlb	1	; () banked
  1202  00080E  6FB4               	movwf	??_main& (0+255),b
  1203  000810  0E55               	movlw	85
  1204  000812  0101               	movlb	1	; () banked
  1205  000814  0101               	movlb	1	; () banked
  1206  000816  6FB7               	movwf	main@msgbuffer& (0+255),b
  1207  000818  0101               	movlb	1	; () banked
  1208  00081A  51B4               	movf	??_main& (0+255),w,b
  1209                           
  1210                           ;main.c: 382: msgbuffer[1] = 0xAA;
  1211  00081C  0101               	movlb	1	; () banked
  1212  00081E  6FB4               	movwf	??_main& (0+255),b
  1213  000820  0EAA               	movlw	170
  1214  000822  0101               	movlb	1	; () banked
  1215  000824  0101               	movlb	1	; () banked
  1216  000826  6FB8               	movwf	(main@msgbuffer+1)& (0+255),b
  1217  000828  D00C               	goto	L1
  1218  00082A                     l3270:
  1219                           
  1220                           ; BSR set to: 1
  1221                           ;main.c: 386: {
  1222                           ;main.c: 387: length = 1;
  1223  00082A  0101               	movlb	1	; () banked
  1224  00082C  6FB4               	movwf	??_main& (0+255),b
  1225  00082E  0E01               	movlw	1
  1226  000830  0101               	movlb	1	; () banked
  1227  000832  0101               	movlb	1	; () banked
  1228  000834  6FCF               	movwf	main@length& (0+255),b
  1229  000836  0101               	movlb	1	; () banked
  1230  000838  51B4               	movf	??_main& (0+255),w,b
  1231                           
  1232                           ;main.c: 388: msgbuffer[0] = 0x3A;
  1233  00083A  0101               	movlb	1	; () banked
  1234  00083C  6FB4               	movwf	??_main& (0+255),b
  1235  00083E  0E3A               	movlw	58
  1236  000840  D00E               	goto	L2
  1237  000842                     L1:
  1238  000842  0101               	movlb	1	; () banked
  1239  000844  51B4               	movf	??_main& (0+255),w,b
  1240                           
  1241                           ;main.c: 389: break;
  1242  000846  D01B               	goto	l3278
  1243  000848                     l3272:
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 392: {
  1247                           ;main.c: 393: length = 1;
  1248  000848  0101               	movlb	1	; () banked
  1249  00084A  6FB4               	movwf	??_main& (0+255),b
  1250  00084C  0E01               	movlw	1
  1251  00084E  0101               	movlb	1	; () banked
  1252  000850  0101               	movlb	1	; () banked
  1253  000852  6FCF               	movwf	main@length& (0+255),b
  1254  000854  0101               	movlb	1	; () banked
  1255  000856  51B4               	movf	??_main& (0+255),w,b
  1256                           
  1257                           ;main.c: 394: msgbuffer[0] = 0xA3;
  1258  000858  0101               	movlb	1	; () banked
  1259  00085A  6FB4               	movwf	??_main& (0+255),b
  1260  00085C  0EA3               	movlw	163
  1261  00085E                     L2:
  1262  00085E  0101               	movlb	1	; () banked
  1263  000860  0101               	movlb	1	; () banked
  1264  000862  6FB7               	movwf	main@msgbuffer& (0+255),b
  1265  000864  D7EE               	goto	L1
  1266  000866                     l3276:
  1267  000866  0101               	movlb	1	; () banked
  1268  000868  0101               	movlb	1	; () banked
  1269  00086A  51C2               	movf	main@last_reg_recvd& (0+255),w,b
  1270                           
  1271                           ; Switch size 1, requested type "space"
  1272                           ; Number of cases is 3, Range of values is 168 to 170
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           10     6 (average)
  1276                           ;	Chosen strategy is simple_byte
  1277  00086C  0AA8               	xorlw	168	; case 168
  1278  00086E  B4D8               	btfsc	status,2,c
  1279  000870  D7DC               	goto	l3270
  1280  000872  0A01               	xorlw	1	; case 169
  1281  000874  B4D8               	btfsc	status,2,c
  1282  000876  D7E8               	goto	l3272
  1283  000878  0A03               	xorlw	3	; case 170
  1284  00087A  B4D8               	btfsc	status,2,c
  1285  00087C  D7BF               	goto	l3268
  1286  00087E                     l3278:
  1287                           
  1288                           ; BSR set to: 1
  1289                           ;main.c: 398: start_i2c_slave_reply(length, msgbuffer);
  1290  00087E  0101               	movlb	1	; () banked
  1291  000880  0E01               	movlw	high main@msgbuffer
  1292  000882  0100               	movlb	0	; () banked
  1293  000884  0100               	movlb	0	; () banked
  1294  000886  6FCE               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1295  000888  0101               	movlb	1	; () banked
  1296  00088A  0EB7               	movlw	low main@msgbuffer
  1297  00088C  0100               	movlb	0	; () banked
  1298  00088E  0100               	movlb	0	; () banked
  1299  000890  6FCD               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1300  000892  0101               	movlb	1	; () banked
  1301  000894  0101               	movlb	1	; () banked
  1302  000896  51CF               	movf	main@length& (0+255),w,b
  1303  000898  EC2D  F006         	call	_start_i2c_slave_reply
  1304                           
  1305                           ;main.c: 399: break;
  1306  00089C  D00F               	goto	l3284
  1307  00089E                     l3282:
  1308  00089E  0101               	movlb	1	; () banked
  1309  0008A0  0101               	movlb	1	; () banked
  1310  0008A2  51CE               	movf	main@msgtype& (0+255),w,b
  1311                           
  1312                           ; Switch size 1, requested type "space"
  1313                           ; Number of cases is 4, Range of values is 10 to 42
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte           13     7 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318  0008A4  0A0A               	xorlw	10	; case 10
  1319  0008A6  B4D8               	btfsc	status,2,c
  1320  0008A8  D77D               	goto	l3266
  1321  0008AA  0A22               	xorlw	34	; case 40
  1322  0008AC  B4D8               	btfsc	status,2,c
  1323  0008AE  D7A3               	goto	l113
  1324  0008B0  0A01               	xorlw	1	; case 41
  1325  0008B2  B4D8               	btfsc	status,2,c
  1326  0008B4  D7A0               	goto	l113
  1327  0008B6  0A03               	xorlw	3	; case 42
  1328  0008B8  B4D8               	btfsc	status,2,c
  1329  0008BA  D7D5               	goto	l3276
  1330  0008BC                     l3284:
  1331                           
  1332                           ;main.c: 407: }
  1333                           ;main.c: 410: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1334  0008BC  0101               	movlb	1	; () banked
  1335  0008BE  0E01               	movlw	high main@msgtype
  1336  0008C0  0101               	movlb	1	; () banked
  1337  0008C2  0101               	movlb	1	; () banked
  1338  0008C4  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1339  0008C6  0101               	movlb	1	; () banked
  1340  0008C8  0ECE               	movlw	low main@msgtype
  1341  0008CA  0101               	movlb	1	; () banked
  1342  0008CC  0101               	movlb	1	; () banked
  1343  0008CE  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1344  0008D0  0101               	movlb	1	; () banked
  1345  0008D2  0E01               	movlw	high main@msgbuffer
  1346  0008D4  0101               	movlb	1	; () banked
  1347  0008D6  0101               	movlb	1	; () banked
  1348  0008D8  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1349  0008DA  0101               	movlb	1	; () banked
  1350  0008DC  0EB7               	movlw	low main@msgbuffer
  1351  0008DE  0101               	movlb	1	; () banked
  1352  0008E0  0101               	movlb	1	; () banked
  1353  0008E2  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1354  0008E4  0E0A               	movlw	10
  1355  0008E6  ECB0  F00B         	call	_ToMainLow_recvmsg
  1356  0008EA  0101               	movlb	1	; () banked
  1357  0008EC  0101               	movlb	1	; () banked
  1358  0008EE  6FCF               	movwf	main@length& (0+255),b
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 411: if (length < 0) {
  1362  0008F0  0101               	movlb	1	; () banked
  1363  0008F2  0101               	movlb	1	; () banked
  1364  0008F4  BFCF               	btfsc	main@length& (0+255),7,b
  1365  0008F6  D735               	goto	l3258
  1366  0008F8  D07B               	goto	l3298
  1367  0008FA                     l3290:
  1368                           
  1369                           ; BSR set to: 1
  1370                           ;main.c: 419: {
  1371                           ;main.c: 420: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1372  0008FA  0101               	movlb	1	; () banked
  1373  0008FC  0E01               	movlw	high main@t1thread_data
  1374  0008FE  0101               	movlb	1	; () banked
  1375  000900  0101               	movlb	1	; () banked
  1376  000902  6FA6               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1377  000904  0101               	movlb	1	; () banked
  1378  000906  0EC7               	movlw	low main@t1thread_data
  1379  000908  0101               	movlb	1	; () banked
  1380  00090A  0101               	movlb	1	; () banked
  1381  00090C  6FA5               	movwf	timer1_lthread@tptr& (0+255),b
  1382  00090E  0101               	movlb	1	; () banked
  1383  000910  0101               	movlb	1	; () banked
  1384  000912  C1CE  F1A7         	movff	main@msgtype,timer1_lthread@msgtype
  1385  000916  0101               	movlb	1	; () banked
  1386  000918  0101               	movlb	1	; () banked
  1387  00091A  6BA8               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1388  00091C  0101               	movlb	1	; () banked
  1389  00091E  0101               	movlb	1	; () banked
  1390  000920  51CF               	movf	main@length& (0+255),w,b
  1391  000922  0101               	movlb	1	; () banked
  1392  000924  0101               	movlb	1	; () banked
  1393  000926  6FA9               	movwf	timer1_lthread@length& (0+255),b
  1394  000928  0101               	movlb	1	; () banked
  1395  00092A  6BAA               	clrf	(timer1_lthread@length+1)& (0+255),b
  1396  00092C  0101               	movlb	1	; () banked
  1397  00092E  BFA9               	btfsc	timer1_lthread@length& (0+255),7,b
  1398  000930  07AA               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1399  000932  0101               	movlb	1	; () banked
  1400  000934  0E01               	movlw	high main@msgbuffer
  1401  000936  0101               	movlb	1	; () banked
  1402  000938  0101               	movlb	1	; () banked
  1403  00093A  6FAC               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1404  00093C  0101               	movlb	1	; () banked
  1405  00093E  0EB7               	movlw	low main@msgbuffer
  1406  000940  0101               	movlb	1	; () banked
  1407  000942  0101               	movlb	1	; () banked
  1408  000944  6FAB               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1409  000946  ECA3  F005         	call	_timer1_lthread	;wreg free
  1410                           
  1411                           ;main.c: 421: break;
  1412  00094A  D70B               	goto	l3258
  1413  00094C                     l3292:
  1414                           
  1415                           ;main.c: 424: case 31:
  1416                           ;main.c: 425: {
  1417                           ;main.c: 426: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1418  00094C  0101               	movlb	1	; () banked
  1419  00094E  0E01               	movlw	high main@uthread_data
  1420  000950  0100               	movlb	0	; () banked
  1421  000952  0100               	movlb	0	; () banked
  1422  000954  6FD1               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1423  000956  0101               	movlb	1	; () banked
  1424  000958  0EC5               	movlw	low main@uthread_data
  1425  00095A  0100               	movlb	0	; () banked
  1426  00095C  0100               	movlb	0	; () banked
  1427  00095E  6FD0               	movwf	uart_lthread@uptr& (0+255),b
  1428  000960  0101               	movlb	1	; () banked
  1429  000962  0100               	movlb	0	; () banked
  1430  000964  C1CE  F0D2         	movff	main@msgtype,uart_lthread@msgtype
  1431  000968  0100               	movlb	0	; () banked
  1432  00096A  0100               	movlb	0	; () banked
  1433  00096C  6BD3               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1434  00096E  0101               	movlb	1	; () banked
  1435  000970  0101               	movlb	1	; () banked
  1436  000972  51CF               	movf	main@length& (0+255),w,b
  1437  000974  0100               	movlb	0	; () banked
  1438  000976  0100               	movlb	0	; () banked
  1439  000978  6FD4               	movwf	uart_lthread@length& (0+255),b
  1440  00097A  0100               	movlb	0	; () banked
  1441  00097C  6BD5               	clrf	(uart_lthread@length+1)& (0+255),b
  1442  00097E  0100               	movlb	0	; () banked
  1443  000980  BFD4               	btfsc	uart_lthread@length& (0+255),7,b
  1444  000982  07D5               	decf	(uart_lthread@length+1)& (0+255),f,b
  1445  000984  0101               	movlb	1	; () banked
  1446  000986  0E01               	movlw	high main@msgbuffer
  1447  000988  0100               	movlb	0	; () banked
  1448  00098A  0100               	movlb	0	; () banked
  1449  00098C  6FD7               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1450  00098E  0101               	movlb	1	; () banked
  1451  000990  0EB7               	movlw	low main@msgbuffer
  1452  000992  0100               	movlb	0	; () banked
  1453  000994  0100               	movlb	0	; () banked
  1454  000996  6FD6               	movwf	uart_lthread@msgbuffer& (0+255),b
  1455  000998  ECE4  F00A         	call	_uart_lthread	;wreg free
  1456                           
  1457                           ;main.c: 427: break;
  1458  00099C  D6E2               	goto	l3258
  1459  00099E                     l3294:
  1460                           
  1461                           ;main.c: 430: {
  1462                           ;main.c: 431: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1463  00099E  0101               	movlb	1	; () banked
  1464  0009A0  0E01               	movlw	high main@uthread_data
  1465  0009A2  0100               	movlb	0	; () banked
  1466  0009A4  0100               	movlb	0	; () banked
  1467  0009A6  6FD1               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1468  0009A8  0101               	movlb	1	; () banked
  1469  0009AA  0EC5               	movlw	low main@uthread_data
  1470  0009AC  0100               	movlb	0	; () banked
  1471  0009AE  0100               	movlb	0	; () banked
  1472  0009B0  6FD0               	movwf	uart_lthread@uptr& (0+255),b
  1473  0009B2  0101               	movlb	1	; () banked
  1474  0009B4  0100               	movlb	0	; () banked
  1475  0009B6  C1CE  F0D2         	movff	main@msgtype,uart_lthread@msgtype
  1476  0009BA  0100               	movlb	0	; () banked
  1477  0009BC  0100               	movlb	0	; () banked
  1478  0009BE  6BD3               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1479  0009C0  0101               	movlb	1	; () banked
  1480  0009C2  0101               	movlb	1	; () banked
  1481  0009C4  51CF               	movf	main@length& (0+255),w,b
  1482  0009C6  0100               	movlb	0	; () banked
  1483  0009C8  0100               	movlb	0	; () banked
  1484  0009CA  6FD4               	movwf	uart_lthread@length& (0+255),b
  1485  0009CC  0100               	movlb	0	; () banked
  1486  0009CE  6BD5               	clrf	(uart_lthread@length+1)& (0+255),b
  1487  0009D0  0100               	movlb	0	; () banked
  1488  0009D2  BFD4               	btfsc	uart_lthread@length& (0+255),7,b
  1489  0009D4  07D5               	decf	(uart_lthread@length+1)& (0+255),f,b
  1490  0009D6  0101               	movlb	1	; () banked
  1491  0009D8  0E01               	movlw	high main@msgbuffer
  1492  0009DA  0100               	movlb	0	; () banked
  1493  0009DC  0100               	movlb	0	; () banked
  1494  0009DE  6FD7               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1495  0009E0  0101               	movlb	1	; () banked
  1496  0009E2  0EB7               	movlw	low main@msgbuffer
  1497  0009E4  0100               	movlb	0	; () banked
  1498  0009E6  0100               	movlb	0	; () banked
  1499  0009E8  6FD6               	movwf	uart_lthread@msgbuffer& (0+255),b
  1500  0009EA  ECE4  F00A         	call	_uart_lthread	;wreg free
  1501                           
  1502                           ;main.c: 432: break;
  1503  0009EE  D6B9               	goto	l3258
  1504  0009F0                     l3298:
  1505  0009F0  0101               	movlb	1	; () banked
  1506  0009F2  0101               	movlb	1	; () banked
  1507  0009F4  51CE               	movf	main@msgtype& (0+255),w,b
  1508                           
  1509                           ; Switch size 1, requested type "space"
  1510                           ; Number of cases is 4, Range of values is 11 to 32
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte           13     7 (average)
  1514                           ;	Chosen strategy is simple_byte
  1515  0009F6  0A0B               	xorlw	11	; case 11
  1516  0009F8  B4D8               	btfsc	status,2,c
  1517  0009FA  D77F               	goto	l3290
  1518  0009FC  0A15               	xorlw	21	; case 30
  1519  0009FE  B4D8               	btfsc	status,2,c
  1520  000A00  D7A5               	goto	l3292
  1521  000A02  0A01               	xorlw	1	; case 31
  1522  000A04  B4D8               	btfsc	status,2,c
  1523  000A06  D7A2               	goto	l3292
  1524  000A08  0A3F               	xorlw	63	; case 32
  1525  000A0A  B4D8               	btfsc	status,2,c
  1526  000A0C  D7C8               	goto	l3294
  1527  000A0E  D6A9               	goto	l3258
  1528  000A10                     __end_of_main:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _uart_lthread *****************
  1539 ;; Defined at:
  1540 ;;		line 9 in file "src/uart_thread.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  uptr            2   26[BANK0 ] PTR struct __uart_thread
  1543 ;;		 -> main@uthread_data(2), 
  1544 ;;  msgtype         2   28[BANK0 ] int 
  1545 ;;  length          2   30[BANK0 ] int 
  1546 ;;  msgbuffer       2   32[BANK0 ] PTR unsigned char 
  1547 ;;		 -> main@msgbuffer(11), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   26[BANK0 ] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1559 ;;      Params:         0       8       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       8       0       0       0
  1563 ;;Total ram usage:        8 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:   12
  1566 ;; This function calls:
  1567 ;;		_putsUSART
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text1
  1574  0015C8                     __ptext1:
  1575                           	opt stack 0
  1576  0015C8                     _uart_lthread:
  1577                           	opt stack 18
  1578                           
  1579                           ;uart_thread.c: 10: if (msgtype == 30) {
  1580                           
  1581                           ; BSR set to: 1
  1582                           ;incstack = 0
  1583  0015C8  0100               	movlb	0	; () banked
  1584  0015CA  0100               	movlb	0	; () banked
  1585  0015CC  51D2               	movf	uart_lthread@msgtype& (0+255),w,b
  1586  0015CE  0A1E               	xorlw	30
  1587  0015D0  11D3               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1588  0015D2  B4D8               	btfsc	status,2,c
  1589  0015D4  0012               	return	
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;uart_thread.c: 18: else if(msgtype == 31) putsUSART(msgbuffer);
  1593                           
  1594                           ; BSR set to: 0
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;uart_thread.c: 11: }
  1598  0015D6  0100               	movlb	0	; () banked
  1599  0015D8  0100               	movlb	0	; () banked
  1600  0015DA  51D2               	movf	uart_lthread@msgtype& (0+255),w,b
  1601  0015DC  0A1F               	xorlw	31
  1602  0015DE  11D3               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1603  0015E0  A4D8               	btfss	status,2,c
  1604  0015E2  D00B               	goto	l2668
  1605                           
  1606                           ; BSR set to: 0
  1607  0015E4  0100               	movlb	0	; () banked
  1608  0015E6  0100               	movlb	0	; () banked
  1609  0015E8  C0D7  F0CF         	movff	uart_lthread@msgbuffer+1,putsUSART@data+1
  1610  0015EC  0100               	movlb	0	; () banked
  1611  0015EE  0100               	movlb	0	; () banked
  1612  0015F0  C0D6  F0CE         	movff	uart_lthread@msgbuffer,putsUSART@data
  1613  0015F4  ECBB  F00C         	call	_putsUSART	;wreg free
  1614  0015F8  0012               	return	
  1615  0015FA                     l2668:
  1616                           
  1617                           ;uart_thread.c: 19: else if(msgtype == 32){
  1618  0015FA  0100               	movlb	0	; () banked
  1619  0015FC  0100               	movlb	0	; () banked
  1620  0015FE  51D2               	movf	uart_lthread@msgtype& (0+255),w,b
  1621  001600  0A20               	xorlw	32
  1622  001602  11D3               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1623  001604  A4D8               	btfss	status,2,c
  1624  001606  0012               	return	
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;uart_thread.c: 23: msgbuffer[length] = '\0';
  1628  001608  0100               	movlb	0	; () banked
  1629  00160A  0100               	movlb	0	; () banked
  1630  00160C  51D4               	movf	uart_lthread@length& (0+255),w,b
  1631  00160E  0100               	movlb	0	; () banked
  1632  001610  0100               	movlb	0	; () banked
  1633  001612  25D6               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1634  001614  6ED9               	movwf	fsr2l,c
  1635  001616  0100               	movlb	0	; () banked
  1636  001618  0100               	movlb	0	; () banked
  1637  00161A  51D5               	movf	(uart_lthread@length+1)& (0+255),w,b
  1638  00161C  0100               	movlb	0	; () banked
  1639  00161E  0100               	movlb	0	; () banked
  1640  001620  21D7               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1641  001622  6EDA               	movwf	fsr2h,c
  1642  001624  0E00               	movlw	0
  1643  001626  6EDF               	movwf	indf2,c
  1644  001628  0012               	return	
  1645  00162A                     __end_of_uart_lthread:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           indf2	equ	0xFDF
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _putsUSART *****************
  1659 ;; Defined at:
  1660 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uputs.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  data            2   24[BANK0 ] PTR unsigned char 
  1663 ;;		 -> main@msgbuffer(11), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1675 ;;      Params:         0       2       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         0       2       0       0       0
  1679 ;;Total ram usage:        2 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:   11
  1682 ;; This function calls:
  1683 ;;		_WriteUSART
  1684 ;; This function is called by:
  1685 ;;		_uart_lthread
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text2
  1690  001976                     __ptext2:
  1691                           	opt stack 0
  1692  001976                     _putsUSART:
  1693                           	opt stack 18
  1694  001976                     l489:
  1695  001976  A2AC               	btfss	4012,1,c	;volatile
  1696  001978  D7FE               	goto	l489
  1697  00197A  C0CE  FFD9         	movff	putsUSART@data,fsr2l
  1698  00197E  C0CF  FFDA         	movff	putsUSART@data+1,fsr2h
  1699  001982  50DF               	movf	indf2,w,c
  1700  001984  EC88  F00D         	call	_WriteUSART
  1701  001988  0100               	movlb	0	; () banked
  1702  00198A  C0CE  FFD9         	movff	putsUSART@data,fsr2l
  1703  00198E  0100               	movlb	0	; () banked
  1704  001990  C0CF  FFDA         	movff	putsUSART@data+1,fsr2h
  1705  001994  0100               	movlb	0	; () banked
  1706  001996  0100               	movlb	0	; () banked
  1707  001998  4BCE               	infsnz	putsUSART@data& (0+255),f,b
  1708  00199A  2BCF               	incf	(putsUSART@data+1)& (0+255),f,b
  1709  00199C  50DF               	movf	indf2,w,c
  1710  00199E  B4D8               	btfsc	status,2,c
  1711                           
  1712                           ; BSR set to: 0
  1713                           
  1714                           ; BSR set to: 0
  1715  0019A0  0012               	return	
  1716  0019A2  D7E9               	goto	l489
  1717  0019A4                     __end_of_putsUSART:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           indf2	equ	0xFDF
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _WriteUSART *****************
  1731 ;; Defined at:
  1732 ;;		line 13 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  data            1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  data            1   23[BANK0 ] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       1       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         0       1       0       0       0
  1750 ;;Total ram usage:        1 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:   10
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_putsUSART
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text3
  1761  001B10                     __ptext3:
  1762                           	opt stack 0
  1763  001B10                     _WriteUSART:
  1764                           	opt stack 18
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;incstack = 0
  1768                           ;WriteUSART@data stored from wreg
  1769  001B10  CFE8 F0CD          	movff	wreg,WriteUSART@data
  1770  001B14  ACAC               	btfss	4012,6,c	;volatile
  1771  001B16  D003               	goto	l2830
  1772  001B18  90AC               	bcf	4012,0,c	;volatile
  1773  001B1A  B250               	btfsc	_USART_Status,1,c
  1774  001B1C  80AC               	bsf	4012,0,c	;volatile
  1775  001B1E                     l2830:
  1776  001B1E  C0CD  FFAD         	movff	WriteUSART@data,4013	;volatile
  1777  001B22  0012               	return	
  1778  001B24                     __end_of_WriteUSART:
  1779                           	opt stack 0
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _timer1_lthread *****************
  1792 ;; Defined at:
  1793 ;;		line 14 in file "src/timer1_thread.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  tptr            2    3[BANK1 ] PTR struct __timer1_thre
  1796 ;;		 -> main@t1thread_data(2), 
  1797 ;;  msgtype         2    5[BANK1 ] int 
  1798 ;;  length          2    7[BANK1 ] int 
  1799 ;;  msgbuffer       2    9[BANK1 ] PTR unsigned char 
  1800 ;;		 -> main@msgbuffer(11), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  ctrl            2   16[BANK1 ] unsigned char [2]
  1803 ;;  even            2   14[BANK1 ] int 
  1804 ;;  retval          1   13[BANK1 ] char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2    3[BANK1 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1814 ;;      Params:         0       0       8       0       0
  1815 ;;      Locals:         0       0       5       0       0
  1816 ;;      Temps:          0       0       2       0       0
  1817 ;;      Totals:         0       0      15       0       0
  1818 ;;Total ram usage:       15 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   13
  1821 ;; This function calls:
  1822 ;;		_ReadTimer1
  1823 ;;		_ToMainLow_sendmsg
  1824 ;;		___lwmod
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text4
  1831  000B46                     __ptext4:
  1832                           	opt stack 0
  1833  000B46                     _timer1_lthread:
  1834                           	opt stack 17
  1835                           
  1836                           ;timer1_thread.c: 15: signed char retval;
  1837                           ;timer1_thread.c: 17: unsigned char ctrl[2] = {200,72};
  1838                           
  1839                           ;incstack = 0
  1840  000B46  C0E7  F1B2         	movff	timer1_lthread@F5129,timer1_lthread@ctrl
  1841  000B4A  C0E8  F1B3         	movff	timer1_lthread@F5129+1,timer1_lthread@ctrl+1
  1842                           
  1843                           ;timer1_thread.c: 18: int even = 0;
  1844  000B4E  0E00               	movlw	0
  1845  000B50  0101               	movlb	1	; () banked
  1846  000B52  0101               	movlb	1	; () banked
  1847  000B54  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1848  000B56  0E00               	movlw	0
  1849  000B58  0101               	movlb	1	; () banked
  1850  000B5A  6FB0               	movwf	timer1_lthread@even& (0+255),b
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;timer1_thread.c: 20: tptr->msgcount++;
  1854  000B5C  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1855  000B60  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1856  000B64  2ADE               	incf	postinc2,f,c
  1857  000B66  0E00               	movlw	0
  1858  000B68  22DD               	addwfc	postdec2,f,c
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;timer1_thread.c: 22: if ((tptr->msgcount % 6) == 5) {
  1862  000B6A  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1863  000B6E  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1864  000B72  0100               	movlb	0	; () banked
  1865  000B74  CFDE F0CD          	movff	postinc2,___lwmod@dividend
  1866  000B78  0100               	movlb	0	; () banked
  1867  000B7A  CFDD F0CE          	movff	postdec2,___lwmod@dividend+1
  1868  000B7E  0E00               	movlw	0
  1869  000B80  0100               	movlb	0	; () banked
  1870  000B82  0100               	movlb	0	; () banked
  1871  000B84  6FD0               	movwf	(___lwmod@divisor+1)& (0+255),b
  1872  000B86  0E06               	movlw	6
  1873  000B88  0100               	movlb	0	; () banked
  1874  000B8A  6FCF               	movwf	___lwmod@divisor& (0+255),b
  1875  000B8C  EC44  F009         	call	___lwmod	;wreg free
  1876  000B90  0100               	movlb	0	; () banked
  1877  000B92  0100               	movlb	0	; () banked
  1878  000B94  51CD               	movf	?___lwmod& (0+255),w,b
  1879  000B96  0A05               	xorlw	5
  1880  000B98  0100               	movlb	0	; () banked
  1881  000B9A  11CE               	iorwf	(?___lwmod+1)& (0+255),w,b
  1882  000B9C  A4D8               	btfss	status,2,c
  1883  000B9E  0012               	return	
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;timer1_thread.c: 27: if(ReadTimer1()%2 == 0) even = 0;
  1887  000BA0  EC92  F00D         	call	_ReadTimer1	;wreg free
  1888  000BA4  0100               	movlb	0	; () banked
  1889  000BA6  0100               	movlb	0	; () banked
  1890  000BA8  B1CD               	btfsc	?_ReadTimer1& (0+255),0,b
  1891  000BAA  D006               	goto	l3320
  1892                           
  1893                           ; BSR set to: 0
  1894  000BAC  0E00               	movlw	0
  1895  000BAE  0101               	movlb	1	; () banked
  1896  000BB0  0101               	movlb	1	; () banked
  1897  000BB2  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1898  000BB4  0E00               	movlw	0
  1899  000BB6  D005               	goto	L3
  1900  000BB8                     l3320:
  1901                           
  1902                           ;timer1_thread.c: 28: else even = 1;
  1903  000BB8  0E00               	movlw	0
  1904  000BBA  0101               	movlb	1	; () banked
  1905  000BBC  0101               	movlb	1	; () banked
  1906  000BBE  6FB1               	movwf	(timer1_lthread@even+1)& (0+255),b
  1907  000BC0  0E01               	movlw	1
  1908  000BC2                     L3:
  1909  000BC2  0101               	movlb	1	; () banked
  1910  000BC4  6FB0               	movwf	timer1_lthread@even& (0+255),b
  1911  000BC6  D01D               	goto	l3328
  1912  000BC8                     l3322:
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;timer1_thread.c: 31: ctrl[0] = 0;
  1916  000BC8  0101               	movlb	1	; () banked
  1917  000BCA  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1918  000BCC  0E00               	movlw	0
  1919  000BCE  0101               	movlb	1	; () banked
  1920  000BD0  0101               	movlb	1	; () banked
  1921  000BD2  6FB2               	movwf	timer1_lthread@ctrl& (0+255),b
  1922  000BD4  0101               	movlb	1	; () banked
  1923  000BD6  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1924                           
  1925                           ;timer1_thread.c: 32: ctrl[1] = 0;
  1926  000BD8  0101               	movlb	1	; () banked
  1927  000BDA  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1928  000BDC  0E00               	movlw	0
  1929  000BDE  D00B               	goto	L4
  1930  000BE0                     l3324:
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;timer1_thread.c: 35: ctrl[0] = 200;
  1934  000BE0  0101               	movlb	1	; () banked
  1935  000BE2  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1936  000BE4  0EC8               	movlw	200
  1937  000BE6  0101               	movlb	1	; () banked
  1938  000BE8  0101               	movlb	1	; () banked
  1939  000BEA  6FB2               	movwf	timer1_lthread@ctrl& (0+255),b
  1940  000BEC  0101               	movlb	1	; () banked
  1941  000BEE  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1942                           
  1943                           ;timer1_thread.c: 36: ctrl[1] = 72;
  1944  000BF0  0101               	movlb	1	; () banked
  1945  000BF2  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1946  000BF4  0E48               	movlw	72
  1947  000BF6                     L4:
  1948  000BF6  0101               	movlb	1	; () banked
  1949  000BF8  0101               	movlb	1	; () banked
  1950  000BFA  6FB3               	movwf	(timer1_lthread@ctrl+1)& (0+255),b
  1951  000BFC  0101               	movlb	1	; () banked
  1952  000BFE  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1953                           
  1954                           ;timer1_thread.c: 37: break;
  1955  000C00  D013               	goto	l3330
  1956  000C02                     l3328:
  1957                           
  1958                           ; BSR set to: 1
  1959  000C02  0101               	movlb	1	; () banked
  1960  000C04  C1B0  F1AD         	movff	timer1_lthread@even,??_timer1_lthread
  1961  000C08  0101               	movlb	1	; () banked
  1962  000C0A  C1B1  F1AE         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  1963                           
  1964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1965                           ; Switch size 1, requested type "space"
  1966                           ; Number of cases is 1, Range of values is 0 to 0
  1967                           ; switch strategies available:
  1968                           ; Name         Instructions Cycles
  1969                           ; simple_byte            4     3 (average)
  1970                           ;	Chosen strategy is simple_byte
  1971  000C0E  0101               	movlb	1	; () banked
  1972  000C10  51AE               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1973  000C12  0A00               	xorlw	0	; case 0
  1974  000C14  A4D8               	btfss	status,2,c
  1975  000C16  D008               	goto	l3330
  1976                           
  1977                           ; BSR set to: 1
  1978                           ; Switch size 1, requested type "space"
  1979                           ; Number of cases is 2, Range of values is 0 to 1
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte            7     4 (average)
  1983                           ;	Chosen strategy is simple_byte
  1984  000C18  0101               	movlb	1	; () banked
  1985  000C1A  51AD               	movf	??_timer1_lthread& (0+255),w,b
  1986  000C1C  0A00               	xorlw	0	; case 0
  1987  000C1E  B4D8               	btfsc	status,2,c
  1988  000C20  D7D3               	goto	l3322
  1989  000C22  0A01               	xorlw	1	; case 1
  1990  000C24  B4D8               	btfsc	status,2,c
  1991  000C26  D7DC               	goto	l3324
  1992  000C28                     l3330:
  1993                           
  1994                           ; BSR set to: 1
  1995                           ;timer1_thread.c: 40: retval = ToMainLow_sendmsg(sizeof (tptr->msgcount), 31, (void *) &
      +                          ctrl);
  1996  000C28  0101               	movlb	1	; () banked
  1997  000C2A  6FAD               	movwf	??_timer1_lthread& (0+255),b
  1998  000C2C  0E1F               	movlw	31
  1999  000C2E  0101               	movlb	1	; () banked
  2000  000C30  0101               	movlb	1	; () banked
  2001  000C32  6FA2               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2002  000C34  0101               	movlb	1	; () banked
  2003  000C36  51AD               	movf	??_timer1_lthread& (0+255),w,b
  2004  000C38  0101               	movlb	1	; () banked
  2005  000C3A  0E01               	movlw	high timer1_lthread@ctrl
  2006  000C3C  0101               	movlb	1	; () banked
  2007  000C3E  0101               	movlb	1	; () banked
  2008  000C40  6FA4               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  2009  000C42  0101               	movlb	1	; () banked
  2010  000C44  0EB2               	movlw	low timer1_lthread@ctrl
  2011  000C46  0101               	movlb	1	; () banked
  2012  000C48  0101               	movlb	1	; () banked
  2013  000C4A  6FA3               	movwf	ToMainLow_sendmsg@data& (0+255),b
  2014  000C4C  0E02               	movlw	2
  2015  000C4E  EC6D  F00C         	call	_ToMainLow_sendmsg
  2016  000C52  0101               	movlb	1	; () banked
  2017  000C54  0101               	movlb	1	; () banked
  2018  000C56  6FAF               	movwf	timer1_lthread@retval& (0+255),b
  2019  000C58  0012               	return	
  2020  000C5A                     __end_of_timer1_lthread:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           indf2	equ	0xFDF
  2029                           postinc2	equ	0xFDE
  2030                           postdec2	equ	0xFDD
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function ___lwmod *****************
  2036 ;; Defined at:
  2037 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  dividend        2   23[BANK0 ] unsigned int 
  2040 ;;  divisor         2   25[BANK0 ] unsigned int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  counter         1   28[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2   23[BANK0 ] unsigned int 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2052 ;;      Params:         0       4       0       0       0
  2053 ;;      Locals:         0       1       0       0       0
  2054 ;;      Temps:          0       1       0       0       0
  2055 ;;      Totals:         0       6       0       0       0
  2056 ;;Total ram usage:        6 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:   10
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_timer1_lthread
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text5
  2067  001288                     __ptext5:
  2068                           	opt stack 0
  2069  001288                     ___lwmod:
  2070                           	opt stack 19
  2071                           
  2072                           ;incstack = 0
  2073  001288  0100               	movlb	0	; () banked
  2074  00128A  0100               	movlb	0	; () banked
  2075  00128C  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2076  00128E  11CF               	iorwf	___lwmod@divisor& (0+255),w,b
  2077  001290  B4D8               	btfsc	status,2,c
  2078  001292  D03A               	goto	l1040
  2079                           
  2080                           ; BSR set to: 0
  2081  001294  0100               	movlb	0	; () banked
  2082  001296  6FD1               	movwf	??___lwmod& (0+255),b
  2083  001298  0E01               	movlw	1
  2084  00129A  0100               	movlb	0	; () banked
  2085  00129C  0100               	movlb	0	; () banked
  2086  00129E  6FD2               	movwf	___lwmod@counter& (0+255),b
  2087  0012A0  0100               	movlb	0	; () banked
  2088  0012A2  51D1               	movf	??___lwmod& (0+255),w,b
  2089  0012A4  D009               	goto	l3436
  2090  0012A6                     l3434:
  2091                           
  2092                           ; BSR set to: 0
  2093  0012A6  0100               	movlb	0	; () banked
  2094  0012A8  0100               	movlb	0	; () banked
  2095  0012AA  0100               	movlb	0	; () banked
  2096  0012AC  90D8               	bcf	status,0,c
  2097  0012AE  37CF               	rlcf	___lwmod@divisor& (0+255),f,b
  2098  0012B0  37D0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2099  0012B2  0100               	movlb	0	; () banked
  2100  0012B4  0100               	movlb	0	; () banked
  2101  0012B6  2BD2               	incf	___lwmod@counter& (0+255),f,b
  2102  0012B8                     l3436:
  2103                           
  2104                           ; BSR set to: 0
  2105  0012B8  0100               	movlb	0	; () banked
  2106  0012BA  0100               	movlb	0	; () banked
  2107  0012BC  AFD0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2108  0012BE  D7F3               	goto	l3434
  2109  0012C0                     l3438:
  2110                           
  2111                           ; BSR set to: 0
  2112  0012C0  0100               	movlb	0	; () banked
  2113  0012C2  0100               	movlb	0	; () banked
  2114  0012C4  51CF               	movf	___lwmod@divisor& (0+255),w,b
  2115  0012C6  0100               	movlb	0	; () banked
  2116  0012C8  0100               	movlb	0	; () banked
  2117  0012CA  5DCD               	subwf	___lwmod@dividend& (0+255),w,b
  2118  0012CC  0100               	movlb	0	; () banked
  2119  0012CE  0100               	movlb	0	; () banked
  2120  0012D0  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2121  0012D2  0100               	movlb	0	; () banked
  2122  0012D4  0100               	movlb	0	; () banked
  2123  0012D6  59CE               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2124  0012D8  A0D8               	btfss	status,0,c
  2125  0012DA  D00C               	goto	l3442
  2126                           
  2127                           ; BSR set to: 0
  2128  0012DC  0100               	movlb	0	; () banked
  2129  0012DE  0100               	movlb	0	; () banked
  2130  0012E0  51CF               	movf	___lwmod@divisor& (0+255),w,b
  2131  0012E2  0100               	movlb	0	; () banked
  2132  0012E4  0100               	movlb	0	; () banked
  2133  0012E6  5FCD               	subwf	___lwmod@dividend& (0+255),f,b
  2134  0012E8  0100               	movlb	0	; () banked
  2135  0012EA  0100               	movlb	0	; () banked
  2136  0012EC  51D0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2137  0012EE  0100               	movlb	0	; () banked
  2138  0012F0  0100               	movlb	0	; () banked
  2139  0012F2  5BCE               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2140  0012F4                     l3442:
  2141                           
  2142                           ; BSR set to: 0
  2143  0012F4  0100               	movlb	0	; () banked
  2144  0012F6  0100               	movlb	0	; () banked
  2145  0012F8  0100               	movlb	0	; () banked
  2146  0012FA  90D8               	bcf	status,0,c
  2147  0012FC  33D0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2148  0012FE  33CF               	rrcf	___lwmod@divisor& (0+255),f,b
  2149                           
  2150                           ; BSR set to: 0
  2151  001300  0100               	movlb	0	; () banked
  2152  001302  0100               	movlb	0	; () banked
  2153  001304  2FD2               	decfsz	___lwmod@counter& (0+255),f,b
  2154  001306  D7DC               	goto	l3438
  2155  001308                     l1040:
  2156                           
  2157                           ; BSR set to: 0
  2158  001308  C0CD  F0CD         	movff	___lwmod@dividend,?___lwmod
  2159  00130C  C0CE  F0CE         	movff	___lwmod@dividend+1,?___lwmod+1
  2160                           
  2161                           ; BSR set to: 0
  2162  001310  0012               	return	
  2163  001312                     __end_of___lwmod:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           postdec2	equ	0xFDD
  2174                           fsr2h	equ	0xFDA
  2175                           fsr2l	equ	0xFD9
  2176                           status	equ	0xFD8
  2177                           
  2178 ;; *************** function _ToMainLow_sendmsg *****************
  2179 ;; Defined at:
  2180 ;;		line 103 in file "src/messages.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  length          1    wreg     unsigned char 
  2183 ;;  msgtype         1    0[BANK1 ] unsigned char 
  2184 ;;  data            2    1[BANK1 ] PTR void 
  2185 ;;		 -> timer1_lthread@ctrl(2), NULL(0), main@uc(5), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  length          1   45[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      char 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2197 ;;      Params:         0       0       3       0       0
  2198 ;;      Locals:         0       1       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       1       3       0       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:   12
  2204 ;; This function calls:
  2205 ;;		_send_msg
  2206 ;; This function is called by:
  2207 ;;		_timer1_lthread
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text6
  2212  0018DA                     __ptext6:
  2213                           	opt stack 0
  2214  0018DA                     _ToMainLow_sendmsg:
  2215                           	opt stack 17
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;incstack = 0
  2219                           ;ToMainLow_sendmsg@length stored from wreg
  2220  0018DA  CFE8 F0E3          	movff	wreg,ToMainLow_sendmsg@length
  2221                           
  2222                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2223  0018DE  0100               	movlb	0	; () banked
  2224  0018E0  0E00               	movlw	high _ToMainLow_MQ
  2225  0018E2  0100               	movlb	0	; () banked
  2226  0018E4  0100               	movlb	0	; () banked
  2227  0018E6  6FD8               	movwf	(send_msg@qptr+1)& (0+255),b
  2228  0018E8  0100               	movlb	0	; () banked
  2229  0018EA  0E80               	movlw	low _ToMainLow_MQ
  2230  0018EC  0100               	movlb	0	; () banked
  2231  0018EE  0100               	movlb	0	; () banked
  2232  0018F0  6FD7               	movwf	send_msg@qptr& (0+255),b
  2233  0018F2  C0E3  F0D9         	movff	ToMainLow_sendmsg@length,send_msg@length
  2234  0018F6  C1A2  F0DA         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2235  0018FA  0101               	movlb	1	; () banked
  2236  0018FC  0100               	movlb	0	; () banked
  2237  0018FE  C1A4  F0DC         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2238  001902  0101               	movlb	1	; () banked
  2239  001904  0100               	movlb	0	; () banked
  2240  001906  C1A3  F0DB         	movff	ToMainLow_sendmsg@data,send_msg@data
  2241  00190A  ECB4  F006         	call	_send_msg	;wreg free
  2242  00190E  0012               	return	
  2243  001910                     __end_of_ToMainLow_sendmsg:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           indf2	equ	0xFDF
  2252                           postinc2	equ	0xFDE
  2253                           postdec2	equ	0xFDD
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _send_msg *****************
  2259 ;; Defined at:
  2260 ;;		line 24 in file "src/messages.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2263 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2264 ;;  length          1   35[BANK0 ] unsigned char 
  2265 ;;  msgtype         1   36[BANK0 ] unsigned char 
  2266 ;;  data            2   37[BANK0 ] PTR void 
  2267 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  2268 ;;		 -> main@ic(28), main@uc(5), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  2271 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2272 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2273 ;;  tlength         2   40[BANK0 ] unsigned int 
  2274 ;;  slot            1   42[BANK0 ] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      char 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2284 ;;      Params:         0       6       0       0       0
  2285 ;;      Locals:         0       5       0       0       0
  2286 ;;      Temps:          0       1       0       0       0
  2287 ;;      Totals:         0      12       0       0       0
  2288 ;;Total ram usage:       12 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:   11
  2291 ;; This function calls:
  2292 ;;		_memcpy
  2293 ;; This function is called by:
  2294 ;;		_ToMainLow_sendmsg
  2295 ;;		_FromMainLow_sendmsg
  2296 ;;		_FromMainHigh_sendmsg
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text7
  2301  000D68                     __ptext7:
  2302                           	opt stack 0
  2303  000D68                     _send_msg:
  2304                           	opt stack 17
  2305                           
  2306                           ;messages.c: 25: unsigned char slot;
  2307                           ;messages.c: 27: msg *qmsg;
  2308                           ;messages.c: 28: size_t tlength = length;
  2309                           
  2310                           ;incstack = 0
  2311  000D68  0100               	movlb	0	; () banked
  2312  000D6A  0100               	movlb	0	; () banked
  2313  000D6C  C0D9  F0DE         	movff	send_msg@length,send_msg@tlength
  2314  000D70  0100               	movlb	0	; () banked
  2315  000D72  0100               	movlb	0	; () banked
  2316  000D74  6BDF               	clrf	(send_msg@tlength+1)& (0+255),b
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2320  000D76  0100               	movlb	0	; () banked
  2321  000D78  EE20 F034          	lfsr	2,52
  2322  000D7C  0100               	movlb	0	; () banked
  2323  000D7E  51D7               	movf	send_msg@qptr& (0+255),w,b
  2324  000D80  26D9               	addwf	fsr2l,f,c
  2325  000D82  0100               	movlb	0	; () banked
  2326  000D84  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2327  000D86  22DA               	addwfc	fsr2h,f,c
  2328  000D88  50DF               	movf	indf2,w,c
  2329  000D8A  0100               	movlb	0	; () banked
  2330  000D8C  0100               	movlb	0	; () banked
  2331  000D8E  6FE0               	movwf	send_msg@slot& (0+255),b
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2335  000D90  0100               	movlb	0	; () banked
  2336  000D92  0100               	movlb	0	; () banked
  2337  000D94  51E0               	movf	send_msg@slot& (0+255),w,b
  2338  000D96  0D0D               	mullw	13
  2339  000D98  50F3               	movf	prodl,w,c
  2340  000D9A  0100               	movlb	0	; () banked
  2341  000D9C  0100               	movlb	0	; () banked
  2342  000D9E  25D7               	addwf	send_msg@qptr& (0+255),w,b
  2343  000DA0  0100               	movlb	0	; () banked
  2344  000DA2  0100               	movlb	0	; () banked
  2345  000DA4  6FE1               	movwf	send_msg@qmsg& (0+255),b
  2346  000DA6  50F4               	movf	prodh,w,c
  2347  000DA8  0100               	movlb	0	; () banked
  2348  000DAA  0100               	movlb	0	; () banked
  2349  000DAC  21D8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2350  000DAE  0100               	movlb	0	; () banked
  2351  000DB0  6FE2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;messages.c: 41: if (qmsg->full != 0) {
  2355  000DB2  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2356  000DB6  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2357  000DBA  50DF               	movf	indf2,w,c
  2358  000DBC  B4D8               	btfsc	status,2,c
  2359  000DBE  D002               	goto	l3350
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;messages.c: 42: return (-1);
  2363  000DC0  0EFF               	movlw	255
  2364  000DC2  0012               	return	
  2365  000DC4                     l3350:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;messages.c: 43: }
  2369                           ;messages.c: 46: qmsg->length = length;
  2370  000DC4  0100               	movlb	0	; () banked
  2371  000DC6  EE20 F001          	lfsr	2,1
  2372  000DCA  0100               	movlb	0	; () banked
  2373  000DCC  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2374  000DCE  26D9               	addwf	fsr2l,f,c
  2375  000DD0  0100               	movlb	0	; () banked
  2376  000DD2  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2377  000DD4  22DA               	addwfc	fsr2h,f,c
  2378  000DD6  0100               	movlb	0	; () banked
  2379  000DD8  C0D9  FFDF         	movff	send_msg@length,indf2
  2380                           
  2381                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2382  000DDC  0100               	movlb	0	; () banked
  2383  000DDE  EE20 F002          	lfsr	2,2
  2384  000DE2  0100               	movlb	0	; () banked
  2385  000DE4  51E1               	movf	send_msg@qmsg& (0+255),w,b
  2386  000DE6  26D9               	addwf	fsr2l,f,c
  2387  000DE8  0100               	movlb	0	; () banked
  2388  000DEA  51E2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2389  000DEC  22DA               	addwfc	fsr2h,f,c
  2390  000DEE  0100               	movlb	0	; () banked
  2391  000DF0  C0DA  FFDF         	movff	send_msg@msgtype,indf2
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2395  000DF4  0E03               	movlw	3
  2396  000DF6  0100               	movlb	0	; () banked
  2397  000DF8  0100               	movlb	0	; () banked
  2398  000DFA  25E1               	addwf	send_msg@qmsg& (0+255),w,b
  2399  000DFC  0100               	movlb	0	; () banked
  2400  000DFE  0100               	movlb	0	; () banked
  2401  000E00  6FCD               	movwf	memcpy@d1& (0+255),b
  2402  000E02  0E00               	movlw	0
  2403  000E04  0100               	movlb	0	; () banked
  2404  000E06  0100               	movlb	0	; () banked
  2405  000E08  21E2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2406  000E0A  0100               	movlb	0	; () banked
  2407  000E0C  6FCE               	movwf	(memcpy@d1+1)& (0+255),b
  2408  000E0E  0100               	movlb	0	; () banked
  2409  000E10  0100               	movlb	0	; () banked
  2410  000E12  C0DC  F0D0         	movff	send_msg@data+1,memcpy@s1+1
  2411  000E16  0100               	movlb	0	; () banked
  2412  000E18  0100               	movlb	0	; () banked
  2413  000E1A  C0DB  F0CF         	movff	send_msg@data,memcpy@s1
  2414  000E1E  C0DE  F0D1         	movff	send_msg@tlength,memcpy@n
  2415  000E22  C0DF  F0D2         	movff	send_msg@tlength+1,memcpy@n+1
  2416  000E26  EC15  F00B         	call	_memcpy	;wreg free
  2417                           
  2418                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2419  000E2A  0100               	movlb	0	; () banked
  2420  000E2C  EE20 F034          	lfsr	2,52
  2421  000E30  0100               	movlb	0	; () banked
  2422  000E32  51D7               	movf	send_msg@qptr& (0+255),w,b
  2423  000E34  26D9               	addwf	fsr2l,f,c
  2424  000E36  0100               	movlb	0	; () banked
  2425  000E38  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2426  000E3A  22DA               	addwfc	fsr2h,f,c
  2427  000E3C  0100               	movlb	0	; () banked
  2428  000E3E  EE10 F034          	lfsr	1,52
  2429  000E42  0100               	movlb	0	; () banked
  2430  000E44  51D7               	movf	send_msg@qptr& (0+255),w,b
  2431  000E46  26E1               	addwf	fsr1l,f,c
  2432  000E48  0100               	movlb	0	; () banked
  2433  000E4A  51D8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2434  000E4C  22E2               	addwfc	fsr1h,f,c
  2435  000E4E  50E7               	movf	indf1,w,c
  2436  000E50  0100               	movlb	0	; () banked
  2437  000E52  6FDD               	movwf	??_send_msg& (0+255),b
  2438  000E54  0100               	movlb	0	; () banked
  2439  000E56  29DD               	incf	??_send_msg& (0+255),w,b
  2440  000E58  0B03               	andlw	3
  2441  000E5A  6EDF               	movwf	indf2,c
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;messages.c: 59: qmsg->full = 1;
  2445  000E5C  C0E1  FFD9         	movff	send_msg@qmsg,fsr2l
  2446  000E60  C0E2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2447  000E64  0E01               	movlw	1
  2448  000E66  6EDF               	movwf	indf2,c
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;messages.c: 60: return (1);
  2452  000E68  0E01               	movlw	1
  2453  000E6A  0012               	return	
  2454  000E6C                     __end_of_send_msg:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           indf1	equ	0xFE7
  2465                           fsr1h	equ	0xFE2
  2466                           fsr1l	equ	0xFE1
  2467                           indf2	equ	0xFDF
  2468                           postinc2	equ	0xFDE
  2469                           postdec2	equ	0xFDD
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _ReadTimer1 *****************
  2475 ;; Defined at:
  2476 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  timer           2   25[BANK0 ] struct Timers
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2   23[BANK0 ] unsigned int 
  2483 ;; Registers used:
  2484 ;;		None
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2490 ;;      Params:         0       2       0       0       0
  2491 ;;      Locals:         0       2       0       0       0
  2492 ;;      Temps:          0       0       0       0       0
  2493 ;;      Totals:         0       4       0       0       0
  2494 ;;Total ram usage:        4 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:   10
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_timer1_lthread
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text8
  2505  001B24                     __ptext8:
  2506                           	opt stack 0
  2507  001B24                     _ReadTimer1:
  2508                           	opt stack 19
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;incstack = 0
  2512  001B24  CFCE F0CF          	movff	4046,ReadTimer1@timer	;volatile
  2513  001B28  CFCF F0D0          	movff	4047,ReadTimer1@timer+1	;volatile
  2514  001B2C  C0CF  F0CD         	movff	ReadTimer1@timer,?_ReadTimer1
  2515  001B30  C0D0  F0CE         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2516  001B34  0012               	return	
  2517  001B36                     __end_of_ReadTimer1:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           indf1	equ	0xFE7
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _timer0_lthread *****************
  2538 ;; Defined at:
  2539 ;;		line 9 in file "src/timer0_thread.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  2542 ;;		 -> main@t0thread_data(2), 
  2543 ;;  msgtype         2   25[BANK0 ] int 
  2544 ;;  length          2   27[BANK0 ] int 
  2545 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  2546 ;;		 -> main@msgbuffer(11), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  2549 ;;		 -> main@msgbuffer(11), 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   23[BANK0 ] int 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2559 ;;      Params:         0       8       0       0       0
  2560 ;;      Locals:         0       2       0       0       0
  2561 ;;      Temps:          0       0       0       0       0
  2562 ;;      Totals:         0      10       0       0       0
  2563 ;;Total ram usage:       10 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:   10
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text9
  2574  001B36                     __ptext9:
  2575                           	opt stack 0
  2576  001B36                     _timer0_lthread:
  2577                           	opt stack 20
  2578                           
  2579                           ;timer0_thread.c: 10: unsigned int *msgval;
  2580                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2581                           
  2582                           ;incstack = 0
  2583  001B36  0100               	movlb	0	; () banked
  2584  001B38  0100               	movlb	0	; () banked
  2585  001B3A  C0D4  F0D6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2586  001B3E  0100               	movlb	0	; () banked
  2587  001B40  0100               	movlb	0	; () banked
  2588  001B42  C0D3  F0D5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2589                           
  2590                           ; BSR set to: 0
  2591  001B46  0012               	return	
  2592  001B48                     __end_of_timer0_lthread:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           prodh	equ	0xFF4
  2599                           prodl	equ	0xFF3
  2600                           postinc0	equ	0xFEE
  2601                           wreg	equ	0xFE8
  2602                           indf1	equ	0xFE7
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _start_i2c_slave_reply *****************
  2613 ;; Defined at:
  2614 ;;		line 53 in file "src/my_i2c.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  length          1    wreg     unsigned char 
  2617 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  2618 ;;		 -> main@msgbuffer(11), 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  length          1   27[BANK0 ] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2630 ;;      Params:         0       2       0       0       0
  2631 ;;      Locals:         0       1       0       0       0
  2632 ;;      Temps:          0       2       0       0       0
  2633 ;;      Totals:         0       5       0       0       0
  2634 ;;Total ram usage:        5 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:   10
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text10
  2645  000C5A                     __ptext10:
  2646                           	opt stack 0
  2647  000C5A                     _start_i2c_slave_reply:
  2648                           	opt stack 20
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;incstack = 0
  2652                           ;start_i2c_slave_reply@length stored from wreg
  2653  000C5A  CFE8 F0D1          	movff	wreg,start_i2c_slave_reply@length
  2654                           
  2655                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2656  000C5E  0100               	movlb	0	; () banked
  2657  000C60  EE20 F019          	lfsr	2,25
  2658  000C64  0100               	movlb	0	; () banked
  2659  000C66  51E5               	movf	_ic_ptr& (0+255),w,b
  2660  000C68  26D9               	addwf	fsr2l,f,c
  2661  000C6A  0100               	movlb	0	; () banked
  2662  000C6C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2663  000C6E  22DA               	addwfc	fsr2h,f,c
  2664  000C70  0E00               	movlw	0
  2665  000C72  6EDF               	movwf	indf2,c
  2666  000C74  D042               	goto	l2620
  2667  000C76                     l2616:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2671  000C76  0100               	movlb	0	; () banked
  2672  000C78  EE20 F019          	lfsr	2,25
  2673  000C7C  0100               	movlb	0	; () banked
  2674  000C7E  51E5               	movf	_ic_ptr& (0+255),w,b
  2675  000C80  26D9               	addwf	fsr2l,f,c
  2676  000C82  0100               	movlb	0	; () banked
  2677  000C84  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2678  000C86  22DA               	addwfc	fsr2h,f,c
  2679  000C88  50DF               	movf	indf2,w,c
  2680  000C8A  0100               	movlb	0	; () banked
  2681  000C8C  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2682  000C8E  0100               	movlb	0	; () banked
  2683  000C90  51CF               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2684  000C92  0D01               	mullw	1
  2685  000C94  50F3               	movf	prodl,w,c
  2686  000C96  0100               	movlb	0	; () banked
  2687  000C98  0100               	movlb	0	; () banked
  2688  000C9A  25CD               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2689  000C9C  6ED9               	movwf	fsr2l,c
  2690  000C9E  50F4               	movf	prodh,w,c
  2691  000CA0  0100               	movlb	0	; () banked
  2692  000CA2  0100               	movlb	0	; () banked
  2693  000CA4  21CE               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2694  000CA6  6EDA               	movwf	fsr2h,c
  2695  000CA8  0100               	movlb	0	; () banked
  2696  000CAA  EE10 F019          	lfsr	1,25
  2697  000CAE  0100               	movlb	0	; () banked
  2698  000CB0  51E5               	movf	_ic_ptr& (0+255),w,b
  2699  000CB2  26E1               	addwf	fsr1l,f,c
  2700  000CB4  0100               	movlb	0	; () banked
  2701  000CB6  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2702  000CB8  22E2               	addwfc	fsr1h,f,c
  2703  000CBA  50E7               	movf	indf1,w,c
  2704  000CBC  0100               	movlb	0	; () banked
  2705  000CBE  6FD0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2706  000CC0  0100               	movlb	0	; () banked
  2707  000CC2  51D0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2708  000CC4  0D01               	mullw	1
  2709  000CC6  0E0F               	movlw	15
  2710  000CC8  26F3               	addwf	prodl,f,c
  2711  000CCA  0E00               	movlw	0
  2712  000CCC  22F4               	addwfc	prodh,f,c
  2713  000CCE  50F3               	movf	prodl,w,c
  2714  000CD0  0100               	movlb	0	; () banked
  2715  000CD2  0100               	movlb	0	; () banked
  2716  000CD4  25E5               	addwf	_ic_ptr& (0+255),w,b
  2717  000CD6  6EE1               	movwf	fsr1l,c
  2718  000CD8  50F4               	movf	prodh,w,c
  2719  000CDA  0100               	movlb	0	; () banked
  2720  000CDC  0100               	movlb	0	; () banked
  2721  000CDE  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2722  000CE0  6EE2               	movwf	fsr1h,c
  2723  000CE2  CFDF FFE7          	movff	indf2,indf1
  2724                           
  2725                           ; BSR set to: 0
  2726  000CE6  0100               	movlb	0	; () banked
  2727  000CE8  EE20 F019          	lfsr	2,25
  2728  000CEC  0100               	movlb	0	; () banked
  2729  000CEE  51E5               	movf	_ic_ptr& (0+255),w,b
  2730  000CF0  26D9               	addwf	fsr2l,f,c
  2731  000CF2  0100               	movlb	0	; () banked
  2732  000CF4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2733  000CF6  22DA               	addwfc	fsr2h,f,c
  2734  000CF8  2ADF               	incf	indf2,f,c
  2735  000CFA                     l2620:
  2736                           
  2737                           ; BSR set to: 0
  2738  000CFA  0100               	movlb	0	; () banked
  2739  000CFC  EE20 F019          	lfsr	2,25
  2740  000D00  0100               	movlb	0	; () banked
  2741  000D02  51E5               	movf	_ic_ptr& (0+255),w,b
  2742  000D04  26D9               	addwf	fsr2l,f,c
  2743  000D06  0100               	movlb	0	; () banked
  2744  000D08  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2745  000D0A  22DA               	addwfc	fsr2h,f,c
  2746  000D0C  50DF               	movf	indf2,w,c
  2747  000D0E  0100               	movlb	0	; () banked
  2748  000D10  6FCF               	movwf	??_start_i2c_slave_reply& (0+255),b
  2749  000D12  0100               	movlb	0	; () banked
  2750  000D14  0100               	movlb	0	; () banked
  2751  000D16  51D1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2752  000D18  0100               	movlb	0	; () banked
  2753  000D1A  5DCF               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2754  000D1C  A0D8               	btfss	status,0,c
  2755  000D1E  D7AB               	goto	l2616
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;my_i2c.c: 57: }
  2759                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2760                           
  2761                           ; BSR set to: 0
  2762  000D20  0100               	movlb	0	; () banked
  2763  000D22  EE20 F019          	lfsr	2,25
  2764  000D26  0100               	movlb	0	; () banked
  2765  000D28  51E5               	movf	_ic_ptr& (0+255),w,b
  2766  000D2A  26D9               	addwf	fsr2l,f,c
  2767  000D2C  0100               	movlb	0	; () banked
  2768  000D2E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2769  000D30  22DA               	addwfc	fsr2h,f,c
  2770  000D32  0100               	movlb	0	; () banked
  2771  000D34  C0D1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2772                           
  2773                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2774  000D38  0100               	movlb	0	; () banked
  2775  000D3A  EE20 F01A          	lfsr	2,26
  2776  000D3E  0100               	movlb	0	; () banked
  2777  000D40  51E5               	movf	_ic_ptr& (0+255),w,b
  2778  000D42  26D9               	addwf	fsr2l,f,c
  2779  000D44  0100               	movlb	0	; () banked
  2780  000D46  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2781  000D48  22DA               	addwfc	fsr2h,f,c
  2782  000D4A  0E01               	movlw	1
  2783  000D4C  6EDF               	movwf	indf2,c
  2784                           
  2785                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2786  000D4E  0100               	movlb	0	; () banked
  2787  000D50  EE20 F00F          	lfsr	2,15
  2788  000D54  0100               	movlb	0	; () banked
  2789  000D56  51E5               	movf	_ic_ptr& (0+255),w,b
  2790  000D58  26D9               	addwf	fsr2l,f,c
  2791  000D5A  0100               	movlb	0	; () banked
  2792  000D5C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  2793  000D5E  22DA               	addwfc	fsr2h,f,c
  2794  000D60  50DF               	movf	indf2,w,c
  2795  000D62  6EC9               	movwf	4041,c	;volatile
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2799  000D64  88C6               	bsf	4038,4,c	;volatile
  2800                           
  2801                           ; BSR set to: 0
  2802  000D66  0012               	return	
  2803  000D68                     __end_of_start_i2c_slave_reply:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           postinc0	equ	0xFEE
  2812                           wreg	equ	0xFE8
  2813                           indf1	equ	0xFE7
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _init_uart_recv *****************
  2824 ;; Defined at:
  2825 ;;		line 49 in file "src/my_uart.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2828 ;;		 -> main@uc(5), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2840 ;;      Params:         0       2       0       0       0
  2841 ;;      Locals:         0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         0       2       0       0       0
  2844 ;;Total ram usage:        2 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:   10
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text11
  2855  001ABE                     __ptext11:
  2856                           	opt stack 0
  2857  001ABE                     _init_uart_recv:
  2858                           	opt stack 20
  2859                           
  2860                           ;my_uart.c: 50: uc_ptr = uc;
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;incstack = 0
  2864  001ABE  0100               	movlb	0	; () banked
  2865  001AC0  C0CE  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2866  001AC4  0100               	movlb	0	; () banked
  2867  001AC6  C0CD  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2871  001ACA  EE20 F004          	lfsr	2,4
  2872  001ACE  504D               	movf	_uc_ptr,w,c
  2873  001AD0  26D9               	addwf	fsr2l,f,c
  2874  001AD2  504E               	movf	_uc_ptr+1,w,c
  2875  001AD4  22DA               	addwfc	fsr2h,f,c
  2876  001AD6  0E00               	movlw	0
  2877  001AD8  6EDF               	movwf	indf2,c
  2878                           
  2879                           ; BSR set to: 0
  2880  001ADA  0012               	return	
  2881  001ADC                     __end_of_init_uart_recv:
  2882                           	opt stack 0
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           prodh	equ	0xFF4
  2888                           prodl	equ	0xFF3
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           indf1	equ	0xFE7
  2892                           fsr1h	equ	0xFE2
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           postinc2	equ	0xFDE
  2896                           postdec2	equ	0xFDD
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _init_timer1_lthread *****************
  2902 ;; Defined at:
  2903 ;;		line 6 in file "src/timer1_thread.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2906 ;;		 -> main@t1thread_data(2), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg, fsr2l, fsr2h
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2918 ;;      Params:         0       2       0       0       0
  2919 ;;      Locals:         0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0
  2921 ;;      Totals:         0       2       0       0       0
  2922 ;;Total ram usage:        2 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:   10
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text12
  2933  001B48                     __ptext12:
  2934                           	opt stack 0
  2935  001B48                     _init_timer1_lthread:
  2936                           	opt stack 20
  2937                           
  2938                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;incstack = 0
  2942  001B48  C0CD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2943  001B4C  C0CE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2944  001B50  0E00               	movlw	0
  2945  001B52  6EDE               	movwf	postinc2,c
  2946  001B54  0E00               	movlw	0
  2947  001B56  6EDD               	movwf	postdec2,c
  2948  001B58  0012               	return	
  2949  001B5A                     __end_of_init_timer1_lthread:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           indf1	equ	0xFE7
  2960                           fsr1h	equ	0xFE2
  2961                           fsr1l	equ	0xFE1
  2962                           indf2	equ	0xFDF
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _init_queues *****************
  2970 ;; Defined at:
  2971 ;;		line 194 in file "src/messages.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0
  2987 ;;      Temps:          0       1       0       0       0
  2988 ;;      Totals:         0       1       0       0       0
  2989 ;;Total ram usage:        1 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   11
  2992 ;; This function calls:
  2993 ;;		_init_queue
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text13
  3000  00148C                     __ptext13:
  3001                           	opt stack 0
  3002  00148C                     _init_queues:
  3003                           	opt stack 19
  3004                           
  3005                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3006                           
  3007                           ;incstack = 0
  3008  00148C  0100               	movlb	0	; () banked
  3009  00148E  6FD1               	movwf	??_init_queues& (0+255),b
  3010  001490  0E00               	movlw	0
  3011  001492  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3012  001494  0100               	movlb	0	; () banked
  3013  001496  51D1               	movf	??_init_queues& (0+255),w,b
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3017  001498  0100               	movlb	0	; () banked
  3018  00149A  0E00               	movlw	high _ToMainLow_MQ
  3019  00149C  0100               	movlb	0	; () banked
  3020  00149E  0100               	movlb	0	; () banked
  3021  0014A0  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3022  0014A2  0100               	movlb	0	; () banked
  3023  0014A4  0E80               	movlw	low _ToMainLow_MQ
  3024  0014A6  0100               	movlb	0	; () banked
  3025  0014A8  0100               	movlb	0	; () banked
  3026  0014AA  6FCD               	movwf	init_queue@qptr& (0+255),b
  3027  0014AC  EC09  F00A         	call	_init_queue	;wreg free
  3028                           
  3029                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3030  0014B0  0101               	movlb	1	; () banked
  3031  0014B2  0E01               	movlw	high _ToMainHigh_MQ
  3032  0014B4  0100               	movlb	0	; () banked
  3033  0014B6  0100               	movlb	0	; () banked
  3034  0014B8  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3035  0014BA  0101               	movlb	1	; () banked
  3036  0014BC  0E6C               	movlw	low _ToMainHigh_MQ
  3037  0014BE  0100               	movlb	0	; () banked
  3038  0014C0  0100               	movlb	0	; () banked
  3039  0014C2  6FCD               	movwf	init_queue@qptr& (0+255),b
  3040  0014C4  EC09  F00A         	call	_init_queue	;wreg free
  3041                           
  3042                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3043  0014C8  0101               	movlb	1	; () banked
  3044  0014CA  0E01               	movlw	high _FromMainLow_MQ
  3045  0014CC  0100               	movlb	0	; () banked
  3046  0014CE  0100               	movlb	0	; () banked
  3047  0014D0  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3048  0014D2  0101               	movlb	1	; () banked
  3049  0014D4  0E36               	movlw	low _FromMainLow_MQ
  3050  0014D6  0100               	movlb	0	; () banked
  3051  0014D8  0100               	movlb	0	; () banked
  3052  0014DA  6FCD               	movwf	init_queue@qptr& (0+255),b
  3053  0014DC  EC09  F00A         	call	_init_queue	;wreg free
  3054                           
  3055                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3056  0014E0  0101               	movlb	1	; () banked
  3057  0014E2  0E01               	movlw	high _FromMainHigh_MQ
  3058  0014E4  0100               	movlb	0	; () banked
  3059  0014E6  0100               	movlb	0	; () banked
  3060  0014E8  6FCE               	movwf	(init_queue@qptr+1)& (0+255),b
  3061  0014EA  0101               	movlb	1	; () banked
  3062  0014EC  0E00               	movlw	low _FromMainHigh_MQ
  3063  0014EE  0100               	movlb	0	; () banked
  3064  0014F0  0100               	movlb	0	; () banked
  3065  0014F2  6FCD               	movwf	init_queue@qptr& (0+255),b
  3066  0014F4  EC09  F00A         	call	_init_queue	;wreg free
  3067  0014F8  0012               	return	
  3068  0014FA                     __end_of_init_queues:
  3069                           	opt stack 0
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           postinc0	equ	0xFEE
  3077                           wreg	equ	0xFE8
  3078                           indf1	equ	0xFE7
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           indf2	equ	0xFDF
  3082                           postinc2	equ	0xFDE
  3083                           postdec2	equ	0xFDD
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _init_queue *****************
  3089 ;; Defined at:
  3090 ;;		line 14 in file "src/messages.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3093 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  i               1   26[BANK0 ] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;		None               void
  3098 ;; Registers used:
  3099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3105 ;;      Params:         0       2       0       0       0
  3106 ;;      Locals:         0       1       0       0       0
  3107 ;;      Temps:          0       1       0       0       0
  3108 ;;      Totals:         0       4       0       0       0
  3109 ;;Total ram usage:        4 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:   10
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_init_queues
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text14
  3120  001412                     __ptext14:
  3121                           	opt stack 0
  3122  001412                     _init_queue:
  3123                           	opt stack 19
  3124                           
  3125                           ;messages.c: 15: unsigned char i;
  3126                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3127                           
  3128                           ;incstack = 0
  3129  001412  0100               	movlb	0	; () banked
  3130  001414  EE20 F034          	lfsr	2,52
  3131  001418  0100               	movlb	0	; () banked
  3132  00141A  51CD               	movf	init_queue@qptr& (0+255),w,b
  3133  00141C  26D9               	addwf	fsr2l,f,c
  3134  00141E  0100               	movlb	0	; () banked
  3135  001420  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3136  001422  22DA               	addwfc	fsr2h,f,c
  3137  001424  0E00               	movlw	0
  3138  001426  6EDF               	movwf	indf2,c
  3139                           
  3140                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3141  001428  0100               	movlb	0	; () banked
  3142  00142A  EE20 F035          	lfsr	2,53
  3143  00142E  0100               	movlb	0	; () banked
  3144  001430  51CD               	movf	init_queue@qptr& (0+255),w,b
  3145  001432  26D9               	addwf	fsr2l,f,c
  3146  001434  0100               	movlb	0	; () banked
  3147  001436  51CE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3148  001438  22DA               	addwfc	fsr2h,f,c
  3149  00143A  0E00               	movlw	0
  3150  00143C  6EDF               	movwf	indf2,c
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3154  00143E  0100               	movlb	0	; () banked
  3155  001440  6FCF               	movwf	??_init_queue& (0+255),b
  3156  001442  0E00               	movlw	0
  3157  001444  0100               	movlb	0	; () banked
  3158  001446  0100               	movlb	0	; () banked
  3159  001448  6FD0               	movwf	init_queue@i& (0+255),b
  3160  00144A  0100               	movlb	0	; () banked
  3161  00144C  51CF               	movf	??_init_queue& (0+255),w,b
  3162                           
  3163                           ; BSR set to: 0
  3164  00144E  0E03               	movlw	3
  3165  001450  0100               	movlb	0	; () banked
  3166  001452  0100               	movlb	0	; () banked
  3167  001454  65D0               	cpfsgt	init_queue@i& (0+255),b
  3168  001456  D001               	goto	l2680
  3169  001458  0012               	return	
  3170  00145A                     l2680:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;messages.c: 20: qptr->queue[i].full = 0;
  3174  00145A  0100               	movlb	0	; () banked
  3175  00145C  0100               	movlb	0	; () banked
  3176  00145E  51D0               	movf	init_queue@i& (0+255),w,b
  3177  001460  0D0D               	mullw	13
  3178  001462  50F3               	movf	prodl,w,c
  3179  001464  0100               	movlb	0	; () banked
  3180  001466  0100               	movlb	0	; () banked
  3181  001468  25CD               	addwf	init_queue@qptr& (0+255),w,b
  3182  00146A  6ED9               	movwf	fsr2l,c
  3183  00146C  50F4               	movf	prodh,w,c
  3184  00146E  0100               	movlb	0	; () banked
  3185  001470  0100               	movlb	0	; () banked
  3186  001472  21CE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3187  001474  6EDA               	movwf	fsr2h,c
  3188  001476  0E00               	movlw	0
  3189  001478  6EDF               	movwf	indf2,c
  3190                           
  3191                           ; BSR set to: 0
  3192  00147A  0100               	movlb	0	; () banked
  3193  00147C  0100               	movlb	0	; () banked
  3194  00147E  2BD0               	incf	init_queue@i& (0+255),f,b
  3195                           
  3196                           ; BSR set to: 0
  3197  001480  0E03               	movlw	3
  3198  001482  0100               	movlb	0	; () banked
  3199  001484  0100               	movlb	0	; () banked
  3200  001486  65D0               	cpfsgt	init_queue@i& (0+255),b
  3201  001488  D7E8               	goto	l2680
  3202  00148A  0012               	return	
  3203  00148C                     __end_of_init_queue:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           postinc0	equ	0xFEE
  3212                           wreg	equ	0xFE8
  3213                           indf1	equ	0xFE7
  3214                           fsr1h	equ	0xFE2
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function _init_i2c *****************
  3224 ;; Defined at:
  3225 ;;		line 268 in file "src/my_i2c.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  3228 ;;		 -> main@ic(28), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3240 ;;      Params:         0       2       0       0       0
  3241 ;;      Locals:         0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0
  3243 ;;      Totals:         0       2       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:   10
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text15
  3255  0014FA                     __ptext15:
  3256                           	opt stack 0
  3257  0014FA                     _init_i2c:
  3258                           	opt stack 20
  3259                           
  3260                           ;my_i2c.c: 269: ic_ptr = ic;
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;incstack = 0
  3264  0014FA  0100               	movlb	0	; () banked
  3265  0014FC  0100               	movlb	0	; () banked
  3266  0014FE  C0CE  F0E6         	movff	init_i2c@ic+1,_ic_ptr+1
  3267  001502  0100               	movlb	0	; () banked
  3268  001504  0100               	movlb	0	; () banked
  3269  001506  C0CD  F0E5         	movff	init_i2c@ic,_ic_ptr
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3273  00150A  0100               	movlb	0	; () banked
  3274  00150C  EE20 F00A          	lfsr	2,10
  3275  001510  0100               	movlb	0	; () banked
  3276  001512  51E5               	movf	_ic_ptr& (0+255),w,b
  3277  001514  26D9               	addwf	fsr2l,f,c
  3278  001516  0100               	movlb	0	; () banked
  3279  001518  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3280  00151A  22DA               	addwfc	fsr2h,f,c
  3281  00151C  0E00               	movlw	0
  3282  00151E  6EDF               	movwf	indf2,c
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3286  001520  0100               	movlb	0	; () banked
  3287  001522  EE20 F00B          	lfsr	2,11
  3288  001526  0100               	movlb	0	; () banked
  3289  001528  51E5               	movf	_ic_ptr& (0+255),w,b
  3290  00152A  26D9               	addwf	fsr2l,f,c
  3291  00152C  0100               	movlb	0	; () banked
  3292  00152E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3293  001530  22DA               	addwfc	fsr2h,f,c
  3294  001532  0E00               	movlw	0
  3295  001534  6EDF               	movwf	indf2,c
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3299  001536  0100               	movlb	0	; () banked
  3300  001538  EE20 F00C          	lfsr	2,12
  3301  00153C  0100               	movlb	0	; () banked
  3302  00153E  51E5               	movf	_ic_ptr& (0+255),w,b
  3303  001540  26D9               	addwf	fsr2l,f,c
  3304  001542  0100               	movlb	0	; () banked
  3305  001544  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3306  001546  22DA               	addwfc	fsr2h,f,c
  3307  001548  0E05               	movlw	5
  3308  00154A  6EDF               	movwf	indf2,c
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3312  00154C  0100               	movlb	0	; () banked
  3313  00154E  EE20 F00E          	lfsr	2,14
  3314  001552  0100               	movlb	0	; () banked
  3315  001554  51E5               	movf	_ic_ptr& (0+255),w,b
  3316  001556  26D9               	addwf	fsr2l,f,c
  3317  001558  0100               	movlb	0	; () banked
  3318  00155A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  3319  00155C  22DA               	addwfc	fsr2h,f,c
  3320  00155E  0E00               	movlw	0
  3321  001560  6EDF               	movwf	indf2,c
  3322                           
  3323                           ; BSR set to: 0
  3324  001562  0012               	return	
  3325  001564                     __end_of_init_i2c:
  3326                           	opt stack 0
  3327                           tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           postinc0	equ	0xFEE
  3334                           wreg	equ	0xFE8
  3335                           indf1	equ	0xFE7
  3336                           fsr1h	equ	0xFE2
  3337                           fsr1l	equ	0xFE1
  3338                           indf2	equ	0xFDF
  3339                           postinc2	equ	0xFDE
  3340                           postdec2	equ	0xFDD
  3341                           fsr2h	equ	0xFDA
  3342                           fsr2l	equ	0xFD9
  3343                           status	equ	0xFD8
  3344                           
  3345 ;; *************** function _i2c_configure_slave *****************
  3346 ;; Defined at:
  3347 ;;		line 279 in file "src/my_i2c.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  addr            1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  addr            1   23[BANK0 ] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       1       0       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       1       0       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:   10
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text16
  3376  001A26                     __ptext16:
  3377                           	opt stack 0
  3378  001A26                     _i2c_configure_slave:
  3379                           	opt stack 20
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;incstack = 0
  3383                           ;i2c_configure_slave@addr stored from wreg
  3384  001A26  CFE8 F0CD          	movff	wreg,i2c_configure_slave@addr
  3385                           
  3386                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3387  001A2A  8694               	bsf	3988,3,c	;volatile
  3388                           
  3389                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3390  001A2C  8894               	bsf	3988,4,c	;volatile
  3391                           
  3392                           ;my_i2c.c: 297: SSPADD = addr;
  3393  001A2E  C0CD  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3394                           
  3395                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3396  001A32  0E00               	movlw	0
  3397  001A34  6EC7               	movwf	4039,c	;volatile
  3398                           
  3399                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3400  001A36  0E00               	movlw	0
  3401  001A38  6EC6               	movwf	4038,c	;volatile
  3402                           
  3403                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3404  001A3A  0E00               	movlw	0
  3405  001A3C  6EC5               	movwf	4037,c	;volatile
  3406                           
  3407                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3408  001A3E  0E0E               	movlw	14
  3409  001A40  12C6               	iorwf	4038,f,c	;volatile
  3410                           
  3411                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3412  001A42  8EC7               	bsf	4039,7,c	;volatile
  3413                           
  3414                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3415  001A44  8694               	bsf	3988,3,c	;volatile
  3416                           
  3417                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3418  001A46  8894               	bsf	3988,4,c	;volatile
  3419                           
  3420                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3421  001A48  80C5               	bsf	4037,0,c	;volatile
  3422                           
  3423                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3424  001A4A  8AC6               	bsf	4038,5,c	;volatile
  3425  001A4C  0012               	return	
  3426  001A4E                     __end_of_i2c_configure_slave:
  3427                           	opt stack 0
  3428                           tblptru	equ	0xFF8
  3429                           tblptrh	equ	0xFF7
  3430                           tblptrl	equ	0xFF6
  3431                           tablat	equ	0xFF5
  3432                           prodh	equ	0xFF4
  3433                           prodl	equ	0xFF3
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           indf1	equ	0xFE7
  3437                           fsr1h	equ	0xFE2
  3438                           fsr1l	equ	0xFE1
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _enable_interrupts *****************
  3447 ;; Defined at:
  3448 ;;		line 14 in file "src/interrupts.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		None
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3462 ;;      Params:         0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:   10
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text17
  3477  001BAE                     __ptext17:
  3478                           	opt stack 0
  3479  001BAE                     _enable_interrupts:
  3480                           	opt stack 20
  3481                           
  3482                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3483                           
  3484                           ;incstack = 0
  3485  001BAE  8ED0               	bsf	4048,7,c	;volatile
  3486                           
  3487                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3488  001BB0  8EF2               	bsf	intcon,7,c	;volatile
  3489                           
  3490                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3491  001BB2  8CF2               	bsf	intcon,6,c	;volatile
  3492  001BB4  0012               	return	
  3493  001BB6                     __end_of_enable_interrupts:
  3494                           	opt stack 0
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           prodh	equ	0xFF4
  3500                           prodl	equ	0xFF3
  3501                           intcon	equ	0xFF2
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           indf2	equ	0xFDF
  3508                           postinc2	equ	0xFDE
  3509                           postdec2	equ	0xFDD
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _block_on_To_msgqueues *****************
  3515 ;; Defined at:
  3516 ;;		line 258 in file "src/messages.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3530 ;;      Params:         0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0
  3532 ;;      Temps:          0       1       0       0       0
  3533 ;;      Totals:         0       1       0       0       0
  3534 ;;Total ram usage:        1 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:   13
  3537 ;; This function calls:
  3538 ;;		_Delay1KTCYx
  3539 ;;		_check_msg
  3540 ;;		_in_main
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text18
  3547  001394                     __ptext18:
  3548                           	opt stack 0
  3549  001394                     _block_on_To_msgqueues:
  3550                           	opt stack 17
  3551                           
  3552                           ;messages.c: 259: if (!in_main()) {
  3553                           
  3554                           ;incstack = 0
  3555  001394  EC8E  F00B         	call	_in_main	;wreg free
  3556  001398  0100               	movlb	0	; () banked
  3557  00139A  0100               	movlb	0	; () banked
  3558  00139C  51D2               	movf	(?_in_main+1)& (0+255),w,b
  3559  00139E  0100               	movlb	0	; () banked
  3560  0013A0  11D1               	iorwf	?_in_main& (0+255),w,b
  3561  0013A2  B4D8               	btfsc	status,2,c
  3562  0013A4  0012               	return	
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;messages.c: 261: }
  3566                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3567                           
  3568                           ; BSR set to: 0
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;messages.c: 260: return;
  3572  0013A6  0100               	movlb	0	; () banked
  3573  0013A8  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3574  0013AA  0E01               	movlw	1
  3575  0013AC  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3576  0013AE  0100               	movlb	0	; () banked
  3577  0013B0  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3578  0013B2                     l2594:
  3579                           
  3580                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3581  0013B2  0101               	movlb	1	; () banked
  3582  0013B4  0E01               	movlw	high _ToMainHigh_MQ
  3583  0013B6  0100               	movlb	0	; () banked
  3584  0013B8  0100               	movlb	0	; () banked
  3585  0013BA  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3586  0013BC  0101               	movlb	1	; () banked
  3587  0013BE  0E6C               	movlw	low _ToMainHigh_MQ
  3588  0013C0  0100               	movlb	0	; () banked
  3589  0013C2  0100               	movlb	0	; () banked
  3590  0013C4  6FCD               	movwf	check_msg@qptr& (0+255),b
  3591  0013C6  EC88  F00C         	call	_check_msg	;wreg free
  3592  0013CA  0900               	iorlw	0
  3593  0013CC  B4D8               	btfsc	status,2,c
  3594  0013CE  D007               	goto	l2600
  3595                           
  3596                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3597  0013D0  0100               	movlb	0	; () banked
  3598  0013D2  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3599  0013D4  0E00               	movlw	0
  3600  0013D6  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3601  0013D8  0100               	movlb	0	; () banked
  3602  0013DA  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3603  0013DC  0012               	return	
  3604  0013DE                     l2600:
  3605                           
  3606                           ;messages.c: 271: }
  3607                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3608  0013DE  0100               	movlb	0	; () banked
  3609  0013E0  0E00               	movlw	high _ToMainLow_MQ
  3610  0013E2  0100               	movlb	0	; () banked
  3611  0013E4  0100               	movlb	0	; () banked
  3612  0013E6  6FCE               	movwf	(check_msg@qptr+1)& (0+255),b
  3613  0013E8  0100               	movlb	0	; () banked
  3614  0013EA  0E80               	movlw	low _ToMainLow_MQ
  3615  0013EC  0100               	movlb	0	; () banked
  3616  0013EE  0100               	movlb	0	; () banked
  3617  0013F0  6FCD               	movwf	check_msg@qptr& (0+255),b
  3618  0013F2  EC88  F00C         	call	_check_msg	;wreg free
  3619  0013F6  0900               	iorlw	0
  3620  0013F8  B4D8               	btfsc	status,2,c
  3621  0013FA  D007               	goto	l2606
  3622                           
  3623                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3624  0013FC  0100               	movlb	0	; () banked
  3625  0013FE  6FD3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3626  001400  0E00               	movlw	0
  3627  001402  6E4F               	movwf	_MQ_Main_Willing_to_block,c
  3628  001404  0100               	movlb	0	; () banked
  3629  001406  51D3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3630  001408  0012               	return	
  3631  00140A                     l2606:
  3632                           
  3633                           ;messages.c: 278: }
  3634                           ;messages.c: 279: Delay1KTCYx(10);
  3635  00140A  0E0A               	movlw	10
  3636  00140C  EC7D  F00D         	call	_Delay1KTCYx
  3637  001410  D7D0               	goto	l2594
  3638  001412                     __end_of_block_on_To_msgqueues:
  3639                           	opt stack 0
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           prodh	equ	0xFF4
  3645                           prodl	equ	0xFF3
  3646                           intcon	equ	0xFF2
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           indf1	equ	0xFE7
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           indf2	equ	0xFDF
  3653                           postinc2	equ	0xFDE
  3654                           postdec2	equ	0xFDD
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _in_main *****************
  3660 ;; Defined at:
  3661 ;;		line 40 in file "src/interrupts.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  2   27[BANK0 ] int 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3675 ;;      Params:         0       2       0       0       0
  3676 ;;      Locals:         0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0
  3678 ;;      Totals:         0       2       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:   12
  3682 ;; This function calls:
  3683 ;;		_in_high_int
  3684 ;;		_in_low_int
  3685 ;; This function is called by:
  3686 ;;		_block_on_To_msgqueues
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text19
  3691  00171C                     __ptext19:
  3692                           	opt stack 0
  3693  00171C                     _in_main:
  3694                           	opt stack 17
  3695                           
  3696                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3697                           
  3698                           ;incstack = 0
  3699  00171C  EC6B  F00B         	call	_in_low_int	;wreg free
  3700  001720  0100               	movlb	0	; () banked
  3701  001722  0100               	movlb	0	; () banked
  3702  001724  51D0               	movf	(?_in_low_int+1)& (0+255),w,b
  3703  001726  0100               	movlb	0	; () banked
  3704  001728  11CF               	iorwf	?_in_low_int& (0+255),w,b
  3705  00172A  A4D8               	btfss	status,2,c
  3706  00172C  D011               	goto	l2184
  3707                           
  3708                           ; BSR set to: 0
  3709  00172E  ECAD  F00D         	call	_in_high_int	;wreg free
  3710  001732  0100               	movlb	0	; () banked
  3711  001734  0100               	movlb	0	; () banked
  3712  001736  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3713  001738  0100               	movlb	0	; () banked
  3714  00173A  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3715  00173C  A4D8               	btfss	status,2,c
  3716  00173E  D008               	goto	l2184
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;interrupts.c: 42: return (1);
  3720  001740  0E00               	movlw	0
  3721  001742  0100               	movlb	0	; () banked
  3722  001744  0100               	movlb	0	; () banked
  3723  001746  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3724  001748  0E01               	movlw	1
  3725  00174A  0100               	movlb	0	; () banked
  3726  00174C  6FD1               	movwf	?_in_main& (0+255),b
  3727  00174E  0012               	return	
  3728  001750                     l2184:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;interrupts.c: 44: return (0);
  3732  001750  0E00               	movlw	0
  3733  001752  0100               	movlb	0	; () banked
  3734  001754  0100               	movlb	0	; () banked
  3735  001756  6FD2               	movwf	(?_in_main+1)& (0+255),b
  3736  001758  0E00               	movlw	0
  3737  00175A  0100               	movlb	0	; () banked
  3738  00175C  6FD1               	movwf	?_in_main& (0+255),b
  3739  00175E  0012               	return	
  3740  001760                     __end_of_in_main:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           indf1	equ	0xFE7
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _in_low_int *****************
  3762 ;; Defined at:
  3763 ;;		line 30 in file "src/interrupts.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2   25[BANK0 ] int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3777 ;;      Params:         0       2       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       2       0       0       0
  3781 ;;Total ram usage:        2 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:   11
  3784 ;; This function calls:
  3785 ;;		_in_high_int
  3786 ;; This function is called by:
  3787 ;;		_in_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text20
  3792  0016D6                     __ptext20:
  3793                           	opt stack 0
  3794  0016D6                     _in_low_int:
  3795                           	opt stack 17
  3796                           
  3797                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801  0016D6  ACF2               	btfss	intcon,6,c	;volatile
  3802  0016D8  D008               	goto	l2162
  3803                           
  3804                           ;interrupts.c: 32: return (0);
  3805  0016DA  0E00               	movlw	0
  3806  0016DC  0100               	movlb	0	; () banked
  3807  0016DE  0100               	movlb	0	; () banked
  3808  0016E0  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3809  0016E2  0E00               	movlw	0
  3810  0016E4  0100               	movlb	0	; () banked
  3811  0016E6  6FCF               	movwf	?_in_low_int& (0+255),b
  3812  0016E8  0012               	return	
  3813  0016EA                     l2162:
  3814  0016EA  ECAD  F00D         	call	_in_high_int	;wreg free
  3815  0016EE  0100               	movlb	0	; () banked
  3816  0016F0  0100               	movlb	0	; () banked
  3817  0016F2  51CE               	movf	(?_in_high_int+1)& (0+255),w,b
  3818  0016F4  0100               	movlb	0	; () banked
  3819  0016F6  11CD               	iorwf	?_in_high_int& (0+255),w,b
  3820  0016F8  B4D8               	btfsc	status,2,c
  3821  0016FA  D008               	goto	l2170
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;interrupts.c: 34: return (0);
  3825  0016FC  0E00               	movlw	0
  3826  0016FE  0100               	movlb	0	; () banked
  3827  001700  0100               	movlb	0	; () banked
  3828  001702  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3829  001704  0E00               	movlw	0
  3830  001706  0100               	movlb	0	; () banked
  3831  001708  6FCF               	movwf	?_in_low_int& (0+255),b
  3832  00170A  0012               	return	
  3833  00170C                     l2170:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;interrupts.c: 36: return (1);
  3837  00170C  0E00               	movlw	0
  3838  00170E  0100               	movlb	0	; () banked
  3839  001710  0100               	movlb	0	; () banked
  3840  001712  6FD0               	movwf	(?_in_low_int+1)& (0+255),b
  3841  001714  0E01               	movlw	1
  3842  001716  0100               	movlb	0	; () banked
  3843  001718  6FCF               	movwf	?_in_low_int& (0+255),b
  3844  00171A  0012               	return	
  3845  00171C                     __end_of_in_low_int:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           intcon	equ	0xFF2
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           indf1	equ	0xFE7
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           
  3866 ;; *************** function _in_high_int *****************
  3867 ;; Defined at:
  3868 ;;		line 22 in file "src/interrupts.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2   23[BANK0 ] int 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3882 ;;      Params:         0       2       0       0       0
  3883 ;;      Locals:         0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         0       2       0       0       0
  3886 ;;Total ram usage:        2 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:   10
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_in_low_int
  3893 ;;		_in_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text21
  3898  001B5A                     __ptext21:
  3899                           	opt stack 0
  3900  001B5A                     _in_high_int:
  3901                           	opt stack 17
  3902                           
  3903                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;incstack = 0
  3907  001B5A  0E00               	movlw	0
  3908  001B5C  AEF2               	btfss	intcon,7,c	;volatile
  3909  001B5E  0E01               	movlw	1
  3910  001B60  0100               	movlb	0	; () banked
  3911  001B62  0100               	movlb	0	; () banked
  3912  001B64  6FCD               	movwf	?_in_high_int& (0+255),b
  3913  001B66  0100               	movlb	0	; () banked
  3914  001B68  6BCE               	clrf	(?_in_high_int+1)& (0+255),b
  3915  001B6A  0012               	return	
  3916  001B6C                     __end_of_in_high_int:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           indf1	equ	0xFE7
  3928                           fsr1h	equ	0xFE2
  3929                           fsr1l	equ	0xFE1
  3930                           indf2	equ	0xFDF
  3931                           postinc2	equ	0xFDE
  3932                           postdec2	equ	0xFDD
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _check_msg *****************
  3938 ;; Defined at:
  3939 ;;		line 222 in file "src/messages.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3942 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      unsigned char 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3954 ;;      Params:         0       2       0       0       0
  3955 ;;      Locals:         0       0       0       0       0
  3956 ;;      Temps:          0       1       0       0       0
  3957 ;;      Totals:         0       3       0       0       0
  3958 ;;Total ram usage:        3 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:   10
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_block_on_To_msgqueues
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text22
  3969  001910                     __ptext22:
  3970                           	opt stack 0
  3971  001910                     _check_msg:
  3972                           	opt stack 19
  3973                           
  3974                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;incstack = 0
  3978  001910  0100               	movlb	0	; () banked
  3979  001912  EE20 F035          	lfsr	2,53
  3980  001916  0100               	movlb	0	; () banked
  3981  001918  51CD               	movf	check_msg@qptr& (0+255),w,b
  3982  00191A  26D9               	addwf	fsr2l,f,c
  3983  00191C  0100               	movlb	0	; () banked
  3984  00191E  51CE               	movf	(check_msg@qptr+1)& (0+255),w,b
  3985  001920  22DA               	addwfc	fsr2h,f,c
  3986  001922  50DF               	movf	indf2,w,c
  3987  001924  0100               	movlb	0	; () banked
  3988  001926  6FCF               	movwf	??_check_msg& (0+255),b
  3989  001928  0100               	movlb	0	; () banked
  3990  00192A  51CF               	movf	??_check_msg& (0+255),w,b
  3991  00192C  0D0D               	mullw	13
  3992  00192E  50F3               	movf	prodl,w,c
  3993  001930  0100               	movlb	0	; () banked
  3994  001932  0100               	movlb	0	; () banked
  3995  001934  25CD               	addwf	check_msg@qptr& (0+255),w,b
  3996  001936  6ED9               	movwf	fsr2l,c
  3997  001938  50F4               	movf	prodh,w,c
  3998  00193A  0100               	movlb	0	; () banked
  3999  00193C  0100               	movlb	0	; () banked
  4000  00193E  21CE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4001  001940  6EDA               	movwf	fsr2h,c
  4002  001942  50DF               	movf	indf2,w,c
  4003  001944  0012               	return	
  4004  001946                     __end_of_check_msg:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           indf1	equ	0xFE7
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _Delay1KTCYx *****************
  4026 ;; Defined at:
  4027 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  unit            1    wreg     unsigned char 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  unit            1   23[BANK0 ] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		wreg
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         0       1       0       0       0
  4043 ;;      Temps:          0       0       0       0       0
  4044 ;;      Totals:         0       1       0       0       0
  4045 ;;Total ram usage:        1 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:   10
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_block_on_To_msgqueues
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text23
  4056  001AFA                     __ptext23:
  4057                           	opt stack 0
  4058  001AFA                     _Delay1KTCYx:
  4059                           	opt stack 19
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;incstack = 0
  4063                           ;Delay1KTCYx@unit stored from wreg
  4064  001AFA  CFE8 F0CD          	movff	wreg,Delay1KTCYx@unit
  4065  001AFE                     l728:
  4066  001AFE  0EFA               	movlw	250
  4067  001B00                     u2537:
  4068  001B00  F000               	nop	
  4069  001B02  2EE8               	decfsz	wreg,f,c
  4070  001B04  D7FD               	goto	u2537
  4071  001B06  0100               	movlb	0	; () banked
  4072  001B08  0100               	movlb	0	; () banked
  4073  001B0A  2FCD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4074  001B0C  D7F8               	goto	l728
  4075  001B0E  0012               	return	
  4076  001B10                     __end_of_Delay1KTCYx:
  4077                           	opt stack 0
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           indf1	equ	0xFE7
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _ToMainLow_recvmsg *****************
  4098 ;; Defined at:
  4099 ;;		line 112 in file "src/messages.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  maxlength       1    wreg     unsigned char 
  4102 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4103 ;;		 -> main@msgtype(1), 
  4104 ;;  data            2    2[BANK1 ] PTR void 
  4105 ;;		 -> main@msgbuffer(11), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4117 ;;      Params:         0       0       4       0       0
  4118 ;;      Locals:         0       0       1       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         0       0       5       0       0
  4121 ;;Total ram usage:        5 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   12
  4124 ;; This function calls:
  4125 ;;		_recv_msg
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text24
  4132  001760                     __ptext24:
  4133                           	opt stack 0
  4134  001760                     _ToMainLow_recvmsg:
  4135                           	opt stack 18
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;incstack = 0
  4139                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4140  001760  CFE8 F1A6          	movff	wreg,ToMainLow_recvmsg@maxlength
  4141                           
  4142                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4143  001764  0100               	movlb	0	; () banked
  4144  001766  0E00               	movlw	high _ToMainLow_MQ
  4145  001768  0100               	movlb	0	; () banked
  4146  00176A  0100               	movlb	0	; () banked
  4147  00176C  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4148  00176E  0100               	movlb	0	; () banked
  4149  001770  0E80               	movlw	low _ToMainLow_MQ
  4150  001772  0100               	movlb	0	; () banked
  4151  001774  0100               	movlb	0	; () banked
  4152  001776  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4153  001778  C1A6  F0D9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4154  00177C  0101               	movlb	1	; () banked
  4155  00177E  0100               	movlb	0	; () banked
  4156  001780  C1A3  F0DB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4157  001784  0101               	movlb	1	; () banked
  4158  001786  0100               	movlb	0	; () banked
  4159  001788  C1A2  F0DA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4160  00178C  0101               	movlb	1	; () banked
  4161  00178E  0100               	movlb	0	; () banked
  4162  001790  C1A5  F0DD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4163  001794  0101               	movlb	1	; () banked
  4164  001796  0100               	movlb	0	; () banked
  4165  001798  C1A4  F0DC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4166  00179C  EC08  F005         	call	_recv_msg	;wreg free
  4167  0017A0  0012               	return	
  4168  0017A2                     __end_of_ToMainLow_recvmsg:
  4169                           	opt stack 0
  4170                           tblptru	equ	0xFF8
  4171                           tblptrh	equ	0xFF7
  4172                           tblptrl	equ	0xFF6
  4173                           tablat	equ	0xFF5
  4174                           prodh	equ	0xFF4
  4175                           prodl	equ	0xFF3
  4176                           intcon	equ	0xFF2
  4177                           postinc0	equ	0xFEE
  4178                           wreg	equ	0xFE8
  4179                           indf1	equ	0xFE7
  4180                           fsr1h	equ	0xFE2
  4181                           fsr1l	equ	0xFE1
  4182                           indf2	equ	0xFDF
  4183                           postinc2	equ	0xFDE
  4184                           postdec2	equ	0xFDD
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function _ToMainHigh_recvmsg *****************
  4190 ;; Defined at:
  4191 ;;		line 135 in file "src/messages.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  maxlength       1    wreg     unsigned char 
  4194 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4195 ;;		 -> main@msgtype(1), 
  4196 ;;  data            2    2[BANK1 ] PTR void 
  4197 ;;		 -> main@msgbuffer(11), 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  maxlength       1    4[BANK1 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      char 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4209 ;;      Params:         0       0       4       0       0
  4210 ;;      Locals:         0       0       1       0       0
  4211 ;;      Temps:          0       0       0       0       0
  4212 ;;      Totals:         0       0       5       0       0
  4213 ;;Total ram usage:        5 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:   12
  4216 ;; This function calls:
  4217 ;;		_recv_msg
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text25
  4224  0017A2                     __ptext25:
  4225                           	opt stack 0
  4226  0017A2                     _ToMainHigh_recvmsg:
  4227                           	opt stack 18
  4228                           
  4229                           ;incstack = 0
  4230                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4231  0017A2  CFE8 F1A6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4232                           
  4233                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4234  0017A6  0101               	movlb	1	; () banked
  4235  0017A8  0E01               	movlw	high _ToMainHigh_MQ
  4236  0017AA  0100               	movlb	0	; () banked
  4237  0017AC  0100               	movlb	0	; () banked
  4238  0017AE  6FD8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4239  0017B0  0101               	movlb	1	; () banked
  4240  0017B2  0E6C               	movlw	low _ToMainHigh_MQ
  4241  0017B4  0100               	movlb	0	; () banked
  4242  0017B6  0100               	movlb	0	; () banked
  4243  0017B8  6FD7               	movwf	recv_msg@qptr& (0+255),b
  4244  0017BA  C1A6  F0D9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4245  0017BE  0101               	movlb	1	; () banked
  4246  0017C0  0100               	movlb	0	; () banked
  4247  0017C2  C1A3  F0DB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4248  0017C6  0101               	movlb	1	; () banked
  4249  0017C8  0100               	movlb	0	; () banked
  4250  0017CA  C1A2  F0DA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4251  0017CE  0101               	movlb	1	; () banked
  4252  0017D0  0100               	movlb	0	; () banked
  4253  0017D2  C1A5  F0DD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4254  0017D6  0101               	movlb	1	; () banked
  4255  0017D8  0100               	movlb	0	; () banked
  4256  0017DA  C1A4  F0DC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4257  0017DE  EC08  F005         	call	_recv_msg	;wreg free
  4258  0017E2  0012               	return	
  4259  0017E4                     __end_of_ToMainHigh_recvmsg:
  4260                           	opt stack 0
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           prodh	equ	0xFF4
  4266                           prodl	equ	0xFF3
  4267                           intcon	equ	0xFF2
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           indf1	equ	0xFE7
  4271                           fsr1h	equ	0xFE2
  4272                           fsr1l	equ	0xFE1
  4273                           indf2	equ	0xFDF
  4274                           postinc2	equ	0xFDE
  4275                           postdec2	equ	0xFDD
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _recv_msg *****************
  4281 ;; Defined at:
  4282 ;;		line 63 in file "src/messages.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4285 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4286 ;;  maxlength       1   35[BANK0 ] unsigned char 
  4287 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  4288 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4289 ;;  data            2   38[BANK0 ] PTR void 
  4290 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  4293 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4294 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4295 ;;  tlength         2   43[BANK0 ] unsigned int 
  4296 ;;  slot            1   42[BANK0 ] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      char 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4306 ;;      Params:         0       7       0       0       0
  4307 ;;      Locals:         0       5       0       0       0
  4308 ;;      Temps:          0       2       0       0       0
  4309 ;;      Totals:         0      14       0       0       0
  4310 ;;Total ram usage:       14 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:   11
  4313 ;; This function calls:
  4314 ;;		_memcpy
  4315 ;; This function is called by:
  4316 ;;		_ToMainLow_recvmsg
  4317 ;;		_ToMainHigh_recvmsg
  4318 ;;		_FromMainLow_recvmsg
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text26
  4323  000A10                     __ptext26:
  4324                           	opt stack 0
  4325  000A10                     _recv_msg:
  4326                           	opt stack 18
  4327                           
  4328                           ;messages.c: 64: unsigned char slot;
  4329                           ;messages.c: 68: msg *qmsg;
  4330                           ;messages.c: 69: size_t tlength;
  4331                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4332                           
  4333                           ;incstack = 0
  4334  000A10  0100               	movlb	0	; () banked
  4335  000A12  EE20 F035          	lfsr	2,53
  4336  000A16  0100               	movlb	0	; () banked
  4337  000A18  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4338  000A1A  26D9               	addwf	fsr2l,f,c
  4339  000A1C  0100               	movlb	0	; () banked
  4340  000A1E  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4341  000A20  22DA               	addwfc	fsr2h,f,c
  4342  000A22  50DF               	movf	indf2,w,c
  4343  000A24  0100               	movlb	0	; () banked
  4344  000A26  0100               	movlb	0	; () banked
  4345  000A28  6FE0               	movwf	recv_msg@slot& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4349  000A2A  0100               	movlb	0	; () banked
  4350  000A2C  0100               	movlb	0	; () banked
  4351  000A2E  51E0               	movf	recv_msg@slot& (0+255),w,b
  4352  000A30  0D0D               	mullw	13
  4353  000A32  50F3               	movf	prodl,w,c
  4354  000A34  0100               	movlb	0	; () banked
  4355  000A36  0100               	movlb	0	; () banked
  4356  000A38  25D7               	addwf	recv_msg@qptr& (0+255),w,b
  4357  000A3A  0100               	movlb	0	; () banked
  4358  000A3C  0100               	movlb	0	; () banked
  4359  000A3E  6FE3               	movwf	recv_msg@qmsg& (0+255),b
  4360  000A40  50F4               	movf	prodh,w,c
  4361  000A42  0100               	movlb	0	; () banked
  4362  000A44  0100               	movlb	0	; () banked
  4363  000A46  21D8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4364  000A48  0100               	movlb	0	; () banked
  4365  000A4A  6FE4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;messages.c: 74: if (qmsg->full == 1) {
  4369  000A4C  0E01               	movlw	1
  4370  000A4E  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4371  000A52  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4372  000A56  62DF               	cpfseq	indf2,c
  4373  000A58  D074               	goto	l3400
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4377  000A5A  0100               	movlb	0	; () banked
  4378  000A5C  EE20 F001          	lfsr	2,1
  4379  000A60  0100               	movlb	0	; () banked
  4380  000A62  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4381  000A64  26D9               	addwf	fsr2l,f,c
  4382  000A66  0100               	movlb	0	; () banked
  4383  000A68  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4384  000A6A  22DA               	addwfc	fsr2h,f,c
  4385  000A6C  50DF               	movf	indf2,w,c
  4386  000A6E  0100               	movlb	0	; () banked
  4387  000A70  0100               	movlb	0	; () banked
  4388  000A72  5DD9               	subwf	recv_msg@maxlength& (0+255),w,b
  4389  000A74  B0D8               	btfsc	status,0,c
  4390  000A76  D002               	goto	l3384
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;messages.c: 77: return (-3);
  4394  000A78  0EFD               	movlw	253
  4395  000A7A  0012               	return	
  4396  000A7C                     l3384:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;messages.c: 78: }
  4400                           ;messages.c: 80: tlength = qmsg->length;
  4401  000A7C  0100               	movlb	0	; () banked
  4402  000A7E  EE20 F001          	lfsr	2,1
  4403  000A82  0100               	movlb	0	; () banked
  4404  000A84  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4405  000A86  26D9               	addwf	fsr2l,f,c
  4406  000A88  0100               	movlb	0	; () banked
  4407  000A8A  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4408  000A8C  22DA               	addwfc	fsr2h,f,c
  4409  000A8E  50DF               	movf	indf2,w,c
  4410  000A90  0100               	movlb	0	; () banked
  4411  000A92  6FDE               	movwf	??_recv_msg& (0+255),b
  4412  000A94  0100               	movlb	0	; () banked
  4413  000A96  51DE               	movf	??_recv_msg& (0+255),w,b
  4414  000A98  0100               	movlb	0	; () banked
  4415  000A9A  0100               	movlb	0	; () banked
  4416  000A9C  6FE1               	movwf	recv_msg@tlength& (0+255),b
  4417  000A9E  0100               	movlb	0	; () banked
  4418  000AA0  6BE2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4422  000AA2  0100               	movlb	0	; () banked
  4423  000AA4  0100               	movlb	0	; () banked
  4424  000AA6  C0DD  F0CE         	movff	recv_msg@data+1,memcpy@d1+1
  4425  000AAA  0100               	movlb	0	; () banked
  4426  000AAC  0100               	movlb	0	; () banked
  4427  000AAE  C0DC  F0CD         	movff	recv_msg@data,memcpy@d1
  4428  000AB2  0E03               	movlw	3
  4429  000AB4  0100               	movlb	0	; () banked
  4430  000AB6  0100               	movlb	0	; () banked
  4431  000AB8  25E3               	addwf	recv_msg@qmsg& (0+255),w,b
  4432  000ABA  0100               	movlb	0	; () banked
  4433  000ABC  6FDE               	movwf	??_recv_msg& (0+255),b
  4434  000ABE  0E00               	movlw	0
  4435  000AC0  0100               	movlb	0	; () banked
  4436  000AC2  0100               	movlb	0	; () banked
  4437  000AC4  21E4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4438  000AC6  0100               	movlb	0	; () banked
  4439  000AC8  6FDF               	movwf	(??_recv_msg+1)& (0+255),b
  4440  000ACA  C0DE  F0CF         	movff	??_recv_msg,memcpy@s1
  4441  000ACE  C0DF  F0D0         	movff	??_recv_msg+1,memcpy@s1+1
  4442  000AD2  C0E1  F0D1         	movff	recv_msg@tlength,memcpy@n
  4443  000AD6  C0E2  F0D2         	movff	recv_msg@tlength+1,memcpy@n+1
  4444  000ADA  EC15  F00B         	call	_memcpy	;wreg free
  4445                           
  4446                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4447  000ADE  0100               	movlb	0	; () banked
  4448  000AE0  EE20 F035          	lfsr	2,53
  4449  000AE4  0100               	movlb	0	; () banked
  4450  000AE6  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4451  000AE8  26D9               	addwf	fsr2l,f,c
  4452  000AEA  0100               	movlb	0	; () banked
  4453  000AEC  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4454  000AEE  22DA               	addwfc	fsr2h,f,c
  4455  000AF0  0100               	movlb	0	; () banked
  4456  000AF2  EE10 F035          	lfsr	1,53
  4457  000AF6  0100               	movlb	0	; () banked
  4458  000AF8  51D7               	movf	recv_msg@qptr& (0+255),w,b
  4459  000AFA  26E1               	addwf	fsr1l,f,c
  4460  000AFC  0100               	movlb	0	; () banked
  4461  000AFE  51D8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4462  000B00  22E2               	addwfc	fsr1h,f,c
  4463  000B02  50E7               	movf	indf1,w,c
  4464  000B04  0100               	movlb	0	; () banked
  4465  000B06  6FDE               	movwf	??_recv_msg& (0+255),b
  4466  000B08  0100               	movlb	0	; () banked
  4467  000B0A  29DE               	incf	??_recv_msg& (0+255),w,b
  4468  000B0C  0B03               	andlw	3
  4469  000B0E  6EDF               	movwf	indf2,c
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4473  000B10  0100               	movlb	0	; () banked
  4474  000B12  EE20 F002          	lfsr	2,2
  4475  000B16  0100               	movlb	0	; () banked
  4476  000B18  51E3               	movf	recv_msg@qmsg& (0+255),w,b
  4477  000B1A  26D9               	addwf	fsr2l,f,c
  4478  000B1C  0100               	movlb	0	; () banked
  4479  000B1E  51E4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4480  000B20  22DA               	addwfc	fsr2h,f,c
  4481  000B22  C0DA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4482  000B26  C0DB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4483  000B2A  CFDF FFE7          	movff	indf2,indf1
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;messages.c: 91: qmsg->full = 0;
  4487  000B2E  C0E3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4488  000B32  C0E4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4489  000B36  0E00               	movlw	0
  4490  000B38  6EDF               	movwf	indf2,c
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;messages.c: 92: return (tlength);
  4494  000B3A  0100               	movlb	0	; () banked
  4495  000B3C  0100               	movlb	0	; () banked
  4496  000B3E  51E1               	movf	recv_msg@tlength& (0+255),w,b
  4497  000B40  0012               	return	
  4498  000B42                     l3400:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;messages.c: 94: return (-4);
  4502  000B42  0EFC               	movlw	252
  4503  000B44  0012               	return	
  4504  000B46                     __end_of_recv_msg:
  4505                           	opt stack 0
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           intcon	equ	0xFF2
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           indf1	equ	0xFE7
  4516                           fsr1h	equ	0xFE2
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _memcpy *****************
  4526 ;; Defined at:
  4527 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  d1              2   23[BANK0 ] PTR void 
  4530 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4531 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4532 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4533 ;;  s1              2   25[BANK0 ] PTR const void 
  4534 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4535 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4536 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  4537 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4538 ;;		 -> main@ic(28), main@uc(5), 
  4539 ;;  n               2   27[BANK0 ] unsigned int 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  4542 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4543 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4544 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  4545 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4546 ;;		 -> main@ic(28), main@uc(5), 
  4547 ;;  d               2   29[BANK0 ] PTR unsigned char 
  4548 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4549 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4550 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2   23[BANK0 ] PTR void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4560 ;;      Params:         0       6       0       0       0
  4561 ;;      Locals:         0       4       0       0       0
  4562 ;;      Temps:          0       0       0       0       0
  4563 ;;      Totals:         0      10       0       0       0
  4564 ;;Total ram usage:       10 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:   10
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_send_msg
  4571 ;;		_recv_msg
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text27
  4576  00162A                     __ptext27:
  4577                           	opt stack 0
  4578  00162A                     _memcpy:
  4579                           	opt stack 17
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;incstack = 0
  4583  00162A  0100               	movlb	0	; () banked
  4584  00162C  0100               	movlb	0	; () banked
  4585  00162E  C0D0  F0D6         	movff	memcpy@s1+1,memcpy@s+1
  4586  001632  0100               	movlb	0	; () banked
  4587  001634  0100               	movlb	0	; () banked
  4588  001636  C0CF  F0D5         	movff	memcpy@s1,memcpy@s
  4589  00163A  0100               	movlb	0	; () banked
  4590  00163C  0100               	movlb	0	; () banked
  4591  00163E  C0CE  F0D4         	movff	memcpy@d1+1,memcpy@d+1
  4592  001642  0100               	movlb	0	; () banked
  4593  001644  0100               	movlb	0	; () banked
  4594  001646  C0CD  F0D3         	movff	memcpy@d1,memcpy@d
  4595  00164A  D012               	goto	l3370
  4596  00164C                     l3364:
  4597                           
  4598                           ; BSR set to: 0
  4599  00164C  C0D5  FFD9         	movff	memcpy@s,fsr2l
  4600  001650  C0D6  FFDA         	movff	memcpy@s+1,fsr2h
  4601  001654  C0D3  FFE1         	movff	memcpy@d,fsr1l
  4602  001658  C0D4  FFE2         	movff	memcpy@d+1,fsr1h
  4603  00165C  CFDF FFE7          	movff	indf2,indf1
  4604                           
  4605                           ; BSR set to: 0
  4606  001660  0100               	movlb	0	; () banked
  4607  001662  0100               	movlb	0	; () banked
  4608  001664  4BD5               	infsnz	memcpy@s& (0+255),f,b
  4609  001666  2BD6               	incf	(memcpy@s+1)& (0+255),f,b
  4610                           
  4611                           ; BSR set to: 0
  4612  001668  0100               	movlb	0	; () banked
  4613  00166A  0100               	movlb	0	; () banked
  4614  00166C  4BD3               	infsnz	memcpy@d& (0+255),f,b
  4615  00166E  2BD4               	incf	(memcpy@d+1)& (0+255),f,b
  4616  001670                     l3370:
  4617                           
  4618                           ; BSR set to: 0
  4619  001670  0100               	movlb	0	; () banked
  4620  001672  0100               	movlb	0	; () banked
  4621  001674  07D1               	decf	memcpy@n& (0+255),f,b
  4622  001676  A0D8               	btfss	status,0,c
  4623  001678  07D2               	decf	(memcpy@n+1)& (0+255),f,b
  4624  00167A  0100               	movlb	0	; () banked
  4625  00167C  29D1               	incf	memcpy@n& (0+255),w,b
  4626  00167E  B4D8               	btfsc	status,2,c
  4627  001680  29D2               	incf	(memcpy@n+1)& (0+255),w,b
  4628  001682  B4D8               	btfsc	status,2,c
  4629                           
  4630                           ; BSR set to: 0
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;	Return value of _memcpy is never used
  4634  001684  0012               	return	
  4635  001686  D7E2               	goto	l3364
  4636  001688                     __end_of_memcpy:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           intcon	equ	0xFF2
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           indf1	equ	0xFE7
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           postinc2	equ	0xFDE
  4652                           postdec2	equ	0xFDD
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _OpenUSART *****************
  4658 ;; Defined at:
  4659 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  config          1    wreg     unsigned char 
  4662 ;;  spbrg           2   23[BANK0 ] unsigned int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  config          1   28[BANK0 ] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;		None               void
  4667 ;; Registers used:
  4668 ;;		wreg, status,2
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4674 ;;      Params:         0       2       0       0       0
  4675 ;;      Locals:         0       1       0       0       0
  4676 ;;      Temps:          0       3       0       0       0
  4677 ;;      Totals:         0       6       0       0       0
  4678 ;;Total ram usage:        6 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   10
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text28
  4689  0011F6                     __ptext28:
  4690                           	opt stack 0
  4691  0011F6                     _OpenUSART:
  4692                           	opt stack 20
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;incstack = 0
  4696                           ;OpenUSART@config stored from wreg
  4697  0011F6  CFE8 F0D2          	movff	wreg,OpenUSART@config
  4698  0011FA  0E00               	movlw	0
  4699  0011FC  6EAC               	movwf	4012,c	;volatile
  4700  0011FE  0E00               	movlw	0
  4701  001200  6EAB               	movwf	4011,c	;volatile
  4702  001202  0100               	movlb	0	; () banked
  4703  001204  0100               	movlb	0	; () banked
  4704  001206  B1D2               	btfsc	OpenUSART@config& (0+255),0,b
  4705                           
  4706                           ; BSR set to: 0
  4707  001208  88AC               	bsf	4012,4,c	;volatile
  4708                           
  4709                           ; BSR set to: 0
  4710                           
  4711                           ; BSR set to: 0
  4712  00120A  0100               	movlb	0	; () banked
  4713  00120C  0100               	movlb	0	; () banked
  4714  00120E  A3D2               	btfss	OpenUSART@config& (0+255),1,b
  4715  001210  D002               	goto	l2548
  4716                           
  4717                           ; BSR set to: 0
  4718  001212  8CAC               	bsf	4012,6,c	;volatile
  4719  001214  8CAB               	bsf	4011,6,c	;volatile
  4720  001216                     l2548:
  4721                           
  4722                           ; BSR set to: 0
  4723  001216  0100               	movlb	0	; () banked
  4724  001218  0100               	movlb	0	; () banked
  4725  00121A  B5D2               	btfsc	OpenUSART@config& (0+255),2,b
  4726                           
  4727                           ; BSR set to: 0
  4728  00121C  8EAC               	bsf	4012,7,c	;volatile
  4729                           
  4730                           ; BSR set to: 0
  4731                           
  4732                           ; BSR set to: 0
  4733  00121E  0100               	movlb	0	; () banked
  4734  001220  0100               	movlb	0	; () banked
  4735  001222  A7D2               	btfss	OpenUSART@config& (0+255),3,b
  4736  001224  D002               	goto	l472
  4737                           
  4738                           ; BSR set to: 0
  4739  001226  88AB               	bsf	4011,4,c	;volatile
  4740  001228  D001               	goto	l2556
  4741  00122A                     l472:
  4742                           
  4743                           ; BSR set to: 0
  4744  00122A  8AAB               	bsf	4011,5,c	;volatile
  4745  00122C                     l2556:
  4746                           
  4747                           ; BSR set to: 0
  4748  00122C  0100               	movlb	0	; () banked
  4749  00122E  0100               	movlb	0	; () banked
  4750  001230  B9D2               	btfsc	OpenUSART@config& (0+255),4,b
  4751                           
  4752                           ; BSR set to: 0
  4753  001232  84AC               	bsf	4012,2,c	;volatile
  4754                           
  4755                           ; BSR set to: 0
  4756  001234  989E               	bcf	3998,4,c	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759  001236  0100               	movlb	0	; () banked
  4760  001238  0100               	movlb	0	; () banked
  4761  00123A  BBD2               	btfsc	OpenUSART@config& (0+255),5,b
  4762                           
  4763                           ; BSR set to: 0
  4764  00123C  86AB               	bsf	4011,3,c	;volatile
  4765                           
  4766                           ; BSR set to: 0
  4767                           
  4768                           ; BSR set to: 0
  4769  00123E  0100               	movlb	0	; () banked
  4770  001240  0100               	movlb	0	; () banked
  4771  001242  ADD2               	btfss	OpenUSART@config& (0+255),6,b
  4772  001244  D002               	goto	l476
  4773                           
  4774                           ; BSR set to: 0
  4775  001246  8A9D               	bsf	3997,5,c	;volatile
  4776  001248  D001               	goto	l477
  4777  00124A                     l476:
  4778                           
  4779                           ; BSR set to: 0
  4780  00124A  9A9D               	bcf	3997,5,c	;volatile
  4781  00124C                     l477:
  4782                           
  4783                           ; BSR set to: 0
  4784  00124C  9A9E               	bcf	3998,5,c	;volatile
  4785                           
  4786                           ; BSR set to: 0
  4787  00124E  0100               	movlb	0	; () banked
  4788  001250  0100               	movlb	0	; () banked
  4789  001252  AFD2               	btfss	OpenUSART@config& (0+255),7,b
  4790  001254  D002               	goto	l478
  4791                           
  4792                           ; BSR set to: 0
  4793  001256  889D               	bsf	3997,4,c	;volatile
  4794  001258  D001               	goto	l479
  4795  00125A                     l478:
  4796                           
  4797                           ; BSR set to: 0
  4798  00125A  989D               	bcf	3997,4,c	;volatile
  4799  00125C                     l479:
  4800                           
  4801                           ; BSR set to: 0
  4802  00125C  C0CD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4803                           
  4804                           ; BSR set to: 0
  4805  001260  0100               	movlb	0	; () banked
  4806  001262  C0CE  F0CF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4807  001266  C0CF  F0D0         	movff	??_OpenUSART,??_OpenUSART+1
  4808  00126A  0100               	movlb	0	; () banked
  4809  00126C  6BD1               	clrf	(??_OpenUSART+2)& (0+255),b
  4810  00126E  0100               	movlb	0	; () banked
  4811  001270  51D0               	movf	(??_OpenUSART+1)& (0+255),w,b
  4812  001272  6EB0               	movwf	4016,c	;volatile
  4813                           
  4814                           ; BSR set to: 0
  4815  001274  8AAC               	bsf	4012,5,c	;volatile
  4816                           
  4817                           ; BSR set to: 0
  4818  001276  8EAB               	bsf	4011,7,c	;volatile
  4819                           
  4820                           ; BSR set to: 0
  4821  001278  9C94               	bcf	3988,6,c	;volatile
  4822                           
  4823                           ; BSR set to: 0
  4824  00127A  8E94               	bsf	3988,7,c	;volatile
  4825                           
  4826                           ; BSR set to: 0
  4827  00127C  A8AC               	btfss	4012,4,c	;volatile
  4828  00127E  0012               	return	
  4829                           
  4830                           ; BSR set to: 0
  4831  001280  BEAC               	btfsc	4012,7,c	;volatile
  4832  001282  0012               	return	
  4833                           
  4834                           ; BSR set to: 0
  4835  001284  8C94               	bsf	3988,6,c	;volatile
  4836  001286  0012               	return	
  4837  001288                     __end_of_OpenUSART:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           postinc0	equ	0xFEE
  4847                           wreg	equ	0xFE8
  4848                           indf1	equ	0xFE7
  4849                           fsr1h	equ	0xFE2
  4850                           fsr1l	equ	0xFE1
  4851                           indf2	equ	0xFDF
  4852                           postinc2	equ	0xFDE
  4853                           postdec2	equ	0xFDD
  4854                           fsr2h	equ	0xFDA
  4855                           fsr2l	equ	0xFD9
  4856                           status	equ	0xFD8
  4857                           
  4858 ;; *************** function _OpenTimer1 *****************
  4859 ;; Defined at:
  4860 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  config          1    wreg     unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  config          1   23[BANK0 ] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4874 ;;      Params:         0       0       0       0       0
  4875 ;;      Locals:         0       1       0       0       0
  4876 ;;      Temps:          0       0       0       0       0
  4877 ;;      Totals:         0       1       0       0       0
  4878 ;;Total ram usage:        1 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:   10
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text29
  4889  0018A2                     __ptext29:
  4890                           	opt stack 0
  4891  0018A2                     _OpenTimer1:
  4892                           	opt stack 20
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;incstack = 0
  4896                           ;OpenTimer1@config stored from wreg
  4897  0018A2  CFE8 F0CD          	movff	wreg,OpenTimer1@config
  4898  0018A6  0100               	movlb	0	; () banked
  4899  0018A8  0100               	movlb	0	; () banked
  4900  0018AA  51CD               	movf	OpenTimer1@config& (0+255),w,b
  4901  0018AC  0B7E               	andlw	126
  4902  0018AE  6ECD               	movwf	4045,c	;volatile
  4903                           
  4904                           ; BSR set to: 0
  4905  0018B0  0100               	movlb	0	; () banked
  4906  0018B2  0100               	movlb	0	; () banked
  4907  0018B4  ADCD               	btfss	OpenTimer1@config& (0+255),6,b
  4908  0018B6  D002               	goto	l428
  4909                           
  4910                           ; BSR set to: 0
  4911  0018B8  8ECD               	bsf	4045,7,c	;volatile
  4912  0018BA  D001               	goto	l2508
  4913  0018BC                     l428:
  4914                           
  4915                           ; BSR set to: 0
  4916  0018BC  9ECD               	bcf	4045,7,c	;volatile
  4917  0018BE                     l2508:
  4918                           
  4919                           ; BSR set to: 0
  4920  0018BE  0E00               	movlw	0
  4921  0018C0  6ECF               	movwf	4047,c	;volatile
  4922  0018C2  0E00               	movlw	0
  4923  0018C4  6ECE               	movwf	4046,c	;volatile
  4924                           
  4925                           ; BSR set to: 0
  4926  0018C6  909E               	bcf	3998,0,c	;volatile
  4927                           
  4928                           ; BSR set to: 0
  4929  0018C8  0100               	movlb	0	; () banked
  4930  0018CA  0100               	movlb	0	; () banked
  4931  0018CC  AFCD               	btfss	OpenTimer1@config& (0+255),7,b
  4932  0018CE  D002               	goto	l430
  4933                           
  4934                           ; BSR set to: 0
  4935  0018D0  809D               	bsf	3997,0,c	;volatile
  4936  0018D2  D001               	goto	l431
  4937  0018D4                     l430:
  4938                           
  4939                           ; BSR set to: 0
  4940  0018D4  909D               	bcf	3997,0,c	;volatile
  4941  0018D6                     l431:
  4942                           
  4943                           ; BSR set to: 0
  4944  0018D6  80CD               	bsf	4045,0,c	;volatile
  4945                           
  4946                           ; BSR set to: 0
  4947  0018D8  0012               	return	
  4948  0018DA                     __end_of_OpenTimer1:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           intcon	equ	0xFF2
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           indf1	equ	0xFE7
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           postinc2	equ	0xFDE
  4964                           postdec2	equ	0xFDD
  4965                           fsr2h	equ	0xFDA
  4966                           fsr2l	equ	0xFD9
  4967                           status	equ	0xFD8
  4968                           
  4969 ;; *************** function _OpenTimer0 *****************
  4970 ;; Defined at:
  4971 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  config          1    wreg     unsigned char 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  config          1   23[BANK0 ] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;		None               void
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4985 ;;      Params:         0       0       0       0       0
  4986 ;;      Locals:         0       1       0       0       0
  4987 ;;      Temps:          0       0       0       0       0
  4988 ;;      Totals:         0       1       0       0       0
  4989 ;;Total ram usage:        1 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:   10
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text30
  5000  0019D2                     __ptext30:
  5001                           	opt stack 0
  5002  0019D2                     _OpenTimer0:
  5003                           	opt stack 20
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;incstack = 0
  5007                           ;OpenTimer0@config stored from wreg
  5008  0019D2  CFE8 F0CD          	movff	wreg,OpenTimer0@config
  5009  0019D6  0100               	movlb	0	; () banked
  5010  0019D8  0100               	movlb	0	; () banked
  5011  0019DA  51CD               	movf	OpenTimer0@config& (0+255),w,b
  5012  0019DC  0B7F               	andlw	127
  5013  0019DE  6ED5               	movwf	4053,c	;volatile
  5014                           
  5015                           ; BSR set to: 0
  5016  0019E0  0E00               	movlw	0
  5017  0019E2  6ED7               	movwf	4055,c	;volatile
  5018                           
  5019                           ; BSR set to: 0
  5020  0019E4  0E00               	movlw	0
  5021  0019E6  6ED6               	movwf	4054,c	;volatile
  5022                           
  5023                           ; BSR set to: 0
  5024  0019E8  94F2               	bcf	intcon,2,c	;volatile
  5025                           
  5026                           ; BSR set to: 0
  5027  0019EA  0100               	movlb	0	; () banked
  5028  0019EC  0100               	movlb	0	; () banked
  5029  0019EE  AFCD               	btfss	OpenTimer0@config& (0+255),7,b
  5030  0019F0  D002               	goto	l404
  5031                           
  5032                           ; BSR set to: 0
  5033  0019F2  8AF2               	bsf	intcon,5,c	;volatile
  5034  0019F4  D001               	goto	l405
  5035  0019F6                     l404:
  5036                           
  5037                           ; BSR set to: 0
  5038  0019F6  9AF2               	bcf	intcon,5,c	;volatile
  5039  0019F8                     l405:
  5040                           
  5041                           ; BSR set to: 0
  5042  0019F8  8ED5               	bsf	4053,7,c	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045  0019FA  0012               	return	
  5046  0019FC                     __end_of_OpenTimer0:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           indf1	equ	0xFE7
  5058                           fsr1h	equ	0xFE2
  5059                           fsr1l	equ	0xFE1
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _InterruptHandlerLow *****************
  5068 ;; Defined at:
  5069 ;;		line 122 in file "src/interrupts.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;		None               void
  5076 ;; Registers used:
  5077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0
  5085 ;;      Temps:         17       0       0       0       0
  5086 ;;      Totals:        17       0       0       0       0
  5087 ;;Total ram usage:       17 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    9
  5090 ;; This function calls:
  5091 ;;		_timer1_int_handler
  5092 ;;		_uart_recv_int_handler
  5093 ;; This function is called by:
  5094 ;;		Interrupt level 1
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	intcodelo
  5099  000018                     __pintcodelo:
  5100                           	opt stack 0
  5101  000018                     _InterruptHandlerLow:
  5102                           	opt stack 17
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;incstack = 0
  5106  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5107  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5108  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5109  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5110  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5111  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5112  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5113  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5114  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5115  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5116  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5117  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5118  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5119  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5120  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5121  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5122  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5123                           
  5124                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5125  00005C  A09E               	btfss	3998,0,c	;volatile
  5126  00005E  D003               	goto	i1l3580
  5127                           
  5128                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5129  000060  909E               	bcf	3998,0,c	;volatile
  5130                           
  5131                           ;interrupts.c: 126: timer1_int_handler();
  5132  000062  ECA3  F00C         	call	_timer1_int_handler	;wreg free
  5133  000066                     i1l3580:
  5134                           
  5135                           ;interrupts.c: 127: }
  5136                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5137  000066  AA9E               	btfss	3998,5,c	;volatile
  5138  000068  D003               	goto	i1l3586
  5139                           
  5140                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5141  00006A  9A9E               	bcf	3998,5,c	;volatile
  5142                           
  5143                           ;interrupts.c: 132: uart_recv_int_handler();
  5144  00006C  ECAD  F008         	call	_uart_recv_int_handler	;wreg free
  5145  000070                     i1l3586:
  5146                           
  5147                           ;interrupts.c: 133: }
  5148                           ;interrupts.c: 136: if (PIR1bits.TXIF) {
  5149  000070  B89E               	btfsc	3998,4,c	;volatile
  5150                           
  5151                           ;interrupts.c: 137: PIR1bits.TXIF = 0;
  5152  000072  989E               	bcf	3998,4,c	;volatile
  5153  000074  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5154  000078  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5155  00007C  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5156  000080  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5157  000084  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5158  000088  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5159  00008C  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5160  000090  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5161  000094  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5162  000098  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5163  00009C  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5164  0000A0  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5165  0000A4  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5166  0000A8  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5167  0000AC  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5168  0000B0  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5169  0000B4  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5170  0000B8  0010               	retfie	
  5171  0000BA                     __end_of_InterruptHandlerLow:
  5172                           	opt stack 0
  5173                           pclatu	equ	0xFFB
  5174                           pclath	equ	0xFFA
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           intcon	equ	0xFF2
  5182                           postinc0	equ	0xFEE
  5183                           fsr0h	equ	0xFEA
  5184                           fsr0l	equ	0xFE9
  5185                           wreg	equ	0xFE8
  5186                           indf1	equ	0xFE7
  5187                           fsr1h	equ	0xFE2
  5188                           fsr1l	equ	0xFE1
  5189                           bsr	equ	0xFE0
  5190                           indf2	equ	0xFDF
  5191                           postinc2	equ	0xFDE
  5192                           postdec2	equ	0xFDD
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _uart_recv_int_handler *****************
  5198 ;; Defined at:
  5199 ;;		line 11 in file "src/my_uart.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;		None               void
  5206 ;; Registers used:
  5207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5213 ;;      Params:         0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0
  5215 ;;      Temps:          1       0       0       0       0
  5216 ;;      Totals:         1       0       0       0       0
  5217 ;;Total ram usage:        1 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    8
  5220 ;; This function calls:
  5221 ;;		_ReadUSART
  5222 ;;		i1_ToMainLow_sendmsg
  5223 ;; This function is called by:
  5224 ;;		_InterruptHandlerLow
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text32
  5229  00115A                     __ptext32:
  5230                           	opt stack 0
  5231  00115A                     _uart_recv_int_handler:
  5232                           	opt stack 17
  5233                           
  5234                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5235                           
  5236                           ;incstack = 0
  5237  00115A  AA9E               	btfss	3998,5,c	;volatile
  5238  00115C  D03C               	goto	i1l3568
  5239                           
  5240                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5241  00115E  EE20 F004          	lfsr	2,4
  5242  001162  504D               	movf	_uc_ptr,w,c
  5243  001164  26D9               	addwf	fsr2l,f,c
  5244  001166  504E               	movf	_uc_ptr+1,w,c
  5245  001168  22DA               	addwfc	fsr2h,f,c
  5246  00116A  50DF               	movf	indf2,w,c
  5247  00116C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5248  00116E  501B               	movf	??_uart_recv_int_handler,w,c
  5249  001170  0D01               	mullw	1
  5250  001172  50F3               	movf	prodl,w,c
  5251  001174  244D               	addwf	_uc_ptr,w,c
  5252  001176  6ED9               	movwf	fsr2l,c
  5253  001178  50F4               	movf	prodh,w,c
  5254  00117A  204E               	addwfc	_uc_ptr+1,w,c
  5255  00117C  6EDA               	movwf	fsr2h,c
  5256  00117E  EC6E  F00D         	call	_ReadUSART	;wreg free
  5257  001182  6EDF               	movwf	indf2,c
  5258                           
  5259                           ;my_uart.c: 25: uc_ptr->buflen++;
  5260  001184  EE20 F004          	lfsr	2,4
  5261  001188  504D               	movf	_uc_ptr,w,c
  5262  00118A  26D9               	addwf	fsr2l,f,c
  5263  00118C  504E               	movf	_uc_ptr+1,w,c
  5264  00118E  22DA               	addwfc	fsr2h,f,c
  5265  001190  2ADF               	incf	indf2,f,c
  5266                           
  5267                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5268  001192  EE20 F004          	lfsr	2,4
  5269  001196  504D               	movf	_uc_ptr,w,c
  5270  001198  26D9               	addwf	fsr2l,f,c
  5271  00119A  504E               	movf	_uc_ptr+1,w,c
  5272  00119C  22DA               	addwfc	fsr2h,f,c
  5273  00119E  0E04               	movlw	4
  5274  0011A0  62DF               	cpfseq	indf2,c
  5275  0011A2  D019               	goto	i1l3568
  5276                           
  5277                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5278  0011A4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5279  0011A6  0E20               	movlw	32
  5280  0011A8  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5281  0011AA  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5282  0011AC  C04E  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5283  0011B0  C04D  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5284  0011B4  EE20 F004          	lfsr	2,4
  5285  0011B8  504D               	movf	_uc_ptr,w,c
  5286  0011BA  26D9               	addwf	fsr2l,f,c
  5287  0011BC  504E               	movf	_uc_ptr+1,w,c
  5288  0011BE  22DA               	addwfc	fsr2h,f,c
  5289  0011C0  50DF               	movf	indf2,w,c
  5290  0011C2  EC27  F00D         	call	i1_ToMainLow_sendmsg
  5291                           
  5292                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5293  0011C6  EE20 F004          	lfsr	2,4
  5294  0011CA  504D               	movf	_uc_ptr,w,c
  5295  0011CC  26D9               	addwf	fsr2l,f,c
  5296  0011CE  504E               	movf	_uc_ptr+1,w,c
  5297  0011D0  22DA               	addwfc	fsr2h,f,c
  5298  0011D2  0E00               	movlw	0
  5299  0011D4  6EDF               	movwf	indf2,c
  5300  0011D6                     i1l3568:
  5301                           
  5302                           ;my_uart.c: 30: }
  5303                           ;my_uart.c: 31: }
  5304                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5305  0011D6  A650               	btfss	_USART_Status,3,c
  5306  0011D8  0012               	return	
  5307                           
  5308                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5309  0011DA  98AB               	bcf	4011,4,c	;volatile
  5310                           
  5311                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5312  0011DC  88AB               	bsf	4011,4,c	;volatile
  5313                           
  5314                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5315  0011DE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5316  0011E0  0E1E               	movlw	30
  5317  0011E2  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5318  0011E4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5319  0011E6  0E00               	movlw	0
  5320  0011E8  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5321  0011EA  0E00               	movlw	0
  5322  0011EC  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5323  0011EE  0E00               	movlw	0
  5324  0011F0  EC27  F00D         	call	i1_ToMainLow_sendmsg
  5325  0011F4  0012               	return	
  5326  0011F6                     __end_of_uart_recv_int_handler:
  5327                           	opt stack 0
  5328                           pclatu	equ	0xFFB
  5329                           pclath	equ	0xFFA
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           indf1	equ	0xFE7
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           bsr	equ	0xFE0
  5345                           indf2	equ	0xFDF
  5346                           postinc2	equ	0xFDE
  5347                           postdec2	equ	0xFDD
  5348                           fsr2h	equ	0xFDA
  5349                           fsr2l	equ	0xFD9
  5350                           status	equ	0xFD8
  5351                           
  5352 ;; *************** function _ReadUSART *****************
  5353 ;; Defined at:
  5354 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  data            1    0[COMRAM] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      unsigned char 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5368 ;;      Params:         0       0       0       0       0
  5369 ;;      Locals:         1       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0
  5371 ;;      Totals:         1       0       0       0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    5
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_uart_recv_int_handler
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text33
  5383  001ADC                     __ptext33:
  5384                           	opt stack 0
  5385  001ADC                     _ReadUSART:
  5386                           	opt stack 19
  5387                           
  5388                           ;incstack = 0
  5389  001ADC  0EF2               	movlw	242
  5390  001ADE  1650               	andwf	_USART_Status,f,c
  5391  001AE0  ACAB               	btfss	4011,6,c	;volatile
  5392  001AE2  D003               	goto	i1l502
  5393  001AE4  9050               	bcf	_USART_Status,0,c
  5394  001AE6  B0AB               	btfsc	4011,0,c	;volatile
  5395  001AE8  8050               	bsf	_USART_Status,0,c
  5396  001AEA                     i1l502:
  5397  001AEA  B4AB               	btfsc	4011,2,c	;volatile
  5398  001AEC  8450               	bsf	_USART_Status,2,c
  5399  001AEE  B2AB               	btfsc	4011,1,c	;volatile
  5400  001AF0  8650               	bsf	_USART_Status,3,c
  5401  001AF2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5402  001AF6  5001               	movf	ReadUSART@data,w,c
  5403  001AF8  0012               	return	
  5404  001AFA                     __end_of_ReadUSART:
  5405                           	opt stack 0
  5406                           pclatu	equ	0xFFB
  5407                           pclath	equ	0xFFA
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           postinc0	equ	0xFEE
  5416                           fsr0h	equ	0xFEA
  5417                           fsr0l	equ	0xFE9
  5418                           wreg	equ	0xFE8
  5419                           indf1	equ	0xFE7
  5420                           fsr1h	equ	0xFE2
  5421                           fsr1l	equ	0xFE1
  5422                           bsr	equ	0xFE0
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _timer1_int_handler *****************
  5431 ;; Defined at:
  5432 ;;		line 36 in file "src/user_interrupts.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  result          2   27[COMRAM] unsigned int 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;		None               void
  5439 ;; Registers used:
  5440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5446 ;;      Params:         0       0       0       0       0
  5447 ;;      Locals:         2       0       0       0       0
  5448 ;;      Temps:          1       0       0       0       0
  5449 ;;      Totals:         3       0       0       0       0
  5450 ;;Total ram usage:        3 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    8
  5453 ;; This function calls:
  5454 ;;		_WriteTimer1
  5455 ;;		i1_ReadTimer1
  5456 ;;		i1_ToMainLow_sendmsg
  5457 ;; This function is called by:
  5458 ;;		_InterruptHandlerLow
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text34
  5463  001946                     __ptext34:
  5464                           	opt stack 0
  5465  001946                     _timer1_int_handler:
  5466                           	opt stack 17
  5467                           
  5468                           ;user_interrupts.c: 37: unsigned int result;
  5469                           ;user_interrupts.c: 44: result = ReadTimer1();
  5470                           
  5471                           ;incstack = 0
  5472  001946  ECB6  F00D         	call	i1_ReadTimer1	;wreg free
  5473  00194A  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  5474  00194E  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  5475                           
  5476                           ;user_interrupts.c: 46: ToMainLow_sendmsg(0, 11, (void *) 0);
  5477  001952  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5478  001954  0E0B               	movlw	11
  5479  001956  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5480  001958  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5481  00195A  0E00               	movlw	0
  5482  00195C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5483  00195E  0E00               	movlw	0
  5484  001960  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5485  001962  0E00               	movlw	0
  5486  001964  EC27  F00D         	call	i1_ToMainLow_sendmsg
  5487                           
  5488                           ;user_interrupts.c: 49: WriteTimer1(0);
  5489  001968  0E00               	movlw	0
  5490  00196A  6E02               	movwf	WriteTimer1@timer1+1,c
  5491  00196C  0E00               	movlw	0
  5492  00196E  6E01               	movwf	WriteTimer1@timer1,c
  5493  001970  ECBF  F00D         	call	_WriteTimer1	;wreg free
  5494  001974  0012               	return	
  5495  001976                     __end_of_timer1_int_handler:
  5496                           	opt stack 0
  5497                           pclatu	equ	0xFFB
  5498                           pclath	equ	0xFFA
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           postinc0	equ	0xFEE
  5507                           fsr0h	equ	0xFEA
  5508                           fsr0l	equ	0xFE9
  5509                           wreg	equ	0xFE8
  5510                           indf1	equ	0xFE7
  5511                           fsr1h	equ	0xFE2
  5512                           fsr1l	equ	0xFE1
  5513                           bsr	equ	0xFE0
  5514                           indf2	equ	0xFDF
  5515                           postinc2	equ	0xFDE
  5516                           postdec2	equ	0xFDD
  5517                           fsr2h	equ	0xFDA
  5518                           fsr2l	equ	0xFD9
  5519                           status	equ	0xFD8
  5520                           
  5521 ;; *************** function i1_ToMainLow_sendmsg *****************
  5522 ;; Defined at:
  5523 ;;		line 103 in file "src/messages.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  length          1    wreg     unsigned char 
  5526 ;;  msgtype         1   22[COMRAM] unsigned char 
  5527 ;;  data            2   23[COMRAM] PTR void 
  5528 ;;		 -> timer1_lthread@ctrl(2), NULL(0), main@uc(5), 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  length          1   25[COMRAM] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      char 
  5533 ;; Registers used:
  5534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5540 ;;      Params:         3       0       0       0       0
  5541 ;;      Locals:         1       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0
  5543 ;;      Totals:         4       0       0       0       0
  5544 ;;Total ram usage:        4 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    7
  5547 ;; This function calls:
  5548 ;;		i1_send_msg
  5549 ;; This function is called by:
  5550 ;;		_uart_recv_int_handler
  5551 ;;		_timer1_int_handler
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text35
  5556  001A4E                     __ptext35:
  5557                           	opt stack 0
  5558  001A4E                     i1_ToMainLow_sendmsg:
  5559                           	opt stack 17
  5560                           
  5561                           ;incstack = 0
  5562                           ;i1ToMainLow_sendmsg@length stored from wreg
  5563  001A4E  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  5564                           
  5565                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5566                           ;	Return value of i1_ToMainLow_sendmsg is never used
  5567  001A52  0100               	movlb	0	; () banked
  5568  001A54  0E00               	movlw	high _ToMainLow_MQ
  5569  001A56  6E0C               	movwf	i1send_msg@qptr+1,c
  5570  001A58  0100               	movlb	0	; () banked
  5571  001A5A  0E80               	movlw	low _ToMainLow_MQ
  5572  001A5C  6E0B               	movwf	i1send_msg@qptr,c
  5573  001A5E  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  5574  001A62  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5575  001A66  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5576  001A6A  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  5577  001A6E  EC03  F008         	call	i1_send_msg	;wreg free
  5578  001A72  0012               	return	
  5579  001A74                     __end_ofi1_ToMainLow_sendmsg:
  5580                           	opt stack 0
  5581                           pclatu	equ	0xFFB
  5582                           pclath	equ	0xFFA
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           intcon	equ	0xFF2
  5590                           postinc0	equ	0xFEE
  5591                           fsr0h	equ	0xFEA
  5592                           fsr0l	equ	0xFE9
  5593                           wreg	equ	0xFE8
  5594                           indf1	equ	0xFE7
  5595                           fsr1h	equ	0xFE2
  5596                           fsr1l	equ	0xFE1
  5597                           bsr	equ	0xFE0
  5598                           indf2	equ	0xFDF
  5599                           postinc2	equ	0xFDE
  5600                           postdec2	equ	0xFDD
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function i1_send_msg *****************
  5606 ;; Defined at:
  5607 ;;		line 24 in file "src/messages.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5610 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5611 ;;  length          1   12[COMRAM] unsigned char 
  5612 ;;  msgtype         1   13[COMRAM] unsigned char 
  5613 ;;  data            2   14[COMRAM] PTR void 
  5614 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5615 ;;		 -> main@ic(28), main@uc(5), 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5618 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5619 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5620 ;;  send_msg        2   17[COMRAM] unsigned int 
  5621 ;;  send_msg        1   19[COMRAM] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5631 ;;      Params:         6       0       0       0       0
  5632 ;;      Locals:         5       0       0       0       0
  5633 ;;      Temps:          1       0       0       0       0
  5634 ;;      Totals:        12       0       0       0       0
  5635 ;;Total ram usage:       12 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    6
  5638 ;; This function calls:
  5639 ;;		i1_memcpy
  5640 ;; This function is called by:
  5641 ;;		i1_ToMainLow_sendmsg
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text36
  5646  001006                     __ptext36:
  5647                           	opt stack 0
  5648  001006                     i1_send_msg:
  5649                           	opt stack 17
  5650                           
  5651                           ;messages.c: 25: unsigned char slot;
  5652                           ;messages.c: 27: msg *qmsg;
  5653                           ;messages.c: 28: size_t tlength = length;
  5654                           
  5655                           ;incstack = 0
  5656  001006  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5657  00100A  6A13               	clrf	i1send_msg@tlength+1,c
  5658                           
  5659                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5660  00100C  EE20 F034          	lfsr	2,52
  5661  001010  500B               	movf	i1send_msg@qptr,w,c
  5662  001012  26D9               	addwf	fsr2l,f,c
  5663  001014  500C               	movf	i1send_msg@qptr+1,w,c
  5664  001016  22DA               	addwfc	fsr2h,f,c
  5665  001018  50DF               	movf	indf2,w,c
  5666  00101A  6E14               	movwf	i1send_msg@slot,c
  5667                           
  5668                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5669  00101C  5014               	movf	i1send_msg@slot,w,c
  5670  00101E  0D0D               	mullw	13
  5671  001020  50F3               	movf	prodl,w,c
  5672  001022  240B               	addwf	i1send_msg@qptr,w,c
  5673  001024  6E15               	movwf	i1send_msg@qmsg,c
  5674  001026  50F4               	movf	prodh,w,c
  5675  001028  200C               	addwfc	i1send_msg@qptr+1,w,c
  5676  00102A  6E16               	movwf	i1send_msg@qmsg+1,c
  5677                           
  5678                           ;messages.c: 41: if (qmsg->full != 0) {
  5679  00102C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5680  001030  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5681  001034  50DF               	movf	indf2,w,c
  5682  001036  B4D8               	btfsc	status,2,c
  5683  001038  D002               	goto	i1l3534
  5684                           
  5685                           ;messages.c: 42: return (-1);
  5686  00103A  0EFF               	movlw	255
  5687  00103C  0012               	return	
  5688  00103E                     i1l3534:
  5689                           
  5690                           ;messages.c: 43: }
  5691                           ;messages.c: 46: qmsg->length = length;
  5692  00103E  EE20 F001          	lfsr	2,1
  5693  001042  5015               	movf	i1send_msg@qmsg,w,c
  5694  001044  26D9               	addwf	fsr2l,f,c
  5695  001046  5016               	movf	i1send_msg@qmsg+1,w,c
  5696  001048  22DA               	addwfc	fsr2h,f,c
  5697  00104A  C00D  FFDF         	movff	i1send_msg@length,indf2
  5698                           
  5699                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5700  00104E  EE20 F002          	lfsr	2,2
  5701  001052  5015               	movf	i1send_msg@qmsg,w,c
  5702  001054  26D9               	addwf	fsr2l,f,c
  5703  001056  5016               	movf	i1send_msg@qmsg+1,w,c
  5704  001058  22DA               	addwfc	fsr2h,f,c
  5705  00105A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5706                           
  5707                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5708  00105E  0E03               	movlw	3
  5709  001060  2415               	addwf	i1send_msg@qmsg,w,c
  5710  001062  6E01               	movwf	i1memcpy@d1,c
  5711  001064  0E00               	movlw	0
  5712  001066  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5713  001068  6E02               	movwf	i1memcpy@d1+1,c
  5714  00106A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5715  00106E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5716  001072  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5717  001076  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5718  00107A  ECF2  F00B         	call	i1_memcpy	;wreg free
  5719                           
  5720                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5721  00107E  EE20 F034          	lfsr	2,52
  5722  001082  500B               	movf	i1send_msg@qptr,w,c
  5723  001084  26D9               	addwf	fsr2l,f,c
  5724  001086  500C               	movf	i1send_msg@qptr+1,w,c
  5725  001088  22DA               	addwfc	fsr2h,f,c
  5726  00108A  EE10 F034          	lfsr	1,52
  5727  00108E  500B               	movf	i1send_msg@qptr,w,c
  5728  001090  26E1               	addwf	fsr1l,f,c
  5729  001092  500C               	movf	i1send_msg@qptr+1,w,c
  5730  001094  22E2               	addwfc	fsr1h,f,c
  5731  001096  50E7               	movf	indf1,w,c
  5732  001098  6E11               	movwf	??i1_send_msg& (0+255),c
  5733  00109A  2811               	incf	??i1_send_msg,w,c
  5734  00109C  0B03               	andlw	3
  5735  00109E  6EDF               	movwf	indf2,c
  5736                           
  5737                           ;messages.c: 59: qmsg->full = 1;
  5738  0010A0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5739  0010A4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5740  0010A8  0E01               	movlw	1
  5741  0010AA  6EDF               	movwf	indf2,c
  5742                           
  5743                           ;messages.c: 60: return (1);
  5744  0010AC  0E01               	movlw	1
  5745  0010AE  0012               	return	
  5746  0010B0                     __end_ofi1_send_msg:
  5747                           	opt stack 0
  5748                           pclatu	equ	0xFFB
  5749                           pclath	equ	0xFFA
  5750                           tblptru	equ	0xFF8
  5751                           tblptrh	equ	0xFF7
  5752                           tblptrl	equ	0xFF6
  5753                           tablat	equ	0xFF5
  5754                           prodh	equ	0xFF4
  5755                           prodl	equ	0xFF3
  5756                           intcon	equ	0xFF2
  5757                           postinc0	equ	0xFEE
  5758                           fsr0h	equ	0xFEA
  5759                           fsr0l	equ	0xFE9
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           fsr1h	equ	0xFE2
  5763                           fsr1l	equ	0xFE1
  5764                           bsr	equ	0xFE0
  5765                           indf2	equ	0xFDF
  5766                           postinc2	equ	0xFDE
  5767                           postdec2	equ	0xFDD
  5768                           fsr2h	equ	0xFDA
  5769                           fsr2l	equ	0xFD9
  5770                           status	equ	0xFD8
  5771                           
  5772 ;; *************** function i1_memcpy *****************
  5773 ;; Defined at:
  5774 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  d1              2    0[COMRAM] PTR void 
  5777 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5778 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5779 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5780 ;;  s1              2    2[COMRAM] PTR const void 
  5781 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5782 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5783 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5784 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5785 ;;		 -> main@ic(28), main@uc(5), 
  5786 ;;  n               2    4[COMRAM] unsigned int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5789 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5790 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5791 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  5792 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5793 ;;		 -> main@ic(28), main@uc(5), 
  5794 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5795 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5796 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5797 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  2    0[COMRAM] PTR void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5807 ;;      Params:         6       0       0       0       0
  5808 ;;      Locals:         4       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0
  5810 ;;      Totals:        10       0       0       0       0
  5811 ;;Total ram usage:       10 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    5
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		i1_send_msg
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text37
  5822  0017E4                     __ptext37:
  5823                           	opt stack 0
  5824  0017E4                     i1_memcpy:
  5825                           	opt stack 17
  5826                           
  5827                           ;incstack = 0
  5828  0017E4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5829  0017E8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5830  0017EC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5831  0017F0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5832  0017F4  D00E               	goto	i1l3510
  5833  0017F6                     i1l3504:
  5834  0017F6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5835  0017FA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5836  0017FE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5837  001802  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5838  001806  CFDF FFE7          	movff	indf2,indf1
  5839  00180A  4A09               	infsnz	i1memcpy@s,f,c
  5840  00180C  2A0A               	incf	i1memcpy@s+1,f,c
  5841  00180E  4A07               	infsnz	i1memcpy@d,f,c
  5842  001810  2A08               	incf	i1memcpy@d+1,f,c
  5843  001812                     i1l3510:
  5844  001812  0605               	decf	i1memcpy@n,f,c
  5845  001814  A0D8               	btfss	status,0,c
  5846  001816  0606               	decf	i1memcpy@n+1,f,c
  5847  001818  2805               	incf	i1memcpy@n& (0+255),w,c
  5848  00181A  B4D8               	btfsc	status,2,c
  5849  00181C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5850  00181E  B4D8               	btfsc	status,2,c
  5851                           
  5852                           ;	Return value of i1_memcpy is never used
  5853  001820  0012               	return	
  5854  001822  D7E9               	goto	i1l3504
  5855  001824                     __end_ofi1_memcpy:
  5856                           	opt stack 0
  5857                           pclatu	equ	0xFFB
  5858                           pclath	equ	0xFFA
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodh	equ	0xFF4
  5864                           prodl	equ	0xFF3
  5865                           intcon	equ	0xFF2
  5866                           postinc0	equ	0xFEE
  5867                           fsr0h	equ	0xFEA
  5868                           fsr0l	equ	0xFE9
  5869                           wreg	equ	0xFE8
  5870                           indf1	equ	0xFE7
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           bsr	equ	0xFE0
  5874                           indf2	equ	0xFDF
  5875                           postinc2	equ	0xFDE
  5876                           postdec2	equ	0xFDD
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function i1_ReadTimer1 *****************
  5882 ;; Defined at:
  5883 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  2    0[COMRAM] unsigned int 
  5890 ;; Registers used:
  5891 ;;		None
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5897 ;;      Params:         2       0       0       0       0
  5898 ;;      Locals:         2       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0
  5900 ;;      Totals:         4       0       0       0       0
  5901 ;;Total ram usage:        4 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    5
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_timer1_int_handler
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text38
  5912  001B6C                     __ptext38:
  5913                           	opt stack 0
  5914  001B6C                     i1_ReadTimer1:
  5915                           	opt stack 19
  5916                           
  5917                           ;incstack = 0
  5918  001B6C  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  5919  001B70  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  5920  001B74  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  5921  001B78  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  5922  001B7C  0012               	return	
  5923  001B7E                     __end_ofi1_ReadTimer1:
  5924                           	opt stack 0
  5925                           pclatu	equ	0xFFB
  5926                           pclath	equ	0xFFA
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           prodh	equ	0xFF4
  5932                           prodl	equ	0xFF3
  5933                           intcon	equ	0xFF2
  5934                           postinc0	equ	0xFEE
  5935                           fsr0h	equ	0xFEA
  5936                           fsr0l	equ	0xFE9
  5937                           wreg	equ	0xFE8
  5938                           indf1	equ	0xFE7
  5939                           fsr1h	equ	0xFE2
  5940                           fsr1l	equ	0xFE1
  5941                           bsr	equ	0xFE0
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function _WriteTimer1 *****************
  5950 ;; Defined at:
  5951 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  timer1          2    0[COMRAM] unsigned int 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  timer           2    2[COMRAM] struct Timers
  5956 ;; Return value:  Size  Location     Type
  5957 ;;		None               void
  5958 ;; Registers used:
  5959 ;;		None
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5965 ;;      Params:         2       0       0       0       0
  5966 ;;      Locals:         2       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0
  5968 ;;      Totals:         4       0       0       0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    5
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_timer1_int_handler
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text39
  5980  001B7E                     __ptext39:
  5981                           	opt stack 0
  5982  001B7E                     _WriteTimer1:
  5983                           	opt stack 19
  5984                           
  5985                           ;incstack = 0
  5986  001B7E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5987  001B82  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5988  001B86  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5989  001B8A  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5990  001B8E  0012               	return	
  5991  001B90                     __end_of_WriteTimer1:
  5992                           	opt stack 0
  5993                           pclatu	equ	0xFFB
  5994                           pclath	equ	0xFFA
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           prodh	equ	0xFF4
  6000                           prodl	equ	0xFF3
  6001                           intcon	equ	0xFF2
  6002                           postinc0	equ	0xFEE
  6003                           fsr0h	equ	0xFEA
  6004                           fsr0l	equ	0xFE9
  6005                           wreg	equ	0xFE8
  6006                           indf1	equ	0xFE7
  6007                           fsr1h	equ	0xFE2
  6008                           fsr1l	equ	0xFE1
  6009                           bsr	equ	0xFE0
  6010                           indf2	equ	0xFDF
  6011                           postinc2	equ	0xFDE
  6012                           postdec2	equ	0xFDD
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function _InterruptHandlerHigh *****************
  6018 ;; Defined at:
  6019 ;;		line 83 in file "src/interrupts.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;		None               void
  6026 ;; Registers used:
  6027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6033 ;;      Params:         0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0
  6035 ;;      Temps:          0      14       0       0       0
  6036 ;;      Totals:         0      14       0       0       0
  6037 ;;Total ram usage:       14 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    4
  6040 ;; This function calls:
  6041 ;;		_SleepIfOkay
  6042 ;;		_i2c_int_handler
  6043 ;;		_timer0_int_handler
  6044 ;; This function is called by:
  6045 ;;		Interrupt level 2
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	intcode
  6050  000008                     __pintcode:
  6051                           	opt stack 0
  6052  000008                     _InterruptHandlerHigh:
  6053                           	opt stack 17
  6054                           
  6055                           ;incstack = 0
  6056  000008  CFFA F0BF          	movff	pclath,??_InterruptHandlerHigh
  6057  00000C  CFFB F0C0          	movff	pclatu,??_InterruptHandlerHigh+1
  6058  000010  EF89  F009         	goto	int_func
  6059                           pclatu	equ	0xFFB
  6060                           pclath	equ	0xFFA
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           postinc0	equ	0xFEE
  6069                           fsr0h	equ	0xFEA
  6070                           fsr0l	equ	0xFE9
  6071                           wreg	equ	0xFE8
  6072                           indf1	equ	0xFE7
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           bsr	equ	0xFE0
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083                           	psect	intcode_body
  6084  001312                     __pintcode_body:
  6085                           	opt stack 17
  6086  001312                     int_func:
  6087                           	opt stack 17
  6088  001312  CFE9 F0C1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6089  001316  CFEA F0C2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6090  00131A  CFE1 F0C3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6091  00131E  CFE2 F0C4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6092  001322  CFD9 F0C5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6093  001326  CFDA F0C6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6094  00132A  CFF3 F0C7          	movff	prodl,??_InterruptHandlerHigh+8
  6095  00132E  CFF4 F0C8          	movff	prodh,??_InterruptHandlerHigh+9
  6096  001332  CFF6 F0C9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6097  001336  CFF7 F0CA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6098  00133A  CFF8 F0CB          	movff	tblptru,??_InterruptHandlerHigh+12
  6099  00133E  CFF5 F0CC          	movff	tablat,??_InterruptHandlerHigh+13
  6100                           
  6101                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6102  001342  A69E               	btfss	3998,3,c	;volatile
  6103  001344  D003               	goto	i2l3050
  6104                           
  6105                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6106  001346  969E               	bcf	3998,3,c	;volatile
  6107                           
  6108                           ;interrupts.c: 92: i2c_int_handler();
  6109  001348  EC5F  F000         	call	_i2c_int_handler	;wreg free
  6110  00134C                     i2l3050:
  6111                           
  6112                           ;interrupts.c: 93: }
  6113                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6114  00134C  A4F2               	btfss	intcon,2,c	;volatile
  6115  00134E  D003               	goto	i2l3056
  6116                           
  6117                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6118  001350  94F2               	bcf	intcon,2,c	;volatile
  6119                           
  6120                           ;interrupts.c: 99: timer0_int_handler();
  6121  001352  ECB2  F00A         	call	_timer0_int_handler	;wreg free
  6122  001356                     i2l3056:
  6123                           
  6124                           ;interrupts.c: 100: }
  6125                           ;interrupts.c: 109: SleepIfOkay();
  6126  001356  EC44  F00B         	call	_SleepIfOkay	;wreg free
  6127  00135A  C0CC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6128  00135E  C0CB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6129  001362  C0CA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6130  001366  C0C9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6131  00136A  C0C8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6132  00136E  C0C7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6133  001372  C0C6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6134  001376  C0C5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6135  00137A  C0C4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6136  00137E  C0C3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6137  001382  C0C2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6138  001386  C0C1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6139  00138A  C0C0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6140  00138E  C0BF  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6141  001392  0011               	retfie		f
  6142  001394                     __end_of_InterruptHandlerHigh:
  6143                           	opt stack 0
  6144                           pclatu	equ	0xFFB
  6145                           pclath	equ	0xFFA
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           postinc0	equ	0xFEE
  6154                           fsr0h	equ	0xFEA
  6155                           fsr0l	equ	0xFE9
  6156                           wreg	equ	0xFE8
  6157                           indf1	equ	0xFE7
  6158                           fsr1h	equ	0xFE2
  6159                           fsr1l	equ	0xFE1
  6160                           bsr	equ	0xFE0
  6161                           indf2	equ	0xFDF
  6162                           postinc2	equ	0xFDE
  6163                           postdec2	equ	0xFDD
  6164                           fsr2h	equ	0xFDA
  6165                           fsr2l	equ	0xFD9
  6166                           status	equ	0xFD8
  6167                           
  6168 ;; *************** function _timer0_int_handler *****************
  6169 ;; Defined at:
  6170 ;;		line 16 in file "src/user_interrupts.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  val             2    4[BANK0 ] unsigned int 
  6175 ;;  msgtype         2    2[BANK0 ] int 
  6176 ;;  length          2    0[BANK0 ] int 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;		None               void
  6179 ;; Registers used:
  6180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6186 ;;      Params:         0       0       0       0       0
  6187 ;;      Locals:         0       6       0       0       0
  6188 ;;      Temps:          1       0       0       0       0
  6189 ;;      Totals:         1       6       0       0       0
  6190 ;;Total ram usage:        7 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    3
  6193 ;; This function calls:
  6194 ;;		_FromMainHigh_recvmsg
  6195 ;;		_ToMainHigh_sendmsg
  6196 ;;		_WriteTimer0
  6197 ;; This function is called by:
  6198 ;;		_InterruptHandlerHigh
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text41
  6203  001564                     __ptext41:
  6204                           	opt stack 0
  6205  001564                     _timer0_int_handler:
  6206                           	opt stack 17
  6207                           
  6208                           ;user_interrupts.c: 17: unsigned int val;
  6209                           ;user_interrupts.c: 18: int length, msgtype;
  6210                           ;user_interrupts.c: 25: WriteTimer0(0);
  6211                           
  6212                           ;incstack = 0
  6213  001564  0E00               	movlw	0
  6214  001566  6E30               	movwf	WriteTimer0@timer0+1,c
  6215  001568  0E00               	movlw	0
  6216  00156A  6E2F               	movwf	WriteTimer0@timer0,c
  6217  00156C  ECC8  F00D         	call	_WriteTimer0	;wreg free
  6218                           
  6219                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6220  001570  0100               	movlb	0	; () banked
  6221  001572  0E00               	movlw	high timer0_int_handler@msgtype
  6222  001574  6E48               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6223  001576  0100               	movlb	0	; () banked
  6224  001578  0EB8               	movlw	low timer0_int_handler@msgtype
  6225  00157A  6E47               	movwf	FromMainHigh_recvmsg@msgtype,c
  6226  00157C  0100               	movlb	0	; () banked
  6227  00157E  0E00               	movlw	high timer0_int_handler@val
  6228  001580  6E4A               	movwf	FromMainHigh_recvmsg@data+1,c
  6229  001582  0100               	movlb	0	; () banked
  6230  001584  0EBA               	movlw	low timer0_int_handler@val
  6231  001586  6E49               	movwf	FromMainHigh_recvmsg@data,c
  6232  001588  0E02               	movlw	2
  6233  00158A  ECFE  F00C         	call	_FromMainHigh_recvmsg
  6234  00158E  0100               	movlb	0	; () banked
  6235  001590  0100               	movlb	0	; () banked
  6236  001592  6FB6               	movwf	timer0_int_handler@length& (0+255),b
  6237  001594  0100               	movlb	0	; () banked
  6238  001596  6BB7               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6239  001598  0100               	movlb	0	; () banked
  6240  00159A  BFB6               	btfsc	timer0_int_handler@length& (0+255),7,b
  6241  00159C  07B7               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6245  00159E  0100               	movlb	0	; () banked
  6246  0015A0  0100               	movlb	0	; () banked
  6247  0015A2  51B6               	movf	timer0_int_handler@length& (0+255),w,b
  6248  0015A4  0A02               	xorlw	2
  6249  0015A6  11B7               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6250  0015A8  A4D8               	btfss	status,2,c
  6251  0015AA  0012               	return	
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6255  0015AC  6E4C               	movwf	??_timer0_int_handler& (0+255),c
  6256  0015AE  0E0A               	movlw	10
  6257  0015B0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6258  0015B2  504C               	movf	??_timer0_int_handler& (0+255),w,c
  6259  0015B4  0100               	movlb	0	; () banked
  6260  0015B6  0E00               	movlw	high timer0_int_handler@val
  6261  0015B8  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6262  0015BA  0100               	movlb	0	; () banked
  6263  0015BC  0EBA               	movlw	low timer0_int_handler@val
  6264  0015BE  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6265  0015C0  0E02               	movlw	2
  6266  0015C2  EC3A  F00D         	call	_ToMainHigh_sendmsg
  6267  0015C6  0012               	return	
  6268  0015C8                     __end_of_timer0_int_handler:
  6269                           	opt stack 0
  6270                           pclatu	equ	0xFFB
  6271                           pclath	equ	0xFFA
  6272                           tblptru	equ	0xFF8
  6273                           tblptrh	equ	0xFF7
  6274                           tblptrl	equ	0xFF6
  6275                           tablat	equ	0xFF5
  6276                           prodh	equ	0xFF4
  6277                           prodl	equ	0xFF3
  6278                           intcon	equ	0xFF2
  6279                           postinc0	equ	0xFEE
  6280                           fsr0h	equ	0xFEA
  6281                           fsr0l	equ	0xFE9
  6282                           wreg	equ	0xFE8
  6283                           indf1	equ	0xFE7
  6284                           fsr1h	equ	0xFE2
  6285                           fsr1l	equ	0xFE1
  6286                           bsr	equ	0xFE0
  6287                           indf2	equ	0xFDF
  6288                           postinc2	equ	0xFDE
  6289                           postdec2	equ	0xFDD
  6290                           fsr2h	equ	0xFDA
  6291                           fsr2l	equ	0xFD9
  6292                           status	equ	0xFD8
  6293                           
  6294 ;; *************** function _WriteTimer0 *****************
  6295 ;; Defined at:
  6296 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  timer0          2   46[COMRAM] unsigned int 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  timer           2   48[COMRAM] struct Timers
  6301 ;; Return value:  Size  Location     Type
  6302 ;;		None               void
  6303 ;; Registers used:
  6304 ;;		None
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6310 ;;      Params:         2       0       0       0       0
  6311 ;;      Locals:         2       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0
  6313 ;;      Totals:         4       0       0       0       0
  6314 ;;Total ram usage:        4 bytes
  6315 ;; Hardware stack levels used:    1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_timer0_int_handler
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text42
  6324  001B90                     __ptext42:
  6325                           	opt stack 0
  6326  001B90                     _WriteTimer0:
  6327                           	opt stack 19
  6328                           
  6329                           ;incstack = 0
  6330  001B90  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6331  001B94  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6332  001B98  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6333  001B9C  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6334  001BA0  0012               	return	
  6335  001BA2                     __end_of_WriteTimer0:
  6336                           	opt stack 0
  6337                           pclatu	equ	0xFFB
  6338                           pclath	equ	0xFFA
  6339                           tblptru	equ	0xFF8
  6340                           tblptrh	equ	0xFF7
  6341                           tblptrl	equ	0xFF6
  6342                           tablat	equ	0xFF5
  6343                           prodh	equ	0xFF4
  6344                           prodl	equ	0xFF3
  6345                           intcon	equ	0xFF2
  6346                           postinc0	equ	0xFEE
  6347                           fsr0h	equ	0xFEA
  6348                           fsr0l	equ	0xFE9
  6349                           wreg	equ	0xFE8
  6350                           indf1	equ	0xFE7
  6351                           fsr1h	equ	0xFE2
  6352                           fsr1l	equ	0xFE1
  6353                           bsr	equ	0xFE0
  6354                           indf2	equ	0xFDF
  6355                           postinc2	equ	0xFDE
  6356                           postdec2	equ	0xFDD
  6357                           fsr2h	equ	0xFDA
  6358                           fsr2l	equ	0xFD9
  6359                           status	equ	0xFD8
  6360                           
  6361 ;; *************** function _FromMainHigh_recvmsg *****************
  6362 ;; Defined at:
  6363 ;;		line 183 in file "src/messages.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  maxlength       1    wreg     unsigned char 
  6366 ;;  msgtype         2   70[COMRAM] PTR unsigned char 
  6367 ;;		 -> timer0_int_handler@msgtype(2), 
  6368 ;;  data            2   72[COMRAM] PTR void 
  6369 ;;		 -> timer0_int_handler@val(2), 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  maxlength       1   74[COMRAM] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      char 
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6381 ;;      Params:         4       0       0       0       0
  6382 ;;      Locals:         1       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0
  6384 ;;      Totals:         5       0       0       0       0
  6385 ;;Total ram usage:        5 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    2
  6388 ;; This function calls:
  6389 ;;		i2_recv_msg
  6390 ;; This function is called by:
  6391 ;;		_timer0_int_handler
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text43
  6396  0019FC                     __ptext43:
  6397                           	opt stack 0
  6398  0019FC                     _FromMainHigh_recvmsg:
  6399                           	opt stack 17
  6400                           
  6401                           ;incstack = 0
  6402                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6403  0019FC  CFE8 F04B          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6404                           
  6405                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6406  001A00  0101               	movlb	1	; () banked
  6407  001A02  0E01               	movlw	high _FromMainHigh_MQ
  6408  001A04  6E3A               	movwf	i2recv_msg@qptr+1,c
  6409  001A06  0101               	movlb	1	; () banked
  6410  001A08  0E00               	movlw	low _FromMainHigh_MQ
  6411  001A0A  6E39               	movwf	i2recv_msg@qptr,c
  6412  001A0C  C04B  F03B         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6413  001A10  C048  F03D         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6414  001A14  C047  F03C         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6415  001A18  C04A  F03F         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6416  001A1C  C049  F03E         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6417  001A20  EC36  F007         	call	i2_recv_msg	;wreg free
  6418  001A24  0012               	return	
  6419  001A26                     __end_of_FromMainHigh_recvmsg:
  6420                           	opt stack 0
  6421                           pclatu	equ	0xFFB
  6422                           pclath	equ	0xFFA
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           prodh	equ	0xFF4
  6428                           prodl	equ	0xFF3
  6429                           intcon	equ	0xFF2
  6430                           postinc0	equ	0xFEE
  6431                           fsr0h	equ	0xFEA
  6432                           fsr0l	equ	0xFE9
  6433                           wreg	equ	0xFE8
  6434                           indf1	equ	0xFE7
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           bsr	equ	0xFE0
  6438                           indf2	equ	0xFDF
  6439                           postinc2	equ	0xFDE
  6440                           postdec2	equ	0xFDD
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function i2_recv_msg *****************
  6446 ;; Defined at:
  6447 ;;		line 63 in file "src/messages.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6450 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6451 ;;  maxlength       1   58[COMRAM] unsigned char 
  6452 ;;  msgtype         2   59[COMRAM] PTR unsigned char 
  6453 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6454 ;;  data            2   61[COMRAM] PTR void 
  6455 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  recv_msg        2   68[COMRAM] PTR struct __msg
  6458 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6459 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6460 ;;  recv_msg        2   66[COMRAM] unsigned int 
  6461 ;;  recv_msg        1   65[COMRAM] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      char 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6471 ;;      Params:         7       0       0       0       0
  6472 ;;      Locals:         5       0       0       0       0
  6473 ;;      Temps:          2       0       0       0       0
  6474 ;;      Totals:        14       0       0       0       0
  6475 ;;Total ram usage:       14 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    1
  6478 ;; This function calls:
  6479 ;;		i2_memcpy
  6480 ;; This function is called by:
  6481 ;;		_FromMainHigh_recvmsg
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text44
  6486  000E6C                     __ptext44:
  6487                           	opt stack 0
  6488  000E6C                     i2_recv_msg:
  6489                           	opt stack 17
  6490                           
  6491                           ;messages.c: 64: unsigned char slot;
  6492                           ;messages.c: 68: msg *qmsg;
  6493                           ;messages.c: 69: size_t tlength;
  6494                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6495                           
  6496                           ;incstack = 0
  6497  000E6C  EE20 F035          	lfsr	2,53
  6498  000E70  5039               	movf	i2recv_msg@qptr,w,c
  6499  000E72  26D9               	addwf	fsr2l,f,c
  6500  000E74  503A               	movf	i2recv_msg@qptr+1,w,c
  6501  000E76  22DA               	addwfc	fsr2h,f,c
  6502  000E78  50DF               	movf	indf2,w,c
  6503  000E7A  6E42               	movwf	i2recv_msg@slot,c
  6504                           
  6505                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6506  000E7C  5042               	movf	i2recv_msg@slot,w,c
  6507  000E7E  0D0D               	mullw	13
  6508  000E80  50F3               	movf	prodl,w,c
  6509  000E82  2439               	addwf	i2recv_msg@qptr,w,c
  6510  000E84  6E45               	movwf	i2recv_msg@qmsg,c
  6511  000E86  50F4               	movf	prodh,w,c
  6512  000E88  203A               	addwfc	i2recv_msg@qptr+1,w,c
  6513  000E8A  6E46               	movwf	i2recv_msg@qmsg+1,c
  6514                           
  6515                           ;messages.c: 74: if (qmsg->full == 1) {
  6516  000E8C  0E01               	movlw	1
  6517  000E8E  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6518  000E92  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6519  000E96  62DF               	cpfseq	indf2,c
  6520  000E98  D050               	goto	i2l3498
  6521                           
  6522                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6523  000E9A  EE20 F001          	lfsr	2,1
  6524  000E9E  5045               	movf	i2recv_msg@qmsg,w,c
  6525  000EA0  26D9               	addwf	fsr2l,f,c
  6526  000EA2  5046               	movf	i2recv_msg@qmsg+1,w,c
  6527  000EA4  22DA               	addwfc	fsr2h,f,c
  6528  000EA6  50DF               	movf	indf2,w,c
  6529  000EA8  5C3B               	subwf	i2recv_msg@maxlength,w,c
  6530  000EAA  B0D8               	btfsc	status,0,c
  6531  000EAC  D002               	goto	i2l3482
  6532                           
  6533                           ;messages.c: 77: return (-3);
  6534  000EAE  0EFD               	movlw	253
  6535  000EB0  0012               	return	
  6536  000EB2                     i2l3482:
  6537                           
  6538                           ;messages.c: 78: }
  6539                           ;messages.c: 80: tlength = qmsg->length;
  6540  000EB2  EE20 F001          	lfsr	2,1
  6541  000EB6  5045               	movf	i2recv_msg@qmsg,w,c
  6542  000EB8  26D9               	addwf	fsr2l,f,c
  6543  000EBA  5046               	movf	i2recv_msg@qmsg+1,w,c
  6544  000EBC  22DA               	addwfc	fsr2h,f,c
  6545  000EBE  50DF               	movf	indf2,w,c
  6546  000EC0  6E40               	movwf	??i2_recv_msg& (0+255),c
  6547  000EC2  5040               	movf	??i2_recv_msg,w,c
  6548  000EC4  6E43               	movwf	i2recv_msg@tlength,c
  6549  000EC6  6A44               	clrf	i2recv_msg@tlength+1,c
  6550                           
  6551                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6552  000EC8  C03F  F030         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6553  000ECC  C03E  F02F         	movff	i2recv_msg@data,i2memcpy@d1
  6554  000ED0  0E03               	movlw	3
  6555  000ED2  2445               	addwf	i2recv_msg@qmsg,w,c
  6556  000ED4  6E40               	movwf	??i2_recv_msg& (0+255),c
  6557  000ED6  0E00               	movlw	0
  6558  000ED8  2046               	addwfc	i2recv_msg@qmsg+1,w,c
  6559  000EDA  6E41               	movwf	(??i2_recv_msg+1)& (0+255),c
  6560  000EDC  C040  F031         	movff	??i2_recv_msg,i2memcpy@s1
  6561  000EE0  C041  F032         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6562  000EE4  C043  F033         	movff	i2recv_msg@tlength,i2memcpy@n
  6563  000EE8  C044  F034         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6564  000EEC  EC12  F00C         	call	i2_memcpy	;wreg free
  6565                           
  6566                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6567  000EF0  EE20 F035          	lfsr	2,53
  6568  000EF4  5039               	movf	i2recv_msg@qptr,w,c
  6569  000EF6  26D9               	addwf	fsr2l,f,c
  6570  000EF8  503A               	movf	i2recv_msg@qptr+1,w,c
  6571  000EFA  22DA               	addwfc	fsr2h,f,c
  6572  000EFC  EE10 F035          	lfsr	1,53
  6573  000F00  5039               	movf	i2recv_msg@qptr,w,c
  6574  000F02  26E1               	addwf	fsr1l,f,c
  6575  000F04  503A               	movf	i2recv_msg@qptr+1,w,c
  6576  000F06  22E2               	addwfc	fsr1h,f,c
  6577  000F08  50E7               	movf	indf1,w,c
  6578  000F0A  6E40               	movwf	??i2_recv_msg& (0+255),c
  6579  000F0C  2840               	incf	??i2_recv_msg,w,c
  6580  000F0E  0B03               	andlw	3
  6581  000F10  6EDF               	movwf	indf2,c
  6582                           
  6583                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6584  000F12  EE20 F002          	lfsr	2,2
  6585  000F16  5045               	movf	i2recv_msg@qmsg,w,c
  6586  000F18  26D9               	addwf	fsr2l,f,c
  6587  000F1A  5046               	movf	i2recv_msg@qmsg+1,w,c
  6588  000F1C  22DA               	addwfc	fsr2h,f,c
  6589  000F1E  C03C  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6590  000F22  C03D  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6591  000F26  CFDF FFE7          	movff	indf2,indf1
  6592                           
  6593                           ;messages.c: 91: qmsg->full = 0;
  6594  000F2A  C045  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6595  000F2E  C046  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6596  000F32  0E00               	movlw	0
  6597  000F34  6EDF               	movwf	indf2,c
  6598                           
  6599                           ;messages.c: 92: return (tlength);
  6600  000F36  5043               	movf	i2recv_msg@tlength,w,c
  6601  000F38  0012               	return	
  6602  000F3A                     i2l3498:
  6603                           
  6604                           ;messages.c: 94: return (-4);
  6605  000F3A  0EFC               	movlw	252
  6606  000F3C  0012               	return	
  6607  000F3E                     __end_ofi2_recv_msg:
  6608                           	opt stack 0
  6609                           pclatu	equ	0xFFB
  6610                           pclath	equ	0xFFA
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           fsr0h	equ	0xFEA
  6620                           fsr0l	equ	0xFE9
  6621                           wreg	equ	0xFE8
  6622                           indf1	equ	0xFE7
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           bsr	equ	0xFE0
  6626                           indf2	equ	0xFDF
  6627                           postinc2	equ	0xFDE
  6628                           postdec2	equ	0xFDD
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _i2c_int_handler *****************
  6634 ;; Defined at:
  6635 ;;		line 100 in file "src/my_i2c.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  6640 ;;  data_read       1    8[BANK0 ] unsigned char 
  6641 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  6642 ;;  msg_to_send     1    6[BANK0 ] unsigned char 
  6643 ;;  i2c_data        1    5[BANK0 ] unsigned char 
  6644 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  6645 ;;  data_written    1    3[BANK0 ] unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;		None               void
  6648 ;; Registers used:
  6649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6655 ;;      Params:         0       0       0       0       0
  6656 ;;      Locals:         0       9       0       0       0
  6657 ;;      Temps:          2       0       0       0       0
  6658 ;;      Totals:         2       9       0       0       0
  6659 ;;Total ram usage:       11 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    3
  6662 ;; This function calls:
  6663 ;;		_ToMainHigh_sendmsg
  6664 ;;		_handle_start
  6665 ;; This function is called by:
  6666 ;;		_InterruptHandlerHigh
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text45
  6671  0000BE                     __ptext45:
  6672                           	opt stack 0
  6673  0000BE                     _i2c_int_handler:
  6674                           	opt stack 17
  6675                           
  6676                           ;my_i2c.c: 101: unsigned char i2c_data;
  6677                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6678                           
  6679                           ;incstack = 0
  6680  0000BE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6681  0000C0  0E00               	movlw	0
  6682  0000C2  0100               	movlb	0	; () banked
  6683  0000C4  0100               	movlb	0	; () banked
  6684  0000C6  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6685  0000C8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6686                           
  6687                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6688  0000CA  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6689  0000CC  0E00               	movlw	0
  6690  0000CE  0100               	movlb	0	; () banked
  6691  0000D0  0100               	movlb	0	; () banked
  6692  0000D2  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  6693  0000D4  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6694                           
  6695                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6696  0000D6  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6697  0000D8  0E00               	movlw	0
  6698  0000DA  0100               	movlb	0	; () banked
  6699  0000DC  0100               	movlb	0	; () banked
  6700  0000DE  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6701  0000E0  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6702                           
  6703                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6704  0000E2  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6705  0000E4  0E00               	movlw	0
  6706  0000E6  0100               	movlb	0	; () banked
  6707  0000E8  0100               	movlb	0	; () banked
  6708  0000EA  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6709  0000EC  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6710                           
  6711                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6712  0000EE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6713  0000F0  0E00               	movlw	0
  6714  0000F2  0100               	movlb	0	; () banked
  6715  0000F4  0100               	movlb	0	; () banked
  6716  0000F6  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6717  0000F8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6721                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6722  0000FA  ACC6               	btfss	4038,6,c	;volatile
  6723  0000FC  D027               	goto	i2l3072
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6727  0000FE  9CC6               	bcf	4038,6,c	;volatile
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6731  000100  0100               	movlb	0	; () banked
  6732  000102  EE20 F00C          	lfsr	2,12
  6733  000106  0100               	movlb	0	; () banked
  6734  000108  51E5               	movf	_ic_ptr& (0+255),w,b
  6735  00010A  26D9               	addwf	fsr2l,f,c
  6736  00010C  0100               	movlb	0	; () banked
  6737  00010E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6738  000110  22DA               	addwfc	fsr2h,f,c
  6739  000112  0E05               	movlw	5
  6740  000114  6EDF               	movwf	indf2,c
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;my_i2c.c: 116: overrun_error = 1;
  6744  000116  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6745  000118  0E01               	movlw	1
  6746  00011A  0100               	movlb	0	; () banked
  6747  00011C  0100               	movlb	0	; () banked
  6748  00011E  6FBA               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6749  000120  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6753  000122  0100               	movlb	0	; () banked
  6754  000124  EE20 F00E          	lfsr	2,14
  6755  000128  0100               	movlb	0	; () banked
  6756  00012A  51E5               	movf	_ic_ptr& (0+255),w,b
  6757  00012C  26D9               	addwf	fsr2l,f,c
  6758  00012E  0100               	movlb	0	; () banked
  6759  000130  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6760  000132  22DA               	addwfc	fsr2h,f,c
  6761  000134  2ADF               	incf	indf2,f,c
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6765  000136  0100               	movlb	0	; () banked
  6766  000138  EE20 F00D          	lfsr	2,13
  6767  00013C  0100               	movlb	0	; () banked
  6768  00013E  51E5               	movf	_ic_ptr& (0+255),w,b
  6769  000140  26D9               	addwf	fsr2l,f,c
  6770  000142  0100               	movlb	0	; () banked
  6771  000144  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6772  000146  22DA               	addwfc	fsr2h,f,c
  6773  000148  0E04               	movlw	4
  6774  00014A  6EDF               	movwf	indf2,c
  6775  00014C                     i2l3072:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;my_i2c.c: 119: }
  6779                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6780  00014C  A0C7               	btfss	4039,0,c	;volatile
  6781  00014E  D008               	goto	i2l3078
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6785  000150  CFC9 F0BB          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;my_i2c.c: 123: data_read = 1;
  6789  000154  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6790  000156  0E01               	movlw	1
  6791  000158  0100               	movlb	0	; () banked
  6792  00015A  0100               	movlb	0	; () banked
  6793  00015C  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6794  00015E  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6795  000160                     i2l3078:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;my_i2c.c: 124: }
  6799                           ;my_i2c.c: 126: if (!overrun_error) {
  6800  000160  0100               	movlb	0	; () banked
  6801  000162  0100               	movlb	0	; () banked
  6802  000164  67BA               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6803  000166  D1B8               	goto	i2l271
  6804  000168  D1A1               	goto	i2l3166
  6805  00016A                     i2l273:
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;my_i2c.c: 129: {
  6809                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6810  00016A  A6C7               	btfss	4039,3,c	;volatile
  6811  00016C  D1B5               	goto	i2l271
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;my_i2c.c: 132: handle_start(data_read);
  6815  00016E  0100               	movlb	0	; () banked
  6816  000170  0100               	movlb	0	; () banked
  6817  000172  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6818  000174  EC9F  F007         	call	_handle_start
  6819                           
  6820                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6821  000178  0100               	movlb	0	; () banked
  6822  00017A  EE20 F00C          	lfsr	2,12
  6823  00017E  0100               	movlb	0	; () banked
  6824  000180  51E5               	movf	_ic_ptr& (0+255),w,b
  6825  000182  26D9               	addwf	fsr2l,f,c
  6826  000184  0100               	movlb	0	; () banked
  6827  000186  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6828  000188  22DA               	addwfc	fsr2h,f,c
  6829  00018A  0E08               	movlw	8
  6830  00018C  62DF               	cpfseq	indf2,c
  6831  00018E  D1A4               	goto	i2l271
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 135: data_read = 0;
  6835  000190  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6836  000192  0E00               	movlw	0
  6837  000194  0100               	movlb	0	; () banked
  6838  000196  0100               	movlb	0	; () banked
  6839  000198  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  6840  00019A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6841                           
  6842                           ;my_i2c.c: 136: msg_to_send = 1;
  6843  00019C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6844  00019E  0E01               	movlw	1
  6845  0001A0  0100               	movlb	0	; () banked
  6846  0001A2  0100               	movlb	0	; () banked
  6847  0001A4  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6848  0001A6  D175               	goto	L10
  6849  0001A8                     i2l277:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_i2c.c: 142: {
  6853                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6854  0001A8  A8C7               	btfss	4039,4,c	;volatile
  6855  0001AA  D02E               	goto	i2l3098
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6859  0001AC  0100               	movlb	0	; () banked
  6860  0001AE  EE20 F00B          	lfsr	2,11
  6861  0001B2  0100               	movlb	0	; () banked
  6862  0001B4  51E5               	movf	_ic_ptr& (0+255),w,b
  6863  0001B6  26D9               	addwf	fsr2l,f,c
  6864  0001B8  0100               	movlb	0	; () banked
  6865  0001BA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6866  0001BC  22DA               	addwfc	fsr2h,f,c
  6867  0001BE  2ADF               	incf	indf2,f,c
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;my_i2c.c: 148: if (data_read) {
  6871  0001C0  0100               	movlb	0	; () banked
  6872  0001C2  0100               	movlb	0	; () banked
  6873  0001C4  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6874  0001C6  B4D8               	btfsc	status,2,c
  6875  0001C8  D166               	goto	L12
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6879  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6880  0001CC  D007               	goto	i2l3096
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;my_i2c.c: 150: msg_ready = 1;
  6884  0001CE  6E49               	movwf	??_i2c_int_handler& (0+255),c
  6885  0001D0  0E01               	movlw	1
  6886  0001D2  0100               	movlb	0	; () banked
  6887  0001D4  0100               	movlb	0	; () banked
  6888  0001D6  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6889  0001D8  5049               	movf	??_i2c_int_handler& (0+255),w,c
  6890                           
  6891                           ;my_i2c.c: 151: } else {
  6892  0001DA  D15D               	goto	L12
  6893  0001DC                     i2l3096:
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6897  0001DC  0100               	movlb	0	; () banked
  6898  0001DE  EE20 F00E          	lfsr	2,14
  6899  0001E2  0100               	movlb	0	; () banked
  6900  0001E4  51E5               	movf	_ic_ptr& (0+255),w,b
  6901  0001E6  26D9               	addwf	fsr2l,f,c
  6902  0001E8  0100               	movlb	0	; () banked
  6903  0001EA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6904  0001EC  22DA               	addwfc	fsr2h,f,c
  6905  0001EE  2ADF               	incf	indf2,f,c
  6906                           
  6907                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6908  0001F0  0100               	movlb	0	; () banked
  6909  0001F2  EE20 F00D          	lfsr	2,13
  6910  0001F6  0100               	movlb	0	; () banked
  6911  0001F8  51E5               	movf	_ic_ptr& (0+255),w,b
  6912  0001FA  26D9               	addwf	fsr2l,f,c
  6913  0001FC  0100               	movlb	0	; () banked
  6914  0001FE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6915  000200  22DA               	addwfc	fsr2h,f,c
  6916  000202  0E06               	movlw	6
  6917  000204  6EDF               	movwf	indf2,c
  6918                           
  6919                           ; BSR set to: 0
  6920  000206  D147               	goto	L12
  6921  000208                     i2l3098:
  6922                           
  6923                           ; BSR set to: 0
  6924  000208  0100               	movlb	0	; () banked
  6925  00020A  0100               	movlb	0	; () banked
  6926  00020C  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  6927  00020E  B4D8               	btfsc	status,2,c
  6928  000210  D163               	goto	i2l271
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6932  000212  0100               	movlb	0	; () banked
  6933  000214  EE20 F00B          	lfsr	2,11
  6934  000218  0100               	movlb	0	; () banked
  6935  00021A  51E5               	movf	_ic_ptr& (0+255),w,b
  6936  00021C  26D9               	addwf	fsr2l,f,c
  6937  00021E  0100               	movlb	0	; () banked
  6938  000220  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6939  000222  22DA               	addwfc	fsr2h,f,c
  6940  000224  2ADF               	incf	indf2,f,c
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6944  000226  BAC7               	btfsc	4039,5,c	;volatile
  6945  000228  D019               	goto	i2l3114
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6949  00022A  B4C7               	btfsc	4039,2,c	;volatile
  6950  00022C  D00B               	goto	i2l3108
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6954  00022E  0100               	movlb	0	; () banked
  6955  000230  EE20 F00C          	lfsr	2,12
  6956  000234  0100               	movlb	0	; () banked
  6957  000236  51E5               	movf	_ic_ptr& (0+255),w,b
  6958  000238  26D9               	addwf	fsr2l,f,c
  6959  00023A  0100               	movlb	0	; () banked
  6960  00023C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6961  00023E  22DA               	addwfc	fsr2h,f,c
  6962  000240  0E07               	movlw	7
  6963  000242  D071               	goto	L9
  6964  000244                     i2l3108:
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6968  000244  0100               	movlb	0	; () banked
  6969  000246  EE20 F00C          	lfsr	2,12
  6970  00024A  0100               	movlb	0	; () banked
  6971  00024C  51E5               	movf	_ic_ptr& (0+255),w,b
  6972  00024E  26D9               	addwf	fsr2l,f,c
  6973  000250  0100               	movlb	0	; () banked
  6974  000252  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6975  000254  22DA               	addwfc	fsr2h,f,c
  6976  000256  0E08               	movlw	8
  6977  000258  6EDF               	movwf	indf2,c
  6978  00025A  D110               	goto	L13
  6979  00025C                     i2l3114:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6983  00025C  0100               	movlb	0	; () banked
  6984  00025E  EE20 F00E          	lfsr	2,14
  6985  000262  0100               	movlb	0	; () banked
  6986  000264  51E5               	movf	_ic_ptr& (0+255),w,b
  6987  000266  26D9               	addwf	fsr2l,f,c
  6988  000268  0100               	movlb	0	; () banked
  6989  00026A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  6990  00026C  22DA               	addwfc	fsr2h,f,c
  6991  00026E  2ADF               	incf	indf2,f,c
  6992                           
  6993                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6994  000270  0100               	movlb	0	; () banked
  6995  000272  EE20 F00C          	lfsr	2,12
  6996  000276  0100               	movlb	0	; () banked
  6997  000278  51E5               	movf	_ic_ptr& (0+255),w,b
  6998  00027A  26D9               	addwf	fsr2l,f,c
  6999  00027C  0100               	movlb	0	; () banked
  7000  00027E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7001  000280  22DA               	addwfc	fsr2h,f,c
  7002  000282  0E05               	movlw	5
  7003  000284  6EDF               	movwf	indf2,c
  7004                           
  7005                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7006  000286  0100               	movlb	0	; () banked
  7007  000288  EE20 F00D          	lfsr	2,13
  7008  00028C  0100               	movlb	0	; () banked
  7009  00028E  51E5               	movf	_ic_ptr& (0+255),w,b
  7010  000290  26D9               	addwf	fsr2l,f,c
  7011  000292  0100               	movlb	0	; () banked
  7012  000294  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7013  000296  22DA               	addwfc	fsr2h,f,c
  7014  000298  0E06               	movlw	6
  7015  00029A  D045               	goto	L9
  7016  00029C                     i2l3116:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 177: {
  7020                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7021  00029C  0100               	movlb	0	; () banked
  7022  00029E  EE20 F01A          	lfsr	2,26
  7023  0002A2  0100               	movlb	0	; () banked
  7024  0002A4  51E5               	movf	_ic_ptr& (0+255),w,b
  7025  0002A6  26D9               	addwf	fsr2l,f,c
  7026  0002A8  0100               	movlb	0	; () banked
  7027  0002AA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7028  0002AC  22DA               	addwfc	fsr2h,f,c
  7029  0002AE  50DF               	movf	indf2,w,c
  7030  0002B0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7031  0002B2  0100               	movlb	0	; () banked
  7032  0002B4  EE20 F019          	lfsr	2,25
  7033  0002B8  0100               	movlb	0	; () banked
  7034  0002BA  51E5               	movf	_ic_ptr& (0+255),w,b
  7035  0002BC  26D9               	addwf	fsr2l,f,c
  7036  0002BE  0100               	movlb	0	; () banked
  7037  0002C0  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7038  0002C2  22DA               	addwfc	fsr2h,f,c
  7039  0002C4  50DF               	movf	indf2,w,c
  7040  0002C6  5C49               	subwf	??_i2c_int_handler,w,c
  7041  0002C8  B0D8               	btfsc	status,0,c
  7042  0002CA  D0E5               	goto	L12
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7046  0002CC  0100               	movlb	0	; () banked
  7047  0002CE  EE20 F01A          	lfsr	2,26
  7048  0002D2  0100               	movlb	0	; () banked
  7049  0002D4  51E5               	movf	_ic_ptr& (0+255),w,b
  7050  0002D6  26D9               	addwf	fsr2l,f,c
  7051  0002D8  0100               	movlb	0	; () banked
  7052  0002DA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7053  0002DC  22DA               	addwfc	fsr2h,f,c
  7054  0002DE  50DF               	movf	indf2,w,c
  7055  0002E0  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7056  0002E2  5049               	movf	??_i2c_int_handler,w,c
  7057  0002E4  0D01               	mullw	1
  7058  0002E6  0E0F               	movlw	15
  7059  0002E8  26F3               	addwf	prodl,f,c
  7060  0002EA  0E00               	movlw	0
  7061  0002EC  22F4               	addwfc	prodh,f,c
  7062  0002EE  50F3               	movf	prodl,w,c
  7063  0002F0  0100               	movlb	0	; () banked
  7064  0002F2  0100               	movlb	0	; () banked
  7065  0002F4  25E5               	addwf	_ic_ptr& (0+255),w,b
  7066  0002F6  6ED9               	movwf	fsr2l,c
  7067  0002F8  50F4               	movf	prodh,w,c
  7068  0002FA  0100               	movlb	0	; () banked
  7069  0002FC  0100               	movlb	0	; () banked
  7070  0002FE  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7071  000300  6EDA               	movwf	fsr2h,c
  7072  000302  50DF               	movf	indf2,w,c
  7073  000304  6EC9               	movwf	4041,c	;volatile
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7077  000306  0100               	movlb	0	; () banked
  7078  000308  EE20 F01A          	lfsr	2,26
  7079  00030C  0100               	movlb	0	; () banked
  7080  00030E  51E5               	movf	_ic_ptr& (0+255),w,b
  7081  000310  26D9               	addwf	fsr2l,f,c
  7082  000312  0100               	movlb	0	; () banked
  7083  000314  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7084  000316  22DA               	addwfc	fsr2h,f,c
  7085  000318  2ADF               	incf	indf2,f,c
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;my_i2c.c: 181: data_written = 1;
  7089  00031A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7090  00031C  0E01               	movlw	1
  7091  00031E  0100               	movlb	0	; () banked
  7092  000320  0100               	movlb	0	; () banked
  7093  000322  6FB9               	movwf	i2c_int_handler@data_written& (0+255),b
  7094  000324  D0B6               	goto	L10
  7095  000326                     L9:
  7096  000326  6EDF               	movwf	indf2,c
  7097  000328  D0D7               	goto	i2l271
  7098  00032A                     i2l291:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;my_i2c.c: 189: {
  7102                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7103  00032A  A8C7               	btfss	4039,4,c	;volatile
  7104  00032C  D05E               	goto	i2l3144
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7108  00032E  0100               	movlb	0	; () banked
  7109  000330  EE20 F00B          	lfsr	2,11
  7110  000334  0100               	movlb	0	; () banked
  7111  000336  51E5               	movf	_ic_ptr& (0+255),w,b
  7112  000338  26D9               	addwf	fsr2l,f,c
  7113  00033A  0100               	movlb	0	; () banked
  7114  00033C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7115  00033E  22DA               	addwfc	fsr2h,f,c
  7116  000340  2ADF               	incf	indf2,f,c
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 194: if (data_read) {
  7120  000342  0100               	movlb	0	; () banked
  7121  000344  0100               	movlb	0	; () banked
  7122  000346  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7123  000348  B4D8               	btfsc	status,2,c
  7124  00034A  D048               	goto	i2l3140
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7128  00034C  AAC7               	btfss	4039,5,c	;volatile
  7129  00034E  D025               	goto	i2l3138
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7133  000350  0100               	movlb	0	; () banked
  7134  000352  EE20 F00A          	lfsr	2,10
  7135  000356  0100               	movlb	0	; () banked
  7136  000358  51E5               	movf	_ic_ptr& (0+255),w,b
  7137  00035A  26D9               	addwf	fsr2l,f,c
  7138  00035C  0100               	movlb	0	; () banked
  7139  00035E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7140  000360  22DA               	addwfc	fsr2h,f,c
  7141  000362  50DF               	movf	indf2,w,c
  7142  000364  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7143  000366  5049               	movf	??_i2c_int_handler,w,c
  7144  000368  0D01               	mullw	1
  7145  00036A  50F3               	movf	prodl,w,c
  7146  00036C  0100               	movlb	0	; () banked
  7147  00036E  0100               	movlb	0	; () banked
  7148  000370  25E5               	addwf	_ic_ptr& (0+255),w,b
  7149  000372  6ED9               	movwf	fsr2l,c
  7150  000374  50F4               	movf	prodh,w,c
  7151  000376  0100               	movlb	0	; () banked
  7152  000378  0100               	movlb	0	; () banked
  7153  00037A  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7154  00037C  6EDA               	movwf	fsr2h,c
  7155  00037E  0100               	movlb	0	; () banked
  7156  000380  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7160  000384  0100               	movlb	0	; () banked
  7161  000386  EE20 F00A          	lfsr	2,10
  7162  00038A  0100               	movlb	0	; () banked
  7163  00038C  51E5               	movf	_ic_ptr& (0+255),w,b
  7164  00038E  26D9               	addwf	fsr2l,f,c
  7165  000390  0100               	movlb	0	; () banked
  7166  000392  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7167  000394  22DA               	addwfc	fsr2h,f,c
  7168  000396  2ADF               	incf	indf2,f,c
  7169  000398  D021               	goto	i2l3140
  7170  00039A                     i2l3138:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7174  00039A  0100               	movlb	0	; () banked
  7175  00039C  EE20 F00E          	lfsr	2,14
  7176  0003A0  0100               	movlb	0	; () banked
  7177  0003A2  51E5               	movf	_ic_ptr& (0+255),w,b
  7178  0003A4  26D9               	addwf	fsr2l,f,c
  7179  0003A6  0100               	movlb	0	; () banked
  7180  0003A8  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7181  0003AA  22DA               	addwfc	fsr2h,f,c
  7182  0003AC  2ADF               	incf	indf2,f,c
  7183                           
  7184                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7185  0003AE  0100               	movlb	0	; () banked
  7186  0003B0  EE20 F00D          	lfsr	2,13
  7187  0003B4  0100               	movlb	0	; () banked
  7188  0003B6  51E5               	movf	_ic_ptr& (0+255),w,b
  7189  0003B8  26D9               	addwf	fsr2l,f,c
  7190  0003BA  0100               	movlb	0	; () banked
  7191  0003BC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7192  0003BE  22DA               	addwfc	fsr2h,f,c
  7193  0003C0  0E06               	movlw	6
  7194  0003C2  6EDF               	movwf	indf2,c
  7195                           
  7196                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7197  0003C4  0100               	movlb	0	; () banked
  7198  0003C6  EE20 F00C          	lfsr	2,12
  7199  0003CA  0100               	movlb	0	; () banked
  7200  0003CC  51E5               	movf	_ic_ptr& (0+255),w,b
  7201  0003CE  26D9               	addwf	fsr2l,f,c
  7202  0003D0  0100               	movlb	0	; () banked
  7203  0003D2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7204  0003D4  22DA               	addwfc	fsr2h,f,c
  7205  0003D6  0E05               	movlw	5
  7206  0003D8  6EDF               	movwf	indf2,c
  7207  0003DA  D05D               	goto	L12
  7208  0003DC                     i2l3140:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 205: msg_ready = 1;
  7212  0003DC  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7213  0003DE  0E01               	movlw	1
  7214  0003E0  0100               	movlb	0	; () banked
  7215  0003E2  0100               	movlb	0	; () banked
  7216  0003E4  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7217  0003E6  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7218                           
  7219                           ; BSR set to: 0
  7220  0003E8  D056               	goto	L12
  7221  0003EA                     i2l3144:
  7222                           
  7223                           ; BSR set to: 0
  7224  0003EA  0100               	movlb	0	; () banked
  7225  0003EC  0100               	movlb	0	; () banked
  7226  0003EE  51BE               	movf	i2c_int_handler@data_read& (0+255),w,b
  7227  0003F0  B4D8               	btfsc	status,2,c
  7228  0003F2  D072               	goto	i2l271
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7232  0003F4  0100               	movlb	0	; () banked
  7233  0003F6  EE20 F00B          	lfsr	2,11
  7234  0003FA  0100               	movlb	0	; () banked
  7235  0003FC  51E5               	movf	_ic_ptr& (0+255),w,b
  7236  0003FE  26D9               	addwf	fsr2l,f,c
  7237  000400  0100               	movlb	0	; () banked
  7238  000402  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7239  000404  22DA               	addwfc	fsr2h,f,c
  7240  000406  2ADF               	incf	indf2,f,c
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7244  000408  AAC7               	btfss	4039,5,c	;volatile
  7245  00040A  D025               	goto	i2l299
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7249  00040C  0100               	movlb	0	; () banked
  7250  00040E  EE20 F00A          	lfsr	2,10
  7251  000412  0100               	movlb	0	; () banked
  7252  000414  51E5               	movf	_ic_ptr& (0+255),w,b
  7253  000416  26D9               	addwf	fsr2l,f,c
  7254  000418  0100               	movlb	0	; () banked
  7255  00041A  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7256  00041C  22DA               	addwfc	fsr2h,f,c
  7257  00041E  50DF               	movf	indf2,w,c
  7258  000420  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7259  000422  5049               	movf	??_i2c_int_handler,w,c
  7260  000424  0D01               	mullw	1
  7261  000426  50F3               	movf	prodl,w,c
  7262  000428  0100               	movlb	0	; () banked
  7263  00042A  0100               	movlb	0	; () banked
  7264  00042C  25E5               	addwf	_ic_ptr& (0+255),w,b
  7265  00042E  6ED9               	movwf	fsr2l,c
  7266  000430  50F4               	movf	prodh,w,c
  7267  000432  0100               	movlb	0	; () banked
  7268  000434  0100               	movlb	0	; () banked
  7269  000436  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7270  000438  6EDA               	movwf	fsr2h,c
  7271  00043A  0100               	movlb	0	; () banked
  7272  00043C  C0BB  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7276  000440  0100               	movlb	0	; () banked
  7277  000442  EE20 F00A          	lfsr	2,10
  7278  000446  0100               	movlb	0	; () banked
  7279  000448  51E5               	movf	_ic_ptr& (0+255),w,b
  7280  00044A  26D9               	addwf	fsr2l,f,c
  7281  00044C  0100               	movlb	0	; () banked
  7282  00044E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7283  000450  22DA               	addwfc	fsr2h,f,c
  7284  000452  2ADF               	incf	indf2,f,c
  7285                           
  7286                           ;my_i2c.c: 213: } else {
  7287  000454  D041               	goto	i2l271
  7288  000456                     i2l299:
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7292  000456  A4C7               	btfss	4039,2,c	;volatile
  7293  000458  D6C1               	goto	i2l3096
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7297  00045A  0100               	movlb	0	; () banked
  7298  00045C  EE20 F00C          	lfsr	2,12
  7299  000460  0100               	movlb	0	; () banked
  7300  000462  51E5               	movf	_ic_ptr& (0+255),w,b
  7301  000464  26D9               	addwf	fsr2l,f,c
  7302  000466  0100               	movlb	0	; () banked
  7303  000468  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7304  00046A  22DA               	addwfc	fsr2h,f,c
  7305  00046C  0E08               	movlw	8
  7306  00046E  6EDF               	movwf	indf2,c
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;my_i2c.c: 216: msg_ready = 1;
  7310  000470  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7311  000472  0E01               	movlw	1
  7312  000474  0100               	movlb	0	; () banked
  7313  000476  0100               	movlb	0	; () banked
  7314  000478  6FBD               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7315  00047A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7316  00047C                     L13:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;my_i2c.c: 217: msg_to_send = 1;
  7320  00047C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7321  00047E  0E01               	movlw	1
  7322  000480  0100               	movlb	0	; () banked
  7323  000482  0100               	movlb	0	; () banked
  7324  000484  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7325  000486  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;my_i2c.c: 219: data_read = 0;
  7329  000488  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7330  00048A  0E00               	movlw	0
  7331  00048C  0100               	movlb	0	; () banked
  7332  00048E  0100               	movlb	0	; () banked
  7333  000490  6FBE               	movwf	i2c_int_handler@data_read& (0+255),b
  7334  000492                     L10:
  7335  000492  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7336                           
  7337                           ;my_i2c.c: 220: } else {
  7338  000494  D021               	goto	i2l271
  7339  000496                     L12:
  7340                           
  7341                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7342  000496  0100               	movlb	0	; () banked
  7343  000498  EE20 F00C          	lfsr	2,12
  7344  00049C  0100               	movlb	0	; () banked
  7345  00049E  51E5               	movf	_ic_ptr& (0+255),w,b
  7346  0004A0  26D9               	addwf	fsr2l,f,c
  7347  0004A2  0100               	movlb	0	; () banked
  7348  0004A4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7349  0004A6  22DA               	addwfc	fsr2h,f,c
  7350  0004A8  0E05               	movlw	5
  7351  0004AA  D73D               	goto	L9
  7352  0004AC                     i2l3166:
  7353                           
  7354                           ; BSR set to: 0
  7355  0004AC  0100               	movlb	0	; () banked
  7356  0004AE  EE20 F00C          	lfsr	2,12
  7357  0004B2  0100               	movlb	0	; () banked
  7358  0004B4  51E5               	movf	_ic_ptr& (0+255),w,b
  7359  0004B6  26D9               	addwf	fsr2l,f,c
  7360  0004B8  0100               	movlb	0	; () banked
  7361  0004BA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  0004BC  22DA               	addwfc	fsr2h,f,c
  7363  0004BE  50DF               	movf	indf2,w,c
  7364                           
  7365                           ; Switch size 1, requested type "space"
  7366                           ; Number of cases is 4, Range of values is 5 to 8
  7367                           ; switch strategies available:
  7368                           ; Name         Instructions Cycles
  7369                           ; simple_byte           13     7 (average)
  7370                           ;	Chosen strategy is simple_byte
  7371  0004C0  0A05               	xorlw	5	; case 5
  7372  0004C2  B4D8               	btfsc	status,2,c
  7373  0004C4  D652               	goto	i2l273
  7374  0004C6  0A03               	xorlw	3	; case 6
  7375  0004C8  B4D8               	btfsc	status,2,c
  7376  0004CA  D66E               	goto	i2l277
  7377  0004CC  0A01               	xorlw	1	; case 7
  7378  0004CE  B4D8               	btfsc	status,2,c
  7379  0004D0  D72C               	goto	i2l291
  7380  0004D2  0A0F               	xorlw	15	; case 8
  7381  0004D4  B4D8               	btfsc	status,2,c
  7382  0004D6  D6E2               	goto	i2l3116
  7383  0004D8                     i2l271:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 230: }
  7387                           ;my_i2c.c: 233: if (data_read || data_written) {
  7388  0004D8  0100               	movlb	0	; () banked
  7389  0004DA  0100               	movlb	0	; () banked
  7390  0004DC  67BE               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7391  0004DE  D005               	goto	i2l305
  7392                           
  7393                           ; BSR set to: 0
  7394  0004E0  0100               	movlb	0	; () banked
  7395  0004E2  0100               	movlb	0	; () banked
  7396  0004E4  51B9               	movf	i2c_int_handler@data_written& (0+255),w,b
  7397  0004E6  B4D8               	btfsc	status,2,c
  7398  0004E8  D002               	goto	i2l3172
  7399  0004EA                     i2l305:
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7403  0004EA  A8C6               	btfss	4038,4,c	;volatile
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7407  0004EC  88C6               	bsf	4038,4,c	;volatile
  7408  0004EE                     i2l3172:
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;my_i2c.c: 237: }
  7412                           ;my_i2c.c: 238: }
  7413                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7414  0004EE  0100               	movlb	0	; () banked
  7415  0004F0  EE20 F00A          	lfsr	2,10
  7416  0004F4  0100               	movlb	0	; () banked
  7417  0004F6  51E5               	movf	_ic_ptr& (0+255),w,b
  7418  0004F8  26D9               	addwf	fsr2l,f,c
  7419  0004FA  0100               	movlb	0	; () banked
  7420  0004FC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7421  0004FE  22DA               	addwfc	fsr2h,f,c
  7422  000500  0E08               	movlw	8
  7423  000502  64DF               	cpfsgt	indf2,c
  7424  000504  D024               	goto	i2l3178
  7425                           
  7426                           ; BSR set to: 0
  7427  000506  0100               	movlb	0	; () banked
  7428  000508  0100               	movlb	0	; () banked
  7429  00050A  67BD               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7430  00050C  D020               	goto	i2l3178
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7434  00050E  0100               	movlb	0	; () banked
  7435  000510  EE20 F00C          	lfsr	2,12
  7436  000514  0100               	movlb	0	; () banked
  7437  000516  51E5               	movf	_ic_ptr& (0+255),w,b
  7438  000518  26D9               	addwf	fsr2l,f,c
  7439  00051A  0100               	movlb	0	; () banked
  7440  00051C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7441  00051E  22DA               	addwfc	fsr2h,f,c
  7442  000520  0E05               	movlw	5
  7443  000522  6EDF               	movwf	indf2,c
  7444                           
  7445                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7446  000524  0100               	movlb	0	; () banked
  7447  000526  EE20 F00E          	lfsr	2,14
  7448  00052A  0100               	movlb	0	; () banked
  7449  00052C  51E5               	movf	_ic_ptr& (0+255),w,b
  7450  00052E  26D9               	addwf	fsr2l,f,c
  7451  000530  0100               	movlb	0	; () banked
  7452  000532  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7453  000534  22DA               	addwfc	fsr2h,f,c
  7454  000536  2ADF               	incf	indf2,f,c
  7455                           
  7456                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7457  000538  0100               	movlb	0	; () banked
  7458  00053A  EE20 F00D          	lfsr	2,13
  7459  00053E  0100               	movlb	0	; () banked
  7460  000540  51E5               	movf	_ic_ptr& (0+255),w,b
  7461  000542  26D9               	addwf	fsr2l,f,c
  7462  000544  0100               	movlb	0	; () banked
  7463  000546  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7464  000548  22DA               	addwfc	fsr2h,f,c
  7465  00054A  0E07               	movlw	7
  7466  00054C  6EDF               	movwf	indf2,c
  7467  00054E                     i2l3178:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;my_i2c.c: 245: }
  7471                           ;my_i2c.c: 247: if (msg_ready) {
  7472  00054E  0100               	movlb	0	; () banked
  7473  000550  0100               	movlb	0	; () banked
  7474  000552  51BD               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7475  000554  B4D8               	btfsc	status,2,c
  7476  000556  D03E               	goto	i2l3186
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7480  000558  0100               	movlb	0	; () banked
  7481  00055A  EE20 F00B          	lfsr	2,11
  7482  00055E  0100               	movlb	0	; () banked
  7483  000560  51E5               	movf	_ic_ptr& (0+255),w,b
  7484  000562  26D9               	addwf	fsr2l,f,c
  7485  000564  0100               	movlb	0	; () banked
  7486  000566  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7487  000568  22DA               	addwfc	fsr2h,f,c
  7488  00056A  0100               	movlb	0	; () banked
  7489  00056C  EE10 F00A          	lfsr	1,10
  7490  000570  0100               	movlb	0	; () banked
  7491  000572  51E5               	movf	_ic_ptr& (0+255),w,b
  7492  000574  26E1               	addwf	fsr1l,f,c
  7493  000576  0100               	movlb	0	; () banked
  7494  000578  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7495  00057A  22E2               	addwfc	fsr1h,f,c
  7496  00057C  50E7               	movf	indf1,w,c
  7497  00057E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7498  000580  5049               	movf	??_i2c_int_handler,w,c
  7499  000582  0D01               	mullw	1
  7500  000584  50F3               	movf	prodl,w,c
  7501  000586  0100               	movlb	0	; () banked
  7502  000588  0100               	movlb	0	; () banked
  7503  00058A  25E5               	addwf	_ic_ptr& (0+255),w,b
  7504  00058C  6EE1               	movwf	fsr1l,c
  7505  00058E  50F4               	movf	prodh,w,c
  7506  000590  0100               	movlb	0	; () banked
  7507  000592  0100               	movlb	0	; () banked
  7508  000594  21E6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7509  000596  6EE2               	movwf	fsr1h,c
  7510  000598  CFDF FFE7          	movff	indf2,indf1
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7514  00059C  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7515  00059E  0E28               	movlw	40
  7516  0005A0  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7517  0005A2  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7518  0005A4  0100               	movlb	0	; () banked
  7519  0005A6  C0E6  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7520  0005AA  0100               	movlb	0	; () banked
  7521  0005AC  C0E5  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7522  0005B0  0100               	movlb	0	; () banked
  7523  0005B2  EE20 F00A          	lfsr	2,10
  7524  0005B6  0100               	movlb	0	; () banked
  7525  0005B8  51E5               	movf	_ic_ptr& (0+255),w,b
  7526  0005BA  26D9               	addwf	fsr2l,f,c
  7527  0005BC  0100               	movlb	0	; () banked
  7528  0005BE  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  0005C0  22DA               	addwfc	fsr2h,f,c
  7530  0005C2  50DF               	movf	indf2,w,c
  7531  0005C4  6E4A               	movwf	(??_i2c_int_handler+1)& (0+255),c
  7532  0005C6  284A               	incf	??_i2c_int_handler+1,w,c
  7533  0005C8  EC3A  F00D         	call	_ToMainHigh_sendmsg
  7534                           
  7535                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7536  0005CC  0100               	movlb	0	; () banked
  7537  0005CE  EE20 F00A          	lfsr	2,10
  7538  0005D2  D043               	goto	L11
  7539  0005D4                     i2l3186:
  7540                           
  7541                           ; BSR set to: 0
  7542  0005D4  0100               	movlb	0	; () banked
  7543  0005D6  EE20 F00E          	lfsr	2,14
  7544  0005DA  0100               	movlb	0	; () banked
  7545  0005DC  51E5               	movf	_ic_ptr& (0+255),w,b
  7546  0005DE  26D9               	addwf	fsr2l,f,c
  7547  0005E0  0100               	movlb	0	; () banked
  7548  0005E2  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7549  0005E4  22DA               	addwfc	fsr2h,f,c
  7550  0005E6  50DF               	movf	indf2,w,c
  7551  0005E8  B4D8               	btfsc	status,2,c
  7552  0005EA  D03F               	goto	i2l3194
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7556  0005EC  0100               	movlb	0	; () banked
  7557  0005EE  EE20 F00E          	lfsr	2,14
  7558  0005F2  0100               	movlb	0	; () banked
  7559  0005F4  51E5               	movf	_ic_ptr& (0+255),w,b
  7560  0005F6  26D9               	addwf	fsr2l,f,c
  7561  0005F8  0100               	movlb	0	; () banked
  7562  0005FA  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7563  0005FC  22DA               	addwfc	fsr2h,f,c
  7564  0005FE  50DF               	movf	indf2,w,c
  7565  000600  0100               	movlb	0	; () banked
  7566  000602  0100               	movlb	0	; () banked
  7567  000604  6FB6               	movwf	i2c_int_handler@error_buf& (0+255),b
  7568                           
  7569                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7570  000606  0100               	movlb	0	; () banked
  7571  000608  EE20 F00D          	lfsr	2,13
  7572  00060C  0100               	movlb	0	; () banked
  7573  00060E  51E5               	movf	_ic_ptr& (0+255),w,b
  7574  000610  26D9               	addwf	fsr2l,f,c
  7575  000612  0100               	movlb	0	; () banked
  7576  000614  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7577  000616  22DA               	addwfc	fsr2h,f,c
  7578  000618  50DF               	movf	indf2,w,c
  7579  00061A  0100               	movlb	0	; () banked
  7580  00061C  0100               	movlb	0	; () banked
  7581  00061E  6FB7               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7582                           
  7583                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7584  000620  0100               	movlb	0	; () banked
  7585  000622  EE20 F00B          	lfsr	2,11
  7586  000626  0100               	movlb	0	; () banked
  7587  000628  51E5               	movf	_ic_ptr& (0+255),w,b
  7588  00062A  26D9               	addwf	fsr2l,f,c
  7589  00062C  0100               	movlb	0	; () banked
  7590  00062E  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7591  000630  22DA               	addwfc	fsr2h,f,c
  7592  000632  50DF               	movf	indf2,w,c
  7593  000634  0100               	movlb	0	; () banked
  7594  000636  0100               	movlb	0	; () banked
  7595  000638  6FB8               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7599  00063A  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7600  00063C  0E29               	movlw	41
  7601  00063E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7602  000640  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7603  000642  0100               	movlb	0	; () banked
  7604  000644  0E00               	movlw	high i2c_int_handler@error_buf
  7605  000646  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7606  000648  0100               	movlb	0	; () banked
  7607  00064A  0EB6               	movlw	low i2c_int_handler@error_buf
  7608  00064C  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7609  00064E  0E03               	movlw	3
  7610  000650  EC3A  F00D         	call	_ToMainHigh_sendmsg
  7611                           
  7612                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7613  000654  0100               	movlb	0	; () banked
  7614  000656  EE20 F00E          	lfsr	2,14
  7615  00065A                     L11:
  7616  00065A  0100               	movlb	0	; () banked
  7617  00065C  51E5               	movf	_ic_ptr& (0+255),w,b
  7618  00065E  26D9               	addwf	fsr2l,f,c
  7619  000660  0100               	movlb	0	; () banked
  7620  000662  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7621  000664  22DA               	addwfc	fsr2h,f,c
  7622  000666  0E00               	movlw	0
  7623  000668  6EDF               	movwf	indf2,c
  7624  00066A                     i2l3194:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;my_i2c.c: 257: }
  7628                           ;my_i2c.c: 258: if (msg_to_send) {
  7629  00066A  0100               	movlb	0	; () banked
  7630  00066C  0100               	movlb	0	; () banked
  7631  00066E  51BC               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7632  000670  B4D8               	btfsc	status,2,c
  7633  000672  0012               	return	
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7637  000674  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7638  000676  0E2A               	movlw	42
  7639  000678  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7640  00067A  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7641  00067C  0100               	movlb	0	; () banked
  7642  00067E  C0E6  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7643  000682  0100               	movlb	0	; () banked
  7644  000684  C0E5  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7645  000688  0E00               	movlw	0
  7646  00068A  EC3A  F00D         	call	_ToMainHigh_sendmsg
  7647                           
  7648                           ;my_i2c.c: 261: msg_to_send = 0;
  7649  00068E  6E49               	movwf	??_i2c_int_handler& (0+255),c
  7650  000690  0E00               	movlw	0
  7651  000692  0100               	movlb	0	; () banked
  7652  000694  0100               	movlb	0	; () banked
  7653  000696  6FBC               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7654  000698  5049               	movf	??_i2c_int_handler& (0+255),w,c
  7655  00069A  0012               	return	
  7656  00069C                     __end_of_i2c_int_handler:
  7657                           	opt stack 0
  7658                           pclatu	equ	0xFFB
  7659                           pclath	equ	0xFFA
  7660                           tblptru	equ	0xFF8
  7661                           tblptrh	equ	0xFF7
  7662                           tblptrl	equ	0xFF6
  7663                           tablat	equ	0xFF5
  7664                           prodh	equ	0xFF4
  7665                           prodl	equ	0xFF3
  7666                           intcon	equ	0xFF2
  7667                           postinc0	equ	0xFEE
  7668                           fsr0h	equ	0xFEA
  7669                           fsr0l	equ	0xFE9
  7670                           wreg	equ	0xFE8
  7671                           indf1	equ	0xFE7
  7672                           fsr1h	equ	0xFE2
  7673                           fsr1l	equ	0xFE1
  7674                           bsr	equ	0xFE0
  7675                           indf2	equ	0xFDF
  7676                           postinc2	equ	0xFDE
  7677                           postdec2	equ	0xFDD
  7678                           fsr2h	equ	0xFDA
  7679                           fsr2l	equ	0xFD9
  7680                           status	equ	0xFD8
  7681                           
  7682 ;; *************** function _handle_start *****************
  7683 ;; Defined at:
  7684 ;;		line 71 in file "src/my_i2c.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  data_read       1    wreg     unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  data_read       1   46[COMRAM] unsigned char 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;		None               void
  7691 ;; Registers used:
  7692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7698 ;;      Params:         0       0       0       0       0
  7699 ;;      Locals:         1       0       0       0       0
  7700 ;;      Temps:          0       0       0       0       0
  7701 ;;      Totals:         1       0       0       0       0
  7702 ;;Total ram usage:        1 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_i2c_int_handler
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text46
  7712  000F3E                     __ptext46:
  7713                           	opt stack 0
  7714  000F3E                     _handle_start:
  7715                           	opt stack 19
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;incstack = 0
  7719                           ;handle_start@data_read stored from wreg
  7720  000F3E  CFE8 F02F          	movff	wreg,handle_start@data_read
  7721                           
  7722                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7723  000F42  0100               	movlb	0	; () banked
  7724  000F44  EE20 F00B          	lfsr	2,11
  7725  000F48  0100               	movlb	0	; () banked
  7726  000F4A  51E5               	movf	_ic_ptr& (0+255),w,b
  7727  000F4C  26D9               	addwf	fsr2l,f,c
  7728  000F4E  0100               	movlb	0	; () banked
  7729  000F50  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7730  000F52  22DA               	addwfc	fsr2h,f,c
  7731  000F54  0E01               	movlw	1
  7732  000F56  6EDF               	movwf	indf2,c
  7733                           
  7734                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7735  000F58  0100               	movlb	0	; () banked
  7736  000F5A  EE20 F00A          	lfsr	2,10
  7737  000F5E  0100               	movlb	0	; () banked
  7738  000F60  51E5               	movf	_ic_ptr& (0+255),w,b
  7739  000F62  26D9               	addwf	fsr2l,f,c
  7740  000F64  0100               	movlb	0	; () banked
  7741  000F66  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7742  000F68  22DA               	addwfc	fsr2h,f,c
  7743  000F6A  0E00               	movlw	0
  7744  000F6C  6EDF               	movwf	indf2,c
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;my_i2c.c: 75: if (data_read) {
  7748  000F6E  502F               	movf	handle_start@data_read,w,c
  7749  000F70  B4D8               	btfsc	status,2,c
  7750  000F72  D03D               	goto	i2l2798
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7754  000F74  AAC7               	btfss	4039,5,c	;volatile
  7755  000F76  D021               	goto	i2l261
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7759  000F78  0100               	movlb	0	; () banked
  7760  000F7A  EE20 F00C          	lfsr	2,12
  7761  000F7E  0100               	movlb	0	; () banked
  7762  000F80  51E5               	movf	_ic_ptr& (0+255),w,b
  7763  000F82  26D9               	addwf	fsr2l,f,c
  7764  000F84  0100               	movlb	0	; () banked
  7765  000F86  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7766  000F88  22DA               	addwfc	fsr2h,f,c
  7767  000F8A  0E05               	movlw	5
  7768  000F8C  6EDF               	movwf	indf2,c
  7769                           
  7770                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7771  000F8E  0100               	movlb	0	; () banked
  7772  000F90  EE20 F00E          	lfsr	2,14
  7773  000F94  0100               	movlb	0	; () banked
  7774  000F96  51E5               	movf	_ic_ptr& (0+255),w,b
  7775  000F98  26D9               	addwf	fsr2l,f,c
  7776  000F9A  0100               	movlb	0	; () banked
  7777  000F9C  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  000F9E  22DA               	addwfc	fsr2h,f,c
  7779  000FA0  2ADF               	incf	indf2,f,c
  7780                           
  7781                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7782  000FA2  0100               	movlb	0	; () banked
  7783  000FA4  EE20 F00D          	lfsr	2,13
  7784  000FA8  0100               	movlb	0	; () banked
  7785  000FAA  51E5               	movf	_ic_ptr& (0+255),w,b
  7786  000FAC  26D9               	addwf	fsr2l,f,c
  7787  000FAE  0100               	movlb	0	; () banked
  7788  000FB0  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7789  000FB2  22DA               	addwfc	fsr2h,f,c
  7790  000FB4  0E05               	movlw	5
  7791  000FB6  6EDF               	movwf	indf2,c
  7792                           
  7793                           ;my_i2c.c: 82: } else {
  7794  000FB8  0012               	return	
  7795  000FBA                     i2l261:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7799  000FBA  A4C7               	btfss	4039,2,c	;volatile
  7800  000FBC  D00C               	goto	i2l2796
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7804  000FBE  0100               	movlb	0	; () banked
  7805  000FC0  EE20 F00C          	lfsr	2,12
  7806  000FC4  0100               	movlb	0	; () banked
  7807  000FC6  51E5               	movf	_ic_ptr& (0+255),w,b
  7808  000FC8  26D9               	addwf	fsr2l,f,c
  7809  000FCA  0100               	movlb	0	; () banked
  7810  000FCC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7811  000FCE  22DA               	addwfc	fsr2h,f,c
  7812  000FD0  0E08               	movlw	8
  7813  000FD2  6EDF               	movwf	indf2,c
  7814                           
  7815                           ;my_i2c.c: 85: } else {
  7816  000FD4  0012               	return	
  7817  000FD6                     i2l2796:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7821  000FD6  0100               	movlb	0	; () banked
  7822  000FD8  EE20 F00C          	lfsr	2,12
  7823  000FDC  0100               	movlb	0	; () banked
  7824  000FDE  51E5               	movf	_ic_ptr& (0+255),w,b
  7825  000FE0  26D9               	addwf	fsr2l,f,c
  7826  000FE2  0100               	movlb	0	; () banked
  7827  000FE4  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7828  000FE6  22DA               	addwfc	fsr2h,f,c
  7829  000FE8  0E07               	movlw	7
  7830  000FEA  6EDF               	movwf	indf2,c
  7831  000FEC  0012               	return	
  7832  000FEE                     i2l2798:
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7836  000FEE  0100               	movlb	0	; () banked
  7837  000FF0  EE20 F00C          	lfsr	2,12
  7838  000FF4  0100               	movlb	0	; () banked
  7839  000FF6  51E5               	movf	_ic_ptr& (0+255),w,b
  7840  000FF8  26D9               	addwf	fsr2l,f,c
  7841  000FFA  0100               	movlb	0	; () banked
  7842  000FFC  51E6               	movf	(_ic_ptr+1)& (0+255),w,b
  7843  000FFE  22DA               	addwfc	fsr2h,f,c
  7844  001000  0E06               	movlw	6
  7845  001002  6EDF               	movwf	indf2,c
  7846  001004  0012               	return	
  7847  001006                     __end_of_handle_start:
  7848                           	opt stack 0
  7849                           pclatu	equ	0xFFB
  7850                           pclath	equ	0xFFA
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           postinc0	equ	0xFEE
  7859                           fsr0h	equ	0xFEA
  7860                           fsr0l	equ	0xFE9
  7861                           wreg	equ	0xFE8
  7862                           indf1	equ	0xFE7
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           bsr	equ	0xFE0
  7866                           indf2	equ	0xFDF
  7867                           postinc2	equ	0xFDE
  7868                           postdec2	equ	0xFDD
  7869                           fsr2h	equ	0xFDA
  7870                           fsr2l	equ	0xFD9
  7871                           status	equ	0xFD8
  7872                           
  7873 ;; *************** function _ToMainHigh_sendmsg *****************
  7874 ;; Defined at:
  7875 ;;		line 126 in file "src/messages.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  length          1    wreg     unsigned char 
  7878 ;;  msgtype         1   68[COMRAM] unsigned char 
  7879 ;;  data            2   69[COMRAM] PTR void 
  7880 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  length          1   71[COMRAM] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      char 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7892 ;;      Params:         3       0       0       0       0
  7893 ;;      Locals:         1       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0
  7895 ;;      Totals:         4       0       0       0       0
  7896 ;;Total ram usage:        4 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    2
  7899 ;; This function calls:
  7900 ;;		i2_send_msg
  7901 ;; This function is called by:
  7902 ;;		_i2c_int_handler
  7903 ;;		_timer0_int_handler
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text47
  7908  001A74                     __ptext47:
  7909                           	opt stack 0
  7910  001A74                     _ToMainHigh_sendmsg:
  7911                           	opt stack 17
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;incstack = 0
  7915                           ;ToMainHigh_sendmsg@length stored from wreg
  7916  001A74  CFE8 F048          	movff	wreg,ToMainHigh_sendmsg@length
  7917                           
  7918                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7919                           ;	Return value of _ToMainHigh_sendmsg is never used
  7920  001A78  0101               	movlb	1	; () banked
  7921  001A7A  0E01               	movlw	high _ToMainHigh_MQ
  7922  001A7C  6E3A               	movwf	i2send_msg@qptr+1,c
  7923  001A7E  0101               	movlb	1	; () banked
  7924  001A80  0E6C               	movlw	low _ToMainHigh_MQ
  7925  001A82  6E39               	movwf	i2send_msg@qptr,c
  7926  001A84  C048  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7927  001A88  C045  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7928  001A8C  C047  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7929  001A90  C046  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7930  001A94  EC58  F008         	call	i2_send_msg	;wreg free
  7931  001A98  0012               	return	
  7932  001A9A                     __end_of_ToMainHigh_sendmsg:
  7933                           	opt stack 0
  7934                           pclatu	equ	0xFFB
  7935                           pclath	equ	0xFFA
  7936                           tblptru	equ	0xFF8
  7937                           tblptrh	equ	0xFF7
  7938                           tblptrl	equ	0xFF6
  7939                           tablat	equ	0xFF5
  7940                           prodh	equ	0xFF4
  7941                           prodl	equ	0xFF3
  7942                           intcon	equ	0xFF2
  7943                           postinc0	equ	0xFEE
  7944                           fsr0h	equ	0xFEA
  7945                           fsr0l	equ	0xFE9
  7946                           wreg	equ	0xFE8
  7947                           indf1	equ	0xFE7
  7948                           fsr1h	equ	0xFE2
  7949                           fsr1l	equ	0xFE1
  7950                           bsr	equ	0xFE0
  7951                           indf2	equ	0xFDF
  7952                           postinc2	equ	0xFDE
  7953                           postdec2	equ	0xFDD
  7954                           fsr2h	equ	0xFDA
  7955                           fsr2l	equ	0xFD9
  7956                           status	equ	0xFD8
  7957                           
  7958 ;; *************** function i2_send_msg *****************
  7959 ;; Defined at:
  7960 ;;		line 24 in file "src/messages.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7963 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7964 ;;  length          1   58[COMRAM] unsigned char 
  7965 ;;  msgtype         1   59[COMRAM] unsigned char 
  7966 ;;  data            2   60[COMRAM] PTR void 
  7967 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  7968 ;;		 -> main@ic(28), main@uc(5), 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  7971 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7972 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7973 ;;  send_msg        2   63[COMRAM] unsigned int 
  7974 ;;  send_msg        1   65[COMRAM] unsigned char 
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1    wreg      char 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7984 ;;      Params:         6       0       0       0       0
  7985 ;;      Locals:         5       0       0       0       0
  7986 ;;      Temps:          1       0       0       0       0
  7987 ;;      Totals:        12       0       0       0       0
  7988 ;;Total ram usage:       12 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    1
  7991 ;; This function calls:
  7992 ;;		i2_memcpy
  7993 ;; This function is called by:
  7994 ;;		_ToMainHigh_sendmsg
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text48
  7999  0010B0                     __ptext48:
  8000                           	opt stack 0
  8001  0010B0                     i2_send_msg:
  8002                           	opt stack 17
  8003                           
  8004                           ;messages.c: 25: unsigned char slot;
  8005                           ;messages.c: 27: msg *qmsg;
  8006                           ;messages.c: 28: size_t tlength = length;
  8007                           
  8008                           ;incstack = 0
  8009  0010B0  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  8010  0010B4  6A41               	clrf	i2send_msg@tlength+1,c
  8011                           
  8012                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8013  0010B6  EE20 F034          	lfsr	2,52
  8014  0010BA  5039               	movf	i2send_msg@qptr,w,c
  8015  0010BC  26D9               	addwf	fsr2l,f,c
  8016  0010BE  503A               	movf	i2send_msg@qptr+1,w,c
  8017  0010C0  22DA               	addwfc	fsr2h,f,c
  8018  0010C2  50DF               	movf	indf2,w,c
  8019  0010C4  6E42               	movwf	i2send_msg@slot,c
  8020                           
  8021                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8022  0010C6  5042               	movf	i2send_msg@slot,w,c
  8023  0010C8  0D0D               	mullw	13
  8024  0010CA  50F3               	movf	prodl,w,c
  8025  0010CC  2439               	addwf	i2send_msg@qptr,w,c
  8026  0010CE  6E43               	movwf	i2send_msg@qmsg,c
  8027  0010D0  50F4               	movf	prodh,w,c
  8028  0010D2  203A               	addwfc	i2send_msg@qptr+1,w,c
  8029  0010D4  6E44               	movwf	i2send_msg@qmsg+1,c
  8030                           
  8031                           ;messages.c: 41: if (qmsg->full != 0) {
  8032  0010D6  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8033  0010DA  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8034  0010DE  50DF               	movf	indf2,w,c
  8035  0010E0  B4D8               	btfsc	status,2,c
  8036  0010E2  D002               	goto	i2l3458
  8037                           
  8038                           ;messages.c: 42: return (-1);
  8039  0010E4  0EFF               	movlw	255
  8040  0010E6  0012               	return	
  8041  0010E8                     i2l3458:
  8042                           
  8043                           ;messages.c: 43: }
  8044                           ;messages.c: 46: qmsg->length = length;
  8045  0010E8  EE20 F001          	lfsr	2,1
  8046  0010EC  5043               	movf	i2send_msg@qmsg,w,c
  8047  0010EE  26D9               	addwf	fsr2l,f,c
  8048  0010F0  5044               	movf	i2send_msg@qmsg+1,w,c
  8049  0010F2  22DA               	addwfc	fsr2h,f,c
  8050  0010F4  C03B  FFDF         	movff	i2send_msg@length,indf2
  8051                           
  8052                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8053  0010F8  EE20 F002          	lfsr	2,2
  8054  0010FC  5043               	movf	i2send_msg@qmsg,w,c
  8055  0010FE  26D9               	addwf	fsr2l,f,c
  8056  001100  5044               	movf	i2send_msg@qmsg+1,w,c
  8057  001102  22DA               	addwfc	fsr2h,f,c
  8058  001104  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  8059                           
  8060                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8061  001108  0E03               	movlw	3
  8062  00110A  2443               	addwf	i2send_msg@qmsg,w,c
  8063  00110C  6E2F               	movwf	i2memcpy@d1,c
  8064  00110E  0E00               	movlw	0
  8065  001110  2044               	addwfc	i2send_msg@qmsg+1,w,c
  8066  001112  6E30               	movwf	i2memcpy@d1+1,c
  8067  001114  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8068  001118  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  8069  00111C  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  8070  001120  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8071  001124  EC12  F00C         	call	i2_memcpy	;wreg free
  8072                           
  8073                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8074  001128  EE20 F034          	lfsr	2,52
  8075  00112C  5039               	movf	i2send_msg@qptr,w,c
  8076  00112E  26D9               	addwf	fsr2l,f,c
  8077  001130  503A               	movf	i2send_msg@qptr+1,w,c
  8078  001132  22DA               	addwfc	fsr2h,f,c
  8079  001134  EE10 F034          	lfsr	1,52
  8080  001138  5039               	movf	i2send_msg@qptr,w,c
  8081  00113A  26E1               	addwf	fsr1l,f,c
  8082  00113C  503A               	movf	i2send_msg@qptr+1,w,c
  8083  00113E  22E2               	addwfc	fsr1h,f,c
  8084  001140  50E7               	movf	indf1,w,c
  8085  001142  6E3F               	movwf	??i2_send_msg& (0+255),c
  8086  001144  283F               	incf	??i2_send_msg,w,c
  8087  001146  0B03               	andlw	3
  8088  001148  6EDF               	movwf	indf2,c
  8089                           
  8090                           ;messages.c: 59: qmsg->full = 1;
  8091  00114A  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8092  00114E  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8093  001152  0E01               	movlw	1
  8094  001154  6EDF               	movwf	indf2,c
  8095                           
  8096                           ;messages.c: 60: return (1);
  8097  001156  0E01               	movlw	1
  8098  001158  0012               	return	
  8099  00115A                     __end_ofi2_send_msg:
  8100                           	opt stack 0
  8101                           pclatu	equ	0xFFB
  8102                           pclath	equ	0xFFA
  8103                           tblptru	equ	0xFF8
  8104                           tblptrh	equ	0xFF7
  8105                           tblptrl	equ	0xFF6
  8106                           tablat	equ	0xFF5
  8107                           prodh	equ	0xFF4
  8108                           prodl	equ	0xFF3
  8109                           intcon	equ	0xFF2
  8110                           postinc0	equ	0xFEE
  8111                           fsr0h	equ	0xFEA
  8112                           fsr0l	equ	0xFE9
  8113                           wreg	equ	0xFE8
  8114                           indf1	equ	0xFE7
  8115                           fsr1h	equ	0xFE2
  8116                           fsr1l	equ	0xFE1
  8117                           bsr	equ	0xFE0
  8118                           indf2	equ	0xFDF
  8119                           postinc2	equ	0xFDE
  8120                           postdec2	equ	0xFDD
  8121                           fsr2h	equ	0xFDA
  8122                           fsr2l	equ	0xFD9
  8123                           status	equ	0xFD8
  8124                           
  8125 ;; *************** function i2_memcpy *****************
  8126 ;; Defined at:
  8127 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;  d1              2   46[COMRAM] PTR void 
  8130 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8131 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8132 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8133 ;;  s1              2   48[COMRAM] PTR const void 
  8134 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8135 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8136 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  8137 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8138 ;;		 -> main@ic(28), main@uc(5), 
  8139 ;;  n               2   50[COMRAM] unsigned int 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  8142 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8143 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8144 ;;		 -> timer0_int_handler@val(2), timer1_lthread@ctrl(2), NULL(0), i2c_int_handler@error_buf(3), 
  8145 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8146 ;;		 -> main@ic(28), main@uc(5), 
  8147 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  8148 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8149 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8150 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  2   46[COMRAM] PTR void 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8160 ;;      Params:         6       0       0       0       0
  8161 ;;      Locals:         4       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0
  8163 ;;      Totals:        10       0       0       0       0
  8164 ;;Total ram usage:       10 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		i2_send_msg
  8170 ;;		i2_recv_msg
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text49
  8175  001824                     __ptext49:
  8176                           	opt stack 0
  8177  001824                     i2_memcpy:
  8178                           	opt stack 17
  8179                           
  8180                           ;incstack = 0
  8181  001824  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8182  001828  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8183  00182C  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8184  001830  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8185  001834  D00E               	goto	i2l3520
  8186  001836                     i2l3514:
  8187  001836  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8188  00183A  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8189  00183E  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8190  001842  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8191  001846  CFDF FFE7          	movff	indf2,indf1
  8192  00184A  4A37               	infsnz	i2memcpy@s,f,c
  8193  00184C  2A38               	incf	i2memcpy@s+1,f,c
  8194  00184E  4A35               	infsnz	i2memcpy@d,f,c
  8195  001850  2A36               	incf	i2memcpy@d+1,f,c
  8196  001852                     i2l3520:
  8197  001852  0633               	decf	i2memcpy@n,f,c
  8198  001854  A0D8               	btfss	status,0,c
  8199  001856  0634               	decf	i2memcpy@n+1,f,c
  8200  001858  2833               	incf	i2memcpy@n& (0+255),w,c
  8201  00185A  B4D8               	btfsc	status,2,c
  8202  00185C  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8203  00185E  B4D8               	btfsc	status,2,c
  8204                           
  8205                           ;	Return value of i2_memcpy is never used
  8206  001860  0012               	return	
  8207  001862  D7E9               	goto	i2l3514
  8208  001864                     __end_ofi2_memcpy:
  8209                           	opt stack 0
  8210                           pclatu	equ	0xFFB
  8211                           pclath	equ	0xFFA
  8212                           tblptru	equ	0xFF8
  8213                           tblptrh	equ	0xFF7
  8214                           tblptrl	equ	0xFF6
  8215                           tablat	equ	0xFF5
  8216                           prodh	equ	0xFF4
  8217                           prodl	equ	0xFF3
  8218                           intcon	equ	0xFF2
  8219                           postinc0	equ	0xFEE
  8220                           fsr0h	equ	0xFEA
  8221                           fsr0l	equ	0xFE9
  8222                           wreg	equ	0xFE8
  8223                           indf1	equ	0xFE7
  8224                           fsr1h	equ	0xFE2
  8225                           fsr1l	equ	0xFE1
  8226                           bsr	equ	0xFE0
  8227                           indf2	equ	0xFDF
  8228                           postinc2	equ	0xFDE
  8229                           postdec2	equ	0xFDD
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function _SleepIfOkay *****************
  8235 ;; Defined at:
  8236 ;;		line 228 in file "src/messages.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;		None               void
  8243 ;; Registers used:
  8244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8250 ;;      Params:         0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0
  8253 ;;      Totals:         0       0       0       0       0
  8254 ;;Total ram usage:        0 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    2
  8257 ;; This function calls:
  8258 ;;		_enter_sleep_mode
  8259 ;;		i2_check_msg
  8260 ;;		i2_in_high_int
  8261 ;;		i2_in_low_int
  8262 ;; This function is called by:
  8263 ;;		_InterruptHandlerHigh
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text50
  8268  001688                     __ptext50:
  8269                           	opt stack 0
  8270  001688                     _SleepIfOkay:
  8271                           	opt stack 18
  8272                           
  8273                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8274                           
  8275                           ;incstack = 0
  8276  001688  664F               	tstfsz	_MQ_Main_Willing_to_block,c
  8277  00168A  D001               	goto	i2l2354
  8278  00168C  0012               	return	
  8279  00168E                     i2l2354:
  8280                           
  8281                           ;messages.c: 232: }
  8282                           ;messages.c: 235: if (in_low_int()) {
  8283  00168E  ECD2  F00C         	call	i2_in_low_int	;wreg free
  8284  001692  5032               	movf	?i2_in_low_int+1,w,c
  8285  001694  1031               	iorwf	?i2_in_low_int,w,c
  8286  001696  A4D8               	btfss	status,2,c
  8287  001698  0012               	return	
  8288                           
  8289                           ;messages.c: 237: }
  8290                           ;messages.c: 240: if (!in_high_int()) {
  8291                           
  8292                           ;messages.c: 236: return;
  8293  00169A  ECD1  F00D         	call	i2_in_high_int	;wreg free
  8294  00169E  5030               	movf	?i2_in_high_int+1,w,c
  8295  0016A0  102F               	iorwf	?i2_in_high_int,w,c
  8296  0016A2  B4D8               	btfsc	status,2,c
  8297  0016A4  0012               	return	
  8298                           
  8299                           ;messages.c: 242: }
  8300                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8301                           
  8302                           ;messages.c: 241: return;
  8303  0016A6  0101               	movlb	1	; () banked
  8304  0016A8  0E01               	movlw	high _ToMainHigh_MQ
  8305  0016AA  6E30               	movwf	i2check_msg@qptr+1,c
  8306  0016AC  0101               	movlb	1	; () banked
  8307  0016AE  0E6C               	movlw	low _ToMainHigh_MQ
  8308  0016B0  6E2F               	movwf	i2check_msg@qptr,c
  8309  0016B2  EC4D  F00D         	call	i2_check_msg	;wreg free
  8310  0016B6  0900               	iorlw	0
  8311  0016B8  A4D8               	btfss	status,2,c
  8312  0016BA  0012               	return	
  8313                           
  8314                           ;messages.c: 249: }
  8315                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8316                           
  8317                           ;messages.c: 248: return;
  8318  0016BC  0100               	movlb	0	; () banked
  8319  0016BE  0E00               	movlw	high _ToMainLow_MQ
  8320  0016C0  6E30               	movwf	i2check_msg@qptr+1,c
  8321  0016C2  0100               	movlb	0	; () banked
  8322  0016C4  0E80               	movlw	low _ToMainLow_MQ
  8323  0016C6  6E2F               	movwf	i2check_msg@qptr,c
  8324  0016C8  EC4D  F00D         	call	i2_check_msg	;wreg free
  8325  0016CC  0900               	iorlw	0
  8326  0016CE  B4D8               	btfsc	status,2,c
  8327                           
  8328                           ;messages.c: 252: }
  8329                           ;messages.c: 253: enter_sleep_mode();
  8330                           
  8331                           ;messages.c: 251: return;
  8332  0016D0  ECDB  F00D         	call	_enter_sleep_mode	;wreg free
  8333  0016D4  0012               	return	
  8334  0016D6                     __end_of_SleepIfOkay:
  8335                           	opt stack 0
  8336                           pclatu	equ	0xFFB
  8337                           pclath	equ	0xFFA
  8338                           tblptru	equ	0xFF8
  8339                           tblptrh	equ	0xFF7
  8340                           tblptrl	equ	0xFF6
  8341                           tablat	equ	0xFF5
  8342                           prodh	equ	0xFF4
  8343                           prodl	equ	0xFF3
  8344                           intcon	equ	0xFF2
  8345                           postinc0	equ	0xFEE
  8346                           fsr0h	equ	0xFEA
  8347                           fsr0l	equ	0xFE9
  8348                           wreg	equ	0xFE8
  8349                           indf1	equ	0xFE7
  8350                           fsr1h	equ	0xFE2
  8351                           fsr1l	equ	0xFE1
  8352                           bsr	equ	0xFE0
  8353                           indf2	equ	0xFDF
  8354                           postinc2	equ	0xFDE
  8355                           postdec2	equ	0xFDD
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           
  8360 ;; *************** function i2_in_low_int *****************
  8361 ;; Defined at:
  8362 ;;		line 30 in file "src/interrupts.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  2   48[COMRAM] int 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8376 ;;      Params:         2       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0
  8379 ;;      Totals:         2       0       0       0       0
  8380 ;;Total ram usage:        2 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    1
  8383 ;; This function calls:
  8384 ;;		i2_in_high_int
  8385 ;; This function is called by:
  8386 ;;		_SleepIfOkay
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text51
  8391  0019A4                     __ptext51:
  8392                           	opt stack 0
  8393  0019A4                     i2_in_low_int:
  8394                           	opt stack 18
  8395                           
  8396                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8397                           
  8398                           ;incstack = 0
  8399  0019A4  ACF2               	btfss	intcon,6,c	;volatile
  8400  0019A6  D005               	goto	i2l2860
  8401                           
  8402                           ;interrupts.c: 32: return (0);
  8403  0019A8  0E00               	movlw	0
  8404  0019AA  6E32               	movwf	?i2_in_low_int+1,c
  8405  0019AC  0E00               	movlw	0
  8406  0019AE  6E31               	movwf	?i2_in_low_int,c
  8407  0019B0  0012               	return	
  8408  0019B2                     i2l2860:
  8409  0019B2  ECD1  F00D         	call	i2_in_high_int	;wreg free
  8410  0019B6  5030               	movf	?i2_in_high_int+1,w,c
  8411  0019B8  102F               	iorwf	?i2_in_high_int,w,c
  8412  0019BA  B4D8               	btfsc	status,2,c
  8413  0019BC  D005               	goto	i2l2868
  8414                           
  8415                           ;interrupts.c: 34: return (0);
  8416  0019BE  0E00               	movlw	0
  8417  0019C0  6E32               	movwf	?i2_in_low_int+1,c
  8418  0019C2  0E00               	movlw	0
  8419  0019C4  6E31               	movwf	?i2_in_low_int,c
  8420  0019C6  0012               	return	
  8421  0019C8                     i2l2868:
  8422                           
  8423                           ;interrupts.c: 36: return (1);
  8424  0019C8  0E00               	movlw	0
  8425  0019CA  6E32               	movwf	?i2_in_low_int+1,c
  8426  0019CC  0E01               	movlw	1
  8427  0019CE  6E31               	movwf	?i2_in_low_int,c
  8428  0019D0  0012               	return	
  8429  0019D2                     __end_ofi2_in_low_int:
  8430                           	opt stack 0
  8431                           pclatu	equ	0xFFB
  8432                           pclath	equ	0xFFA
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           postinc0	equ	0xFEE
  8441                           fsr0h	equ	0xFEA
  8442                           fsr0l	equ	0xFE9
  8443                           wreg	equ	0xFE8
  8444                           indf1	equ	0xFE7
  8445                           fsr1h	equ	0xFE2
  8446                           fsr1l	equ	0xFE1
  8447                           bsr	equ	0xFE0
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           fsr2h	equ	0xFDA
  8452                           fsr2l	equ	0xFD9
  8453                           status	equ	0xFD8
  8454                           
  8455 ;; *************** function i2_in_high_int *****************
  8456 ;; Defined at:
  8457 ;;		line 22 in file "src/interrupts.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  2   46[COMRAM] int 
  8464 ;; Registers used:
  8465 ;;		wreg, status,2
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8471 ;;      Params:         2       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0
  8474 ;;      Totals:         2       0       0       0       0
  8475 ;;Total ram usage:        2 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_SleepIfOkay
  8481 ;;		i2_in_low_int
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text52
  8486  001BA2                     __ptext52:
  8487                           	opt stack 0
  8488  001BA2                     i2_in_high_int:
  8489                           	opt stack 18
  8490                           
  8491                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8492                           
  8493                           ;incstack = 0
  8494  001BA2  0E00               	movlw	0
  8495  001BA4  AEF2               	btfss	intcon,7,c	;volatile
  8496  001BA6  0E01               	movlw	1
  8497  001BA8  6E2F               	movwf	?i2_in_high_int,c
  8498  001BAA  6A30               	clrf	?i2_in_high_int+1,c
  8499  001BAC  0012               	return	
  8500  001BAE                     __end_ofi2_in_high_int:
  8501                           	opt stack 0
  8502                           pclatu	equ	0xFFB
  8503                           pclath	equ	0xFFA
  8504                           tblptru	equ	0xFF8
  8505                           tblptrh	equ	0xFF7
  8506                           tblptrl	equ	0xFF6
  8507                           tablat	equ	0xFF5
  8508                           prodh	equ	0xFF4
  8509                           prodl	equ	0xFF3
  8510                           intcon	equ	0xFF2
  8511                           postinc0	equ	0xFEE
  8512                           fsr0h	equ	0xFEA
  8513                           fsr0l	equ	0xFE9
  8514                           wreg	equ	0xFE8
  8515                           indf1	equ	0xFE7
  8516                           fsr1h	equ	0xFE2
  8517                           fsr1l	equ	0xFE1
  8518                           bsr	equ	0xFE0
  8519                           indf2	equ	0xFDF
  8520                           postinc2	equ	0xFDE
  8521                           postdec2	equ	0xFDD
  8522                           fsr2h	equ	0xFDA
  8523                           fsr2l	equ	0xFD9
  8524                           status	equ	0xFD8
  8525                           
  8526 ;; *************** function i2_check_msg *****************
  8527 ;; Defined at:
  8528 ;;		line 222 in file "src/messages.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8531 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      unsigned char 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8543 ;;      Params:         2       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0
  8545 ;;      Temps:          1       0       0       0       0
  8546 ;;      Totals:         3       0       0       0       0
  8547 ;;Total ram usage:        3 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_SleepIfOkay
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text53
  8557  001A9A                     __ptext53:
  8558                           	opt stack 0
  8559  001A9A                     i2_check_msg:
  8560                           	opt stack 19
  8561                           
  8562                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8563                           
  8564                           ;incstack = 0
  8565  001A9A  EE20 F035          	lfsr	2,53
  8566  001A9E  502F               	movf	i2check_msg@qptr,w,c
  8567  001AA0  26D9               	addwf	fsr2l,f,c
  8568  001AA2  5030               	movf	i2check_msg@qptr+1,w,c
  8569  001AA4  22DA               	addwfc	fsr2h,f,c
  8570  001AA6  50DF               	movf	indf2,w,c
  8571  001AA8  6E31               	movwf	??i2_check_msg& (0+255),c
  8572  001AAA  5031               	movf	??i2_check_msg,w,c
  8573  001AAC  0D0D               	mullw	13
  8574  001AAE  50F3               	movf	prodl,w,c
  8575  001AB0  242F               	addwf	i2check_msg@qptr,w,c
  8576  001AB2  6ED9               	movwf	fsr2l,c
  8577  001AB4  50F4               	movf	prodh,w,c
  8578  001AB6  2030               	addwfc	i2check_msg@qptr+1,w,c
  8579  001AB8  6EDA               	movwf	fsr2h,c
  8580  001ABA  50DF               	movf	indf2,w,c
  8581  001ABC  0012               	return	
  8582  001ABE                     __end_ofi2_check_msg:
  8583                           	opt stack 0
  8584                           pclatu	equ	0xFFB
  8585                           pclath	equ	0xFFA
  8586                           tblptru	equ	0xFF8
  8587                           tblptrh	equ	0xFF7
  8588                           tblptrl	equ	0xFF6
  8589                           tablat	equ	0xFF5
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           postinc0	equ	0xFEE
  8594                           fsr0h	equ	0xFEA
  8595                           fsr0l	equ	0xFE9
  8596                           wreg	equ	0xFE8
  8597                           indf1	equ	0xFE7
  8598                           fsr1h	equ	0xFE2
  8599                           fsr1l	equ	0xFE1
  8600                           bsr	equ	0xFE0
  8601                           indf2	equ	0xFDF
  8602                           postinc2	equ	0xFDE
  8603                           postdec2	equ	0xFDD
  8604                           fsr2h	equ	0xFDA
  8605                           fsr2l	equ	0xFD9
  8606                           status	equ	0xFD8
  8607                           
  8608 ;; *************** function _enter_sleep_mode *****************
  8609 ;; Defined at:
  8610 ;;		line 202 in file "src/messages.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;		None
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;		None               void
  8617 ;; Registers used:
  8618 ;;		None
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8624 ;;      Params:         0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_SleepIfOkay
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text54
  8638  001BB6                     __ptext54:
  8639                           	opt stack 0
  8640  001BB6                     _enter_sleep_mode:
  8641                           	opt stack 19
  8642                           
  8643                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8644                           
  8645                           ;incstack = 0
  8646  001BB6  8ED3               	bsf	4051,7,c	;volatile
  8647  001BB8  0003               	sleep		;# 
  8648  001BBA  0012               	return	
  8649  001BBC                     __end_of_enter_sleep_mode:
  8650                           	opt stack 0
  8651  0000                     pclatu	equ	0xFFB
  8652                           pclath	equ	0xFFA
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           prodh	equ	0xFF4
  8658                           prodl	equ	0xFF3
  8659                           intcon	equ	0xFF2
  8660                           postinc0	equ	0xFEE
  8661                           fsr0h	equ	0xFEA
  8662                           fsr0l	equ	0xFE9
  8663                           wreg	equ	0xFE8
  8664                           indf1	equ	0xFE7
  8665                           fsr1h	equ	0xFE2
  8666                           fsr1l	equ	0xFE1
  8667                           bsr	equ	0xFE0
  8668                           indf2	equ	0xFDF
  8669                           postinc2	equ	0xFDE
  8670                           postdec2	equ	0xFDD
  8671                           fsr2h	equ	0xFDA
  8672                           fsr2l	equ	0xFD9
  8673                           status	equ	0xFD8
  8674                           pclatu	equ	0xFFB
  8675                           pclath	equ	0xFFA
  8676                           tblptru	equ	0xFF8
  8677                           tblptrh	equ	0xFF7
  8678                           tblptrl	equ	0xFF6
  8679                           tablat	equ	0xFF5
  8680                           prodh	equ	0xFF4
  8681                           prodl	equ	0xFF3
  8682                           intcon	equ	0xFF2
  8683                           postinc0	equ	0xFEE
  8684                           fsr0h	equ	0xFEA
  8685                           fsr0l	equ	0xFE9
  8686                           wreg	equ	0xFE8
  8687                           indf1	equ	0xFE7
  8688                           fsr1h	equ	0xFE2
  8689                           fsr1l	equ	0xFE1
  8690                           bsr	equ	0xFE0
  8691                           indf2	equ	0xFDF
  8692                           postinc2	equ	0xFDE
  8693                           postdec2	equ	0xFDD
  8694                           fsr2h	equ	0xFDA
  8695                           fsr2l	equ	0xFD9
  8696                           status	equ	0xFD8
  8697                           
  8698                           	psect	rparam
  8699  0000                     pclatu	equ	0xFFB
  8700                           pclath	equ	0xFFA
  8701                           tblptru	equ	0xFF8
  8702                           tblptrh	equ	0xFF7
  8703                           tblptrl	equ	0xFF6
  8704                           tablat	equ	0xFF5
  8705                           prodh	equ	0xFF4
  8706                           prodl	equ	0xFF3
  8707                           intcon	equ	0xFF2
  8708                           postinc0	equ	0xFEE
  8709                           fsr0h	equ	0xFEA
  8710                           fsr0l	equ	0xFE9
  8711                           wreg	equ	0xFE8
  8712                           indf1	equ	0xFE7
  8713                           fsr1h	equ	0xFE2
  8714                           fsr1l	equ	0xFE1
  8715                           bsr	equ	0xFE0
  8716                           indf2	equ	0xFDF
  8717                           postinc2	equ	0xFDE
  8718                           postdec2	equ	0xFDD
  8719                           fsr2h	equ	0xFDA
  8720                           fsr2l	equ	0xFD9
  8721                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     76      80
    BANK0           128     47     105
    BANK1           256     74     236
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), timer1_lthread@ctrl(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_putsUSART
    _putsUSART->_WriteUSART
    _timer1_lthread->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_ToMainLow_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   11511
                                             18 BANK1     56    56      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     675
                                             26 BANK0      8     0      8
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            2     0      2     119
                                             24 BANK0      2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      15     7      8    3247
                                              3 BANK1     15     7      8
                         _ReadTimer1
                  _ToMainLow_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2341
                                             45 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     119
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             27 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             29 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6532
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3158
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3374
                                             26 COMRAM     3     3      0
                        _WriteTimer1
                       i1_ReadTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3135
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2547
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) i1_ReadTimer1                                         4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10659
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6545
                                             75 COMRAM     1     1      0
                                              0 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             70 COMRAM     5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             56 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3878
                                             72 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3272
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _putsUSART
       _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     i1_ReadTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     4A      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2F      69       4       82.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      11        0.0%
DATA                 0      0     1A5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb 14 15:03:09 2015

              main@uthread_data 01C5        _MQ_Main_Willing_to_block 004F                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 17A2                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1910  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003C               i2recv_msg@tlength 0043  
                           l113 07F6                             l404 19F6                             l405 19F8  
                           l430 18D4                             l431 18D6                             l428 18BC  
                           l472 122A                             l476 124A                             l477 124C  
                           l478 125A                             l479 125C                             l728 1AFE  
                           l489 1976            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00CD                ??_init_uart_recv 00CF                 ReadTimer1@timer 00CF  
                          l1040 1308             i2recv_msg@maxlength 003B                            l2170 170C  
                          l2162 16EA                            l3400 0B42                            l2184 1750  
                          l2600 13DE                            l3320 0BB8                            l3330 0C28  
                          l3322 0BC8                            l2508 18BE                            l2620 0CFA  
                          l3324 0BE0                            l2606 140A                            l3350 0DC4  
                          l3270 082A                            l2616 0C76                            l3328 0C02  
                          l3272 0848                            l3370 1670                            l3442 12F4  
                          l3434 12A6                            l3290 08FA                            l3266 07A4  
                          l3282 089E                            l3258 0762                            l2556 122C  
                          l2548 1216                            l3364 164C                            l3436 12B8  
                          l3292 094C                            l3268 07FC                            l3276 0866  
                          l3284 08BC                            l3438 12C0                            l2830 1B1E  
                          l3294 099E                            l3278 087E                            l3384 0A7C  
                          l2680 145A                            l2594 13B2                            l3298 09F0  
                          l2668 15FA                            _LATA 000F89                            _LATB 000F8A  
                          u2537 1B00                 _FromMainHigh_MQ 0100                   __CFG_FCMEN$ON 000000  
        ?_block_on_To_msgqueues 0001                            _main 069C                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          indf1 000FE7                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                     main@msgtype 01CE                      i1_send_msg 1006  
                          pclat 000FFA                     i2_check_msg 1A9A                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 002F                            start 00BA  
                    i2_recv_msg 0E6C                   __CFG_FOSC2$ON 000000                      i2_send_msg 10B0  
     ToMainHigh_recvmsg@msgtype 01A2                  send_msg@length 00D9     __size_of_timer0_int_handler 0064  
                   _Delay1KTCYx 1AFA                           ?_main 0001    __size_ofi1_ToMainLow_sendmsg 0026  
                         _CMCON 000FB4                           _T0CON 000FD5                           _T1CON 000FCD  
                         i1l502 1AEA                 __end_of___lwmod 1312                      i1memcpy@d1 0001  
                         i2l305 04EA                           i2l261 0FBA                           i2l271 04D8  
                         i2l273 016A                           i2l291 032A                           i2l277 01A8  
                         i2l299 0456                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 0047  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _SPBRG 000FAF                           _PORTA 000F80                           _TRISA 000F92  
                         _TRISB 000F93                           _TXREG 000FAD                           _TXSTA 000FAC  
                    i2memcpy@d1 002F                      i2memcpy@s1 0031                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006                 __end_of_in_main 1760      ToMainLow_recvmsg@maxlength 01A6  
       timer0_lthread@msgbuffer 00D3         i2c_configure_slave@addr 00CD                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1824                __end_ofi2_memcpy 1864  
                WriteUSART@data 00CD                 __initialization 1864                    __end_of_main 0A10  
                    _ReadTimer1 1B24     __size_of_timer1_int_handler 0030      __size_of_ToMainLow_recvmsg 0042  
    __size_of_ToMainLow_sendmsg 0036   __size_of_FromMainHigh_recvmsg 002A           __size_ofi2_in_low_int 002E  
                        ??_main 01B4                 send_msg@msgtype 00DA                   __activetblptr 000002  
               send_msg@tlength 00DE            __end_of_handle_start 1006                          _ADCON1 000FC1  
       ??_uart_recv_int_handler 001B                          i1l3510 1812                          i1l3504 17F6  
                        i1l3534 103E                          i1l3580 0066                          i1l3568 11D6  
                        i2l3114 025C                          i2l3050 134C                          i1l3586 0070  
                        i2l3140 03DC                          i2l3116 029C                          i2l3108 0244  
                        i2l3144 03EA                          i2l3072 014C                          i2l3056 1356  
                    _OpenTimer0 19D2                          i2l2354 168E                          i2l3138 039A  
                    _OpenTimer1 18A2                          i2l3172 04EE                          i2l3166 04AC  
                        i2l3078 0160                  __CFG_WDTEN$OFF 000000                          i2l3520 1852  
                        i2l3096 01DC                          i2l3514 1836                          i2l3194 066A  
                        i2l3186 05D4                          i2l3178 054E                          i2l3098 0208  
                        i2l3458 10E8                          i2l3482 0EB2                          i2l2860 19B2  
                        i2l3498 0F3A                          i2l2868 19C8                          i2l2796 0FD6  
                        i2l2798 0FEE     __end_of_i2c_configure_slave 1A4E                   ??_SleepIfOkay 0033  
            __size_of_ReadUSART 001E                          _OSCCON 000FD3                          _SPBRGH 000FB0  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 010E  
                   ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0D68              timer0_lthread@tptr 00CD  
                   ?i2_recv_msg 0039                    i2_in_low_int 19A4                     ?i2_send_msg 0039  
                __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092                 _i2c_int_handler 00BE  
              OpenTimer0@config 00CD                          _ic_ptr 00E5                       ??___lwmod 00D1  
                 main@msgbuffer 01B7                __end_of_init_i2c 1564                OpenTimer1@config 00CD  
                        _memcpy 162A                          clear_0 186A                          clear_1 1876  
                        _uc_ptr 004D                          main@ic 01D0                          main@uc 01C9  
              __end_of_recv_msg 0B46     start_i2c_slave_reply@length 00D1                       ??_in_main 00D3  
              __end_of_send_msg 0E6C           timer0_int_handler@val 00BA         i2c_int_handler@i2c_data 00BB  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00D0        ToMainLow_recvmsg@msgtype 01A2            __size_of_in_high_int 0012  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 1898  
    __end_of_ToMainHigh_recvmsg 17E4      __end_of_ToMainHigh_sendmsg 1A9A     __end_of_init_timer1_lthread 1B5A  
           __end_of_SleepIfOkay 16D6                      _WriteUSART 1B10                  __pcstackCOMRAM 0001  
                  __pidataBANK0 1BBC          __size_ofi2_in_high_int 000C                     ?_ReadTimer1 00CD  
            __size_of_check_msg 0036               __end_of_ReadUSART 1AFA       timer0_int_handler@msgtype 00B8  
           __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 138C  
   __end_of_InterruptHandlerLow 00BA                       ?i2_memcpy 002F                   _ToMainHigh_MQ 016C  
           __size_ofi2_recv_msg 00D2                _enter_sleep_mode 1BB6             __size_ofi2_send_msg 00AA  
          timer1_lthread@length 01A9                   ReadUSART@data 0001               __end_of_OpenUSART 1288  
                 check_msg@qptr 00CD            timer1_lthread@retval 01AF         ??_block_on_To_msgqueues 00D3  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                     ?_OpenTimer1 0001                      __pnvCOMRAM 004D  
           i1_ToMainLow_sendmsg 1A4E         __end_of_i2c_int_handler 069C                    ?i2_check_msg 002F  
            timer1_lthread@ctrl 01B2              timer1_lthread@even 01B0              timer1_lthread@tptr 01A5  
             recv_msg@maxlength 00D9                 recv_msg@msgtype 00DA                 recv_msg@tlength 00E1  
         __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001                WriteTimer0@timer 0031  
                 putsUSART@data 00CE                         ?_memcpy 00CD                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0031                   ??_WriteTimer1 0003         __size_of_timer0_lthread 0012  
          ?i1_ToMainLow_sendmsg 0017         __size_of_timer1_lthread 0114                      ??i1_memcpy 0007  
                    ??i2_memcpy 0035                i1send_msg@length 000D                   i2_in_high_int 1BA2  
            __size_of_putsUSART 002E                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7             __size_of_ReadTimer1 0012               __end_of_check_msg 1946  
                     ?_init_i2c 00CD                     _SleepIfOkay 1688                       ?_recv_msg 00D7  
                    _in_low_int 16D6                    _handle_start 0F3E                         __Hparam 0000  
                     ?_send_msg 00D7                         __Lparam 0000      __end_of_timer0_int_handler 15C8  
                   ?_WriteUSART 0001                init_uart_recv@uc 00CD                         ___lwmod 1288  
               __CFG_STVREN$OFF 000000                         __pcinit 1864                 __size_of_memcpy 005E  
                    _init_queue 1412                         __ramtop 0400           ??i1_ToMainLow_sendmsg 001A  
           __size_of_OpenTimer0 002A             __size_of_OpenTimer1 0038                         __ptext0 069C  
                       __ptext1 15C8                         __ptext2 1976                         __ptext3 1B10  
                       __ptext4 0B46                         __ptext5 1288                         __ptext6 18DA  
                       __ptext7 0D68                         __ptext8 1B24                         __ptext9 1B36  
                     _T0CONbits 000FD5                         _in_main 171C                       _T1CONbits 000FCD  
           __end_of_WriteTimer0 1BA2             __end_of_WriteTimer1 1B90                  ?i2_in_high_int 002F  
                 ?i1_ReadTimer1 0001                  __pintcode_body 1312    __end_of_FromMainHigh_recvmsg 1A26  
          end_of_initialization 1898         timer1_lthread@msgbuffer 01AB  __size_of_uart_recv_int_handler 009C  
                       memcpy@d 00D3                         memcpy@n 00D1                         memcpy@s 00D5  
 __end_of_uart_recv_int_handler 11F6                      ??_init_i2c 00CF     i2c_int_handler@data_written 00B9  
                 __Lmediumconst 0000                         int_func 1312                    ??i1_send_msg 0011  
                 ?_uart_lthread 00D0         __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001  
                  ??i2_recv_msg 0040                      ??_recv_msg 00DE                    ??i2_send_msg 003F  
                    ??_send_msg 00DD      __end_of_timer1_int_handler 1976                       _RCSTAbits 000FAB  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
             __end_of_putsUSART 19A4       ToMainHigh_sendmsg@msgtype 0045              __end_ofi1_send_msg 10B0  
                     _TRISCbits 000F94              __end_ofi2_recv_msg 0F3E                  ??i1_ReadTimer1 0003  
            __end_ofi2_send_msg 115A             __size_of_WriteUSART 0014   FromMainHigh_recvmsg@maxlength 004B  
      timer1_int_handler@result 001C                  ??_uart_lthread 00D8                       _TXSTAbits 000FAC  
                    main@length 01CF                     ?_in_low_int 00CF           timer0_lthread@msgtype 00CF  
         _start_i2c_slave_reply 0C5A    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1BBC                    ??_ReadTimer1 00CF              _ToMainHigh_recvmsg 17A2  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 1A74                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 1B36                     ?_init_queue 00CD  
                     i2memcpy@d 0035                     _WriteTimer0 1B90                     _WriteTimer1 1B7E  
                     i2memcpy@n 0033                       i2memcpy@s 0037                  _timer1_lthread 0B46  
                __end_of_memcpy 1688               _enable_interrupts 1BAE            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 01A2                 ??i2_in_high_int 0031        i2c_int_handler@data_read 00BE  
           ?_ToMainHigh_sendmsg 0045         i1ToMainLow_sendmsg@data 0018              ?_enable_interrupts 0001  
           start_initialization 1864                   ??_in_high_int 00CF                       _ReadUSART 1ADC  
             __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040             ??_enable_interrupts 00CD  
                  ??_OpenTimer0 00CD                    ??_OpenTimer1 00CD  __size_of_block_on_To_msgqueues 007E  
            __end_of_ReadTimer1 1B36   __end_of_block_on_To_msgqueues 1412                       _OpenUSART 11F6  
  __end_of_InterruptHandlerHigh 1394                      init_i2c@ic 00CD            ??_ToMainHigh_recvmsg 00E5  
          ??_ToMainHigh_sendmsg 0048          __end_of_timer0_lthread 1B48        i2c_int_handler@error_buf 00B6  
                   __pdataBANK0 00E7          __end_of_timer1_lthread 0C5A       __end_of_enable_interrupts 1BB6  
                      ??_memcpy 00D3           timer1_lthread@msgtype 01A7            _FromMainHigh_recvmsg 19FC  
  __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 19FC              __end_of_OpenTimer1 18DA  
      i2c_int_handler@msg_ready 00BD             timer1_lthread@F5129 00E7               i1ReadTimer1@timer 0003  
                   __pbssCOMRAM 004F                      ?_ReadUSART 0001                   ??_init_queues 00D1  
                 __pcstackBANK0 00B6                   __pcstackBANK1 01A2             __size_of_in_low_int 0046  
      start_i2c_slave_reply@msg 00CD             __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00CD  
      ToMainLow_sendmsg@msgtype 01A2    __size_of_InterruptHandlerLow 00A2             __end_of_in_high_int 1B6C  
                    ?_OpenUSART 00CD                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01A4  
                  _ToMainLow_MQ 0080             __size_of_init_queue 007A                  _init_uart_recv 1ABE  
                     _check_msg 1910                       __pnvBANK0 00E5          ?_start_i2c_slave_reply 00CD  
             __size_of_init_i2c 006A                    recv_msg@data 00DC                    ??_WriteUSART 00CD  
                  recv_msg@qmsg 00E3                    recv_msg@slot 00E0                    recv_msg@qptr 00D7  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 0104  
          __end_ofi1_ReadTimer1 1B7E                 ?_timer0_lthread 00CD                        ?___lwmod 00CD  
         ?_FromMainHigh_recvmsg 0047                 ?_timer1_lthread 01A5                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01A4            __end_of_uart_lthread 162A      i2c_int_handler@msg_to_send 00BC  
                      ?_in_main 00D1               WriteTimer0@timer0 002F              _timer0_int_handler 1564  
             WriteTimer1@timer1 0001      i1ToMainLow_sendmsg@msgtype 0017             uart_lthread@msgtype 00D2  
         ToMainLow_sendmsg@data 01A3             ?_timer0_int_handler 0001              __end_of_WriteUSART 1B24  
              uart_lthread@uptr 00D0          __end_of_init_uart_recv 1ADC             __end_of_init_queues 14FA  
               i2check_msg@qptr 002F                      ?_check_msg 00CD                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                   ?i2_in_low_int 0031                        _PIR1bits 000F9E  
        ToMainHigh_sendmsg@data 0046     __end_ofi1_ToMainLow_sendmsg 1A74                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 004C      __size_of_enable_interrupts 0008  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012                       _putsUSART 1976  
          timer0_lthread@length 00D1              _timer1_int_handler 1946                        i1_memcpy 17E4  
          _InterruptHandlerHigh 0008                     ??_ReadUSART 0001                        i2_memcpy 1824  
          timer0_lthread@msgval 00D5        FromMainHigh_recvmsg@data 0049                     _in_high_int 1B5A  
                  send_msg@data 00DB             _i2c_configure_slave 1A26                    send_msg@qmsg 00E1  
                  send_msg@slot 00E0                    send_msg@qptr 00D7           uart_lthread@msgbuffer 00D6  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00CD                     ??_OpenUSART 00CF  
               OpenUSART@config 00D2                  ??i2_in_low_int 0033           _uart_recv_int_handler 115A  
                  ??_in_low_int 00D1                        __Hrparam 0000            ?_i2c_configure_slave 0001  
                      __Lrparam 0000               ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 004B  
          ??_timer1_int_handler 001B        __size_of_i2c_int_handler 05DE              ??_enter_sleep_mode 002F  
              __size_of___lwmod 008A                    ??_init_queue 00CF                    ?_WriteTimer0 002F  
                  ?_WriteTimer1 0001         ToMainLow_sendmsg@length 00E3                      ?_putsUSART 00CE  
             main@t0thread_data 01B5           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
             i2send_msg@msgtype 003C     ToMainHigh_recvmsg@maxlength 01A6               i2send_msg@tlength 0040  
       init_timer1_lthread@tptr 00CD                     _init_queues 148C              __end_of_in_low_int 171C  
                      __ptext10 0C5A                        __ptext11 1ABE                        __ptext20 16D6  
                      __ptext12 1B48                        __ptext21 1B5A                        __ptext13 148C  
                      __ptext30 19D2                        __ptext22 1910                        __ptext14 1412  
                      __ptext23 1AFA                        __ptext15 14FA                        __ptext32 115A  
                      __ptext24 1760                        __ptext16 1A26                        __ptext41 1564  
                      __ptext33 1ADC                        __ptext25 17A2                        __ptext17 1BAE  
                      __ptext50 1688                        __ptext42 1B90                        __ptext34 1946  
                      __ptext26 0A10                        __ptext18 1394                        __ptext51 19A4  
                      __ptext43 19FC                        __ptext35 1A4E                        __ptext27 162A  
                      __ptext19 171C                        __ptext52 1BA2                        __ptext44 0E6C  
                      __ptext36 1006                        __ptext28 11F6                        __ptext53 1A9A  
                      __ptext45 00BE                        __ptext37 17E4                        __ptext29 18A2  
                      __ptext54 1BB6                        __ptext46 0F3E                        __ptext38 1B6C  
                      __ptext47 1A74                        __ptext39 1B7E                        __ptext48 10B0  
                      __ptext49 1824                  i1send_msg@data 000F       i1ToMainLow_sendmsg@length 001A  
                i1send_msg@qmsg 0015                  i1send_msg@slot 0014                  i1send_msg@qptr 000B  
            uart_lthread@length 00D4        timer0_int_handler@length 00B6                        _init_i2c 14FA  
           _init_timer1_lthread 1B48                   __size_of_main 0374                   ??i2_check_msg 0031  
             main@t1thread_data 01C7                     ??_check_msg 00CF              __end_of_init_queue 148C  
         __size_ofi1_ReadTimer1 0012            __size_of_SleepIfOkay 004E                        _recv_msg 0A10  
         ??_i2c_configure_slave 00CD                        _send_msg 0D68                  init_queue@qptr 00CD  
         __size_of_uart_lthread 0062                  i2recv_msg@data 003E                  i2recv_msg@qmsg 0045  
                 ??_Delay1KTCYx 00CD                  i2recv_msg@slot 0042                  i2recv_msg@qptr 0039  
                      main@baud 01C3             _InterruptHandlerLow 0018            ?_init_timer1_lthread 00CD  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                  OpenUSART@spbrg 00CD  
                      memcpy@d1 00CD                        memcpy@s1 00CF           __end_ofi2_in_high_int 1BAE  
  i2c_int_handler@overrun_error 00BA                    i1_ReadTimer1 1B6C                i2send_msg@length 003B  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 00CF                ___lwmod@dividend 00CD          ?_uart_recv_int_handler 0001  
                  _uart_lthread 15C8                  main@UARTConfig 01C4           _block_on_To_msgqueues 1394  
                 ?_handle_start 0001                ??_timer0_lthread 00D5     __size_of_ToMainHigh_recvmsg 0042  
   __size_of_ToMainHigh_sendmsg 0026                      _OSCCONbits 000FD3                ??_timer1_lthread 01AD  
      ToMainHigh_sendmsg@length 0048             __end_ofi2_check_msg 1ABE           ??_init_timer1_lthread 00CF  
                   ??_putsUSART 00D0          ??_InterruptHandlerHigh 00BF               _ToMainLow_recvmsg 1760  
             _ToMainLow_sendmsg 18DA              main@last_reg_recvd 01C2                 ___lwmod@divisor 00CF  
          __end_ofi2_in_low_int 19D2              ?_ToMainLow_recvmsg 01A2             __end_of_Delay1KTCYx 1B10  
             ??_i2c_int_handler 0049                 ___lwmod@counter 00D2              ?_ToMainLow_sendmsg 01A2  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                  i2send_msg@data 003D  
         ??_InterruptHandlerLow 001E             ??_ToMainLow_recvmsg 00E5                  i2send_msg@qmsg 0043  
                i2send_msg@slot 0042                  i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 00E3  
                ??_handle_start 002F                    _USART_Status 0050  
