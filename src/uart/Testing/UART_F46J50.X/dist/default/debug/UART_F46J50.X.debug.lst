

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 23 23:34:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	param0,global,class=BANK0,space=1,delta=1
    77  0000                     _INTCONbits	set	4082
    78  0000                     _IPR1bits	set	3999
    79  0000                     _LATB	set	3978
    80  0000                     _OSCCON	set	4051
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _PORTBbits	set	3969
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG1	set	4015
    88  0000                     _RCSTA1	set	4012
    89  0000                     _RCSTA1bits	set	4012
    90  0000                     _RCSTAbits	set	4012
    91  0000                     _SPBRG1	set	4016
    92  0000                     _SPBRGH1	set	3967
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPCON2	set	4037
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTAT	set	4039
   100  0000                     _SSPSTATbits	set	4039
   101  0000                     _T0CON	set	4053
   102  0000                     _T0CONbits	set	4053
   103  0000                     _T1CON	set	4045
   104  0000                     _T1CONbits	set	4045
   105  0000                     _T1GCON	set	3994
   106  0000                     _T1GCONbits	set	3994
   107  0000                     _TMR0H	set	4055
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR1H	set	4047
   110  0000                     _TMR1L	set	4046
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISBbits	set	3987
   113  0000                     _TXREG1	set	4014
   114  0000                     _TXSTA1	set	4013
   115  0000                     _TXSTA1bits	set	4013
   116                           
   117                           	psect	nvCOMRAM
   118  000035                     __pnvCOMRAM:
   119                           	opt stack 0
   120  000035                     _uc_ptr:
   121                           	opt stack 0
   122  000035                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000CB                     __pnvBANK0:
   126                           	opt stack 0
   127  0000CB                     _ic_ptr:
   128                           	opt stack 0
   129  0000CB                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001ECA                     __pcinit:
   135                           	opt stack 0
   136  001ECA                     start_initialization:
   137                           	opt stack 0
   138  001ECA                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  001ECA  EE01  F000         	lfsr	0,__pbssBANK1
   143  001ECE  0EA2               	movlw	162
   144  001ED0                     clear_0:
   145  001ED0  6AEE               	clrf	postinc0,c
   146  001ED2  06E8               	decf	wreg,f,c
   147  001ED4  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (55 bytes)
   150  001ED6  EE00  F060         	lfsr	0,__pbssBANK0
   151  001EDA  0E37               	movlw	55
   152  001EDC                     clear_1:
   153  001EDC  6AEE               	clrf	postinc0,c
   154  001EDE  06E8               	decf	wreg,f,c
   155  001EE0  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (1 bytes)
   158  001EE2  6A37               	clrf	__pbssCOMRAM& (0+255),c
   159  001EE4                     end_of_initialization:
   160                           	opt stack 0
   161  001EE4                     __end_of__initialization:
   162                           	opt stack 0
   163  001EE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  001EE6  6EF8               	movwf	tblptru,c
   165  001EE8  0100               	movlb	0
   166  001EEA  EF8F  F003         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssCOMRAM
   172  000037                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000037                     _USART1_Status:
   175                           	opt stack 0
   176  000037                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	bssBANK0
   182  000060                     __pbssBANK0:
   183                           	opt stack 0
   184  000060                     _MQ_Main_Willing_to_block:
   185                           	opt stack 0
   186  000060                     	ds	1
   187  000061                     _ToMainLow_MQ:
   188                           	opt stack 0
   189  000061                     	ds	54
   190                           tblptru	equ	0xFF8
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssBANK1
   195  000100                     __pbssBANK1:
   196                           	opt stack 0
   197  000100                     _FromMainHigh_MQ:
   198                           	opt stack 0
   199  000100                     	ds	54
   200  000136                     _FromMainLow_MQ:
   201                           	opt stack 0
   202  000136                     	ds	54
   203  00016C                     _ToMainHigh_MQ:
   204                           	opt stack 0
   205  00016C                     	ds	54
   206                           tblptru	equ	0xFF8
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	cstackBANK2
   211  000200                     __pcstackBANK2:
   212                           	opt stack 0
   213  000200                     main@msgbuffer:
   214                           	opt stack 0
   215                           
   216                           ; 11 bytes @ 0x0
   217  000200                     	ds	11
   218  00020B                     main@t0thread_data:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0xB
   222  00020B                     	ds	2
   223  00020D                     main@last_reg_recvd:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xD
   227  00020D                     	ds	1
   228  00020E                     main@baud:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xE
   232  00020E                     	ds	1
   233  00020F                     main@UARTConfig:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0xF
   237  00020F                     	ds	1
   238  000210                     main@uthread_data:
   239                           	opt stack 0
   240                           
   241                           ; 10 bytes @ 0x10
   242  000210                     	ds	10
   243  00021A                     main@uc:
   244                           	opt stack 0
   245                           
   246                           ; 5 bytes @ 0x1A
   247  00021A                     	ds	5
   248  00021F                     main@t1thread_data:
   249                           	opt stack 0
   250                           
   251                           ; 12 bytes @ 0x1F
   252  00021F                     	ds	12
   253  00022B                     main@msgtype:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x2B
   257  00022B                     	ds	1
   258  00022C                     main@length:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x2C
   262  00022C                     	ds	1
   263  00022D                     main@ic:
   264                           	opt stack 0
   265                           
   266                           ; 28 bytes @ 0x2D
   267  00022D                     	ds	28
   268                           tblptru	equ	0xFF8
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	cstackBANK1
   273  0001A2                     __pcstackBANK1:
   274                           	opt stack 0
   275  0001A2                     ??_OpenTimer1:
   276  0001A2                     ?_ReadTimer1:
   277                           	opt stack 0
   278  0001A2                     ?_in_high_int:
   279                           	opt stack 0
   280  0001A2                     ?___lwmod:
   281                           	opt stack 0
   282  0001A2                     init_queue@qptr:
   283                           	opt stack 0
   284  0001A2                     check_msg@qptr:
   285                           	opt stack 0
   286  0001A2                     start_i2c_slave_reply@msg:
   287                           	opt stack 0
   288  0001A2                     init_i2c@ic:
   289                           	opt stack 0
   290  0001A2                     init_uart_recv@uc:
   291                           	opt stack 0
   292  0001A2                     timer0_lthread@tptr:
   293                           	opt stack 0
   294  0001A2                     init_timer1_lthread@tptr:
   295                           	opt stack 0
   296  0001A2                     init_uart_lthread@uptr:
   297                           	opt stack 0
   298  0001A2                     Open1USART@spbrg:
   299                           	opt stack 0
   300  0001A2                     ___lwmod@dividend:
   301                           	opt stack 0
   302  0001A2                     memcpy@d1:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306  0001A2                     	ds	1
   307  0001A3                     OpenTimer1@config:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x1
   311  0001A3                     	ds	1
   312  0001A4                     ??_Open1USART:
   313  0001A4                     ??_start_i2c_slave_reply:
   314  0001A4                     ?_in_low_int:
   315                           	opt stack 0
   316  0001A4                     init_queue@i:
   317                           	opt stack 0
   318  0001A4                     timer0_lthread@msgtype:
   319                           	opt stack 0
   320  0001A4                     ReadTimer1@timer:
   321                           	opt stack 0
   322  0001A4                     ___lwmod@divisor:
   323                           	opt stack 0
   324  0001A4                     memcpy@s1:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x2
   328  0001A4                     	ds	1
   329  0001A5                     ??_init_queues:
   330                           
   331                           ; 0 bytes @ 0x3
   332  0001A5                     	ds	1
   333  0001A6                     ?_in_main:
   334                           	opt stack 0
   335  0001A6                     ___lwmod@counter:
   336                           	opt stack 0
   337  0001A6                     timer0_lthread@length:
   338                           	opt stack 0
   339  0001A6                     memcpy@n:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x4
   343  0001A6                     	ds	2
   344  0001A8                     ??_block_on_To_msgqueues:
   345  0001A8                     timer0_lthread@msgbuffer:
   346                           	opt stack 0
   347  0001A8                     memcpy@d:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  0001A8                     	ds	2
   352  0001AA                     timer0_lthread@msgval:
   353                           	opt stack 0
   354  0001AA                     memcpy@s:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  0001AA                     	ds	2
   359  0001AC                     send_msg@qptr:
   360                           	opt stack 0
   361  0001AC                     recv_msg@qptr:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0xA
   365  0001AC                     	ds	2
   366  0001AE                     send_msg@length:
   367                           	opt stack 0
   368  0001AE                     recv_msg@maxlength:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0xC
   372  0001AE                     	ds	1
   373  0001AF                     send_msg@msgtype:
   374                           	opt stack 0
   375  0001AF                     recv_msg@msgtype:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0xD
   379  0001AF                     	ds	1
   380  0001B0                     send_msg@data:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0xE
   384  0001B0                     	ds	1
   385  0001B1                     recv_msg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xF
   389  0001B1                     	ds	1
   390  0001B2                     send_msg@tlength:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x10
   394  0001B2                     	ds	1
   395  0001B3                     ??_recv_msg:
   396                           
   397                           ; 0 bytes @ 0x11
   398  0001B3                     	ds	1
   399  0001B4                     send_msg@slot:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x12
   403  0001B4                     	ds	1
   404  0001B5                     recv_msg@slot:
   405                           	opt stack 0
   406  0001B5                     send_msg@qmsg:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x13
   410  0001B5                     	ds	1
   411  0001B6                     recv_msg@tlength:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x14
   415  0001B6                     	ds	1
   416  0001B7                     ToMainLow_sendmsg@msgtype:
   417                           	opt stack 0
   418  0001B7                     FromMainLow_sendmsg@msgtype:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x15
   422  0001B7                     	ds	1
   423  0001B8                     recv_msg@qmsg:
   424                           	opt stack 0
   425  0001B8                     ToMainLow_sendmsg@data:
   426                           	opt stack 0
   427  0001B8                     FromMainLow_sendmsg@data:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x16
   431  0001B8                     	ds	2
   432  0001BA                     ToMainLow_sendmsg@length:
   433                           	opt stack 0
   434  0001BA                     FromMainLow_sendmsg@length:
   435                           	opt stack 0
   436  0001BA                     ToMainLow_recvmsg@msgtype:
   437                           	opt stack 0
   438  0001BA                     ToMainHigh_recvmsg@msgtype:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  0001BA                     	ds	1
   443  0001BB                     sendUART@data:
   444                           	opt stack 0
   445  0001BB                     uart_lthread@uptr:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x19
   449  0001BB                     	ds	1
   450  0001BC                     ToMainLow_recvmsg@data:
   451                           	opt stack 0
   452  0001BC                     ToMainHigh_recvmsg@data:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x1A
   456  0001BC                     	ds	1
   457  0001BD                     ??_sendUART:
   458  0001BD                     uart_lthread@msgtype:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1B
   462  0001BD                     	ds	1
   463  0001BE                     sendUART@length:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x1C
   467  0001BE                     	ds	1
   468  0001BF                     sendUART@retval:
   469                           	opt stack 0
   470  0001BF                     uart_lthread@length:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1D
   474  0001BF                     	ds	1
   475  0001C0                     timer1_lthread@tptr:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x1E
   479  0001C0                     	ds	1
   480  0001C1                     uart_lthread@msgbuffer:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x1F
   484  0001C1                     	ds	1
   485  0001C2                     timer1_lthread@msgtype:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x20
   489  0001C2                     	ds	1
   490  0001C3                     uart_lthread@status:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x21
   494  0001C3                     	ds	1
   495  0001C4                     timer1_lthread@length:
   496                           	opt stack 0
   497  0001C4                     uart_lthread@index:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x22
   501  0001C4                     	ds	2
   502  0001C6                     timer1_lthread@msgbuffer:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x24
   506  0001C6                     	ds	2
   507  0001C8                     ??_timer1_lthread:
   508                           
   509                           ; 0 bytes @ 0x26
   510  0001C8                     	ds	2
   511  0001CA                     timer1_lthread@len:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x28
   515  0001CA                     	ds	1
   516  0001CB                     timer1_lthread@success:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x29
   520  0001CB                     	ds	1
   521  0001CC                     timer1_lthread@even:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x2A
   525  0001CC                     	ds	2
   526  0001CE                     ??_main:
   527                           
   528                           ; 0 bytes @ 0x2C
   529  0001CE                     	ds	1
   530                           tblptru	equ	0xFF8
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           
   534                           	psect	cstackBANK0
   535  000097                     __pcstackBANK0:
   536                           	opt stack 0
   537  000097                     ?i2_in_high_int:
   538                           	opt stack 0
   539  000097                     handle_start@data_read:
   540                           	opt stack 0
   541  000097                     WriteTimer0@timer0:
   542                           	opt stack 0
   543  000097                     i2check_msg@qptr:
   544                           	opt stack 0
   545  000097                     i2memcpy@d1:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x0
   549  000097                     	ds	2
   550  000099                     ??i2_check_msg:
   551  000099                     ?i2_in_low_int:
   552                           	opt stack 0
   553  000099                     WriteTimer0@timer:
   554                           	opt stack 0
   555  000099                     i2memcpy@s1:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000099                     	ds	2
   560  00009B                     i2memcpy@n:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x4
   564  00009B                     	ds	2
   565  00009D                     i2memcpy@d:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x6
   569  00009D                     	ds	2
   570  00009F                     i2memcpy@s:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x8
   574  00009F                     	ds	2
   575  0000A1                     i2send_msg@qptr:
   576                           	opt stack 0
   577  0000A1                     i2recv_msg@qptr:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xA
   581  0000A1                     	ds	2
   582  0000A3                     i2send_msg@length:
   583                           	opt stack 0
   584  0000A3                     i2recv_msg@maxlength:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0xC
   588  0000A3                     	ds	1
   589  0000A4                     i2send_msg@msgtype:
   590                           	opt stack 0
   591  0000A4                     i2recv_msg@msgtype:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0xD
   595  0000A4                     	ds	1
   596  0000A5                     i2send_msg@data:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0xE
   600  0000A5                     	ds	1
   601  0000A6                     i2recv_msg@data:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0xF
   605  0000A6                     	ds	1
   606  0000A7                     ??i2_send_msg:
   607                           
   608                           ; 0 bytes @ 0x10
   609  0000A7                     	ds	1
   610  0000A8                     ??i2_recv_msg:
   611  0000A8                     i2send_msg@tlength:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x11
   615  0000A8                     	ds	2
   616  0000AA                     i2send_msg@slot:
   617                           	opt stack 0
   618  0000AA                     i2recv_msg@slot:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x13
   622  0000AA                     	ds	1
   623  0000AB                     i2send_msg@qmsg:
   624                           	opt stack 0
   625  0000AB                     i2recv_msg@tlength:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  0000AB                     	ds	2
   630  0000AD                     ToMainHigh_sendmsg@msgtype:
   631                           	opt stack 0
   632  0000AD                     i2recv_msg@qmsg:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x16
   636  0000AD                     	ds	1
   637  0000AE                     ToMainHigh_sendmsg@data:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x17
   641  0000AE                     	ds	1
   642  0000AF                     FromMainHigh_recvmsg@msgtype:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x18
   646  0000AF                     	ds	1
   647  0000B0                     ToMainHigh_sendmsg@length:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x19
   651  0000B0                     	ds	1
   652  0000B1                     ??_i2c_int_handler:
   653  0000B1                     FromMainHigh_recvmsg@data:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x1A
   657  0000B1                     	ds	2
   658  0000B3                     FromMainHigh_recvmsg@maxlength:
   659                           	opt stack 0
   660  0000B3                     i2c_int_handler@error_buf:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x1C
   664  0000B3                     	ds	1
   665  0000B4                     ??_timer0_int_handler:
   666                           
   667                           ; 0 bytes @ 0x1D
   668  0000B4                     	ds	1
   669  0000B5                     timer0_int_handler@length:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x1E
   673  0000B5                     	ds	1
   674  0000B6                     i2c_int_handler@data_written:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1F
   678  0000B6                     	ds	1
   679  0000B7                     i2c_int_handler@overrun_error:
   680                           	opt stack 0
   681  0000B7                     timer0_int_handler@msgtype:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x20
   685  0000B7                     	ds	1
   686  0000B8                     i2c_int_handler@i2c_data:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x21
   690  0000B8                     	ds	1
   691  0000B9                     i2c_int_handler@msg_to_send:
   692                           	opt stack 0
   693  0000B9                     timer0_int_handler@val:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x22
   697  0000B9                     	ds	1
   698  0000BA                     i2c_int_handler@msg_ready:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x23
   702  0000BA                     	ds	1
   703  0000BB                     i2c_int_handler@data_read:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x24
   707  0000BB                     	ds	1
   708  0000BC                     ??_InterruptHandlerHigh:
   709                           
   710                           ; 0 bytes @ 0x25
   711  0000BC                     	ds	14
   712  0000CA                     ??_init_queue:
   713  0000CA                     ??_send_msg:
   714  0000CA                     ??_check_msg:
   715  0000CA                     ??___lwmod:
   716  0000CA                     ToMainLow_recvmsg@maxlength:
   717                           	opt stack 0
   718  0000CA                     ToMainHigh_recvmsg@maxlength:
   719                           	opt stack 0
   720  0000CA                     start_i2c_slave_reply@length:
   721                           	opt stack 0
   722  0000CA                     i2c_configure_slave@addr:
   723                           	opt stack 0
   724  0000CA                     OpenTimer0@config:
   725                           	opt stack 0
   726  0000CA                     OpenTimer1@config1:
   727                           	opt stack 0
   728  0000CA                     Open1USART@config:
   729                           	opt stack 0
   730  0000CA                     Delay1KTCYx@unit:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x33
   734  0000CA                     	ds	1
   735  0000CB                     tblptru	equ	0xFF8
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           
   739                           ; 0 bytes @ 0x34
   740                           
   741                           	psect	cstackCOMRAM
   742  000001                     __pcstackCOMRAM:
   743                           	opt stack 0
   744  000001                     ?i1_ReadTimer1:
   745                           	opt stack 0
   746  000001                     Read1USART@data:
   747                           	opt stack 0
   748  000001                     WriteTimer1@timer1:
   749                           	opt stack 0
   750  000001                     i1memcpy@d1:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x0
   754  000001                     	ds	2
   755  000003                     WriteTimer1@timer:
   756                           	opt stack 0
   757  000003                     i1ReadTimer1@timer:
   758                           	opt stack 0
   759  000003                     i1memcpy@s1:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000003                     	ds	2
   764  000005                     i1memcpy@n:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x4
   768  000005                     	ds	2
   769  000007                     i1memcpy@d:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x6
   773  000007                     	ds	2
   774  000009                     i1memcpy@s:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x8
   778  000009                     	ds	2
   779  00000B                     i1send_msg@qptr:
   780                           	opt stack 0
   781  00000B                     i1recv_msg@qptr:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0xA
   785  00000B                     	ds	2
   786  00000D                     i1send_msg@length:
   787                           	opt stack 0
   788  00000D                     i1recv_msg@maxlength:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0xC
   792  00000D                     	ds	1
   793  00000E                     i1send_msg@msgtype:
   794                           	opt stack 0
   795  00000E                     i1recv_msg@msgtype:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0xD
   799  00000E                     	ds	1
   800  00000F                     i1send_msg@data:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0xE
   804  00000F                     	ds	1
   805  000010                     i1recv_msg@data:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0xF
   809  000010                     	ds	1
   810  000011                     ??i1_send_msg:
   811                           
   812                           ; 0 bytes @ 0x10
   813  000011                     	ds	1
   814  000012                     ??i1_recv_msg:
   815  000012                     i1send_msg@tlength:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	2
   820  000014                     i1send_msg@slot:
   821                           	opt stack 0
   822  000014                     i1recv_msg@slot:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x13
   826  000014                     	ds	1
   827  000015                     i1send_msg@qmsg:
   828                           	opt stack 0
   829  000015                     i1recv_msg@tlength:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x14
   833  000015                     	ds	2
   834  000017                     i1ToMainLow_sendmsg@msgtype:
   835                           	opt stack 0
   836  000017                     i1recv_msg@qmsg:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x16
   840  000017                     	ds	1
   841  000018                     i1ToMainLow_sendmsg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x17
   845  000018                     	ds	1
   846  000019                     FromMainLow_recvmsg@msgtype:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x18
   850  000019                     	ds	1
   851  00001A                     i1ToMainLow_sendmsg@length:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x19
   855  00001A                     	ds	1
   856  00001B                     ??_timer1_int_handler:
   857  00001B                     ??_uart_recv_int_handler:
   858  00001B                     FromMainLow_recvmsg@data:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x1A
   862  00001B                     	ds	1
   863  00001C                     timer1_int_handler@result:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x1B
   867  00001C                     	ds	1
   868  00001D                     FromMainLow_recvmsg@maxlength:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x1C
   872  00001D                     	ds	1
   873  00001E                     ??_uart_trans_int_handler:
   874                           
   875                           ; 0 bytes @ 0x1D
   876  00001E                     	ds	1
   877  00001F                     uart_trans_int_handler@data:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x1E
   881  00001F                     	ds	2
   882  000021                     uart_trans_int_handler@curIndex:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x20
   886  000021                     	ds	1
   887  000022                     uart_trans_int_handler@msgtype:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x21
   891  000022                     	ds	1
   892  000023                     uart_trans_int_handler@length:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x22
   896  000023                     	ds	1
   897  000024                     ??_InterruptHandlerLow:
   898                           
   899                           ; 0 bytes @ 0x23
   900  000024                     	ds	17
   901                           tblptru	equ	0xFF8
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 139 in file "src/main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  ic             28   45[BANK2 ] struct __i2c_comm
   915 ;;  t1thread_dat   12   31[BANK2 ] struct __timer1_thread_s
   916 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   917 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   918 ;;  uc              5   26[BANK2 ] struct __uart_comm
   919 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   920 ;;  length          1   44[BANK2 ] char 
   921 ;;  msgtype         1   43[BANK2 ] unsigned char 
   922 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   923 ;;  baud            1   14[BANK2 ] unsigned char 
   924 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   925 ;;  i               1    0        unsigned char 
   926 ;;  c               1    0        unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;		None               void
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Locals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Totals:         0       0       1      73       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;Total ram usage:       74 bytes
   941 ;; Hardware stack levels required when called:   15
   942 ;; This function calls:
   943 ;;		_Open1USART
   944 ;;		_OpenTimer0
   945 ;;		_OpenTimer1
   946 ;;		_ToMainHigh_recvmsg
   947 ;;		_ToMainLow_recvmsg
   948 ;;		_block_on_To_msgqueues
   949 ;;		_enable_interrupts
   950 ;;		_i2c_configure_slave
   951 ;;		_init_i2c
   952 ;;		_init_queues
   953 ;;		_init_timer1_lthread
   954 ;;		_init_uart_lthread
   955 ;;		_init_uart_recv
   956 ;;		_start_i2c_slave_reply
   957 ;;		_timer0_lthread
   958 ;;		_timer1_lthread
   959 ;;		_uart_lthread
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text0
   966  00071E                     __ptext0:
   967                           	opt stack 0
   968  00071E                     _main:
   969                           	opt stack 15
   970                           
   971                           ;main.c: 140: char c;
   972                           ;main.c: 141: signed char length;
   973                           ;main.c: 142: unsigned char msgtype;
   974                           ;main.c: 143: unsigned char last_reg_recvd;
   975                           ;main.c: 144: unsigned char baud, UARTConfig;
   976                           ;main.c: 145: uart_comm uc;
   977                           ;main.c: 146: i2c_comm ic;
   978                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   979                           ;main.c: 148: unsigned char i;
   980                           ;main.c: 149: uart_thread_struct uthread_data;
   981                           ;main.c: 150: timer1_thread_struct t1thread_data;
   982                           ;main.c: 151: timer0_thread_struct t0thread_data;
   983                           ;main.c: 163: OSCCON = 0xE0;
   984                           
   985                           ;incstack = 0
   986  00071E  0EE0               	movlw	224
   987  000720  6ED3               	movwf	4051,c	;volatile
   988                           
   989                           ;main.c: 164: OSCTUNEbits.PLLEN = 1;
   990  000722  8C9B               	bsf	3995,6,c	;volatile
   991                           
   992                           ;main.c: 173: init_uart_recv(&uc);
   993  000724  0102               	movlb	2	; () banked
   994  000726  0E02               	movlw	high main@uc
   995  000728  0101               	movlb	1	; () banked
   996  00072A  0101               	movlb	1	; () banked
   997  00072C  6FA3               	movwf	(init_uart_recv@uc+1)& (0+255),b
   998  00072E  0102               	movlb	2	; () banked
   999  000730  0E1A               	movlw	low main@uc
  1000  000732  0101               	movlb	1	; () banked
  1001  000734  0101               	movlb	1	; () banked
  1002  000736  6FA2               	movwf	init_uart_recv@uc& (0+255),b
  1003  000738  EC77  F00F         	call	_init_uart_recv	;wreg free
  1004                           
  1005                           ;main.c: 176: init_i2c(&ic);
  1006  00073C  0102               	movlb	2	; () banked
  1007  00073E  0E02               	movlw	high main@ic
  1008  000740  0101               	movlb	1	; () banked
  1009  000742  0101               	movlb	1	; () banked
  1010  000744  6FA3               	movwf	(init_i2c@ic+1)& (0+255),b
  1011  000746  0102               	movlb	2	; () banked
  1012  000748  0E2D               	movlw	low main@ic
  1013  00074A  0101               	movlb	1	; () banked
  1014  00074C  0101               	movlb	1	; () banked
  1015  00074E  6FA2               	movwf	init_i2c@ic& (0+255),b
  1016  000750  EC6A  F00C         	call	_init_i2c	;wreg free
  1017                           
  1018                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
  1019  000754  0102               	movlb	2	; () banked
  1020  000756  0E02               	movlw	high main@t1thread_data
  1021  000758  0101               	movlb	1	; () banked
  1022  00075A  0101               	movlb	1	; () banked
  1023  00075C  6FA3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1024  00075E  0102               	movlb	2	; () banked
  1025  000760  0E1F               	movlw	low main@t1thread_data
  1026  000762  0101               	movlb	1	; () banked
  1027  000764  0101               	movlb	1	; () banked
  1028  000766  6FA2               	movwf	init_timer1_lthread@tptr& (0+255),b
  1029  000768  EC57  F00E         	call	_init_timer1_lthread	;wreg free
  1030                           
  1031                           ;main.c: 182: init_uart_lthread(&uthread_data);
  1032  00076C  0102               	movlb	2	; () banked
  1033  00076E  0E02               	movlw	high main@uthread_data
  1034  000770  0101               	movlb	1	; () banked
  1035  000772  0101               	movlb	1	; () banked
  1036  000774  6FA3               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1037  000776  0102               	movlb	2	; () banked
  1038  000778  0E10               	movlw	low main@uthread_data
  1039  00077A  0101               	movlb	1	; () banked
  1040  00077C  0101               	movlb	1	; () banked
  1041  00077E  6FA2               	movwf	init_uart_lthread@uptr& (0+255),b
  1042  000780  ECE6  F00F         	call	_init_uart_lthread	;wreg free
  1043                           
  1044                           ;main.c: 186: init_queues();
  1045  000784  ECFA  F00B         	call	_init_queues	;wreg free
  1046                           
  1047                           ;main.c: 189: TRISB = 0x0;
  1048  000788  0E00               	movlw	0
  1049  00078A  6E93               	movwf	3987,c	;volatile
  1050                           
  1051                           ;main.c: 190: LATB = 0x0;
  1052  00078C  0E00               	movlw	0
  1053  00078E  6E8A               	movwf	3978,c	;volatile
  1054                           
  1055                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1056  000790  0E96               	movlw	150
  1057  000792  EC15  F00F         	call	_OpenTimer0
  1058                           
  1059                           ;main.c: 196: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1060  000796  0101               	movlb	1	; () banked
  1061  000798  6FCE               	movwf	??_main& (0+255),b
  1062  00079A  0E00               	movlw	0
  1063  00079C  0100               	movlb	0	; () banked
  1064  00079E  0100               	movlb	0	; () banked
  1065  0007A0  6FCA               	movwf	OpenTimer1@config1& (0+255),b
  1066  0007A2  0101               	movlb	1	; () banked
  1067  0007A4  51CE               	movf	??_main& (0+255),w,b
  1068  0007A6  0E9B               	movlw	155
  1069  0007A8  EC17  F00E         	call	_OpenTimer1
  1070                           
  1071                           ;main.c: 203: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 & 0b11101111;
  1072  0007AC  0101               	movlb	1	; () banked
  1073  0007AE  6FCE               	movwf	??_main& (0+255),b
  1074  0007B0  0EEC               	movlw	236
  1075  0007B2  0102               	movlb	2	; () banked
  1076  0007B4  0102               	movlb	2	; () banked
  1077  0007B6  6F0F               	movwf	main@UARTConfig& (0+255),b
  1078  0007B8  0101               	movlb	1	; () banked
  1079  0007BA  51CE               	movf	??_main& (0+255),w,b
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;main.c: 204: baud = 77;
  1083  0007BC  0101               	movlb	1	; () banked
  1084  0007BE  6FCE               	movwf	??_main& (0+255),b
  1085  0007C0  0E4D               	movlw	77
  1086  0007C2  0102               	movlb	2	; () banked
  1087  0007C4  0102               	movlb	2	; () banked
  1088  0007C6  6F0E               	movwf	main@baud& (0+255),b
  1089  0007C8  0101               	movlb	1	; () banked
  1090  0007CA  51CE               	movf	??_main& (0+255),w,b
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 205: Open1USART(UARTConfig, baud);
  1094  0007CC  0102               	movlb	2	; () banked
  1095  0007CE  0101               	movlb	1	; () banked
  1096  0007D0  C20E  F1A2         	movff	main@baud,Open1USART@spbrg
  1097  0007D4  0101               	movlb	1	; () banked
  1098  0007D6  0101               	movlb	1	; () banked
  1099  0007D8  6BA3               	clrf	(Open1USART@spbrg+1)& (0+255),b
  1100  0007DA  0102               	movlb	2	; () banked
  1101  0007DC  0102               	movlb	2	; () banked
  1102  0007DE  510F               	movf	main@UARTConfig& (0+255),w,b
  1103  0007E0  EC7D  F00B         	call	_Open1USART
  1104                           
  1105                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1106  0007E4  909F               	bcf	3999,0,c	;volatile
  1107                           
  1108                           ;main.c: 217: IPR1bits.RCIP = 0;
  1109  0007E6  9A9F               	bcf	3999,5,c	;volatile
  1110                           
  1111                           ;main.c: 219: IPR1bits.TXIP = 0;
  1112  0007E8  989F               	bcf	3999,4,c	;volatile
  1113                           
  1114                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1115  0007EA  869F               	bsf	3999,3,c	;volatile
  1116                           
  1117                           ;main.c: 230: i2c_configure_slave(0x9E);
  1118  0007EC  0E9E               	movlw	158
  1119  0007EE  EC2A  F00F         	call	_i2c_configure_slave
  1120                           
  1121                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1122  0007F2  869D               	bsf	3997,3,c	;volatile
  1123                           
  1124                           ;main.c: 249: enable_interrupts();
  1125  0007F4  ECDF  F00F         	call	_enable_interrupts	;wreg free
  1126  0007F8                     l3448:
  1127                           
  1128                           ;main.c: 273: block_on_To_msgqueues();
  1129  0007F8  ECB2  F00A         	call	_block_on_To_msgqueues	;wreg free
  1130                           
  1131                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1132  0007FC  0102               	movlb	2	; () banked
  1133  0007FE  0E02               	movlw	high main@msgtype
  1134  000800  0101               	movlb	1	; () banked
  1135  000802  0101               	movlb	1	; () banked
  1136  000804  6FBB               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1137  000806  0102               	movlb	2	; () banked
  1138  000808  0E2B               	movlw	low main@msgtype
  1139  00080A  0101               	movlb	1	; () banked
  1140  00080C  0101               	movlb	1	; () banked
  1141  00080E  6FBA               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1142  000810  0102               	movlb	2	; () banked
  1143  000812  0E02               	movlw	high main@msgbuffer
  1144  000814  0101               	movlb	1	; () banked
  1145  000816  0101               	movlb	1	; () banked
  1146  000818  6FBD               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1147  00081A  0102               	movlb	2	; () banked
  1148  00081C  0E00               	movlw	low main@msgbuffer
  1149  00081E  0101               	movlb	1	; () banked
  1150  000820  0101               	movlb	1	; () banked
  1151  000822  6FBC               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1152  000824  0E0A               	movlw	10
  1153  000826  ECD5  F00D         	call	_ToMainHigh_recvmsg
  1154  00082A  0102               	movlb	2	; () banked
  1155  00082C  0102               	movlb	2	; () banked
  1156  00082E  6F2C               	movwf	main@length& (0+255),b
  1157                           
  1158                           ; BSR set to: 2
  1159                           ;main.c: 281: if (length < 0) {
  1160  000830  0102               	movlb	2	; () banked
  1161  000832  0102               	movlb	2	; () banked
  1162  000834  BF2C               	btfsc	main@length& (0+255),7,b
  1163  000836  D08D               	goto	l3474
  1164  000838  D07D               	goto	l3472
  1165  00083A                     l3456:
  1166                           
  1167                           ; BSR set to: 2
  1168                           ;main.c: 289: {
  1169                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1170  00083A  0102               	movlb	2	; () banked
  1171  00083C  0E02               	movlw	high main@t0thread_data
  1172  00083E  0101               	movlb	1	; () banked
  1173  000840  0101               	movlb	1	; () banked
  1174  000842  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1175  000844  0102               	movlb	2	; () banked
  1176  000846  0E0B               	movlw	low main@t0thread_data
  1177  000848  0101               	movlb	1	; () banked
  1178  00084A  0101               	movlb	1	; () banked
  1179  00084C  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1180  00084E  0102               	movlb	2	; () banked
  1181  000850  0101               	movlb	1	; () banked
  1182  000852  C22B  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1183  000856  0101               	movlb	1	; () banked
  1184  000858  0101               	movlb	1	; () banked
  1185  00085A  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1186  00085C  0102               	movlb	2	; () banked
  1187  00085E  0102               	movlb	2	; () banked
  1188  000860  512C               	movf	main@length& (0+255),w,b
  1189  000862  0101               	movlb	1	; () banked
  1190  000864  0101               	movlb	1	; () banked
  1191  000866  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1192  000868  0101               	movlb	1	; () banked
  1193  00086A  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1194  00086C  0101               	movlb	1	; () banked
  1195  00086E  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1196  000870  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1197  000872  0102               	movlb	2	; () banked
  1198  000874  0E02               	movlw	high main@msgbuffer
  1199  000876  0101               	movlb	1	; () banked
  1200  000878  0101               	movlb	1	; () banked
  1201  00087A  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1202  00087C  0102               	movlb	2	; () banked
  1203  00087E  0E00               	movlw	low main@msgbuffer
  1204  000880  0101               	movlb	1	; () banked
  1205  000882  0101               	movlb	1	; () banked
  1206  000884  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1207  000886  ECA9  F00F         	call	_timer0_lthread	;wreg free
  1208                           
  1209                           ;main.c: 291: break;
  1210  00088A  D063               	goto	l3474
  1211  00088C                     l109:
  1212                           
  1213                           ;main.c: 294: case 41:
  1214                           ;main.c: 295: {
  1215                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1216  00088C  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1217                           
  1218                           ;main.c: 299: break;
  1219  000890  D060               	goto	l3474
  1220  000892                     l3458:
  1221                           
  1222                           ;main.c: 312: {
  1223                           ;main.c: 313: length = 2;
  1224  000892  0101               	movlb	1	; () banked
  1225  000894  6FCE               	movwf	??_main& (0+255),b
  1226  000896  0E02               	movlw	2
  1227  000898  0102               	movlb	2	; () banked
  1228  00089A  0102               	movlb	2	; () banked
  1229  00089C  6F2C               	movwf	main@length& (0+255),b
  1230  00089E  0101               	movlb	1	; () banked
  1231  0008A0  51CE               	movf	??_main& (0+255),w,b
  1232                           
  1233                           ;main.c: 314: msgbuffer[0] = 0x55;
  1234  0008A2  0101               	movlb	1	; () banked
  1235  0008A4  6FCE               	movwf	??_main& (0+255),b
  1236  0008A6  0E55               	movlw	85
  1237  0008A8  0102               	movlb	2	; () banked
  1238  0008AA  0102               	movlb	2	; () banked
  1239  0008AC  6F00               	movwf	main@msgbuffer& (0+255),b
  1240  0008AE  0101               	movlb	1	; () banked
  1241  0008B0  51CE               	movf	??_main& (0+255),w,b
  1242                           
  1243                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1244  0008B2  0101               	movlb	1	; () banked
  1245  0008B4  6FCE               	movwf	??_main& (0+255),b
  1246  0008B6  0EAA               	movlw	170
  1247  0008B8  0102               	movlb	2	; () banked
  1248  0008BA  0102               	movlb	2	; () banked
  1249  0008BC  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1250  0008BE  D00C               	goto	L1
  1251  0008C0                     l3460:
  1252                           
  1253                           ;main.c: 319: {
  1254                           ;main.c: 320: length = 1;
  1255  0008C0  0101               	movlb	1	; () banked
  1256  0008C2  6FCE               	movwf	??_main& (0+255),b
  1257  0008C4  0E01               	movlw	1
  1258  0008C6  0102               	movlb	2	; () banked
  1259  0008C8  0102               	movlb	2	; () banked
  1260  0008CA  6F2C               	movwf	main@length& (0+255),b
  1261  0008CC  0101               	movlb	1	; () banked
  1262  0008CE  51CE               	movf	??_main& (0+255),w,b
  1263                           
  1264                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1265  0008D0  0101               	movlb	1	; () banked
  1266  0008D2  6FCE               	movwf	??_main& (0+255),b
  1267  0008D4  0E3A               	movlw	58
  1268  0008D6  D00E               	goto	L2
  1269  0008D8                     L1:
  1270  0008D8  0101               	movlb	1	; () banked
  1271  0008DA  51CE               	movf	??_main& (0+255),w,b
  1272                           
  1273                           ;main.c: 322: break;
  1274  0008DC  D01B               	goto	l3468
  1275  0008DE                     l3462:
  1276                           
  1277                           ;main.c: 325: {
  1278                           ;main.c: 326: length = 1;
  1279  0008DE  0101               	movlb	1	; () banked
  1280  0008E0  6FCE               	movwf	??_main& (0+255),b
  1281  0008E2  0E01               	movlw	1
  1282  0008E4  0102               	movlb	2	; () banked
  1283  0008E6  0102               	movlb	2	; () banked
  1284  0008E8  6F2C               	movwf	main@length& (0+255),b
  1285  0008EA  0101               	movlb	1	; () banked
  1286  0008EC  51CE               	movf	??_main& (0+255),w,b
  1287                           
  1288                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1289  0008EE  0101               	movlb	1	; () banked
  1290  0008F0  6FCE               	movwf	??_main& (0+255),b
  1291  0008F2  0EA3               	movlw	163
  1292  0008F4                     L2:
  1293  0008F4  0102               	movlb	2	; () banked
  1294  0008F6  0102               	movlb	2	; () banked
  1295  0008F8  6F00               	movwf	main@msgbuffer& (0+255),b
  1296  0008FA  D7EE               	goto	L1
  1297  0008FC                     l3466:
  1298  0008FC  0102               	movlb	2	; () banked
  1299  0008FE  0102               	movlb	2	; () banked
  1300  000900  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1301                           
  1302                           ; Switch size 1, requested type "space"
  1303                           ; Number of cases is 3, Range of values is 168 to 170
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           10     6 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308  000902  0AA8               	xorlw	168	; case 168
  1309  000904  B4D8               	btfsc	status,2,c
  1310  000906  D7DC               	goto	l3460
  1311  000908  0A01               	xorlw	1	; case 169
  1312  00090A  B4D8               	btfsc	status,2,c
  1313  00090C  D7E8               	goto	l3462
  1314  00090E  0A03               	xorlw	3	; case 170
  1315  000910  B4D8               	btfsc	status,2,c
  1316  000912  D7BF               	goto	l3458
  1317  000914                     l3468:
  1318                           
  1319                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1320  000914  0102               	movlb	2	; () banked
  1321  000916  0E02               	movlw	high main@msgbuffer
  1322  000918  0101               	movlb	1	; () banked
  1323  00091A  0101               	movlb	1	; () banked
  1324  00091C  6FA3               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1325  00091E  0102               	movlb	2	; () banked
  1326  000920  0E00               	movlw	low main@msgbuffer
  1327  000922  0101               	movlb	1	; () banked
  1328  000924  0101               	movlb	1	; () banked
  1329  000926  6FA2               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1330  000928  0102               	movlb	2	; () banked
  1331  00092A  0102               	movlb	2	; () banked
  1332  00092C  512C               	movf	main@length& (0+255),w,b
  1333  00092E  ECFB  F006         	call	_start_i2c_slave_reply
  1334                           
  1335                           ;main.c: 332: break;
  1336  000932  D00F               	goto	l3474
  1337  000934                     l3472:
  1338  000934  0102               	movlb	2	; () banked
  1339  000936  0102               	movlb	2	; () banked
  1340  000938  512B               	movf	main@msgtype& (0+255),w,b
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 4, Range of values is 10 to 42
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           13     7 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  00093A  0A0A               	xorlw	10	; case 10
  1349  00093C  B4D8               	btfsc	status,2,c
  1350  00093E  D77D               	goto	l3456
  1351  000940  0A22               	xorlw	34	; case 40
  1352  000942  B4D8               	btfsc	status,2,c
  1353  000944  D7A3               	goto	l109
  1354  000946  0A01               	xorlw	1	; case 41
  1355  000948  B4D8               	btfsc	status,2,c
  1356  00094A  D7A0               	goto	l109
  1357  00094C  0A03               	xorlw	3	; case 42
  1358  00094E  B4D8               	btfsc	status,2,c
  1359  000950  D7D5               	goto	l3466
  1360  000952                     l3474:
  1361                           
  1362                           ;main.c: 340: }
  1363                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1364  000952  0102               	movlb	2	; () banked
  1365  000954  0E02               	movlw	high main@msgtype
  1366  000956  0101               	movlb	1	; () banked
  1367  000958  0101               	movlb	1	; () banked
  1368  00095A  6FBB               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1369  00095C  0102               	movlb	2	; () banked
  1370  00095E  0E2B               	movlw	low main@msgtype
  1371  000960  0101               	movlb	1	; () banked
  1372  000962  0101               	movlb	1	; () banked
  1373  000964  6FBA               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1374  000966  0102               	movlb	2	; () banked
  1375  000968  0E02               	movlw	high main@msgbuffer
  1376  00096A  0101               	movlb	1	; () banked
  1377  00096C  0101               	movlb	1	; () banked
  1378  00096E  6FBD               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1379  000970  0102               	movlb	2	; () banked
  1380  000972  0E00               	movlw	low main@msgbuffer
  1381  000974  0101               	movlb	1	; () banked
  1382  000976  0101               	movlb	1	; () banked
  1383  000978  6FBC               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1384  00097A  0E0A               	movlw	10
  1385  00097C  ECB4  F00D         	call	_ToMainLow_recvmsg
  1386  000980  0102               	movlb	2	; () banked
  1387  000982  0102               	movlb	2	; () banked
  1388  000984  6F2C               	movwf	main@length& (0+255),b
  1389                           
  1390                           ; BSR set to: 2
  1391                           ;main.c: 344: if (length < 0) {
  1392  000986  0102               	movlb	2	; () banked
  1393  000988  0102               	movlb	2	; () banked
  1394  00098A  BF2C               	btfsc	main@length& (0+255),7,b
  1395  00098C  D735               	goto	l3448
  1396  00098E  D052               	goto	l3486
  1397  000990                     l3480:
  1398                           
  1399                           ; BSR set to: 2
  1400                           ;main.c: 352: {
  1401                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1402  000990  0102               	movlb	2	; () banked
  1403  000992  0E02               	movlw	high main@t1thread_data
  1404  000994  0101               	movlb	1	; () banked
  1405  000996  0101               	movlb	1	; () banked
  1406  000998  6FC1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1407  00099A  0102               	movlb	2	; () banked
  1408  00099C  0E1F               	movlw	low main@t1thread_data
  1409  00099E  0101               	movlb	1	; () banked
  1410  0009A0  0101               	movlb	1	; () banked
  1411  0009A2  6FC0               	movwf	timer1_lthread@tptr& (0+255),b
  1412  0009A4  0102               	movlb	2	; () banked
  1413  0009A6  0101               	movlb	1	; () banked
  1414  0009A8  C22B  F1C2         	movff	main@msgtype,timer1_lthread@msgtype
  1415  0009AC  0101               	movlb	1	; () banked
  1416  0009AE  0101               	movlb	1	; () banked
  1417  0009B0  6BC3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1418  0009B2  0102               	movlb	2	; () banked
  1419  0009B4  0102               	movlb	2	; () banked
  1420  0009B6  512C               	movf	main@length& (0+255),w,b
  1421  0009B8  0101               	movlb	1	; () banked
  1422  0009BA  0101               	movlb	1	; () banked
  1423  0009BC  6FC4               	movwf	timer1_lthread@length& (0+255),b
  1424  0009BE  0101               	movlb	1	; () banked
  1425  0009C0  6BC5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1426  0009C2  0101               	movlb	1	; () banked
  1427  0009C4  BFC4               	btfsc	timer1_lthread@length& (0+255),7,b
  1428  0009C6  07C5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1429  0009C8  0102               	movlb	2	; () banked
  1430  0009CA  0E02               	movlw	high main@msgbuffer
  1431  0009CC  0101               	movlb	1	; () banked
  1432  0009CE  0101               	movlb	1	; () banked
  1433  0009D0  6FC7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1434  0009D2  0102               	movlb	2	; () banked
  1435  0009D4  0E00               	movlw	low main@msgbuffer
  1436  0009D6  0101               	movlb	1	; () banked
  1437  0009D8  0101               	movlb	1	; () banked
  1438  0009DA  6FC6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1439  0009DC  EC2A  F005         	call	_timer1_lthread	;wreg free
  1440                           
  1441                           ;main.c: 354: break;
  1442  0009E0  D70B               	goto	l3448
  1443  0009E2                     l3482:
  1444                           
  1445                           ;main.c: 357: case 31:
  1446                           ;main.c: 358: case 32:
  1447                           ;main.c: 359: {
  1448                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1449  0009E2  0102               	movlb	2	; () banked
  1450  0009E4  0E02               	movlw	high main@uthread_data
  1451  0009E6  0101               	movlb	1	; () banked
  1452  0009E8  0101               	movlb	1	; () banked
  1453  0009EA  6FBC               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1454  0009EC  0102               	movlb	2	; () banked
  1455  0009EE  0E10               	movlw	low main@uthread_data
  1456  0009F0  0101               	movlb	1	; () banked
  1457  0009F2  0101               	movlb	1	; () banked
  1458  0009F4  6FBB               	movwf	uart_lthread@uptr& (0+255),b
  1459  0009F6  0102               	movlb	2	; () banked
  1460  0009F8  0101               	movlb	1	; () banked
  1461  0009FA  C22B  F1BD         	movff	main@msgtype,uart_lthread@msgtype
  1462  0009FE  0101               	movlb	1	; () banked
  1463  000A00  0101               	movlb	1	; () banked
  1464  000A02  6BBE               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1465  000A04  0102               	movlb	2	; () banked
  1466  000A06  0102               	movlb	2	; () banked
  1467  000A08  512C               	movf	main@length& (0+255),w,b
  1468  000A0A  0101               	movlb	1	; () banked
  1469  000A0C  0101               	movlb	1	; () banked
  1470  000A0E  6FBF               	movwf	uart_lthread@length& (0+255),b
  1471  000A10  0101               	movlb	1	; () banked
  1472  000A12  6BC0               	clrf	(uart_lthread@length+1)& (0+255),b
  1473  000A14  0101               	movlb	1	; () banked
  1474  000A16  BFBF               	btfsc	uart_lthread@length& (0+255),7,b
  1475  000A18  07C0               	decf	(uart_lthread@length+1)& (0+255),f,b
  1476  000A1A  0102               	movlb	2	; () banked
  1477  000A1C  0E02               	movlw	high main@msgbuffer
  1478  000A1E  0101               	movlb	1	; () banked
  1479  000A20  0101               	movlb	1	; () banked
  1480  000A22  6FC2               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1481  000A24  0102               	movlb	2	; () banked
  1482  000A26  0E00               	movlw	low main@msgbuffer
  1483  000A28  0101               	movlb	1	; () banked
  1484  000A2A  0101               	movlb	1	; () banked
  1485  000A2C  6FC1               	movwf	uart_lthread@msgbuffer& (0+255),b
  1486  000A2E  EC86  F008         	call	_uart_lthread	;wreg free
  1487                           
  1488                           ;main.c: 361: break;
  1489  000A32  D6E2               	goto	l3448
  1490  000A34                     l3486:
  1491  000A34  0102               	movlb	2	; () banked
  1492  000A36  0102               	movlb	2	; () banked
  1493  000A38  512B               	movf	main@msgtype& (0+255),w,b
  1494                           
  1495                           ; Switch size 1, requested type "space"
  1496                           ; Number of cases is 4, Range of values is 11 to 32
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte           13     7 (average)
  1500                           ;	Chosen strategy is simple_byte
  1501  000A3A  0A0B               	xorlw	11	; case 11
  1502  000A3C  B4D8               	btfsc	status,2,c
  1503  000A3E  D7A8               	goto	l3480
  1504  000A40  0A15               	xorlw	21	; case 30
  1505  000A42  B4D8               	btfsc	status,2,c
  1506  000A44  D7CE               	goto	l3482
  1507  000A46  0A01               	xorlw	1	; case 31
  1508  000A48  B4D8               	btfsc	status,2,c
  1509  000A4A  D7CB               	goto	l3482
  1510  000A4C  0A3F               	xorlw	63	; case 32
  1511  000A4E  B4D8               	btfsc	status,2,c
  1512  000A50  D7C8               	goto	l3482
  1513  000A52  D6D2               	goto	l3448
  1514  000A54                     __end_of_main:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _uart_lthread *****************
  1522 ;; Defined at:
  1523 ;;		line 12 in file "src/uart_thread.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  uptr            2   25[BANK1 ] PTR struct __uart_thread
  1526 ;;		 -> main@uthread_data(10), 
  1527 ;;  msgtype         2   27[BANK1 ] int 
  1528 ;;  length          2   29[BANK1 ] int 
  1529 ;;  msgbuffer       2   31[BANK1 ] PTR unsigned char 
  1530 ;;		 -> main@msgbuffer(11), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  index           2   34[BANK1 ] int 
  1533 ;;  status          1   33[BANK1 ] char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2   25[BANK1 ] int 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:       11 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:   13
  1550 ;; This function calls:
  1551 ;;		_FromMainLow_sendmsg
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text1
  1558  00110C                     __ptext1:
  1559                           	opt stack 0
  1560  00110C                     _uart_lthread:
  1561                           	opt stack 16
  1562                           
  1563                           ;uart_thread.c: 13: if (msgtype == 30) {
  1564                           
  1565                           ; BSR set to: 2
  1566                           ;incstack = 0
  1567  00110C  0101               	movlb	1	; () banked
  1568  00110E  0101               	movlb	1	; () banked
  1569  001110  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1570  001112  0A1E               	xorlw	30
  1571  001114  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1572  001116  B4D8               	btfsc	status,2,c
  1573  001118  0012               	return	
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;uart_thread.c: 16: else if(msgtype == 31){
  1577                           
  1578                           ; BSR set to: 1
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;uart_thread.c: 15: }
  1582  00111A  0101               	movlb	1	; () banked
  1583  00111C  0101               	movlb	1	; () banked
  1584  00111E  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1585  001120  0A1F               	xorlw	31
  1586  001122  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1587  001124  A4D8               	btfss	status,2,c
  1588  001126  D04F               	goto	l3700
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;uart_thread.c: 18: int index = 0;
  1592  001128  0E00               	movlw	0
  1593  00112A  0101               	movlb	1	; () banked
  1594  00112C  0101               	movlb	1	; () banked
  1595  00112E  6FC5               	movwf	(uart_lthread@index+1)& (0+255),b
  1596  001130  0E00               	movlw	0
  1597  001132  0101               	movlb	1	; () banked
  1598  001134  6FC4               	movwf	uart_lthread@index& (0+255),b
  1599                           
  1600                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1601  001136  0E00               	movlw	0
  1602  001138  0101               	movlb	1	; () banked
  1603  00113A  0101               	movlb	1	; () banked
  1604  00113C  6FC5               	movwf	(uart_lthread@index+1)& (0+255),b
  1605  00113E  0E00               	movlw	0
  1606  001140  0101               	movlb	1	; () banked
  1607  001142  6FC4               	movwf	uart_lthread@index& (0+255),b
  1608  001144                     
  1609                           ; BSR set to: 1
  1610  001144  0101               	movlb	1	; () banked
  1611  001146  0101               	movlb	1	; () banked
  1612  001148  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1613  00114A  0A80               	xorlw	128
  1614  00114C  0F80               	addlw	-128
  1615  00114E  0E0A               	movlw	10
  1616  001150  B4D8               	btfsc	status,2,c
  1617  001152  5DC4               	subwf	uart_lthread@index& (0+255),w,b
  1618  001154  B0D8               	btfsc	status,0,c
  1619  001156  D023               	goto	l3696
  1620                           
  1621                           ; BSR set to: 1
  1622                           
  1623                           ; BSR set to: 1
  1624                           
  1625                           ; BSR set to: 1
  1626  001158  0101               	movlb	1	; () banked
  1627  00115A  0101               	movlb	1	; () banked
  1628  00115C  51C4               	movf	uart_lthread@index& (0+255),w,b
  1629  00115E  0101               	movlb	1	; () banked
  1630  001160  0101               	movlb	1	; () banked
  1631  001162  25C1               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1632  001164  6ED9               	movwf	fsr2l,c
  1633  001166  0101               	movlb	1	; () banked
  1634  001168  0101               	movlb	1	; () banked
  1635  00116A  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1636  00116C  0101               	movlb	1	; () banked
  1637  00116E  0101               	movlb	1	; () banked
  1638  001170  21C2               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1639  001172  6EDA               	movwf	fsr2h,c
  1640  001174  0101               	movlb	1	; () banked
  1641  001176  0101               	movlb	1	; () banked
  1642  001178  51C4               	movf	uart_lthread@index& (0+255),w,b
  1643  00117A  0101               	movlb	1	; () banked
  1644  00117C  0101               	movlb	1	; () banked
  1645  00117E  25BB               	addwf	uart_lthread@uptr& (0+255),w,b
  1646  001180  6EE1               	movwf	fsr1l,c
  1647  001182  0101               	movlb	1	; () banked
  1648  001184  0101               	movlb	1	; () banked
  1649  001186  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1650  001188  0101               	movlb	1	; () banked
  1651  00118A  0101               	movlb	1	; () banked
  1652  00118C  21BC               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1653  00118E  6EE2               	movwf	fsr1h,c
  1654  001190  CFDF FFE7          	movff	indf2,indf1
  1655                           
  1656                           ; BSR set to: 1
  1657  001194  0101               	movlb	1	; () banked
  1658  001196  0101               	movlb	1	; () banked
  1659  001198  4BC4               	infsnz	uart_lthread@index& (0+255),f,b
  1660  00119A  2BC5               	incf	(uart_lthread@index+1)& (0+255),f,b
  1661  00119C  D7D3               	goto	L3
  1662  00119E                     l3696:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1666  00119E  C1BD  F1B7         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1667  0011A2  0101               	movlb	1	; () banked
  1668  0011A4  0101               	movlb	1	; () banked
  1669  0011A6  C1BC  F1B9         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1670  0011AA  0101               	movlb	1	; () banked
  1671  0011AC  0101               	movlb	1	; () banked
  1672  0011AE  C1BB  F1B8         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1673  0011B2  0101               	movlb	1	; () banked
  1674  0011B4  0101               	movlb	1	; () banked
  1675  0011B6  51BF               	movf	uart_lthread@length& (0+255),w,b
  1676  0011B8  EC76  F00E         	call	_FromMainLow_sendmsg
  1677  0011BC  0101               	movlb	1	; () banked
  1678  0011BE  0101               	movlb	1	; () banked
  1679  0011C0  6FC3               	movwf	uart_lthread@status& (0+255),b
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;uart_thread.c: 25: }
  1683                           ;uart_thread.c: 27: PIE1bits.TXIE = 1;
  1684                           
  1685                           ; BSR set to: 1
  1686  0011C2  889D               	bsf	3997,4,c	;volatile
  1687                           
  1688                           ;uart_thread.c: 28: }
  1689  0011C4  0012               	return	
  1690  0011C6                     l3700:
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;uart_thread.c: 29: else if(msgtype == 32){
  1694  0011C6  0101               	movlb	1	; () banked
  1695  0011C8  0101               	movlb	1	; () banked
  1696  0011CA  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1697  0011CC  0A20               	xorlw	32
  1698  0011CE  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1699  0011D0  A4D8               	btfss	status,2,c
  1700  0011D2  0012               	return	
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;uart_thread.c: 33: msgbuffer[length] = '\0';
  1704  0011D4  0101               	movlb	1	; () banked
  1705  0011D6  0101               	movlb	1	; () banked
  1706  0011D8  51BF               	movf	uart_lthread@length& (0+255),w,b
  1707  0011DA  0101               	movlb	1	; () banked
  1708  0011DC  0101               	movlb	1	; () banked
  1709  0011DE  25C1               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1710  0011E0  6ED9               	movwf	fsr2l,c
  1711  0011E2  0101               	movlb	1	; () banked
  1712  0011E4  0101               	movlb	1	; () banked
  1713  0011E6  51C0               	movf	(uart_lthread@length+1)& (0+255),w,b
  1714  0011E8  0101               	movlb	1	; () banked
  1715  0011EA  0101               	movlb	1	; () banked
  1716  0011EC  21C2               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1717  0011EE  6EDA               	movwf	fsr2h,c
  1718  0011F0  0E00               	movlw	0
  1719  0011F2  6EDF               	movwf	indf2,c
  1720  0011F4  0012               	return	
  1721  0011F6                     __end_of_uart_lthread:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           indf1	equ	0xFE7
  1727                           fsr1h	equ	0xFE2
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _FromMainLow_sendmsg *****************
  1735 ;; Defined at:
  1736 ;;		line 150 in file "src/messages.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  length          1    wreg     unsigned char 
  1739 ;;  msgtype         1   21[BANK1 ] unsigned char 
  1740 ;;  data            2   22[BANK1 ] PTR void 
  1741 ;;		 -> main@uthread_data(10), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  length          1   24[BANK1 ] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      char 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1753 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;Total ram usage:        4 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:   12
  1760 ;; This function calls:
  1761 ;;		_send_msg
  1762 ;; This function is called by:
  1763 ;;		_uart_lthread
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text2
  1768  001CEC                     __ptext2:
  1769                           	opt stack 0
  1770  001CEC                     _FromMainLow_sendmsg:
  1771                           	opt stack 16
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;incstack = 0
  1775                           ;FromMainLow_sendmsg@length stored from wreg
  1776  001CEC  CFE8 F1BA          	movff	wreg,FromMainLow_sendmsg@length
  1777                           
  1778                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1779  001CF0  0101               	movlb	1	; () banked
  1780  001CF2  0E01               	movlw	high _FromMainLow_MQ
  1781  001CF4  0101               	movlb	1	; () banked
  1782  001CF6  0101               	movlb	1	; () banked
  1783  001CF8  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  1784  001CFA  0101               	movlb	1	; () banked
  1785  001CFC  0E36               	movlw	low _FromMainLow_MQ
  1786  001CFE  0101               	movlb	1	; () banked
  1787  001D00  0101               	movlb	1	; () banked
  1788  001D02  6FAC               	movwf	send_msg@qptr& (0+255),b
  1789  001D04  C1BA  F1AE         	movff	FromMainLow_sendmsg@length,send_msg@length
  1790  001D08  C1B7  F1AF         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1791  001D0C  0101               	movlb	1	; () banked
  1792  001D0E  0101               	movlb	1	; () banked
  1793  001D10  C1B9  F1B1         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1794  001D14  0101               	movlb	1	; () banked
  1795  001D16  0101               	movlb	1	; () banked
  1796  001D18  C1B8  F1B0         	movff	FromMainLow_sendmsg@data,send_msg@data
  1797  001D1C  EC82  F007         	call	_send_msg	;wreg free
  1798  001D20  0012               	return	
  1799  001D22                     __end_of_FromMainLow_sendmsg:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           indf1	equ	0xFE7
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           indf2	equ	0xFDF
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _timer1_lthread *****************
  1813 ;; Defined at:
  1814 ;;		line 18 in file "src/timer1_thread.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  tptr            2   30[BANK1 ] PTR struct __timer1_thre
  1817 ;;		 -> main@t1thread_data(12), 
  1818 ;;  msgtype         2   32[BANK1 ] int 
  1819 ;;  length          2   34[BANK1 ] int 
  1820 ;;  msgbuffer       2   36[BANK1 ] PTR unsigned char 
  1821 ;;		 -> main@msgbuffer(11), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  success         1   41[BANK1 ] enum E8143
  1824 ;;  len             1   40[BANK1 ] unsigned char 
  1825 ;;  even            2   42[BANK1 ] int 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  2   30[BANK1 ] int 
  1828 ;; Registers used:
  1829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1835 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1836 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;Total ram usage:       14 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:   14
  1842 ;; This function calls:
  1843 ;;		_ReadTimer1
  1844 ;;		___lwmod
  1845 ;;		_sendUART
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text3
  1852  000A54                     __ptext3:
  1853                           	opt stack 0
  1854  000A54                     _timer1_lthread:
  1855                           	opt stack 15
  1856                           
  1857                           ;timer1_thread.c: 19: int even = 0;
  1858                           
  1859                           ;incstack = 0
  1860  000A54  0E00               	movlw	0
  1861  000A56  0101               	movlb	1	; () banked
  1862  000A58  0101               	movlb	1	; () banked
  1863  000A5A  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1864  000A5C  0E00               	movlw	0
  1865  000A5E  0101               	movlb	1	; () banked
  1866  000A60  6FCC               	movwf	timer1_lthread@even& (0+255),b
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;timer1_thread.c: 20: tptr->msgcount++;
  1870  000A62  C1C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1871  000A66  C1C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1872  000A6A  2ADE               	incf	postinc2,f,c
  1873  000A6C  0E00               	movlw	0
  1874  000A6E  22DD               	addwfc	postdec2,f,c
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;timer1_thread.c: 22: if ((tptr->msgcount % 23) == 22) {
  1878  000A70  C1C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1879  000A74  C1C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1880  000A78  0101               	movlb	1	; () banked
  1881  000A7A  CFDE F1A2          	movff	postinc2,___lwmod@dividend
  1882  000A7E  0101               	movlb	1	; () banked
  1883  000A80  CFDD F1A3          	movff	postdec2,___lwmod@dividend+1
  1884  000A84  0E00               	movlw	0
  1885  000A86  0101               	movlb	1	; () banked
  1886  000A88  0101               	movlb	1	; () banked
  1887  000A8A  6FA5               	movwf	(___lwmod@divisor+1)& (0+255),b
  1888  000A8C  0E17               	movlw	23
  1889  000A8E  0101               	movlb	1	; () banked
  1890  000A90  6FA4               	movwf	___lwmod@divisor& (0+255),b
  1891  000A92  EC6D  F00A         	call	___lwmod	;wreg free
  1892  000A96  0101               	movlb	1	; () banked
  1893  000A98  0101               	movlb	1	; () banked
  1894  000A9A  51A2               	movf	?___lwmod& (0+255),w,b
  1895  000A9C  0A16               	xorlw	22
  1896  000A9E  0101               	movlb	1	; () banked
  1897  000AA0  11A3               	iorwf	(?___lwmod+1)& (0+255),w,b
  1898  000AA2  A4D8               	btfss	status,2,c
  1899  000AA4  0012               	return	
  1900                           
  1901                           ; BSR set to: 1
  1902                           ;timer1_thread.c: 23: if(ReadTimer1()%2 == 0) even = 0;
  1903  000AA6  ECA0  F00F         	call	_ReadTimer1	;wreg free
  1904  000AAA  0101               	movlb	1	; () banked
  1905  000AAC  0101               	movlb	1	; () banked
  1906  000AAE  B1A2               	btfsc	?_ReadTimer1& (0+255),0,b
  1907  000AB0  D006               	goto	l3658
  1908                           
  1909                           ; BSR set to: 1
  1910  000AB2  0E00               	movlw	0
  1911  000AB4  0101               	movlb	1	; () banked
  1912  000AB6  0101               	movlb	1	; () banked
  1913  000AB8  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1914  000ABA  0E00               	movlw	0
  1915  000ABC  D005               	goto	L4
  1916  000ABE                     l3658:
  1917                           
  1918                           ; BSR set to: 1
  1919                           ;timer1_thread.c: 24: else even = 1;
  1920  000ABE  0E00               	movlw	0
  1921  000AC0  0101               	movlb	1	; () banked
  1922  000AC2  0101               	movlb	1	; () banked
  1923  000AC4  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1924  000AC6  0E01               	movlw	1
  1925  000AC8                     L4:
  1926  000AC8  0101               	movlb	1	; () banked
  1927  000ACA  6FCC               	movwf	timer1_lthread@even& (0+255),b
  1928  000ACC  D02D               	goto	l3666
  1929  000ACE                     l3660:
  1930                           
  1931                           ; BSR set to: 1
  1932                           ;timer1_thread.c: 27: tptr->buffer[0] = 0x00;
  1933  000ACE  0101               	movlb	1	; () banked
  1934  000AD0  EE20 F002          	lfsr	2,2
  1935  000AD4  0101               	movlb	1	; () banked
  1936  000AD6  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1937  000AD8  26D9               	addwf	fsr2l,f,c
  1938  000ADA  0101               	movlb	1	; () banked
  1939  000ADC  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1940  000ADE  22DA               	addwfc	fsr2h,f,c
  1941  000AE0  0E00               	movlw	0
  1942  000AE2  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;timer1_thread.c: 28: tptr->buffer[1] = 0x00;
  1945  000AE4  0101               	movlb	1	; () banked
  1946  000AE6  EE20 F003          	lfsr	2,3
  1947  000AEA  0101               	movlb	1	; () banked
  1948  000AEC  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1949  000AEE  26D9               	addwf	fsr2l,f,c
  1950  000AF0  0101               	movlb	1	; () banked
  1951  000AF2  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1952  000AF4  22DA               	addwfc	fsr2h,f,c
  1953  000AF6  0E00               	movlw	0
  1954  000AF8  D015               	goto	L5
  1955  000AFA                     l3662:
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;timer1_thread.c: 31: tptr->buffer[0] = 0xC8;
  1959  000AFA  0101               	movlb	1	; () banked
  1960  000AFC  EE20 F002          	lfsr	2,2
  1961  000B00  0101               	movlb	1	; () banked
  1962  000B02  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1963  000B04  26D9               	addwf	fsr2l,f,c
  1964  000B06  0101               	movlb	1	; () banked
  1965  000B08  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1966  000B0A  22DA               	addwfc	fsr2h,f,c
  1967  000B0C  0EC8               	movlw	200
  1968  000B0E  6EDF               	movwf	indf2,c
  1969                           
  1970                           ;timer1_thread.c: 32: tptr->buffer[1] = 0x4B;
  1971  000B10  0101               	movlb	1	; () banked
  1972  000B12  EE20 F003          	lfsr	2,3
  1973  000B16  0101               	movlb	1	; () banked
  1974  000B18  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1975  000B1A  26D9               	addwf	fsr2l,f,c
  1976  000B1C  0101               	movlb	1	; () banked
  1977  000B1E  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1978  000B20  22DA               	addwfc	fsr2h,f,c
  1979  000B22  0E4B               	movlw	75
  1980  000B24                     L5:
  1981  000B24  6EDF               	movwf	indf2,c
  1982                           
  1983                           ;timer1_thread.c: 33: break;
  1984  000B26  D013               	goto	l3668
  1985  000B28                     l3666:
  1986                           
  1987                           ; BSR set to: 1
  1988  000B28  0101               	movlb	1	; () banked
  1989  000B2A  C1CC  F1C8         	movff	timer1_lthread@even,??_timer1_lthread
  1990  000B2E  0101               	movlb	1	; () banked
  1991  000B30  C1CD  F1C9         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "space"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ;	Chosen strategy is simple_byte
  2000  000B34  0101               	movlb	1	; () banked
  2001  000B36  51C9               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2002  000B38  0A00               	xorlw	0	; case 0
  2003  000B3A  A4D8               	btfss	status,2,c
  2004  000B3C  D008               	goto	l3668
  2005                           
  2006                           ; BSR set to: 1
  2007                           ; Switch size 1, requested type "space"
  2008                           ; Number of cases is 2, Range of values is 0 to 1
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte            7     4 (average)
  2012                           ;	Chosen strategy is simple_byte
  2013  000B3E  0101               	movlb	1	; () banked
  2014  000B40  51C8               	movf	??_timer1_lthread& (0+255),w,b
  2015  000B42  0A00               	xorlw	0	; case 0
  2016  000B44  B4D8               	btfsc	status,2,c
  2017  000B46  D7C3               	goto	l3660
  2018  000B48  0A01               	xorlw	1	; case 1
  2019  000B4A  B4D8               	btfsc	status,2,c
  2020  000B4C  D7D6               	goto	l3662
  2021  000B4E                     l3668:
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;timer1_thread.c: 35: unsigned char len = 2;
  2025  000B4E  0101               	movlb	1	; () banked
  2026  000B50  6FC8               	movwf	??_timer1_lthread& (0+255),b
  2027  000B52  0E02               	movlw	2
  2028  000B54  0101               	movlb	1	; () banked
  2029  000B56  0101               	movlb	1	; () banked
  2030  000B58  6FCA               	movwf	timer1_lthread@len& (0+255),b
  2031  000B5A  0101               	movlb	1	; () banked
  2032  000B5C  51C8               	movf	??_timer1_lthread& (0+255),w,b
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;timer1_thread.c: 36: BOOL success = sendUART(len, tptr->buffer);
  2036  000B5E  0E02               	movlw	2
  2037  000B60  0101               	movlb	1	; () banked
  2038  000B62  0101               	movlb	1	; () banked
  2039  000B64  25C0               	addwf	timer1_lthread@tptr& (0+255),w,b
  2040  000B66  0101               	movlb	1	; () banked
  2041  000B68  0101               	movlb	1	; () banked
  2042  000B6A  6FBB               	movwf	sendUART@data& (0+255),b
  2043  000B6C  0E00               	movlw	0
  2044  000B6E  0101               	movlb	1	; () banked
  2045  000B70  0101               	movlb	1	; () banked
  2046  000B72  21C1               	addwfc	(timer1_lthread@tptr+1)& (0+255),w,b
  2047  000B74  0101               	movlb	1	; () banked
  2048  000B76  6FBC               	movwf	(sendUART@data+1)& (0+255),b
  2049  000B78  0101               	movlb	1	; () banked
  2050  000B7A  0101               	movlb	1	; () banked
  2051  000B7C  51CA               	movf	timer1_lthread@len& (0+255),w,b
  2052  000B7E  EC70  F00D         	call	_sendUART
  2053  000B82  0101               	movlb	1	; () banked
  2054  000B84  0101               	movlb	1	; () banked
  2055  000B86  6FCB               	movwf	timer1_lthread@success& (0+255),b
  2056  000B88  0012               	return	
  2057  000B8A                     __end_of_timer1_lthread:
  2058                           	opt stack 0
  2059                           tblptru	equ	0xFF8
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           indf1	equ	0xFE7
  2063                           fsr1h	equ	0xFE2
  2064                           fsr1l	equ	0xFE1
  2065                           indf2	equ	0xFDF
  2066                           postinc2	equ	0xFDE
  2067                           postdec2	equ	0xFDD
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _sendUART *****************
  2073 ;; Defined at:
  2074 ;;		line 85 in file "src/my_uart.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  length          1    wreg     unsigned char 
  2077 ;;  data            2   25[BANK1 ] PTR unsigned char 
  2078 ;;		 -> main@t1thread_data(12), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  length          1   28[BANK1 ] unsigned char 
  2081 ;;  retval          1   29[BANK1 ] char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      enum E8143
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2091 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;Total ram usage:        5 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:   13
  2098 ;; This function calls:
  2099 ;;		_ToMainLow_sendmsg
  2100 ;; This function is called by:
  2101 ;;		_timer1_lthread
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text4
  2106  001AE0                     __ptext4:
  2107                           	opt stack 0
  2108  001AE0                     _sendUART:
  2109                           	opt stack 15
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;incstack = 0
  2113                           ;sendUART@length stored from wreg
  2114  001AE0  CFE8 F1BE          	movff	wreg,sendUART@length
  2115                           
  2116                           ;my_uart.c: 86: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2117  001AE4  0101               	movlb	1	; () banked
  2118  001AE6  6FBD               	movwf	??_sendUART& (0+255),b
  2119  001AE8  0E1F               	movlw	31
  2120  001AEA  0101               	movlb	1	; () banked
  2121  001AEC  0101               	movlb	1	; () banked
  2122  001AEE  6FB7               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2123  001AF0  0101               	movlb	1	; () banked
  2124  001AF2  51BD               	movf	??_sendUART& (0+255),w,b
  2125  001AF4  0101               	movlb	1	; () banked
  2126  001AF6  0101               	movlb	1	; () banked
  2127  001AF8  C1BC  F1B9         	movff	sendUART@data+1,ToMainLow_sendmsg@data+1
  2128  001AFC  0101               	movlb	1	; () banked
  2129  001AFE  0101               	movlb	1	; () banked
  2130  001B00  C1BB  F1B8         	movff	sendUART@data,ToMainLow_sendmsg@data
  2131  001B04  0101               	movlb	1	; () banked
  2132  001B06  0101               	movlb	1	; () banked
  2133  001B08  51BE               	movf	sendUART@length& (0+255),w,b
  2134  001B0A  EC91  F00E         	call	_ToMainLow_sendmsg
  2135  001B0E  0101               	movlb	1	; () banked
  2136  001B10  0101               	movlb	1	; () banked
  2137  001B12  6FBF               	movwf	sendUART@retval& (0+255),b
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;my_uart.c: 87: if (retval < 0) {
  2141  001B14  0101               	movlb	1	; () banked
  2142  001B16  0101               	movlb	1	; () banked
  2143  001B18  AFBF               	btfss	sendUART@retval& (0+255),7,b
  2144  001B1A  D002               	goto	l3850
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;my_uart.c: 89: return false;
  2148  001B1C  0E00               	movlw	0
  2149  001B1E  0012               	return	
  2150  001B20                     l3850:
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;my_uart.c: 90: }
  2154                           ;my_uart.c: 91: return true;
  2155  001B20  0E01               	movlw	1
  2156  001B22  0012               	return	
  2157  001B24                     __end_of_sendUART:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf1	equ	0xFE7
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           indf2	equ	0xFDF
  2166                           postinc2	equ	0xFDE
  2167                           postdec2	equ	0xFDD
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _ToMainLow_sendmsg *****************
  2173 ;; Defined at:
  2174 ;;		line 103 in file "src/messages.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  length          1    wreg     unsigned char 
  2177 ;;  msgtype         1   21[BANK1 ] unsigned char 
  2178 ;;  data            2   22[BANK1 ] PTR void 
  2179 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  length          1   24[BANK1 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      char 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:   12
  2198 ;; This function calls:
  2199 ;;		_send_msg
  2200 ;; This function is called by:
  2201 ;;		_sendUART
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text5
  2206  001D22                     __ptext5:
  2207                           	opt stack 0
  2208  001D22                     _ToMainLow_sendmsg:
  2209                           	opt stack 15
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;incstack = 0
  2213                           ;ToMainLow_sendmsg@length stored from wreg
  2214  001D22  CFE8 F1BA          	movff	wreg,ToMainLow_sendmsg@length
  2215                           
  2216                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2217  001D26  0100               	movlb	0	; () banked
  2218  001D28  0E00               	movlw	high _ToMainLow_MQ
  2219  001D2A  0101               	movlb	1	; () banked
  2220  001D2C  0101               	movlb	1	; () banked
  2221  001D2E  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  2222  001D30  0100               	movlb	0	; () banked
  2223  001D32  0E61               	movlw	low _ToMainLow_MQ
  2224  001D34  0101               	movlb	1	; () banked
  2225  001D36  0101               	movlb	1	; () banked
  2226  001D38  6FAC               	movwf	send_msg@qptr& (0+255),b
  2227  001D3A  C1BA  F1AE         	movff	ToMainLow_sendmsg@length,send_msg@length
  2228  001D3E  C1B7  F1AF         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2229  001D42  0101               	movlb	1	; () banked
  2230  001D44  0101               	movlb	1	; () banked
  2231  001D46  C1B9  F1B1         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2232  001D4A  0101               	movlb	1	; () banked
  2233  001D4C  0101               	movlb	1	; () banked
  2234  001D4E  C1B8  F1B0         	movff	ToMainLow_sendmsg@data,send_msg@data
  2235  001D52  EC82  F007         	call	_send_msg	;wreg free
  2236  001D56  0012               	return	
  2237  001D58                     __end_of_ToMainLow_sendmsg:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           indf1	equ	0xFE7
  2243                           fsr1h	equ	0xFE2
  2244                           fsr1l	equ	0xFE1
  2245                           indf2	equ	0xFDF
  2246                           postinc2	equ	0xFDE
  2247                           postdec2	equ	0xFDD
  2248                           fsr2h	equ	0xFDA
  2249                           fsr2l	equ	0xFD9
  2250                           status	equ	0xFD8
  2251                           
  2252 ;; *************** function _send_msg *****************
  2253 ;; Defined at:
  2254 ;;		line 24 in file "src/messages.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2257 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2258 ;;  length          1   12[BANK1 ] unsigned char 
  2259 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2260 ;;  data            2   14[BANK1 ] PTR void 
  2261 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  2262 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  qmsg            2   19[BANK1 ] PTR struct __msg
  2265 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2266 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2267 ;;  tlength         2   16[BANK1 ] unsigned int 
  2268 ;;  slot            1   18[BANK1 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      char 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2278 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Totals:         0       1      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;Total ram usage:       12 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:   11
  2285 ;; This function calls:
  2286 ;;		_memcpy
  2287 ;; This function is called by:
  2288 ;;		_ToMainLow_sendmsg
  2289 ;;		_FromMainLow_sendmsg
  2290 ;;		_FromMainHigh_sendmsg
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text6
  2295  000F04                     __ptext6:
  2296                           	opt stack 0
  2297  000F04                     _send_msg:
  2298                           	opt stack 16
  2299                           
  2300                           ;messages.c: 25: unsigned char slot;
  2301                           ;messages.c: 27: msg *qmsg;
  2302                           ;messages.c: 28: size_t tlength = length;
  2303                           
  2304                           ;incstack = 0
  2305  000F04  0101               	movlb	1	; () banked
  2306  000F06  0101               	movlb	1	; () banked
  2307  000F08  C1AE  F1B2         	movff	send_msg@length,send_msg@tlength
  2308  000F0C  0101               	movlb	1	; () banked
  2309  000F0E  0101               	movlb	1	; () banked
  2310  000F10  6BB3               	clrf	(send_msg@tlength+1)& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2314  000F12  0101               	movlb	1	; () banked
  2315  000F14  EE20 F034          	lfsr	2,52
  2316  000F18  0101               	movlb	1	; () banked
  2317  000F1A  51AC               	movf	send_msg@qptr& (0+255),w,b
  2318  000F1C  26D9               	addwf	fsr2l,f,c
  2319  000F1E  0101               	movlb	1	; () banked
  2320  000F20  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2321  000F22  22DA               	addwfc	fsr2h,f,c
  2322  000F24  50DF               	movf	indf2,w,c
  2323  000F26  0101               	movlb	1	; () banked
  2324  000F28  0101               	movlb	1	; () banked
  2325  000F2A  6FB4               	movwf	send_msg@slot& (0+255),b
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2329  000F2C  0101               	movlb	1	; () banked
  2330  000F2E  0101               	movlb	1	; () banked
  2331  000F30  51B4               	movf	send_msg@slot& (0+255),w,b
  2332  000F32  0D0D               	mullw	13
  2333  000F34  50F3               	movf	prodl,w,c
  2334  000F36  0101               	movlb	1	; () banked
  2335  000F38  0101               	movlb	1	; () banked
  2336  000F3A  25AC               	addwf	send_msg@qptr& (0+255),w,b
  2337  000F3C  0101               	movlb	1	; () banked
  2338  000F3E  0101               	movlb	1	; () banked
  2339  000F40  6FB5               	movwf	send_msg@qmsg& (0+255),b
  2340  000F42  50F4               	movf	prodh,w,c
  2341  000F44  0101               	movlb	1	; () banked
  2342  000F46  0101               	movlb	1	; () banked
  2343  000F48  21AD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2344  000F4A  0101               	movlb	1	; () banked
  2345  000F4C  6FB6               	movwf	(send_msg@qmsg+1)& (0+255),b
  2346                           
  2347                           ; BSR set to: 1
  2348                           ;messages.c: 41: if (qmsg->full != 0) {
  2349  000F4E  C1B5  FFD9         	movff	send_msg@qmsg,fsr2l
  2350  000F52  C1B6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2351  000F56  50DF               	movf	indf2,w,c
  2352  000F58  B4D8               	btfsc	status,2,c
  2353  000F5A  D002               	goto	l3730
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;messages.c: 42: return (-1);
  2357  000F5C  0EFF               	movlw	255
  2358  000F5E  0012               	return	
  2359  000F60                     l3730:
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;messages.c: 43: }
  2363                           ;messages.c: 46: qmsg->length = length;
  2364  000F60  0101               	movlb	1	; () banked
  2365  000F62  EE20 F001          	lfsr	2,1
  2366  000F66  0101               	movlb	1	; () banked
  2367  000F68  51B5               	movf	send_msg@qmsg& (0+255),w,b
  2368  000F6A  26D9               	addwf	fsr2l,f,c
  2369  000F6C  0101               	movlb	1	; () banked
  2370  000F6E  51B6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2371  000F70  22DA               	addwfc	fsr2h,f,c
  2372  000F72  0101               	movlb	1	; () banked
  2373  000F74  C1AE  FFDF         	movff	send_msg@length,indf2
  2374                           
  2375                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2376  000F78  0101               	movlb	1	; () banked
  2377  000F7A  EE20 F002          	lfsr	2,2
  2378  000F7E  0101               	movlb	1	; () banked
  2379  000F80  51B5               	movf	send_msg@qmsg& (0+255),w,b
  2380  000F82  26D9               	addwf	fsr2l,f,c
  2381  000F84  0101               	movlb	1	; () banked
  2382  000F86  51B6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2383  000F88  22DA               	addwfc	fsr2h,f,c
  2384  000F8A  0101               	movlb	1	; () banked
  2385  000F8C  C1AF  FFDF         	movff	send_msg@msgtype,indf2
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2389  000F90  0E03               	movlw	3
  2390  000F92  0101               	movlb	1	; () banked
  2391  000F94  0101               	movlb	1	; () banked
  2392  000F96  25B5               	addwf	send_msg@qmsg& (0+255),w,b
  2393  000F98  0101               	movlb	1	; () banked
  2394  000F9A  0101               	movlb	1	; () banked
  2395  000F9C  6FA2               	movwf	memcpy@d1& (0+255),b
  2396  000F9E  0E00               	movlw	0
  2397  000FA0  0101               	movlb	1	; () banked
  2398  000FA2  0101               	movlb	1	; () banked
  2399  000FA4  21B6               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2400  000FA6  0101               	movlb	1	; () banked
  2401  000FA8  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  2402  000FAA  0101               	movlb	1	; () banked
  2403  000FAC  0101               	movlb	1	; () banked
  2404  000FAE  C1B1  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  2405  000FB2  0101               	movlb	1	; () banked
  2406  000FB4  0101               	movlb	1	; () banked
  2407  000FB6  C1B0  F1A4         	movff	send_msg@data,memcpy@s1
  2408  000FBA  C1B2  F1A6         	movff	send_msg@tlength,memcpy@n
  2409  000FBE  C1B3  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  2410  000FC2  EC9F  F00C         	call	_memcpy	;wreg free
  2411                           
  2412                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2413  000FC6  0101               	movlb	1	; () banked
  2414  000FC8  EE20 F034          	lfsr	2,52
  2415  000FCC  0101               	movlb	1	; () banked
  2416  000FCE  51AC               	movf	send_msg@qptr& (0+255),w,b
  2417  000FD0  26D9               	addwf	fsr2l,f,c
  2418  000FD2  0101               	movlb	1	; () banked
  2419  000FD4  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2420  000FD6  22DA               	addwfc	fsr2h,f,c
  2421  000FD8  0101               	movlb	1	; () banked
  2422  000FDA  EE10 F034          	lfsr	1,52
  2423  000FDE  0101               	movlb	1	; () banked
  2424  000FE0  51AC               	movf	send_msg@qptr& (0+255),w,b
  2425  000FE2  26E1               	addwf	fsr1l,f,c
  2426  000FE4  0101               	movlb	1	; () banked
  2427  000FE6  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2428  000FE8  22E2               	addwfc	fsr1h,f,c
  2429  000FEA  50E7               	movf	indf1,w,c
  2430  000FEC  0100               	movlb	0	; () banked
  2431  000FEE  6FCA               	movwf	??_send_msg& (0+255),b
  2432  000FF0  0100               	movlb	0	; () banked
  2433  000FF2  29CA               	incf	??_send_msg& (0+255),w,b
  2434  000FF4  0B03               	andlw	3
  2435  000FF6  6EDF               	movwf	indf2,c
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;messages.c: 59: qmsg->full = 1;
  2439  000FF8  C1B5  FFD9         	movff	send_msg@qmsg,fsr2l
  2440  000FFC  C1B6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2441  001000  0E01               	movlw	1
  2442  001002  6EDF               	movwf	indf2,c
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;messages.c: 60: return (1);
  2446  001004  0E01               	movlw	1
  2447  001006  0012               	return	
  2448  001008                     __end_of_send_msg:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function ___lwmod *****************
  2466 ;; Defined at:
  2467 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  dividend        2    0[BANK1 ] unsigned int 
  2470 ;;  divisor         2    2[BANK1 ] unsigned int 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  counter         1    4[BANK1 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[BANK1 ] unsigned int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2482 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;Total ram usage:        6 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:   10
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_timer1_lthread
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text7
  2497  0014DA                     __ptext7:
  2498                           	opt stack 0
  2499  0014DA                     ___lwmod:
  2500                           	opt stack 18
  2501                           
  2502                           ;incstack = 0
  2503  0014DA  0101               	movlb	1	; () banked
  2504  0014DC  0101               	movlb	1	; () banked
  2505  0014DE  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2506  0014E0  11A4               	iorwf	___lwmod@divisor& (0+255),w,b
  2507  0014E2  B4D8               	btfsc	status,2,c
  2508  0014E4  D03A               	goto	l1044
  2509                           
  2510                           ; BSR set to: 1
  2511  0014E6  0100               	movlb	0	; () banked
  2512  0014E8  6FCA               	movwf	??___lwmod& (0+255),b
  2513  0014EA  0E01               	movlw	1
  2514  0014EC  0101               	movlb	1	; () banked
  2515  0014EE  0101               	movlb	1	; () banked
  2516  0014F0  6FA6               	movwf	___lwmod@counter& (0+255),b
  2517  0014F2  0100               	movlb	0	; () banked
  2518  0014F4  51CA               	movf	??___lwmod& (0+255),w,b
  2519  0014F6  D009               	goto	l3862
  2520  0014F8                     l3860:
  2521  0014F8  0101               	movlb	1	; () banked
  2522  0014FA  0101               	movlb	1	; () banked
  2523  0014FC  0101               	movlb	1	; () banked
  2524  0014FE  90D8               	bcf	status,0,c
  2525  001500  37A4               	rlcf	___lwmod@divisor& (0+255),f,b
  2526  001502  37A5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2527  001504  0101               	movlb	1	; () banked
  2528  001506  0101               	movlb	1	; () banked
  2529  001508  2BA6               	incf	___lwmod@counter& (0+255),f,b
  2530  00150A                     l3862:
  2531  00150A  0101               	movlb	1	; () banked
  2532  00150C  0101               	movlb	1	; () banked
  2533  00150E  AFA5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2534  001510  D7F3               	goto	l3860
  2535  001512                     l3864:
  2536                           
  2537                           ; BSR set to: 1
  2538  001512  0101               	movlb	1	; () banked
  2539  001514  0101               	movlb	1	; () banked
  2540  001516  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2541  001518  0101               	movlb	1	; () banked
  2542  00151A  0101               	movlb	1	; () banked
  2543  00151C  5DA2               	subwf	___lwmod@dividend& (0+255),w,b
  2544  00151E  0101               	movlb	1	; () banked
  2545  001520  0101               	movlb	1	; () banked
  2546  001522  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2547  001524  0101               	movlb	1	; () banked
  2548  001526  0101               	movlb	1	; () banked
  2549  001528  59A3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2550  00152A  A0D8               	btfss	status,0,c
  2551  00152C  D00C               	goto	l3868
  2552                           
  2553                           ; BSR set to: 1
  2554  00152E  0101               	movlb	1	; () banked
  2555  001530  0101               	movlb	1	; () banked
  2556  001532  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2557  001534  0101               	movlb	1	; () banked
  2558  001536  0101               	movlb	1	; () banked
  2559  001538  5FA2               	subwf	___lwmod@dividend& (0+255),f,b
  2560  00153A  0101               	movlb	1	; () banked
  2561  00153C  0101               	movlb	1	; () banked
  2562  00153E  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2563  001540  0101               	movlb	1	; () banked
  2564  001542  0101               	movlb	1	; () banked
  2565  001544  5BA3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2566  001546                     l3868:
  2567                           
  2568                           ; BSR set to: 1
  2569  001546  0101               	movlb	1	; () banked
  2570  001548  0101               	movlb	1	; () banked
  2571  00154A  0101               	movlb	1	; () banked
  2572  00154C  90D8               	bcf	status,0,c
  2573  00154E  33A5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2574  001550  33A4               	rrcf	___lwmod@divisor& (0+255),f,b
  2575                           
  2576                           ; BSR set to: 1
  2577  001552  0101               	movlb	1	; () banked
  2578  001554  0101               	movlb	1	; () banked
  2579  001556  2FA6               	decfsz	___lwmod@counter& (0+255),f,b
  2580  001558  D7DC               	goto	l3864
  2581  00155A                     l1044:
  2582                           
  2583                           ; BSR set to: 1
  2584  00155A  C1A2  F1A2         	movff	___lwmod@dividend,?___lwmod
  2585  00155E  C1A3  F1A3         	movff	___lwmod@dividend+1,?___lwmod+1
  2586                           
  2587                           ; BSR set to: 1
  2588  001562  0012               	return	
  2589  001564                     __end_of___lwmod:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           indf1	equ	0xFE7
  2597                           fsr1h	equ	0xFE2
  2598                           fsr1l	equ	0xFE1
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _ReadTimer1 *****************
  2607 ;; Defined at:
  2608 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  timer           2    2[BANK1 ] struct Timers
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    0[BANK1 ] unsigned int 
  2615 ;; Registers used:
  2616 ;;		None
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2622 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;Total ram usage:        4 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   10
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_timer1_lthread
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text8
  2637  001F40                     __ptext8:
  2638                           	opt stack 0
  2639  001F40                     _ReadTimer1:
  2640                           	opt stack 18
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;incstack = 0
  2644  001F40  CFCE F1A4          	movff	4046,ReadTimer1@timer	;volatile
  2645  001F44  CFCF F1A5          	movff	4047,ReadTimer1@timer+1	;volatile
  2646  001F48  C1A4  F1A2         	movff	ReadTimer1@timer,?_ReadTimer1
  2647  001F4C  C1A5  F1A3         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2648  001F50  0012               	return	
  2649  001F52                     __end_of_ReadTimer1:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           postinc0	equ	0xFEE
  2655                           wreg	equ	0xFE8
  2656                           indf1	equ	0xFE7
  2657                           fsr1h	equ	0xFE2
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           postdec2	equ	0xFDD
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _timer0_lthread *****************
  2667 ;; Defined at:
  2668 ;;		line 9 in file "src/timer0_thread.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2671 ;;		 -> main@t0thread_data(2), 
  2672 ;;  msgtype         2    2[BANK1 ] int 
  2673 ;;  length          2    4[BANK1 ] int 
  2674 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2675 ;;		 -> main@msgbuffer(11), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2678 ;;		 -> main@msgbuffer(11), 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2    0[BANK1 ] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2688 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;Total ram usage:       10 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:   10
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text9
  2703  001F52                     __ptext9:
  2704                           	opt stack 0
  2705  001F52                     _timer0_lthread:
  2706                           	opt stack 19
  2707                           
  2708                           ;timer0_thread.c: 10: unsigned int *msgval;
  2709                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2710                           
  2711                           ;incstack = 0
  2712  001F52  0101               	movlb	1	; () banked
  2713  001F54  0101               	movlb	1	; () banked
  2714  001F56  C1A9  F1AB         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2715  001F5A  0101               	movlb	1	; () banked
  2716  001F5C  0101               	movlb	1	; () banked
  2717  001F5E  C1A8  F1AA         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2718                           
  2719                           ; BSR set to: 1
  2720  001F62  0012               	return	
  2721  001F64                     __end_of_timer0_lthread:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           fsr1h	equ	0xFE2
  2730                           fsr1l	equ	0xFE1
  2731                           indf2	equ	0xFDF
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function _start_i2c_slave_reply *****************
  2739 ;; Defined at:
  2740 ;;		line 53 in file "src/my_i2c.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  length          1    wreg     unsigned char 
  2743 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2744 ;;		 -> main@msgbuffer(11), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  length          1   51[BANK0 ] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2756 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;Total ram usage:        5 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:   10
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text10
  2771  000DF6                     __ptext10:
  2772                           	opt stack 0
  2773  000DF6                     _start_i2c_slave_reply:
  2774                           	opt stack 19
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;incstack = 0
  2778                           ;start_i2c_slave_reply@length stored from wreg
  2779  000DF6  CFE8 F0CA          	movff	wreg,start_i2c_slave_reply@length
  2780                           
  2781                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2782  000DFA  0100               	movlb	0	; () banked
  2783  000DFC  EE20 F019          	lfsr	2,25
  2784  000E00  0100               	movlb	0	; () banked
  2785  000E02  51CB               	movf	_ic_ptr& (0+255),w,b
  2786  000E04  26D9               	addwf	fsr2l,f,c
  2787  000E06  0100               	movlb	0	; () banked
  2788  000E08  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2789  000E0A  22DA               	addwfc	fsr2h,f,c
  2790  000E0C  0E00               	movlw	0
  2791  000E0E  6EDF               	movwf	indf2,c
  2792  000E10  D042               	goto	l3638
  2793  000E12                     l3634:
  2794                           
  2795                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2796  000E12  0100               	movlb	0	; () banked
  2797  000E14  EE20 F019          	lfsr	2,25
  2798  000E18  0100               	movlb	0	; () banked
  2799  000E1A  51CB               	movf	_ic_ptr& (0+255),w,b
  2800  000E1C  26D9               	addwf	fsr2l,f,c
  2801  000E1E  0100               	movlb	0	; () banked
  2802  000E20  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2803  000E22  22DA               	addwfc	fsr2h,f,c
  2804  000E24  50DF               	movf	indf2,w,c
  2805  000E26  0101               	movlb	1	; () banked
  2806  000E28  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2807  000E2A  0101               	movlb	1	; () banked
  2808  000E2C  51A4               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2809  000E2E  0D01               	mullw	1
  2810  000E30  50F3               	movf	prodl,w,c
  2811  000E32  0101               	movlb	1	; () banked
  2812  000E34  0101               	movlb	1	; () banked
  2813  000E36  25A2               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2814  000E38  6ED9               	movwf	fsr2l,c
  2815  000E3A  50F4               	movf	prodh,w,c
  2816  000E3C  0101               	movlb	1	; () banked
  2817  000E3E  0101               	movlb	1	; () banked
  2818  000E40  21A3               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2819  000E42  6EDA               	movwf	fsr2h,c
  2820  000E44  0100               	movlb	0	; () banked
  2821  000E46  EE10 F019          	lfsr	1,25
  2822  000E4A  0100               	movlb	0	; () banked
  2823  000E4C  51CB               	movf	_ic_ptr& (0+255),w,b
  2824  000E4E  26E1               	addwf	fsr1l,f,c
  2825  000E50  0100               	movlb	0	; () banked
  2826  000E52  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2827  000E54  22E2               	addwfc	fsr1h,f,c
  2828  000E56  50E7               	movf	indf1,w,c
  2829  000E58  0101               	movlb	1	; () banked
  2830  000E5A  6FA5               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2831  000E5C  0101               	movlb	1	; () banked
  2832  000E5E  51A5               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2833  000E60  0D01               	mullw	1
  2834  000E62  0E0F               	movlw	15
  2835  000E64  26F3               	addwf	prodl,f,c
  2836  000E66  0E00               	movlw	0
  2837  000E68  22F4               	addwfc	prodh,f,c
  2838  000E6A  50F3               	movf	prodl,w,c
  2839  000E6C  0100               	movlb	0	; () banked
  2840  000E6E  0100               	movlb	0	; () banked
  2841  000E70  25CB               	addwf	_ic_ptr& (0+255),w,b
  2842  000E72  6EE1               	movwf	fsr1l,c
  2843  000E74  50F4               	movf	prodh,w,c
  2844  000E76  0100               	movlb	0	; () banked
  2845  000E78  0100               	movlb	0	; () banked
  2846  000E7A  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2847  000E7C  6EE2               	movwf	fsr1h,c
  2848  000E7E  CFDF FFE7          	movff	indf2,indf1
  2849                           
  2850                           ; BSR set to: 0
  2851  000E82  0100               	movlb	0	; () banked
  2852  000E84  EE20 F019          	lfsr	2,25
  2853  000E88  0100               	movlb	0	; () banked
  2854  000E8A  51CB               	movf	_ic_ptr& (0+255),w,b
  2855  000E8C  26D9               	addwf	fsr2l,f,c
  2856  000E8E  0100               	movlb	0	; () banked
  2857  000E90  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2858  000E92  22DA               	addwfc	fsr2h,f,c
  2859  000E94  2ADF               	incf	indf2,f,c
  2860  000E96                     l3638:
  2861                           
  2862                           ; BSR set to: 0
  2863  000E96  0100               	movlb	0	; () banked
  2864  000E98  EE20 F019          	lfsr	2,25
  2865  000E9C  0100               	movlb	0	; () banked
  2866  000E9E  51CB               	movf	_ic_ptr& (0+255),w,b
  2867  000EA0  26D9               	addwf	fsr2l,f,c
  2868  000EA2  0100               	movlb	0	; () banked
  2869  000EA4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2870  000EA6  22DA               	addwfc	fsr2h,f,c
  2871  000EA8  50DF               	movf	indf2,w,c
  2872  000EAA  0101               	movlb	1	; () banked
  2873  000EAC  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2874  000EAE  0100               	movlb	0	; () banked
  2875  000EB0  0100               	movlb	0	; () banked
  2876  000EB2  51CA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2877  000EB4  0101               	movlb	1	; () banked
  2878  000EB6  5DA4               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2879  000EB8  A0D8               	btfss	status,0,c
  2880  000EBA  D7AB               	goto	l3634
  2881                           
  2882                           ; BSR set to: 1
  2883                           ;my_i2c.c: 57: }
  2884                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2885                           
  2886                           ; BSR set to: 1
  2887  000EBC  0100               	movlb	0	; () banked
  2888  000EBE  EE20 F019          	lfsr	2,25
  2889  000EC2  0100               	movlb	0	; () banked
  2890  000EC4  51CB               	movf	_ic_ptr& (0+255),w,b
  2891  000EC6  26D9               	addwf	fsr2l,f,c
  2892  000EC8  0100               	movlb	0	; () banked
  2893  000ECA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2894  000ECC  22DA               	addwfc	fsr2h,f,c
  2895  000ECE  0100               	movlb	0	; () banked
  2896  000ED0  C0CA  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2897                           
  2898                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2899  000ED4  0100               	movlb	0	; () banked
  2900  000ED6  EE20 F01A          	lfsr	2,26
  2901  000EDA  0100               	movlb	0	; () banked
  2902  000EDC  51CB               	movf	_ic_ptr& (0+255),w,b
  2903  000EDE  26D9               	addwf	fsr2l,f,c
  2904  000EE0  0100               	movlb	0	; () banked
  2905  000EE2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2906  000EE4  22DA               	addwfc	fsr2h,f,c
  2907  000EE6  0E01               	movlw	1
  2908  000EE8  6EDF               	movwf	indf2,c
  2909                           
  2910                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2911  000EEA  0100               	movlb	0	; () banked
  2912  000EEC  EE20 F00F          	lfsr	2,15
  2913  000EF0  0100               	movlb	0	; () banked
  2914  000EF2  51CB               	movf	_ic_ptr& (0+255),w,b
  2915  000EF4  26D9               	addwf	fsr2l,f,c
  2916  000EF6  0100               	movlb	0	; () banked
  2917  000EF8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2918  000EFA  22DA               	addwfc	fsr2h,f,c
  2919  000EFC  50DF               	movf	indf2,w,c
  2920  000EFE  6EC9               	movwf	4041,c	;volatile
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2924  000F00  88C6               	bsf	4038,4,c	;volatile
  2925                           
  2926                           ; BSR set to: 0
  2927  000F02  0012               	return	
  2928  000F04                     __end_of_start_i2c_slave_reply:
  2929                           	opt stack 0
  2930                           tblptru	equ	0xFF8
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           indf1	equ	0xFE7
  2936                           fsr1h	equ	0xFE2
  2937                           fsr1l	equ	0xFE1
  2938                           indf2	equ	0xFDF
  2939                           postinc2	equ	0xFDE
  2940                           postdec2	equ	0xFDD
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8
  2944                           
  2945 ;; *************** function _init_uart_recv *****************
  2946 ;; Defined at:
  2947 ;;		line 80 in file "src/my_uart.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2950 ;;		 -> main@uc(5), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;		None               void
  2955 ;; Registers used:
  2956 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2962 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;Total ram usage:        2 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:   10
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text11
  2977  001EEE                     __ptext11:
  2978                           	opt stack 0
  2979  001EEE                     _init_uart_recv:
  2980                           	opt stack 19
  2981                           
  2982                           ;my_uart.c: 81: uc_ptr = uc;
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;incstack = 0
  2986  001EEE  0101               	movlb	1	; () banked
  2987  001EF0  C1A3  F036         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2988  001EF4  0101               	movlb	1	; () banked
  2989  001EF6  C1A2  F035         	movff	init_uart_recv@uc,_uc_ptr
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2993  001EFA  EE20 F004          	lfsr	2,4
  2994  001EFE  5035               	movf	_uc_ptr,w,c
  2995  001F00  26D9               	addwf	fsr2l,f,c
  2996  001F02  5036               	movf	_uc_ptr+1,w,c
  2997  001F04  22DA               	addwfc	fsr2h,f,c
  2998  001F06  0E00               	movlw	0
  2999  001F08  6EDF               	movwf	indf2,c
  3000                           
  3001                           ; BSR set to: 1
  3002  001F0A  0012               	return	
  3003  001F0C                     __end_of_init_uart_recv:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           prodh	equ	0xFF4
  3007                           prodl	equ	0xFF3
  3008                           postinc0	equ	0xFEE
  3009                           wreg	equ	0xFE8
  3010                           indf1	equ	0xFE7
  3011                           fsr1h	equ	0xFE2
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           postdec2	equ	0xFDD
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _init_uart_lthread *****************
  3021 ;; Defined at:
  3022 ;;		line 7 in file "src/uart_thread.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  3025 ;;		 -> main@uthread_data(10), 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;		None               void
  3030 ;; Registers used:
  3031 ;;		None
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3037 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;Total ram usage:        2 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:   10
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text12
  3052  001FCC                     __ptext12:
  3053                           	opt stack 0
  3054  001FCC                     _init_uart_lthread:
  3055                           	opt stack 19
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;incstack = 0
  3059  001FCC  0012               	return	
  3060  001FCE                     __end_of_init_uart_lthread:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           indf1	equ	0xFE7
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _init_timer1_lthread *****************
  3078 ;; Defined at:
  3079 ;;		line 7 in file "src/timer1_thread.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  3082 ;;		 -> main@t1thread_data(12), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3094 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;Total ram usage:        2 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:   10
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text13
  3109  001CAE                     __ptext13:
  3110                           	opt stack 0
  3111  001CAE                     _init_timer1_lthread:
  3112                           	opt stack 19
  3113                           
  3114                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  3115                           
  3116                           ;incstack = 0
  3117  001CAE  C1A2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3118  001CB2  C1A3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3119  001CB6  0E00               	movlw	0
  3120  001CB8  6EDE               	movwf	postinc2,c
  3121  001CBA  0E00               	movlw	0
  3122  001CBC  6EDD               	movwf	postdec2,c
  3123                           
  3124                           ;timer1_thread.c: 9: tptr->buffer[0] = 0xC8;
  3125  001CBE  0101               	movlb	1	; () banked
  3126  001CC0  EE20 F002          	lfsr	2,2
  3127  001CC4  0101               	movlb	1	; () banked
  3128  001CC6  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3129  001CC8  26D9               	addwf	fsr2l,f,c
  3130  001CCA  0101               	movlb	1	; () banked
  3131  001CCC  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3132  001CCE  22DA               	addwfc	fsr2h,f,c
  3133  001CD0  0EC8               	movlw	200
  3134  001CD2  6EDF               	movwf	indf2,c
  3135                           
  3136                           ; BSR set to: 1
  3137                           ;timer1_thread.c: 10: tptr->buffer[1] = 0x4B;
  3138  001CD4  0101               	movlb	1	; () banked
  3139  001CD6  EE20 F003          	lfsr	2,3
  3140  001CDA  0101               	movlb	1	; () banked
  3141  001CDC  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3142  001CDE  26D9               	addwf	fsr2l,f,c
  3143  001CE0  0101               	movlb	1	; () banked
  3144  001CE2  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3145  001CE4  22DA               	addwfc	fsr2h,f,c
  3146  001CE6  0E4B               	movlw	75
  3147  001CE8  6EDF               	movwf	indf2,c
  3148                           
  3149                           ; BSR set to: 1
  3150  001CEA  0012               	return	
  3151  001CEC                     __end_of_init_timer1_lthread:
  3152                           	opt stack 0
  3153                           tblptru	equ	0xFF8
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           indf1	equ	0xFE7
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           indf2	equ	0xFDF
  3162                           postinc2	equ	0xFDE
  3163                           postdec2	equ	0xFDD
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function _init_queues *****************
  3169 ;; Defined at:
  3170 ;;		line 194 in file "src/messages.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;		None               void
  3177 ;; Registers used:
  3178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;Total ram usage:        1 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   11
  3191 ;; This function calls:
  3192 ;;		_init_queue
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text14
  3199  0017F4                     __ptext14:
  3200                           	opt stack 0
  3201  0017F4                     _init_queues:
  3202                           	opt stack 18
  3203                           
  3204                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3205                           
  3206                           ; BSR set to: 1
  3207                           ;incstack = 0
  3208  0017F4  0101               	movlb	1	; () banked
  3209  0017F6  6FA5               	movwf	??_init_queues& (0+255),b
  3210  0017F8  0E00               	movlw	0
  3211  0017FA  0100               	movlb	0	; () banked
  3212  0017FC  0100               	movlb	0	; () banked
  3213  0017FE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3214  001800  0101               	movlb	1	; () banked
  3215  001802  51A5               	movf	??_init_queues& (0+255),w,b
  3216                           
  3217                           ; BSR set to: 1
  3218                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3219  001804  0100               	movlb	0	; () banked
  3220  001806  0E00               	movlw	high _ToMainLow_MQ
  3221  001808  0101               	movlb	1	; () banked
  3222  00180A  0101               	movlb	1	; () banked
  3223  00180C  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3224  00180E  0100               	movlb	0	; () banked
  3225  001810  0E61               	movlw	low _ToMainLow_MQ
  3226  001812  0101               	movlb	1	; () banked
  3227  001814  0101               	movlb	1	; () banked
  3228  001816  6FA2               	movwf	init_queue@qptr& (0+255),b
  3229  001818  ECBD  F00B         	call	_init_queue	;wreg free
  3230                           
  3231                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3232  00181C  0101               	movlb	1	; () banked
  3233  00181E  0E01               	movlw	high _ToMainHigh_MQ
  3234  001820  0101               	movlb	1	; () banked
  3235  001822  0101               	movlb	1	; () banked
  3236  001824  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3237  001826  0101               	movlb	1	; () banked
  3238  001828  0E6C               	movlw	low _ToMainHigh_MQ
  3239  00182A  0101               	movlb	1	; () banked
  3240  00182C  0101               	movlb	1	; () banked
  3241  00182E  6FA2               	movwf	init_queue@qptr& (0+255),b
  3242  001830  ECBD  F00B         	call	_init_queue	;wreg free
  3243                           
  3244                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3245  001834  0101               	movlb	1	; () banked
  3246  001836  0E01               	movlw	high _FromMainLow_MQ
  3247  001838  0101               	movlb	1	; () banked
  3248  00183A  0101               	movlb	1	; () banked
  3249  00183C  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3250  00183E  0101               	movlb	1	; () banked
  3251  001840  0E36               	movlw	low _FromMainLow_MQ
  3252  001842  0101               	movlb	1	; () banked
  3253  001844  0101               	movlb	1	; () banked
  3254  001846  6FA2               	movwf	init_queue@qptr& (0+255),b
  3255  001848  ECBD  F00B         	call	_init_queue	;wreg free
  3256                           
  3257                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3258  00184C  0101               	movlb	1	; () banked
  3259  00184E  0E01               	movlw	high _FromMainHigh_MQ
  3260  001850  0101               	movlb	1	; () banked
  3261  001852  0101               	movlb	1	; () banked
  3262  001854  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3263  001856  0101               	movlb	1	; () banked
  3264  001858  0E00               	movlw	low _FromMainHigh_MQ
  3265  00185A  0101               	movlb	1	; () banked
  3266  00185C  0101               	movlb	1	; () banked
  3267  00185E  6FA2               	movwf	init_queue@qptr& (0+255),b
  3268  001860  ECBD  F00B         	call	_init_queue	;wreg free
  3269  001864  0012               	return	
  3270  001866                     __end_of_init_queues:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           indf1	equ	0xFE7
  3278                           fsr1h	equ	0xFE2
  3279                           fsr1l	equ	0xFE1
  3280                           indf2	equ	0xFDF
  3281                           postinc2	equ	0xFDE
  3282                           postdec2	equ	0xFDD
  3283                           fsr2h	equ	0xFDA
  3284                           fsr2l	equ	0xFD9
  3285                           status	equ	0xFD8
  3286                           
  3287 ;; *************** function _init_queue *****************
  3288 ;; Defined at:
  3289 ;;		line 14 in file "src/messages.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3292 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  i               1    2[BANK1 ] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3304 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;Total ram usage:        4 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:   10
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_init_queues
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text15
  3319  00177A                     __ptext15:
  3320                           	opt stack 0
  3321  00177A                     _init_queue:
  3322                           	opt stack 18
  3323                           
  3324                           ;messages.c: 15: unsigned char i;
  3325                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3326                           
  3327                           ;incstack = 0
  3328  00177A  0101               	movlb	1	; () banked
  3329  00177C  EE20 F034          	lfsr	2,52
  3330  001780  0101               	movlb	1	; () banked
  3331  001782  51A2               	movf	init_queue@qptr& (0+255),w,b
  3332  001784  26D9               	addwf	fsr2l,f,c
  3333  001786  0101               	movlb	1	; () banked
  3334  001788  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  3335  00178A  22DA               	addwfc	fsr2h,f,c
  3336  00178C  0E00               	movlw	0
  3337  00178E  6EDF               	movwf	indf2,c
  3338                           
  3339                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3340  001790  0101               	movlb	1	; () banked
  3341  001792  EE20 F035          	lfsr	2,53
  3342  001796  0101               	movlb	1	; () banked
  3343  001798  51A2               	movf	init_queue@qptr& (0+255),w,b
  3344  00179A  26D9               	addwf	fsr2l,f,c
  3345  00179C  0101               	movlb	1	; () banked
  3346  00179E  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  3347  0017A0  22DA               	addwfc	fsr2h,f,c
  3348  0017A2  0E00               	movlw	0
  3349  0017A4  6EDF               	movwf	indf2,c
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3353  0017A6  0100               	movlb	0	; () banked
  3354  0017A8  6FCA               	movwf	??_init_queue& (0+255),b
  3355  0017AA  0E00               	movlw	0
  3356  0017AC  0101               	movlb	1	; () banked
  3357  0017AE  0101               	movlb	1	; () banked
  3358  0017B0  6FA4               	movwf	init_queue@i& (0+255),b
  3359  0017B2  0100               	movlb	0	; () banked
  3360  0017B4  51CA               	movf	??_init_queue& (0+255),w,b
  3361                           
  3362                           ; BSR set to: 0
  3363  0017B6  0E03               	movlw	3
  3364  0017B8  0101               	movlb	1	; () banked
  3365  0017BA  0101               	movlb	1	; () banked
  3366  0017BC  65A4               	cpfsgt	init_queue@i& (0+255),b
  3367  0017BE  D001               	goto	l3712
  3368  0017C0  0012               	return	
  3369  0017C2                     l3712:
  3370                           
  3371                           ; BSR set to: 1
  3372                           ;messages.c: 20: qptr->queue[i].full = 0;
  3373  0017C2  0101               	movlb	1	; () banked
  3374  0017C4  0101               	movlb	1	; () banked
  3375  0017C6  51A4               	movf	init_queue@i& (0+255),w,b
  3376  0017C8  0D0D               	mullw	13
  3377  0017CA  50F3               	movf	prodl,w,c
  3378  0017CC  0101               	movlb	1	; () banked
  3379  0017CE  0101               	movlb	1	; () banked
  3380  0017D0  25A2               	addwf	init_queue@qptr& (0+255),w,b
  3381  0017D2  6ED9               	movwf	fsr2l,c
  3382  0017D4  50F4               	movf	prodh,w,c
  3383  0017D6  0101               	movlb	1	; () banked
  3384  0017D8  0101               	movlb	1	; () banked
  3385  0017DA  21A3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3386  0017DC  6EDA               	movwf	fsr2h,c
  3387  0017DE  0E00               	movlw	0
  3388  0017E0  6EDF               	movwf	indf2,c
  3389                           
  3390                           ; BSR set to: 1
  3391  0017E2  0101               	movlb	1	; () banked
  3392  0017E4  0101               	movlb	1	; () banked
  3393  0017E6  2BA4               	incf	init_queue@i& (0+255),f,b
  3394                           
  3395                           ; BSR set to: 1
  3396  0017E8  0E03               	movlw	3
  3397  0017EA  0101               	movlb	1	; () banked
  3398  0017EC  0101               	movlb	1	; () banked
  3399  0017EE  65A4               	cpfsgt	init_queue@i& (0+255),b
  3400  0017F0  D7E8               	goto	l3712
  3401  0017F2  0012               	return	
  3402  0017F4                     __end_of_init_queue:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           indf1	equ	0xFE7
  3410                           fsr1h	equ	0xFE2
  3411                           fsr1l	equ	0xFE1
  3412                           indf2	equ	0xFDF
  3413                           postinc2	equ	0xFDE
  3414                           postdec2	equ	0xFDD
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _init_i2c *****************
  3420 ;; Defined at:
  3421 ;;		line 268 in file "src/my_i2c.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3424 ;;		 -> main@ic(28), 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;		None               void
  3429 ;; Registers used:
  3430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3436 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;Total ram usage:        2 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:   10
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text16
  3451  0018D4                     __ptext16:
  3452                           	opt stack 0
  3453  0018D4                     _init_i2c:
  3454                           	opt stack 19
  3455                           
  3456                           ;my_i2c.c: 269: ic_ptr = ic;
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;incstack = 0
  3460  0018D4  0101               	movlb	1	; () banked
  3461  0018D6  0100               	movlb	0	; () banked
  3462  0018D8  C1A3  F0CC         	movff	init_i2c@ic+1,_ic_ptr+1
  3463  0018DC  0101               	movlb	1	; () banked
  3464  0018DE  0100               	movlb	0	; () banked
  3465  0018E0  C1A2  F0CB         	movff	init_i2c@ic,_ic_ptr
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3469  0018E4  0100               	movlb	0	; () banked
  3470  0018E6  EE20 F00A          	lfsr	2,10
  3471  0018EA  0100               	movlb	0	; () banked
  3472  0018EC  51CB               	movf	_ic_ptr& (0+255),w,b
  3473  0018EE  26D9               	addwf	fsr2l,f,c
  3474  0018F0  0100               	movlb	0	; () banked
  3475  0018F2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3476  0018F4  22DA               	addwfc	fsr2h,f,c
  3477  0018F6  0E00               	movlw	0
  3478  0018F8  6EDF               	movwf	indf2,c
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3482  0018FA  0100               	movlb	0	; () banked
  3483  0018FC  EE20 F00B          	lfsr	2,11
  3484  001900  0100               	movlb	0	; () banked
  3485  001902  51CB               	movf	_ic_ptr& (0+255),w,b
  3486  001904  26D9               	addwf	fsr2l,f,c
  3487  001906  0100               	movlb	0	; () banked
  3488  001908  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3489  00190A  22DA               	addwfc	fsr2h,f,c
  3490  00190C  0E00               	movlw	0
  3491  00190E  6EDF               	movwf	indf2,c
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3495  001910  0100               	movlb	0	; () banked
  3496  001912  EE20 F00C          	lfsr	2,12
  3497  001916  0100               	movlb	0	; () banked
  3498  001918  51CB               	movf	_ic_ptr& (0+255),w,b
  3499  00191A  26D9               	addwf	fsr2l,f,c
  3500  00191C  0100               	movlb	0	; () banked
  3501  00191E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3502  001920  22DA               	addwfc	fsr2h,f,c
  3503  001922  0E05               	movlw	5
  3504  001924  6EDF               	movwf	indf2,c
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3508  001926  0100               	movlb	0	; () banked
  3509  001928  EE20 F00E          	lfsr	2,14
  3510  00192C  0100               	movlb	0	; () banked
  3511  00192E  51CB               	movf	_ic_ptr& (0+255),w,b
  3512  001930  26D9               	addwf	fsr2l,f,c
  3513  001932  0100               	movlb	0	; () banked
  3514  001934  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3515  001936  22DA               	addwfc	fsr2h,f,c
  3516  001938  0E00               	movlw	0
  3517  00193A  6EDF               	movwf	indf2,c
  3518                           
  3519                           ; BSR set to: 0
  3520  00193C  0012               	return	
  3521  00193E                     __end_of_init_i2c:
  3522                           	opt stack 0
  3523                           tblptru	equ	0xFF8
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           indf1	equ	0xFE7
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           postdec2	equ	0xFDD
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _i2c_configure_slave *****************
  3539 ;; Defined at:
  3540 ;;		line 279 in file "src/my_i2c.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  addr            1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  addr            1   51[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:        1 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:   10
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text17
  3569  001E54                     __ptext17:
  3570                           	opt stack 0
  3571  001E54                     _i2c_configure_slave:
  3572                           	opt stack 19
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;incstack = 0
  3576                           ;i2c_configure_slave@addr stored from wreg
  3577  001E54  CFE8 F0CA          	movff	wreg,i2c_configure_slave@addr
  3578                           
  3579                           ;my_i2c.c: 288: TRISBbits.TRISB4 = 1;
  3580  001E58  8893               	bsf	3987,4,c	;volatile
  3581                           
  3582                           ;my_i2c.c: 289: TRISBbits.TRISB5 = 1;
  3583  001E5A  8A93               	bsf	3987,5,c	;volatile
  3584                           
  3585                           ;my_i2c.c: 297: SSPADD = addr;
  3586  001E5C  C0CA  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3587                           
  3588                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3589  001E60  0E00               	movlw	0
  3590  001E62  6EC7               	movwf	4039,c	;volatile
  3591                           
  3592                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3593  001E64  0E00               	movlw	0
  3594  001E66  6EC6               	movwf	4038,c	;volatile
  3595                           
  3596                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3597  001E68  0E00               	movlw	0
  3598  001E6A  6EC5               	movwf	4037,c	;volatile
  3599                           
  3600                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3601  001E6C  0E0E               	movlw	14
  3602  001E6E  12C6               	iorwf	4038,f,c	;volatile
  3603                           
  3604                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3605  001E70  8EC7               	bsf	4039,7,c	;volatile
  3606                           
  3607                           ;my_i2c.c: 318: PORTBbits.SCL1 = 1;
  3608  001E72  8881               	bsf	3969,4,c	;volatile
  3609                           
  3610                           ;my_i2c.c: 319: PORTBbits.SDA1 = 1;
  3611  001E74  8A81               	bsf	3969,5,c	;volatile
  3612                           
  3613                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3614  001E76  80C5               	bsf	4037,0,c	;volatile
  3615                           
  3616                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3617  001E78  8AC6               	bsf	4038,5,c	;volatile
  3618  001E7A  0012               	return	
  3619  001E7C                     __end_of_i2c_configure_slave:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _enable_interrupts *****************
  3637 ;; Defined at:
  3638 ;;		line 14 in file "src/interrupts.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		None
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;Total ram usage:        0 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:   10
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text18
  3667  001FBE                     __ptext18:
  3668                           	opt stack 0
  3669  001FBE                     _enable_interrupts:
  3670                           	opt stack 19
  3671                           
  3672                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3673                           
  3674                           ;incstack = 0
  3675  001FBE  8ED0               	bsf	4048,7,c	;volatile
  3676                           
  3677                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3678  001FC0  8EF2               	bsf	intcon,7,c	;volatile
  3679                           
  3680                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3681  001FC2  8CF2               	bsf	intcon,6,c	;volatile
  3682  001FC4  0012               	return	
  3683  001FC6                     __end_of_enable_interrupts:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           indf1	equ	0xFE7
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           indf2	equ	0xFDF
  3695                           postinc2	equ	0xFDE
  3696                           postdec2	equ	0xFDD
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function _block_on_To_msgqueues *****************
  3702 ;; Defined at:
  3703 ;;		line 258 in file "src/messages.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;		None               void
  3710 ;; Registers used:
  3711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:   13
  3724 ;; This function calls:
  3725 ;;		_Delay1KTCYx
  3726 ;;		_check_msg
  3727 ;;		_in_main
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text19
  3734  001564                     __ptext19:
  3735                           	opt stack 0
  3736  001564                     _block_on_To_msgqueues:
  3737                           	opt stack 16
  3738                           
  3739                           ;messages.c: 259: if (!in_main()) {
  3740                           
  3741                           ;incstack = 0
  3742  001564  EC92  F00D         	call	_in_main	;wreg free
  3743  001568  0101               	movlb	1	; () banked
  3744  00156A  0101               	movlb	1	; () banked
  3745  00156C  51A7               	movf	(?_in_main+1)& (0+255),w,b
  3746  00156E  0101               	movlb	1	; () banked
  3747  001570  11A6               	iorwf	?_in_main& (0+255),w,b
  3748  001572  B4D8               	btfsc	status,2,c
  3749  001574  0012               	return	
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;messages.c: 261: }
  3753                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3754                           
  3755                           ; BSR set to: 1
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;messages.c: 260: return;
  3759  001576  0101               	movlb	1	; () banked
  3760  001578  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3761  00157A  0E01               	movlw	1
  3762  00157C  0100               	movlb	0	; () banked
  3763  00157E  0100               	movlb	0	; () banked
  3764  001580  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3765  001582  0101               	movlb	1	; () banked
  3766  001584  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3767  001586                     l3612:
  3768                           
  3769                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3770  001586  0101               	movlb	1	; () banked
  3771  001588  0E01               	movlw	high _ToMainHigh_MQ
  3772  00158A  0101               	movlb	1	; () banked
  3773  00158C  0101               	movlb	1	; () banked
  3774  00158E  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3775  001590  0101               	movlb	1	; () banked
  3776  001592  0E6C               	movlw	low _ToMainHigh_MQ
  3777  001594  0101               	movlb	1	; () banked
  3778  001596  0101               	movlb	1	; () banked
  3779  001598  6FA2               	movwf	check_msg@qptr& (0+255),b
  3780  00159A  ECAC  F00E         	call	_check_msg	;wreg free
  3781  00159E  0900               	iorlw	0
  3782  0015A0  B4D8               	btfsc	status,2,c
  3783  0015A2  D009               	goto	l3618
  3784                           
  3785                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3786  0015A4  0101               	movlb	1	; () banked
  3787  0015A6  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3788  0015A8  0E00               	movlw	0
  3789  0015AA  0100               	movlb	0	; () banked
  3790  0015AC  0100               	movlb	0	; () banked
  3791  0015AE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3792  0015B0  0101               	movlb	1	; () banked
  3793  0015B2  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3794  0015B4  0012               	return	
  3795  0015B6                     l3618:
  3796                           
  3797                           ;messages.c: 271: }
  3798                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3799  0015B6  0100               	movlb	0	; () banked
  3800  0015B8  0E00               	movlw	high _ToMainLow_MQ
  3801  0015BA  0101               	movlb	1	; () banked
  3802  0015BC  0101               	movlb	1	; () banked
  3803  0015BE  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3804  0015C0  0100               	movlb	0	; () banked
  3805  0015C2  0E61               	movlw	low _ToMainLow_MQ
  3806  0015C4  0101               	movlb	1	; () banked
  3807  0015C6  0101               	movlb	1	; () banked
  3808  0015C8  6FA2               	movwf	check_msg@qptr& (0+255),b
  3809  0015CA  ECAC  F00E         	call	_check_msg	;wreg free
  3810  0015CE  0900               	iorlw	0
  3811  0015D0  B4D8               	btfsc	status,2,c
  3812  0015D2  D009               	goto	l3624
  3813                           
  3814                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3815  0015D4  0101               	movlb	1	; () banked
  3816  0015D6  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3817  0015D8  0E00               	movlw	0
  3818  0015DA  0100               	movlb	0	; () banked
  3819  0015DC  0100               	movlb	0	; () banked
  3820  0015DE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3821  0015E0  0101               	movlb	1	; () banked
  3822  0015E2  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3823  0015E4  0012               	return	
  3824  0015E6                     l3624:
  3825                           
  3826                           ;messages.c: 278: }
  3827                           ;messages.c: 279: Delay1KTCYx(10);
  3828  0015E6  0E0A               	movlw	10
  3829  0015E8  EC95  F00F         	call	_Delay1KTCYx
  3830  0015EC  D7CC               	goto	l3612
  3831  0015EE                     __end_of_block_on_To_msgqueues:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           prodh	equ	0xFF4
  3835                           prodl	equ	0xFF3
  3836                           intcon	equ	0xFF2
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           indf1	equ	0xFE7
  3840                           fsr1h	equ	0xFE2
  3841                           fsr1l	equ	0xFE1
  3842                           indf2	equ	0xFDF
  3843                           postinc2	equ	0xFDE
  3844                           postdec2	equ	0xFDD
  3845                           fsr2h	equ	0xFDA
  3846                           fsr2l	equ	0xFD9
  3847                           status	equ	0xFD8
  3848                           
  3849 ;; *************** function _in_main *****************
  3850 ;; Defined at:
  3851 ;;		line 40 in file "src/interrupts.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2    4[BANK1 ] int 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3865 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;Total ram usage:        2 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:   12
  3872 ;; This function calls:
  3873 ;;		_in_high_int
  3874 ;;		_in_low_int
  3875 ;; This function is called by:
  3876 ;;		_block_on_To_msgqueues
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text20
  3881  001B24                     __ptext20:
  3882                           	opt stack 0
  3883  001B24                     _in_main:
  3884                           	opt stack 16
  3885                           
  3886                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3887                           
  3888                           ;incstack = 0
  3889  001B24  EC2A  F00D         	call	_in_low_int	;wreg free
  3890  001B28  0101               	movlb	1	; () banked
  3891  001B2A  0101               	movlb	1	; () banked
  3892  001B2C  51A5               	movf	(?_in_low_int+1)& (0+255),w,b
  3893  001B2E  0101               	movlb	1	; () banked
  3894  001B30  11A4               	iorwf	?_in_low_int& (0+255),w,b
  3895  001B32  A4D8               	btfss	status,2,c
  3896  001B34  D011               	goto	l3238
  3897                           
  3898                           ; BSR set to: 1
  3899  001B36  ECB2  F00F         	call	_in_high_int	;wreg free
  3900  001B3A  0101               	movlb	1	; () banked
  3901  001B3C  0101               	movlb	1	; () banked
  3902  001B3E  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  3903  001B40  0101               	movlb	1	; () banked
  3904  001B42  11A2               	iorwf	?_in_high_int& (0+255),w,b
  3905  001B44  A4D8               	btfss	status,2,c
  3906  001B46  D008               	goto	l3238
  3907                           
  3908                           ; BSR set to: 1
  3909                           ;interrupts.c: 42: return (1);
  3910  001B48  0E00               	movlw	0
  3911  001B4A  0101               	movlb	1	; () banked
  3912  001B4C  0101               	movlb	1	; () banked
  3913  001B4E  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3914  001B50  0E01               	movlw	1
  3915  001B52  0101               	movlb	1	; () banked
  3916  001B54  6FA6               	movwf	?_in_main& (0+255),b
  3917  001B56  0012               	return	
  3918  001B58                     l3238:
  3919                           
  3920                           ; BSR set to: 1
  3921                           ;interrupts.c: 44: return (0);
  3922  001B58  0E00               	movlw	0
  3923  001B5A  0101               	movlb	1	; () banked
  3924  001B5C  0101               	movlb	1	; () banked
  3925  001B5E  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3926  001B60  0E00               	movlw	0
  3927  001B62  0101               	movlb	1	; () banked
  3928  001B64  6FA6               	movwf	?_in_main& (0+255),b
  3929  001B66  0012               	return	
  3930  001B68                     __end_of_in_main:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           indf1	equ	0xFE7
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _in_low_int *****************
  3949 ;; Defined at:
  3950 ;;		line 30 in file "src/interrupts.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  2    2[BANK1 ] int 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:   11
  3971 ;; This function calls:
  3972 ;;		_in_high_int
  3973 ;; This function is called by:
  3974 ;;		_in_main
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text21
  3979  001A54                     __ptext21:
  3980                           	opt stack 0
  3981  001A54                     _in_low_int:
  3982                           	opt stack 16
  3983                           
  3984                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;incstack = 0
  3988  001A54  ACF2               	btfss	intcon,6,c	;volatile
  3989  001A56  D008               	goto	l3216
  3990                           
  3991                           ;interrupts.c: 32: return (0);
  3992  001A58  0E00               	movlw	0
  3993  001A5A  0101               	movlb	1	; () banked
  3994  001A5C  0101               	movlb	1	; () banked
  3995  001A5E  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  3996  001A60  0E00               	movlw	0
  3997  001A62  0101               	movlb	1	; () banked
  3998  001A64  6FA4               	movwf	?_in_low_int& (0+255),b
  3999  001A66  0012               	return	
  4000  001A68                     l3216:
  4001  001A68  ECB2  F00F         	call	_in_high_int	;wreg free
  4002  001A6C  0101               	movlb	1	; () banked
  4003  001A6E  0101               	movlb	1	; () banked
  4004  001A70  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  4005  001A72  0101               	movlb	1	; () banked
  4006  001A74  11A2               	iorwf	?_in_high_int& (0+255),w,b
  4007  001A76  B4D8               	btfsc	status,2,c
  4008  001A78  D008               	goto	l3224
  4009                           
  4010                           ; BSR set to: 1
  4011                           ;interrupts.c: 34: return (0);
  4012  001A7A  0E00               	movlw	0
  4013  001A7C  0101               	movlb	1	; () banked
  4014  001A7E  0101               	movlb	1	; () banked
  4015  001A80  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4016  001A82  0E00               	movlw	0
  4017  001A84  0101               	movlb	1	; () banked
  4018  001A86  6FA4               	movwf	?_in_low_int& (0+255),b
  4019  001A88  0012               	return	
  4020  001A8A                     l3224:
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;interrupts.c: 36: return (1);
  4024  001A8A  0E00               	movlw	0
  4025  001A8C  0101               	movlb	1	; () banked
  4026  001A8E  0101               	movlb	1	; () banked
  4027  001A90  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4028  001A92  0E01               	movlw	1
  4029  001A94  0101               	movlb	1	; () banked
  4030  001A96  6FA4               	movwf	?_in_low_int& (0+255),b
  4031  001A98  0012               	return	
  4032  001A9A                     __end_of_in_low_int:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           fsr1h	equ	0xFE2
  4042                           fsr1l	equ	0xFE1
  4043                           indf2	equ	0xFDF
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           fsr2h	equ	0xFDA
  4047                           fsr2l	equ	0xFD9
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function _in_high_int *****************
  4051 ;; Defined at:
  4052 ;;		line 22 in file "src/interrupts.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    0[BANK1 ] int 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4066 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:   10
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_in_low_int
  4077 ;;		_in_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text22
  4082  001F64                     __ptext22:
  4083                           	opt stack 0
  4084  001F64                     _in_high_int:
  4085                           	opt stack 16
  4086                           
  4087                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;incstack = 0
  4091  001F64  0E00               	movlw	0
  4092  001F66  AEF2               	btfss	intcon,7,c	;volatile
  4093  001F68  0E01               	movlw	1
  4094  001F6A  0101               	movlb	1	; () banked
  4095  001F6C  0101               	movlb	1	; () banked
  4096  001F6E  6FA2               	movwf	?_in_high_int& (0+255),b
  4097  001F70  0101               	movlb	1	; () banked
  4098  001F72  6BA3               	clrf	(?_in_high_int+1)& (0+255),b
  4099  001F74  0012               	return	
  4100  001F76                     __end_of_in_high_int:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           prodh	equ	0xFF4
  4104                           prodl	equ	0xFF3
  4105                           intcon	equ	0xFF2
  4106                           postinc0	equ	0xFEE
  4107                           wreg	equ	0xFE8
  4108                           indf1	equ	0xFE7
  4109                           fsr1h	equ	0xFE2
  4110                           fsr1l	equ	0xFE1
  4111                           indf2	equ	0xFDF
  4112                           postinc2	equ	0xFDE
  4113                           postdec2	equ	0xFDD
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function _check_msg *****************
  4119 ;; Defined at:
  4120 ;;		line 222 in file "src/messages.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4123 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      unsigned char 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4135 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4139 ;;Total ram usage:        3 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:   10
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_block_on_To_msgqueues
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text23
  4150  001D58                     __ptext23:
  4151                           	opt stack 0
  4152  001D58                     _check_msg:
  4153                           	opt stack 18
  4154                           
  4155                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4156                           
  4157                           ; BSR set to: 1
  4158                           ;incstack = 0
  4159  001D58  0101               	movlb	1	; () banked
  4160  001D5A  EE20 F035          	lfsr	2,53
  4161  001D5E  0101               	movlb	1	; () banked
  4162  001D60  51A2               	movf	check_msg@qptr& (0+255),w,b
  4163  001D62  26D9               	addwf	fsr2l,f,c
  4164  001D64  0101               	movlb	1	; () banked
  4165  001D66  51A3               	movf	(check_msg@qptr+1)& (0+255),w,b
  4166  001D68  22DA               	addwfc	fsr2h,f,c
  4167  001D6A  50DF               	movf	indf2,w,c
  4168  001D6C  0100               	movlb	0	; () banked
  4169  001D6E  6FCA               	movwf	??_check_msg& (0+255),b
  4170  001D70  0100               	movlb	0	; () banked
  4171  001D72  51CA               	movf	??_check_msg& (0+255),w,b
  4172  001D74  0D0D               	mullw	13
  4173  001D76  50F3               	movf	prodl,w,c
  4174  001D78  0101               	movlb	1	; () banked
  4175  001D7A  0101               	movlb	1	; () banked
  4176  001D7C  25A2               	addwf	check_msg@qptr& (0+255),w,b
  4177  001D7E  6ED9               	movwf	fsr2l,c
  4178  001D80  50F4               	movf	prodh,w,c
  4179  001D82  0101               	movlb	1	; () banked
  4180  001D84  0101               	movlb	1	; () banked
  4181  001D86  21A3               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4182  001D88  6EDA               	movwf	fsr2h,c
  4183  001D8A  50DF               	movf	indf2,w,c
  4184  001D8C  0012               	return	
  4185  001D8E                     __end_of_check_msg:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           indf1	equ	0xFE7
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _Delay1KTCYx *****************
  4204 ;; Defined at:
  4205 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  unit            1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  unit            1   51[BANK0 ] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:   10
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_block_on_To_msgqueues
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text24
  4234  001F2A                     __ptext24:
  4235                           	opt stack 0
  4236  001F2A                     _Delay1KTCYx:
  4237                           	opt stack 18
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;incstack = 0
  4241                           ;Delay1KTCYx@unit stored from wreg
  4242  001F2A  CFE8 F0CA          	movff	wreg,Delay1KTCYx@unit
  4243  001F2E                     l732:
  4244  001F2E  0EFA               	movlw	250
  4245  001F30                     u3017:
  4246  001F30  F000               	nop	
  4247  001F32  2EE8               	decfsz	wreg,f,c
  4248  001F34  D7FD               	goto	u3017
  4249  001F36  0100               	movlb	0	; () banked
  4250  001F38  0100               	movlb	0	; () banked
  4251  001F3A  2FCA               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4252  001F3C  D7F8               	goto	l732
  4253  001F3E  0012               	return	
  4254  001F40                     __end_of_Delay1KTCYx:
  4255                           	opt stack 0
  4256                           tblptru	equ	0xFF8
  4257                           prodh	equ	0xFF4
  4258                           prodl	equ	0xFF3
  4259                           intcon	equ	0xFF2
  4260                           postinc0	equ	0xFEE
  4261                           wreg	equ	0xFE8
  4262                           indf1	equ	0xFE7
  4263                           fsr1h	equ	0xFE2
  4264                           fsr1l	equ	0xFE1
  4265                           indf2	equ	0xFDF
  4266                           postinc2	equ	0xFDE
  4267                           postdec2	equ	0xFDD
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function _ToMainLow_recvmsg *****************
  4273 ;; Defined at:
  4274 ;;		line 112 in file "src/messages.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  maxlength       1    wreg     unsigned char 
  4277 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4278 ;;		 -> main@msgtype(1), 
  4279 ;;  data            2   26[BANK1 ] PTR void 
  4280 ;;		 -> main@msgbuffer(11), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      char 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4292 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;Total ram usage:        5 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:   12
  4299 ;; This function calls:
  4300 ;;		_recv_msg
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text25
  4307  001B68                     __ptext25:
  4308                           	opt stack 0
  4309  001B68                     _ToMainLow_recvmsg:
  4310                           	opt stack 17
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;incstack = 0
  4314                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4315  001B68  CFE8 F0CA          	movff	wreg,ToMainLow_recvmsg@maxlength
  4316                           
  4317                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4318  001B6C  0100               	movlb	0	; () banked
  4319  001B6E  0E00               	movlw	high _ToMainLow_MQ
  4320  001B70  0101               	movlb	1	; () banked
  4321  001B72  0101               	movlb	1	; () banked
  4322  001B74  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4323  001B76  0100               	movlb	0	; () banked
  4324  001B78  0E61               	movlw	low _ToMainLow_MQ
  4325  001B7A  0101               	movlb	1	; () banked
  4326  001B7C  0101               	movlb	1	; () banked
  4327  001B7E  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4328  001B80  C0CA  F1AE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4329  001B84  0101               	movlb	1	; () banked
  4330  001B86  0101               	movlb	1	; () banked
  4331  001B88  C1BB  F1B0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4332  001B8C  0101               	movlb	1	; () banked
  4333  001B8E  0101               	movlb	1	; () banked
  4334  001B90  C1BA  F1AF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4335  001B94  0101               	movlb	1	; () banked
  4336  001B96  0101               	movlb	1	; () banked
  4337  001B98  C1BD  F1B2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4338  001B9C  0101               	movlb	1	; () banked
  4339  001B9E  0101               	movlb	1	; () banked
  4340  001BA0  C1BC  F1B1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4341  001BA4  ECC5  F005         	call	_recv_msg	;wreg free
  4342  001BA8  0012               	return	
  4343  001BAA                     __end_of_ToMainLow_recvmsg:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           prodh	equ	0xFF4
  4347                           prodl	equ	0xFF3
  4348                           intcon	equ	0xFF2
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           indf1	equ	0xFE7
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _ToMainHigh_recvmsg *****************
  4362 ;; Defined at:
  4363 ;;		line 135 in file "src/messages.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  maxlength       1    wreg     unsigned char 
  4366 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4367 ;;		 -> main@msgtype(1), 
  4368 ;;  data            2   26[BANK1 ] PTR void 
  4369 ;;		 -> main@msgbuffer(11), 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      char 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4381 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;Total ram usage:        5 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:   12
  4388 ;; This function calls:
  4389 ;;		_recv_msg
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text26
  4396  001BAA                     __ptext26:
  4397                           	opt stack 0
  4398  001BAA                     _ToMainHigh_recvmsg:
  4399                           	opt stack 17
  4400                           
  4401                           ;incstack = 0
  4402                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4403  001BAA  CFE8 F0CA          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4404                           
  4405                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4406  001BAE  0101               	movlb	1	; () banked
  4407  001BB0  0E01               	movlw	high _ToMainHigh_MQ
  4408  001BB2  0101               	movlb	1	; () banked
  4409  001BB4  0101               	movlb	1	; () banked
  4410  001BB6  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4411  001BB8  0101               	movlb	1	; () banked
  4412  001BBA  0E6C               	movlw	low _ToMainHigh_MQ
  4413  001BBC  0101               	movlb	1	; () banked
  4414  001BBE  0101               	movlb	1	; () banked
  4415  001BC0  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4416  001BC2  C0CA  F1AE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4417  001BC6  0101               	movlb	1	; () banked
  4418  001BC8  0101               	movlb	1	; () banked
  4419  001BCA  C1BB  F1B0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4420  001BCE  0101               	movlb	1	; () banked
  4421  001BD0  0101               	movlb	1	; () banked
  4422  001BD2  C1BA  F1AF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4423  001BD6  0101               	movlb	1	; () banked
  4424  001BD8  0101               	movlb	1	; () banked
  4425  001BDA  C1BD  F1B2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4426  001BDE  0101               	movlb	1	; () banked
  4427  001BE0  0101               	movlb	1	; () banked
  4428  001BE2  C1BC  F1B1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4429  001BE6  ECC5  F005         	call	_recv_msg	;wreg free
  4430  001BEA  0012               	return	
  4431  001BEC                     __end_of_ToMainHigh_recvmsg:
  4432                           	opt stack 0
  4433                           tblptru	equ	0xFF8
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           postinc0	equ	0xFEE
  4438                           wreg	equ	0xFE8
  4439                           indf1	equ	0xFE7
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           indf2	equ	0xFDF
  4443                           postinc2	equ	0xFDE
  4444                           postdec2	equ	0xFDD
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _recv_msg *****************
  4450 ;; Defined at:
  4451 ;;		line 63 in file "src/messages.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4454 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4455 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4456 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4457 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4458 ;;  data            2   15[BANK1 ] PTR void 
  4459 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4462 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4463 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4464 ;;  tlength         2   20[BANK1 ] unsigned int 
  4465 ;;  slot            1   19[BANK1 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      char 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:       14 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   11
  4482 ;; This function calls:
  4483 ;;		_memcpy
  4484 ;; This function is called by:
  4485 ;;		_ToMainLow_recvmsg
  4486 ;;		_ToMainHigh_recvmsg
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text27
  4491  000B8A                     __ptext27:
  4492                           	opt stack 0
  4493  000B8A                     _recv_msg:
  4494                           	opt stack 17
  4495                           
  4496                           ;messages.c: 64: unsigned char slot;
  4497                           ;messages.c: 68: msg *qmsg;
  4498                           ;messages.c: 69: size_t tlength;
  4499                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4500                           
  4501                           ;incstack = 0
  4502  000B8A  0101               	movlb	1	; () banked
  4503  000B8C  EE20 F035          	lfsr	2,53
  4504  000B90  0101               	movlb	1	; () banked
  4505  000B92  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4506  000B94  26D9               	addwf	fsr2l,f,c
  4507  000B96  0101               	movlb	1	; () banked
  4508  000B98  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4509  000B9A  22DA               	addwfc	fsr2h,f,c
  4510  000B9C  50DF               	movf	indf2,w,c
  4511  000B9E  0101               	movlb	1	; () banked
  4512  000BA0  0101               	movlb	1	; () banked
  4513  000BA2  6FB5               	movwf	recv_msg@slot& (0+255),b
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4517  000BA4  0101               	movlb	1	; () banked
  4518  000BA6  0101               	movlb	1	; () banked
  4519  000BA8  51B5               	movf	recv_msg@slot& (0+255),w,b
  4520  000BAA  0D0D               	mullw	13
  4521  000BAC  50F3               	movf	prodl,w,c
  4522  000BAE  0101               	movlb	1	; () banked
  4523  000BB0  0101               	movlb	1	; () banked
  4524  000BB2  25AC               	addwf	recv_msg@qptr& (0+255),w,b
  4525  000BB4  0101               	movlb	1	; () banked
  4526  000BB6  0101               	movlb	1	; () banked
  4527  000BB8  6FB8               	movwf	recv_msg@qmsg& (0+255),b
  4528  000BBA  50F4               	movf	prodh,w,c
  4529  000BBC  0101               	movlb	1	; () banked
  4530  000BBE  0101               	movlb	1	; () banked
  4531  000BC0  21AD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4532  000BC2  0101               	movlb	1	; () banked
  4533  000BC4  6FB9               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;messages.c: 74: if (qmsg->full == 1) {
  4537  000BC6  0E01               	movlw	1
  4538  000BC8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4539  000BCC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4540  000BD0  62DF               	cpfseq	indf2,c
  4541  000BD2  D074               	goto	l3780
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4545  000BD4  0101               	movlb	1	; () banked
  4546  000BD6  EE20 F001          	lfsr	2,1
  4547  000BDA  0101               	movlb	1	; () banked
  4548  000BDC  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4549  000BDE  26D9               	addwf	fsr2l,f,c
  4550  000BE0  0101               	movlb	1	; () banked
  4551  000BE2  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4552  000BE4  22DA               	addwfc	fsr2h,f,c
  4553  000BE6  50DF               	movf	indf2,w,c
  4554  000BE8  0101               	movlb	1	; () banked
  4555  000BEA  0101               	movlb	1	; () banked
  4556  000BEC  5DAE               	subwf	recv_msg@maxlength& (0+255),w,b
  4557  000BEE  B0D8               	btfsc	status,0,c
  4558  000BF0  D002               	goto	l3764
  4559                           
  4560                           ; BSR set to: 1
  4561                           ;messages.c: 77: return (-3);
  4562  000BF2  0EFD               	movlw	253
  4563  000BF4  0012               	return	
  4564  000BF6                     l3764:
  4565                           
  4566                           ; BSR set to: 1
  4567                           ;messages.c: 78: }
  4568                           ;messages.c: 80: tlength = qmsg->length;
  4569  000BF6  0101               	movlb	1	; () banked
  4570  000BF8  EE20 F001          	lfsr	2,1
  4571  000BFC  0101               	movlb	1	; () banked
  4572  000BFE  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4573  000C00  26D9               	addwf	fsr2l,f,c
  4574  000C02  0101               	movlb	1	; () banked
  4575  000C04  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4576  000C06  22DA               	addwfc	fsr2h,f,c
  4577  000C08  50DF               	movf	indf2,w,c
  4578  000C0A  0101               	movlb	1	; () banked
  4579  000C0C  6FB3               	movwf	??_recv_msg& (0+255),b
  4580  000C0E  0101               	movlb	1	; () banked
  4581  000C10  51B3               	movf	??_recv_msg& (0+255),w,b
  4582  000C12  0101               	movlb	1	; () banked
  4583  000C14  0101               	movlb	1	; () banked
  4584  000C16  6FB6               	movwf	recv_msg@tlength& (0+255),b
  4585  000C18  0101               	movlb	1	; () banked
  4586  000C1A  6BB7               	clrf	(recv_msg@tlength+1)& (0+255),b
  4587                           
  4588                           ; BSR set to: 1
  4589                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4590  000C1C  0101               	movlb	1	; () banked
  4591  000C1E  0101               	movlb	1	; () banked
  4592  000C20  C1B2  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  4593  000C24  0101               	movlb	1	; () banked
  4594  000C26  0101               	movlb	1	; () banked
  4595  000C28  C1B1  F1A2         	movff	recv_msg@data,memcpy@d1
  4596  000C2C  0E03               	movlw	3
  4597  000C2E  0101               	movlb	1	; () banked
  4598  000C30  0101               	movlb	1	; () banked
  4599  000C32  25B8               	addwf	recv_msg@qmsg& (0+255),w,b
  4600  000C34  0101               	movlb	1	; () banked
  4601  000C36  6FB3               	movwf	??_recv_msg& (0+255),b
  4602  000C38  0E00               	movlw	0
  4603  000C3A  0101               	movlb	1	; () banked
  4604  000C3C  0101               	movlb	1	; () banked
  4605  000C3E  21B9               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4606  000C40  0101               	movlb	1	; () banked
  4607  000C42  6FB4               	movwf	(??_recv_msg+1)& (0+255),b
  4608  000C44  C1B3  F1A4         	movff	??_recv_msg,memcpy@s1
  4609  000C48  C1B4  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  4610  000C4C  C1B6  F1A6         	movff	recv_msg@tlength,memcpy@n
  4611  000C50  C1B7  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  4612  000C54  EC9F  F00C         	call	_memcpy	;wreg free
  4613                           
  4614                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4615  000C58  0101               	movlb	1	; () banked
  4616  000C5A  EE20 F035          	lfsr	2,53
  4617  000C5E  0101               	movlb	1	; () banked
  4618  000C60  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4619  000C62  26D9               	addwf	fsr2l,f,c
  4620  000C64  0101               	movlb	1	; () banked
  4621  000C66  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4622  000C68  22DA               	addwfc	fsr2h,f,c
  4623  000C6A  0101               	movlb	1	; () banked
  4624  000C6C  EE10 F035          	lfsr	1,53
  4625  000C70  0101               	movlb	1	; () banked
  4626  000C72  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4627  000C74  26E1               	addwf	fsr1l,f,c
  4628  000C76  0101               	movlb	1	; () banked
  4629  000C78  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4630  000C7A  22E2               	addwfc	fsr1h,f,c
  4631  000C7C  50E7               	movf	indf1,w,c
  4632  000C7E  0101               	movlb	1	; () banked
  4633  000C80  6FB3               	movwf	??_recv_msg& (0+255),b
  4634  000C82  0101               	movlb	1	; () banked
  4635  000C84  29B3               	incf	??_recv_msg& (0+255),w,b
  4636  000C86  0B03               	andlw	3
  4637  000C88  6EDF               	movwf	indf2,c
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4641  000C8A  0101               	movlb	1	; () banked
  4642  000C8C  EE20 F002          	lfsr	2,2
  4643  000C90  0101               	movlb	1	; () banked
  4644  000C92  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4645  000C94  26D9               	addwf	fsr2l,f,c
  4646  000C96  0101               	movlb	1	; () banked
  4647  000C98  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4648  000C9A  22DA               	addwfc	fsr2h,f,c
  4649  000C9C  C1AF  FFE1         	movff	recv_msg@msgtype,fsr1l
  4650  000CA0  C1B0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4651  000CA4  CFDF FFE7          	movff	indf2,indf1
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;messages.c: 91: qmsg->full = 0;
  4655  000CA8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4656  000CAC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4657  000CB0  0E00               	movlw	0
  4658  000CB2  6EDF               	movwf	indf2,c
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;messages.c: 92: return (tlength);
  4662  000CB4  0101               	movlb	1	; () banked
  4663  000CB6  0101               	movlb	1	; () banked
  4664  000CB8  51B6               	movf	recv_msg@tlength& (0+255),w,b
  4665  000CBA  0012               	return	
  4666  000CBC                     l3780:
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;messages.c: 94: return (-4);
  4670  000CBC  0EFC               	movlw	252
  4671  000CBE  0012               	return	
  4672  000CC0                     __end_of_recv_msg:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           postinc0	equ	0xFEE
  4679                           wreg	equ	0xFE8
  4680                           indf1	equ	0xFE7
  4681                           fsr1h	equ	0xFE2
  4682                           fsr1l	equ	0xFE1
  4683                           indf2	equ	0xFDF
  4684                           postinc2	equ	0xFDE
  4685                           postdec2	equ	0xFDD
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _memcpy *****************
  4691 ;; Defined at:
  4692 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  d1              2    0[BANK1 ] PTR void 
  4695 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4696 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4697 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4698 ;;  s1              2    2[BANK1 ] PTR const void 
  4699 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4700 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4701 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4702 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4703 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4704 ;;  n               2    4[BANK1 ] unsigned int 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4707 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4708 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4709 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4710 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4711 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4712 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4713 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4714 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4715 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2    0[BANK1 ] PTR void 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4725 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;Total ram usage:       10 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:   10
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_send_msg
  4736 ;;		_recv_msg
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text28
  4741  00193E                     __ptext28:
  4742                           	opt stack 0
  4743  00193E                     _memcpy:
  4744                           	opt stack 16
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;incstack = 0
  4748  00193E  0101               	movlb	1	; () banked
  4749  001940  0101               	movlb	1	; () banked
  4750  001942  C1A5  F1AB         	movff	memcpy@s1+1,memcpy@s+1
  4751  001946  0101               	movlb	1	; () banked
  4752  001948  0101               	movlb	1	; () banked
  4753  00194A  C1A4  F1AA         	movff	memcpy@s1,memcpy@s
  4754  00194E  0101               	movlb	1	; () banked
  4755  001950  0101               	movlb	1	; () banked
  4756  001952  C1A3  F1A9         	movff	memcpy@d1+1,memcpy@d+1
  4757  001956  0101               	movlb	1	; () banked
  4758  001958  0101               	movlb	1	; () banked
  4759  00195A  C1A2  F1A8         	movff	memcpy@d1,memcpy@d
  4760  00195E  D012               	goto	l3750
  4761  001960                     l3744:
  4762                           
  4763                           ; BSR set to: 1
  4764  001960  C1AA  FFD9         	movff	memcpy@s,fsr2l
  4765  001964  C1AB  FFDA         	movff	memcpy@s+1,fsr2h
  4766  001968  C1A8  FFE1         	movff	memcpy@d,fsr1l
  4767  00196C  C1A9  FFE2         	movff	memcpy@d+1,fsr1h
  4768  001970  CFDF FFE7          	movff	indf2,indf1
  4769                           
  4770                           ; BSR set to: 1
  4771  001974  0101               	movlb	1	; () banked
  4772  001976  0101               	movlb	1	; () banked
  4773  001978  4BAA               	infsnz	memcpy@s& (0+255),f,b
  4774  00197A  2BAB               	incf	(memcpy@s+1)& (0+255),f,b
  4775                           
  4776                           ; BSR set to: 1
  4777  00197C  0101               	movlb	1	; () banked
  4778  00197E  0101               	movlb	1	; () banked
  4779  001980  4BA8               	infsnz	memcpy@d& (0+255),f,b
  4780  001982  2BA9               	incf	(memcpy@d+1)& (0+255),f,b
  4781  001984                     l3750:
  4782                           
  4783                           ; BSR set to: 1
  4784  001984  0101               	movlb	1	; () banked
  4785  001986  0101               	movlb	1	; () banked
  4786  001988  07A6               	decf	memcpy@n& (0+255),f,b
  4787  00198A  A0D8               	btfss	status,0,c
  4788  00198C  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  4789  00198E  0101               	movlb	1	; () banked
  4790  001990  29A6               	incf	memcpy@n& (0+255),w,b
  4791  001992  B4D8               	btfsc	status,2,c
  4792  001994  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  4793  001996  B4D8               	btfsc	status,2,c
  4794                           
  4795                           ; BSR set to: 1
  4796                           
  4797                           ; BSR set to: 1
  4798                           ;	Return value of _memcpy is never used
  4799  001998  0012               	return	
  4800  00199A  D7E2               	goto	l3744
  4801  00199C                     __end_of_memcpy:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           indf1	equ	0xFE7
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           indf2	equ	0xFDF
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819 ;; *************** function _OpenTimer1 *****************
  4820 ;; Defined at:
  4821 ;;		line 43 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  config          1    wreg     unsigned char 
  4824 ;;  config1         1   51[BANK0 ] unsigned char 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  config          1    1[BANK1 ] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4836 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;Total ram usage:        3 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:   10
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text29
  4851  001C2E                     __ptext29:
  4852                           	opt stack 0
  4853  001C2E                     _OpenTimer1:
  4854                           	opt stack 19
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;incstack = 0
  4858                           ;OpenTimer1@config stored from wreg
  4859  001C2E  CFE8 F1A3          	movff	wreg,OpenTimer1@config
  4860  001C32  0100               	movlb	0	; () banked
  4861  001C34  0100               	movlb	0	; () banked
  4862  001C36  51CA               	movf	OpenTimer1@config1& (0+255),w,b
  4863  001C38  0BF3               	andlw	243
  4864  001C3A  6E9A               	movwf	3994,c	;volatile
  4865  001C3C  C1A3  F1A2         	movff	OpenTimer1@config,??_OpenTimer1
  4866  001C40  0E7F               	movlw	127
  4867  001C42  0101               	movlb	1	; () banked
  4868  001C44  17A2               	andwf	??_OpenTimer1& (0+255),f,b
  4869  001C46  0101               	movlb	1	; () banked
  4870  001C48  90D8               	bcf	status,0,c
  4871  001C4A  35A2               	rlcf	??_OpenTimer1& (0+255),w,b
  4872  001C4C  6ECD               	movwf	4045,c	;volatile
  4873                           
  4874                           ; BSR set to: 1
  4875  001C4E  0E00               	movlw	0
  4876  001C50  6ECF               	movwf	4047,c	;volatile
  4877                           
  4878                           ; BSR set to: 1
  4879  001C52  0E00               	movlw	0
  4880  001C54  6ECE               	movwf	4046,c	;volatile
  4881                           
  4882                           ; BSR set to: 1
  4883  001C56  909E               	bcf	3998,0,c	;volatile
  4884                           
  4885                           ; BSR set to: 1
  4886  001C58  0101               	movlb	1	; () banked
  4887  001C5A  0101               	movlb	1	; () banked
  4888  001C5C  AFA3               	btfss	OpenTimer1@config& (0+255),7,b
  4889  001C5E  D002               	goto	l461
  4890                           
  4891                           ; BSR set to: 1
  4892  001C60  809D               	bsf	3997,0,c	;volatile
  4893  001C62  D001               	goto	l462
  4894  001C64                     l461:
  4895                           
  4896                           ; BSR set to: 1
  4897  001C64  909D               	bcf	3997,0,c	;volatile
  4898  001C66                     l462:
  4899                           
  4900                           ; BSR set to: 1
  4901  001C66  BE9A               	btfsc	3994,7,c	;volatile
  4902                           
  4903                           ; BSR set to: 1
  4904  001C68  869A               	bsf	3994,3,c	;volatile
  4905                           
  4906                           ; BSR set to: 1
  4907  001C6A  80CD               	bsf	4045,0,c	;volatile
  4908                           
  4909                           ; BSR set to: 1
  4910  001C6C  0012               	return	
  4911  001C6E                     __end_of_OpenTimer1:
  4912                           	opt stack 0
  4913                           tblptru	equ	0xFF8
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           intcon	equ	0xFF2
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           indf1	equ	0xFE7
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _OpenTimer0 *****************
  4930 ;; Defined at:
  4931 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  config          1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  config          1   51[BANK0 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;Total ram usage:        1 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:   10
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text30
  4960  001E2A                     __ptext30:
  4961                           	opt stack 0
  4962  001E2A                     _OpenTimer0:
  4963                           	opt stack 19
  4964                           
  4965                           ; BSR set to: 1
  4966                           ;incstack = 0
  4967                           ;OpenTimer0@config stored from wreg
  4968  001E2A  CFE8 F0CA          	movff	wreg,OpenTimer0@config
  4969  001E2E  0100               	movlb	0	; () banked
  4970  001E30  0100               	movlb	0	; () banked
  4971  001E32  51CA               	movf	OpenTimer0@config& (0+255),w,b
  4972  001E34  0B7F               	andlw	127
  4973  001E36  6ED5               	movwf	4053,c	;volatile
  4974                           
  4975                           ; BSR set to: 0
  4976  001E38  0E00               	movlw	0
  4977  001E3A  6ED7               	movwf	4055,c	;volatile
  4978                           
  4979                           ; BSR set to: 0
  4980  001E3C  0E00               	movlw	0
  4981  001E3E  6ED6               	movwf	4054,c	;volatile
  4982                           
  4983                           ; BSR set to: 0
  4984  001E40  94F2               	bcf	intcon,2,c	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987  001E42  0100               	movlb	0	; () banked
  4988  001E44  0100               	movlb	0	; () banked
  4989  001E46  AFCA               	btfss	OpenTimer0@config& (0+255),7,b
  4990  001E48  D002               	goto	l433
  4991                           
  4992                           ; BSR set to: 0
  4993  001E4A  8AF2               	bsf	intcon,5,c	;volatile
  4994  001E4C  D001               	goto	l434
  4995  001E4E                     l433:
  4996                           
  4997                           ; BSR set to: 0
  4998  001E4E  9AF2               	bcf	intcon,5,c	;volatile
  4999  001E50                     l434:
  5000                           
  5001                           ; BSR set to: 0
  5002  001E50  8ED5               	bsf	4053,7,c	;volatile
  5003                           
  5004                           ; BSR set to: 0
  5005  001E52  0012               	return	
  5006  001E54                     __end_of_OpenTimer0:
  5007                           	opt stack 0
  5008                           tblptru	equ	0xFF8
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           fsr1h	equ	0xFE2
  5016                           fsr1l	equ	0xFE1
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _Open1USART *****************
  5025 ;; Defined at:
  5026 ;;		line 124 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  config          1    wreg     unsigned char 
  5029 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  config          1   51[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;Total ram usage:        6 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:   10
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text31
  5056  0016FA                     __ptext31:
  5057                           	opt stack 0
  5058  0016FA                     _Open1USART:
  5059                           	opt stack 19
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;incstack = 0
  5063                           ;Open1USART@config stored from wreg
  5064  0016FA  CFE8 F0CA          	movff	wreg,Open1USART@config
  5065  0016FE  0E00               	movlw	0
  5066  001700  6EAD               	movwf	4013,c	;volatile
  5067  001702  0E00               	movlw	0
  5068  001704  6EAC               	movwf	4012,c	;volatile
  5069  001706  0100               	movlb	0	; () banked
  5070  001708  0100               	movlb	0	; () banked
  5071  00170A  B1CA               	btfsc	Open1USART@config& (0+255),0,b
  5072                           
  5073                           ; BSR set to: 0
  5074  00170C  88AD               	bsf	4013,4,c	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ; BSR set to: 0
  5079  00170E  0100               	movlb	0	; () banked
  5080  001710  0100               	movlb	0	; () banked
  5081  001712  A3CA               	btfss	Open1USART@config& (0+255),1,b
  5082  001714  D002               	goto	l3554
  5083                           
  5084                           ; BSR set to: 0
  5085  001716  8CAD               	bsf	4013,6,c	;volatile
  5086  001718  8CAC               	bsf	4012,6,c	;volatile
  5087  00171A                     l3554:
  5088                           
  5089                           ; BSR set to: 0
  5090  00171A  0100               	movlb	0	; () banked
  5091  00171C  0100               	movlb	0	; () banked
  5092  00171E  B5CA               	btfsc	Open1USART@config& (0+255),2,b
  5093                           
  5094                           ; BSR set to: 0
  5095  001720  8EAD               	bsf	4013,7,c	;volatile
  5096                           
  5097                           ; BSR set to: 0
  5098                           
  5099                           ; BSR set to: 0
  5100  001722  0100               	movlb	0	; () banked
  5101  001724  0100               	movlb	0	; () banked
  5102  001726  A7CA               	btfss	Open1USART@config& (0+255),3,b
  5103  001728  D002               	goto	l500
  5104                           
  5105                           ; BSR set to: 0
  5106  00172A  88AC               	bsf	4012,4,c	;volatile
  5107  00172C  D001               	goto	l3562
  5108  00172E                     l500:
  5109                           
  5110                           ; BSR set to: 0
  5111  00172E  8AAC               	bsf	4012,5,c	;volatile
  5112  001730                     l3562:
  5113                           
  5114                           ; BSR set to: 0
  5115  001730  0100               	movlb	0	; () banked
  5116  001732  0100               	movlb	0	; () banked
  5117  001734  B9CA               	btfsc	Open1USART@config& (0+255),4,b
  5118                           
  5119                           ; BSR set to: 0
  5120  001736  84AD               	bsf	4013,2,c	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           
  5124                           ; BSR set to: 0
  5125  001738  0100               	movlb	0	; () banked
  5126  00173A  0100               	movlb	0	; () banked
  5127  00173C  BBCA               	btfsc	Open1USART@config& (0+255),5,b
  5128                           
  5129                           ; BSR set to: 0
  5130  00173E  86AC               	bsf	4012,3,c	;volatile
  5131                           
  5132                           ; BSR set to: 0
  5133                           
  5134                           ; BSR set to: 0
  5135  001740  0100               	movlb	0	; () banked
  5136  001742  0100               	movlb	0	; () banked
  5137  001744  ADCA               	btfss	Open1USART@config& (0+255),6,b
  5138  001746  D002               	goto	l504
  5139                           
  5140                           ; BSR set to: 0
  5141  001748  8A9D               	bsf	3997,5,c	;volatile
  5142  00174A  D001               	goto	l3574
  5143  00174C                     l504:
  5144                           
  5145                           ; BSR set to: 0
  5146  00174C  9A9D               	bcf	3997,5,c	;volatile
  5147  00174E                     l3574:
  5148                           
  5149                           ; BSR set to: 0
  5150  00174E  0100               	movlb	0	; () banked
  5151  001750  0100               	movlb	0	; () banked
  5152  001752  AFCA               	btfss	Open1USART@config& (0+255),7,b
  5153  001754  D002               	goto	l506
  5154                           
  5155                           ; BSR set to: 0
  5156  001756  889D               	bsf	3997,4,c	;volatile
  5157  001758  D001               	goto	l507
  5158  00175A                     l506:
  5159                           
  5160                           ; BSR set to: 0
  5161  00175A  989D               	bcf	3997,4,c	;volatile
  5162  00175C                     l507:
  5163                           
  5164                           ; BSR set to: 0
  5165  00175C  C1A2  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168  001760  0101               	movlb	1	; () banked
  5169  001762  C1A3  F1A4         	movff	Open1USART@spbrg+1,??_Open1USART
  5170  001766  C1A4  F1A5         	movff	??_Open1USART,??_Open1USART+1
  5171  00176A  0101               	movlb	1	; () banked
  5172  00176C  6BA6               	clrf	(??_Open1USART+2)& (0+255),b
  5173  00176E  0101               	movlb	1	; () banked
  5174  001770  51A5               	movf	(??_Open1USART+1)& (0+255),w,b
  5175  001772  6E7F               	movwf	3967,c	;volatile
  5176                           
  5177                           ; BSR set to: 1
  5178  001774  8AAD               	bsf	4013,5,c	;volatile
  5179                           
  5180                           ; BSR set to: 1
  5181  001776  8EAC               	bsf	4012,7,c	;volatile
  5182                           
  5183                           ; BSR set to: 1
  5184  001778  0012               	return	
  5185  00177A                     __end_of_Open1USART:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           indf1	equ	0xFE7
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _InterruptHandlerLow *****************
  5204 ;; Defined at:
  5205 ;;		line 122 in file "src/interrupts.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;		None               void
  5212 ;; Registers used:
  5213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:       17 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    9
  5226 ;; This function calls:
  5227 ;;		_timer1_int_handler
  5228 ;;		_uart_recv_int_handler
  5229 ;;		_uart_trans_int_handler
  5230 ;; This function is called by:
  5231 ;;		Interrupt level 1
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	intcodelo
  5236  000018                     __pintcodelo:
  5237                           	opt stack 0
  5238  000018                     _InterruptHandlerLow:
  5239                           	opt stack 15
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;incstack = 0
  5243  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  5244  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  5245  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  5246  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  5247  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  5248  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  5249  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  5250  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  5251  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  5252  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  5253  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  5254  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  5255  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  5256  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  5257  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  5258  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  5259  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  5260                           
  5261                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5262  00005C  A09E               	btfss	3998,0,c	;volatile
  5263  00005E  D003               	goto	i1l4062
  5264                           
  5265                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5266  000060  909E               	bcf	3998,0,c	;volatile
  5267                           
  5268                           ;interrupts.c: 126: timer1_int_handler();
  5269  000062  ECFD  F00E         	call	_timer1_int_handler	;wreg free
  5270  000066                     i1l4062:
  5271                           
  5272                           ;interrupts.c: 127: }
  5273                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5274  000066  AA9E               	btfss	3998,5,c	;volatile
  5275  000068  D003               	goto	i1l4068
  5276                           
  5277                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5278  00006A  9A9E               	bcf	3998,5,c	;volatile
  5279                           
  5280                           ;interrupts.c: 132: uart_recv_int_handler();
  5281  00006C  EC1F  F00A         	call	_uart_recv_int_handler	;wreg free
  5282  000070                     i1l4068:
  5283                           
  5284                           ;interrupts.c: 133: }
  5285                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5286  000070  B89E               	btfsc	3998,4,c	;volatile
  5287  000072  A89D               	btfss	3997,4,c	;volatile
  5288  000074  D002               	goto	i1l52
  5289                           
  5290                           ;interrupts.c: 137: uart_trans_int_handler();
  5291  000076  ECFD  F00C         	call	_uart_trans_int_handler	;wreg free
  5292  00007A                     i1l52:
  5293  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5294  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5295  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5296  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5297  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5298  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5299  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5300  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5301  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5302  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5303  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5304  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5305  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5306  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5307  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5308  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5309  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  5310  0000BE  0010               	retfie	
  5311  0000C0                     __end_of_InterruptHandlerLow:
  5312                           	opt stack 0
  5313                           pclatu	equ	0xFFB
  5314                           pclath	equ	0xFFA
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           fsr0h	equ	0xFEA
  5324                           fsr0l	equ	0xFE9
  5325                           wreg	equ	0xFE8
  5326                           indf1	equ	0xFE7
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           bsr	equ	0xFE0
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _uart_trans_int_handler *****************
  5338 ;; Defined at:
  5339 ;;		line 11 in file "src/my_uart.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  data            2   30[COMRAM] PTR unsigned char 
  5344 ;;		 -> NULL(0), 
  5345 ;;  length          1   34[COMRAM] char 
  5346 ;;  msgtype         1   33[COMRAM] unsigned char 
  5347 ;;  curIndex        1   32[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;		None               void
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;Total ram usage:        6 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    8
  5364 ;; This function calls:
  5365 ;;		_FromMainLow_recvmsg
  5366 ;; This function is called by:
  5367 ;;		_InterruptHandlerLow
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text33
  5372  0019FA                     __ptext33:
  5373                           	opt stack 0
  5374  0019FA                     _uart_trans_int_handler:
  5375                           	opt stack 15
  5376                           
  5377                           ;my_uart.c: 13: unsigned char* data = (0);
  5378                           
  5379                           ;incstack = 0
  5380  0019FA  0E00               	movlw	0
  5381  0019FC  6E20               	movwf	uart_trans_int_handler@data+1,c
  5382  0019FE  0E00               	movlw	0
  5383  001A00  6E1F               	movwf	uart_trans_int_handler@data,c
  5384                           
  5385                           ;my_uart.c: 14: unsigned char msgtype;
  5386                           ;my_uart.c: 15: unsigned char curIndex;
  5387                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5388  001A02  0E00               	movlw	high uart_trans_int_handler@msgtype
  5389  001A04  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5390  001A06  0E22               	movlw	low uart_trans_int_handler@msgtype
  5391  001A08  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5392  001A0A  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5393  001A0E  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5394  001A12  0E0A               	movlw	10
  5395  001A14  EC3E  F00F         	call	_FromMainLow_recvmsg
  5396  001A18  6E23               	movwf	uart_trans_int_handler@length,c
  5397                           
  5398                           ;my_uart.c: 17: if (length < 0) {
  5399  001A1A  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5400  001A1C  D019               	goto	i1l342
  5401                           
  5402                           ;my_uart.c: 26: curIndex = 0;
  5403                           
  5404                           ;my_uart.c: 24: }
  5405                           ;my_uart.c: 25: } else {
  5406                           
  5407                           ;my_uart.c: 22: else{
  5408                           
  5409                           ;my_uart.c: 21: }
  5410  001A1E  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5411  001A20  0E00               	movlw	0
  5412  001A22  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5413  001A24  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5414                           
  5415                           ;my_uart.c: 27: while(curIndex < length){
  5416  001A26  D00D               	goto	i1l4054
  5417  001A28                     i1l345:
  5418  001A28  A2AD               	btfss	4013,1,c	;volatile
  5419  001A2A  D7FE               	goto	i1l345
  5420                           
  5421                           ;my_uart.c: 30: TXREG1 = data[curIndex];
  5422  001A2C  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5423  001A2E  0D01               	mullw	1
  5424  001A30  50F3               	movf	prodl,w,c
  5425  001A32  241F               	addwf	uart_trans_int_handler@data,w,c
  5426  001A34  6ED9               	movwf	fsr2l,c
  5427  001A36  50F4               	movf	prodh,w,c
  5428  001A38  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5429  001A3A  6EDA               	movwf	fsr2h,c
  5430  001A3C  50DF               	movf	indf2,w,c
  5431  001A3E  6EAE               	movwf	4014,c	;volatile
  5432                           
  5433                           ;my_uart.c: 35: curIndex++;
  5434  001A40  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5435  001A42                     i1l4054:
  5436  001A42  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5437  001A44  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5438  001A46  D004               	goto	i1l342
  5439  001A48  0AFF               	xorlw	255
  5440  001A4A  2423               	addwf	uart_trans_int_handler@length,w,c
  5441  001A4C  B0D8               	btfsc	status,0,c
  5442  001A4E  D7EC               	goto	i1l345
  5443  001A50                     i1l342:
  5444                           
  5445                           ;my_uart.c: 36: }
  5446                           ;my_uart.c: 37: }
  5447                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5448  001A50  989D               	bcf	3997,4,c	;volatile
  5449  001A52  0012               	return	
  5450  001A54                     __end_of_uart_trans_int_handler:
  5451                           	opt stack 0
  5452                           pclatu	equ	0xFFB
  5453                           pclath	equ	0xFFA
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           fsr0h	equ	0xFEA
  5463                           fsr0l	equ	0xFE9
  5464                           wreg	equ	0xFE8
  5465                           indf1	equ	0xFE7
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           bsr	equ	0xFE0
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function _FromMainLow_recvmsg *****************
  5477 ;; Defined at:
  5478 ;;		line 159 in file "src/messages.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  maxlength       1    wreg     unsigned char 
  5481 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5482 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5483 ;;  data            2   26[COMRAM] PTR void 
  5484 ;;		 -> NULL(0), 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  maxlength       1   28[COMRAM] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      char 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;Total ram usage:        5 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    7
  5503 ;; This function calls:
  5504 ;;		i1_recv_msg
  5505 ;; This function is called by:
  5506 ;;		_uart_trans_int_handler
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text34
  5511  001E7C                     __ptext34:
  5512                           	opt stack 0
  5513  001E7C                     _FromMainLow_recvmsg:
  5514                           	opt stack 15
  5515                           
  5516                           ;incstack = 0
  5517                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5518  001E7C  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5519                           
  5520                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5521  001E80  0101               	movlb	1	; () banked
  5522  001E82  0E01               	movlw	high _FromMainLow_MQ
  5523  001E84  6E0C               	movwf	i1recv_msg@qptr+1,c
  5524  001E86  0101               	movlb	1	; () banked
  5525  001E88  0E36               	movlw	low _FromMainLow_MQ
  5526  001E8A  6E0B               	movwf	i1recv_msg@qptr,c
  5527  001E8C  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5528  001E90  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5529  001E94  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5530  001E98  6A11               	clrf	i1recv_msg@data+1,c
  5531  001E9A  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5532  001E9E  ECFB  F008         	call	i1_recv_msg	;wreg free
  5533  001EA2  0012               	return	
  5534  001EA4                     __end_of_FromMainLow_recvmsg:
  5535                           	opt stack 0
  5536                           pclatu	equ	0xFFB
  5537                           pclath	equ	0xFFA
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           postinc0	equ	0xFEE
  5546                           fsr0h	equ	0xFEA
  5547                           fsr0l	equ	0xFE9
  5548                           wreg	equ	0xFE8
  5549                           indf1	equ	0xFE7
  5550                           fsr1h	equ	0xFE2
  5551                           fsr1l	equ	0xFE1
  5552                           bsr	equ	0xFE0
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           postdec2	equ	0xFDD
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function i1_recv_msg *****************
  5561 ;; Defined at:
  5562 ;;		line 63 in file "src/messages.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5565 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5566 ;;  maxlength       1   12[COMRAM] unsigned char 
  5567 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5568 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5569 ;;  data            2   15[COMRAM] PTR void 
  5570 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5573 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5574 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5575 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5576 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      char 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5586 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;Total ram usage:       14 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    6
  5593 ;; This function calls:
  5594 ;;		i1_memcpy
  5595 ;; This function is called by:
  5596 ;;		_FromMainLow_recvmsg
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text35
  5601  0011F6                     __ptext35:
  5602                           	opt stack 0
  5603  0011F6                     i1_recv_msg:
  5604                           	opt stack 15
  5605                           
  5606                           ;messages.c: 64: unsigned char slot;
  5607                           ;messages.c: 68: msg *qmsg;
  5608                           ;messages.c: 69: size_t tlength;
  5609                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5610                           
  5611                           ;incstack = 0
  5612  0011F6  EE20 F035          	lfsr	2,53
  5613  0011FA  500B               	movf	i1recv_msg@qptr,w,c
  5614  0011FC  26D9               	addwf	fsr2l,f,c
  5615  0011FE  500C               	movf	i1recv_msg@qptr+1,w,c
  5616  001200  22DA               	addwfc	fsr2h,f,c
  5617  001202  50DF               	movf	indf2,w,c
  5618  001204  6E14               	movwf	i1recv_msg@slot,c
  5619                           
  5620                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5621  001206  5014               	movf	i1recv_msg@slot,w,c
  5622  001208  0D0D               	mullw	13
  5623  00120A  50F3               	movf	prodl,w,c
  5624  00120C  240B               	addwf	i1recv_msg@qptr,w,c
  5625  00120E  6E17               	movwf	i1recv_msg@qmsg,c
  5626  001210  50F4               	movf	prodh,w,c
  5627  001212  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5628  001214  6E18               	movwf	i1recv_msg@qmsg+1,c
  5629                           
  5630                           ;messages.c: 74: if (qmsg->full == 1) {
  5631  001216  0E01               	movlw	1
  5632  001218  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5633  00121C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5634  001220  62DF               	cpfseq	indf2,c
  5635  001222  D050               	goto	i1l4002
  5636                           
  5637                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5638  001224  EE20 F001          	lfsr	2,1
  5639  001228  5017               	movf	i1recv_msg@qmsg,w,c
  5640  00122A  26D9               	addwf	fsr2l,f,c
  5641  00122C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5642  00122E  22DA               	addwfc	fsr2h,f,c
  5643  001230  50DF               	movf	indf2,w,c
  5644  001232  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5645  001234  B0D8               	btfsc	status,0,c
  5646  001236  D002               	goto	i1l3986
  5647                           
  5648                           ;messages.c: 77: return (-3);
  5649  001238  0EFD               	movlw	253
  5650  00123A  0012               	return	
  5651  00123C                     i1l3986:
  5652                           
  5653                           ;messages.c: 78: }
  5654                           ;messages.c: 80: tlength = qmsg->length;
  5655  00123C  EE20 F001          	lfsr	2,1
  5656  001240  5017               	movf	i1recv_msg@qmsg,w,c
  5657  001242  26D9               	addwf	fsr2l,f,c
  5658  001244  5018               	movf	i1recv_msg@qmsg+1,w,c
  5659  001246  22DA               	addwfc	fsr2h,f,c
  5660  001248  50DF               	movf	indf2,w,c
  5661  00124A  6E12               	movwf	??i1_recv_msg& (0+255),c
  5662  00124C  5012               	movf	??i1_recv_msg,w,c
  5663  00124E  6E15               	movwf	i1recv_msg@tlength,c
  5664  001250  6A16               	clrf	i1recv_msg@tlength+1,c
  5665                           
  5666                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5667  001252  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5668  001256  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5669  00125A  0E03               	movlw	3
  5670  00125C  2417               	addwf	i1recv_msg@qmsg,w,c
  5671  00125E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5672  001260  0E00               	movlw	0
  5673  001262  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5674  001264  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5675  001266  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5676  00126A  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5677  00126E  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5678  001272  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5679  001276  EC37  F00E         	call	i1_memcpy	;wreg free
  5680                           
  5681                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5682  00127A  EE20 F035          	lfsr	2,53
  5683  00127E  500B               	movf	i1recv_msg@qptr,w,c
  5684  001280  26D9               	addwf	fsr2l,f,c
  5685  001282  500C               	movf	i1recv_msg@qptr+1,w,c
  5686  001284  22DA               	addwfc	fsr2h,f,c
  5687  001286  EE10 F035          	lfsr	1,53
  5688  00128A  500B               	movf	i1recv_msg@qptr,w,c
  5689  00128C  26E1               	addwf	fsr1l,f,c
  5690  00128E  500C               	movf	i1recv_msg@qptr+1,w,c
  5691  001290  22E2               	addwfc	fsr1h,f,c
  5692  001292  50E7               	movf	indf1,w,c
  5693  001294  6E12               	movwf	??i1_recv_msg& (0+255),c
  5694  001296  2812               	incf	??i1_recv_msg,w,c
  5695  001298  0B03               	andlw	3
  5696  00129A  6EDF               	movwf	indf2,c
  5697                           
  5698                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5699  00129C  EE20 F002          	lfsr	2,2
  5700  0012A0  5017               	movf	i1recv_msg@qmsg,w,c
  5701  0012A2  26D9               	addwf	fsr2l,f,c
  5702  0012A4  5018               	movf	i1recv_msg@qmsg+1,w,c
  5703  0012A6  22DA               	addwfc	fsr2h,f,c
  5704  0012A8  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5705  0012AC  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5706  0012B0  CFDF FFE7          	movff	indf2,indf1
  5707                           
  5708                           ;messages.c: 91: qmsg->full = 0;
  5709  0012B4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5710  0012B8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5711  0012BC  0E00               	movlw	0
  5712  0012BE  6EDF               	movwf	indf2,c
  5713                           
  5714                           ;messages.c: 92: return (tlength);
  5715  0012C0  5015               	movf	i1recv_msg@tlength,w,c
  5716  0012C2  0012               	return	
  5717  0012C4                     i1l4002:
  5718                           
  5719                           ;messages.c: 94: return (-4);
  5720  0012C4  0EFC               	movlw	252
  5721  0012C6  0012               	return	
  5722  0012C8                     __end_ofi1_recv_msg:
  5723                           	opt stack 0
  5724                           pclatu	equ	0xFFB
  5725                           pclath	equ	0xFFA
  5726                           tblptru	equ	0xFF8
  5727                           tblptrh	equ	0xFF7
  5728                           tblptrl	equ	0xFF6
  5729                           tablat	equ	0xFF5
  5730                           prodh	equ	0xFF4
  5731                           prodl	equ	0xFF3
  5732                           intcon	equ	0xFF2
  5733                           postinc0	equ	0xFEE
  5734                           fsr0h	equ	0xFEA
  5735                           fsr0l	equ	0xFE9
  5736                           wreg	equ	0xFE8
  5737                           indf1	equ	0xFE7
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           bsr	equ	0xFE0
  5741                           indf2	equ	0xFDF
  5742                           postinc2	equ	0xFDE
  5743                           postdec2	equ	0xFDD
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           
  5748 ;; *************** function _uart_recv_int_handler *****************
  5749 ;; Defined at:
  5750 ;;		line 42 in file "src/my_uart.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;		None               void
  5757 ;; Registers used:
  5758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;Total ram usage:        1 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    8
  5771 ;; This function calls:
  5772 ;;		_Read1USART
  5773 ;;		i1_ToMainLow_sendmsg
  5774 ;; This function is called by:
  5775 ;;		_InterruptHandlerLow
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text36
  5780  00143E                     __ptext36:
  5781                           	opt stack 0
  5782  00143E                     _uart_recv_int_handler:
  5783                           	opt stack 15
  5784                           
  5785                           ;my_uart.c: 48: if ((PIR1bits.RC1IF)) {
  5786                           
  5787                           ;incstack = 0
  5788  00143E  AA9E               	btfss	3998,5,c	;volatile
  5789  001440  D03C               	goto	i1l4032
  5790                           
  5791                           ;my_uart.c: 49: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5792  001442  EE20 F004          	lfsr	2,4
  5793  001446  5035               	movf	_uc_ptr,w,c
  5794  001448  26D9               	addwf	fsr2l,f,c
  5795  00144A  5036               	movf	_uc_ptr+1,w,c
  5796  00144C  22DA               	addwfc	fsr2h,f,c
  5797  00144E  50DF               	movf	indf2,w,c
  5798  001450  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5799  001452  501B               	movf	??_uart_recv_int_handler,w,c
  5800  001454  0D01               	mullw	1
  5801  001456  50F3               	movf	prodl,w,c
  5802  001458  2435               	addwf	_uc_ptr,w,c
  5803  00145A  6ED9               	movwf	fsr2l,c
  5804  00145C  50F4               	movf	prodh,w,c
  5805  00145E  2036               	addwfc	_uc_ptr+1,w,c
  5806  001460  6EDA               	movwf	fsr2h,c
  5807  001462  EC86  F00F         	call	_Read1USART	;wreg free
  5808  001466  6EDF               	movwf	indf2,c
  5809                           
  5810                           ;my_uart.c: 56: uc_ptr->buflen++;
  5811  001468  EE20 F004          	lfsr	2,4
  5812  00146C  5035               	movf	_uc_ptr,w,c
  5813  00146E  26D9               	addwf	fsr2l,f,c
  5814  001470  5036               	movf	_uc_ptr+1,w,c
  5815  001472  22DA               	addwfc	fsr2h,f,c
  5816  001474  2ADF               	incf	indf2,f,c
  5817                           
  5818                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5819  001476  EE20 F004          	lfsr	2,4
  5820  00147A  5035               	movf	_uc_ptr,w,c
  5821  00147C  26D9               	addwf	fsr2l,f,c
  5822  00147E  5036               	movf	_uc_ptr+1,w,c
  5823  001480  22DA               	addwfc	fsr2h,f,c
  5824  001482  0E04               	movlw	4
  5825  001484  62DF               	cpfseq	indf2,c
  5826  001486  D019               	goto	i1l4032
  5827                           
  5828                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5829  001488  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5830  00148A  0E20               	movlw	32
  5831  00148C  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5832  00148E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5833  001490  C036  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5834  001494  C035  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5835  001498  EE20 F004          	lfsr	2,4
  5836  00149C  5035               	movf	_uc_ptr,w,c
  5837  00149E  26D9               	addwf	fsr2l,f,c
  5838  0014A0  5036               	movf	_uc_ptr+1,w,c
  5839  0014A2  22DA               	addwfc	fsr2h,f,c
  5840  0014A4  50DF               	movf	indf2,w,c
  5841  0014A6  EC52  F00F         	call	i1_ToMainLow_sendmsg
  5842                           
  5843                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5844  0014AA  EE20 F004          	lfsr	2,4
  5845  0014AE  5035               	movf	_uc_ptr,w,c
  5846  0014B0  26D9               	addwf	fsr2l,f,c
  5847  0014B2  5036               	movf	_uc_ptr+1,w,c
  5848  0014B4  22DA               	addwfc	fsr2h,f,c
  5849  0014B6  0E00               	movlw	0
  5850  0014B8  6EDF               	movwf	indf2,c
  5851  0014BA                     i1l4032:
  5852                           
  5853                           ;my_uart.c: 61: }
  5854                           ;my_uart.c: 62: }
  5855                           ;my_uart.c: 67: if (USART1_Status.OVERRUN_ERROR == 1) {
  5856  0014BA  A637               	btfss	_USART1_Status,3,c
  5857  0014BC  0012               	return	
  5858                           
  5859                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5860  0014BE  98AC               	bcf	4012,4,c	;volatile
  5861                           
  5862                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5863  0014C0  88AC               	bsf	4012,4,c	;volatile
  5864                           
  5865                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5866  0014C2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5867  0014C4  0E1E               	movlw	30
  5868  0014C6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5869  0014C8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5870  0014CA  0E00               	movlw	0
  5871  0014CC  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5872  0014CE  0E00               	movlw	0
  5873  0014D0  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5874  0014D2  0E00               	movlw	0
  5875  0014D4  EC52  F00F         	call	i1_ToMainLow_sendmsg
  5876  0014D8  0012               	return	
  5877  0014DA                     __end_of_uart_recv_int_handler:
  5878                           	opt stack 0
  5879                           pclatu	equ	0xFFB
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           fsr0h	equ	0xFEA
  5890                           fsr0l	equ	0xFE9
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           fsr1h	equ	0xFE2
  5894                           fsr1l	equ	0xFE1
  5895                           bsr	equ	0xFE0
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _Read1USART *****************
  5904 ;; Defined at:
  5905 ;;		line 17 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  data            1    0[COMRAM] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      unsigned char 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;Total ram usage:        1 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    5
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_uart_recv_int_handler
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text37
  5934  001F0C                     __ptext37:
  5935                           	opt stack 0
  5936  001F0C                     _Read1USART:
  5937                           	opt stack 17
  5938                           
  5939                           ;incstack = 0
  5940  001F0C  0EF2               	movlw	242
  5941  001F0E  1637               	andwf	_USART1_Status,f,c
  5942  001F10  ACAC               	btfss	4012,6,c	;volatile
  5943  001F12  D003               	goto	i1l517
  5944  001F14  9037               	bcf	_USART1_Status,0,c
  5945  001F16  B0AC               	btfsc	4012,0,c	;volatile
  5946  001F18  8037               	bsf	_USART1_Status,0,c
  5947  001F1A                     i1l517:
  5948  001F1A  B4AC               	btfsc	4012,2,c	;volatile
  5949  001F1C  8437               	bsf	_USART1_Status,2,c
  5950  001F1E  B2AC               	btfsc	4012,1,c	;volatile
  5951  001F20  8637               	bsf	_USART1_Status,3,c
  5952  001F22  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5953  001F26  5001               	movf	Read1USART@data,w,c
  5954  001F28  0012               	return	
  5955  001F2A                     __end_of_Read1USART:
  5956                           	opt stack 0
  5957                           pclatu	equ	0xFFB
  5958                           pclath	equ	0xFFA
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           intcon	equ	0xFF2
  5966                           postinc0	equ	0xFEE
  5967                           fsr0h	equ	0xFEA
  5968                           fsr0l	equ	0xFE9
  5969                           wreg	equ	0xFE8
  5970                           indf1	equ	0xFE7
  5971                           fsr1h	equ	0xFE2
  5972                           fsr1l	equ	0xFE1
  5973                           bsr	equ	0xFE0
  5974                           indf2	equ	0xFDF
  5975                           postinc2	equ	0xFDE
  5976                           postdec2	equ	0xFDD
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _timer1_int_handler *****************
  5982 ;; Defined at:
  5983 ;;		line 36 in file "src/user_interrupts.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  result          2   27[COMRAM] unsigned int 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;		None               void
  5990 ;; Registers used:
  5991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;Total ram usage:        3 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    8
  6004 ;; This function calls:
  6005 ;;		_WriteTimer1
  6006 ;;		i1_ReadTimer1
  6007 ;;		i1_ToMainLow_sendmsg
  6008 ;; This function is called by:
  6009 ;;		_InterruptHandlerLow
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text38
  6014  001DFA                     __ptext38:
  6015                           	opt stack 0
  6016  001DFA                     _timer1_int_handler:
  6017                           	opt stack 15
  6018                           
  6019                           ;user_interrupts.c: 37: unsigned int result;
  6020                           ;user_interrupts.c: 44: result = ReadTimer1();
  6021                           
  6022                           ;incstack = 0
  6023  001DFA  ECBB  F00F         	call	i1_ReadTimer1	;wreg free
  6024  001DFE  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  6025  001E02  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  6026                           
  6027                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  6028  001E06  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6029  001E08  0E0B               	movlw	11
  6030  001E0A  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6031  001E0C  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6032  001E0E  0E00               	movlw	0
  6033  001E10  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6034  001E12  0E00               	movlw	0
  6035  001E14  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6036  001E16  0E00               	movlw	0
  6037  001E18  EC52  F00F         	call	i1_ToMainLow_sendmsg
  6038                           
  6039                           ;user_interrupts.c: 48: WriteTimer1(0);
  6040  001E1C  0E00               	movlw	0
  6041  001E1E  6E02               	movwf	WriteTimer1@timer1+1,c
  6042  001E20  0E00               	movlw	0
  6043  001E22  6E01               	movwf	WriteTimer1@timer1,c
  6044  001E24  ECC4  F00F         	call	_WriteTimer1	;wreg free
  6045  001E28  0012               	return	
  6046  001E2A                     __end_of_timer1_int_handler:
  6047                           	opt stack 0
  6048                           pclatu	equ	0xFFB
  6049                           pclath	equ	0xFFA
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           fsr0h	equ	0xFEA
  6059                           fsr0l	equ	0xFE9
  6060                           wreg	equ	0xFE8
  6061                           indf1	equ	0xFE7
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           bsr	equ	0xFE0
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function i1_ToMainLow_sendmsg *****************
  6073 ;; Defined at:
  6074 ;;		line 103 in file "src/messages.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  length          1    wreg     unsigned char 
  6077 ;;  msgtype         1   22[COMRAM] unsigned char 
  6078 ;;  data            2   23[COMRAM] PTR void 
  6079 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  length          1   25[COMRAM] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      char 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6095 ;;Total ram usage:        4 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    7
  6098 ;; This function calls:
  6099 ;;		i1_send_msg
  6100 ;; This function is called by:
  6101 ;;		_uart_recv_int_handler
  6102 ;;		_timer1_int_handler
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text39
  6107  001EA4                     __ptext39:
  6108                           	opt stack 0
  6109  001EA4                     i1_ToMainLow_sendmsg:
  6110                           	opt stack 15
  6111                           
  6112                           ;incstack = 0
  6113                           ;i1ToMainLow_sendmsg@length stored from wreg
  6114  001EA4  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6115                           
  6116                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6117                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6118  001EA8  0100               	movlb	0	; () banked
  6119  001EAA  0E00               	movlw	high _ToMainLow_MQ
  6120  001EAC  6E0C               	movwf	i1send_msg@qptr+1,c
  6121  001EAE  0100               	movlb	0	; () banked
  6122  001EB0  0E61               	movlw	low _ToMainLow_MQ
  6123  001EB2  6E0B               	movwf	i1send_msg@qptr,c
  6124  001EB4  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6125  001EB8  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6126  001EBC  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6127  001EC0  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6128  001EC4  ECCA  F009         	call	i1_send_msg	;wreg free
  6129  001EC8  0012               	return	
  6130  001ECA                     __end_ofi1_ToMainLow_sendmsg:
  6131                           	opt stack 0
  6132                           pclatu	equ	0xFFB
  6133                           pclath	equ	0xFFA
  6134                           tblptru	equ	0xFF8
  6135                           tblptrh	equ	0xFF7
  6136                           tblptrl	equ	0xFF6
  6137                           tablat	equ	0xFF5
  6138                           prodh	equ	0xFF4
  6139                           prodl	equ	0xFF3
  6140                           intcon	equ	0xFF2
  6141                           postinc0	equ	0xFEE
  6142                           fsr0h	equ	0xFEA
  6143                           fsr0l	equ	0xFE9
  6144                           wreg	equ	0xFE8
  6145                           indf1	equ	0xFE7
  6146                           fsr1h	equ	0xFE2
  6147                           fsr1l	equ	0xFE1
  6148                           bsr	equ	0xFE0
  6149                           indf2	equ	0xFDF
  6150                           postinc2	equ	0xFDE
  6151                           postdec2	equ	0xFDD
  6152                           fsr2h	equ	0xFDA
  6153                           fsr2l	equ	0xFD9
  6154                           status	equ	0xFD8
  6155                           
  6156 ;; *************** function i1_send_msg *****************
  6157 ;; Defined at:
  6158 ;;		line 24 in file "src/messages.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6161 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6162 ;;  length          1   12[COMRAM] unsigned char 
  6163 ;;  msgtype         1   13[COMRAM] unsigned char 
  6164 ;;  data            2   14[COMRAM] PTR void 
  6165 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  6166 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6169 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6170 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6171 ;;  send_msg        2   17[COMRAM] unsigned int 
  6172 ;;  send_msg        1   19[COMRAM] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      char 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6182 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6183 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;Total ram usage:       12 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    6
  6189 ;; This function calls:
  6190 ;;		i1_memcpy
  6191 ;; This function is called by:
  6192 ;;		i1_ToMainLow_sendmsg
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text40
  6197  001394                     __ptext40:
  6198                           	opt stack 0
  6199  001394                     i1_send_msg:
  6200                           	opt stack 15
  6201                           
  6202                           ;messages.c: 25: unsigned char slot;
  6203                           ;messages.c: 27: msg *qmsg;
  6204                           ;messages.c: 28: size_t tlength = length;
  6205                           
  6206                           ;incstack = 0
  6207  001394  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6208  001398  6A13               	clrf	i1send_msg@tlength+1,c
  6209                           
  6210                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6211  00139A  EE20 F034          	lfsr	2,52
  6212  00139E  500B               	movf	i1send_msg@qptr,w,c
  6213  0013A0  26D9               	addwf	fsr2l,f,c
  6214  0013A2  500C               	movf	i1send_msg@qptr+1,w,c
  6215  0013A4  22DA               	addwfc	fsr2h,f,c
  6216  0013A6  50DF               	movf	indf2,w,c
  6217  0013A8  6E14               	movwf	i1send_msg@slot,c
  6218                           
  6219                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6220  0013AA  5014               	movf	i1send_msg@slot,w,c
  6221  0013AC  0D0D               	mullw	13
  6222  0013AE  50F3               	movf	prodl,w,c
  6223  0013B0  240B               	addwf	i1send_msg@qptr,w,c
  6224  0013B2  6E15               	movwf	i1send_msg@qmsg,c
  6225  0013B4  50F4               	movf	prodh,w,c
  6226  0013B6  200C               	addwfc	i1send_msg@qptr+1,w,c
  6227  0013B8  6E16               	movwf	i1send_msg@qmsg+1,c
  6228                           
  6229                           ;messages.c: 41: if (qmsg->full != 0) {
  6230  0013BA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6231  0013BE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6232  0013C2  50DF               	movf	indf2,w,c
  6233  0013C4  B4D8               	btfsc	status,2,c
  6234  0013C6  D002               	goto	i1l3962
  6235                           
  6236                           ;messages.c: 42: return (-1);
  6237  0013C8  0EFF               	movlw	255
  6238  0013CA  0012               	return	
  6239  0013CC                     i1l3962:
  6240                           
  6241                           ;messages.c: 43: }
  6242                           ;messages.c: 46: qmsg->length = length;
  6243  0013CC  EE20 F001          	lfsr	2,1
  6244  0013D0  5015               	movf	i1send_msg@qmsg,w,c
  6245  0013D2  26D9               	addwf	fsr2l,f,c
  6246  0013D4  5016               	movf	i1send_msg@qmsg+1,w,c
  6247  0013D6  22DA               	addwfc	fsr2h,f,c
  6248  0013D8  C00D  FFDF         	movff	i1send_msg@length,indf2
  6249                           
  6250                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6251  0013DC  EE20 F002          	lfsr	2,2
  6252  0013E0  5015               	movf	i1send_msg@qmsg,w,c
  6253  0013E2  26D9               	addwf	fsr2l,f,c
  6254  0013E4  5016               	movf	i1send_msg@qmsg+1,w,c
  6255  0013E6  22DA               	addwfc	fsr2h,f,c
  6256  0013E8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6257                           
  6258                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6259  0013EC  0E03               	movlw	3
  6260  0013EE  2415               	addwf	i1send_msg@qmsg,w,c
  6261  0013F0  6E01               	movwf	i1memcpy@d1,c
  6262  0013F2  0E00               	movlw	0
  6263  0013F4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6264  0013F6  6E02               	movwf	i1memcpy@d1+1,c
  6265  0013F8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6266  0013FC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6267  001400  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6268  001404  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6269  001408  EC37  F00E         	call	i1_memcpy	;wreg free
  6270                           
  6271                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6272  00140C  EE20 F034          	lfsr	2,52
  6273  001410  500B               	movf	i1send_msg@qptr,w,c
  6274  001412  26D9               	addwf	fsr2l,f,c
  6275  001414  500C               	movf	i1send_msg@qptr+1,w,c
  6276  001416  22DA               	addwfc	fsr2h,f,c
  6277  001418  EE10 F034          	lfsr	1,52
  6278  00141C  500B               	movf	i1send_msg@qptr,w,c
  6279  00141E  26E1               	addwf	fsr1l,f,c
  6280  001420  500C               	movf	i1send_msg@qptr+1,w,c
  6281  001422  22E2               	addwfc	fsr1h,f,c
  6282  001424  50E7               	movf	indf1,w,c
  6283  001426  6E11               	movwf	??i1_send_msg& (0+255),c
  6284  001428  2811               	incf	??i1_send_msg,w,c
  6285  00142A  0B03               	andlw	3
  6286  00142C  6EDF               	movwf	indf2,c
  6287                           
  6288                           ;messages.c: 59: qmsg->full = 1;
  6289  00142E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6290  001432  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6291  001436  0E01               	movlw	1
  6292  001438  6EDF               	movwf	indf2,c
  6293                           
  6294                           ;messages.c: 60: return (1);
  6295  00143A  0E01               	movlw	1
  6296  00143C  0012               	return	
  6297  00143E                     __end_ofi1_send_msg:
  6298                           	opt stack 0
  6299                           pclatu	equ	0xFFB
  6300                           pclath	equ	0xFFA
  6301                           tblptru	equ	0xFF8
  6302                           tblptrh	equ	0xFF7
  6303                           tblptrl	equ	0xFF6
  6304                           tablat	equ	0xFF5
  6305                           prodh	equ	0xFF4
  6306                           prodl	equ	0xFF3
  6307                           intcon	equ	0xFF2
  6308                           postinc0	equ	0xFEE
  6309                           fsr0h	equ	0xFEA
  6310                           fsr0l	equ	0xFE9
  6311                           wreg	equ	0xFE8
  6312                           indf1	equ	0xFE7
  6313                           fsr1h	equ	0xFE2
  6314                           fsr1l	equ	0xFE1
  6315                           bsr	equ	0xFE0
  6316                           indf2	equ	0xFDF
  6317                           postinc2	equ	0xFDE
  6318                           postdec2	equ	0xFDD
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function i1_memcpy *****************
  6324 ;; Defined at:
  6325 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  d1              2    0[COMRAM] PTR void 
  6328 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6329 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6330 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6331 ;;  s1              2    2[COMRAM] PTR const void 
  6332 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6333 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6334 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6335 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6336 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6337 ;;  n               2    4[COMRAM] unsigned int 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6340 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6341 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6342 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6343 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6344 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6345 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6346 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6347 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6348 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  2    0[COMRAM] PTR void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;Total ram usage:       10 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    5
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		i1_send_msg
  6369 ;;		i1_recv_msg
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text41
  6374  001C6E                     __ptext41:
  6375                           	opt stack 0
  6376  001C6E                     i1_memcpy:
  6377                           	opt stack 15
  6378                           
  6379                           ;incstack = 0
  6380  001C6E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6381  001C72  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6382  001C76  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6383  001C7A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6384  001C7E  D00E               	goto	i1l3938
  6385  001C80                     i1l3932:
  6386  001C80  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6387  001C84  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6388  001C88  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6389  001C8C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6390  001C90  CFDF FFE7          	movff	indf2,indf1
  6391  001C94  4A09               	infsnz	i1memcpy@s,f,c
  6392  001C96  2A0A               	incf	i1memcpy@s+1,f,c
  6393  001C98  4A07               	infsnz	i1memcpy@d,f,c
  6394  001C9A  2A08               	incf	i1memcpy@d+1,f,c
  6395  001C9C                     i1l3938:
  6396  001C9C  0605               	decf	i1memcpy@n,f,c
  6397  001C9E  A0D8               	btfss	status,0,c
  6398  001CA0  0606               	decf	i1memcpy@n+1,f,c
  6399  001CA2  2805               	incf	i1memcpy@n& (0+255),w,c
  6400  001CA4  B4D8               	btfsc	status,2,c
  6401  001CA6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6402  001CA8  B4D8               	btfsc	status,2,c
  6403                           
  6404                           ;	Return value of i1_memcpy is never used
  6405  001CAA  0012               	return	
  6406  001CAC  D7E9               	goto	i1l3932
  6407  001CAE                     __end_ofi1_memcpy:
  6408                           	opt stack 0
  6409                           pclatu	equ	0xFFB
  6410                           pclath	equ	0xFFA
  6411                           tblptru	equ	0xFF8
  6412                           tblptrh	equ	0xFF7
  6413                           tblptrl	equ	0xFF6
  6414                           tablat	equ	0xFF5
  6415                           prodh	equ	0xFF4
  6416                           prodl	equ	0xFF3
  6417                           intcon	equ	0xFF2
  6418                           postinc0	equ	0xFEE
  6419                           fsr0h	equ	0xFEA
  6420                           fsr0l	equ	0xFE9
  6421                           wreg	equ	0xFE8
  6422                           indf1	equ	0xFE7
  6423                           fsr1h	equ	0xFE2
  6424                           fsr1l	equ	0xFE1
  6425                           bsr	equ	0xFE0
  6426                           indf2	equ	0xFDF
  6427                           postinc2	equ	0xFDE
  6428                           postdec2	equ	0xFDD
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function i1_ReadTimer1 *****************
  6434 ;; Defined at:
  6435 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  2    0[COMRAM] unsigned int 
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;Total ram usage:        4 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    5
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_timer1_int_handler
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text42
  6464  001F76                     __ptext42:
  6465                           	opt stack 0
  6466  001F76                     i1_ReadTimer1:
  6467                           	opt stack 17
  6468                           
  6469                           ;incstack = 0
  6470  001F76  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  6471  001F7A  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  6472  001F7E  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  6473  001F82  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  6474  001F86  0012               	return	
  6475  001F88                     __end_ofi1_ReadTimer1:
  6476                           	opt stack 0
  6477                           pclatu	equ	0xFFB
  6478                           pclath	equ	0xFFA
  6479                           tblptru	equ	0xFF8
  6480                           tblptrh	equ	0xFF7
  6481                           tblptrl	equ	0xFF6
  6482                           tablat	equ	0xFF5
  6483                           prodh	equ	0xFF4
  6484                           prodl	equ	0xFF3
  6485                           intcon	equ	0xFF2
  6486                           postinc0	equ	0xFEE
  6487                           fsr0h	equ	0xFEA
  6488                           fsr0l	equ	0xFE9
  6489                           wreg	equ	0xFE8
  6490                           indf1	equ	0xFE7
  6491                           fsr1h	equ	0xFE2
  6492                           fsr1l	equ	0xFE1
  6493                           bsr	equ	0xFE0
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _WriteTimer1 *****************
  6502 ;; Defined at:
  6503 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  timer1          2    0[COMRAM] unsigned int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  timer           2    2[COMRAM] struct Timers
  6508 ;; Return value:  Size  Location     Type
  6509 ;;		None               void
  6510 ;; Registers used:
  6511 ;;		None
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;Total ram usage:        4 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    5
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_timer1_int_handler
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text43
  6532  001F88                     __ptext43:
  6533                           	opt stack 0
  6534  001F88                     _WriteTimer1:
  6535                           	opt stack 17
  6536                           
  6537                           ;incstack = 0
  6538  001F88  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6539  001F8C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6540  001F90  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6541  001F94  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6542  001F98  0012               	return	
  6543  001F9A                     __end_of_WriteTimer1:
  6544                           	opt stack 0
  6545                           pclatu	equ	0xFFB
  6546                           pclath	equ	0xFFA
  6547                           tblptru	equ	0xFF8
  6548                           tblptrh	equ	0xFF7
  6549                           tblptrl	equ	0xFF6
  6550                           tablat	equ	0xFF5
  6551                           prodh	equ	0xFF4
  6552                           prodl	equ	0xFF3
  6553                           intcon	equ	0xFF2
  6554                           postinc0	equ	0xFEE
  6555                           fsr0h	equ	0xFEA
  6556                           fsr0l	equ	0xFE9
  6557                           wreg	equ	0xFE8
  6558                           indf1	equ	0xFE7
  6559                           fsr1h	equ	0xFE2
  6560                           fsr1l	equ	0xFE1
  6561                           bsr	equ	0xFE0
  6562                           indf2	equ	0xFDF
  6563                           postinc2	equ	0xFDE
  6564                           postdec2	equ	0xFDD
  6565                           fsr2h	equ	0xFDA
  6566                           fsr2l	equ	0xFD9
  6567                           status	equ	0xFD8
  6568                           
  6569 ;; *************** function _InterruptHandlerHigh *****************
  6570 ;; Defined at:
  6571 ;;		line 83 in file "src/interrupts.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6587 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6588 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6589 ;;Total ram usage:       14 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    4
  6592 ;; This function calls:
  6593 ;;		_SleepIfOkay
  6594 ;;		_i2c_int_handler
  6595 ;;		_timer0_int_handler
  6596 ;; This function is called by:
  6597 ;;		Interrupt level 2
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	intcode
  6602  000008                     __pintcode:
  6603                           	opt stack 0
  6604  000008                     _InterruptHandlerHigh:
  6605                           	opt stack 15
  6606                           
  6607                           ;incstack = 0
  6608  000008  CFFA F0BC          	movff	pclath,??_InterruptHandlerHigh
  6609  00000C  CFFB F0BD          	movff	pclatu,??_InterruptHandlerHigh+1
  6610  000010  EF3C  F00B         	goto	int_func
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           intcon	equ	0xFF2
  6620                           postinc0	equ	0xFEE
  6621                           fsr0h	equ	0xFEA
  6622                           fsr0l	equ	0xFE9
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           fsr1h	equ	0xFE2
  6626                           fsr1l	equ	0xFE1
  6627                           bsr	equ	0xFE0
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635                           	psect	intcode_body
  6636  001678                     __pintcode_body:
  6637                           	opt stack 15
  6638  001678                     int_func:
  6639                           	opt stack 15
  6640  001678  CFE9 F0BE          	movff	fsr0l,??_InterruptHandlerHigh+2
  6641  00167C  CFEA F0BF          	movff	fsr0h,??_InterruptHandlerHigh+3
  6642  001680  CFE1 F0C0          	movff	fsr1l,??_InterruptHandlerHigh+4
  6643  001684  CFE2 F0C1          	movff	fsr1h,??_InterruptHandlerHigh+5
  6644  001688  CFD9 F0C2          	movff	fsr2l,??_InterruptHandlerHigh+6
  6645  00168C  CFDA F0C3          	movff	fsr2h,??_InterruptHandlerHigh+7
  6646  001690  CFF3 F0C4          	movff	prodl,??_InterruptHandlerHigh+8
  6647  001694  CFF4 F0C5          	movff	prodh,??_InterruptHandlerHigh+9
  6648  001698  CFF6 F0C6          	movff	tblptrl,??_InterruptHandlerHigh+10
  6649  00169C  CFF7 F0C7          	movff	tblptrh,??_InterruptHandlerHigh+11
  6650  0016A0  CFF8 F0C8          	movff	tblptru,??_InterruptHandlerHigh+12
  6651  0016A4  CFF5 F0C9          	movff	tablat,??_InterruptHandlerHigh+13
  6652                           
  6653                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6654  0016A8  A69E               	btfss	3998,3,c	;volatile
  6655  0016AA  D003               	goto	i2l3248
  6656                           
  6657                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6658  0016AC  969E               	bcf	3998,3,c	;volatile
  6659                           
  6660                           ;interrupts.c: 92: i2c_int_handler();
  6661  0016AE  EC62  F000         	call	_i2c_int_handler	;wreg free
  6662  0016B2                     i2l3248:
  6663                           
  6664                           ;interrupts.c: 93: }
  6665                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6666  0016B2  A4F2               	btfss	intcon,2,c	;volatile
  6667  0016B4  D003               	goto	i2l3254
  6668                           
  6669                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6670  0016B6  94F2               	bcf	intcon,2,c	;volatile
  6671                           
  6672                           ;interrupts.c: 99: timer0_int_handler();
  6673  0016B8  ECF7  F00A         	call	_timer0_int_handler	;wreg free
  6674  0016BC                     i2l3254:
  6675                           
  6676                           ;interrupts.c: 100: }
  6677                           ;interrupts.c: 109: SleepIfOkay();
  6678  0016BC  EC33  F00C         	call	_SleepIfOkay	;wreg free
  6679  0016C0  C0C9  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6680  0016C4  C0C8  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6681  0016C8  C0C7  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6682  0016CC  C0C6  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6683  0016D0  C0C5  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6684  0016D4  C0C4  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6685  0016D8  C0C3  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6686  0016DC  C0C2  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6687  0016E0  C0C1  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6688  0016E4  C0C0  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6689  0016E8  C0BF  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6690  0016EC  C0BE  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6691  0016F0  C0BD  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6692  0016F4  C0BC  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6693  0016F8  0011               	retfie		f
  6694  0016FA                     __end_of_InterruptHandlerHigh:
  6695                           	opt stack 0
  6696                           pclatu	equ	0xFFB
  6697                           pclath	equ	0xFFA
  6698                           tblptru	equ	0xFF8
  6699                           tblptrh	equ	0xFF7
  6700                           tblptrl	equ	0xFF6
  6701                           tablat	equ	0xFF5
  6702                           prodh	equ	0xFF4
  6703                           prodl	equ	0xFF3
  6704                           intcon	equ	0xFF2
  6705                           postinc0	equ	0xFEE
  6706                           fsr0h	equ	0xFEA
  6707                           fsr0l	equ	0xFE9
  6708                           wreg	equ	0xFE8
  6709                           indf1	equ	0xFE7
  6710                           fsr1h	equ	0xFE2
  6711                           fsr1l	equ	0xFE1
  6712                           bsr	equ	0xFE0
  6713                           indf2	equ	0xFDF
  6714                           postinc2	equ	0xFDE
  6715                           postdec2	equ	0xFDD
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _timer0_int_handler *****************
  6721 ;; Defined at:
  6722 ;;		line 16 in file "src/user_interrupts.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  val             2   34[BANK0 ] unsigned int 
  6727 ;;  msgtype         2   32[BANK0 ] int 
  6728 ;;  length          2   30[BANK0 ] int 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;		None               void
  6731 ;; Registers used:
  6732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;Total ram usage:        7 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    3
  6745 ;; This function calls:
  6746 ;;		_FromMainHigh_recvmsg
  6747 ;;		_ToMainHigh_sendmsg
  6748 ;;		_WriteTimer0
  6749 ;; This function is called by:
  6750 ;;		_InterruptHandlerHigh
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text45
  6755  0015EE                     __ptext45:
  6756                           	opt stack 0
  6757  0015EE                     _timer0_int_handler:
  6758                           	opt stack 15
  6759                           
  6760                           ;user_interrupts.c: 17: unsigned int val;
  6761                           ;user_interrupts.c: 18: int length, msgtype;
  6762                           ;user_interrupts.c: 25: WriteTimer0(0);
  6763                           
  6764                           ;incstack = 0
  6765  0015EE  0E00               	movlw	0
  6766  0015F0  0100               	movlb	0	; () banked
  6767  0015F2  0100               	movlb	0	; () banked
  6768  0015F4  6F98               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6769  0015F6  0E00               	movlw	0
  6770  0015F8  0100               	movlb	0	; () banked
  6771  0015FA  6F97               	movwf	WriteTimer0@timer0& (0+255),b
  6772  0015FC  ECCD  F00F         	call	_WriteTimer0	;wreg free
  6773                           
  6774                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6775  001600  0100               	movlb	0	; () banked
  6776  001602  0E00               	movlw	high timer0_int_handler@msgtype
  6777  001604  0100               	movlb	0	; () banked
  6778  001606  0100               	movlb	0	; () banked
  6779  001608  6FB0               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6780  00160A  0100               	movlb	0	; () banked
  6781  00160C  0EB7               	movlw	low timer0_int_handler@msgtype
  6782  00160E  0100               	movlb	0	; () banked
  6783  001610  0100               	movlb	0	; () banked
  6784  001612  6FAF               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6785  001614  0100               	movlb	0	; () banked
  6786  001616  0E00               	movlw	high timer0_int_handler@val
  6787  001618  0100               	movlb	0	; () banked
  6788  00161A  0100               	movlb	0	; () banked
  6789  00161C  6FB2               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6790  00161E  0100               	movlb	0	; () banked
  6791  001620  0EB9               	movlw	low timer0_int_handler@val
  6792  001622  0100               	movlb	0	; () banked
  6793  001624  0100               	movlb	0	; () banked
  6794  001626  6FB1               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6795  001628  0E02               	movlw	2
  6796  00162A  ECF6  F00D         	call	_FromMainHigh_recvmsg
  6797  00162E  0100               	movlb	0	; () banked
  6798  001630  0100               	movlb	0	; () banked
  6799  001632  6FB5               	movwf	timer0_int_handler@length& (0+255),b
  6800  001634  0100               	movlb	0	; () banked
  6801  001636  6BB6               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6802  001638  0100               	movlb	0	; () banked
  6803  00163A  BFB5               	btfsc	timer0_int_handler@length& (0+255),7,b
  6804  00163C  07B6               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6808  00163E  0100               	movlb	0	; () banked
  6809  001640  0100               	movlb	0	; () banked
  6810  001642  51B5               	movf	timer0_int_handler@length& (0+255),w,b
  6811  001644  0A02               	xorlw	2
  6812  001646  11B6               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6813  001648  A4D8               	btfss	status,2,c
  6814  00164A  0012               	return	
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6818  00164C  0100               	movlb	0	; () banked
  6819  00164E  6FB4               	movwf	??_timer0_int_handler& (0+255),b
  6820  001650  0E0A               	movlw	10
  6821  001652  0100               	movlb	0	; () banked
  6822  001654  0100               	movlb	0	; () banked
  6823  001656  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6824  001658  0100               	movlb	0	; () banked
  6825  00165A  51B4               	movf	??_timer0_int_handler& (0+255),w,b
  6826  00165C  0100               	movlb	0	; () banked
  6827  00165E  0E00               	movlw	high timer0_int_handler@val
  6828  001660  0100               	movlb	0	; () banked
  6829  001662  0100               	movlb	0	; () banked
  6830  001664  6FAF               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6831  001666  0100               	movlb	0	; () banked
  6832  001668  0EB9               	movlw	low timer0_int_handler@val
  6833  00166A  0100               	movlb	0	; () banked
  6834  00166C  0100               	movlb	0	; () banked
  6835  00166E  6FAE               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6836  001670  0E02               	movlw	2
  6837  001672  ECC7  F00E         	call	_ToMainHigh_sendmsg
  6838  001676  0012               	return	
  6839  001678                     __end_of_timer0_int_handler:
  6840                           	opt stack 0
  6841                           pclatu	equ	0xFFB
  6842                           pclath	equ	0xFFA
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           postinc0	equ	0xFEE
  6851                           fsr0h	equ	0xFEA
  6852                           fsr0l	equ	0xFE9
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           fsr1h	equ	0xFE2
  6856                           fsr1l	equ	0xFE1
  6857                           bsr	equ	0xFE0
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _WriteTimer0 *****************
  6866 ;; Defined at:
  6867 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  timer0          2    0[BANK0 ] unsigned int 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  timer           2    2[BANK0 ] struct Timers
  6872 ;; Return value:  Size  Location     Type
  6873 ;;		None               void
  6874 ;; Registers used:
  6875 ;;		None
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;Total ram usage:        4 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_timer0_int_handler
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text46
  6895  001F9A                     __ptext46:
  6896                           	opt stack 0
  6897  001F9A                     _WriteTimer0:
  6898                           	opt stack 17
  6899                           
  6900                           ;incstack = 0
  6901  001F9A  C097  F099         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6902  001F9E  C098  F09A         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6903  001FA2  C09A  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6904  001FA6  C099  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6905  001FAA  0012               	return	
  6906  001FAC                     __end_of_WriteTimer0:
  6907                           	opt stack 0
  6908                           pclatu	equ	0xFFB
  6909                           pclath	equ	0xFFA
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           prodh	equ	0xFF4
  6915                           prodl	equ	0xFF3
  6916                           intcon	equ	0xFF2
  6917                           postinc0	equ	0xFEE
  6918                           fsr0h	equ	0xFEA
  6919                           fsr0l	equ	0xFE9
  6920                           wreg	equ	0xFE8
  6921                           indf1	equ	0xFE7
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           bsr	equ	0xFE0
  6925                           indf2	equ	0xFDF
  6926                           postinc2	equ	0xFDE
  6927                           postdec2	equ	0xFDD
  6928                           fsr2h	equ	0xFDA
  6929                           fsr2l	equ	0xFD9
  6930                           status	equ	0xFD8
  6931                           
  6932 ;; *************** function _FromMainHigh_recvmsg *****************
  6933 ;; Defined at:
  6934 ;;		line 183 in file "src/messages.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  maxlength       1    wreg     unsigned char 
  6937 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  6938 ;;		 -> timer0_int_handler@msgtype(2), 
  6939 ;;  data            2   26[BANK0 ] PTR void 
  6940 ;;		 -> timer0_int_handler@val(2), 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  maxlength       1   28[BANK0 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      char 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;Total ram usage:        5 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		i2_recv_msg
  6961 ;; This function is called by:
  6962 ;;		_timer0_int_handler
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text47
  6967  001BEC                     __ptext47:
  6968                           	opt stack 0
  6969  001BEC                     _FromMainHigh_recvmsg:
  6970                           	opt stack 15
  6971                           
  6972                           ;incstack = 0
  6973                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6974  001BEC  CFE8 F0B3          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6975                           
  6976                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6977  001BF0  0101               	movlb	1	; () banked
  6978  001BF2  0E01               	movlw	high _FromMainHigh_MQ
  6979  001BF4  0100               	movlb	0	; () banked
  6980  001BF6  0100               	movlb	0	; () banked
  6981  001BF8  6FA2               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6982  001BFA  0101               	movlb	1	; () banked
  6983  001BFC  0E00               	movlw	low _FromMainHigh_MQ
  6984  001BFE  0100               	movlb	0	; () banked
  6985  001C00  0100               	movlb	0	; () banked
  6986  001C02  6FA1               	movwf	i2recv_msg@qptr& (0+255),b
  6987  001C04  C0B3  F0A3         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6988  001C08  0100               	movlb	0	; () banked
  6989  001C0A  0100               	movlb	0	; () banked
  6990  001C0C  C0B0  F0A5         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6991  001C10  0100               	movlb	0	; () banked
  6992  001C12  0100               	movlb	0	; () banked
  6993  001C14  C0AF  F0A4         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6994  001C18  0100               	movlb	0	; () banked
  6995  001C1A  0100               	movlb	0	; () banked
  6996  001C1C  C0B2  F0A7         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6997  001C20  0100               	movlb	0	; () banked
  6998  001C22  0100               	movlb	0	; () banked
  6999  001C24  C0B1  F0A6         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7000  001C28  EC60  F006         	call	i2_recv_msg	;wreg free
  7001  001C2C  0012               	return	
  7002  001C2E                     __end_of_FromMainHigh_recvmsg:
  7003                           	opt stack 0
  7004                           pclatu	equ	0xFFB
  7005                           pclath	equ	0xFFA
  7006                           tblptru	equ	0xFF8
  7007                           tblptrh	equ	0xFF7
  7008                           tblptrl	equ	0xFF6
  7009                           tablat	equ	0xFF5
  7010                           prodh	equ	0xFF4
  7011                           prodl	equ	0xFF3
  7012                           intcon	equ	0xFF2
  7013                           postinc0	equ	0xFEE
  7014                           fsr0h	equ	0xFEA
  7015                           fsr0l	equ	0xFE9
  7016                           wreg	equ	0xFE8
  7017                           indf1	equ	0xFE7
  7018                           fsr1h	equ	0xFE2
  7019                           fsr1l	equ	0xFE1
  7020                           bsr	equ	0xFE0
  7021                           indf2	equ	0xFDF
  7022                           postinc2	equ	0xFDE
  7023                           postdec2	equ	0xFDD
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028 ;; *************** function i2_recv_msg *****************
  7029 ;; Defined at:
  7030 ;;		line 63 in file "src/messages.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7033 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7034 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7035 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7036 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  7037 ;;  data            2   15[BANK0 ] PTR void 
  7038 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7041 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7042 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7043 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7044 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      char 
  7047 ;; Registers used:
  7048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7054 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7055 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7058 ;;Total ram usage:       14 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    1
  7061 ;; This function calls:
  7062 ;;		i2_memcpy
  7063 ;; This function is called by:
  7064 ;;		_FromMainHigh_recvmsg
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text48
  7069  000CC0                     __ptext48:
  7070                           	opt stack 0
  7071  000CC0                     i2_recv_msg:
  7072                           	opt stack 15
  7073                           
  7074                           ;messages.c: 64: unsigned char slot;
  7075                           ;messages.c: 68: msg *qmsg;
  7076                           ;messages.c: 69: size_t tlength;
  7077                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7078                           
  7079                           ;incstack = 0
  7080  000CC0  0100               	movlb	0	; () banked
  7081  000CC2  EE20 F035          	lfsr	2,53
  7082  000CC6  0100               	movlb	0	; () banked
  7083  000CC8  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7084  000CCA  26D9               	addwf	fsr2l,f,c
  7085  000CCC  0100               	movlb	0	; () banked
  7086  000CCE  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7087  000CD0  22DA               	addwfc	fsr2h,f,c
  7088  000CD2  50DF               	movf	indf2,w,c
  7089  000CD4  0100               	movlb	0	; () banked
  7090  000CD6  0100               	movlb	0	; () banked
  7091  000CD8  6FAA               	movwf	i2recv_msg@slot& (0+255),b
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7095  000CDA  0100               	movlb	0	; () banked
  7096  000CDC  0100               	movlb	0	; () banked
  7097  000CDE  51AA               	movf	i2recv_msg@slot& (0+255),w,b
  7098  000CE0  0D0D               	mullw	13
  7099  000CE2  50F3               	movf	prodl,w,c
  7100  000CE4  0100               	movlb	0	; () banked
  7101  000CE6  0100               	movlb	0	; () banked
  7102  000CE8  25A1               	addwf	i2recv_msg@qptr& (0+255),w,b
  7103  000CEA  0100               	movlb	0	; () banked
  7104  000CEC  0100               	movlb	0	; () banked
  7105  000CEE  6FAD               	movwf	i2recv_msg@qmsg& (0+255),b
  7106  000CF0  50F4               	movf	prodh,w,c
  7107  000CF2  0100               	movlb	0	; () banked
  7108  000CF4  0100               	movlb	0	; () banked
  7109  000CF6  21A2               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7110  000CF8  0100               	movlb	0	; () banked
  7111  000CFA  6FAE               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;messages.c: 74: if (qmsg->full == 1) {
  7115  000CFC  0E01               	movlw	1
  7116  000CFE  C0AD  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7117  000D02  C0AE  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7118  000D06  62DF               	cpfseq	indf2,c
  7119  000D08  D074               	goto	i2l3924
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7123  000D0A  0100               	movlb	0	; () banked
  7124  000D0C  EE20 F001          	lfsr	2,1
  7125  000D10  0100               	movlb	0	; () banked
  7126  000D12  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7127  000D14  26D9               	addwf	fsr2l,f,c
  7128  000D16  0100               	movlb	0	; () banked
  7129  000D18  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7130  000D1A  22DA               	addwfc	fsr2h,f,c
  7131  000D1C  50DF               	movf	indf2,w,c
  7132  000D1E  0100               	movlb	0	; () banked
  7133  000D20  0100               	movlb	0	; () banked
  7134  000D22  5DA3               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7135  000D24  B0D8               	btfsc	status,0,c
  7136  000D26  D002               	goto	i2l3908
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;messages.c: 77: return (-3);
  7140  000D28  0EFD               	movlw	253
  7141  000D2A  0012               	return	
  7142  000D2C                     i2l3908:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;messages.c: 78: }
  7146                           ;messages.c: 80: tlength = qmsg->length;
  7147  000D2C  0100               	movlb	0	; () banked
  7148  000D2E  EE20 F001          	lfsr	2,1
  7149  000D32  0100               	movlb	0	; () banked
  7150  000D34  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7151  000D36  26D9               	addwf	fsr2l,f,c
  7152  000D38  0100               	movlb	0	; () banked
  7153  000D3A  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7154  000D3C  22DA               	addwfc	fsr2h,f,c
  7155  000D3E  50DF               	movf	indf2,w,c
  7156  000D40  0100               	movlb	0	; () banked
  7157  000D42  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7158  000D44  0100               	movlb	0	; () banked
  7159  000D46  51A8               	movf	??i2_recv_msg& (0+255),w,b
  7160  000D48  0100               	movlb	0	; () banked
  7161  000D4A  0100               	movlb	0	; () banked
  7162  000D4C  6FAB               	movwf	i2recv_msg@tlength& (0+255),b
  7163  000D4E  0100               	movlb	0	; () banked
  7164  000D50  6BAC               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7168  000D52  0100               	movlb	0	; () banked
  7169  000D54  0100               	movlb	0	; () banked
  7170  000D56  C0A7  F098         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7171  000D5A  0100               	movlb	0	; () banked
  7172  000D5C  0100               	movlb	0	; () banked
  7173  000D5E  C0A6  F097         	movff	i2recv_msg@data,i2memcpy@d1
  7174  000D62  0E03               	movlw	3
  7175  000D64  0100               	movlb	0	; () banked
  7176  000D66  0100               	movlb	0	; () banked
  7177  000D68  25AD               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7178  000D6A  0100               	movlb	0	; () banked
  7179  000D6C  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7180  000D6E  0E00               	movlw	0
  7181  000D70  0100               	movlb	0	; () banked
  7182  000D72  0100               	movlb	0	; () banked
  7183  000D74  21AE               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7184  000D76  0100               	movlb	0	; () banked
  7185  000D78  6FA9               	movwf	(??i2_recv_msg+1)& (0+255),b
  7186  000D7A  C0A8  F099         	movff	??i2_recv_msg,i2memcpy@s1
  7187  000D7E  C0A9  F09A         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7188  000D82  C0AB  F09B         	movff	i2recv_msg@tlength,i2memcpy@n
  7189  000D86  C0AC  F09C         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7190  000D8A  ECCE  F00C         	call	i2_memcpy	;wreg free
  7191                           
  7192                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7193  000D8E  0100               	movlb	0	; () banked
  7194  000D90  EE20 F035          	lfsr	2,53
  7195  000D94  0100               	movlb	0	; () banked
  7196  000D96  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7197  000D98  26D9               	addwf	fsr2l,f,c
  7198  000D9A  0100               	movlb	0	; () banked
  7199  000D9C  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7200  000D9E  22DA               	addwfc	fsr2h,f,c
  7201  000DA0  0100               	movlb	0	; () banked
  7202  000DA2  EE10 F035          	lfsr	1,53
  7203  000DA6  0100               	movlb	0	; () banked
  7204  000DA8  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7205  000DAA  26E1               	addwf	fsr1l,f,c
  7206  000DAC  0100               	movlb	0	; () banked
  7207  000DAE  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7208  000DB0  22E2               	addwfc	fsr1h,f,c
  7209  000DB2  50E7               	movf	indf1,w,c
  7210  000DB4  0100               	movlb	0	; () banked
  7211  000DB6  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7212  000DB8  0100               	movlb	0	; () banked
  7213  000DBA  29A8               	incf	??i2_recv_msg& (0+255),w,b
  7214  000DBC  0B03               	andlw	3
  7215  000DBE  6EDF               	movwf	indf2,c
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7219  000DC0  0100               	movlb	0	; () banked
  7220  000DC2  EE20 F002          	lfsr	2,2
  7221  000DC6  0100               	movlb	0	; () banked
  7222  000DC8  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7223  000DCA  26D9               	addwf	fsr2l,f,c
  7224  000DCC  0100               	movlb	0	; () banked
  7225  000DCE  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7226  000DD0  22DA               	addwfc	fsr2h,f,c
  7227  000DD2  C0A4  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7228  000DD6  C0A5  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7229  000DDA  CFDF FFE7          	movff	indf2,indf1
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;messages.c: 91: qmsg->full = 0;
  7233  000DDE  C0AD  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7234  000DE2  C0AE  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7235  000DE6  0E00               	movlw	0
  7236  000DE8  6EDF               	movwf	indf2,c
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;messages.c: 92: return (tlength);
  7240  000DEA  0100               	movlb	0	; () banked
  7241  000DEC  0100               	movlb	0	; () banked
  7242  000DEE  51AB               	movf	i2recv_msg@tlength& (0+255),w,b
  7243  000DF0  0012               	return	
  7244  000DF2                     i2l3924:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;messages.c: 94: return (-4);
  7248  000DF2  0EFC               	movlw	252
  7249  000DF4  0012               	return	
  7250  000DF6                     __end_ofi2_recv_msg:
  7251                           	opt stack 0
  7252                           pclatu	equ	0xFFB
  7253                           pclath	equ	0xFFA
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           intcon	equ	0xFF2
  7261                           postinc0	equ	0xFEE
  7262                           fsr0h	equ	0xFEA
  7263                           fsr0l	equ	0xFE9
  7264                           wreg	equ	0xFE8
  7265                           indf1	equ	0xFE7
  7266                           fsr1h	equ	0xFE2
  7267                           fsr1l	equ	0xFE1
  7268                           bsr	equ	0xFE0
  7269                           indf2	equ	0xFDF
  7270                           postinc2	equ	0xFDE
  7271                           postdec2	equ	0xFDD
  7272                           fsr2h	equ	0xFDA
  7273                           fsr2l	equ	0xFD9
  7274                           status	equ	0xFD8
  7275                           
  7276 ;; *************** function _i2c_int_handler *****************
  7277 ;; Defined at:
  7278 ;;		line 100 in file "src/my_i2c.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  7283 ;;  data_read       1   36[BANK0 ] unsigned char 
  7284 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  7285 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  7286 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  7287 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  7288 ;;  data_written    1   31[BANK0 ] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;		None               void
  7291 ;; Registers used:
  7292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;Total ram usage:       11 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    3
  7305 ;; This function calls:
  7306 ;;		_ToMainHigh_sendmsg
  7307 ;;		_handle_start
  7308 ;; This function is called by:
  7309 ;;		_InterruptHandlerHigh
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text49
  7314  0000C4                     __ptext49:
  7315                           	opt stack 0
  7316  0000C4                     _i2c_int_handler:
  7317                           	opt stack 15
  7318                           
  7319                           ;my_i2c.c: 101: unsigned char i2c_data;
  7320                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;incstack = 0
  7324  0000C4  0100               	movlb	0	; () banked
  7325  0000C6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7326  0000C8  0E00               	movlw	0
  7327  0000CA  0100               	movlb	0	; () banked
  7328  0000CC  0100               	movlb	0	; () banked
  7329  0000CE  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7330  0000D0  0100               	movlb	0	; () banked
  7331  0000D2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7332                           
  7333                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7334  0000D4  0100               	movlb	0	; () banked
  7335  0000D6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7336  0000D8  0E00               	movlw	0
  7337  0000DA  0100               	movlb	0	; () banked
  7338  0000DC  0100               	movlb	0	; () banked
  7339  0000DE  6FB6               	movwf	i2c_int_handler@data_written& (0+255),b
  7340  0000E0  0100               	movlb	0	; () banked
  7341  0000E2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7342                           
  7343                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7344  0000E4  0100               	movlb	0	; () banked
  7345  0000E6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7346  0000E8  0E00               	movlw	0
  7347  0000EA  0100               	movlb	0	; () banked
  7348  0000EC  0100               	movlb	0	; () banked
  7349  0000EE  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7350  0000F0  0100               	movlb	0	; () banked
  7351  0000F2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7352                           
  7353                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7354  0000F4  0100               	movlb	0	; () banked
  7355  0000F6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7356  0000F8  0E00               	movlw	0
  7357  0000FA  0100               	movlb	0	; () banked
  7358  0000FC  0100               	movlb	0	; () banked
  7359  0000FE  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7360  000100  0100               	movlb	0	; () banked
  7361  000102  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7362                           
  7363                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7364  000104  0100               	movlb	0	; () banked
  7365  000106  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7366  000108  0E00               	movlw	0
  7367  00010A  0100               	movlb	0	; () banked
  7368  00010C  0100               	movlb	0	; () banked
  7369  00010E  6FB7               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7370  000110  0100               	movlb	0	; () banked
  7371  000112  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7375                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7376  000114  ACC6               	btfss	4038,6,c	;volatile
  7377  000116  D029               	goto	i2l3270
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7381  000118  9CC6               	bcf	4038,6,c	;volatile
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7385  00011A  0100               	movlb	0	; () banked
  7386  00011C  EE20 F00C          	lfsr	2,12
  7387  000120  0100               	movlb	0	; () banked
  7388  000122  51CB               	movf	_ic_ptr& (0+255),w,b
  7389  000124  26D9               	addwf	fsr2l,f,c
  7390  000126  0100               	movlb	0	; () banked
  7391  000128  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  00012A  22DA               	addwfc	fsr2h,f,c
  7393  00012C  0E05               	movlw	5
  7394  00012E  6EDF               	movwf	indf2,c
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;my_i2c.c: 116: overrun_error = 1;
  7398  000130  0100               	movlb	0	; () banked
  7399  000132  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7400  000134  0E01               	movlw	1
  7401  000136  0100               	movlb	0	; () banked
  7402  000138  0100               	movlb	0	; () banked
  7403  00013A  6FB7               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7404  00013C  0100               	movlb	0	; () banked
  7405  00013E  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7409  000140  0100               	movlb	0	; () banked
  7410  000142  EE20 F00E          	lfsr	2,14
  7411  000146  0100               	movlb	0	; () banked
  7412  000148  51CB               	movf	_ic_ptr& (0+255),w,b
  7413  00014A  26D9               	addwf	fsr2l,f,c
  7414  00014C  0100               	movlb	0	; () banked
  7415  00014E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  000150  22DA               	addwfc	fsr2h,f,c
  7417  000152  2ADF               	incf	indf2,f,c
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7421  000154  0100               	movlb	0	; () banked
  7422  000156  EE20 F00D          	lfsr	2,13
  7423  00015A  0100               	movlb	0	; () banked
  7424  00015C  51CB               	movf	_ic_ptr& (0+255),w,b
  7425  00015E  26D9               	addwf	fsr2l,f,c
  7426  000160  0100               	movlb	0	; () banked
  7427  000162  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7428  000164  22DA               	addwfc	fsr2h,f,c
  7429  000166  0E04               	movlw	4
  7430  000168  6EDF               	movwf	indf2,c
  7431  00016A                     i2l3270:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;my_i2c.c: 119: }
  7435                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7436  00016A  A0C7               	btfss	4039,0,c	;volatile
  7437  00016C  D00A               	goto	i2l3276
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7441  00016E  CFC9 F0B8          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 123: data_read = 1;
  7445  000172  0100               	movlb	0	; () banked
  7446  000174  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7447  000176  0E01               	movlw	1
  7448  000178  0100               	movlb	0	; () banked
  7449  00017A  0100               	movlb	0	; () banked
  7450  00017C  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7451  00017E  0100               	movlb	0	; () banked
  7452  000180  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7453  000182                     i2l3276:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 124: }
  7457                           ;my_i2c.c: 126: if (!overrun_error) {
  7458  000182  0100               	movlb	0	; () banked
  7459  000184  0100               	movlb	0	; () banked
  7460  000186  67B7               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7461  000188  D1CE               	goto	i2l269
  7462  00018A  D1B7               	goto	i2l3364
  7463  00018C                     i2l271:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;my_i2c.c: 129: {
  7467                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7468  00018C  A6C7               	btfss	4039,3,c	;volatile
  7469  00018E  D1CB               	goto	i2l269
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;my_i2c.c: 132: handle_start(data_read);
  7473  000190  0100               	movlb	0	; () banked
  7474  000192  0100               	movlb	0	; () banked
  7475  000194  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7476  000196  EC64  F009         	call	_handle_start
  7477                           
  7478                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7479  00019A  0100               	movlb	0	; () banked
  7480  00019C  EE20 F00C          	lfsr	2,12
  7481  0001A0  0100               	movlb	0	; () banked
  7482  0001A2  51CB               	movf	_ic_ptr& (0+255),w,b
  7483  0001A4  26D9               	addwf	fsr2l,f,c
  7484  0001A6  0100               	movlb	0	; () banked
  7485  0001A8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7486  0001AA  22DA               	addwfc	fsr2h,f,c
  7487  0001AC  0E08               	movlw	8
  7488  0001AE  62DF               	cpfseq	indf2,c
  7489  0001B0  D1BA               	goto	i2l269
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;my_i2c.c: 135: data_read = 0;
  7493  0001B2  0100               	movlb	0	; () banked
  7494  0001B4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7495  0001B6  0E00               	movlw	0
  7496  0001B8  0100               	movlb	0	; () banked
  7497  0001BA  0100               	movlb	0	; () banked
  7498  0001BC  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7499  0001BE  0100               	movlb	0	; () banked
  7500  0001C0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7501                           
  7502                           ;my_i2c.c: 136: msg_to_send = 1;
  7503  0001C2  0100               	movlb	0	; () banked
  7504  0001C4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7505  0001C6  0E01               	movlw	1
  7506  0001C8  0100               	movlb	0	; () banked
  7507  0001CA  0100               	movlb	0	; () banked
  7508  0001CC  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7509  0001CE  D187               	goto	L11
  7510  0001D0                     i2l275:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;my_i2c.c: 142: {
  7514                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7515  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7516  0001D2  D030               	goto	i2l3296
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7520  0001D4  0100               	movlb	0	; () banked
  7521  0001D6  EE20 F00B          	lfsr	2,11
  7522  0001DA  0100               	movlb	0	; () banked
  7523  0001DC  51CB               	movf	_ic_ptr& (0+255),w,b
  7524  0001DE  26D9               	addwf	fsr2l,f,c
  7525  0001E0  0100               	movlb	0	; () banked
  7526  0001E2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7527  0001E4  22DA               	addwfc	fsr2h,f,c
  7528  0001E6  2ADF               	incf	indf2,f,c
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;my_i2c.c: 148: if (data_read) {
  7532  0001E8  0100               	movlb	0	; () banked
  7533  0001EA  0100               	movlb	0	; () banked
  7534  0001EC  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7535  0001EE  B4D8               	btfsc	status,2,c
  7536  0001F0  D179               	goto	L13
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7540  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7541  0001F4  D009               	goto	i2l3294
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;my_i2c.c: 150: msg_ready = 1;
  7545  0001F6  0100               	movlb	0	; () banked
  7546  0001F8  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7547  0001FA  0E01               	movlw	1
  7548  0001FC  0100               	movlb	0	; () banked
  7549  0001FE  0100               	movlb	0	; () banked
  7550  000200  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7551  000202  0100               	movlb	0	; () banked
  7552  000204  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7553                           
  7554                           ;my_i2c.c: 151: } else {
  7555  000206  D16E               	goto	L13
  7556  000208                     i2l3294:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7560  000208  0100               	movlb	0	; () banked
  7561  00020A  EE20 F00E          	lfsr	2,14
  7562  00020E  0100               	movlb	0	; () banked
  7563  000210  51CB               	movf	_ic_ptr& (0+255),w,b
  7564  000212  26D9               	addwf	fsr2l,f,c
  7565  000214  0100               	movlb	0	; () banked
  7566  000216  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7567  000218  22DA               	addwfc	fsr2h,f,c
  7568  00021A  2ADF               	incf	indf2,f,c
  7569                           
  7570                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7571  00021C  0100               	movlb	0	; () banked
  7572  00021E  EE20 F00D          	lfsr	2,13
  7573  000222  0100               	movlb	0	; () banked
  7574  000224  51CB               	movf	_ic_ptr& (0+255),w,b
  7575  000226  26D9               	addwf	fsr2l,f,c
  7576  000228  0100               	movlb	0	; () banked
  7577  00022A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7578  00022C  22DA               	addwfc	fsr2h,f,c
  7579  00022E  0E06               	movlw	6
  7580  000230  6EDF               	movwf	indf2,c
  7581                           
  7582                           ; BSR set to: 0
  7583  000232  D158               	goto	L13
  7584  000234                     i2l3296:
  7585                           
  7586                           ; BSR set to: 0
  7587  000234  0100               	movlb	0	; () banked
  7588  000236  0100               	movlb	0	; () banked
  7589  000238  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7590  00023A  B4D8               	btfsc	status,2,c
  7591  00023C  D174               	goto	i2l269
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7595  00023E  0100               	movlb	0	; () banked
  7596  000240  EE20 F00B          	lfsr	2,11
  7597  000244  0100               	movlb	0	; () banked
  7598  000246  51CB               	movf	_ic_ptr& (0+255),w,b
  7599  000248  26D9               	addwf	fsr2l,f,c
  7600  00024A  0100               	movlb	0	; () banked
  7601  00024C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7602  00024E  22DA               	addwfc	fsr2h,f,c
  7603  000250  2ADF               	incf	indf2,f,c
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7607  000252  BAC7               	btfsc	4039,5,c	;volatile
  7608  000254  D019               	goto	i2l3312
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7612  000256  B4C7               	btfsc	4039,2,c	;volatile
  7613  000258  D00B               	goto	i2l3306
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7617  00025A  0100               	movlb	0	; () banked
  7618  00025C  EE20 F00C          	lfsr	2,12
  7619  000260  0100               	movlb	0	; () banked
  7620  000262  51CB               	movf	_ic_ptr& (0+255),w,b
  7621  000264  26D9               	addwf	fsr2l,f,c
  7622  000266  0100               	movlb	0	; () banked
  7623  000268  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  00026A  22DA               	addwfc	fsr2h,f,c
  7625  00026C  0E07               	movlw	7
  7626  00026E  D076               	goto	L10
  7627  000270                     i2l3306:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7631  000270  0100               	movlb	0	; () banked
  7632  000272  EE20 F00C          	lfsr	2,12
  7633  000276  0100               	movlb	0	; () banked
  7634  000278  51CB               	movf	_ic_ptr& (0+255),w,b
  7635  00027A  26D9               	addwf	fsr2l,f,c
  7636  00027C  0100               	movlb	0	; () banked
  7637  00027E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7638  000280  22DA               	addwfc	fsr2h,f,c
  7639  000282  0E08               	movlw	8
  7640  000284  6EDF               	movwf	indf2,c
  7641  000286  D11D               	goto	L14
  7642  000288                     i2l3312:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7646  000288  0100               	movlb	0	; () banked
  7647  00028A  EE20 F00E          	lfsr	2,14
  7648  00028E  0100               	movlb	0	; () banked
  7649  000290  51CB               	movf	_ic_ptr& (0+255),w,b
  7650  000292  26D9               	addwf	fsr2l,f,c
  7651  000294  0100               	movlb	0	; () banked
  7652  000296  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7653  000298  22DA               	addwfc	fsr2h,f,c
  7654  00029A  2ADF               	incf	indf2,f,c
  7655                           
  7656                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7657  00029C  0100               	movlb	0	; () banked
  7658  00029E  EE20 F00C          	lfsr	2,12
  7659  0002A2  0100               	movlb	0	; () banked
  7660  0002A4  51CB               	movf	_ic_ptr& (0+255),w,b
  7661  0002A6  26D9               	addwf	fsr2l,f,c
  7662  0002A8  0100               	movlb	0	; () banked
  7663  0002AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7664  0002AC  22DA               	addwfc	fsr2h,f,c
  7665  0002AE  0E05               	movlw	5
  7666  0002B0  6EDF               	movwf	indf2,c
  7667                           
  7668                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7669  0002B2  0100               	movlb	0	; () banked
  7670  0002B4  EE20 F00D          	lfsr	2,13
  7671  0002B8  0100               	movlb	0	; () banked
  7672  0002BA  51CB               	movf	_ic_ptr& (0+255),w,b
  7673  0002BC  26D9               	addwf	fsr2l,f,c
  7674  0002BE  0100               	movlb	0	; () banked
  7675  0002C0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7676  0002C2  22DA               	addwfc	fsr2h,f,c
  7677  0002C4  0E06               	movlw	6
  7678  0002C6  D04A               	goto	L10
  7679  0002C8                     i2l3314:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;my_i2c.c: 177: {
  7683                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7684  0002C8  0100               	movlb	0	; () banked
  7685  0002CA  EE20 F01A          	lfsr	2,26
  7686  0002CE  0100               	movlb	0	; () banked
  7687  0002D0  51CB               	movf	_ic_ptr& (0+255),w,b
  7688  0002D2  26D9               	addwf	fsr2l,f,c
  7689  0002D4  0100               	movlb	0	; () banked
  7690  0002D6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7691  0002D8  22DA               	addwfc	fsr2h,f,c
  7692  0002DA  50DF               	movf	indf2,w,c
  7693  0002DC  0100               	movlb	0	; () banked
  7694  0002DE  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7695  0002E0  0100               	movlb	0	; () banked
  7696  0002E2  EE20 F019          	lfsr	2,25
  7697  0002E6  0100               	movlb	0	; () banked
  7698  0002E8  51CB               	movf	_ic_ptr& (0+255),w,b
  7699  0002EA  26D9               	addwf	fsr2l,f,c
  7700  0002EC  0100               	movlb	0	; () banked
  7701  0002EE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7702  0002F0  22DA               	addwfc	fsr2h,f,c
  7703  0002F2  50DF               	movf	indf2,w,c
  7704  0002F4  0100               	movlb	0	; () banked
  7705  0002F6  5DB1               	subwf	??_i2c_int_handler& (0+255),w,b
  7706  0002F8  B0D8               	btfsc	status,0,c
  7707  0002FA  D0F4               	goto	L13
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7711  0002FC  0100               	movlb	0	; () banked
  7712  0002FE  EE20 F01A          	lfsr	2,26
  7713  000302  0100               	movlb	0	; () banked
  7714  000304  51CB               	movf	_ic_ptr& (0+255),w,b
  7715  000306  26D9               	addwf	fsr2l,f,c
  7716  000308  0100               	movlb	0	; () banked
  7717  00030A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7718  00030C  22DA               	addwfc	fsr2h,f,c
  7719  00030E  50DF               	movf	indf2,w,c
  7720  000310  0100               	movlb	0	; () banked
  7721  000312  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7722  000314  0100               	movlb	0	; () banked
  7723  000316  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7724  000318  0D01               	mullw	1
  7725  00031A  0E0F               	movlw	15
  7726  00031C  26F3               	addwf	prodl,f,c
  7727  00031E  0E00               	movlw	0
  7728  000320  22F4               	addwfc	prodh,f,c
  7729  000322  50F3               	movf	prodl,w,c
  7730  000324  0100               	movlb	0	; () banked
  7731  000326  0100               	movlb	0	; () banked
  7732  000328  25CB               	addwf	_ic_ptr& (0+255),w,b
  7733  00032A  6ED9               	movwf	fsr2l,c
  7734  00032C  50F4               	movf	prodh,w,c
  7735  00032E  0100               	movlb	0	; () banked
  7736  000330  0100               	movlb	0	; () banked
  7737  000332  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7738  000334  6EDA               	movwf	fsr2h,c
  7739  000336  50DF               	movf	indf2,w,c
  7740  000338  6EC9               	movwf	4041,c	;volatile
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7744  00033A  0100               	movlb	0	; () banked
  7745  00033C  EE20 F01A          	lfsr	2,26
  7746  000340  0100               	movlb	0	; () banked
  7747  000342  51CB               	movf	_ic_ptr& (0+255),w,b
  7748  000344  26D9               	addwf	fsr2l,f,c
  7749  000346  0100               	movlb	0	; () banked
  7750  000348  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  00034A  22DA               	addwfc	fsr2h,f,c
  7752  00034C  2ADF               	incf	indf2,f,c
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;my_i2c.c: 181: data_written = 1;
  7756  00034E  0100               	movlb	0	; () banked
  7757  000350  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7758  000352  0E01               	movlw	1
  7759  000354  0100               	movlb	0	; () banked
  7760  000356  0100               	movlb	0	; () banked
  7761  000358  6FB6               	movwf	i2c_int_handler@data_written& (0+255),b
  7762  00035A  D0C1               	goto	L11
  7763  00035C                     L10:
  7764  00035C  6EDF               	movwf	indf2,c
  7765  00035E  D0E3               	goto	i2l269
  7766  000360                     i2l289:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;my_i2c.c: 189: {
  7770                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7771  000360  A8C7               	btfss	4039,4,c	;volatile
  7772  000362  D062               	goto	i2l3342
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7776  000364  0100               	movlb	0	; () banked
  7777  000366  EE20 F00B          	lfsr	2,11
  7778  00036A  0100               	movlb	0	; () banked
  7779  00036C  51CB               	movf	_ic_ptr& (0+255),w,b
  7780  00036E  26D9               	addwf	fsr2l,f,c
  7781  000370  0100               	movlb	0	; () banked
  7782  000372  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7783  000374  22DA               	addwfc	fsr2h,f,c
  7784  000376  2ADF               	incf	indf2,f,c
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 194: if (data_read) {
  7788  000378  0100               	movlb	0	; () banked
  7789  00037A  0100               	movlb	0	; () banked
  7790  00037C  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7791  00037E  B4D8               	btfsc	status,2,c
  7792  000380  D04A               	goto	i2l3338
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7796  000382  AAC7               	btfss	4039,5,c	;volatile
  7797  000384  D027               	goto	i2l3336
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7801  000386  0100               	movlb	0	; () banked
  7802  000388  EE20 F00A          	lfsr	2,10
  7803  00038C  0100               	movlb	0	; () banked
  7804  00038E  51CB               	movf	_ic_ptr& (0+255),w,b
  7805  000390  26D9               	addwf	fsr2l,f,c
  7806  000392  0100               	movlb	0	; () banked
  7807  000394  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7808  000396  22DA               	addwfc	fsr2h,f,c
  7809  000398  50DF               	movf	indf2,w,c
  7810  00039A  0100               	movlb	0	; () banked
  7811  00039C  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7812  00039E  0100               	movlb	0	; () banked
  7813  0003A0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7814  0003A2  0D01               	mullw	1
  7815  0003A4  50F3               	movf	prodl,w,c
  7816  0003A6  0100               	movlb	0	; () banked
  7817  0003A8  0100               	movlb	0	; () banked
  7818  0003AA  25CB               	addwf	_ic_ptr& (0+255),w,b
  7819  0003AC  6ED9               	movwf	fsr2l,c
  7820  0003AE  50F4               	movf	prodh,w,c
  7821  0003B0  0100               	movlb	0	; () banked
  7822  0003B2  0100               	movlb	0	; () banked
  7823  0003B4  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7824  0003B6  6EDA               	movwf	fsr2h,c
  7825  0003B8  0100               	movlb	0	; () banked
  7826  0003BA  C0B8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7830  0003BE  0100               	movlb	0	; () banked
  7831  0003C0  EE20 F00A          	lfsr	2,10
  7832  0003C4  0100               	movlb	0	; () banked
  7833  0003C6  51CB               	movf	_ic_ptr& (0+255),w,b
  7834  0003C8  26D9               	addwf	fsr2l,f,c
  7835  0003CA  0100               	movlb	0	; () banked
  7836  0003CC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7837  0003CE  22DA               	addwfc	fsr2h,f,c
  7838  0003D0  2ADF               	incf	indf2,f,c
  7839  0003D2  D021               	goto	i2l3338
  7840  0003D4                     i2l3336:
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7844  0003D4  0100               	movlb	0	; () banked
  7845  0003D6  EE20 F00E          	lfsr	2,14
  7846  0003DA  0100               	movlb	0	; () banked
  7847  0003DC  51CB               	movf	_ic_ptr& (0+255),w,b
  7848  0003DE  26D9               	addwf	fsr2l,f,c
  7849  0003E0  0100               	movlb	0	; () banked
  7850  0003E2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7851  0003E4  22DA               	addwfc	fsr2h,f,c
  7852  0003E6  2ADF               	incf	indf2,f,c
  7853                           
  7854                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7855  0003E8  0100               	movlb	0	; () banked
  7856  0003EA  EE20 F00D          	lfsr	2,13
  7857  0003EE  0100               	movlb	0	; () banked
  7858  0003F0  51CB               	movf	_ic_ptr& (0+255),w,b
  7859  0003F2  26D9               	addwf	fsr2l,f,c
  7860  0003F4  0100               	movlb	0	; () banked
  7861  0003F6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7862  0003F8  22DA               	addwfc	fsr2h,f,c
  7863  0003FA  0E06               	movlw	6
  7864  0003FC  6EDF               	movwf	indf2,c
  7865                           
  7866                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7867  0003FE  0100               	movlb	0	; () banked
  7868  000400  EE20 F00C          	lfsr	2,12
  7869  000404  0100               	movlb	0	; () banked
  7870  000406  51CB               	movf	_ic_ptr& (0+255),w,b
  7871  000408  26D9               	addwf	fsr2l,f,c
  7872  00040A  0100               	movlb	0	; () banked
  7873  00040C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7874  00040E  22DA               	addwfc	fsr2h,f,c
  7875  000410  0E05               	movlw	5
  7876  000412  6EDF               	movwf	indf2,c
  7877  000414  D067               	goto	L13
  7878  000416                     i2l3338:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;my_i2c.c: 205: msg_ready = 1;
  7882  000416  0100               	movlb	0	; () banked
  7883  000418  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7884  00041A  0E01               	movlw	1
  7885  00041C  0100               	movlb	0	; () banked
  7886  00041E  0100               	movlb	0	; () banked
  7887  000420  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7888  000422  0100               	movlb	0	; () banked
  7889  000424  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7890                           
  7891                           ; BSR set to: 0
  7892  000426  D05E               	goto	L13
  7893  000428                     i2l3342:
  7894                           
  7895                           ; BSR set to: 0
  7896  000428  0100               	movlb	0	; () banked
  7897  00042A  0100               	movlb	0	; () banked
  7898  00042C  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7899  00042E  B4D8               	btfsc	status,2,c
  7900  000430  D07A               	goto	i2l269
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7904  000432  0100               	movlb	0	; () banked
  7905  000434  EE20 F00B          	lfsr	2,11
  7906  000438  0100               	movlb	0	; () banked
  7907  00043A  51CB               	movf	_ic_ptr& (0+255),w,b
  7908  00043C  26D9               	addwf	fsr2l,f,c
  7909  00043E  0100               	movlb	0	; () banked
  7910  000440  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7911  000442  22DA               	addwfc	fsr2h,f,c
  7912  000444  2ADF               	incf	indf2,f,c
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7916  000446  AAC7               	btfss	4039,5,c	;volatile
  7917  000448  D027               	goto	i2l297
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7921  00044A  0100               	movlb	0	; () banked
  7922  00044C  EE20 F00A          	lfsr	2,10
  7923  000450  0100               	movlb	0	; () banked
  7924  000452  51CB               	movf	_ic_ptr& (0+255),w,b
  7925  000454  26D9               	addwf	fsr2l,f,c
  7926  000456  0100               	movlb	0	; () banked
  7927  000458  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7928  00045A  22DA               	addwfc	fsr2h,f,c
  7929  00045C  50DF               	movf	indf2,w,c
  7930  00045E  0100               	movlb	0	; () banked
  7931  000460  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7932  000462  0100               	movlb	0	; () banked
  7933  000464  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7934  000466  0D01               	mullw	1
  7935  000468  50F3               	movf	prodl,w,c
  7936  00046A  0100               	movlb	0	; () banked
  7937  00046C  0100               	movlb	0	; () banked
  7938  00046E  25CB               	addwf	_ic_ptr& (0+255),w,b
  7939  000470  6ED9               	movwf	fsr2l,c
  7940  000472  50F4               	movf	prodh,w,c
  7941  000474  0100               	movlb	0	; () banked
  7942  000476  0100               	movlb	0	; () banked
  7943  000478  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7944  00047A  6EDA               	movwf	fsr2h,c
  7945  00047C  0100               	movlb	0	; () banked
  7946  00047E  C0B8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7950  000482  0100               	movlb	0	; () banked
  7951  000484  EE20 F00A          	lfsr	2,10
  7952  000488  0100               	movlb	0	; () banked
  7953  00048A  51CB               	movf	_ic_ptr& (0+255),w,b
  7954  00048C  26D9               	addwf	fsr2l,f,c
  7955  00048E  0100               	movlb	0	; () banked
  7956  000490  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7957  000492  22DA               	addwfc	fsr2h,f,c
  7958  000494  2ADF               	incf	indf2,f,c
  7959                           
  7960                           ;my_i2c.c: 213: } else {
  7961  000496  D047               	goto	i2l269
  7962  000498                     i2l297:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7966  000498  A4C7               	btfss	4039,2,c	;volatile
  7967  00049A  D6B6               	goto	i2l3294
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7971  00049C  0100               	movlb	0	; () banked
  7972  00049E  EE20 F00C          	lfsr	2,12
  7973  0004A2  0100               	movlb	0	; () banked
  7974  0004A4  51CB               	movf	_ic_ptr& (0+255),w,b
  7975  0004A6  26D9               	addwf	fsr2l,f,c
  7976  0004A8  0100               	movlb	0	; () banked
  7977  0004AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7978  0004AC  22DA               	addwfc	fsr2h,f,c
  7979  0004AE  0E08               	movlw	8
  7980  0004B0  6EDF               	movwf	indf2,c
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;my_i2c.c: 216: msg_ready = 1;
  7984  0004B2  0100               	movlb	0	; () banked
  7985  0004B4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7986  0004B6  0E01               	movlw	1
  7987  0004B8  0100               	movlb	0	; () banked
  7988  0004BA  0100               	movlb	0	; () banked
  7989  0004BC  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7990  0004BE  0100               	movlb	0	; () banked
  7991  0004C0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7992  0004C2                     L14:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;my_i2c.c: 217: msg_to_send = 1;
  7996  0004C2  0100               	movlb	0	; () banked
  7997  0004C4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7998  0004C6  0E01               	movlw	1
  7999  0004C8  0100               	movlb	0	; () banked
  8000  0004CA  0100               	movlb	0	; () banked
  8001  0004CC  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8002  0004CE  0100               	movlb	0	; () banked
  8003  0004D0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;my_i2c.c: 219: data_read = 0;
  8007  0004D2  0100               	movlb	0	; () banked
  8008  0004D4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8009  0004D6  0E00               	movlw	0
  8010  0004D8  0100               	movlb	0	; () banked
  8011  0004DA  0100               	movlb	0	; () banked
  8012  0004DC  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  8013  0004DE                     L11:
  8014  0004DE  0100               	movlb	0	; () banked
  8015  0004E0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8016                           
  8017                           ;my_i2c.c: 220: } else {
  8018  0004E2  D021               	goto	i2l269
  8019  0004E4                     L13:
  8020                           
  8021                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8022  0004E4  0100               	movlb	0	; () banked
  8023  0004E6  EE20 F00C          	lfsr	2,12
  8024  0004EA  0100               	movlb	0	; () banked
  8025  0004EC  51CB               	movf	_ic_ptr& (0+255),w,b
  8026  0004EE  26D9               	addwf	fsr2l,f,c
  8027  0004F0  0100               	movlb	0	; () banked
  8028  0004F2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8029  0004F4  22DA               	addwfc	fsr2h,f,c
  8030  0004F6  0E05               	movlw	5
  8031  0004F8  D731               	goto	L10
  8032  0004FA                     i2l3364:
  8033                           
  8034                           ; BSR set to: 0
  8035  0004FA  0100               	movlb	0	; () banked
  8036  0004FC  EE20 F00C          	lfsr	2,12
  8037  000500  0100               	movlb	0	; () banked
  8038  000502  51CB               	movf	_ic_ptr& (0+255),w,b
  8039  000504  26D9               	addwf	fsr2l,f,c
  8040  000506  0100               	movlb	0	; () banked
  8041  000508  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8042  00050A  22DA               	addwfc	fsr2h,f,c
  8043  00050C  50DF               	movf	indf2,w,c
  8044                           
  8045                           ; Switch size 1, requested type "space"
  8046                           ; Number of cases is 4, Range of values is 5 to 8
  8047                           ; switch strategies available:
  8048                           ; Name         Instructions Cycles
  8049                           ; simple_byte           13     7 (average)
  8050                           ;	Chosen strategy is simple_byte
  8051  00050E  0A05               	xorlw	5	; case 5
  8052  000510  B4D8               	btfsc	status,2,c
  8053  000512  D63C               	goto	i2l271
  8054  000514  0A03               	xorlw	3	; case 6
  8055  000516  B4D8               	btfsc	status,2,c
  8056  000518  D65B               	goto	i2l275
  8057  00051A  0A01               	xorlw	1	; case 7
  8058  00051C  B4D8               	btfsc	status,2,c
  8059  00051E  D720               	goto	i2l289
  8060  000520  0A0F               	xorlw	15	; case 8
  8061  000522  B4D8               	btfsc	status,2,c
  8062  000524  D6D1               	goto	i2l3314
  8063  000526                     i2l269:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;my_i2c.c: 230: }
  8067                           ;my_i2c.c: 233: if (data_read || data_written) {
  8068  000526  0100               	movlb	0	; () banked
  8069  000528  0100               	movlb	0	; () banked
  8070  00052A  67BB               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8071  00052C  D005               	goto	i2l303
  8072                           
  8073                           ; BSR set to: 0
  8074  00052E  0100               	movlb	0	; () banked
  8075  000530  0100               	movlb	0	; () banked
  8076  000532  51B6               	movf	i2c_int_handler@data_written& (0+255),w,b
  8077  000534  B4D8               	btfsc	status,2,c
  8078  000536  D002               	goto	i2l3370
  8079  000538                     i2l303:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8083  000538  A8C6               	btfss	4038,4,c	;volatile
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8087  00053A  88C6               	bsf	4038,4,c	;volatile
  8088  00053C                     i2l3370:
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;my_i2c.c: 237: }
  8092                           ;my_i2c.c: 238: }
  8093                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8094  00053C  0100               	movlb	0	; () banked
  8095  00053E  EE20 F00A          	lfsr	2,10
  8096  000542  0100               	movlb	0	; () banked
  8097  000544  51CB               	movf	_ic_ptr& (0+255),w,b
  8098  000546  26D9               	addwf	fsr2l,f,c
  8099  000548  0100               	movlb	0	; () banked
  8100  00054A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8101  00054C  22DA               	addwfc	fsr2h,f,c
  8102  00054E  0E08               	movlw	8
  8103  000550  64DF               	cpfsgt	indf2,c
  8104  000552  D024               	goto	i2l3376
  8105                           
  8106                           ; BSR set to: 0
  8107  000554  0100               	movlb	0	; () banked
  8108  000556  0100               	movlb	0	; () banked
  8109  000558  67BA               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8110  00055A  D020               	goto	i2l3376
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8114  00055C  0100               	movlb	0	; () banked
  8115  00055E  EE20 F00C          	lfsr	2,12
  8116  000562  0100               	movlb	0	; () banked
  8117  000564  51CB               	movf	_ic_ptr& (0+255),w,b
  8118  000566  26D9               	addwf	fsr2l,f,c
  8119  000568  0100               	movlb	0	; () banked
  8120  00056A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8121  00056C  22DA               	addwfc	fsr2h,f,c
  8122  00056E  0E05               	movlw	5
  8123  000570  6EDF               	movwf	indf2,c
  8124                           
  8125                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8126  000572  0100               	movlb	0	; () banked
  8127  000574  EE20 F00E          	lfsr	2,14
  8128  000578  0100               	movlb	0	; () banked
  8129  00057A  51CB               	movf	_ic_ptr& (0+255),w,b
  8130  00057C  26D9               	addwf	fsr2l,f,c
  8131  00057E  0100               	movlb	0	; () banked
  8132  000580  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8133  000582  22DA               	addwfc	fsr2h,f,c
  8134  000584  2ADF               	incf	indf2,f,c
  8135                           
  8136                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8137  000586  0100               	movlb	0	; () banked
  8138  000588  EE20 F00D          	lfsr	2,13
  8139  00058C  0100               	movlb	0	; () banked
  8140  00058E  51CB               	movf	_ic_ptr& (0+255),w,b
  8141  000590  26D9               	addwf	fsr2l,f,c
  8142  000592  0100               	movlb	0	; () banked
  8143  000594  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8144  000596  22DA               	addwfc	fsr2h,f,c
  8145  000598  0E07               	movlw	7
  8146  00059A  6EDF               	movwf	indf2,c
  8147  00059C                     i2l3376:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;my_i2c.c: 245: }
  8151                           ;my_i2c.c: 247: if (msg_ready) {
  8152  00059C  0100               	movlb	0	; () banked
  8153  00059E  0100               	movlb	0	; () banked
  8154  0005A0  51BA               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8155  0005A2  B4D8               	btfsc	status,2,c
  8156  0005A4  D048               	goto	i2l3384
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8160  0005A6  0100               	movlb	0	; () banked
  8161  0005A8  EE20 F00B          	lfsr	2,11
  8162  0005AC  0100               	movlb	0	; () banked
  8163  0005AE  51CB               	movf	_ic_ptr& (0+255),w,b
  8164  0005B0  26D9               	addwf	fsr2l,f,c
  8165  0005B2  0100               	movlb	0	; () banked
  8166  0005B4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8167  0005B6  22DA               	addwfc	fsr2h,f,c
  8168  0005B8  0100               	movlb	0	; () banked
  8169  0005BA  EE10 F00A          	lfsr	1,10
  8170  0005BE  0100               	movlb	0	; () banked
  8171  0005C0  51CB               	movf	_ic_ptr& (0+255),w,b
  8172  0005C2  26E1               	addwf	fsr1l,f,c
  8173  0005C4  0100               	movlb	0	; () banked
  8174  0005C6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8175  0005C8  22E2               	addwfc	fsr1h,f,c
  8176  0005CA  50E7               	movf	indf1,w,c
  8177  0005CC  0100               	movlb	0	; () banked
  8178  0005CE  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8179  0005D0  0100               	movlb	0	; () banked
  8180  0005D2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8181  0005D4  0D01               	mullw	1
  8182  0005D6  50F3               	movf	prodl,w,c
  8183  0005D8  0100               	movlb	0	; () banked
  8184  0005DA  0100               	movlb	0	; () banked
  8185  0005DC  25CB               	addwf	_ic_ptr& (0+255),w,b
  8186  0005DE  6EE1               	movwf	fsr1l,c
  8187  0005E0  50F4               	movf	prodh,w,c
  8188  0005E2  0100               	movlb	0	; () banked
  8189  0005E4  0100               	movlb	0	; () banked
  8190  0005E6  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8191  0005E8  6EE2               	movwf	fsr1h,c
  8192  0005EA  CFDF FFE7          	movff	indf2,indf1
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8196  0005EE  0100               	movlb	0	; () banked
  8197  0005F0  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8198  0005F2  0E28               	movlw	40
  8199  0005F4  0100               	movlb	0	; () banked
  8200  0005F6  0100               	movlb	0	; () banked
  8201  0005F8  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8202  0005FA  0100               	movlb	0	; () banked
  8203  0005FC  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8204  0005FE  0100               	movlb	0	; () banked
  8205  000600  0100               	movlb	0	; () banked
  8206  000602  C0CC  F0AF         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8207  000606  0100               	movlb	0	; () banked
  8208  000608  0100               	movlb	0	; () banked
  8209  00060A  C0CB  F0AE         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8210  00060E  0100               	movlb	0	; () banked
  8211  000610  EE20 F00A          	lfsr	2,10
  8212  000614  0100               	movlb	0	; () banked
  8213  000616  51CB               	movf	_ic_ptr& (0+255),w,b
  8214  000618  26D9               	addwf	fsr2l,f,c
  8215  00061A  0100               	movlb	0	; () banked
  8216  00061C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8217  00061E  22DA               	addwfc	fsr2h,f,c
  8218  000620  50DF               	movf	indf2,w,c
  8219  000622  0100               	movlb	0	; () banked
  8220  000624  6FB2               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8221  000626  0100               	movlb	0	; () banked
  8222  000628  29B2               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8223  00062A  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8224                           
  8225                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8226  00062E  0100               	movlb	0	; () banked
  8227  000630  EE20 F00A          	lfsr	2,10
  8228  000634  D04B               	goto	L12
  8229  000636                     i2l3384:
  8230                           
  8231                           ; BSR set to: 0
  8232  000636  0100               	movlb	0	; () banked
  8233  000638  EE20 F00E          	lfsr	2,14
  8234  00063C  0100               	movlb	0	; () banked
  8235  00063E  51CB               	movf	_ic_ptr& (0+255),w,b
  8236  000640  26D9               	addwf	fsr2l,f,c
  8237  000642  0100               	movlb	0	; () banked
  8238  000644  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8239  000646  22DA               	addwfc	fsr2h,f,c
  8240  000648  50DF               	movf	indf2,w,c
  8241  00064A  B4D8               	btfsc	status,2,c
  8242  00064C  D047               	goto	i2l3392
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8246  00064E  0100               	movlb	0	; () banked
  8247  000650  EE20 F00E          	lfsr	2,14
  8248  000654  0100               	movlb	0	; () banked
  8249  000656  51CB               	movf	_ic_ptr& (0+255),w,b
  8250  000658  26D9               	addwf	fsr2l,f,c
  8251  00065A  0100               	movlb	0	; () banked
  8252  00065C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8253  00065E  22DA               	addwfc	fsr2h,f,c
  8254  000660  50DF               	movf	indf2,w,c
  8255  000662  0100               	movlb	0	; () banked
  8256  000664  0100               	movlb	0	; () banked
  8257  000666  6FB3               	movwf	i2c_int_handler@error_buf& (0+255),b
  8258                           
  8259                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8260  000668  0100               	movlb	0	; () banked
  8261  00066A  EE20 F00D          	lfsr	2,13
  8262  00066E  0100               	movlb	0	; () banked
  8263  000670  51CB               	movf	_ic_ptr& (0+255),w,b
  8264  000672  26D9               	addwf	fsr2l,f,c
  8265  000674  0100               	movlb	0	; () banked
  8266  000676  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8267  000678  22DA               	addwfc	fsr2h,f,c
  8268  00067A  50DF               	movf	indf2,w,c
  8269  00067C  0100               	movlb	0	; () banked
  8270  00067E  0100               	movlb	0	; () banked
  8271  000680  6FB4               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8272                           
  8273                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8274  000682  0100               	movlb	0	; () banked
  8275  000684  EE20 F00B          	lfsr	2,11
  8276  000688  0100               	movlb	0	; () banked
  8277  00068A  51CB               	movf	_ic_ptr& (0+255),w,b
  8278  00068C  26D9               	addwf	fsr2l,f,c
  8279  00068E  0100               	movlb	0	; () banked
  8280  000690  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8281  000692  22DA               	addwfc	fsr2h,f,c
  8282  000694  50DF               	movf	indf2,w,c
  8283  000696  0100               	movlb	0	; () banked
  8284  000698  0100               	movlb	0	; () banked
  8285  00069A  6FB5               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8289  00069C  0100               	movlb	0	; () banked
  8290  00069E  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8291  0006A0  0E29               	movlw	41
  8292  0006A2  0100               	movlb	0	; () banked
  8293  0006A4  0100               	movlb	0	; () banked
  8294  0006A6  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8295  0006A8  0100               	movlb	0	; () banked
  8296  0006AA  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8297  0006AC  0100               	movlb	0	; () banked
  8298  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  8299  0006B0  0100               	movlb	0	; () banked
  8300  0006B2  0100               	movlb	0	; () banked
  8301  0006B4  6FAF               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8302  0006B6  0100               	movlb	0	; () banked
  8303  0006B8  0EB3               	movlw	low i2c_int_handler@error_buf
  8304  0006BA  0100               	movlb	0	; () banked
  8305  0006BC  0100               	movlb	0	; () banked
  8306  0006BE  6FAE               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8307  0006C0  0E03               	movlw	3
  8308  0006C2  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8309                           
  8310                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8311  0006C6  0100               	movlb	0	; () banked
  8312  0006C8  EE20 F00E          	lfsr	2,14
  8313  0006CC                     L12:
  8314  0006CC  0100               	movlb	0	; () banked
  8315  0006CE  51CB               	movf	_ic_ptr& (0+255),w,b
  8316  0006D0  26D9               	addwf	fsr2l,f,c
  8317  0006D2  0100               	movlb	0	; () banked
  8318  0006D4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8319  0006D6  22DA               	addwfc	fsr2h,f,c
  8320  0006D8  0E00               	movlw	0
  8321  0006DA  6EDF               	movwf	indf2,c
  8322  0006DC                     i2l3392:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;my_i2c.c: 257: }
  8326                           ;my_i2c.c: 258: if (msg_to_send) {
  8327  0006DC  0100               	movlb	0	; () banked
  8328  0006DE  0100               	movlb	0	; () banked
  8329  0006E0  51B9               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8330  0006E2  B4D8               	btfsc	status,2,c
  8331  0006E4  0012               	return	
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8335  0006E6  0100               	movlb	0	; () banked
  8336  0006E8  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8337  0006EA  0E2A               	movlw	42
  8338  0006EC  0100               	movlb	0	; () banked
  8339  0006EE  0100               	movlb	0	; () banked
  8340  0006F0  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8341  0006F2  0100               	movlb	0	; () banked
  8342  0006F4  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8343  0006F6  0100               	movlb	0	; () banked
  8344  0006F8  0100               	movlb	0	; () banked
  8345  0006FA  C0CC  F0AF         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8346  0006FE  0100               	movlb	0	; () banked
  8347  000700  0100               	movlb	0	; () banked
  8348  000702  C0CB  F0AE         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8349  000706  0E00               	movlw	0
  8350  000708  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8351                           
  8352                           ;my_i2c.c: 261: msg_to_send = 0;
  8353  00070C  0100               	movlb	0	; () banked
  8354  00070E  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8355  000710  0E00               	movlw	0
  8356  000712  0100               	movlb	0	; () banked
  8357  000714  0100               	movlb	0	; () banked
  8358  000716  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8359  000718  0100               	movlb	0	; () banked
  8360  00071A  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8361  00071C  0012               	return	
  8362  00071E                     __end_of_i2c_int_handler:
  8363                           	opt stack 0
  8364                           pclatu	equ	0xFFB
  8365                           pclath	equ	0xFFA
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           prodh	equ	0xFF4
  8371                           prodl	equ	0xFF3
  8372                           intcon	equ	0xFF2
  8373                           postinc0	equ	0xFEE
  8374                           fsr0h	equ	0xFEA
  8375                           fsr0l	equ	0xFE9
  8376                           wreg	equ	0xFE8
  8377                           indf1	equ	0xFE7
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           bsr	equ	0xFE0
  8381                           indf2	equ	0xFDF
  8382                           postinc2	equ	0xFDE
  8383                           postdec2	equ	0xFDD
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388 ;; *************** function _handle_start *****************
  8389 ;; Defined at:
  8390 ;;		line 71 in file "src/my_i2c.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  data_read       1    wreg     unsigned char 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  data_read       1    0[BANK0 ] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;		None               void
  8397 ;; Registers used:
  8398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;Total ram usage:        1 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_i2c_int_handler
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text50
  8418  0012C8                     __ptext50:
  8419                           	opt stack 0
  8420  0012C8                     _handle_start:
  8421                           	opt stack 17
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;incstack = 0
  8425                           ;handle_start@data_read stored from wreg
  8426  0012C8  CFE8 F097          	movff	wreg,handle_start@data_read
  8427                           
  8428                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8429  0012CC  0100               	movlb	0	; () banked
  8430  0012CE  EE20 F00B          	lfsr	2,11
  8431  0012D2  0100               	movlb	0	; () banked
  8432  0012D4  51CB               	movf	_ic_ptr& (0+255),w,b
  8433  0012D6  26D9               	addwf	fsr2l,f,c
  8434  0012D8  0100               	movlb	0	; () banked
  8435  0012DA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8436  0012DC  22DA               	addwfc	fsr2h,f,c
  8437  0012DE  0E01               	movlw	1
  8438  0012E0  6EDF               	movwf	indf2,c
  8439                           
  8440                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8441  0012E2  0100               	movlb	0	; () banked
  8442  0012E4  EE20 F00A          	lfsr	2,10
  8443  0012E8  0100               	movlb	0	; () banked
  8444  0012EA  51CB               	movf	_ic_ptr& (0+255),w,b
  8445  0012EC  26D9               	addwf	fsr2l,f,c
  8446  0012EE  0100               	movlb	0	; () banked
  8447  0012F0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8448  0012F2  22DA               	addwfc	fsr2h,f,c
  8449  0012F4  0E00               	movlw	0
  8450  0012F6  6EDF               	movwf	indf2,c
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;my_i2c.c: 75: if (data_read) {
  8454  0012F8  0100               	movlb	0	; () banked
  8455  0012FA  0100               	movlb	0	; () banked
  8456  0012FC  5197               	movf	handle_start@data_read& (0+255),w,b
  8457  0012FE  B4D8               	btfsc	status,2,c
  8458  001300  D03D               	goto	i2l3824
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8462  001302  AAC7               	btfss	4039,5,c	;volatile
  8463  001304  D021               	goto	i2l259
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8467  001306  0100               	movlb	0	; () banked
  8468  001308  EE20 F00C          	lfsr	2,12
  8469  00130C  0100               	movlb	0	; () banked
  8470  00130E  51CB               	movf	_ic_ptr& (0+255),w,b
  8471  001310  26D9               	addwf	fsr2l,f,c
  8472  001312  0100               	movlb	0	; () banked
  8473  001314  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8474  001316  22DA               	addwfc	fsr2h,f,c
  8475  001318  0E05               	movlw	5
  8476  00131A  6EDF               	movwf	indf2,c
  8477                           
  8478                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8479  00131C  0100               	movlb	0	; () banked
  8480  00131E  EE20 F00E          	lfsr	2,14
  8481  001322  0100               	movlb	0	; () banked
  8482  001324  51CB               	movf	_ic_ptr& (0+255),w,b
  8483  001326  26D9               	addwf	fsr2l,f,c
  8484  001328  0100               	movlb	0	; () banked
  8485  00132A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8486  00132C  22DA               	addwfc	fsr2h,f,c
  8487  00132E  2ADF               	incf	indf2,f,c
  8488                           
  8489                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8490  001330  0100               	movlb	0	; () banked
  8491  001332  EE20 F00D          	lfsr	2,13
  8492  001336  0100               	movlb	0	; () banked
  8493  001338  51CB               	movf	_ic_ptr& (0+255),w,b
  8494  00133A  26D9               	addwf	fsr2l,f,c
  8495  00133C  0100               	movlb	0	; () banked
  8496  00133E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8497  001340  22DA               	addwfc	fsr2h,f,c
  8498  001342  0E05               	movlw	5
  8499  001344  6EDF               	movwf	indf2,c
  8500                           
  8501                           ;my_i2c.c: 82: } else {
  8502  001346  0012               	return	
  8503  001348                     i2l259:
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8507  001348  A4C7               	btfss	4039,2,c	;volatile
  8508  00134A  D00C               	goto	i2l3822
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8512  00134C  0100               	movlb	0	; () banked
  8513  00134E  EE20 F00C          	lfsr	2,12
  8514  001352  0100               	movlb	0	; () banked
  8515  001354  51CB               	movf	_ic_ptr& (0+255),w,b
  8516  001356  26D9               	addwf	fsr2l,f,c
  8517  001358  0100               	movlb	0	; () banked
  8518  00135A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8519  00135C  22DA               	addwfc	fsr2h,f,c
  8520  00135E  0E08               	movlw	8
  8521  001360  6EDF               	movwf	indf2,c
  8522                           
  8523                           ;my_i2c.c: 85: } else {
  8524  001362  0012               	return	
  8525  001364                     i2l3822:
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8529  001364  0100               	movlb	0	; () banked
  8530  001366  EE20 F00C          	lfsr	2,12
  8531  00136A  0100               	movlb	0	; () banked
  8532  00136C  51CB               	movf	_ic_ptr& (0+255),w,b
  8533  00136E  26D9               	addwf	fsr2l,f,c
  8534  001370  0100               	movlb	0	; () banked
  8535  001372  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8536  001374  22DA               	addwfc	fsr2h,f,c
  8537  001376  0E07               	movlw	7
  8538  001378  6EDF               	movwf	indf2,c
  8539  00137A  0012               	return	
  8540  00137C                     i2l3824:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8544  00137C  0100               	movlb	0	; () banked
  8545  00137E  EE20 F00C          	lfsr	2,12
  8546  001382  0100               	movlb	0	; () banked
  8547  001384  51CB               	movf	_ic_ptr& (0+255),w,b
  8548  001386  26D9               	addwf	fsr2l,f,c
  8549  001388  0100               	movlb	0	; () banked
  8550  00138A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8551  00138C  22DA               	addwfc	fsr2h,f,c
  8552  00138E  0E06               	movlw	6
  8553  001390  6EDF               	movwf	indf2,c
  8554  001392  0012               	return	
  8555  001394                     __end_of_handle_start:
  8556                           	opt stack 0
  8557                           pclatu	equ	0xFFB
  8558                           pclath	equ	0xFFA
  8559                           tblptru	equ	0xFF8
  8560                           tblptrh	equ	0xFF7
  8561                           tblptrl	equ	0xFF6
  8562                           tablat	equ	0xFF5
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           postinc0	equ	0xFEE
  8567                           fsr0h	equ	0xFEA
  8568                           fsr0l	equ	0xFE9
  8569                           wreg	equ	0xFE8
  8570                           indf1	equ	0xFE7
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           bsr	equ	0xFE0
  8574                           indf2	equ	0xFDF
  8575                           postinc2	equ	0xFDE
  8576                           postdec2	equ	0xFDD
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function _ToMainHigh_sendmsg *****************
  8582 ;; Defined at:
  8583 ;;		line 126 in file "src/messages.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  length          1    wreg     unsigned char 
  8586 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8587 ;;  data            2   23[BANK0 ] PTR void 
  8588 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  length          1   25[BANK0 ] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      char 
  8593 ;; Registers used:
  8594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8600 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;Total ram usage:        4 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    2
  8607 ;; This function calls:
  8608 ;;		i2_send_msg
  8609 ;; This function is called by:
  8610 ;;		_i2c_int_handler
  8611 ;;		_timer0_int_handler
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text51
  8616  001D8E                     __ptext51:
  8617                           	opt stack 0
  8618  001D8E                     _ToMainHigh_sendmsg:
  8619                           	opt stack 15
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;incstack = 0
  8623                           ;ToMainHigh_sendmsg@length stored from wreg
  8624  001D8E  CFE8 F0B0          	movff	wreg,ToMainHigh_sendmsg@length
  8625                           
  8626                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8627                           ;	Return value of _ToMainHigh_sendmsg is never used
  8628  001D92  0101               	movlb	1	; () banked
  8629  001D94  0E01               	movlw	high _ToMainHigh_MQ
  8630  001D96  0100               	movlb	0	; () banked
  8631  001D98  0100               	movlb	0	; () banked
  8632  001D9A  6FA2               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8633  001D9C  0101               	movlb	1	; () banked
  8634  001D9E  0E6C               	movlw	low _ToMainHigh_MQ
  8635  001DA0  0100               	movlb	0	; () banked
  8636  001DA2  0100               	movlb	0	; () banked
  8637  001DA4  6FA1               	movwf	i2send_msg@qptr& (0+255),b
  8638  001DA6  C0B0  F0A3         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8639  001DAA  C0AD  F0A4         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8640  001DAE  0100               	movlb	0	; () banked
  8641  001DB0  0100               	movlb	0	; () banked
  8642  001DB2  C0AF  F0A6         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8643  001DB6  0100               	movlb	0	; () banked
  8644  001DB8  0100               	movlb	0	; () banked
  8645  001DBA  C0AE  F0A5         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8646  001DBE  EC04  F008         	call	i2_send_msg	;wreg free
  8647  001DC2  0012               	return	
  8648  001DC4                     __end_of_ToMainHigh_sendmsg:
  8649                           	opt stack 0
  8650                           pclatu	equ	0xFFB
  8651                           pclath	equ	0xFFA
  8652                           tblptru	equ	0xFF8
  8653                           tblptrh	equ	0xFF7
  8654                           tblptrl	equ	0xFF6
  8655                           tablat	equ	0xFF5
  8656                           prodh	equ	0xFF4
  8657                           prodl	equ	0xFF3
  8658                           intcon	equ	0xFF2
  8659                           postinc0	equ	0xFEE
  8660                           fsr0h	equ	0xFEA
  8661                           fsr0l	equ	0xFE9
  8662                           wreg	equ	0xFE8
  8663                           indf1	equ	0xFE7
  8664                           fsr1h	equ	0xFE2
  8665                           fsr1l	equ	0xFE1
  8666                           bsr	equ	0xFE0
  8667                           indf2	equ	0xFDF
  8668                           postinc2	equ	0xFDE
  8669                           postdec2	equ	0xFDD
  8670                           fsr2h	equ	0xFDA
  8671                           fsr2l	equ	0xFD9
  8672                           status	equ	0xFD8
  8673                           
  8674 ;; *************** function i2_send_msg *****************
  8675 ;; Defined at:
  8676 ;;		line 24 in file "src/messages.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8679 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8680 ;;  length          1   12[BANK0 ] unsigned char 
  8681 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8682 ;;  data            2   14[BANK0 ] PTR void 
  8683 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8684 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8687 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8688 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8689 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8690 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      char 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8701 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;Total ram usage:       12 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    1
  8707 ;; This function calls:
  8708 ;;		i2_memcpy
  8709 ;; This function is called by:
  8710 ;;		_ToMainHigh_sendmsg
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text52
  8715  001008                     __ptext52:
  8716                           	opt stack 0
  8717  001008                     i2_send_msg:
  8718                           	opt stack 15
  8719                           
  8720                           ;messages.c: 25: unsigned char slot;
  8721                           ;messages.c: 27: msg *qmsg;
  8722                           ;messages.c: 28: size_t tlength = length;
  8723                           
  8724                           ;incstack = 0
  8725  001008  0100               	movlb	0	; () banked
  8726  00100A  0100               	movlb	0	; () banked
  8727  00100C  C0A3  F0A8         	movff	i2send_msg@length,i2send_msg@tlength
  8728  001010  0100               	movlb	0	; () banked
  8729  001012  0100               	movlb	0	; () banked
  8730  001014  6BA9               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8734  001016  0100               	movlb	0	; () banked
  8735  001018  EE20 F034          	lfsr	2,52
  8736  00101C  0100               	movlb	0	; () banked
  8737  00101E  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8738  001020  26D9               	addwf	fsr2l,f,c
  8739  001022  0100               	movlb	0	; () banked
  8740  001024  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8741  001026  22DA               	addwfc	fsr2h,f,c
  8742  001028  50DF               	movf	indf2,w,c
  8743  00102A  0100               	movlb	0	; () banked
  8744  00102C  0100               	movlb	0	; () banked
  8745  00102E  6FAA               	movwf	i2send_msg@slot& (0+255),b
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8749  001030  0100               	movlb	0	; () banked
  8750  001032  0100               	movlb	0	; () banked
  8751  001034  51AA               	movf	i2send_msg@slot& (0+255),w,b
  8752  001036  0D0D               	mullw	13
  8753  001038  50F3               	movf	prodl,w,c
  8754  00103A  0100               	movlb	0	; () banked
  8755  00103C  0100               	movlb	0	; () banked
  8756  00103E  25A1               	addwf	i2send_msg@qptr& (0+255),w,b
  8757  001040  0100               	movlb	0	; () banked
  8758  001042  0100               	movlb	0	; () banked
  8759  001044  6FAB               	movwf	i2send_msg@qmsg& (0+255),b
  8760  001046  50F4               	movf	prodh,w,c
  8761  001048  0100               	movlb	0	; () banked
  8762  00104A  0100               	movlb	0	; () banked
  8763  00104C  21A2               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8764  00104E  0100               	movlb	0	; () banked
  8765  001050  6FAC               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;messages.c: 41: if (qmsg->full != 0) {
  8769  001052  C0AB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8770  001056  C0AC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8771  00105A  50DF               	movf	indf2,w,c
  8772  00105C  B4D8               	btfsc	status,2,c
  8773  00105E  D002               	goto	i2l3884
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;messages.c: 42: return (-1);
  8777  001060  0EFF               	movlw	255
  8778  001062  0012               	return	
  8779  001064                     i2l3884:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;messages.c: 43: }
  8783                           ;messages.c: 46: qmsg->length = length;
  8784  001064  0100               	movlb	0	; () banked
  8785  001066  EE20 F001          	lfsr	2,1
  8786  00106A  0100               	movlb	0	; () banked
  8787  00106C  51AB               	movf	i2send_msg@qmsg& (0+255),w,b
  8788  00106E  26D9               	addwf	fsr2l,f,c
  8789  001070  0100               	movlb	0	; () banked
  8790  001072  51AC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8791  001074  22DA               	addwfc	fsr2h,f,c
  8792  001076  0100               	movlb	0	; () banked
  8793  001078  C0A3  FFDF         	movff	i2send_msg@length,indf2
  8794                           
  8795                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8796  00107C  0100               	movlb	0	; () banked
  8797  00107E  EE20 F002          	lfsr	2,2
  8798  001082  0100               	movlb	0	; () banked
  8799  001084  51AB               	movf	i2send_msg@qmsg& (0+255),w,b
  8800  001086  26D9               	addwf	fsr2l,f,c
  8801  001088  0100               	movlb	0	; () banked
  8802  00108A  51AC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8803  00108C  22DA               	addwfc	fsr2h,f,c
  8804  00108E  0100               	movlb	0	; () banked
  8805  001090  C0A4  FFDF         	movff	i2send_msg@msgtype,indf2
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8809  001094  0E03               	movlw	3
  8810  001096  0100               	movlb	0	; () banked
  8811  001098  0100               	movlb	0	; () banked
  8812  00109A  25AB               	addwf	i2send_msg@qmsg& (0+255),w,b
  8813  00109C  0100               	movlb	0	; () banked
  8814  00109E  0100               	movlb	0	; () banked
  8815  0010A0  6F97               	movwf	i2memcpy@d1& (0+255),b
  8816  0010A2  0E00               	movlw	0
  8817  0010A4  0100               	movlb	0	; () banked
  8818  0010A6  0100               	movlb	0	; () banked
  8819  0010A8  21AC               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8820  0010AA  0100               	movlb	0	; () banked
  8821  0010AC  6F98               	movwf	(i2memcpy@d1+1)& (0+255),b
  8822  0010AE  0100               	movlb	0	; () banked
  8823  0010B0  0100               	movlb	0	; () banked
  8824  0010B2  C0A6  F09A         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8825  0010B6  0100               	movlb	0	; () banked
  8826  0010B8  0100               	movlb	0	; () banked
  8827  0010BA  C0A5  F099         	movff	i2send_msg@data,i2memcpy@s1
  8828  0010BE  C0A8  F09B         	movff	i2send_msg@tlength,i2memcpy@n
  8829  0010C2  C0A9  F09C         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8830  0010C6  ECCE  F00C         	call	i2_memcpy	;wreg free
  8831                           
  8832                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8833  0010CA  0100               	movlb	0	; () banked
  8834  0010CC  EE20 F034          	lfsr	2,52
  8835  0010D0  0100               	movlb	0	; () banked
  8836  0010D2  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8837  0010D4  26D9               	addwf	fsr2l,f,c
  8838  0010D6  0100               	movlb	0	; () banked
  8839  0010D8  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8840  0010DA  22DA               	addwfc	fsr2h,f,c
  8841  0010DC  0100               	movlb	0	; () banked
  8842  0010DE  EE10 F034          	lfsr	1,52
  8843  0010E2  0100               	movlb	0	; () banked
  8844  0010E4  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8845  0010E6  26E1               	addwf	fsr1l,f,c
  8846  0010E8  0100               	movlb	0	; () banked
  8847  0010EA  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8848  0010EC  22E2               	addwfc	fsr1h,f,c
  8849  0010EE  50E7               	movf	indf1,w,c
  8850  0010F0  0100               	movlb	0	; () banked
  8851  0010F2  6FA7               	movwf	??i2_send_msg& (0+255),b
  8852  0010F4  0100               	movlb	0	; () banked
  8853  0010F6  29A7               	incf	??i2_send_msg& (0+255),w,b
  8854  0010F8  0B03               	andlw	3
  8855  0010FA  6EDF               	movwf	indf2,c
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;messages.c: 59: qmsg->full = 1;
  8859  0010FC  C0AB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8860  001100  C0AC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8861  001104  0E01               	movlw	1
  8862  001106  6EDF               	movwf	indf2,c
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;messages.c: 60: return (1);
  8866  001108  0E01               	movlw	1
  8867  00110A  0012               	return	
  8868  00110C                     __end_ofi2_send_msg:
  8869                           	opt stack 0
  8870                           pclatu	equ	0xFFB
  8871                           pclath	equ	0xFFA
  8872                           tblptru	equ	0xFF8
  8873                           tblptrh	equ	0xFF7
  8874                           tblptrl	equ	0xFF6
  8875                           tablat	equ	0xFF5
  8876                           prodh	equ	0xFF4
  8877                           prodl	equ	0xFF3
  8878                           intcon	equ	0xFF2
  8879                           postinc0	equ	0xFEE
  8880                           fsr0h	equ	0xFEA
  8881                           fsr0l	equ	0xFE9
  8882                           wreg	equ	0xFE8
  8883                           indf1	equ	0xFE7
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           bsr	equ	0xFE0
  8887                           indf2	equ	0xFDF
  8888                           postinc2	equ	0xFDE
  8889                           postdec2	equ	0xFDD
  8890                           fsr2h	equ	0xFDA
  8891                           fsr2l	equ	0xFD9
  8892                           status	equ	0xFD8
  8893                           
  8894 ;; *************** function i2_memcpy *****************
  8895 ;; Defined at:
  8896 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  d1              2    0[BANK0 ] PTR void 
  8899 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8900 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8901 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8902 ;;  s1              2    2[BANK0 ] PTR const void 
  8903 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8904 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8905 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8906 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8907 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8908 ;;  n               2    4[BANK0 ] unsigned int 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8911 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8912 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8913 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8914 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8915 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8916 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8917 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8918 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8919 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2    0[BANK0 ] PTR void 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8929 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8930 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8932 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8933 ;;Total ram usage:       10 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		i2_send_msg
  8939 ;;		i2_recv_msg
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text53
  8944  00199C                     __ptext53:
  8945                           	opt stack 0
  8946  00199C                     i2_memcpy:
  8947                           	opt stack 15
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;incstack = 0
  8951  00199C  0100               	movlb	0	; () banked
  8952  00199E  0100               	movlb	0	; () banked
  8953  0019A0  C09A  F0A0         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8954  0019A4  0100               	movlb	0	; () banked
  8955  0019A6  0100               	movlb	0	; () banked
  8956  0019A8  C099  F09F         	movff	i2memcpy@s1,i2memcpy@s
  8957  0019AC  0100               	movlb	0	; () banked
  8958  0019AE  0100               	movlb	0	; () banked
  8959  0019B0  C098  F09E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8960  0019B4  0100               	movlb	0	; () banked
  8961  0019B6  0100               	movlb	0	; () banked
  8962  0019B8  C097  F09D         	movff	i2memcpy@d1,i2memcpy@d
  8963  0019BC  D012               	goto	i2l3948
  8964  0019BE                     i2l3942:
  8965                           
  8966                           ; BSR set to: 0
  8967  0019BE  C09F  FFD9         	movff	i2memcpy@s,fsr2l
  8968  0019C2  C0A0  FFDA         	movff	i2memcpy@s+1,fsr2h
  8969  0019C6  C09D  FFE1         	movff	i2memcpy@d,fsr1l
  8970  0019CA  C09E  FFE2         	movff	i2memcpy@d+1,fsr1h
  8971  0019CE  CFDF FFE7          	movff	indf2,indf1
  8972                           
  8973                           ; BSR set to: 0
  8974  0019D2  0100               	movlb	0	; () banked
  8975  0019D4  0100               	movlb	0	; () banked
  8976  0019D6  4B9F               	infsnz	i2memcpy@s& (0+255),f,b
  8977  0019D8  2BA0               	incf	(i2memcpy@s+1)& (0+255),f,b
  8978                           
  8979                           ; BSR set to: 0
  8980  0019DA  0100               	movlb	0	; () banked
  8981  0019DC  0100               	movlb	0	; () banked
  8982  0019DE  4B9D               	infsnz	i2memcpy@d& (0+255),f,b
  8983  0019E0  2B9E               	incf	(i2memcpy@d+1)& (0+255),f,b
  8984  0019E2                     i2l3948:
  8985                           
  8986                           ; BSR set to: 0
  8987  0019E2  0100               	movlb	0	; () banked
  8988  0019E4  0100               	movlb	0	; () banked
  8989  0019E6  079B               	decf	i2memcpy@n& (0+255),f,b
  8990  0019E8  A0D8               	btfss	status,0,c
  8991  0019EA  079C               	decf	(i2memcpy@n+1)& (0+255),f,b
  8992  0019EC  0100               	movlb	0	; () banked
  8993  0019EE  299B               	incf	i2memcpy@n& (0+255),w,b
  8994  0019F0  B4D8               	btfsc	status,2,c
  8995  0019F2  299C               	incf	(i2memcpy@n+1)& (0+255),w,b
  8996  0019F4  B4D8               	btfsc	status,2,c
  8997                           
  8998                           ; BSR set to: 0
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;	Return value of i2_memcpy is never used
  9002  0019F6  0012               	return	
  9003  0019F8  D7E2               	goto	i2l3942
  9004  0019FA                     __end_ofi2_memcpy:
  9005                           	opt stack 0
  9006                           pclatu	equ	0xFFB
  9007                           pclath	equ	0xFFA
  9008                           tblptru	equ	0xFF8
  9009                           tblptrh	equ	0xFF7
  9010                           tblptrl	equ	0xFF6
  9011                           tablat	equ	0xFF5
  9012                           prodh	equ	0xFF4
  9013                           prodl	equ	0xFF3
  9014                           intcon	equ	0xFF2
  9015                           postinc0	equ	0xFEE
  9016                           fsr0h	equ	0xFEA
  9017                           fsr0l	equ	0xFE9
  9018                           wreg	equ	0xFE8
  9019                           indf1	equ	0xFE7
  9020                           fsr1h	equ	0xFE2
  9021                           fsr1l	equ	0xFE1
  9022                           bsr	equ	0xFE0
  9023                           indf2	equ	0xFDF
  9024                           postinc2	equ	0xFDE
  9025                           postdec2	equ	0xFDD
  9026                           fsr2h	equ	0xFDA
  9027                           fsr2l	equ	0xFD9
  9028                           status	equ	0xFD8
  9029                           
  9030 ;; *************** function _SleepIfOkay *****************
  9031 ;; Defined at:
  9032 ;;		line 228 in file "src/messages.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;		None
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;		None
  9037 ;; Return value:  Size  Location     Type
  9038 ;;		None               void
  9039 ;; Registers used:
  9040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;Total ram usage:        0 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    2
  9053 ;; This function calls:
  9054 ;;		_enter_sleep_mode
  9055 ;;		i2_check_msg
  9056 ;;		i2_in_high_int
  9057 ;;		i2_in_low_int
  9058 ;; This function is called by:
  9059 ;;		_InterruptHandlerHigh
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text54
  9064  001866                     __ptext54:
  9065                           	opt stack 0
  9066  001866                     _SleepIfOkay:
  9067                           	opt stack 16
  9068                           
  9069                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;incstack = 0
  9073  001866  0100               	movlb	0	; () banked
  9074  001868  0100               	movlb	0	; () banked
  9075  00186A  6760               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9076  00186C  D001               	goto	i2l2462
  9077  00186E  0012               	return	
  9078  001870                     i2l2462:
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;messages.c: 232: }
  9082                           ;messages.c: 235: if (in_low_int()) {
  9083  001870  EC4D  F00D         	call	i2_in_low_int	;wreg free
  9084  001874  0100               	movlb	0	; () banked
  9085  001876  0100               	movlb	0	; () banked
  9086  001878  519A               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9087  00187A  0100               	movlb	0	; () banked
  9088  00187C  1199               	iorwf	?i2_in_low_int& (0+255),w,b
  9089  00187E  A4D8               	btfss	status,2,c
  9090  001880  0012               	return	
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;messages.c: 237: }
  9094                           ;messages.c: 240: if (!in_high_int()) {
  9095                           
  9096                           ; BSR set to: 0
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;messages.c: 236: return;
  9100  001882  ECD6  F00F         	call	i2_in_high_int	;wreg free
  9101  001886  0100               	movlb	0	; () banked
  9102  001888  0100               	movlb	0	; () banked
  9103  00188A  5198               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9104  00188C  0100               	movlb	0	; () banked
  9105  00188E  1197               	iorwf	?i2_in_high_int& (0+255),w,b
  9106  001890  B4D8               	btfsc	status,2,c
  9107  001892  0012               	return	
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;messages.c: 242: }
  9111                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9112                           
  9113                           ; BSR set to: 0
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;messages.c: 241: return;
  9117  001894  0101               	movlb	1	; () banked
  9118  001896  0E01               	movlw	high _ToMainHigh_MQ
  9119  001898  0100               	movlb	0	; () banked
  9120  00189A  0100               	movlb	0	; () banked
  9121  00189C  6F98               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9122  00189E  0101               	movlb	1	; () banked
  9123  0018A0  0E6C               	movlw	low _ToMainHigh_MQ
  9124  0018A2  0100               	movlb	0	; () banked
  9125  0018A4  0100               	movlb	0	; () banked
  9126  0018A6  6F97               	movwf	i2check_msg@qptr& (0+255),b
  9127  0018A8  ECE2  F00E         	call	i2_check_msg	;wreg free
  9128  0018AC  0900               	iorlw	0
  9129  0018AE  A4D8               	btfss	status,2,c
  9130  0018B0  0012               	return	
  9131                           
  9132                           ;messages.c: 249: }
  9133                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9134                           
  9135                           ;messages.c: 248: return;
  9136  0018B2  0100               	movlb	0	; () banked
  9137  0018B4  0E00               	movlw	high _ToMainLow_MQ
  9138  0018B6  0100               	movlb	0	; () banked
  9139  0018B8  0100               	movlb	0	; () banked
  9140  0018BA  6F98               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9141  0018BC  0100               	movlb	0	; () banked
  9142  0018BE  0E61               	movlw	low _ToMainLow_MQ
  9143  0018C0  0100               	movlb	0	; () banked
  9144  0018C2  0100               	movlb	0	; () banked
  9145  0018C4  6F97               	movwf	i2check_msg@qptr& (0+255),b
  9146  0018C6  ECE2  F00E         	call	i2_check_msg	;wreg free
  9147  0018CA  0900               	iorlw	0
  9148  0018CC  B4D8               	btfsc	status,2,c
  9149                           
  9150                           ;messages.c: 252: }
  9151                           ;messages.c: 253: enter_sleep_mode();
  9152                           
  9153                           ;messages.c: 251: return;
  9154  0018CE  ECE3  F00F         	call	_enter_sleep_mode	;wreg free
  9155  0018D2  0012               	return	
  9156  0018D4                     __end_of_SleepIfOkay:
  9157                           	opt stack 0
  9158                           pclatu	equ	0xFFB
  9159                           pclath	equ	0xFFA
  9160                           tblptru	equ	0xFF8
  9161                           tblptrh	equ	0xFF7
  9162                           tblptrl	equ	0xFF6
  9163                           tablat	equ	0xFF5
  9164                           prodh	equ	0xFF4
  9165                           prodl	equ	0xFF3
  9166                           intcon	equ	0xFF2
  9167                           postinc0	equ	0xFEE
  9168                           fsr0h	equ	0xFEA
  9169                           fsr0l	equ	0xFE9
  9170                           wreg	equ	0xFE8
  9171                           indf1	equ	0xFE7
  9172                           fsr1h	equ	0xFE2
  9173                           fsr1l	equ	0xFE1
  9174                           bsr	equ	0xFE0
  9175                           indf2	equ	0xFDF
  9176                           postinc2	equ	0xFDE
  9177                           postdec2	equ	0xFDD
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function i2_in_low_int *****************
  9183 ;; Defined at:
  9184 ;;		line 30 in file "src/interrupts.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;		None
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  2    2[BANK0 ] int 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9202 ;;Total ram usage:        2 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; Hardware stack levels required when called:    1
  9205 ;; This function calls:
  9206 ;;		i2_in_high_int
  9207 ;; This function is called by:
  9208 ;;		_SleepIfOkay
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text55
  9213  001A9A                     __ptext55:
  9214                           	opt stack 0
  9215  001A9A                     i2_in_low_int:
  9216                           	opt stack 16
  9217                           
  9218                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9219                           
  9220                           ;incstack = 0
  9221  001A9A  ACF2               	btfss	intcon,6,c	;volatile
  9222  001A9C  D008               	goto	i2l2962
  9223                           
  9224                           ;interrupts.c: 32: return (0);
  9225  001A9E  0E00               	movlw	0
  9226  001AA0  0100               	movlb	0	; () banked
  9227  001AA2  0100               	movlb	0	; () banked
  9228  001AA4  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9229  001AA6  0E00               	movlw	0
  9230  001AA8  0100               	movlb	0	; () banked
  9231  001AAA  6F99               	movwf	?i2_in_low_int& (0+255),b
  9232  001AAC  0012               	return	
  9233  001AAE                     i2l2962:
  9234  001AAE  ECD6  F00F         	call	i2_in_high_int	;wreg free
  9235  001AB2  0100               	movlb	0	; () banked
  9236  001AB4  0100               	movlb	0	; () banked
  9237  001AB6  5198               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9238  001AB8  0100               	movlb	0	; () banked
  9239  001ABA  1197               	iorwf	?i2_in_high_int& (0+255),w,b
  9240  001ABC  B4D8               	btfsc	status,2,c
  9241  001ABE  D008               	goto	i2l2970
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;interrupts.c: 34: return (0);
  9245  001AC0  0E00               	movlw	0
  9246  001AC2  0100               	movlb	0	; () banked
  9247  001AC4  0100               	movlb	0	; () banked
  9248  001AC6  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9249  001AC8  0E00               	movlw	0
  9250  001ACA  0100               	movlb	0	; () banked
  9251  001ACC  6F99               	movwf	?i2_in_low_int& (0+255),b
  9252  001ACE  0012               	return	
  9253  001AD0                     i2l2970:
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;interrupts.c: 36: return (1);
  9257  001AD0  0E00               	movlw	0
  9258  001AD2  0100               	movlb	0	; () banked
  9259  001AD4  0100               	movlb	0	; () banked
  9260  001AD6  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9261  001AD8  0E01               	movlw	1
  9262  001ADA  0100               	movlb	0	; () banked
  9263  001ADC  6F99               	movwf	?i2_in_low_int& (0+255),b
  9264  001ADE  0012               	return	
  9265  001AE0                     __end_ofi2_in_low_int:
  9266                           	opt stack 0
  9267                           pclatu	equ	0xFFB
  9268                           pclath	equ	0xFFA
  9269                           tblptru	equ	0xFF8
  9270                           tblptrh	equ	0xFF7
  9271                           tblptrl	equ	0xFF6
  9272                           tablat	equ	0xFF5
  9273                           prodh	equ	0xFF4
  9274                           prodl	equ	0xFF3
  9275                           intcon	equ	0xFF2
  9276                           postinc0	equ	0xFEE
  9277                           fsr0h	equ	0xFEA
  9278                           fsr0l	equ	0xFE9
  9279                           wreg	equ	0xFE8
  9280                           indf1	equ	0xFE7
  9281                           fsr1h	equ	0xFE2
  9282                           fsr1l	equ	0xFE1
  9283                           bsr	equ	0xFE0
  9284                           indf2	equ	0xFDF
  9285                           postinc2	equ	0xFDE
  9286                           postdec2	equ	0xFDD
  9287                           fsr2h	equ	0xFDA
  9288                           fsr2l	equ	0xFD9
  9289                           status	equ	0xFD8
  9290                           
  9291 ;; *************** function i2_in_high_int *****************
  9292 ;; Defined at:
  9293 ;;		line 22 in file "src/interrupts.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  2    0[BANK0 ] int 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;Total ram usage:        2 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_SleepIfOkay
  9317 ;;		i2_in_low_int
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text56
  9322  001FAC                     __ptext56:
  9323                           	opt stack 0
  9324  001FAC                     i2_in_high_int:
  9325                           	opt stack 16
  9326                           
  9327                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331  001FAC  0E00               	movlw	0
  9332  001FAE  AEF2               	btfss	intcon,7,c	;volatile
  9333  001FB0  0E01               	movlw	1
  9334  001FB2  0100               	movlb	0	; () banked
  9335  001FB4  0100               	movlb	0	; () banked
  9336  001FB6  6F97               	movwf	?i2_in_high_int& (0+255),b
  9337  001FB8  0100               	movlb	0	; () banked
  9338  001FBA  6B98               	clrf	(?i2_in_high_int+1)& (0+255),b
  9339  001FBC  0012               	return	
  9340  001FBE                     __end_ofi2_in_high_int:
  9341                           	opt stack 0
  9342                           pclatu	equ	0xFFB
  9343                           pclath	equ	0xFFA
  9344                           tblptru	equ	0xFF8
  9345                           tblptrh	equ	0xFF7
  9346                           tblptrl	equ	0xFF6
  9347                           tablat	equ	0xFF5
  9348                           prodh	equ	0xFF4
  9349                           prodl	equ	0xFF3
  9350                           intcon	equ	0xFF2
  9351                           postinc0	equ	0xFEE
  9352                           fsr0h	equ	0xFEA
  9353                           fsr0l	equ	0xFE9
  9354                           wreg	equ	0xFE8
  9355                           indf1	equ	0xFE7
  9356                           fsr1h	equ	0xFE2
  9357                           fsr1l	equ	0xFE1
  9358                           bsr	equ	0xFE0
  9359                           indf2	equ	0xFDF
  9360                           postinc2	equ	0xFDE
  9361                           postdec2	equ	0xFDD
  9362                           fsr2h	equ	0xFDA
  9363                           fsr2l	equ	0xFD9
  9364                           status	equ	0xFD8
  9365                           
  9366 ;; *************** function i2_check_msg *****************
  9367 ;; Defined at:
  9368 ;;		line 222 in file "src/messages.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9371 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      unsigned char 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        3 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_SleepIfOkay
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           	psect	text57
  9397  001DC4                     __ptext57:
  9398                           	opt stack 0
  9399  001DC4                     i2_check_msg:
  9400                           	opt stack 17
  9401                           
  9402                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;incstack = 0
  9406  001DC4  0100               	movlb	0	; () banked
  9407  001DC6  EE20 F035          	lfsr	2,53
  9408  001DCA  0100               	movlb	0	; () banked
  9409  001DCC  5197               	movf	i2check_msg@qptr& (0+255),w,b
  9410  001DCE  26D9               	addwf	fsr2l,f,c
  9411  001DD0  0100               	movlb	0	; () banked
  9412  001DD2  5198               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9413  001DD4  22DA               	addwfc	fsr2h,f,c
  9414  001DD6  50DF               	movf	indf2,w,c
  9415  001DD8  0100               	movlb	0	; () banked
  9416  001DDA  6F99               	movwf	??i2_check_msg& (0+255),b
  9417  001DDC  0100               	movlb	0	; () banked
  9418  001DDE  5199               	movf	??i2_check_msg& (0+255),w,b
  9419  001DE0  0D0D               	mullw	13
  9420  001DE2  50F3               	movf	prodl,w,c
  9421  001DE4  0100               	movlb	0	; () banked
  9422  001DE6  0100               	movlb	0	; () banked
  9423  001DE8  2597               	addwf	i2check_msg@qptr& (0+255),w,b
  9424  001DEA  6ED9               	movwf	fsr2l,c
  9425  001DEC  50F4               	movf	prodh,w,c
  9426  001DEE  0100               	movlb	0	; () banked
  9427  001DF0  0100               	movlb	0	; () banked
  9428  001DF2  2198               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9429  001DF4  6EDA               	movwf	fsr2h,c
  9430  001DF6  50DF               	movf	indf2,w,c
  9431  001DF8  0012               	return	
  9432  001DFA                     __end_ofi2_check_msg:
  9433                           	opt stack 0
  9434                           pclatu	equ	0xFFB
  9435                           pclath	equ	0xFFA
  9436                           tblptru	equ	0xFF8
  9437                           tblptrh	equ	0xFF7
  9438                           tblptrl	equ	0xFF6
  9439                           tablat	equ	0xFF5
  9440                           prodh	equ	0xFF4
  9441                           prodl	equ	0xFF3
  9442                           intcon	equ	0xFF2
  9443                           postinc0	equ	0xFEE
  9444                           fsr0h	equ	0xFEA
  9445                           fsr0l	equ	0xFE9
  9446                           wreg	equ	0xFE8
  9447                           indf1	equ	0xFE7
  9448                           fsr1h	equ	0xFE2
  9449                           fsr1l	equ	0xFE1
  9450                           bsr	equ	0xFE0
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           fsr2h	equ	0xFDA
  9455                           fsr2l	equ	0xFD9
  9456                           status	equ	0xFD8
  9457                           
  9458 ;; *************** function _enter_sleep_mode *****************
  9459 ;; Defined at:
  9460 ;;		line 202 in file "src/messages.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;		None               void
  9467 ;; Registers used:
  9468 ;;		None
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_SleepIfOkay
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text58
  9488  001FC6                     __ptext58:
  9489                           	opt stack 0
  9490  001FC6                     _enter_sleep_mode:
  9491                           	opt stack 17
  9492                           
  9493                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;incstack = 0
  9497  001FC6  8ED3               	bsf	4051,7,c	;volatile
  9498  001FC8  0003               	sleep		;# 
  9499  001FCA  0012               	return	
  9500  001FCC                     __end_of_enter_sleep_mode:
  9501                           	opt stack 0
  9502  0000                     pclatu	equ	0xFFB
  9503                           pclath	equ	0xFFA
  9504                           tblptru	equ	0xFF8
  9505                           tblptrh	equ	0xFF7
  9506                           tblptrl	equ	0xFF6
  9507                           tablat	equ	0xFF5
  9508                           prodh	equ	0xFF4
  9509                           prodl	equ	0xFF3
  9510                           intcon	equ	0xFF2
  9511                           postinc0	equ	0xFEE
  9512                           fsr0h	equ	0xFEA
  9513                           fsr0l	equ	0xFE9
  9514                           wreg	equ	0xFE8
  9515                           indf1	equ	0xFE7
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           bsr	equ	0xFE0
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           postdec2	equ	0xFDD
  9522                           fsr2h	equ	0xFDA
  9523                           fsr2l	equ	0xFD9
  9524                           status	equ	0xFD8
  9525                           pclatu	equ	0xFFB
  9526                           pclath	equ	0xFFA
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           postinc0	equ	0xFEE
  9535                           fsr0h	equ	0xFEA
  9536                           fsr0l	equ	0xFE9
  9537                           wreg	equ	0xFE8
  9538                           indf1	equ	0xFE7
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           bsr	equ	0xFE0
  9542                           indf2	equ	0xFDF
  9543                           postinc2	equ	0xFDE
  9544                           postdec2	equ	0xFDD
  9545                           fsr2h	equ	0xFDA
  9546                           fsr2l	equ	0xFD9
  9547                           status	equ	0xFD8
  9548                           
  9549                           	psect	param0
  9550  0000                     pclatu	equ	0xFFB
  9551                           pclath	equ	0xFFA
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           postinc0	equ	0xFEE
  9560                           fsr0h	equ	0xFEA
  9561                           fsr0l	equ	0xFE9
  9562                           wreg	equ	0xFE8
  9563                           indf1	equ	0xFE7
  9564                           fsr1h	equ	0xFE2
  9565                           fsr1l	equ	0xFE1
  9566                           bsr	equ	0xFE0
  9567                           indf2	equ	0xFDF
  9568                           postinc2	equ	0xFDE
  9569                           postdec2	equ	0xFDD
  9570                           fsr2h	equ	0xFDA
  9571                           fsr2l	equ	0xFD9
  9572                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      55
    BANK0           160     52     109
    BANK1           256     45     207
    BANK2           256     73      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    sendUART@data	PTR unsigned char  size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 12
		 -> NULL(NULL[0]), main@t1thread_data(BANK2[12]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_Open1USART
    _main->_OpenTimer0
    _main->_OpenTimer1
    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_i2c_configure_slave
    _main->_start_i2c_slave_reply
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->___lwmod
    _ToMainLow_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_Delay1KTCYx
    _block_on_To_msgqueues->_check_msg

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUART
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0   15888
                                             44 BANK1      1     1      0
                                              0 BANK2     73    73      0
                         _Open1USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             25 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             21 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      14     6      8    3890
                                             30 BANK1     14     6      8
                         _ReadTimer1
                            ___lwmod
                           _sendUART
 ---------------------------------------------------------------------------------
 (2) _sendUART                                             5     3      2    2874
                                             25 BANK1      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2701
                                             21 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             51 BANK0      1     1      0
                                             10 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             51 BANK0      1     1      0
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             51 BANK0      1     1      0
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     170
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                              3 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             51 BANK0      1     1      0
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             51 BANK0      1     1      0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             51 BANK0      1     1      0
                                             24 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             51 BANK0      1     1      0
                                             24 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     170
                                             51 BANK0      1     0      1
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     387
                                             51 BANK0      1     1      0
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0   10490
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               6     6      0    3280
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    3481
                                             26 COMRAM     1     1      0
                         _Read1USART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _Read1USART                                           1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   3     3      0    3729
                                             26 COMRAM     3     3      0
                        _WriteTimer1
                       i1_ReadTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) i1_ToMainLow_sendmsg                                  4     1      3    3447
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    2859
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) i1_ReadTimer1                                         4     2      2     181
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   10905
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    6686
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     132
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2994
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    11    11      0    3983
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2659
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     ___lwmod
     _sendUART
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     i1_ReadTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _Read1USART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     49      49      10       28.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2D      CF       8       80.9%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      6D       5       68.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      37       1       57.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC       6        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 23 23:34:08 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 0060  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1BAA  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1D58  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 00A4  
              i2recv_msg@tlength 00AB             ?_FromMainLow_recvmsg 0019  
                            l109 088C                              l500 172E  
                            l504 174C                              l433 1E4E  
                            l506 175A                              l434 1E50  
                            l507 175C                              l461 1C64  
                            l462 1C66                              l732 1F2E  
           ?_FromMainLow_sendmsg 01B7  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 01A2                 ??_init_uart_recv 00CA  
                ReadTimer1@timer 01A4              i2recv_msg@maxlength 00A3  
                           l1044 155A                             l3224 1A8A  
                           l3216 1A68                             l3238 1B58  
                           l3612 1586                             l3700 11C6  
                           l3460 08C0                             l3462 08DE  
                           l3624 15E6                             l3712 17C2  
                           l3480 0990                             l3456 083A  
                           l3472 0934                             l3448 07F8  
                           l3562 1730                             l3554 171A  
                           l3618 15B6                             l3634 0E12  
                           l3730 0F60                             l3482 09E2  
                           l3458 0892                             l3466 08FC  
                           l3474 0952                             l3660 0ACE  
                           l3468 0914                             l3574 174E  
                           l3750 1984                             l3638 0E96  
                           l3662 0AFA                             l3486 0A34  
                           l3744 1960                             l3850 1B20  
                           l3666 0B28                             l3658 0ABE  
                           l3764 0BF6                             l3780 0CBC  
                           l3860 14F8                             l3668 0B4E  
                           l3862 150A                             l3864 1512  
                           l3696 119E                             l3868 1546  
                           _LATB 000F8A                             u3017 1F30  
                           i1l52 007A                  _FromMainHigh_MQ 0100  
                 Read1USART@data 0001           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 11F6                             _main 071E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 022B  
                     i1_send_msg 1394                             pclat 000FFA  
                    i2_check_msg 1DC4                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0097  
                           start 00C0                       i2_recv_msg 0CC0  
                     i2_send_msg 1008        ToMainHigh_recvmsg@msgtype 01BA  
                 send_msg@length 01AE      __size_of_timer0_int_handler 008A  
                    _Delay1KTCYx 1F2A                    __CFG_PLLDIV$3 000000  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00CB  
                          ?_main 0001     __size_ofi1_ToMainLow_sendmsg 0026  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 01A2                            i1l342 1A50  
                          i1l345 1A28                  __end_of___lwmod 1564  
                     i1memcpy@d1 0001                            i1l517 1F1A  
                          i2l303 0538                            i2l271 018C  
                          i2l259 1348                            i2l275 01D0  
                          i2l269 0526                            i2l297 0498  
                          i2l289 0360                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 00AF                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                     i2memcpy@d1 0097                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0099                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1B68  
     ToMainLow_recvmsg@maxlength 00CA                       _Read1USART 1F0C  
        timer0_lthread@msgbuffer 01A8                   __CFG_T1DIG$OFF 000000  
        i2c_configure_slave@addr 00CA                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 19FA  
               __end_ofi1_memcpy 1CAE                 __end_ofi2_memcpy 19FA  
                __initialization 1ECA       uart_trans_int_handler@data 001F  
                   __end_of_main 0A54     uart_trans_int_handler@length 0023  
                     _ReadTimer1 1F40      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_recvmsg 0042       __size_of_ToMainLow_sendmsg 0036  
  __size_of_FromMainHigh_recvmsg 0042            __size_ofi2_in_low_int 0046  
                 __CFG_OSC$HSPLL 000000                       _Open1USART 16FA  
                         ??_main 01CE                  send_msg@msgtype 01AF  
                  __activetblptr 000002                  send_msg@tlength 01B2  
     FromMainLow_sendmsg@msgtype 01B7             __end_of_handle_start 1394  
              timer1_lthread@len 01CA          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l4002 12C4  
                         i1l4032 14BA                           i1l4054 1A42  
                         i1l4062 0066                           i1l4068 0070  
                         i1l3932 1C80                           i2l3312 0288  
                     _OpenTimer0 1E2A                           i2l3314 02C8  
                         i2l3306 0270                           i1l3938 1C9C  
                         i1l3962 13CC                       _OpenTimer1 1C2E  
                         i2l2462 1870                           i2l3342 0428  
                         i2l3270 016A                           i2l3254 16BC  
                 __CFG_WDTEN$OFF 000000                           i2l3336 03D4  
                         i2l3248 16B2                           i2l3370 053C  
                         i2l3338 0416                           i1l3986 123C  
                         i2l3364 04FA                           i2l3276 0182  
                         i2l3294 0208                           i2l3392 06DC  
                         i2l3384 0636                           i2l3376 059C  
                         i2l3296 0234                           i2l3822 1364  
                         i2l3824 137C                           i2l2970 1AD0  
                         i2l2962 1AAE                           i2l3908 0D2C  
                         i2l3924 0DF2                           i2l3942 19BE  
                         i2l3948 19E2                           i2l3884 1064  
                         _RCREG1 000FAF      __end_of_i2c_configure_slave 1E7C  
                  ??_SleepIfOkay 009B                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                           _TXREG1 000FAE  
                    ?i1_send_msg 000B                           _TXSTA1 000FAD  
  __end_of_start_i2c_slave_reply 0F04               timer0_lthread@tptr 01A2  
                 __CFG_WPDIS$OFF 000000          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 00A1                     i2_in_low_int 1A9A  
                    ?i2_send_msg 00A1                   __CFG_XINST$OFF 000000  
                _i2c_int_handler 00C4                 OpenTimer0@config 00CA  
                         _ic_ptr 00CB                        ??___lwmod 00CA  
                  main@msgbuffer 0200                 __end_of_init_i2c 193E  
               OpenTimer1@config 01A3                           _memcpy 193E  
                         clear_0 1ED0                           clear_1 1EDC  
                         _uc_ptr 0035                 __end_of_sendUART 1B24  
                         main@ic 022D                           main@uc 021A  
               __end_of_recv_msg 0CC0      start_i2c_slave_reply@length 00CA  
                      ??_in_main 00CA                 __end_of_send_msg 1008  
          timer0_int_handler@val 00B9          i2c_int_handler@i2c_data 00B8  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 01A4  
       ToMainLow_recvmsg@msgtype 01BA             __size_of_in_high_int 0012  
                    ?_Read1USART 0001          FromMainLow_sendmsg@data 01B8  
              _init_uart_lthread 1FCC                       __accesstop 0060  
        __end_of__initialization 1EE4       __end_of_ToMainHigh_recvmsg 1BEC  
     __end_of_ToMainHigh_sendmsg 1DC4               ?_init_uart_lthread 01A2  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 1CEC              __end_of_SleepIfOkay 18D4  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 0012  
            ??_init_uart_lthread 00CA                      ?_ReadTimer1 01A2  
             __size_of_check_msg 0036                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 01A2        timer0_int_handler@msgtype 00B7  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 16F2  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0097  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 0136  
               _enter_sleep_mode 1FC6              __size_ofi2_send_msg 0104  
           timer1_lthread@length 01C4                    check_msg@qptr 01A2  
      __end_of_init_uart_lthread 1FCE          ??_block_on_To_msgqueues 01A8  
           __size_of_init_queues 0072                       __pbssBANK0 0060  
                     __pbssBANK1 0100                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 00CA   uart_trans_int_handler@curIndex 0021  
                     __pnvCOMRAM 0035              i1_ToMainLow_sendmsg 1EA4  
        __end_of_i2c_int_handler 071E                     ?i2_check_msg 0097  
             timer1_lthread@even 01CC               timer1_lthread@tptr 01C0  
              recv_msg@maxlength 01AE                  recv_msg@msgtype 01AF  
                recv_msg@tlength 01B6            __size_of_handle_start 00CC  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0099  
                        ?_memcpy 01A2                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0099                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 0012  
                 sendUART@length 01BE             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0136                   sendUART@retval 01BF  
               Open1USART@config 00CA                       ??i1_memcpy 0007  
                     ??i2_memcpy 009D                          _SPBRGH1 000F7F  
               i1send_msg@length 000D                    i2_in_high_int 1FAC  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1D8E  
                      ?_init_i2c 01A2                      _SleepIfOkay 1866  
            __size_of_Open1USART 0080                        ?_sendUART 01BB  
                      ?_recv_msg 01AC                       _in_low_int 1A54  
                   _handle_start 12C8                          __Hparam 0000  
                      ?_send_msg 01AC                          __Lparam 0000  
     __end_of_timer0_int_handler 1678      __end_of_FromMainLow_recvmsg 1EA4  
    __end_of_FromMainLow_sendmsg 1D22                 init_uart_recv@uc 01A2  
                        ___lwmod 14DA                  __CFG_STVREN$OFF 000000  
                        __pcinit 1ECA                  __size_of_memcpy 005E  
                     _init_queue 177A                          __ramtop 0F00  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0040                          __ptext0 071E  
                        __ptext1 110C                          __ptext2 1CEC  
                        __ptext3 0A54                          __ptext4 1AE0  
                        __ptext5 1D22                          __ptext6 0F04  
                        __ptext7 14DA                          __ptext8 1F40  
                        __ptext9 1F52                uart_lthread@index 01C4  
                      _T0CONbits 000FD5                OpenTimer1@config1 00CA  
                        _in_main 1B24                        _T1CONbits 000FCD  
            __end_of_WriteTimer0 1FAC              __end_of_WriteTimer1 1F9A  
                 ?i2_in_high_int 0097   __end_of_uart_trans_int_handler 1A54  
                  ?i1_ReadTimer1 0001       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1678     __end_of_FromMainHigh_recvmsg 1C2E  
           end_of_initialization 1EE4          timer1_lthread@msgbuffer 01C6  
 __size_of_uart_recv_int_handler 009C                          memcpy@d 01A8  
                        memcpy@n 01A6                          memcpy@s 01AA  
  __end_of_uart_recv_int_handler 14DA                       ??_init_i2c 00CA  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00B6  
                  __Lmediumconst 0000                          int_func 1678  
                   ??i1_send_msg 0011                    ?_uart_lthread 01BB  
                     ??_sendUART 01BD          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                     ??i2_recv_msg 00A8  
                     ??_recv_msg 01B3                     ??i2_send_msg 00A7  
                     ??_send_msg 00CA       __end_of_timer1_int_handler 1E2A  
                      _RCSTAbits 000FAC                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 00AD                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000               __end_ofi1_recv_msg 12C8  
               __CFG_CPUDIV$OSC1 000000               __end_ofi1_send_msg 143E  
                      _TRISBbits 000F93               __end_ofi2_recv_msg 0DF6  
                 ??i1_ReadTimer1 0003               __end_ofi2_send_msg 110C  
                   ??_Read1USART 0001    FromMainHigh_recvmsg@maxlength 00B3  
       timer1_int_handler@result 001C                   ??_uart_lthread 00CB  
              __CFG_WPFP$PAGE_63 000000                       main@length 022C  
                    ?_in_low_int 01A4            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0DF6              __CFG_MSSP7B_EN$MSK7 000000  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 1FCC                     ??_ReadTimer1 00CA  
             _ToMainHigh_recvmsg 1BAA                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1D8E                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1F52  
                   ??_Open1USART 01A4                      ?_init_queue 01A2  
                      i2memcpy@d 009D                      _WriteTimer0 1F9A  
                    _WriteTimer1 1F88                        i2memcpy@n 009B  
                      i2memcpy@s 009F               __end_of_Read1USART 1F2A  
                 _timer1_lthread 0A54                   __end_of_memcpy 199C  
              _enable_interrupts 1FBE             __size_of_Delay1KTCYx 0016  
               __CFG_DSWDTEN$OFF 000000              ?_ToMainHigh_recvmsg 01BA  
                ??i2_in_high_int 0099         i2c_int_handler@data_read 00BB  
            ?_ToMainHigh_sendmsg 00AD          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1ECA  
                  ??_in_high_int 00CA                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        FromMainLow_sendmsg@length 01BA  
            ??_enable_interrupts 00CA                     ??_OpenTimer0 00CA  
                   ??_OpenTimer1 01A2   __size_of_block_on_To_msgqueues 008A  
             __end_of_ReadTimer1 1F52    __end_of_block_on_To_msgqueues 15EE  
                   sendUART@data 01BB     __end_of_InterruptHandlerHigh 16FA  
             __end_of_Open1USART 177A                       init_i2c@ic 01A2  
           ??_ToMainHigh_recvmsg 00CA             ??_ToMainHigh_sendmsg 00B0  
         __end_of_timer0_lthread 1F64         i2c_int_handler@error_buf 00B3  
         __end_of_timer1_lthread 0B8A                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1FC6                         ??_memcpy 00CA  
          timer1_lthread@msgtype 01C2             _FromMainHigh_recvmsg 1BEC  
          timer1_lthread@success 01CB     __size_of_init_timer1_lthread 003E  
             __end_of_OpenTimer0 1E54               __end_of_OpenTimer1 1C6E  
       i2c_int_handler@msg_ready 00BA                i1ReadTimer1@timer 0003  
                    __pbssCOMRAM 0037                    ??_init_queues 01A5  
                  __pcstackBANK0 0097                    __pcstackBANK1 01A2  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 01A2                  Delay1KTCYx@unit 00CA  
       ToMainLow_sendmsg@msgtype 01B7     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1F76                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01BC                     _ToMainLow_MQ 0061  
            __size_of_init_queue 007A                   _init_uart_recv 1EEE  
                      _check_msg 1D58                        __pnvBANK0 00CB  
         ?_start_i2c_slave_reply 01A2                __size_of_init_i2c 006A  
                   recv_msg@data 01B1                __size_of_sendUART 0044  
                   recv_msg@qmsg 01B8                     recv_msg@slot 01B5  
                   recv_msg@qptr 01AC                __size_of_recv_msg 0136  
                      __pintcode 0008                __size_of_send_msg 0104  
           __end_ofi1_ReadTimer1 1F88                  ?_timer0_lthread 01A2  
                       ?___lwmod 01A2            ?_FromMainHigh_recvmsg 00AF  
                ?_timer1_lthread 01C0                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01BC                  Open1USART@spbrg 01A2  
           __end_of_uart_lthread 11F6       i2c_int_handler@msg_to_send 00B9  
                       ?_in_main 01A6                WriteTimer0@timer0 0097  
             _timer0_int_handler 15EE                WriteTimer1@timer1 0001  
     i1ToMainLow_sendmsg@msgtype 0017             __CFG_RTCOSC$T1OSCREF 000000  
            uart_lthread@msgtype 01BD            ToMainLow_sendmsg@data 01B8  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01BB           __end_of_init_uart_recv 1F0C  
            __end_of_init_queues 1866                  i2check_msg@qptr 0097  
                     ?_check_msg 01A2                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0099  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00AE  
    __end_ofi1_ToMainLow_sendmsg 1ECA                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 00B4                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1DFA                         i1_memcpy 1C6E  
           _InterruptHandlerHigh 0008                         i2_memcpy 199C  
           timer0_lthread@msgval 01AA         FromMainHigh_recvmsg@data 00B1  
                    _in_high_int 1F64                     send_msg@data 01B0  
            _i2c_configure_slave 1E54                     send_msg@qmsg 01B5  
                   send_msg@slot 01B4                     send_msg@qptr 01AC  
          uart_lthread@msgbuffer 01C1              ?_timer1_int_handler 0001  
                ?_init_uart_recv 01A2                   ??i2_in_low_int 009B  
                       __Hparam0 0000            _uart_recv_int_handler 143E  
                   ??_in_low_int 00CA                         __Lparam0 0000  
           ?_i2c_configure_slave 0001                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 00B3             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0097  
               __size_of___lwmod 008A                     ??_init_queue 00CA  
                   ?_WriteTimer0 0097                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 01BA                main@t0thread_data 020B  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 00A4      ToMainHigh_recvmsg@maxlength 00CA  
              i2send_msg@tlength 00A8          init_timer1_lthread@tptr 01A2  
                    _init_queues 17F4               __end_of_in_low_int 1A9A  
                       __ptext10 0DF6                         __ptext11 1EEE  
                       __ptext20 1B24                         __ptext12 1FCC  
                       __ptext21 1A54                         __ptext13 1CAE  
                     _T1GCONbits 000F9A                         __ptext30 1E2A  
                       __ptext22 1F64                         __ptext14 17F4  
                       __ptext31 16FA                         __ptext23 1D58  
                       __ptext15 177A                         __ptext40 1394  
                       __ptext24 1F2A                         __ptext16 18D4  
                       __ptext41 1C6E                         __ptext33 19FA  
                       __ptext25 1B68                         __ptext17 1E54  
                       __ptext50 12C8                         __ptext42 1F76  
                       __ptext34 1E7C                         __ptext26 1BAA  
                       __ptext18 1FBE                         __ptext51 1D8E  
                       __ptext43 1F88                         __ptext35 11F6  
                       __ptext27 0B8A                         __ptext19 1564  
                       __ptext52 1008                         __ptext36 143E  
                       __ptext28 193E                         __ptext53 199C  
                       __ptext45 15EE                         __ptext37 1F0C  
                       __ptext29 1C2E                         __ptext54 1866  
                       __ptext46 1F9A                         __ptext38 1DFA  
                       __ptext55 1A9A                         __ptext47 1BEC  
                       __ptext39 1EA4                         __ptext56 1FAC  
                       __ptext48 0CC0                         __ptext57 1DC4  
                       __ptext49 00C4                         __ptext58 1FC6  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01BF  
       timer0_int_handler@length 00B5               uart_lthread@status 01C3  
                       _init_i2c 18D4              _init_timer1_lthread 1CAE  
                  __size_of_main 0336                    ??i2_check_msg 0099  
              main@t1thread_data 021F                      ??_check_msg 00CA  
             __end_of_init_queue 17F4                         _sendUART 1AE0  
          __size_ofi1_ReadTimer1 0012             __size_of_SleepIfOkay 006E  
                       _recv_msg 0B8A            ??_i2c_configure_slave 00CA  
                       _send_msg 0F04                   init_queue@qptr 01A2  
          __size_of_uart_lthread 00EA                   i2recv_msg@data 00A6  
  uart_trans_int_handler@msgtype 0022                   i2recv_msg@qmsg 00AD  
                  ??_Delay1KTCYx 00CA                   i2recv_msg@slot 00AA  
                 i2recv_msg@qptr 00A1                         main@baud 020E  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 01A2  
                  _USART1_Status 0037         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 01A2                         memcpy@s1 01A4  
          __end_ofi2_in_high_int 1FBE     i2c_int_handler@overrun_error 00B7  
                   i1_ReadTimer1 1F76                 i2send_msg@length 00A3  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 01A4  
               ___lwmod@dividend 01A2           ?_uart_recv_int_handler 0001  
                   _uart_lthread 110C                   main@UARTConfig 020F  
                     _RCSTA1bits 000FAC            _block_on_To_msgqueues 1564  
                  ?_handle_start 0001                 ??_timer0_lthread 00CA  
    __size_of_ToMainHigh_recvmsg 0042      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 01C8  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 00B0              __end_ofi2_check_msg 1DFA  
          ??_init_timer1_lthread 00CA           ??_InterruptHandlerHigh 00BC  
              _ToMainLow_recvmsg 1B68                _ToMainLow_sendmsg 1D22  
             main@last_reg_recvd 020D                  ___lwmod@divisor 01A4  
           __end_ofi2_in_low_int 1AE0               ?_ToMainLow_recvmsg 01BA  
            __end_of_Delay1KTCYx 1F40                ??_i2c_int_handler 00B1  
                ___lwmod@counter 01A6               ?_ToMainLow_sendmsg 01B7  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 00A5            ??_InterruptHandlerLow 0024  
            ??_ToMainLow_recvmsg 00CA                   i2send_msg@qmsg 00AB  
                 i2send_msg@slot 00AA                   i2send_msg@qptr 00A1  
            ??_ToMainLow_sendmsg 00CB              _FromMainLow_recvmsg 1E7C  
                 ??_handle_start 0097              _FromMainLow_sendmsg 1CEC  
