

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 23 23:21:43 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	param0,global,class=BANK0,space=1,delta=1
    77  0000                     _INTCONbits	set	4082
    78  0000                     _IPR1bits	set	3999
    79  0000                     _LATB	set	3978
    80  0000                     _OSCCON	set	4051
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _PORTBbits	set	3969
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG1	set	4015
    88  0000                     _RCSTA1	set	4012
    89  0000                     _RCSTA1bits	set	4012
    90  0000                     _RCSTAbits	set	4012
    91  0000                     _SPBRG1	set	4016
    92  0000                     _SPBRGH1	set	3967
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPCON2	set	4037
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTAT	set	4039
   100  0000                     _SSPSTATbits	set	4039
   101  0000                     _T0CON	set	4053
   102  0000                     _T0CONbits	set	4053
   103  0000                     _T1CON	set	4045
   104  0000                     _T1CONbits	set	4045
   105  0000                     _T1GCON	set	3994
   106  0000                     _T1GCONbits	set	3994
   107  0000                     _TMR0H	set	4055
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR1H	set	4047
   110  0000                     _TMR1L	set	4046
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISBbits	set	3987
   113  0000                     _TXREG1	set	4014
   114  0000                     _TXSTA1	set	4013
   115  0000                     _TXSTA1bits	set	4013
   116                           
   117                           	psect	nvCOMRAM
   118  000035                     __pnvCOMRAM:
   119                           	opt stack 0
   120  000035                     _uc_ptr:
   121                           	opt stack 0
   122  000035                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000CB                     __pnvBANK0:
   126                           	opt stack 0
   127  0000CB                     _ic_ptr:
   128                           	opt stack 0
   129  0000CB                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001ECA                     __pcinit:
   135                           	opt stack 0
   136  001ECA                     start_initialization:
   137                           	opt stack 0
   138  001ECA                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  001ECA  EE01  F000         	lfsr	0,__pbssBANK1
   143  001ECE  0EA2               	movlw	162
   144  001ED0                     clear_0:
   145  001ED0  6AEE               	clrf	postinc0,c
   146  001ED2  06E8               	decf	wreg,f,c
   147  001ED4  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (55 bytes)
   150  001ED6  EE00  F060         	lfsr	0,__pbssBANK0
   151  001EDA  0E37               	movlw	55
   152  001EDC                     clear_1:
   153  001EDC  6AEE               	clrf	postinc0,c
   154  001EDE  06E8               	decf	wreg,f,c
   155  001EE0  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (1 bytes)
   158  001EE2  6A37               	clrf	__pbssCOMRAM& (0+255),c
   159  001EE4                     end_of_initialization:
   160                           	opt stack 0
   161  001EE4                     __end_of__initialization:
   162                           	opt stack 0
   163  001EE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  001EE6  6EF8               	movwf	tblptru,c
   165  001EE8  0100               	movlb	0
   166  001EEA  EF8F  F003         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssCOMRAM
   172  000037                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000037                     _USART1_Status:
   175                           	opt stack 0
   176  000037                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	bssBANK0
   182  000060                     __pbssBANK0:
   183                           	opt stack 0
   184  000060                     _MQ_Main_Willing_to_block:
   185                           	opt stack 0
   186  000060                     	ds	1
   187  000061                     _ToMainLow_MQ:
   188                           	opt stack 0
   189  000061                     	ds	54
   190                           tblptru	equ	0xFF8
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssBANK1
   195  000100                     __pbssBANK1:
   196                           	opt stack 0
   197  000100                     _FromMainHigh_MQ:
   198                           	opt stack 0
   199  000100                     	ds	54
   200  000136                     _FromMainLow_MQ:
   201                           	opt stack 0
   202  000136                     	ds	54
   203  00016C                     _ToMainHigh_MQ:
   204                           	opt stack 0
   205  00016C                     	ds	54
   206                           tblptru	equ	0xFF8
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	cstackBANK2
   211  000200                     __pcstackBANK2:
   212                           	opt stack 0
   213  000200                     main@msgbuffer:
   214                           	opt stack 0
   215                           
   216                           ; 11 bytes @ 0x0
   217  000200                     	ds	11
   218  00020B                     main@t0thread_data:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0xB
   222  00020B                     	ds	2
   223  00020D                     main@last_reg_recvd:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xD
   227  00020D                     	ds	1
   228  00020E                     main@baud:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xE
   232  00020E                     	ds	1
   233  00020F                     main@UARTConfig:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0xF
   237  00020F                     	ds	1
   238  000210                     main@uthread_data:
   239                           	opt stack 0
   240                           
   241                           ; 10 bytes @ 0x10
   242  000210                     	ds	10
   243  00021A                     main@uc:
   244                           	opt stack 0
   245                           
   246                           ; 5 bytes @ 0x1A
   247  00021A                     	ds	5
   248  00021F                     main@t1thread_data:
   249                           	opt stack 0
   250                           
   251                           ; 12 bytes @ 0x1F
   252  00021F                     	ds	12
   253  00022B                     main@msgtype:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x2B
   257  00022B                     	ds	1
   258  00022C                     main@length:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x2C
   262  00022C                     	ds	1
   263  00022D                     main@ic:
   264                           	opt stack 0
   265                           
   266                           ; 28 bytes @ 0x2D
   267  00022D                     	ds	28
   268                           tblptru	equ	0xFF8
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	cstackBANK1
   273  0001A2                     __pcstackBANK1:
   274                           	opt stack 0
   275  0001A2                     ??_OpenTimer1:
   276  0001A2                     ?_ReadTimer1:
   277                           	opt stack 0
   278  0001A2                     ?_in_high_int:
   279                           	opt stack 0
   280  0001A2                     ?___lwmod:
   281                           	opt stack 0
   282  0001A2                     init_queue@qptr:
   283                           	opt stack 0
   284  0001A2                     check_msg@qptr:
   285                           	opt stack 0
   286  0001A2                     start_i2c_slave_reply@msg:
   287                           	opt stack 0
   288  0001A2                     init_i2c@ic:
   289                           	opt stack 0
   290  0001A2                     init_uart_recv@uc:
   291                           	opt stack 0
   292  0001A2                     timer0_lthread@tptr:
   293                           	opt stack 0
   294  0001A2                     init_timer1_lthread@tptr:
   295                           	opt stack 0
   296  0001A2                     init_uart_lthread@uptr:
   297                           	opt stack 0
   298  0001A2                     Open1USART@spbrg:
   299                           	opt stack 0
   300  0001A2                     ___lwmod@dividend:
   301                           	opt stack 0
   302  0001A2                     memcpy@d1:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306  0001A2                     	ds	1
   307  0001A3                     OpenTimer1@config:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x1
   311  0001A3                     	ds	1
   312  0001A4                     ??_Open1USART:
   313  0001A4                     ??_start_i2c_slave_reply:
   314  0001A4                     ?_in_low_int:
   315                           	opt stack 0
   316  0001A4                     init_queue@i:
   317                           	opt stack 0
   318  0001A4                     timer0_lthread@msgtype:
   319                           	opt stack 0
   320  0001A4                     ReadTimer1@timer:
   321                           	opt stack 0
   322  0001A4                     ___lwmod@divisor:
   323                           	opt stack 0
   324  0001A4                     memcpy@s1:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x2
   328  0001A4                     	ds	1
   329  0001A5                     ??_init_queues:
   330                           
   331                           ; 0 bytes @ 0x3
   332  0001A5                     	ds	1
   333  0001A6                     ?_in_main:
   334                           	opt stack 0
   335  0001A6                     ___lwmod@counter:
   336                           	opt stack 0
   337  0001A6                     timer0_lthread@length:
   338                           	opt stack 0
   339  0001A6                     memcpy@n:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x4
   343  0001A6                     	ds	2
   344  0001A8                     ??_block_on_To_msgqueues:
   345  0001A8                     timer0_lthread@msgbuffer:
   346                           	opt stack 0
   347  0001A8                     memcpy@d:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  0001A8                     	ds	2
   352  0001AA                     timer0_lthread@msgval:
   353                           	opt stack 0
   354  0001AA                     memcpy@s:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  0001AA                     	ds	2
   359  0001AC                     send_msg@qptr:
   360                           	opt stack 0
   361  0001AC                     recv_msg@qptr:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0xA
   365  0001AC                     	ds	2
   366  0001AE                     send_msg@length:
   367                           	opt stack 0
   368  0001AE                     recv_msg@maxlength:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0xC
   372  0001AE                     	ds	1
   373  0001AF                     send_msg@msgtype:
   374                           	opt stack 0
   375  0001AF                     recv_msg@msgtype:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0xD
   379  0001AF                     	ds	1
   380  0001B0                     send_msg@data:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0xE
   384  0001B0                     	ds	1
   385  0001B1                     recv_msg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0xF
   389  0001B1                     	ds	1
   390  0001B2                     send_msg@tlength:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x10
   394  0001B2                     	ds	1
   395  0001B3                     ??_recv_msg:
   396                           
   397                           ; 0 bytes @ 0x11
   398  0001B3                     	ds	1
   399  0001B4                     send_msg@slot:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x12
   403  0001B4                     	ds	1
   404  0001B5                     recv_msg@slot:
   405                           	opt stack 0
   406  0001B5                     send_msg@qmsg:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x13
   410  0001B5                     	ds	1
   411  0001B6                     recv_msg@tlength:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x14
   415  0001B6                     	ds	1
   416  0001B7                     ToMainLow_sendmsg@msgtype:
   417                           	opt stack 0
   418  0001B7                     FromMainLow_sendmsg@msgtype:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x15
   422  0001B7                     	ds	1
   423  0001B8                     recv_msg@qmsg:
   424                           	opt stack 0
   425  0001B8                     ToMainLow_sendmsg@data:
   426                           	opt stack 0
   427  0001B8                     FromMainLow_sendmsg@data:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x16
   431  0001B8                     	ds	2
   432  0001BA                     ToMainLow_sendmsg@length:
   433                           	opt stack 0
   434  0001BA                     FromMainLow_sendmsg@length:
   435                           	opt stack 0
   436  0001BA                     ToMainLow_recvmsg@msgtype:
   437                           	opt stack 0
   438  0001BA                     ToMainHigh_recvmsg@msgtype:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  0001BA                     	ds	1
   443  0001BB                     sendUART@data:
   444                           	opt stack 0
   445  0001BB                     uart_lthread@uptr:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x19
   449  0001BB                     	ds	1
   450  0001BC                     ToMainLow_recvmsg@data:
   451                           	opt stack 0
   452  0001BC                     ToMainHigh_recvmsg@data:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x1A
   456  0001BC                     	ds	1
   457  0001BD                     ??_sendUART:
   458  0001BD                     uart_lthread@msgtype:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1B
   462  0001BD                     	ds	1
   463  0001BE                     sendUART@length:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x1C
   467  0001BE                     	ds	1
   468  0001BF                     sendUART@retval:
   469                           	opt stack 0
   470  0001BF                     uart_lthread@length:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1D
   474  0001BF                     	ds	1
   475  0001C0                     timer1_lthread@tptr:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x1E
   479  0001C0                     	ds	1
   480  0001C1                     uart_lthread@msgbuffer:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x1F
   484  0001C1                     	ds	1
   485  0001C2                     timer1_lthread@msgtype:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x20
   489  0001C2                     	ds	1
   490  0001C3                     uart_lthread@status:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x21
   494  0001C3                     	ds	1
   495  0001C4                     timer1_lthread@length:
   496                           	opt stack 0
   497  0001C4                     uart_lthread@index:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x22
   501  0001C4                     	ds	2
   502  0001C6                     timer1_lthread@msgbuffer:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x24
   506  0001C6                     	ds	2
   507  0001C8                     ??_timer1_lthread:
   508                           
   509                           ; 0 bytes @ 0x26
   510  0001C8                     	ds	2
   511  0001CA                     timer1_lthread@len:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x28
   515  0001CA                     	ds	1
   516  0001CB                     timer1_lthread@success:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x29
   520  0001CB                     	ds	1
   521  0001CC                     timer1_lthread@even:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x2A
   525  0001CC                     	ds	2
   526  0001CE                     ??_main:
   527                           
   528                           ; 0 bytes @ 0x2C
   529  0001CE                     	ds	1
   530                           tblptru	equ	0xFF8
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           
   534                           	psect	cstackBANK0
   535  000097                     __pcstackBANK0:
   536                           	opt stack 0
   537  000097                     ?i2_in_high_int:
   538                           	opt stack 0
   539  000097                     handle_start@data_read:
   540                           	opt stack 0
   541  000097                     WriteTimer0@timer0:
   542                           	opt stack 0
   543  000097                     i2check_msg@qptr:
   544                           	opt stack 0
   545  000097                     i2memcpy@d1:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x0
   549  000097                     	ds	2
   550  000099                     ??i2_check_msg:
   551  000099                     ?i2_in_low_int:
   552                           	opt stack 0
   553  000099                     WriteTimer0@timer:
   554                           	opt stack 0
   555  000099                     i2memcpy@s1:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000099                     	ds	2
   560  00009B                     i2memcpy@n:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x4
   564  00009B                     	ds	2
   565  00009D                     i2memcpy@d:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x6
   569  00009D                     	ds	2
   570  00009F                     i2memcpy@s:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x8
   574  00009F                     	ds	2
   575  0000A1                     i2send_msg@qptr:
   576                           	opt stack 0
   577  0000A1                     i2recv_msg@qptr:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xA
   581  0000A1                     	ds	2
   582  0000A3                     i2send_msg@length:
   583                           	opt stack 0
   584  0000A3                     i2recv_msg@maxlength:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0xC
   588  0000A3                     	ds	1
   589  0000A4                     i2send_msg@msgtype:
   590                           	opt stack 0
   591  0000A4                     i2recv_msg@msgtype:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0xD
   595  0000A4                     	ds	1
   596  0000A5                     i2send_msg@data:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0xE
   600  0000A5                     	ds	1
   601  0000A6                     i2recv_msg@data:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0xF
   605  0000A6                     	ds	1
   606  0000A7                     ??i2_send_msg:
   607                           
   608                           ; 0 bytes @ 0x10
   609  0000A7                     	ds	1
   610  0000A8                     ??i2_recv_msg:
   611  0000A8                     i2send_msg@tlength:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x11
   615  0000A8                     	ds	2
   616  0000AA                     i2send_msg@slot:
   617                           	opt stack 0
   618  0000AA                     i2recv_msg@slot:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x13
   622  0000AA                     	ds	1
   623  0000AB                     i2send_msg@qmsg:
   624                           	opt stack 0
   625  0000AB                     i2recv_msg@tlength:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x14
   629  0000AB                     	ds	2
   630  0000AD                     ToMainHigh_sendmsg@msgtype:
   631                           	opt stack 0
   632  0000AD                     i2recv_msg@qmsg:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x16
   636  0000AD                     	ds	1
   637  0000AE                     ToMainHigh_sendmsg@data:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x17
   641  0000AE                     	ds	1
   642  0000AF                     FromMainHigh_recvmsg@msgtype:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x18
   646  0000AF                     	ds	1
   647  0000B0                     ToMainHigh_sendmsg@length:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x19
   651  0000B0                     	ds	1
   652  0000B1                     ??_i2c_int_handler:
   653  0000B1                     FromMainHigh_recvmsg@data:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x1A
   657  0000B1                     	ds	2
   658  0000B3                     FromMainHigh_recvmsg@maxlength:
   659                           	opt stack 0
   660  0000B3                     i2c_int_handler@error_buf:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x1C
   664  0000B3                     	ds	1
   665  0000B4                     ??_timer0_int_handler:
   666                           
   667                           ; 0 bytes @ 0x1D
   668  0000B4                     	ds	1
   669  0000B5                     timer0_int_handler@length:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x1E
   673  0000B5                     	ds	1
   674  0000B6                     i2c_int_handler@data_written:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1F
   678  0000B6                     	ds	1
   679  0000B7                     i2c_int_handler@overrun_error:
   680                           	opt stack 0
   681  0000B7                     timer0_int_handler@msgtype:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x20
   685  0000B7                     	ds	1
   686  0000B8                     i2c_int_handler@i2c_data:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x21
   690  0000B8                     	ds	1
   691  0000B9                     i2c_int_handler@msg_to_send:
   692                           	opt stack 0
   693  0000B9                     timer0_int_handler@val:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x22
   697  0000B9                     	ds	1
   698  0000BA                     i2c_int_handler@msg_ready:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x23
   702  0000BA                     	ds	1
   703  0000BB                     i2c_int_handler@data_read:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x24
   707  0000BB                     	ds	1
   708  0000BC                     ??_InterruptHandlerHigh:
   709                           
   710                           ; 0 bytes @ 0x25
   711  0000BC                     	ds	14
   712  0000CA                     ??_init_queue:
   713  0000CA                     ??_send_msg:
   714  0000CA                     ??_check_msg:
   715  0000CA                     ??___lwmod:
   716  0000CA                     ToMainLow_recvmsg@maxlength:
   717                           	opt stack 0
   718  0000CA                     ToMainHigh_recvmsg@maxlength:
   719                           	opt stack 0
   720  0000CA                     start_i2c_slave_reply@length:
   721                           	opt stack 0
   722  0000CA                     i2c_configure_slave@addr:
   723                           	opt stack 0
   724  0000CA                     OpenTimer0@config:
   725                           	opt stack 0
   726  0000CA                     OpenTimer1@config1:
   727                           	opt stack 0
   728  0000CA                     Open1USART@config:
   729                           	opt stack 0
   730  0000CA                     Delay1KTCYx@unit:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x33
   734  0000CA                     	ds	1
   735  0000CB                     tblptru	equ	0xFF8
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           
   739                           ; 0 bytes @ 0x34
   740                           
   741                           	psect	cstackCOMRAM
   742  000001                     __pcstackCOMRAM:
   743                           	opt stack 0
   744  000001                     ?i1_ReadTimer1:
   745                           	opt stack 0
   746  000001                     Read1USART@data:
   747                           	opt stack 0
   748  000001                     WriteTimer1@timer1:
   749                           	opt stack 0
   750  000001                     i1memcpy@d1:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x0
   754  000001                     	ds	2
   755  000003                     WriteTimer1@timer:
   756                           	opt stack 0
   757  000003                     i1ReadTimer1@timer:
   758                           	opt stack 0
   759  000003                     i1memcpy@s1:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000003                     	ds	2
   764  000005                     i1memcpy@n:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x4
   768  000005                     	ds	2
   769  000007                     i1memcpy@d:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x6
   773  000007                     	ds	2
   774  000009                     i1memcpy@s:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x8
   778  000009                     	ds	2
   779  00000B                     i1send_msg@qptr:
   780                           	opt stack 0
   781  00000B                     i1recv_msg@qptr:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0xA
   785  00000B                     	ds	2
   786  00000D                     i1send_msg@length:
   787                           	opt stack 0
   788  00000D                     i1recv_msg@maxlength:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0xC
   792  00000D                     	ds	1
   793  00000E                     i1send_msg@msgtype:
   794                           	opt stack 0
   795  00000E                     i1recv_msg@msgtype:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0xD
   799  00000E                     	ds	1
   800  00000F                     i1send_msg@data:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0xE
   804  00000F                     	ds	1
   805  000010                     i1recv_msg@data:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0xF
   809  000010                     	ds	1
   810  000011                     ??i1_send_msg:
   811                           
   812                           ; 0 bytes @ 0x10
   813  000011                     	ds	1
   814  000012                     ??i1_recv_msg:
   815  000012                     i1send_msg@tlength:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	2
   820  000014                     i1send_msg@slot:
   821                           	opt stack 0
   822  000014                     i1recv_msg@slot:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x13
   826  000014                     	ds	1
   827  000015                     i1send_msg@qmsg:
   828                           	opt stack 0
   829  000015                     i1recv_msg@tlength:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x14
   833  000015                     	ds	2
   834  000017                     i1ToMainLow_sendmsg@msgtype:
   835                           	opt stack 0
   836  000017                     i1recv_msg@qmsg:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x16
   840  000017                     	ds	1
   841  000018                     i1ToMainLow_sendmsg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x17
   845  000018                     	ds	1
   846  000019                     FromMainLow_recvmsg@msgtype:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x18
   850  000019                     	ds	1
   851  00001A                     i1ToMainLow_sendmsg@length:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x19
   855  00001A                     	ds	1
   856  00001B                     ??_timer1_int_handler:
   857  00001B                     ??_uart_recv_int_handler:
   858  00001B                     FromMainLow_recvmsg@data:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x1A
   862  00001B                     	ds	1
   863  00001C                     timer1_int_handler@result:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x1B
   867  00001C                     	ds	1
   868  00001D                     FromMainLow_recvmsg@maxlength:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x1C
   872  00001D                     	ds	1
   873  00001E                     ??_uart_trans_int_handler:
   874                           
   875                           ; 0 bytes @ 0x1D
   876  00001E                     	ds	1
   877  00001F                     uart_trans_int_handler@data:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x1E
   881  00001F                     	ds	2
   882  000021                     uart_trans_int_handler@curIndex:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0x20
   886  000021                     	ds	1
   887  000022                     uart_trans_int_handler@msgtype:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x21
   891  000022                     	ds	1
   892  000023                     uart_trans_int_handler@length:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x22
   896  000023                     	ds	1
   897  000024                     ??_InterruptHandlerLow:
   898                           
   899                           ; 0 bytes @ 0x23
   900  000024                     	ds	17
   901                           tblptru	equ	0xFF8
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 139 in file "src/main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  ic             28   45[BANK2 ] struct __i2c_comm
   915 ;;  t1thread_dat   12   31[BANK2 ] struct __timer1_thread_s
   916 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   917 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   918 ;;  uc              5   26[BANK2 ] struct __uart_comm
   919 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   920 ;;  length          1   44[BANK2 ] char 
   921 ;;  msgtype         1   43[BANK2 ] unsigned char 
   922 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   923 ;;  baud            1   14[BANK2 ] unsigned char 
   924 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   925 ;;  i               1    0        unsigned char 
   926 ;;  c               1    0        unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;		None               void
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Locals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Totals:         0       0       1      73       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;Total ram usage:       74 bytes
   941 ;; Hardware stack levels required when called:   15
   942 ;; This function calls:
   943 ;;		_Open1USART
   944 ;;		_OpenTimer0
   945 ;;		_OpenTimer1
   946 ;;		_ToMainHigh_recvmsg
   947 ;;		_ToMainLow_recvmsg
   948 ;;		_block_on_To_msgqueues
   949 ;;		_enable_interrupts
   950 ;;		_i2c_configure_slave
   951 ;;		_init_i2c
   952 ;;		_init_queues
   953 ;;		_init_timer1_lthread
   954 ;;		_init_uart_lthread
   955 ;;		_init_uart_recv
   956 ;;		_start_i2c_slave_reply
   957 ;;		_timer0_lthread
   958 ;;		_timer1_lthread
   959 ;;		_uart_lthread
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text0
   966  00071E                     __ptext0:
   967                           	opt stack 0
   968  00071E                     _main:
   969                           	opt stack 16
   970                           
   971                           ;main.c: 140: char c;
   972                           ;main.c: 141: signed char length;
   973                           ;main.c: 142: unsigned char msgtype;
   974                           ;main.c: 143: unsigned char last_reg_recvd;
   975                           ;main.c: 144: unsigned char baud, UARTConfig;
   976                           ;main.c: 145: uart_comm uc;
   977                           ;main.c: 146: i2c_comm ic;
   978                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   979                           ;main.c: 148: unsigned char i;
   980                           ;main.c: 149: uart_thread_struct uthread_data;
   981                           ;main.c: 150: timer1_thread_struct t1thread_data;
   982                           ;main.c: 151: timer0_thread_struct t0thread_data;
   983                           ;main.c: 163: OSCCON = 0xE0;
   984                           
   985                           ;incstack = 0
   986  00071E  0EE0               	movlw	224
   987  000720  6ED3               	movwf	4051,c	;volatile
   988                           
   989                           ;main.c: 164: OSCTUNEbits.PLLEN = 1;
   990  000722  8C9B               	bsf	3995,6,c	;volatile
   991                           
   992                           ;main.c: 173: init_uart_recv(&uc);
   993  000724  0102               	movlb	2	; () banked
   994  000726  0E02               	movlw	high main@uc
   995  000728  0101               	movlb	1	; () banked
   996  00072A  0101               	movlb	1	; () banked
   997  00072C  6FA3               	movwf	(init_uart_recv@uc+1)& (0+255),b
   998  00072E  0102               	movlb	2	; () banked
   999  000730  0E1A               	movlw	low main@uc
  1000  000732  0101               	movlb	1	; () banked
  1001  000734  0101               	movlb	1	; () banked
  1002  000736  6FA2               	movwf	init_uart_recv@uc& (0+255),b
  1003  000738  EC77  F00F         	call	_init_uart_recv	;wreg free
  1004                           
  1005                           ;main.c: 176: init_i2c(&ic);
  1006  00073C  0102               	movlb	2	; () banked
  1007  00073E  0E02               	movlw	high main@ic
  1008  000740  0101               	movlb	1	; () banked
  1009  000742  0101               	movlb	1	; () banked
  1010  000744  6FA3               	movwf	(init_i2c@ic+1)& (0+255),b
  1011  000746  0102               	movlb	2	; () banked
  1012  000748  0E2D               	movlw	low main@ic
  1013  00074A  0101               	movlb	1	; () banked
  1014  00074C  0101               	movlb	1	; () banked
  1015  00074E  6FA2               	movwf	init_i2c@ic& (0+255),b
  1016  000750  EC6A  F00C         	call	_init_i2c	;wreg free
  1017                           
  1018                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
  1019  000754  0102               	movlb	2	; () banked
  1020  000756  0E02               	movlw	high main@t1thread_data
  1021  000758  0101               	movlb	1	; () banked
  1022  00075A  0101               	movlb	1	; () banked
  1023  00075C  6FA3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1024  00075E  0102               	movlb	2	; () banked
  1025  000760  0E1F               	movlw	low main@t1thread_data
  1026  000762  0101               	movlb	1	; () banked
  1027  000764  0101               	movlb	1	; () banked
  1028  000766  6FA2               	movwf	init_timer1_lthread@tptr& (0+255),b
  1029  000768  EC57  F00E         	call	_init_timer1_lthread	;wreg free
  1030                           
  1031                           ;main.c: 182: init_uart_lthread(&uthread_data);
  1032  00076C  0102               	movlb	2	; () banked
  1033  00076E  0E02               	movlw	high main@uthread_data
  1034  000770  0101               	movlb	1	; () banked
  1035  000772  0101               	movlb	1	; () banked
  1036  000774  6FA3               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1037  000776  0102               	movlb	2	; () banked
  1038  000778  0E10               	movlw	low main@uthread_data
  1039  00077A  0101               	movlb	1	; () banked
  1040  00077C  0101               	movlb	1	; () banked
  1041  00077E  6FA2               	movwf	init_uart_lthread@uptr& (0+255),b
  1042  000780  ECE6  F00F         	call	_init_uart_lthread	;wreg free
  1043                           
  1044                           ;main.c: 186: init_queues();
  1045  000784  ECFA  F00B         	call	_init_queues	;wreg free
  1046                           
  1047                           ;main.c: 189: TRISB = 0x0;
  1048  000788  0E00               	movlw	0
  1049  00078A  6E93               	movwf	3987,c	;volatile
  1050                           
  1051                           ;main.c: 190: LATB = 0x0;
  1052  00078C  0E00               	movlw	0
  1053  00078E  6E8A               	movwf	3978,c	;volatile
  1054                           
  1055                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1056  000790  0E96               	movlw	150
  1057  000792  EC15  F00F         	call	_OpenTimer0
  1058                           
  1059                           ;main.c: 196: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1060  000796  0101               	movlb	1	; () banked
  1061  000798  6FCE               	movwf	??_main& (0+255),b
  1062  00079A  0E00               	movlw	0
  1063  00079C  0100               	movlb	0	; () banked
  1064  00079E  0100               	movlb	0	; () banked
  1065  0007A0  6FCA               	movwf	OpenTimer1@config1& (0+255),b
  1066  0007A2  0101               	movlb	1	; () banked
  1067  0007A4  51CE               	movf	??_main& (0+255),w,b
  1068  0007A6  0E9B               	movlw	155
  1069  0007A8  EC17  F00E         	call	_OpenTimer1
  1070                           
  1071                           ;main.c: 203: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 & 0b11101111;
  1072  0007AC  0101               	movlb	1	; () banked
  1073  0007AE  6FCE               	movwf	??_main& (0+255),b
  1074  0007B0  0EEC               	movlw	236
  1075  0007B2  0102               	movlb	2	; () banked
  1076  0007B4  0102               	movlb	2	; () banked
  1077  0007B6  6F0F               	movwf	main@UARTConfig& (0+255),b
  1078  0007B8  0101               	movlb	1	; () banked
  1079  0007BA  51CE               	movf	??_main& (0+255),w,b
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;main.c: 204: baud = 77;
  1083  0007BC  0101               	movlb	1	; () banked
  1084  0007BE  6FCE               	movwf	??_main& (0+255),b
  1085  0007C0  0E4D               	movlw	77
  1086  0007C2  0102               	movlb	2	; () banked
  1087  0007C4  0102               	movlb	2	; () banked
  1088  0007C6  6F0E               	movwf	main@baud& (0+255),b
  1089  0007C8  0101               	movlb	1	; () banked
  1090  0007CA  51CE               	movf	??_main& (0+255),w,b
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 205: Open1USART(UARTConfig, baud);
  1094  0007CC  0102               	movlb	2	; () banked
  1095  0007CE  0101               	movlb	1	; () banked
  1096  0007D0  C20E  F1A2         	movff	main@baud,Open1USART@spbrg
  1097  0007D4  0101               	movlb	1	; () banked
  1098  0007D6  0101               	movlb	1	; () banked
  1099  0007D8  6BA3               	clrf	(Open1USART@spbrg+1)& (0+255),b
  1100  0007DA  0102               	movlb	2	; () banked
  1101  0007DC  0102               	movlb	2	; () banked
  1102  0007DE  510F               	movf	main@UARTConfig& (0+255),w,b
  1103  0007E0  EC7D  F00B         	call	_Open1USART
  1104                           
  1105                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1106  0007E4  909F               	bcf	3999,0,c	;volatile
  1107                           
  1108                           ;main.c: 217: IPR1bits.RCIP = 0;
  1109  0007E6  9A9F               	bcf	3999,5,c	;volatile
  1110                           
  1111                           ;main.c: 219: IPR1bits.TXIP = 0;
  1112  0007E8  989F               	bcf	3999,4,c	;volatile
  1113                           
  1114                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1115  0007EA  869F               	bsf	3999,3,c	;volatile
  1116                           
  1117                           ;main.c: 230: i2c_configure_slave(0x9E);
  1118  0007EC  0E9E               	movlw	158
  1119  0007EE  EC2A  F00F         	call	_i2c_configure_slave
  1120                           
  1121                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1122  0007F2  869D               	bsf	3997,3,c	;volatile
  1123                           
  1124                           ;main.c: 249: enable_interrupts();
  1125  0007F4  ECDF  F00F         	call	_enable_interrupts	;wreg free
  1126  0007F8                     l3448:
  1127                           
  1128                           ;main.c: 273: block_on_To_msgqueues();
  1129  0007F8  ECB2  F00A         	call	_block_on_To_msgqueues	;wreg free
  1130                           
  1131                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1132  0007FC  0102               	movlb	2	; () banked
  1133  0007FE  0E02               	movlw	high main@msgtype
  1134  000800  0101               	movlb	1	; () banked
  1135  000802  0101               	movlb	1	; () banked
  1136  000804  6FBB               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1137  000806  0102               	movlb	2	; () banked
  1138  000808  0E2B               	movlw	low main@msgtype
  1139  00080A  0101               	movlb	1	; () banked
  1140  00080C  0101               	movlb	1	; () banked
  1141  00080E  6FBA               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1142  000810  0102               	movlb	2	; () banked
  1143  000812  0E02               	movlw	high main@msgbuffer
  1144  000814  0101               	movlb	1	; () banked
  1145  000816  0101               	movlb	1	; () banked
  1146  000818  6FBD               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1147  00081A  0102               	movlb	2	; () banked
  1148  00081C  0E00               	movlw	low main@msgbuffer
  1149  00081E  0101               	movlb	1	; () banked
  1150  000820  0101               	movlb	1	; () banked
  1151  000822  6FBC               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1152  000824  0E0A               	movlw	10
  1153  000826  ECD5  F00D         	call	_ToMainHigh_recvmsg
  1154  00082A  0102               	movlb	2	; () banked
  1155  00082C  0102               	movlb	2	; () banked
  1156  00082E  6F2C               	movwf	main@length& (0+255),b
  1157                           
  1158                           ; BSR set to: 2
  1159                           ;main.c: 281: if (length < 0) {
  1160  000830  0102               	movlb	2	; () banked
  1161  000832  0102               	movlb	2	; () banked
  1162  000834  BF2C               	btfsc	main@length& (0+255),7,b
  1163  000836  D08D               	goto	l3474
  1164  000838  D07D               	goto	l3472
  1165  00083A                     l3456:
  1166                           
  1167                           ; BSR set to: 2
  1168                           ;main.c: 289: {
  1169                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1170  00083A  0102               	movlb	2	; () banked
  1171  00083C  0E02               	movlw	high main@t0thread_data
  1172  00083E  0101               	movlb	1	; () banked
  1173  000840  0101               	movlb	1	; () banked
  1174  000842  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1175  000844  0102               	movlb	2	; () banked
  1176  000846  0E0B               	movlw	low main@t0thread_data
  1177  000848  0101               	movlb	1	; () banked
  1178  00084A  0101               	movlb	1	; () banked
  1179  00084C  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1180  00084E  0102               	movlb	2	; () banked
  1181  000850  0101               	movlb	1	; () banked
  1182  000852  C22B  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1183  000856  0101               	movlb	1	; () banked
  1184  000858  0101               	movlb	1	; () banked
  1185  00085A  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1186  00085C  0102               	movlb	2	; () banked
  1187  00085E  0102               	movlb	2	; () banked
  1188  000860  512C               	movf	main@length& (0+255),w,b
  1189  000862  0101               	movlb	1	; () banked
  1190  000864  0101               	movlb	1	; () banked
  1191  000866  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1192  000868  0101               	movlb	1	; () banked
  1193  00086A  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1194  00086C  0101               	movlb	1	; () banked
  1195  00086E  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1196  000870  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1197  000872  0102               	movlb	2	; () banked
  1198  000874  0E02               	movlw	high main@msgbuffer
  1199  000876  0101               	movlb	1	; () banked
  1200  000878  0101               	movlb	1	; () banked
  1201  00087A  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1202  00087C  0102               	movlb	2	; () banked
  1203  00087E  0E00               	movlw	low main@msgbuffer
  1204  000880  0101               	movlb	1	; () banked
  1205  000882  0101               	movlb	1	; () banked
  1206  000884  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1207  000886  ECA9  F00F         	call	_timer0_lthread	;wreg free
  1208                           
  1209                           ;main.c: 291: break;
  1210  00088A  D063               	goto	l3474
  1211  00088C                     l109:
  1212                           
  1213                           ;main.c: 294: case 41:
  1214                           ;main.c: 295: {
  1215                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1216  00088C  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1217                           
  1218                           ;main.c: 299: break;
  1219  000890  D060               	goto	l3474
  1220  000892                     l3458:
  1221                           
  1222                           ;main.c: 312: {
  1223                           ;main.c: 313: length = 2;
  1224  000892  0101               	movlb	1	; () banked
  1225  000894  6FCE               	movwf	??_main& (0+255),b
  1226  000896  0E02               	movlw	2
  1227  000898  0102               	movlb	2	; () banked
  1228  00089A  0102               	movlb	2	; () banked
  1229  00089C  6F2C               	movwf	main@length& (0+255),b
  1230  00089E  0101               	movlb	1	; () banked
  1231  0008A0  51CE               	movf	??_main& (0+255),w,b
  1232                           
  1233                           ;main.c: 314: msgbuffer[0] = 0x55;
  1234  0008A2  0101               	movlb	1	; () banked
  1235  0008A4  6FCE               	movwf	??_main& (0+255),b
  1236  0008A6  0E55               	movlw	85
  1237  0008A8  0102               	movlb	2	; () banked
  1238  0008AA  0102               	movlb	2	; () banked
  1239  0008AC  6F00               	movwf	main@msgbuffer& (0+255),b
  1240  0008AE  0101               	movlb	1	; () banked
  1241  0008B0  51CE               	movf	??_main& (0+255),w,b
  1242                           
  1243                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1244  0008B2  0101               	movlb	1	; () banked
  1245  0008B4  6FCE               	movwf	??_main& (0+255),b
  1246  0008B6  0EAA               	movlw	170
  1247  0008B8  0102               	movlb	2	; () banked
  1248  0008BA  0102               	movlb	2	; () banked
  1249  0008BC  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1250  0008BE  D00C               	goto	L1
  1251  0008C0                     l3460:
  1252                           
  1253                           ;main.c: 319: {
  1254                           ;main.c: 320: length = 1;
  1255  0008C0  0101               	movlb	1	; () banked
  1256  0008C2  6FCE               	movwf	??_main& (0+255),b
  1257  0008C4  0E01               	movlw	1
  1258  0008C6  0102               	movlb	2	; () banked
  1259  0008C8  0102               	movlb	2	; () banked
  1260  0008CA  6F2C               	movwf	main@length& (0+255),b
  1261  0008CC  0101               	movlb	1	; () banked
  1262  0008CE  51CE               	movf	??_main& (0+255),w,b
  1263                           
  1264                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1265  0008D0  0101               	movlb	1	; () banked
  1266  0008D2  6FCE               	movwf	??_main& (0+255),b
  1267  0008D4  0E3A               	movlw	58
  1268  0008D6  D00E               	goto	L2
  1269  0008D8                     L1:
  1270  0008D8  0101               	movlb	1	; () banked
  1271  0008DA  51CE               	movf	??_main& (0+255),w,b
  1272                           
  1273                           ;main.c: 322: break;
  1274  0008DC  D01B               	goto	l3468
  1275  0008DE                     l3462:
  1276                           
  1277                           ;main.c: 325: {
  1278                           ;main.c: 326: length = 1;
  1279  0008DE  0101               	movlb	1	; () banked
  1280  0008E0  6FCE               	movwf	??_main& (0+255),b
  1281  0008E2  0E01               	movlw	1
  1282  0008E4  0102               	movlb	2	; () banked
  1283  0008E6  0102               	movlb	2	; () banked
  1284  0008E8  6F2C               	movwf	main@length& (0+255),b
  1285  0008EA  0101               	movlb	1	; () banked
  1286  0008EC  51CE               	movf	??_main& (0+255),w,b
  1287                           
  1288                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1289  0008EE  0101               	movlb	1	; () banked
  1290  0008F0  6FCE               	movwf	??_main& (0+255),b
  1291  0008F2  0EA3               	movlw	163
  1292  0008F4                     L2:
  1293  0008F4  0102               	movlb	2	; () banked
  1294  0008F6  0102               	movlb	2	; () banked
  1295  0008F8  6F00               	movwf	main@msgbuffer& (0+255),b
  1296  0008FA  D7EE               	goto	L1
  1297  0008FC                     l3466:
  1298  0008FC  0102               	movlb	2	; () banked
  1299  0008FE  0102               	movlb	2	; () banked
  1300  000900  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1301                           
  1302                           ; Switch size 1, requested type "space"
  1303                           ; Number of cases is 3, Range of values is 168 to 170
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           10     6 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308  000902  0AA8               	xorlw	168	; case 168
  1309  000904  B4D8               	btfsc	status,2,c
  1310  000906  D7DC               	goto	l3460
  1311  000908  0A01               	xorlw	1	; case 169
  1312  00090A  B4D8               	btfsc	status,2,c
  1313  00090C  D7E8               	goto	l3462
  1314  00090E  0A03               	xorlw	3	; case 170
  1315  000910  B4D8               	btfsc	status,2,c
  1316  000912  D7BF               	goto	l3458
  1317  000914                     l3468:
  1318                           
  1319                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1320  000914  0102               	movlb	2	; () banked
  1321  000916  0E02               	movlw	high main@msgbuffer
  1322  000918  0101               	movlb	1	; () banked
  1323  00091A  0101               	movlb	1	; () banked
  1324  00091C  6FA3               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1325  00091E  0102               	movlb	2	; () banked
  1326  000920  0E00               	movlw	low main@msgbuffer
  1327  000922  0101               	movlb	1	; () banked
  1328  000924  0101               	movlb	1	; () banked
  1329  000926  6FA2               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1330  000928  0102               	movlb	2	; () banked
  1331  00092A  0102               	movlb	2	; () banked
  1332  00092C  512C               	movf	main@length& (0+255),w,b
  1333  00092E  ECFB  F006         	call	_start_i2c_slave_reply
  1334                           
  1335                           ;main.c: 332: break;
  1336  000932  D00F               	goto	l3474
  1337  000934                     l3472:
  1338  000934  0102               	movlb	2	; () banked
  1339  000936  0102               	movlb	2	; () banked
  1340  000938  512B               	movf	main@msgtype& (0+255),w,b
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 4, Range of values is 10 to 42
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           13     7 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  00093A  0A0A               	xorlw	10	; case 10
  1349  00093C  B4D8               	btfsc	status,2,c
  1350  00093E  D77D               	goto	l3456
  1351  000940  0A22               	xorlw	34	; case 40
  1352  000942  B4D8               	btfsc	status,2,c
  1353  000944  D7A3               	goto	l109
  1354  000946  0A01               	xorlw	1	; case 41
  1355  000948  B4D8               	btfsc	status,2,c
  1356  00094A  D7A0               	goto	l109
  1357  00094C  0A03               	xorlw	3	; case 42
  1358  00094E  B4D8               	btfsc	status,2,c
  1359  000950  D7D5               	goto	l3466
  1360  000952                     l3474:
  1361                           
  1362                           ;main.c: 340: }
  1363                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1364  000952  0102               	movlb	2	; () banked
  1365  000954  0E02               	movlw	high main@msgtype
  1366  000956  0101               	movlb	1	; () banked
  1367  000958  0101               	movlb	1	; () banked
  1368  00095A  6FBB               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1369  00095C  0102               	movlb	2	; () banked
  1370  00095E  0E2B               	movlw	low main@msgtype
  1371  000960  0101               	movlb	1	; () banked
  1372  000962  0101               	movlb	1	; () banked
  1373  000964  6FBA               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1374  000966  0102               	movlb	2	; () banked
  1375  000968  0E02               	movlw	high main@msgbuffer
  1376  00096A  0101               	movlb	1	; () banked
  1377  00096C  0101               	movlb	1	; () banked
  1378  00096E  6FBD               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1379  000970  0102               	movlb	2	; () banked
  1380  000972  0E00               	movlw	low main@msgbuffer
  1381  000974  0101               	movlb	1	; () banked
  1382  000976  0101               	movlb	1	; () banked
  1383  000978  6FBC               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1384  00097A  0E0A               	movlw	10
  1385  00097C  ECB4  F00D         	call	_ToMainLow_recvmsg
  1386  000980  0102               	movlb	2	; () banked
  1387  000982  0102               	movlb	2	; () banked
  1388  000984  6F2C               	movwf	main@length& (0+255),b
  1389                           
  1390                           ; BSR set to: 2
  1391                           ;main.c: 344: if (length < 0) {
  1392  000986  0102               	movlb	2	; () banked
  1393  000988  0102               	movlb	2	; () banked
  1394  00098A  BF2C               	btfsc	main@length& (0+255),7,b
  1395  00098C  D735               	goto	l3448
  1396  00098E  D052               	goto	l3486
  1397  000990                     l3480:
  1398                           
  1399                           ; BSR set to: 2
  1400                           ;main.c: 352: {
  1401                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1402  000990  0102               	movlb	2	; () banked
  1403  000992  0E02               	movlw	high main@t1thread_data
  1404  000994  0101               	movlb	1	; () banked
  1405  000996  0101               	movlb	1	; () banked
  1406  000998  6FC1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1407  00099A  0102               	movlb	2	; () banked
  1408  00099C  0E1F               	movlw	low main@t1thread_data
  1409  00099E  0101               	movlb	1	; () banked
  1410  0009A0  0101               	movlb	1	; () banked
  1411  0009A2  6FC0               	movwf	timer1_lthread@tptr& (0+255),b
  1412  0009A4  0102               	movlb	2	; () banked
  1413  0009A6  0101               	movlb	1	; () banked
  1414  0009A8  C22B  F1C2         	movff	main@msgtype,timer1_lthread@msgtype
  1415  0009AC  0101               	movlb	1	; () banked
  1416  0009AE  0101               	movlb	1	; () banked
  1417  0009B0  6BC3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1418  0009B2  0102               	movlb	2	; () banked
  1419  0009B4  0102               	movlb	2	; () banked
  1420  0009B6  512C               	movf	main@length& (0+255),w,b
  1421  0009B8  0101               	movlb	1	; () banked
  1422  0009BA  0101               	movlb	1	; () banked
  1423  0009BC  6FC4               	movwf	timer1_lthread@length& (0+255),b
  1424  0009BE  0101               	movlb	1	; () banked
  1425  0009C0  6BC5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1426  0009C2  0101               	movlb	1	; () banked
  1427  0009C4  BFC4               	btfsc	timer1_lthread@length& (0+255),7,b
  1428  0009C6  07C5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1429  0009C8  0102               	movlb	2	; () banked
  1430  0009CA  0E02               	movlw	high main@msgbuffer
  1431  0009CC  0101               	movlb	1	; () banked
  1432  0009CE  0101               	movlb	1	; () banked
  1433  0009D0  6FC7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1434  0009D2  0102               	movlb	2	; () banked
  1435  0009D4  0E00               	movlw	low main@msgbuffer
  1436  0009D6  0101               	movlb	1	; () banked
  1437  0009D8  0101               	movlb	1	; () banked
  1438  0009DA  6FC6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1439  0009DC  EC2A  F005         	call	_timer1_lthread	;wreg free
  1440                           
  1441                           ;main.c: 354: break;
  1442  0009E0  D70B               	goto	l3448
  1443  0009E2                     l3482:
  1444                           
  1445                           ;main.c: 357: case 31:
  1446                           ;main.c: 358: case 32:
  1447                           ;main.c: 359: {
  1448                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1449  0009E2  0102               	movlb	2	; () banked
  1450  0009E4  0E02               	movlw	high main@uthread_data
  1451  0009E6  0101               	movlb	1	; () banked
  1452  0009E8  0101               	movlb	1	; () banked
  1453  0009EA  6FBC               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1454  0009EC  0102               	movlb	2	; () banked
  1455  0009EE  0E10               	movlw	low main@uthread_data
  1456  0009F0  0101               	movlb	1	; () banked
  1457  0009F2  0101               	movlb	1	; () banked
  1458  0009F4  6FBB               	movwf	uart_lthread@uptr& (0+255),b
  1459  0009F6  0102               	movlb	2	; () banked
  1460  0009F8  0101               	movlb	1	; () banked
  1461  0009FA  C22B  F1BD         	movff	main@msgtype,uart_lthread@msgtype
  1462  0009FE  0101               	movlb	1	; () banked
  1463  000A00  0101               	movlb	1	; () banked
  1464  000A02  6BBE               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1465  000A04  0102               	movlb	2	; () banked
  1466  000A06  0102               	movlb	2	; () banked
  1467  000A08  512C               	movf	main@length& (0+255),w,b
  1468  000A0A  0101               	movlb	1	; () banked
  1469  000A0C  0101               	movlb	1	; () banked
  1470  000A0E  6FBF               	movwf	uart_lthread@length& (0+255),b
  1471  000A10  0101               	movlb	1	; () banked
  1472  000A12  6BC0               	clrf	(uart_lthread@length+1)& (0+255),b
  1473  000A14  0101               	movlb	1	; () banked
  1474  000A16  BFBF               	btfsc	uart_lthread@length& (0+255),7,b
  1475  000A18  07C0               	decf	(uart_lthread@length+1)& (0+255),f,b
  1476  000A1A  0102               	movlb	2	; () banked
  1477  000A1C  0E02               	movlw	high main@msgbuffer
  1478  000A1E  0101               	movlb	1	; () banked
  1479  000A20  0101               	movlb	1	; () banked
  1480  000A22  6FC2               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1481  000A24  0102               	movlb	2	; () banked
  1482  000A26  0E00               	movlw	low main@msgbuffer
  1483  000A28  0101               	movlb	1	; () banked
  1484  000A2A  0101               	movlb	1	; () banked
  1485  000A2C  6FC1               	movwf	uart_lthread@msgbuffer& (0+255),b
  1486  000A2E  EC86  F008         	call	_uart_lthread	;wreg free
  1487                           
  1488                           ;main.c: 361: break;
  1489  000A32  D6E2               	goto	l3448
  1490  000A34                     l3486:
  1491  000A34  0102               	movlb	2	; () banked
  1492  000A36  0102               	movlb	2	; () banked
  1493  000A38  512B               	movf	main@msgtype& (0+255),w,b
  1494                           
  1495                           ; Switch size 1, requested type "space"
  1496                           ; Number of cases is 4, Range of values is 11 to 32
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte           13     7 (average)
  1500                           ;	Chosen strategy is simple_byte
  1501  000A3A  0A0B               	xorlw	11	; case 11
  1502  000A3C  B4D8               	btfsc	status,2,c
  1503  000A3E  D7A8               	goto	l3480
  1504  000A40  0A15               	xorlw	21	; case 30
  1505  000A42  B4D8               	btfsc	status,2,c
  1506  000A44  D7CE               	goto	l3482
  1507  000A46  0A01               	xorlw	1	; case 31
  1508  000A48  B4D8               	btfsc	status,2,c
  1509  000A4A  D7CB               	goto	l3482
  1510  000A4C  0A3F               	xorlw	63	; case 32
  1511  000A4E  B4D8               	btfsc	status,2,c
  1512  000A50  D7C8               	goto	l3482
  1513  000A52  D6D2               	goto	l3448
  1514  000A54                     __end_of_main:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _uart_lthread *****************
  1522 ;; Defined at:
  1523 ;;		line 12 in file "src/uart_thread.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  uptr            2   25[BANK1 ] PTR struct __uart_thread
  1526 ;;		 -> main@uthread_data(10), 
  1527 ;;  msgtype         2   27[BANK1 ] int 
  1528 ;;  length          2   29[BANK1 ] int 
  1529 ;;  msgbuffer       2   31[BANK1 ] PTR unsigned char 
  1530 ;;		 -> main@msgbuffer(11), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  index           2   34[BANK1 ] int 
  1533 ;;  status          1   33[BANK1 ] char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2   25[BANK1 ] int 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:       11 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:   13
  1550 ;; This function calls:
  1551 ;;		_FromMainLow_sendmsg
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text1
  1558  00110C                     __ptext1:
  1559                           	opt stack 0
  1560  00110C                     _uart_lthread:
  1561                           	opt stack 17
  1562                           
  1563                           ;uart_thread.c: 13: if (msgtype == 30) {
  1564                           
  1565                           ; BSR set to: 2
  1566                           ;incstack = 0
  1567  00110C  0101               	movlb	1	; () banked
  1568  00110E  0101               	movlb	1	; () banked
  1569  001110  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1570  001112  0A1E               	xorlw	30
  1571  001114  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1572  001116  B4D8               	btfsc	status,2,c
  1573  001118  0012               	return	
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;uart_thread.c: 16: else if(msgtype == 31){
  1577                           
  1578                           ; BSR set to: 1
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;uart_thread.c: 15: }
  1582  00111A  0101               	movlb	1	; () banked
  1583  00111C  0101               	movlb	1	; () banked
  1584  00111E  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1585  001120  0A1F               	xorlw	31
  1586  001122  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1587  001124  A4D8               	btfss	status,2,c
  1588  001126  D04F               	goto	l3700
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;uart_thread.c: 18: int index = 0;
  1592  001128  0E00               	movlw	0
  1593  00112A  0101               	movlb	1	; () banked
  1594  00112C  0101               	movlb	1	; () banked
  1595  00112E  6FC5               	movwf	(uart_lthread@index+1)& (0+255),b
  1596  001130  0E00               	movlw	0
  1597  001132  0101               	movlb	1	; () banked
  1598  001134  6FC4               	movwf	uart_lthread@index& (0+255),b
  1599                           
  1600                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1601  001136  0E00               	movlw	0
  1602  001138  0101               	movlb	1	; () banked
  1603  00113A  0101               	movlb	1	; () banked
  1604  00113C  6FC5               	movwf	(uart_lthread@index+1)& (0+255),b
  1605  00113E  0E00               	movlw	0
  1606  001140  0101               	movlb	1	; () banked
  1607  001142  6FC4               	movwf	uart_lthread@index& (0+255),b
  1608  001144                     
  1609                           ; BSR set to: 1
  1610  001144  0101               	movlb	1	; () banked
  1611  001146  0101               	movlb	1	; () banked
  1612  001148  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1613  00114A  0A80               	xorlw	128
  1614  00114C  0F80               	addlw	-128
  1615  00114E  0E0A               	movlw	10
  1616  001150  B4D8               	btfsc	status,2,c
  1617  001152  5DC4               	subwf	uart_lthread@index& (0+255),w,b
  1618  001154  B0D8               	btfsc	status,0,c
  1619  001156  D023               	goto	l3696
  1620                           
  1621                           ; BSR set to: 1
  1622                           
  1623                           ; BSR set to: 1
  1624                           
  1625                           ; BSR set to: 1
  1626  001158  0101               	movlb	1	; () banked
  1627  00115A  0101               	movlb	1	; () banked
  1628  00115C  51C4               	movf	uart_lthread@index& (0+255),w,b
  1629  00115E  0101               	movlb	1	; () banked
  1630  001160  0101               	movlb	1	; () banked
  1631  001162  25C1               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1632  001164  6ED9               	movwf	fsr2l,c
  1633  001166  0101               	movlb	1	; () banked
  1634  001168  0101               	movlb	1	; () banked
  1635  00116A  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1636  00116C  0101               	movlb	1	; () banked
  1637  00116E  0101               	movlb	1	; () banked
  1638  001170  21C2               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1639  001172  6EDA               	movwf	fsr2h,c
  1640  001174  0101               	movlb	1	; () banked
  1641  001176  0101               	movlb	1	; () banked
  1642  001178  51C4               	movf	uart_lthread@index& (0+255),w,b
  1643  00117A  0101               	movlb	1	; () banked
  1644  00117C  0101               	movlb	1	; () banked
  1645  00117E  25BB               	addwf	uart_lthread@uptr& (0+255),w,b
  1646  001180  6EE1               	movwf	fsr1l,c
  1647  001182  0101               	movlb	1	; () banked
  1648  001184  0101               	movlb	1	; () banked
  1649  001186  51C5               	movf	(uart_lthread@index+1)& (0+255),w,b
  1650  001188  0101               	movlb	1	; () banked
  1651  00118A  0101               	movlb	1	; () banked
  1652  00118C  21BC               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1653  00118E  6EE2               	movwf	fsr1h,c
  1654  001190  CFDF FFE7          	movff	indf2,indf1
  1655                           
  1656                           ; BSR set to: 1
  1657  001194  0101               	movlb	1	; () banked
  1658  001196  0101               	movlb	1	; () banked
  1659  001198  4BC4               	infsnz	uart_lthread@index& (0+255),f,b
  1660  00119A  2BC5               	incf	(uart_lthread@index+1)& (0+255),f,b
  1661  00119C  D7D3               	goto	L3
  1662  00119E                     l3696:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1666  00119E  C1BD  F1B7         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1667  0011A2  0101               	movlb	1	; () banked
  1668  0011A4  0101               	movlb	1	; () banked
  1669  0011A6  C1BC  F1B9         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1670  0011AA  0101               	movlb	1	; () banked
  1671  0011AC  0101               	movlb	1	; () banked
  1672  0011AE  C1BB  F1B8         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1673  0011B2  0101               	movlb	1	; () banked
  1674  0011B4  0101               	movlb	1	; () banked
  1675  0011B6  51BF               	movf	uart_lthread@length& (0+255),w,b
  1676  0011B8  EC76  F00E         	call	_FromMainLow_sendmsg
  1677  0011BC  0101               	movlb	1	; () banked
  1678  0011BE  0101               	movlb	1	; () banked
  1679  0011C0  6FC3               	movwf	uart_lthread@status& (0+255),b
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;uart_thread.c: 25: }
  1683                           ;uart_thread.c: 27: PIE1bits.TXIE = 1;
  1684                           
  1685                           ; BSR set to: 1
  1686  0011C2  889D               	bsf	3997,4,c	;volatile
  1687                           
  1688                           ;uart_thread.c: 28: }
  1689  0011C4  0012               	return	
  1690  0011C6                     l3700:
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;uart_thread.c: 29: else if(msgtype == 32){
  1694  0011C6  0101               	movlb	1	; () banked
  1695  0011C8  0101               	movlb	1	; () banked
  1696  0011CA  51BD               	movf	uart_lthread@msgtype& (0+255),w,b
  1697  0011CC  0A20               	xorlw	32
  1698  0011CE  11BE               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1699  0011D0  A4D8               	btfss	status,2,c
  1700  0011D2  0012               	return	
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;uart_thread.c: 33: msgbuffer[length] = '\0';
  1704  0011D4  0101               	movlb	1	; () banked
  1705  0011D6  0101               	movlb	1	; () banked
  1706  0011D8  51BF               	movf	uart_lthread@length& (0+255),w,b
  1707  0011DA  0101               	movlb	1	; () banked
  1708  0011DC  0101               	movlb	1	; () banked
  1709  0011DE  25C1               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1710  0011E0  6ED9               	movwf	fsr2l,c
  1711  0011E2  0101               	movlb	1	; () banked
  1712  0011E4  0101               	movlb	1	; () banked
  1713  0011E6  51C0               	movf	(uart_lthread@length+1)& (0+255),w,b
  1714  0011E8  0101               	movlb	1	; () banked
  1715  0011EA  0101               	movlb	1	; () banked
  1716  0011EC  21C2               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1717  0011EE  6EDA               	movwf	fsr2h,c
  1718  0011F0  0E00               	movlw	0
  1719  0011F2  6EDF               	movwf	indf2,c
  1720  0011F4  0012               	return	
  1721  0011F6                     __end_of_uart_lthread:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           indf1	equ	0xFE7
  1727                           fsr1h	equ	0xFE2
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _FromMainLow_sendmsg *****************
  1735 ;; Defined at:
  1736 ;;		line 150 in file "src/messages.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  length          1    wreg     unsigned char 
  1739 ;;  msgtype         1   21[BANK1 ] unsigned char 
  1740 ;;  data            2   22[BANK1 ] PTR void 
  1741 ;;		 -> main@uthread_data(10), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  length          1   24[BANK1 ] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      char 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1753 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;Total ram usage:        4 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:   12
  1760 ;; This function calls:
  1761 ;;		_send_msg
  1762 ;; This function is called by:
  1763 ;;		_uart_lthread
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text2
  1768  001CEC                     __ptext2:
  1769                           	opt stack 0
  1770  001CEC                     _FromMainLow_sendmsg:
  1771                           	opt stack 17
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;incstack = 0
  1775                           ;FromMainLow_sendmsg@length stored from wreg
  1776  001CEC  CFE8 F1BA          	movff	wreg,FromMainLow_sendmsg@length
  1777                           
  1778                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1779  001CF0  0101               	movlb	1	; () banked
  1780  001CF2  0E01               	movlw	high _FromMainLow_MQ
  1781  001CF4  0101               	movlb	1	; () banked
  1782  001CF6  0101               	movlb	1	; () banked
  1783  001CF8  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  1784  001CFA  0101               	movlb	1	; () banked
  1785  001CFC  0E36               	movlw	low _FromMainLow_MQ
  1786  001CFE  0101               	movlb	1	; () banked
  1787  001D00  0101               	movlb	1	; () banked
  1788  001D02  6FAC               	movwf	send_msg@qptr& (0+255),b
  1789  001D04  C1BA  F1AE         	movff	FromMainLow_sendmsg@length,send_msg@length
  1790  001D08  C1B7  F1AF         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1791  001D0C  0101               	movlb	1	; () banked
  1792  001D0E  0101               	movlb	1	; () banked
  1793  001D10  C1B9  F1B1         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1794  001D14  0101               	movlb	1	; () banked
  1795  001D16  0101               	movlb	1	; () banked
  1796  001D18  C1B8  F1B0         	movff	FromMainLow_sendmsg@data,send_msg@data
  1797  001D1C  EC82  F007         	call	_send_msg	;wreg free
  1798  001D20  0012               	return	
  1799  001D22                     __end_of_FromMainLow_sendmsg:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           indf1	equ	0xFE7
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           indf2	equ	0xFDF
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _timer1_lthread *****************
  1813 ;; Defined at:
  1814 ;;		line 18 in file "src/timer1_thread.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  tptr            2   30[BANK1 ] PTR struct __timer1_thre
  1817 ;;		 -> main@t1thread_data(12), 
  1818 ;;  msgtype         2   32[BANK1 ] int 
  1819 ;;  length          2   34[BANK1 ] int 
  1820 ;;  msgbuffer       2   36[BANK1 ] PTR unsigned char 
  1821 ;;		 -> main@msgbuffer(11), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  success         1   41[BANK1 ] enum E8143
  1824 ;;  len             1   40[BANK1 ] unsigned char 
  1825 ;;  even            2   42[BANK1 ] int 
  1826 ;;  retval          1    0        char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  2   30[BANK1 ] int 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1836 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:       14 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:   14
  1843 ;; This function calls:
  1844 ;;		_ReadTimer1
  1845 ;;		___lwmod
  1846 ;;		_sendUART
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text3
  1853  000A54                     __ptext3:
  1854                           	opt stack 0
  1855  000A54                     _timer1_lthread:
  1856                           	opt stack 16
  1857                           
  1858                           ;timer1_thread.c: 19: signed char retval;
  1859                           ;timer1_thread.c: 21: int even = 0;
  1860                           
  1861                           ;incstack = 0
  1862  000A54  0E00               	movlw	0
  1863  000A56  0101               	movlb	1	; () banked
  1864  000A58  0101               	movlb	1	; () banked
  1865  000A5A  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1866  000A5C  0E00               	movlw	0
  1867  000A5E  0101               	movlb	1	; () banked
  1868  000A60  6FCC               	movwf	timer1_lthread@even& (0+255),b
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;timer1_thread.c: 23: tptr->msgcount++;
  1872  000A62  C1C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1873  000A66  C1C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1874  000A6A  2ADE               	incf	postinc2,f,c
  1875  000A6C  0E00               	movlw	0
  1876  000A6E  22DD               	addwfc	postdec2,f,c
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;timer1_thread.c: 25: if ((tptr->msgcount % 6) == 5) {
  1880  000A70  C1C0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1881  000A74  C1C1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1882  000A78  0101               	movlb	1	; () banked
  1883  000A7A  CFDE F1A2          	movff	postinc2,___lwmod@dividend
  1884  000A7E  0101               	movlb	1	; () banked
  1885  000A80  CFDD F1A3          	movff	postdec2,___lwmod@dividend+1
  1886  000A84  0E00               	movlw	0
  1887  000A86  0101               	movlb	1	; () banked
  1888  000A88  0101               	movlb	1	; () banked
  1889  000A8A  6FA5               	movwf	(___lwmod@divisor+1)& (0+255),b
  1890  000A8C  0E06               	movlw	6
  1891  000A8E  0101               	movlb	1	; () banked
  1892  000A90  6FA4               	movwf	___lwmod@divisor& (0+255),b
  1893  000A92  EC6D  F00A         	call	___lwmod	;wreg free
  1894  000A96  0101               	movlb	1	; () banked
  1895  000A98  0101               	movlb	1	; () banked
  1896  000A9A  51A2               	movf	?___lwmod& (0+255),w,b
  1897  000A9C  0A05               	xorlw	5
  1898  000A9E  0101               	movlb	1	; () banked
  1899  000AA0  11A3               	iorwf	(?___lwmod+1)& (0+255),w,b
  1900  000AA2  A4D8               	btfss	status,2,c
  1901  000AA4  0012               	return	
  1902                           
  1903                           ; BSR set to: 1
  1904                           ;timer1_thread.c: 26: if(ReadTimer1()%2 == 0) even = 0;
  1905  000AA6  ECA0  F00F         	call	_ReadTimer1	;wreg free
  1906  000AAA  0101               	movlb	1	; () banked
  1907  000AAC  0101               	movlb	1	; () banked
  1908  000AAE  B1A2               	btfsc	?_ReadTimer1& (0+255),0,b
  1909  000AB0  D006               	goto	l3658
  1910                           
  1911                           ; BSR set to: 1
  1912  000AB2  0E00               	movlw	0
  1913  000AB4  0101               	movlb	1	; () banked
  1914  000AB6  0101               	movlb	1	; () banked
  1915  000AB8  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1916  000ABA  0E00               	movlw	0
  1917  000ABC  D005               	goto	L4
  1918  000ABE                     l3658:
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;timer1_thread.c: 27: else even = 1;
  1922  000ABE  0E00               	movlw	0
  1923  000AC0  0101               	movlb	1	; () banked
  1924  000AC2  0101               	movlb	1	; () banked
  1925  000AC4  6FCD               	movwf	(timer1_lthread@even+1)& (0+255),b
  1926  000AC6  0E01               	movlw	1
  1927  000AC8                     L4:
  1928  000AC8  0101               	movlb	1	; () banked
  1929  000ACA  6FCC               	movwf	timer1_lthread@even& (0+255),b
  1930  000ACC  D02D               	goto	l3666
  1931  000ACE                     l3660:
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;timer1_thread.c: 30: tptr->buffer[0] = 0x00;
  1935  000ACE  0101               	movlb	1	; () banked
  1936  000AD0  EE20 F002          	lfsr	2,2
  1937  000AD4  0101               	movlb	1	; () banked
  1938  000AD6  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1939  000AD8  26D9               	addwf	fsr2l,f,c
  1940  000ADA  0101               	movlb	1	; () banked
  1941  000ADC  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1942  000ADE  22DA               	addwfc	fsr2h,f,c
  1943  000AE0  0E00               	movlw	0
  1944  000AE2  6EDF               	movwf	indf2,c
  1945                           
  1946                           ;timer1_thread.c: 31: tptr->buffer[1] = 0x00;
  1947  000AE4  0101               	movlb	1	; () banked
  1948  000AE6  EE20 F003          	lfsr	2,3
  1949  000AEA  0101               	movlb	1	; () banked
  1950  000AEC  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1951  000AEE  26D9               	addwf	fsr2l,f,c
  1952  000AF0  0101               	movlb	1	; () banked
  1953  000AF2  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1954  000AF4  22DA               	addwfc	fsr2h,f,c
  1955  000AF6  0E00               	movlw	0
  1956  000AF8  D015               	goto	L5
  1957  000AFA                     l3662:
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;timer1_thread.c: 34: tptr->buffer[0] = 0xC8;
  1961  000AFA  0101               	movlb	1	; () banked
  1962  000AFC  EE20 F002          	lfsr	2,2
  1963  000B00  0101               	movlb	1	; () banked
  1964  000B02  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1965  000B04  26D9               	addwf	fsr2l,f,c
  1966  000B06  0101               	movlb	1	; () banked
  1967  000B08  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1968  000B0A  22DA               	addwfc	fsr2h,f,c
  1969  000B0C  0EC8               	movlw	200
  1970  000B0E  6EDF               	movwf	indf2,c
  1971                           
  1972                           ;timer1_thread.c: 35: tptr->buffer[1] = 0x4B;
  1973  000B10  0101               	movlb	1	; () banked
  1974  000B12  EE20 F003          	lfsr	2,3
  1975  000B16  0101               	movlb	1	; () banked
  1976  000B18  51C0               	movf	timer1_lthread@tptr& (0+255),w,b
  1977  000B1A  26D9               	addwf	fsr2l,f,c
  1978  000B1C  0101               	movlb	1	; () banked
  1979  000B1E  51C1               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1980  000B20  22DA               	addwfc	fsr2h,f,c
  1981  000B22  0E4B               	movlw	75
  1982  000B24                     L5:
  1983  000B24  6EDF               	movwf	indf2,c
  1984                           
  1985                           ;timer1_thread.c: 36: break;
  1986  000B26  D013               	goto	l3668
  1987  000B28                     l3666:
  1988                           
  1989                           ; BSR set to: 1
  1990  000B28  0101               	movlb	1	; () banked
  1991  000B2A  C1CC  F1C8         	movff	timer1_lthread@even,??_timer1_lthread
  1992  000B2E  0101               	movlb	1	; () banked
  1993  000B30  C1CD  F1C9         	movff	timer1_lthread@even+1,??_timer1_lthread+1
  1994                           
  1995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1996                           ; Switch size 1, requested type "space"
  1997                           ; Number of cases is 1, Range of values is 0 to 0
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte            4     3 (average)
  2001                           ;	Chosen strategy is simple_byte
  2002  000B34  0101               	movlb	1	; () banked
  2003  000B36  51C9               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2004  000B38  0A00               	xorlw	0	; case 0
  2005  000B3A  A4D8               	btfss	status,2,c
  2006  000B3C  D008               	goto	l3668
  2007                           
  2008                           ; BSR set to: 1
  2009                           ; Switch size 1, requested type "space"
  2010                           ; Number of cases is 2, Range of values is 0 to 1
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            7     4 (average)
  2014                           ;	Chosen strategy is simple_byte
  2015  000B3E  0101               	movlb	1	; () banked
  2016  000B40  51C8               	movf	??_timer1_lthread& (0+255),w,b
  2017  000B42  0A00               	xorlw	0	; case 0
  2018  000B44  B4D8               	btfsc	status,2,c
  2019  000B46  D7C3               	goto	l3660
  2020  000B48  0A01               	xorlw	1	; case 1
  2021  000B4A  B4D8               	btfsc	status,2,c
  2022  000B4C  D7D6               	goto	l3662
  2023  000B4E                     l3668:
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;timer1_thread.c: 38: unsigned char len = 2;
  2027  000B4E  0101               	movlb	1	; () banked
  2028  000B50  6FC8               	movwf	??_timer1_lthread& (0+255),b
  2029  000B52  0E02               	movlw	2
  2030  000B54  0101               	movlb	1	; () banked
  2031  000B56  0101               	movlb	1	; () banked
  2032  000B58  6FCA               	movwf	timer1_lthread@len& (0+255),b
  2033  000B5A  0101               	movlb	1	; () banked
  2034  000B5C  51C8               	movf	??_timer1_lthread& (0+255),w,b
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;timer1_thread.c: 39: BOOL success = sendUART(len, tptr->buffer);
  2038  000B5E  0E02               	movlw	2
  2039  000B60  0101               	movlb	1	; () banked
  2040  000B62  0101               	movlb	1	; () banked
  2041  000B64  25C0               	addwf	timer1_lthread@tptr& (0+255),w,b
  2042  000B66  0101               	movlb	1	; () banked
  2043  000B68  0101               	movlb	1	; () banked
  2044  000B6A  6FBB               	movwf	sendUART@data& (0+255),b
  2045  000B6C  0E00               	movlw	0
  2046  000B6E  0101               	movlb	1	; () banked
  2047  000B70  0101               	movlb	1	; () banked
  2048  000B72  21C1               	addwfc	(timer1_lthread@tptr+1)& (0+255),w,b
  2049  000B74  0101               	movlb	1	; () banked
  2050  000B76  6FBC               	movwf	(sendUART@data+1)& (0+255),b
  2051  000B78  0101               	movlb	1	; () banked
  2052  000B7A  0101               	movlb	1	; () banked
  2053  000B7C  51CA               	movf	timer1_lthread@len& (0+255),w,b
  2054  000B7E  EC70  F00D         	call	_sendUART
  2055  000B82  0101               	movlb	1	; () banked
  2056  000B84  0101               	movlb	1	; () banked
  2057  000B86  6FCB               	movwf	timer1_lthread@success& (0+255),b
  2058  000B88  0012               	return	
  2059  000B8A                     __end_of_timer1_lthread:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           indf1	equ	0xFE7
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _sendUART *****************
  2075 ;; Defined at:
  2076 ;;		line 80 in file "src/my_uart.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  length          1    wreg     unsigned char 
  2079 ;;  data            2   25[BANK1 ] PTR unsigned char 
  2080 ;;		 -> main@t1thread_data(12), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  length          1   28[BANK1 ] unsigned char 
  2083 ;;  retval          1   29[BANK1 ] char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      enum E8143
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2093 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;Total ram usage:        5 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   13
  2100 ;; This function calls:
  2101 ;;		_ToMainLow_sendmsg
  2102 ;; This function is called by:
  2103 ;;		_timer1_lthread
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text4
  2108  001AE0                     __ptext4:
  2109                           	opt stack 0
  2110  001AE0                     _sendUART:
  2111                           	opt stack 16
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;incstack = 0
  2115                           ;sendUART@length stored from wreg
  2116  001AE0  CFE8 F1BE          	movff	wreg,sendUART@length
  2117                           
  2118                           ;my_uart.c: 81: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2119  001AE4  0101               	movlb	1	; () banked
  2120  001AE6  6FBD               	movwf	??_sendUART& (0+255),b
  2121  001AE8  0E1F               	movlw	31
  2122  001AEA  0101               	movlb	1	; () banked
  2123  001AEC  0101               	movlb	1	; () banked
  2124  001AEE  6FB7               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2125  001AF0  0101               	movlb	1	; () banked
  2126  001AF2  51BD               	movf	??_sendUART& (0+255),w,b
  2127  001AF4  0101               	movlb	1	; () banked
  2128  001AF6  0101               	movlb	1	; () banked
  2129  001AF8  C1BC  F1B9         	movff	sendUART@data+1,ToMainLow_sendmsg@data+1
  2130  001AFC  0101               	movlb	1	; () banked
  2131  001AFE  0101               	movlb	1	; () banked
  2132  001B00  C1BB  F1B8         	movff	sendUART@data,ToMainLow_sendmsg@data
  2133  001B04  0101               	movlb	1	; () banked
  2134  001B06  0101               	movlb	1	; () banked
  2135  001B08  51BE               	movf	sendUART@length& (0+255),w,b
  2136  001B0A  EC91  F00E         	call	_ToMainLow_sendmsg
  2137  001B0E  0101               	movlb	1	; () banked
  2138  001B10  0101               	movlb	1	; () banked
  2139  001B12  6FBF               	movwf	sendUART@retval& (0+255),b
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;my_uart.c: 82: if (retval < 0) {
  2143  001B14  0101               	movlb	1	; () banked
  2144  001B16  0101               	movlb	1	; () banked
  2145  001B18  AFBF               	btfss	sendUART@retval& (0+255),7,b
  2146  001B1A  D002               	goto	l3850
  2147                           
  2148                           ; BSR set to: 1
  2149                           ;my_uart.c: 84: return false;
  2150  001B1C  0E00               	movlw	0
  2151  001B1E  0012               	return	
  2152  001B20                     l3850:
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;my_uart.c: 85: }
  2156                           ;my_uart.c: 86: return true;
  2157  001B20  0E01               	movlw	1
  2158  001B22  0012               	return	
  2159  001B24                     __end_of_sendUART:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           indf1	equ	0xFE7
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           indf2	equ	0xFDF
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _ToMainLow_sendmsg *****************
  2175 ;; Defined at:
  2176 ;;		line 103 in file "src/messages.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  length          1    wreg     unsigned char 
  2179 ;;  msgtype         1   21[BANK1 ] unsigned char 
  2180 ;;  data            2   22[BANK1 ] PTR void 
  2181 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  length          1   24[BANK1 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      char 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2193 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;Total ram usage:        4 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:   12
  2200 ;; This function calls:
  2201 ;;		_send_msg
  2202 ;; This function is called by:
  2203 ;;		_sendUART
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text5
  2208  001D22                     __ptext5:
  2209                           	opt stack 0
  2210  001D22                     _ToMainLow_sendmsg:
  2211                           	opt stack 16
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;incstack = 0
  2215                           ;ToMainLow_sendmsg@length stored from wreg
  2216  001D22  CFE8 F1BA          	movff	wreg,ToMainLow_sendmsg@length
  2217                           
  2218                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2219  001D26  0100               	movlb	0	; () banked
  2220  001D28  0E00               	movlw	high _ToMainLow_MQ
  2221  001D2A  0101               	movlb	1	; () banked
  2222  001D2C  0101               	movlb	1	; () banked
  2223  001D2E  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  2224  001D30  0100               	movlb	0	; () banked
  2225  001D32  0E61               	movlw	low _ToMainLow_MQ
  2226  001D34  0101               	movlb	1	; () banked
  2227  001D36  0101               	movlb	1	; () banked
  2228  001D38  6FAC               	movwf	send_msg@qptr& (0+255),b
  2229  001D3A  C1BA  F1AE         	movff	ToMainLow_sendmsg@length,send_msg@length
  2230  001D3E  C1B7  F1AF         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2231  001D42  0101               	movlb	1	; () banked
  2232  001D44  0101               	movlb	1	; () banked
  2233  001D46  C1B9  F1B1         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2234  001D4A  0101               	movlb	1	; () banked
  2235  001D4C  0101               	movlb	1	; () banked
  2236  001D4E  C1B8  F1B0         	movff	ToMainLow_sendmsg@data,send_msg@data
  2237  001D52  EC82  F007         	call	_send_msg	;wreg free
  2238  001D56  0012               	return	
  2239  001D58                     __end_of_ToMainLow_sendmsg:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           indf1	equ	0xFE7
  2245                           fsr1h	equ	0xFE2
  2246                           fsr1l	equ	0xFE1
  2247                           indf2	equ	0xFDF
  2248                           postinc2	equ	0xFDE
  2249                           postdec2	equ	0xFDD
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _send_msg *****************
  2255 ;; Defined at:
  2256 ;;		line 24 in file "src/messages.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2259 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2260 ;;  length          1   12[BANK1 ] unsigned char 
  2261 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2262 ;;  data            2   14[BANK1 ] PTR void 
  2263 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  2264 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  qmsg            2   19[BANK1 ] PTR struct __msg
  2267 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2268 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2269 ;;  tlength         2   16[BANK1 ] unsigned int 
  2270 ;;  slot            1   18[BANK1 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      char 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2280 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Totals:         0       1      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;Total ram usage:       12 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:   11
  2287 ;; This function calls:
  2288 ;;		_memcpy
  2289 ;; This function is called by:
  2290 ;;		_ToMainLow_sendmsg
  2291 ;;		_FromMainLow_sendmsg
  2292 ;;		_FromMainHigh_sendmsg
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text6
  2297  000F04                     __ptext6:
  2298                           	opt stack 0
  2299  000F04                     _send_msg:
  2300                           	opt stack 17
  2301                           
  2302                           ;messages.c: 25: unsigned char slot;
  2303                           ;messages.c: 27: msg *qmsg;
  2304                           ;messages.c: 28: size_t tlength = length;
  2305                           
  2306                           ;incstack = 0
  2307  000F04  0101               	movlb	1	; () banked
  2308  000F06  0101               	movlb	1	; () banked
  2309  000F08  C1AE  F1B2         	movff	send_msg@length,send_msg@tlength
  2310  000F0C  0101               	movlb	1	; () banked
  2311  000F0E  0101               	movlb	1	; () banked
  2312  000F10  6BB3               	clrf	(send_msg@tlength+1)& (0+255),b
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2316  000F12  0101               	movlb	1	; () banked
  2317  000F14  EE20 F034          	lfsr	2,52
  2318  000F18  0101               	movlb	1	; () banked
  2319  000F1A  51AC               	movf	send_msg@qptr& (0+255),w,b
  2320  000F1C  26D9               	addwf	fsr2l,f,c
  2321  000F1E  0101               	movlb	1	; () banked
  2322  000F20  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2323  000F22  22DA               	addwfc	fsr2h,f,c
  2324  000F24  50DF               	movf	indf2,w,c
  2325  000F26  0101               	movlb	1	; () banked
  2326  000F28  0101               	movlb	1	; () banked
  2327  000F2A  6FB4               	movwf	send_msg@slot& (0+255),b
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2331  000F2C  0101               	movlb	1	; () banked
  2332  000F2E  0101               	movlb	1	; () banked
  2333  000F30  51B4               	movf	send_msg@slot& (0+255),w,b
  2334  000F32  0D0D               	mullw	13
  2335  000F34  50F3               	movf	prodl,w,c
  2336  000F36  0101               	movlb	1	; () banked
  2337  000F38  0101               	movlb	1	; () banked
  2338  000F3A  25AC               	addwf	send_msg@qptr& (0+255),w,b
  2339  000F3C  0101               	movlb	1	; () banked
  2340  000F3E  0101               	movlb	1	; () banked
  2341  000F40  6FB5               	movwf	send_msg@qmsg& (0+255),b
  2342  000F42  50F4               	movf	prodh,w,c
  2343  000F44  0101               	movlb	1	; () banked
  2344  000F46  0101               	movlb	1	; () banked
  2345  000F48  21AD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2346  000F4A  0101               	movlb	1	; () banked
  2347  000F4C  6FB6               	movwf	(send_msg@qmsg+1)& (0+255),b
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;messages.c: 41: if (qmsg->full != 0) {
  2351  000F4E  C1B5  FFD9         	movff	send_msg@qmsg,fsr2l
  2352  000F52  C1B6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2353  000F56  50DF               	movf	indf2,w,c
  2354  000F58  B4D8               	btfsc	status,2,c
  2355  000F5A  D002               	goto	l3730
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;messages.c: 42: return (-1);
  2359  000F5C  0EFF               	movlw	255
  2360  000F5E  0012               	return	
  2361  000F60                     l3730:
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;messages.c: 43: }
  2365                           ;messages.c: 46: qmsg->length = length;
  2366  000F60  0101               	movlb	1	; () banked
  2367  000F62  EE20 F001          	lfsr	2,1
  2368  000F66  0101               	movlb	1	; () banked
  2369  000F68  51B5               	movf	send_msg@qmsg& (0+255),w,b
  2370  000F6A  26D9               	addwf	fsr2l,f,c
  2371  000F6C  0101               	movlb	1	; () banked
  2372  000F6E  51B6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2373  000F70  22DA               	addwfc	fsr2h,f,c
  2374  000F72  0101               	movlb	1	; () banked
  2375  000F74  C1AE  FFDF         	movff	send_msg@length,indf2
  2376                           
  2377                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2378  000F78  0101               	movlb	1	; () banked
  2379  000F7A  EE20 F002          	lfsr	2,2
  2380  000F7E  0101               	movlb	1	; () banked
  2381  000F80  51B5               	movf	send_msg@qmsg& (0+255),w,b
  2382  000F82  26D9               	addwf	fsr2l,f,c
  2383  000F84  0101               	movlb	1	; () banked
  2384  000F86  51B6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2385  000F88  22DA               	addwfc	fsr2h,f,c
  2386  000F8A  0101               	movlb	1	; () banked
  2387  000F8C  C1AF  FFDF         	movff	send_msg@msgtype,indf2
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2391  000F90  0E03               	movlw	3
  2392  000F92  0101               	movlb	1	; () banked
  2393  000F94  0101               	movlb	1	; () banked
  2394  000F96  25B5               	addwf	send_msg@qmsg& (0+255),w,b
  2395  000F98  0101               	movlb	1	; () banked
  2396  000F9A  0101               	movlb	1	; () banked
  2397  000F9C  6FA2               	movwf	memcpy@d1& (0+255),b
  2398  000F9E  0E00               	movlw	0
  2399  000FA0  0101               	movlb	1	; () banked
  2400  000FA2  0101               	movlb	1	; () banked
  2401  000FA4  21B6               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2402  000FA6  0101               	movlb	1	; () banked
  2403  000FA8  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  2404  000FAA  0101               	movlb	1	; () banked
  2405  000FAC  0101               	movlb	1	; () banked
  2406  000FAE  C1B1  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  2407  000FB2  0101               	movlb	1	; () banked
  2408  000FB4  0101               	movlb	1	; () banked
  2409  000FB6  C1B0  F1A4         	movff	send_msg@data,memcpy@s1
  2410  000FBA  C1B2  F1A6         	movff	send_msg@tlength,memcpy@n
  2411  000FBE  C1B3  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  2412  000FC2  EC9F  F00C         	call	_memcpy	;wreg free
  2413                           
  2414                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2415  000FC6  0101               	movlb	1	; () banked
  2416  000FC8  EE20 F034          	lfsr	2,52
  2417  000FCC  0101               	movlb	1	; () banked
  2418  000FCE  51AC               	movf	send_msg@qptr& (0+255),w,b
  2419  000FD0  26D9               	addwf	fsr2l,f,c
  2420  000FD2  0101               	movlb	1	; () banked
  2421  000FD4  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2422  000FD6  22DA               	addwfc	fsr2h,f,c
  2423  000FD8  0101               	movlb	1	; () banked
  2424  000FDA  EE10 F034          	lfsr	1,52
  2425  000FDE  0101               	movlb	1	; () banked
  2426  000FE0  51AC               	movf	send_msg@qptr& (0+255),w,b
  2427  000FE2  26E1               	addwf	fsr1l,f,c
  2428  000FE4  0101               	movlb	1	; () banked
  2429  000FE6  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2430  000FE8  22E2               	addwfc	fsr1h,f,c
  2431  000FEA  50E7               	movf	indf1,w,c
  2432  000FEC  0100               	movlb	0	; () banked
  2433  000FEE  6FCA               	movwf	??_send_msg& (0+255),b
  2434  000FF0  0100               	movlb	0	; () banked
  2435  000FF2  29CA               	incf	??_send_msg& (0+255),w,b
  2436  000FF4  0B03               	andlw	3
  2437  000FF6  6EDF               	movwf	indf2,c
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;messages.c: 59: qmsg->full = 1;
  2441  000FF8  C1B5  FFD9         	movff	send_msg@qmsg,fsr2l
  2442  000FFC  C1B6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2443  001000  0E01               	movlw	1
  2444  001002  6EDF               	movwf	indf2,c
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;messages.c: 60: return (1);
  2448  001004  0E01               	movlw	1
  2449  001006  0012               	return	
  2450  001008                     __end_of_send_msg:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           prodh	equ	0xFF4
  2454                           prodl	equ	0xFF3
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           indf1	equ	0xFE7
  2458                           fsr1h	equ	0xFE2
  2459                           fsr1l	equ	0xFE1
  2460                           indf2	equ	0xFDF
  2461                           postinc2	equ	0xFDE
  2462                           postdec2	equ	0xFDD
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function ___lwmod *****************
  2468 ;; Defined at:
  2469 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  dividend        2    0[BANK1 ] unsigned int 
  2472 ;;  divisor         2    2[BANK1 ] unsigned int 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  counter         1    4[BANK1 ] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    0[BANK1 ] unsigned int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2484 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;Total ram usage:        6 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:   10
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_timer1_lthread
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text7
  2499  0014DA                     __ptext7:
  2500                           	opt stack 0
  2501  0014DA                     ___lwmod:
  2502                           	opt stack 19
  2503                           
  2504                           ;incstack = 0
  2505  0014DA  0101               	movlb	1	; () banked
  2506  0014DC  0101               	movlb	1	; () banked
  2507  0014DE  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2508  0014E0  11A4               	iorwf	___lwmod@divisor& (0+255),w,b
  2509  0014E2  B4D8               	btfsc	status,2,c
  2510  0014E4  D03A               	goto	l1044
  2511                           
  2512                           ; BSR set to: 1
  2513  0014E6  0100               	movlb	0	; () banked
  2514  0014E8  6FCA               	movwf	??___lwmod& (0+255),b
  2515  0014EA  0E01               	movlw	1
  2516  0014EC  0101               	movlb	1	; () banked
  2517  0014EE  0101               	movlb	1	; () banked
  2518  0014F0  6FA6               	movwf	___lwmod@counter& (0+255),b
  2519  0014F2  0100               	movlb	0	; () banked
  2520  0014F4  51CA               	movf	??___lwmod& (0+255),w,b
  2521  0014F6  D009               	goto	l3862
  2522  0014F8                     l3860:
  2523  0014F8  0101               	movlb	1	; () banked
  2524  0014FA  0101               	movlb	1	; () banked
  2525  0014FC  0101               	movlb	1	; () banked
  2526  0014FE  90D8               	bcf	status,0,c
  2527  001500  37A4               	rlcf	___lwmod@divisor& (0+255),f,b
  2528  001502  37A5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2529  001504  0101               	movlb	1	; () banked
  2530  001506  0101               	movlb	1	; () banked
  2531  001508  2BA6               	incf	___lwmod@counter& (0+255),f,b
  2532  00150A                     l3862:
  2533  00150A  0101               	movlb	1	; () banked
  2534  00150C  0101               	movlb	1	; () banked
  2535  00150E  AFA5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2536  001510  D7F3               	goto	l3860
  2537  001512                     l3864:
  2538                           
  2539                           ; BSR set to: 1
  2540  001512  0101               	movlb	1	; () banked
  2541  001514  0101               	movlb	1	; () banked
  2542  001516  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2543  001518  0101               	movlb	1	; () banked
  2544  00151A  0101               	movlb	1	; () banked
  2545  00151C  5DA2               	subwf	___lwmod@dividend& (0+255),w,b
  2546  00151E  0101               	movlb	1	; () banked
  2547  001520  0101               	movlb	1	; () banked
  2548  001522  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2549  001524  0101               	movlb	1	; () banked
  2550  001526  0101               	movlb	1	; () banked
  2551  001528  59A3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2552  00152A  A0D8               	btfss	status,0,c
  2553  00152C  D00C               	goto	l3868
  2554                           
  2555                           ; BSR set to: 1
  2556  00152E  0101               	movlb	1	; () banked
  2557  001530  0101               	movlb	1	; () banked
  2558  001532  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2559  001534  0101               	movlb	1	; () banked
  2560  001536  0101               	movlb	1	; () banked
  2561  001538  5FA2               	subwf	___lwmod@dividend& (0+255),f,b
  2562  00153A  0101               	movlb	1	; () banked
  2563  00153C  0101               	movlb	1	; () banked
  2564  00153E  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2565  001540  0101               	movlb	1	; () banked
  2566  001542  0101               	movlb	1	; () banked
  2567  001544  5BA3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2568  001546                     l3868:
  2569                           
  2570                           ; BSR set to: 1
  2571  001546  0101               	movlb	1	; () banked
  2572  001548  0101               	movlb	1	; () banked
  2573  00154A  0101               	movlb	1	; () banked
  2574  00154C  90D8               	bcf	status,0,c
  2575  00154E  33A5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2576  001550  33A4               	rrcf	___lwmod@divisor& (0+255),f,b
  2577                           
  2578                           ; BSR set to: 1
  2579  001552  0101               	movlb	1	; () banked
  2580  001554  0101               	movlb	1	; () banked
  2581  001556  2FA6               	decfsz	___lwmod@counter& (0+255),f,b
  2582  001558  D7DC               	goto	l3864
  2583  00155A                     l1044:
  2584                           
  2585                           ; BSR set to: 1
  2586  00155A  C1A2  F1A2         	movff	___lwmod@dividend,?___lwmod
  2587  00155E  C1A3  F1A3         	movff	___lwmod@dividend+1,?___lwmod+1
  2588                           
  2589                           ; BSR set to: 1
  2590  001562  0012               	return	
  2591  001564                     __end_of___lwmod:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           prodh	equ	0xFF4
  2595                           prodl	equ	0xFF3
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf1	equ	0xFE7
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           indf2	equ	0xFDF
  2602                           postinc2	equ	0xFDE
  2603                           postdec2	equ	0xFDD
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _ReadTimer1 *****************
  2609 ;; Defined at:
  2610 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  timer           2    2[BANK1 ] struct Timers
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    0[BANK1 ] unsigned int 
  2617 ;; Registers used:
  2618 ;;		None
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2624 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;Total ram usage:        4 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:   10
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_timer1_lthread
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text8
  2639  001F40                     __ptext8:
  2640                           	opt stack 0
  2641  001F40                     _ReadTimer1:
  2642                           	opt stack 19
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;incstack = 0
  2646  001F40  CFCE F1A4          	movff	4046,ReadTimer1@timer	;volatile
  2647  001F44  CFCF F1A5          	movff	4047,ReadTimer1@timer+1	;volatile
  2648  001F48  C1A4  F1A2         	movff	ReadTimer1@timer,?_ReadTimer1
  2649  001F4C  C1A5  F1A3         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2650  001F50  0012               	return	
  2651  001F52                     __end_of_ReadTimer1:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           indf1	equ	0xFE7
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           postdec2	equ	0xFDD
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function _timer0_lthread *****************
  2669 ;; Defined at:
  2670 ;;		line 9 in file "src/timer0_thread.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2673 ;;		 -> main@t0thread_data(2), 
  2674 ;;  msgtype         2    2[BANK1 ] int 
  2675 ;;  length          2    4[BANK1 ] int 
  2676 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2677 ;;		 -> main@msgbuffer(11), 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2680 ;;		 -> main@msgbuffer(11), 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    0[BANK1 ] int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2690 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;Total ram usage:       10 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:   10
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text9
  2705  001F52                     __ptext9:
  2706                           	opt stack 0
  2707  001F52                     _timer0_lthread:
  2708                           	opt stack 20
  2709                           
  2710                           ;timer0_thread.c: 10: unsigned int *msgval;
  2711                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2712                           
  2713                           ;incstack = 0
  2714  001F52  0101               	movlb	1	; () banked
  2715  001F54  0101               	movlb	1	; () banked
  2716  001F56  C1A9  F1AB         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2717  001F5A  0101               	movlb	1	; () banked
  2718  001F5C  0101               	movlb	1	; () banked
  2719  001F5E  C1A8  F1AA         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2720                           
  2721                           ; BSR set to: 1
  2722  001F62  0012               	return	
  2723  001F64                     __end_of_timer0_lthread:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           indf1	equ	0xFE7
  2731                           fsr1h	equ	0xFE2
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           postdec2	equ	0xFDD
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _start_i2c_slave_reply *****************
  2741 ;; Defined at:
  2742 ;;		line 53 in file "src/my_i2c.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  length          1    wreg     unsigned char 
  2745 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2746 ;;		 -> main@msgbuffer(11), 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  length          1   51[BANK0 ] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2758 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;Total ram usage:        5 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:   10
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text10
  2773  000DF6                     __ptext10:
  2774                           	opt stack 0
  2775  000DF6                     _start_i2c_slave_reply:
  2776                           	opt stack 20
  2777                           
  2778                           ; BSR set to: 1
  2779                           ;incstack = 0
  2780                           ;start_i2c_slave_reply@length stored from wreg
  2781  000DF6  CFE8 F0CA          	movff	wreg,start_i2c_slave_reply@length
  2782                           
  2783                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2784  000DFA  0100               	movlb	0	; () banked
  2785  000DFC  EE20 F019          	lfsr	2,25
  2786  000E00  0100               	movlb	0	; () banked
  2787  000E02  51CB               	movf	_ic_ptr& (0+255),w,b
  2788  000E04  26D9               	addwf	fsr2l,f,c
  2789  000E06  0100               	movlb	0	; () banked
  2790  000E08  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2791  000E0A  22DA               	addwfc	fsr2h,f,c
  2792  000E0C  0E00               	movlw	0
  2793  000E0E  6EDF               	movwf	indf2,c
  2794  000E10  D042               	goto	l3638
  2795  000E12                     l3634:
  2796                           
  2797                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2798  000E12  0100               	movlb	0	; () banked
  2799  000E14  EE20 F019          	lfsr	2,25
  2800  000E18  0100               	movlb	0	; () banked
  2801  000E1A  51CB               	movf	_ic_ptr& (0+255),w,b
  2802  000E1C  26D9               	addwf	fsr2l,f,c
  2803  000E1E  0100               	movlb	0	; () banked
  2804  000E20  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2805  000E22  22DA               	addwfc	fsr2h,f,c
  2806  000E24  50DF               	movf	indf2,w,c
  2807  000E26  0101               	movlb	1	; () banked
  2808  000E28  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2809  000E2A  0101               	movlb	1	; () banked
  2810  000E2C  51A4               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2811  000E2E  0D01               	mullw	1
  2812  000E30  50F3               	movf	prodl,w,c
  2813  000E32  0101               	movlb	1	; () banked
  2814  000E34  0101               	movlb	1	; () banked
  2815  000E36  25A2               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2816  000E38  6ED9               	movwf	fsr2l,c
  2817  000E3A  50F4               	movf	prodh,w,c
  2818  000E3C  0101               	movlb	1	; () banked
  2819  000E3E  0101               	movlb	1	; () banked
  2820  000E40  21A3               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2821  000E42  6EDA               	movwf	fsr2h,c
  2822  000E44  0100               	movlb	0	; () banked
  2823  000E46  EE10 F019          	lfsr	1,25
  2824  000E4A  0100               	movlb	0	; () banked
  2825  000E4C  51CB               	movf	_ic_ptr& (0+255),w,b
  2826  000E4E  26E1               	addwf	fsr1l,f,c
  2827  000E50  0100               	movlb	0	; () banked
  2828  000E52  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2829  000E54  22E2               	addwfc	fsr1h,f,c
  2830  000E56  50E7               	movf	indf1,w,c
  2831  000E58  0101               	movlb	1	; () banked
  2832  000E5A  6FA5               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2833  000E5C  0101               	movlb	1	; () banked
  2834  000E5E  51A5               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2835  000E60  0D01               	mullw	1
  2836  000E62  0E0F               	movlw	15
  2837  000E64  26F3               	addwf	prodl,f,c
  2838  000E66  0E00               	movlw	0
  2839  000E68  22F4               	addwfc	prodh,f,c
  2840  000E6A  50F3               	movf	prodl,w,c
  2841  000E6C  0100               	movlb	0	; () banked
  2842  000E6E  0100               	movlb	0	; () banked
  2843  000E70  25CB               	addwf	_ic_ptr& (0+255),w,b
  2844  000E72  6EE1               	movwf	fsr1l,c
  2845  000E74  50F4               	movf	prodh,w,c
  2846  000E76  0100               	movlb	0	; () banked
  2847  000E78  0100               	movlb	0	; () banked
  2848  000E7A  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2849  000E7C  6EE2               	movwf	fsr1h,c
  2850  000E7E  CFDF FFE7          	movff	indf2,indf1
  2851                           
  2852                           ; BSR set to: 0
  2853  000E82  0100               	movlb	0	; () banked
  2854  000E84  EE20 F019          	lfsr	2,25
  2855  000E88  0100               	movlb	0	; () banked
  2856  000E8A  51CB               	movf	_ic_ptr& (0+255),w,b
  2857  000E8C  26D9               	addwf	fsr2l,f,c
  2858  000E8E  0100               	movlb	0	; () banked
  2859  000E90  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2860  000E92  22DA               	addwfc	fsr2h,f,c
  2861  000E94  2ADF               	incf	indf2,f,c
  2862  000E96                     l3638:
  2863                           
  2864                           ; BSR set to: 0
  2865  000E96  0100               	movlb	0	; () banked
  2866  000E98  EE20 F019          	lfsr	2,25
  2867  000E9C  0100               	movlb	0	; () banked
  2868  000E9E  51CB               	movf	_ic_ptr& (0+255),w,b
  2869  000EA0  26D9               	addwf	fsr2l,f,c
  2870  000EA2  0100               	movlb	0	; () banked
  2871  000EA4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2872  000EA6  22DA               	addwfc	fsr2h,f,c
  2873  000EA8  50DF               	movf	indf2,w,c
  2874  000EAA  0101               	movlb	1	; () banked
  2875  000EAC  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2876  000EAE  0100               	movlb	0	; () banked
  2877  000EB0  0100               	movlb	0	; () banked
  2878  000EB2  51CA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2879  000EB4  0101               	movlb	1	; () banked
  2880  000EB6  5DA4               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2881  000EB8  A0D8               	btfss	status,0,c
  2882  000EBA  D7AB               	goto	l3634
  2883                           
  2884                           ; BSR set to: 1
  2885                           ;my_i2c.c: 57: }
  2886                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2887                           
  2888                           ; BSR set to: 1
  2889  000EBC  0100               	movlb	0	; () banked
  2890  000EBE  EE20 F019          	lfsr	2,25
  2891  000EC2  0100               	movlb	0	; () banked
  2892  000EC4  51CB               	movf	_ic_ptr& (0+255),w,b
  2893  000EC6  26D9               	addwf	fsr2l,f,c
  2894  000EC8  0100               	movlb	0	; () banked
  2895  000ECA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2896  000ECC  22DA               	addwfc	fsr2h,f,c
  2897  000ECE  0100               	movlb	0	; () banked
  2898  000ED0  C0CA  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2899                           
  2900                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2901  000ED4  0100               	movlb	0	; () banked
  2902  000ED6  EE20 F01A          	lfsr	2,26
  2903  000EDA  0100               	movlb	0	; () banked
  2904  000EDC  51CB               	movf	_ic_ptr& (0+255),w,b
  2905  000EDE  26D9               	addwf	fsr2l,f,c
  2906  000EE0  0100               	movlb	0	; () banked
  2907  000EE2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2908  000EE4  22DA               	addwfc	fsr2h,f,c
  2909  000EE6  0E01               	movlw	1
  2910  000EE8  6EDF               	movwf	indf2,c
  2911                           
  2912                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2913  000EEA  0100               	movlb	0	; () banked
  2914  000EEC  EE20 F00F          	lfsr	2,15
  2915  000EF0  0100               	movlb	0	; () banked
  2916  000EF2  51CB               	movf	_ic_ptr& (0+255),w,b
  2917  000EF4  26D9               	addwf	fsr2l,f,c
  2918  000EF6  0100               	movlb	0	; () banked
  2919  000EF8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  2920  000EFA  22DA               	addwfc	fsr2h,f,c
  2921  000EFC  50DF               	movf	indf2,w,c
  2922  000EFE  6EC9               	movwf	4041,c	;volatile
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2926  000F00  88C6               	bsf	4038,4,c	;volatile
  2927                           
  2928                           ; BSR set to: 0
  2929  000F02  0012               	return	
  2930  000F04                     __end_of_start_i2c_slave_reply:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           prodh	equ	0xFF4
  2934                           prodl	equ	0xFF3
  2935                           postinc0	equ	0xFEE
  2936                           wreg	equ	0xFE8
  2937                           indf1	equ	0xFE7
  2938                           fsr1h	equ	0xFE2
  2939                           fsr1l	equ	0xFE1
  2940                           indf2	equ	0xFDF
  2941                           postinc2	equ	0xFDE
  2942                           postdec2	equ	0xFDD
  2943                           fsr2h	equ	0xFDA
  2944                           fsr2l	equ	0xFD9
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _init_uart_recv *****************
  2948 ;; Defined at:
  2949 ;;		line 75 in file "src/my_uart.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2952 ;;		 -> main@uc(5), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2967 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:   10
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text11
  2979  001EEE                     __ptext11:
  2980                           	opt stack 0
  2981  001EEE                     _init_uart_recv:
  2982                           	opt stack 20
  2983                           
  2984                           ;my_uart.c: 76: uc_ptr = uc;
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;incstack = 0
  2988  001EEE  0101               	movlb	1	; () banked
  2989  001EF0  C1A3  F036         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2990  001EF4  0101               	movlb	1	; () banked
  2991  001EF6  C1A2  F035         	movff	init_uart_recv@uc,_uc_ptr
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;my_uart.c: 77: uc_ptr->buflen = 0;
  2995  001EFA  EE20 F004          	lfsr	2,4
  2996  001EFE  5035               	movf	_uc_ptr,w,c
  2997  001F00  26D9               	addwf	fsr2l,f,c
  2998  001F02  5036               	movf	_uc_ptr+1,w,c
  2999  001F04  22DA               	addwfc	fsr2h,f,c
  3000  001F06  0E00               	movlw	0
  3001  001F08  6EDF               	movwf	indf2,c
  3002                           
  3003                           ; BSR set to: 1
  3004  001F0A  0012               	return	
  3005  001F0C                     __end_of_init_uart_recv:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           postinc0	equ	0xFEE
  3011                           wreg	equ	0xFE8
  3012                           indf1	equ	0xFE7
  3013                           fsr1h	equ	0xFE2
  3014                           fsr1l	equ	0xFE1
  3015                           indf2	equ	0xFDF
  3016                           postinc2	equ	0xFDE
  3017                           postdec2	equ	0xFDD
  3018                           fsr2h	equ	0xFDA
  3019                           fsr2l	equ	0xFD9
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _init_uart_lthread *****************
  3023 ;; Defined at:
  3024 ;;		line 7 in file "src/uart_thread.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  3027 ;;		 -> main@uthread_data(10), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		None
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3039 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;Total ram usage:        2 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:   10
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text12
  3054  001FCC                     __ptext12:
  3055                           	opt stack 0
  3056  001FCC                     _init_uart_lthread:
  3057                           	opt stack 20
  3058                           
  3059                           ; BSR set to: 1
  3060                           ;incstack = 0
  3061  001FCC  0012               	return	
  3062  001FCE                     __end_of_init_uart_lthread:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           prodh	equ	0xFF4
  3066                           prodl	equ	0xFF3
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           indf1	equ	0xFE7
  3070                           fsr1h	equ	0xFE2
  3071                           fsr1l	equ	0xFE1
  3072                           indf2	equ	0xFDF
  3073                           postinc2	equ	0xFDE
  3074                           postdec2	equ	0xFDD
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079 ;; *************** function _init_timer1_lthread *****************
  3080 ;; Defined at:
  3081 ;;		line 7 in file "src/timer1_thread.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  3084 ;;		 -> main@t1thread_data(12), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;		None               void
  3089 ;; Registers used:
  3090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3096 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;Total ram usage:        2 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:   10
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text13
  3111  001CAE                     __ptext13:
  3112                           	opt stack 0
  3113  001CAE                     _init_timer1_lthread:
  3114                           	opt stack 20
  3115                           
  3116                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  3117                           
  3118                           ;incstack = 0
  3119  001CAE  C1A2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3120  001CB2  C1A3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3121  001CB6  0E00               	movlw	0
  3122  001CB8  6EDE               	movwf	postinc2,c
  3123  001CBA  0E00               	movlw	0
  3124  001CBC  6EDD               	movwf	postdec2,c
  3125                           
  3126                           ;timer1_thread.c: 9: tptr->buffer[0] = 0xC8;
  3127  001CBE  0101               	movlb	1	; () banked
  3128  001CC0  EE20 F002          	lfsr	2,2
  3129  001CC4  0101               	movlb	1	; () banked
  3130  001CC6  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3131  001CC8  26D9               	addwf	fsr2l,f,c
  3132  001CCA  0101               	movlb	1	; () banked
  3133  001CCC  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3134  001CCE  22DA               	addwfc	fsr2h,f,c
  3135  001CD0  0EC8               	movlw	200
  3136  001CD2  6EDF               	movwf	indf2,c
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;timer1_thread.c: 10: tptr->buffer[1] = 0x4B;
  3140  001CD4  0101               	movlb	1	; () banked
  3141  001CD6  EE20 F003          	lfsr	2,3
  3142  001CDA  0101               	movlb	1	; () banked
  3143  001CDC  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3144  001CDE  26D9               	addwf	fsr2l,f,c
  3145  001CE0  0101               	movlb	1	; () banked
  3146  001CE2  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3147  001CE4  22DA               	addwfc	fsr2h,f,c
  3148  001CE6  0E4B               	movlw	75
  3149  001CE8  6EDF               	movwf	indf2,c
  3150                           
  3151                           ; BSR set to: 1
  3152  001CEA  0012               	return	
  3153  001CEC                     __end_of_init_timer1_lthread:
  3154                           	opt stack 0
  3155                           tblptru	equ	0xFF8
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           indf1	equ	0xFE7
  3161                           fsr1h	equ	0xFE2
  3162                           fsr1l	equ	0xFE1
  3163                           indf2	equ	0xFDF
  3164                           postinc2	equ	0xFDE
  3165                           postdec2	equ	0xFDD
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _init_queues *****************
  3171 ;; Defined at:
  3172 ;;		line 194 in file "src/messages.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:   11
  3193 ;; This function calls:
  3194 ;;		_init_queue
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text14
  3201  0017F4                     __ptext14:
  3202                           	opt stack 0
  3203  0017F4                     _init_queues:
  3204                           	opt stack 19
  3205                           
  3206                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;incstack = 0
  3210  0017F4  0101               	movlb	1	; () banked
  3211  0017F6  6FA5               	movwf	??_init_queues& (0+255),b
  3212  0017F8  0E00               	movlw	0
  3213  0017FA  0100               	movlb	0	; () banked
  3214  0017FC  0100               	movlb	0	; () banked
  3215  0017FE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3216  001800  0101               	movlb	1	; () banked
  3217  001802  51A5               	movf	??_init_queues& (0+255),w,b
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3221  001804  0100               	movlb	0	; () banked
  3222  001806  0E00               	movlw	high _ToMainLow_MQ
  3223  001808  0101               	movlb	1	; () banked
  3224  00180A  0101               	movlb	1	; () banked
  3225  00180C  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3226  00180E  0100               	movlb	0	; () banked
  3227  001810  0E61               	movlw	low _ToMainLow_MQ
  3228  001812  0101               	movlb	1	; () banked
  3229  001814  0101               	movlb	1	; () banked
  3230  001816  6FA2               	movwf	init_queue@qptr& (0+255),b
  3231  001818  ECBD  F00B         	call	_init_queue	;wreg free
  3232                           
  3233                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3234  00181C  0101               	movlb	1	; () banked
  3235  00181E  0E01               	movlw	high _ToMainHigh_MQ
  3236  001820  0101               	movlb	1	; () banked
  3237  001822  0101               	movlb	1	; () banked
  3238  001824  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3239  001826  0101               	movlb	1	; () banked
  3240  001828  0E6C               	movlw	low _ToMainHigh_MQ
  3241  00182A  0101               	movlb	1	; () banked
  3242  00182C  0101               	movlb	1	; () banked
  3243  00182E  6FA2               	movwf	init_queue@qptr& (0+255),b
  3244  001830  ECBD  F00B         	call	_init_queue	;wreg free
  3245                           
  3246                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3247  001834  0101               	movlb	1	; () banked
  3248  001836  0E01               	movlw	high _FromMainLow_MQ
  3249  001838  0101               	movlb	1	; () banked
  3250  00183A  0101               	movlb	1	; () banked
  3251  00183C  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3252  00183E  0101               	movlb	1	; () banked
  3253  001840  0E36               	movlw	low _FromMainLow_MQ
  3254  001842  0101               	movlb	1	; () banked
  3255  001844  0101               	movlb	1	; () banked
  3256  001846  6FA2               	movwf	init_queue@qptr& (0+255),b
  3257  001848  ECBD  F00B         	call	_init_queue	;wreg free
  3258                           
  3259                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3260  00184C  0101               	movlb	1	; () banked
  3261  00184E  0E01               	movlw	high _FromMainHigh_MQ
  3262  001850  0101               	movlb	1	; () banked
  3263  001852  0101               	movlb	1	; () banked
  3264  001854  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3265  001856  0101               	movlb	1	; () banked
  3266  001858  0E00               	movlw	low _FromMainHigh_MQ
  3267  00185A  0101               	movlb	1	; () banked
  3268  00185C  0101               	movlb	1	; () banked
  3269  00185E  6FA2               	movwf	init_queue@qptr& (0+255),b
  3270  001860  ECBD  F00B         	call	_init_queue	;wreg free
  3271  001864  0012               	return	
  3272  001866                     __end_of_init_queues:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           indf1	equ	0xFE7
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _init_queue *****************
  3290 ;; Defined at:
  3291 ;;		line 14 in file "src/messages.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3294 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  i               1    2[BANK1 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3306 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;Total ram usage:        4 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   10
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_init_queues
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text15
  3321  00177A                     __ptext15:
  3322                           	opt stack 0
  3323  00177A                     _init_queue:
  3324                           	opt stack 19
  3325                           
  3326                           ;messages.c: 15: unsigned char i;
  3327                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3328                           
  3329                           ;incstack = 0
  3330  00177A  0101               	movlb	1	; () banked
  3331  00177C  EE20 F034          	lfsr	2,52
  3332  001780  0101               	movlb	1	; () banked
  3333  001782  51A2               	movf	init_queue@qptr& (0+255),w,b
  3334  001784  26D9               	addwf	fsr2l,f,c
  3335  001786  0101               	movlb	1	; () banked
  3336  001788  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  3337  00178A  22DA               	addwfc	fsr2h,f,c
  3338  00178C  0E00               	movlw	0
  3339  00178E  6EDF               	movwf	indf2,c
  3340                           
  3341                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3342  001790  0101               	movlb	1	; () banked
  3343  001792  EE20 F035          	lfsr	2,53
  3344  001796  0101               	movlb	1	; () banked
  3345  001798  51A2               	movf	init_queue@qptr& (0+255),w,b
  3346  00179A  26D9               	addwf	fsr2l,f,c
  3347  00179C  0101               	movlb	1	; () banked
  3348  00179E  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  3349  0017A0  22DA               	addwfc	fsr2h,f,c
  3350  0017A2  0E00               	movlw	0
  3351  0017A4  6EDF               	movwf	indf2,c
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3355  0017A6  0100               	movlb	0	; () banked
  3356  0017A8  6FCA               	movwf	??_init_queue& (0+255),b
  3357  0017AA  0E00               	movlw	0
  3358  0017AC  0101               	movlb	1	; () banked
  3359  0017AE  0101               	movlb	1	; () banked
  3360  0017B0  6FA4               	movwf	init_queue@i& (0+255),b
  3361  0017B2  0100               	movlb	0	; () banked
  3362  0017B4  51CA               	movf	??_init_queue& (0+255),w,b
  3363                           
  3364                           ; BSR set to: 0
  3365  0017B6  0E03               	movlw	3
  3366  0017B8  0101               	movlb	1	; () banked
  3367  0017BA  0101               	movlb	1	; () banked
  3368  0017BC  65A4               	cpfsgt	init_queue@i& (0+255),b
  3369  0017BE  D001               	goto	l3712
  3370  0017C0  0012               	return	
  3371  0017C2                     l3712:
  3372                           
  3373                           ; BSR set to: 1
  3374                           ;messages.c: 20: qptr->queue[i].full = 0;
  3375  0017C2  0101               	movlb	1	; () banked
  3376  0017C4  0101               	movlb	1	; () banked
  3377  0017C6  51A4               	movf	init_queue@i& (0+255),w,b
  3378  0017C8  0D0D               	mullw	13
  3379  0017CA  50F3               	movf	prodl,w,c
  3380  0017CC  0101               	movlb	1	; () banked
  3381  0017CE  0101               	movlb	1	; () banked
  3382  0017D0  25A2               	addwf	init_queue@qptr& (0+255),w,b
  3383  0017D2  6ED9               	movwf	fsr2l,c
  3384  0017D4  50F4               	movf	prodh,w,c
  3385  0017D6  0101               	movlb	1	; () banked
  3386  0017D8  0101               	movlb	1	; () banked
  3387  0017DA  21A3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3388  0017DC  6EDA               	movwf	fsr2h,c
  3389  0017DE  0E00               	movlw	0
  3390  0017E0  6EDF               	movwf	indf2,c
  3391                           
  3392                           ; BSR set to: 1
  3393  0017E2  0101               	movlb	1	; () banked
  3394  0017E4  0101               	movlb	1	; () banked
  3395  0017E6  2BA4               	incf	init_queue@i& (0+255),f,b
  3396                           
  3397                           ; BSR set to: 1
  3398  0017E8  0E03               	movlw	3
  3399  0017EA  0101               	movlb	1	; () banked
  3400  0017EC  0101               	movlb	1	; () banked
  3401  0017EE  65A4               	cpfsgt	init_queue@i& (0+255),b
  3402  0017F0  D7E8               	goto	l3712
  3403  0017F2  0012               	return	
  3404  0017F4                     __end_of_init_queue:
  3405                           	opt stack 0
  3406                           tblptru	equ	0xFF8
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           indf1	equ	0xFE7
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           
  3421 ;; *************** function _init_i2c *****************
  3422 ;; Defined at:
  3423 ;;		line 268 in file "src/my_i2c.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3426 ;;		 -> main@ic(28), 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;		None               void
  3431 ;; Registers used:
  3432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3438 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;Total ram usage:        2 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:   10
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text16
  3453  0018D4                     __ptext16:
  3454                           	opt stack 0
  3455  0018D4                     _init_i2c:
  3456                           	opt stack 20
  3457                           
  3458                           ;my_i2c.c: 269: ic_ptr = ic;
  3459                           
  3460                           ; BSR set to: 1
  3461                           ;incstack = 0
  3462  0018D4  0101               	movlb	1	; () banked
  3463  0018D6  0100               	movlb	0	; () banked
  3464  0018D8  C1A3  F0CC         	movff	init_i2c@ic+1,_ic_ptr+1
  3465  0018DC  0101               	movlb	1	; () banked
  3466  0018DE  0100               	movlb	0	; () banked
  3467  0018E0  C1A2  F0CB         	movff	init_i2c@ic,_ic_ptr
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3471  0018E4  0100               	movlb	0	; () banked
  3472  0018E6  EE20 F00A          	lfsr	2,10
  3473  0018EA  0100               	movlb	0	; () banked
  3474  0018EC  51CB               	movf	_ic_ptr& (0+255),w,b
  3475  0018EE  26D9               	addwf	fsr2l,f,c
  3476  0018F0  0100               	movlb	0	; () banked
  3477  0018F2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3478  0018F4  22DA               	addwfc	fsr2h,f,c
  3479  0018F6  0E00               	movlw	0
  3480  0018F8  6EDF               	movwf	indf2,c
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3484  0018FA  0100               	movlb	0	; () banked
  3485  0018FC  EE20 F00B          	lfsr	2,11
  3486  001900  0100               	movlb	0	; () banked
  3487  001902  51CB               	movf	_ic_ptr& (0+255),w,b
  3488  001904  26D9               	addwf	fsr2l,f,c
  3489  001906  0100               	movlb	0	; () banked
  3490  001908  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3491  00190A  22DA               	addwfc	fsr2h,f,c
  3492  00190C  0E00               	movlw	0
  3493  00190E  6EDF               	movwf	indf2,c
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3497  001910  0100               	movlb	0	; () banked
  3498  001912  EE20 F00C          	lfsr	2,12
  3499  001916  0100               	movlb	0	; () banked
  3500  001918  51CB               	movf	_ic_ptr& (0+255),w,b
  3501  00191A  26D9               	addwf	fsr2l,f,c
  3502  00191C  0100               	movlb	0	; () banked
  3503  00191E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3504  001920  22DA               	addwfc	fsr2h,f,c
  3505  001922  0E05               	movlw	5
  3506  001924  6EDF               	movwf	indf2,c
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3510  001926  0100               	movlb	0	; () banked
  3511  001928  EE20 F00E          	lfsr	2,14
  3512  00192C  0100               	movlb	0	; () banked
  3513  00192E  51CB               	movf	_ic_ptr& (0+255),w,b
  3514  001930  26D9               	addwf	fsr2l,f,c
  3515  001932  0100               	movlb	0	; () banked
  3516  001934  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  3517  001936  22DA               	addwfc	fsr2h,f,c
  3518  001938  0E00               	movlw	0
  3519  00193A  6EDF               	movwf	indf2,c
  3520                           
  3521                           ; BSR set to: 0
  3522  00193C  0012               	return	
  3523  00193E                     __end_of_init_i2c:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           prodh	equ	0xFF4
  3527                           prodl	equ	0xFF3
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           indf1	equ	0xFE7
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _i2c_configure_slave *****************
  3541 ;; Defined at:
  3542 ;;		line 279 in file "src/my_i2c.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  addr            1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  addr            1   51[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;Total ram usage:        1 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:   10
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text17
  3571  001E54                     __ptext17:
  3572                           	opt stack 0
  3573  001E54                     _i2c_configure_slave:
  3574                           	opt stack 20
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;incstack = 0
  3578                           ;i2c_configure_slave@addr stored from wreg
  3579  001E54  CFE8 F0CA          	movff	wreg,i2c_configure_slave@addr
  3580                           
  3581                           ;my_i2c.c: 288: TRISBbits.TRISB4 = 1;
  3582  001E58  8893               	bsf	3987,4,c	;volatile
  3583                           
  3584                           ;my_i2c.c: 289: TRISBbits.TRISB5 = 1;
  3585  001E5A  8A93               	bsf	3987,5,c	;volatile
  3586                           
  3587                           ;my_i2c.c: 297: SSPADD = addr;
  3588  001E5C  C0CA  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3589                           
  3590                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3591  001E60  0E00               	movlw	0
  3592  001E62  6EC7               	movwf	4039,c	;volatile
  3593                           
  3594                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3595  001E64  0E00               	movlw	0
  3596  001E66  6EC6               	movwf	4038,c	;volatile
  3597                           
  3598                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3599  001E68  0E00               	movlw	0
  3600  001E6A  6EC5               	movwf	4037,c	;volatile
  3601                           
  3602                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3603  001E6C  0E0E               	movlw	14
  3604  001E6E  12C6               	iorwf	4038,f,c	;volatile
  3605                           
  3606                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3607  001E70  8EC7               	bsf	4039,7,c	;volatile
  3608                           
  3609                           ;my_i2c.c: 318: PORTBbits.SCL1 = 1;
  3610  001E72  8881               	bsf	3969,4,c	;volatile
  3611                           
  3612                           ;my_i2c.c: 319: PORTBbits.SDA1 = 1;
  3613  001E74  8A81               	bsf	3969,5,c	;volatile
  3614                           
  3615                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3616  001E76  80C5               	bsf	4037,0,c	;volatile
  3617                           
  3618                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3619  001E78  8AC6               	bsf	4038,5,c	;volatile
  3620  001E7A  0012               	return	
  3621  001E7C                     __end_of_i2c_configure_slave:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _enable_interrupts *****************
  3639 ;; Defined at:
  3640 ;;		line 14 in file "src/interrupts.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   10
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text18
  3669  001FBE                     __ptext18:
  3670                           	opt stack 0
  3671  001FBE                     _enable_interrupts:
  3672                           	opt stack 20
  3673                           
  3674                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3675                           
  3676                           ;incstack = 0
  3677  001FBE  8ED0               	bsf	4048,7,c	;volatile
  3678                           
  3679                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3680  001FC0  8EF2               	bsf	intcon,7,c	;volatile
  3681                           
  3682                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3683  001FC2  8CF2               	bsf	intcon,6,c	;volatile
  3684  001FC4  0012               	return	
  3685  001FC6                     __end_of_enable_interrupts:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           indf1	equ	0xFE7
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           indf2	equ	0xFDF
  3697                           postinc2	equ	0xFDE
  3698                           postdec2	equ	0xFDD
  3699                           fsr2h	equ	0xFDA
  3700                           fsr2l	equ	0xFD9
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function _block_on_To_msgqueues *****************
  3704 ;; Defined at:
  3705 ;;		line 258 in file "src/messages.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;		None               void
  3712 ;; Registers used:
  3713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3723 ;;Total ram usage:        1 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:   13
  3726 ;; This function calls:
  3727 ;;		_Delay1KTCYx
  3728 ;;		_check_msg
  3729 ;;		_in_main
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text19
  3736  001564                     __ptext19:
  3737                           	opt stack 0
  3738  001564                     _block_on_To_msgqueues:
  3739                           	opt stack 17
  3740                           
  3741                           ;messages.c: 259: if (!in_main()) {
  3742                           
  3743                           ;incstack = 0
  3744  001564  EC92  F00D         	call	_in_main	;wreg free
  3745  001568  0101               	movlb	1	; () banked
  3746  00156A  0101               	movlb	1	; () banked
  3747  00156C  51A7               	movf	(?_in_main+1)& (0+255),w,b
  3748  00156E  0101               	movlb	1	; () banked
  3749  001570  11A6               	iorwf	?_in_main& (0+255),w,b
  3750  001572  B4D8               	btfsc	status,2,c
  3751  001574  0012               	return	
  3752                           
  3753                           ; BSR set to: 1
  3754                           ;messages.c: 261: }
  3755                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3756                           
  3757                           ; BSR set to: 1
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;messages.c: 260: return;
  3761  001576  0101               	movlb	1	; () banked
  3762  001578  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3763  00157A  0E01               	movlw	1
  3764  00157C  0100               	movlb	0	; () banked
  3765  00157E  0100               	movlb	0	; () banked
  3766  001580  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3767  001582  0101               	movlb	1	; () banked
  3768  001584  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3769  001586                     l3612:
  3770                           
  3771                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3772  001586  0101               	movlb	1	; () banked
  3773  001588  0E01               	movlw	high _ToMainHigh_MQ
  3774  00158A  0101               	movlb	1	; () banked
  3775  00158C  0101               	movlb	1	; () banked
  3776  00158E  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3777  001590  0101               	movlb	1	; () banked
  3778  001592  0E6C               	movlw	low _ToMainHigh_MQ
  3779  001594  0101               	movlb	1	; () banked
  3780  001596  0101               	movlb	1	; () banked
  3781  001598  6FA2               	movwf	check_msg@qptr& (0+255),b
  3782  00159A  ECAC  F00E         	call	_check_msg	;wreg free
  3783  00159E  0900               	iorlw	0
  3784  0015A0  B4D8               	btfsc	status,2,c
  3785  0015A2  D009               	goto	l3618
  3786                           
  3787                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3788  0015A4  0101               	movlb	1	; () banked
  3789  0015A6  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3790  0015A8  0E00               	movlw	0
  3791  0015AA  0100               	movlb	0	; () banked
  3792  0015AC  0100               	movlb	0	; () banked
  3793  0015AE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3794  0015B0  0101               	movlb	1	; () banked
  3795  0015B2  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3796  0015B4  0012               	return	
  3797  0015B6                     l3618:
  3798                           
  3799                           ;messages.c: 271: }
  3800                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3801  0015B6  0100               	movlb	0	; () banked
  3802  0015B8  0E00               	movlw	high _ToMainLow_MQ
  3803  0015BA  0101               	movlb	1	; () banked
  3804  0015BC  0101               	movlb	1	; () banked
  3805  0015BE  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3806  0015C0  0100               	movlb	0	; () banked
  3807  0015C2  0E61               	movlw	low _ToMainLow_MQ
  3808  0015C4  0101               	movlb	1	; () banked
  3809  0015C6  0101               	movlb	1	; () banked
  3810  0015C8  6FA2               	movwf	check_msg@qptr& (0+255),b
  3811  0015CA  ECAC  F00E         	call	_check_msg	;wreg free
  3812  0015CE  0900               	iorlw	0
  3813  0015D0  B4D8               	btfsc	status,2,c
  3814  0015D2  D009               	goto	l3624
  3815                           
  3816                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3817  0015D4  0101               	movlb	1	; () banked
  3818  0015D6  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3819  0015D8  0E00               	movlw	0
  3820  0015DA  0100               	movlb	0	; () banked
  3821  0015DC  0100               	movlb	0	; () banked
  3822  0015DE  6F60               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3823  0015E0  0101               	movlb	1	; () banked
  3824  0015E2  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3825  0015E4  0012               	return	
  3826  0015E6                     l3624:
  3827                           
  3828                           ;messages.c: 278: }
  3829                           ;messages.c: 279: Delay1KTCYx(10);
  3830  0015E6  0E0A               	movlw	10
  3831  0015E8  EC95  F00F         	call	_Delay1KTCYx
  3832  0015EC  D7CC               	goto	l3612
  3833  0015EE                     __end_of_block_on_To_msgqueues:
  3834                           	opt stack 0
  3835                           tblptru	equ	0xFF8
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           indf2	equ	0xFDF
  3845                           postinc2	equ	0xFDE
  3846                           postdec2	equ	0xFDD
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _in_main *****************
  3852 ;; Defined at:
  3853 ;;		line 40 in file "src/interrupts.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2    4[BANK1 ] int 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3867 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;Total ram usage:        2 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   12
  3874 ;; This function calls:
  3875 ;;		_in_high_int
  3876 ;;		_in_low_int
  3877 ;; This function is called by:
  3878 ;;		_block_on_To_msgqueues
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text20
  3883  001B24                     __ptext20:
  3884                           	opt stack 0
  3885  001B24                     _in_main:
  3886                           	opt stack 17
  3887                           
  3888                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3889                           
  3890                           ;incstack = 0
  3891  001B24  EC2A  F00D         	call	_in_low_int	;wreg free
  3892  001B28  0101               	movlb	1	; () banked
  3893  001B2A  0101               	movlb	1	; () banked
  3894  001B2C  51A5               	movf	(?_in_low_int+1)& (0+255),w,b
  3895  001B2E  0101               	movlb	1	; () banked
  3896  001B30  11A4               	iorwf	?_in_low_int& (0+255),w,b
  3897  001B32  A4D8               	btfss	status,2,c
  3898  001B34  D011               	goto	l3238
  3899                           
  3900                           ; BSR set to: 1
  3901  001B36  ECB2  F00F         	call	_in_high_int	;wreg free
  3902  001B3A  0101               	movlb	1	; () banked
  3903  001B3C  0101               	movlb	1	; () banked
  3904  001B3E  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  3905  001B40  0101               	movlb	1	; () banked
  3906  001B42  11A2               	iorwf	?_in_high_int& (0+255),w,b
  3907  001B44  A4D8               	btfss	status,2,c
  3908  001B46  D008               	goto	l3238
  3909                           
  3910                           ; BSR set to: 1
  3911                           ;interrupts.c: 42: return (1);
  3912  001B48  0E00               	movlw	0
  3913  001B4A  0101               	movlb	1	; () banked
  3914  001B4C  0101               	movlb	1	; () banked
  3915  001B4E  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3916  001B50  0E01               	movlw	1
  3917  001B52  0101               	movlb	1	; () banked
  3918  001B54  6FA6               	movwf	?_in_main& (0+255),b
  3919  001B56  0012               	return	
  3920  001B58                     l3238:
  3921                           
  3922                           ; BSR set to: 1
  3923                           ;interrupts.c: 44: return (0);
  3924  001B58  0E00               	movlw	0
  3925  001B5A  0101               	movlb	1	; () banked
  3926  001B5C  0101               	movlb	1	; () banked
  3927  001B5E  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3928  001B60  0E00               	movlw	0
  3929  001B62  0101               	movlb	1	; () banked
  3930  001B64  6FA6               	movwf	?_in_main& (0+255),b
  3931  001B66  0012               	return	
  3932  001B68                     __end_of_in_main:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           prodh	equ	0xFF4
  3936                           prodl	equ	0xFF3
  3937                           intcon	equ	0xFF2
  3938                           postinc0	equ	0xFEE
  3939                           wreg	equ	0xFE8
  3940                           indf1	equ	0xFE7
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           postdec2	equ	0xFDD
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _in_low_int *****************
  3951 ;; Defined at:
  3952 ;;		line 30 in file "src/interrupts.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2    2[BANK1 ] int 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        2 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:   11
  3973 ;; This function calls:
  3974 ;;		_in_high_int
  3975 ;; This function is called by:
  3976 ;;		_in_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text21
  3981  001A54                     __ptext21:
  3982                           	opt stack 0
  3983  001A54                     _in_low_int:
  3984                           	opt stack 17
  3985                           
  3986                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;incstack = 0
  3990  001A54  ACF2               	btfss	intcon,6,c	;volatile
  3991  001A56  D008               	goto	l3216
  3992                           
  3993                           ;interrupts.c: 32: return (0);
  3994  001A58  0E00               	movlw	0
  3995  001A5A  0101               	movlb	1	; () banked
  3996  001A5C  0101               	movlb	1	; () banked
  3997  001A5E  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  3998  001A60  0E00               	movlw	0
  3999  001A62  0101               	movlb	1	; () banked
  4000  001A64  6FA4               	movwf	?_in_low_int& (0+255),b
  4001  001A66  0012               	return	
  4002  001A68                     l3216:
  4003  001A68  ECB2  F00F         	call	_in_high_int	;wreg free
  4004  001A6C  0101               	movlb	1	; () banked
  4005  001A6E  0101               	movlb	1	; () banked
  4006  001A70  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  4007  001A72  0101               	movlb	1	; () banked
  4008  001A74  11A2               	iorwf	?_in_high_int& (0+255),w,b
  4009  001A76  B4D8               	btfsc	status,2,c
  4010  001A78  D008               	goto	l3224
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;interrupts.c: 34: return (0);
  4014  001A7A  0E00               	movlw	0
  4015  001A7C  0101               	movlb	1	; () banked
  4016  001A7E  0101               	movlb	1	; () banked
  4017  001A80  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4018  001A82  0E00               	movlw	0
  4019  001A84  0101               	movlb	1	; () banked
  4020  001A86  6FA4               	movwf	?_in_low_int& (0+255),b
  4021  001A88  0012               	return	
  4022  001A8A                     l3224:
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;interrupts.c: 36: return (1);
  4026  001A8A  0E00               	movlw	0
  4027  001A8C  0101               	movlb	1	; () banked
  4028  001A8E  0101               	movlb	1	; () banked
  4029  001A90  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4030  001A92  0E01               	movlw	1
  4031  001A94  0101               	movlb	1	; () banked
  4032  001A96  6FA4               	movwf	?_in_low_int& (0+255),b
  4033  001A98  0012               	return	
  4034  001A9A                     __end_of_in_low_int:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           indf1	equ	0xFE7
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _in_high_int *****************
  4053 ;; Defined at:
  4054 ;;		line 22 in file "src/interrupts.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2    0[BANK1 ] int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4068 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;Total ram usage:        2 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:   10
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_in_low_int
  4079 ;;		_in_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text22
  4084  001F64                     __ptext22:
  4085                           	opt stack 0
  4086  001F64                     _in_high_int:
  4087                           	opt stack 17
  4088                           
  4089                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4090                           
  4091                           ; BSR set to: 1
  4092                           ;incstack = 0
  4093  001F64  0E00               	movlw	0
  4094  001F66  AEF2               	btfss	intcon,7,c	;volatile
  4095  001F68  0E01               	movlw	1
  4096  001F6A  0101               	movlb	1	; () banked
  4097  001F6C  0101               	movlb	1	; () banked
  4098  001F6E  6FA2               	movwf	?_in_high_int& (0+255),b
  4099  001F70  0101               	movlb	1	; () banked
  4100  001F72  6BA3               	clrf	(?_in_high_int+1)& (0+255),b
  4101  001F74  0012               	return	
  4102  001F76                     __end_of_in_high_int:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           prodh	equ	0xFF4
  4106                           prodl	equ	0xFF3
  4107                           intcon	equ	0xFF2
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           indf1	equ	0xFE7
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           indf2	equ	0xFDF
  4114                           postinc2	equ	0xFDE
  4115                           postdec2	equ	0xFDD
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _check_msg *****************
  4121 ;; Defined at:
  4122 ;;		line 222 in file "src/messages.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4125 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4137 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;Total ram usage:        3 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:   10
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_block_on_To_msgqueues
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text23
  4152  001D58                     __ptext23:
  4153                           	opt stack 0
  4154  001D58                     _check_msg:
  4155                           	opt stack 19
  4156                           
  4157                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;incstack = 0
  4161  001D58  0101               	movlb	1	; () banked
  4162  001D5A  EE20 F035          	lfsr	2,53
  4163  001D5E  0101               	movlb	1	; () banked
  4164  001D60  51A2               	movf	check_msg@qptr& (0+255),w,b
  4165  001D62  26D9               	addwf	fsr2l,f,c
  4166  001D64  0101               	movlb	1	; () banked
  4167  001D66  51A3               	movf	(check_msg@qptr+1)& (0+255),w,b
  4168  001D68  22DA               	addwfc	fsr2h,f,c
  4169  001D6A  50DF               	movf	indf2,w,c
  4170  001D6C  0100               	movlb	0	; () banked
  4171  001D6E  6FCA               	movwf	??_check_msg& (0+255),b
  4172  001D70  0100               	movlb	0	; () banked
  4173  001D72  51CA               	movf	??_check_msg& (0+255),w,b
  4174  001D74  0D0D               	mullw	13
  4175  001D76  50F3               	movf	prodl,w,c
  4176  001D78  0101               	movlb	1	; () banked
  4177  001D7A  0101               	movlb	1	; () banked
  4178  001D7C  25A2               	addwf	check_msg@qptr& (0+255),w,b
  4179  001D7E  6ED9               	movwf	fsr2l,c
  4180  001D80  50F4               	movf	prodh,w,c
  4181  001D82  0101               	movlb	1	; () banked
  4182  001D84  0101               	movlb	1	; () banked
  4183  001D86  21A3               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4184  001D88  6EDA               	movwf	fsr2h,c
  4185  001D8A  50DF               	movf	indf2,w,c
  4186  001D8C  0012               	return	
  4187  001D8E                     __end_of_check_msg:
  4188                           	opt stack 0
  4189                           tblptru	equ	0xFF8
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf1	equ	0xFE7
  4196                           fsr1h	equ	0xFE2
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           postinc2	equ	0xFDE
  4200                           postdec2	equ	0xFDD
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _Delay1KTCYx *****************
  4206 ;; Defined at:
  4207 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  unit            1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  unit            1   51[BANK0 ] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;		None               void
  4214 ;; Registers used:
  4215 ;;		wreg
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;Total ram usage:        1 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:   10
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_block_on_To_msgqueues
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text24
  4236  001F2A                     __ptext24:
  4237                           	opt stack 0
  4238  001F2A                     _Delay1KTCYx:
  4239                           	opt stack 19
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;incstack = 0
  4243                           ;Delay1KTCYx@unit stored from wreg
  4244  001F2A  CFE8 F0CA          	movff	wreg,Delay1KTCYx@unit
  4245  001F2E                     l732:
  4246  001F2E  0EFA               	movlw	250
  4247  001F30                     u3017:
  4248  001F30  F000               	nop	
  4249  001F32  2EE8               	decfsz	wreg,f,c
  4250  001F34  D7FD               	goto	u3017
  4251  001F36  0100               	movlb	0	; () banked
  4252  001F38  0100               	movlb	0	; () banked
  4253  001F3A  2FCA               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4254  001F3C  D7F8               	goto	l732
  4255  001F3E  0012               	return	
  4256  001F40                     __end_of_Delay1KTCYx:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           prodh	equ	0xFF4
  4260                           prodl	equ	0xFF3
  4261                           intcon	equ	0xFF2
  4262                           postinc0	equ	0xFEE
  4263                           wreg	equ	0xFE8
  4264                           indf1	equ	0xFE7
  4265                           fsr1h	equ	0xFE2
  4266                           fsr1l	equ	0xFE1
  4267                           indf2	equ	0xFDF
  4268                           postinc2	equ	0xFDE
  4269                           postdec2	equ	0xFDD
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8
  4273                           
  4274 ;; *************** function _ToMainLow_recvmsg *****************
  4275 ;; Defined at:
  4276 ;;		line 112 in file "src/messages.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  maxlength       1    wreg     unsigned char 
  4279 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4280 ;;		 -> main@msgtype(1), 
  4281 ;;  data            2   26[BANK1 ] PTR void 
  4282 ;;		 -> main@msgbuffer(11), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      char 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4294 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;Total ram usage:        5 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:   12
  4301 ;; This function calls:
  4302 ;;		_recv_msg
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text25
  4309  001B68                     __ptext25:
  4310                           	opt stack 0
  4311  001B68                     _ToMainLow_recvmsg:
  4312                           	opt stack 18
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;incstack = 0
  4316                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4317  001B68  CFE8 F0CA          	movff	wreg,ToMainLow_recvmsg@maxlength
  4318                           
  4319                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4320  001B6C  0100               	movlb	0	; () banked
  4321  001B6E  0E00               	movlw	high _ToMainLow_MQ
  4322  001B70  0101               	movlb	1	; () banked
  4323  001B72  0101               	movlb	1	; () banked
  4324  001B74  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4325  001B76  0100               	movlb	0	; () banked
  4326  001B78  0E61               	movlw	low _ToMainLow_MQ
  4327  001B7A  0101               	movlb	1	; () banked
  4328  001B7C  0101               	movlb	1	; () banked
  4329  001B7E  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4330  001B80  C0CA  F1AE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4331  001B84  0101               	movlb	1	; () banked
  4332  001B86  0101               	movlb	1	; () banked
  4333  001B88  C1BB  F1B0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4334  001B8C  0101               	movlb	1	; () banked
  4335  001B8E  0101               	movlb	1	; () banked
  4336  001B90  C1BA  F1AF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4337  001B94  0101               	movlb	1	; () banked
  4338  001B96  0101               	movlb	1	; () banked
  4339  001B98  C1BD  F1B2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4340  001B9C  0101               	movlb	1	; () banked
  4341  001B9E  0101               	movlb	1	; () banked
  4342  001BA0  C1BC  F1B1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4343  001BA4  ECC5  F005         	call	_recv_msg	;wreg free
  4344  001BA8  0012               	return	
  4345  001BAA                     __end_of_ToMainLow_recvmsg:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           intcon	equ	0xFF2
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           indf1	equ	0xFE7
  4354                           fsr1h	equ	0xFE2
  4355                           fsr1l	equ	0xFE1
  4356                           indf2	equ	0xFDF
  4357                           postinc2	equ	0xFDE
  4358                           postdec2	equ	0xFDD
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _ToMainHigh_recvmsg *****************
  4364 ;; Defined at:
  4365 ;;		line 135 in file "src/messages.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  maxlength       1    wreg     unsigned char 
  4368 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4369 ;;		 -> main@msgtype(1), 
  4370 ;;  data            2   26[BANK1 ] PTR void 
  4371 ;;		 -> main@msgbuffer(11), 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  1    wreg      char 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4383 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;Total ram usage:        5 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:   12
  4390 ;; This function calls:
  4391 ;;		_recv_msg
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text26
  4398  001BAA                     __ptext26:
  4399                           	opt stack 0
  4400  001BAA                     _ToMainHigh_recvmsg:
  4401                           	opt stack 18
  4402                           
  4403                           ;incstack = 0
  4404                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4405  001BAA  CFE8 F0CA          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4406                           
  4407                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4408  001BAE  0101               	movlb	1	; () banked
  4409  001BB0  0E01               	movlw	high _ToMainHigh_MQ
  4410  001BB2  0101               	movlb	1	; () banked
  4411  001BB4  0101               	movlb	1	; () banked
  4412  001BB6  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4413  001BB8  0101               	movlb	1	; () banked
  4414  001BBA  0E6C               	movlw	low _ToMainHigh_MQ
  4415  001BBC  0101               	movlb	1	; () banked
  4416  001BBE  0101               	movlb	1	; () banked
  4417  001BC0  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4418  001BC2  C0CA  F1AE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4419  001BC6  0101               	movlb	1	; () banked
  4420  001BC8  0101               	movlb	1	; () banked
  4421  001BCA  C1BB  F1B0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4422  001BCE  0101               	movlb	1	; () banked
  4423  001BD0  0101               	movlb	1	; () banked
  4424  001BD2  C1BA  F1AF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4425  001BD6  0101               	movlb	1	; () banked
  4426  001BD8  0101               	movlb	1	; () banked
  4427  001BDA  C1BD  F1B2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4428  001BDE  0101               	movlb	1	; () banked
  4429  001BE0  0101               	movlb	1	; () banked
  4430  001BE2  C1BC  F1B1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4431  001BE6  ECC5  F005         	call	_recv_msg	;wreg free
  4432  001BEA  0012               	return	
  4433  001BEC                     __end_of_ToMainHigh_recvmsg:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           intcon	equ	0xFF2
  4439                           postinc0	equ	0xFEE
  4440                           wreg	equ	0xFE8
  4441                           indf1	equ	0xFE7
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _recv_msg *****************
  4452 ;; Defined at:
  4453 ;;		line 63 in file "src/messages.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4456 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4457 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4458 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4459 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4460 ;;  data            2   15[BANK1 ] PTR void 
  4461 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4464 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4465 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4466 ;;  tlength         2   20[BANK1 ] unsigned int 
  4467 ;;  slot            1   19[BANK1 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      char 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4477 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4480 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4481 ;;Total ram usage:       14 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:   11
  4484 ;; This function calls:
  4485 ;;		_memcpy
  4486 ;; This function is called by:
  4487 ;;		_ToMainLow_recvmsg
  4488 ;;		_ToMainHigh_recvmsg
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text27
  4493  000B8A                     __ptext27:
  4494                           	opt stack 0
  4495  000B8A                     _recv_msg:
  4496                           	opt stack 18
  4497                           
  4498                           ;messages.c: 64: unsigned char slot;
  4499                           ;messages.c: 68: msg *qmsg;
  4500                           ;messages.c: 69: size_t tlength;
  4501                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4502                           
  4503                           ;incstack = 0
  4504  000B8A  0101               	movlb	1	; () banked
  4505  000B8C  EE20 F035          	lfsr	2,53
  4506  000B90  0101               	movlb	1	; () banked
  4507  000B92  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4508  000B94  26D9               	addwf	fsr2l,f,c
  4509  000B96  0101               	movlb	1	; () banked
  4510  000B98  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4511  000B9A  22DA               	addwfc	fsr2h,f,c
  4512  000B9C  50DF               	movf	indf2,w,c
  4513  000B9E  0101               	movlb	1	; () banked
  4514  000BA0  0101               	movlb	1	; () banked
  4515  000BA2  6FB5               	movwf	recv_msg@slot& (0+255),b
  4516                           
  4517                           ; BSR set to: 1
  4518                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4519  000BA4  0101               	movlb	1	; () banked
  4520  000BA6  0101               	movlb	1	; () banked
  4521  000BA8  51B5               	movf	recv_msg@slot& (0+255),w,b
  4522  000BAA  0D0D               	mullw	13
  4523  000BAC  50F3               	movf	prodl,w,c
  4524  000BAE  0101               	movlb	1	; () banked
  4525  000BB0  0101               	movlb	1	; () banked
  4526  000BB2  25AC               	addwf	recv_msg@qptr& (0+255),w,b
  4527  000BB4  0101               	movlb	1	; () banked
  4528  000BB6  0101               	movlb	1	; () banked
  4529  000BB8  6FB8               	movwf	recv_msg@qmsg& (0+255),b
  4530  000BBA  50F4               	movf	prodh,w,c
  4531  000BBC  0101               	movlb	1	; () banked
  4532  000BBE  0101               	movlb	1	; () banked
  4533  000BC0  21AD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4534  000BC2  0101               	movlb	1	; () banked
  4535  000BC4  6FB9               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;messages.c: 74: if (qmsg->full == 1) {
  4539  000BC6  0E01               	movlw	1
  4540  000BC8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4541  000BCC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4542  000BD0  62DF               	cpfseq	indf2,c
  4543  000BD2  D074               	goto	l3780
  4544                           
  4545                           ; BSR set to: 1
  4546                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4547  000BD4  0101               	movlb	1	; () banked
  4548  000BD6  EE20 F001          	lfsr	2,1
  4549  000BDA  0101               	movlb	1	; () banked
  4550  000BDC  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4551  000BDE  26D9               	addwf	fsr2l,f,c
  4552  000BE0  0101               	movlb	1	; () banked
  4553  000BE2  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4554  000BE4  22DA               	addwfc	fsr2h,f,c
  4555  000BE6  50DF               	movf	indf2,w,c
  4556  000BE8  0101               	movlb	1	; () banked
  4557  000BEA  0101               	movlb	1	; () banked
  4558  000BEC  5DAE               	subwf	recv_msg@maxlength& (0+255),w,b
  4559  000BEE  B0D8               	btfsc	status,0,c
  4560  000BF0  D002               	goto	l3764
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;messages.c: 77: return (-3);
  4564  000BF2  0EFD               	movlw	253
  4565  000BF4  0012               	return	
  4566  000BF6                     l3764:
  4567                           
  4568                           ; BSR set to: 1
  4569                           ;messages.c: 78: }
  4570                           ;messages.c: 80: tlength = qmsg->length;
  4571  000BF6  0101               	movlb	1	; () banked
  4572  000BF8  EE20 F001          	lfsr	2,1
  4573  000BFC  0101               	movlb	1	; () banked
  4574  000BFE  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4575  000C00  26D9               	addwf	fsr2l,f,c
  4576  000C02  0101               	movlb	1	; () banked
  4577  000C04  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4578  000C06  22DA               	addwfc	fsr2h,f,c
  4579  000C08  50DF               	movf	indf2,w,c
  4580  000C0A  0101               	movlb	1	; () banked
  4581  000C0C  6FB3               	movwf	??_recv_msg& (0+255),b
  4582  000C0E  0101               	movlb	1	; () banked
  4583  000C10  51B3               	movf	??_recv_msg& (0+255),w,b
  4584  000C12  0101               	movlb	1	; () banked
  4585  000C14  0101               	movlb	1	; () banked
  4586  000C16  6FB6               	movwf	recv_msg@tlength& (0+255),b
  4587  000C18  0101               	movlb	1	; () banked
  4588  000C1A  6BB7               	clrf	(recv_msg@tlength+1)& (0+255),b
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4592  000C1C  0101               	movlb	1	; () banked
  4593  000C1E  0101               	movlb	1	; () banked
  4594  000C20  C1B2  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  4595  000C24  0101               	movlb	1	; () banked
  4596  000C26  0101               	movlb	1	; () banked
  4597  000C28  C1B1  F1A2         	movff	recv_msg@data,memcpy@d1
  4598  000C2C  0E03               	movlw	3
  4599  000C2E  0101               	movlb	1	; () banked
  4600  000C30  0101               	movlb	1	; () banked
  4601  000C32  25B8               	addwf	recv_msg@qmsg& (0+255),w,b
  4602  000C34  0101               	movlb	1	; () banked
  4603  000C36  6FB3               	movwf	??_recv_msg& (0+255),b
  4604  000C38  0E00               	movlw	0
  4605  000C3A  0101               	movlb	1	; () banked
  4606  000C3C  0101               	movlb	1	; () banked
  4607  000C3E  21B9               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4608  000C40  0101               	movlb	1	; () banked
  4609  000C42  6FB4               	movwf	(??_recv_msg+1)& (0+255),b
  4610  000C44  C1B3  F1A4         	movff	??_recv_msg,memcpy@s1
  4611  000C48  C1B4  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  4612  000C4C  C1B6  F1A6         	movff	recv_msg@tlength,memcpy@n
  4613  000C50  C1B7  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  4614  000C54  EC9F  F00C         	call	_memcpy	;wreg free
  4615                           
  4616                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4617  000C58  0101               	movlb	1	; () banked
  4618  000C5A  EE20 F035          	lfsr	2,53
  4619  000C5E  0101               	movlb	1	; () banked
  4620  000C60  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4621  000C62  26D9               	addwf	fsr2l,f,c
  4622  000C64  0101               	movlb	1	; () banked
  4623  000C66  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4624  000C68  22DA               	addwfc	fsr2h,f,c
  4625  000C6A  0101               	movlb	1	; () banked
  4626  000C6C  EE10 F035          	lfsr	1,53
  4627  000C70  0101               	movlb	1	; () banked
  4628  000C72  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4629  000C74  26E1               	addwf	fsr1l,f,c
  4630  000C76  0101               	movlb	1	; () banked
  4631  000C78  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4632  000C7A  22E2               	addwfc	fsr1h,f,c
  4633  000C7C  50E7               	movf	indf1,w,c
  4634  000C7E  0101               	movlb	1	; () banked
  4635  000C80  6FB3               	movwf	??_recv_msg& (0+255),b
  4636  000C82  0101               	movlb	1	; () banked
  4637  000C84  29B3               	incf	??_recv_msg& (0+255),w,b
  4638  000C86  0B03               	andlw	3
  4639  000C88  6EDF               	movwf	indf2,c
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4643  000C8A  0101               	movlb	1	; () banked
  4644  000C8C  EE20 F002          	lfsr	2,2
  4645  000C90  0101               	movlb	1	; () banked
  4646  000C92  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4647  000C94  26D9               	addwf	fsr2l,f,c
  4648  000C96  0101               	movlb	1	; () banked
  4649  000C98  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4650  000C9A  22DA               	addwfc	fsr2h,f,c
  4651  000C9C  C1AF  FFE1         	movff	recv_msg@msgtype,fsr1l
  4652  000CA0  C1B0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4653  000CA4  CFDF FFE7          	movff	indf2,indf1
  4654                           
  4655                           ; BSR set to: 1
  4656                           ;messages.c: 91: qmsg->full = 0;
  4657  000CA8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4658  000CAC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4659  000CB0  0E00               	movlw	0
  4660  000CB2  6EDF               	movwf	indf2,c
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;messages.c: 92: return (tlength);
  4664  000CB4  0101               	movlb	1	; () banked
  4665  000CB6  0101               	movlb	1	; () banked
  4666  000CB8  51B6               	movf	recv_msg@tlength& (0+255),w,b
  4667  000CBA  0012               	return	
  4668  000CBC                     l3780:
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;messages.c: 94: return (-4);
  4672  000CBC  0EFC               	movlw	252
  4673  000CBE  0012               	return	
  4674  000CC0                     __end_of_recv_msg:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           intcon	equ	0xFF2
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           indf1	equ	0xFE7
  4683                           fsr1h	equ	0xFE2
  4684                           fsr1l	equ	0xFE1
  4685                           indf2	equ	0xFDF
  4686                           postinc2	equ	0xFDE
  4687                           postdec2	equ	0xFDD
  4688                           fsr2h	equ	0xFDA
  4689                           fsr2l	equ	0xFD9
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function _memcpy *****************
  4693 ;; Defined at:
  4694 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  d1              2    0[BANK1 ] PTR void 
  4697 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4698 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4699 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4700 ;;  s1              2    2[BANK1 ] PTR const void 
  4701 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4702 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4703 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4704 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4705 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4706 ;;  n               2    4[BANK1 ] unsigned int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4709 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4710 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4711 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4712 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4713 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  4714 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4715 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4716 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4717 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  2    0[BANK1 ] PTR void 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4727 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;Total ram usage:       10 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:   10
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_send_msg
  4738 ;;		_recv_msg
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text28
  4743  00193E                     __ptext28:
  4744                           	opt stack 0
  4745  00193E                     _memcpy:
  4746                           	opt stack 17
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;incstack = 0
  4750  00193E  0101               	movlb	1	; () banked
  4751  001940  0101               	movlb	1	; () banked
  4752  001942  C1A5  F1AB         	movff	memcpy@s1+1,memcpy@s+1
  4753  001946  0101               	movlb	1	; () banked
  4754  001948  0101               	movlb	1	; () banked
  4755  00194A  C1A4  F1AA         	movff	memcpy@s1,memcpy@s
  4756  00194E  0101               	movlb	1	; () banked
  4757  001950  0101               	movlb	1	; () banked
  4758  001952  C1A3  F1A9         	movff	memcpy@d1+1,memcpy@d+1
  4759  001956  0101               	movlb	1	; () banked
  4760  001958  0101               	movlb	1	; () banked
  4761  00195A  C1A2  F1A8         	movff	memcpy@d1,memcpy@d
  4762  00195E  D012               	goto	l3750
  4763  001960                     l3744:
  4764                           
  4765                           ; BSR set to: 1
  4766  001960  C1AA  FFD9         	movff	memcpy@s,fsr2l
  4767  001964  C1AB  FFDA         	movff	memcpy@s+1,fsr2h
  4768  001968  C1A8  FFE1         	movff	memcpy@d,fsr1l
  4769  00196C  C1A9  FFE2         	movff	memcpy@d+1,fsr1h
  4770  001970  CFDF FFE7          	movff	indf2,indf1
  4771                           
  4772                           ; BSR set to: 1
  4773  001974  0101               	movlb	1	; () banked
  4774  001976  0101               	movlb	1	; () banked
  4775  001978  4BAA               	infsnz	memcpy@s& (0+255),f,b
  4776  00197A  2BAB               	incf	(memcpy@s+1)& (0+255),f,b
  4777                           
  4778                           ; BSR set to: 1
  4779  00197C  0101               	movlb	1	; () banked
  4780  00197E  0101               	movlb	1	; () banked
  4781  001980  4BA8               	infsnz	memcpy@d& (0+255),f,b
  4782  001982  2BA9               	incf	(memcpy@d+1)& (0+255),f,b
  4783  001984                     l3750:
  4784                           
  4785                           ; BSR set to: 1
  4786  001984  0101               	movlb	1	; () banked
  4787  001986  0101               	movlb	1	; () banked
  4788  001988  07A6               	decf	memcpy@n& (0+255),f,b
  4789  00198A  A0D8               	btfss	status,0,c
  4790  00198C  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  4791  00198E  0101               	movlb	1	; () banked
  4792  001990  29A6               	incf	memcpy@n& (0+255),w,b
  4793  001992  B4D8               	btfsc	status,2,c
  4794  001994  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  4795  001996  B4D8               	btfsc	status,2,c
  4796                           
  4797                           ; BSR set to: 1
  4798                           
  4799                           ; BSR set to: 1
  4800                           ;	Return value of _memcpy is never used
  4801  001998  0012               	return	
  4802  00199A  D7E2               	goto	l3744
  4803  00199C                     __end_of_memcpy:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           prodh	equ	0xFF4
  4807                           prodl	equ	0xFF3
  4808                           intcon	equ	0xFF2
  4809                           postinc0	equ	0xFEE
  4810                           wreg	equ	0xFE8
  4811                           indf1	equ	0xFE7
  4812                           fsr1h	equ	0xFE2
  4813                           fsr1l	equ	0xFE1
  4814                           indf2	equ	0xFDF
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _OpenTimer1 *****************
  4822 ;; Defined at:
  4823 ;;		line 43 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  config          1    wreg     unsigned char 
  4826 ;;  config1         1   51[BANK0 ] unsigned char 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  config          1    1[BANK1 ] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4838 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;Total ram usage:        3 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:   10
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_main
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text29
  4853  001C2E                     __ptext29:
  4854                           	opt stack 0
  4855  001C2E                     _OpenTimer1:
  4856                           	opt stack 20
  4857                           
  4858                           ; BSR set to: 1
  4859                           ;incstack = 0
  4860                           ;OpenTimer1@config stored from wreg
  4861  001C2E  CFE8 F1A3          	movff	wreg,OpenTimer1@config
  4862  001C32  0100               	movlb	0	; () banked
  4863  001C34  0100               	movlb	0	; () banked
  4864  001C36  51CA               	movf	OpenTimer1@config1& (0+255),w,b
  4865  001C38  0BF3               	andlw	243
  4866  001C3A  6E9A               	movwf	3994,c	;volatile
  4867  001C3C  C1A3  F1A2         	movff	OpenTimer1@config,??_OpenTimer1
  4868  001C40  0E7F               	movlw	127
  4869  001C42  0101               	movlb	1	; () banked
  4870  001C44  17A2               	andwf	??_OpenTimer1& (0+255),f,b
  4871  001C46  0101               	movlb	1	; () banked
  4872  001C48  90D8               	bcf	status,0,c
  4873  001C4A  35A2               	rlcf	??_OpenTimer1& (0+255),w,b
  4874  001C4C  6ECD               	movwf	4045,c	;volatile
  4875                           
  4876                           ; BSR set to: 1
  4877  001C4E  0E00               	movlw	0
  4878  001C50  6ECF               	movwf	4047,c	;volatile
  4879                           
  4880                           ; BSR set to: 1
  4881  001C52  0E00               	movlw	0
  4882  001C54  6ECE               	movwf	4046,c	;volatile
  4883                           
  4884                           ; BSR set to: 1
  4885  001C56  909E               	bcf	3998,0,c	;volatile
  4886                           
  4887                           ; BSR set to: 1
  4888  001C58  0101               	movlb	1	; () banked
  4889  001C5A  0101               	movlb	1	; () banked
  4890  001C5C  AFA3               	btfss	OpenTimer1@config& (0+255),7,b
  4891  001C5E  D002               	goto	l461
  4892                           
  4893                           ; BSR set to: 1
  4894  001C60  809D               	bsf	3997,0,c	;volatile
  4895  001C62  D001               	goto	l462
  4896  001C64                     l461:
  4897                           
  4898                           ; BSR set to: 1
  4899  001C64  909D               	bcf	3997,0,c	;volatile
  4900  001C66                     l462:
  4901                           
  4902                           ; BSR set to: 1
  4903  001C66  BE9A               	btfsc	3994,7,c	;volatile
  4904                           
  4905                           ; BSR set to: 1
  4906  001C68  869A               	bsf	3994,3,c	;volatile
  4907                           
  4908                           ; BSR set to: 1
  4909  001C6A  80CD               	bsf	4045,0,c	;volatile
  4910                           
  4911                           ; BSR set to: 1
  4912  001C6C  0012               	return	
  4913  001C6E                     __end_of_OpenTimer1:
  4914                           	opt stack 0
  4915                           tblptru	equ	0xFF8
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           indf1	equ	0xFE7
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           indf2	equ	0xFDF
  4925                           postinc2	equ	0xFDE
  4926                           postdec2	equ	0xFDD
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function _OpenTimer0 *****************
  4932 ;; Defined at:
  4933 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  config          1    wreg     unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  config          1   51[BANK0 ] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;		None               void
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;Total ram usage:        1 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:   10
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_main
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text30
  4962  001E2A                     __ptext30:
  4963                           	opt stack 0
  4964  001E2A                     _OpenTimer0:
  4965                           	opt stack 20
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;incstack = 0
  4969                           ;OpenTimer0@config stored from wreg
  4970  001E2A  CFE8 F0CA          	movff	wreg,OpenTimer0@config
  4971  001E2E  0100               	movlb	0	; () banked
  4972  001E30  0100               	movlb	0	; () banked
  4973  001E32  51CA               	movf	OpenTimer0@config& (0+255),w,b
  4974  001E34  0B7F               	andlw	127
  4975  001E36  6ED5               	movwf	4053,c	;volatile
  4976                           
  4977                           ; BSR set to: 0
  4978  001E38  0E00               	movlw	0
  4979  001E3A  6ED7               	movwf	4055,c	;volatile
  4980                           
  4981                           ; BSR set to: 0
  4982  001E3C  0E00               	movlw	0
  4983  001E3E  6ED6               	movwf	4054,c	;volatile
  4984                           
  4985                           ; BSR set to: 0
  4986  001E40  94F2               	bcf	intcon,2,c	;volatile
  4987                           
  4988                           ; BSR set to: 0
  4989  001E42  0100               	movlb	0	; () banked
  4990  001E44  0100               	movlb	0	; () banked
  4991  001E46  AFCA               	btfss	OpenTimer0@config& (0+255),7,b
  4992  001E48  D002               	goto	l433
  4993                           
  4994                           ; BSR set to: 0
  4995  001E4A  8AF2               	bsf	intcon,5,c	;volatile
  4996  001E4C  D001               	goto	l434
  4997  001E4E                     l433:
  4998                           
  4999                           ; BSR set to: 0
  5000  001E4E  9AF2               	bcf	intcon,5,c	;volatile
  5001  001E50                     l434:
  5002                           
  5003                           ; BSR set to: 0
  5004  001E50  8ED5               	bsf	4053,7,c	;volatile
  5005                           
  5006                           ; BSR set to: 0
  5007  001E52  0012               	return	
  5008  001E54                     __end_of_OpenTimer0:
  5009                           	opt stack 0
  5010                           tblptru	equ	0xFF8
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           indf1	equ	0xFE7
  5017                           fsr1h	equ	0xFE2
  5018                           fsr1l	equ	0xFE1
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _Open1USART *****************
  5027 ;; Defined at:
  5028 ;;		line 124 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  config          1    wreg     unsigned char 
  5031 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  config          1   51[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        6 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:   10
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text31
  5058  0016FA                     __ptext31:
  5059                           	opt stack 0
  5060  0016FA                     _Open1USART:
  5061                           	opt stack 20
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;incstack = 0
  5065                           ;Open1USART@config stored from wreg
  5066  0016FA  CFE8 F0CA          	movff	wreg,Open1USART@config
  5067  0016FE  0E00               	movlw	0
  5068  001700  6EAD               	movwf	4013,c	;volatile
  5069  001702  0E00               	movlw	0
  5070  001704  6EAC               	movwf	4012,c	;volatile
  5071  001706  0100               	movlb	0	; () banked
  5072  001708  0100               	movlb	0	; () banked
  5073  00170A  B1CA               	btfsc	Open1USART@config& (0+255),0,b
  5074                           
  5075                           ; BSR set to: 0
  5076  00170C  88AD               	bsf	4013,4,c	;volatile
  5077                           
  5078                           ; BSR set to: 0
  5079                           
  5080                           ; BSR set to: 0
  5081  00170E  0100               	movlb	0	; () banked
  5082  001710  0100               	movlb	0	; () banked
  5083  001712  A3CA               	btfss	Open1USART@config& (0+255),1,b
  5084  001714  D002               	goto	l3554
  5085                           
  5086                           ; BSR set to: 0
  5087  001716  8CAD               	bsf	4013,6,c	;volatile
  5088  001718  8CAC               	bsf	4012,6,c	;volatile
  5089  00171A                     l3554:
  5090                           
  5091                           ; BSR set to: 0
  5092  00171A  0100               	movlb	0	; () banked
  5093  00171C  0100               	movlb	0	; () banked
  5094  00171E  B5CA               	btfsc	Open1USART@config& (0+255),2,b
  5095                           
  5096                           ; BSR set to: 0
  5097  001720  8EAD               	bsf	4013,7,c	;volatile
  5098                           
  5099                           ; BSR set to: 0
  5100                           
  5101                           ; BSR set to: 0
  5102  001722  0100               	movlb	0	; () banked
  5103  001724  0100               	movlb	0	; () banked
  5104  001726  A7CA               	btfss	Open1USART@config& (0+255),3,b
  5105  001728  D002               	goto	l500
  5106                           
  5107                           ; BSR set to: 0
  5108  00172A  88AC               	bsf	4012,4,c	;volatile
  5109  00172C  D001               	goto	l3562
  5110  00172E                     l500:
  5111                           
  5112                           ; BSR set to: 0
  5113  00172E  8AAC               	bsf	4012,5,c	;volatile
  5114  001730                     l3562:
  5115                           
  5116                           ; BSR set to: 0
  5117  001730  0100               	movlb	0	; () banked
  5118  001732  0100               	movlb	0	; () banked
  5119  001734  B9CA               	btfsc	Open1USART@config& (0+255),4,b
  5120                           
  5121                           ; BSR set to: 0
  5122  001736  84AD               	bsf	4013,2,c	;volatile
  5123                           
  5124                           ; BSR set to: 0
  5125                           
  5126                           ; BSR set to: 0
  5127  001738  0100               	movlb	0	; () banked
  5128  00173A  0100               	movlb	0	; () banked
  5129  00173C  BBCA               	btfsc	Open1USART@config& (0+255),5,b
  5130                           
  5131                           ; BSR set to: 0
  5132  00173E  86AC               	bsf	4012,3,c	;volatile
  5133                           
  5134                           ; BSR set to: 0
  5135                           
  5136                           ; BSR set to: 0
  5137  001740  0100               	movlb	0	; () banked
  5138  001742  0100               	movlb	0	; () banked
  5139  001744  ADCA               	btfss	Open1USART@config& (0+255),6,b
  5140  001746  D002               	goto	l504
  5141                           
  5142                           ; BSR set to: 0
  5143  001748  8A9D               	bsf	3997,5,c	;volatile
  5144  00174A  D001               	goto	l3574
  5145  00174C                     l504:
  5146                           
  5147                           ; BSR set to: 0
  5148  00174C  9A9D               	bcf	3997,5,c	;volatile
  5149  00174E                     l3574:
  5150                           
  5151                           ; BSR set to: 0
  5152  00174E  0100               	movlb	0	; () banked
  5153  001750  0100               	movlb	0	; () banked
  5154  001752  AFCA               	btfss	Open1USART@config& (0+255),7,b
  5155  001754  D002               	goto	l506
  5156                           
  5157                           ; BSR set to: 0
  5158  001756  889D               	bsf	3997,4,c	;volatile
  5159  001758  D001               	goto	l507
  5160  00175A                     l506:
  5161                           
  5162                           ; BSR set to: 0
  5163  00175A  989D               	bcf	3997,4,c	;volatile
  5164  00175C                     l507:
  5165                           
  5166                           ; BSR set to: 0
  5167  00175C  C1A2  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5168                           
  5169                           ; BSR set to: 0
  5170  001760  0101               	movlb	1	; () banked
  5171  001762  C1A3  F1A4         	movff	Open1USART@spbrg+1,??_Open1USART
  5172  001766  C1A4  F1A5         	movff	??_Open1USART,??_Open1USART+1
  5173  00176A  0101               	movlb	1	; () banked
  5174  00176C  6BA6               	clrf	(??_Open1USART+2)& (0+255),b
  5175  00176E  0101               	movlb	1	; () banked
  5176  001770  51A5               	movf	(??_Open1USART+1)& (0+255),w,b
  5177  001772  6E7F               	movwf	3967,c	;volatile
  5178                           
  5179                           ; BSR set to: 1
  5180  001774  8AAD               	bsf	4013,5,c	;volatile
  5181                           
  5182                           ; BSR set to: 1
  5183  001776  8EAC               	bsf	4012,7,c	;volatile
  5184                           
  5185                           ; BSR set to: 1
  5186  001778  0012               	return	
  5187  00177A                     __end_of_Open1USART:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           prodh	equ	0xFF4
  5191                           prodl	equ	0xFF3
  5192                           intcon	equ	0xFF2
  5193                           postinc0	equ	0xFEE
  5194                           wreg	equ	0xFE8
  5195                           indf1	equ	0xFE7
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _InterruptHandlerLow *****************
  5206 ;; Defined at:
  5207 ;;		line 122 in file "src/interrupts.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;		None               void
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;Total ram usage:       17 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    9
  5228 ;; This function calls:
  5229 ;;		_timer1_int_handler
  5230 ;;		_uart_recv_int_handler
  5231 ;;		_uart_trans_int_handler
  5232 ;; This function is called by:
  5233 ;;		Interrupt level 1
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	intcodelo
  5238  000018                     __pintcodelo:
  5239                           	opt stack 0
  5240  000018                     _InterruptHandlerLow:
  5241                           	opt stack 16
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;incstack = 0
  5245  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  5246  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  5247  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  5248  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  5249  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  5250  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  5251  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  5252  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  5253  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  5254  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  5255  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  5256  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  5257  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  5258  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  5259  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  5260  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  5261  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  5262                           
  5263                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5264  00005C  A09E               	btfss	3998,0,c	;volatile
  5265  00005E  D003               	goto	i1l4062
  5266                           
  5267                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5268  000060  909E               	bcf	3998,0,c	;volatile
  5269                           
  5270                           ;interrupts.c: 126: timer1_int_handler();
  5271  000062  ECFD  F00E         	call	_timer1_int_handler	;wreg free
  5272  000066                     i1l4062:
  5273                           
  5274                           ;interrupts.c: 127: }
  5275                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5276  000066  AA9E               	btfss	3998,5,c	;volatile
  5277  000068  D003               	goto	i1l4068
  5278                           
  5279                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5280  00006A  9A9E               	bcf	3998,5,c	;volatile
  5281                           
  5282                           ;interrupts.c: 132: uart_recv_int_handler();
  5283  00006C  EC1F  F00A         	call	_uart_recv_int_handler	;wreg free
  5284  000070                     i1l4068:
  5285                           
  5286                           ;interrupts.c: 133: }
  5287                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5288  000070  B89E               	btfsc	3998,4,c	;volatile
  5289  000072  A89D               	btfss	3997,4,c	;volatile
  5290  000074  D002               	goto	i1l52
  5291                           
  5292                           ;interrupts.c: 137: uart_trans_int_handler();
  5293  000076  ECFD  F00C         	call	_uart_trans_int_handler	;wreg free
  5294  00007A                     i1l52:
  5295  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5296  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5297  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5298  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5299  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5300  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5301  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5302  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5303  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5304  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5305  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5306  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5307  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5308  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5309  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5310  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5311  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  5312  0000BE  0010               	retfie	
  5313  0000C0                     __end_of_InterruptHandlerLow:
  5314                           	opt stack 0
  5315                           pclatu	equ	0xFFB
  5316                           pclath	equ	0xFFA
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon	equ	0xFF2
  5324                           postinc0	equ	0xFEE
  5325                           fsr0h	equ	0xFEA
  5326                           fsr0l	equ	0xFE9
  5327                           wreg	equ	0xFE8
  5328                           indf1	equ	0xFE7
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           bsr	equ	0xFE0
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _uart_trans_int_handler *****************
  5340 ;; Defined at:
  5341 ;;		line 11 in file "src/my_uart.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  data            2   30[COMRAM] PTR unsigned char 
  5346 ;;		 -> NULL(0), 
  5347 ;;  length          1   34[COMRAM] char 
  5348 ;;  msgtype         1   33[COMRAM] unsigned char 
  5349 ;;  curIndex        1   32[COMRAM] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;		None               void
  5352 ;; Registers used:
  5353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;Total ram usage:        6 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    8
  5366 ;; This function calls:
  5367 ;;		_FromMainLow_recvmsg
  5368 ;; This function is called by:
  5369 ;;		_InterruptHandlerLow
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text33
  5374  0019FA                     __ptext33:
  5375                           	opt stack 0
  5376  0019FA                     _uart_trans_int_handler:
  5377                           	opt stack 16
  5378                           
  5379                           ;my_uart.c: 13: unsigned char* data = (0);
  5380                           
  5381                           ;incstack = 0
  5382  0019FA  0E00               	movlw	0
  5383  0019FC  6E20               	movwf	uart_trans_int_handler@data+1,c
  5384  0019FE  0E00               	movlw	0
  5385  001A00  6E1F               	movwf	uart_trans_int_handler@data,c
  5386                           
  5387                           ;my_uart.c: 14: unsigned char msgtype;
  5388                           ;my_uart.c: 15: unsigned char curIndex;
  5389                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5390  001A02  0E00               	movlw	high uart_trans_int_handler@msgtype
  5391  001A04  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5392  001A06  0E22               	movlw	low uart_trans_int_handler@msgtype
  5393  001A08  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5394  001A0A  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5395  001A0E  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5396  001A12  0E0A               	movlw	10
  5397  001A14  EC3E  F00F         	call	_FromMainLow_recvmsg
  5398  001A18  6E23               	movwf	uart_trans_int_handler@length,c
  5399                           
  5400                           ;my_uart.c: 17: if (length < 0) {
  5401  001A1A  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5402  001A1C  D019               	goto	i1l342
  5403                           
  5404                           ;my_uart.c: 26: curIndex = 0;
  5405                           
  5406                           ;my_uart.c: 24: }
  5407                           ;my_uart.c: 25: } else {
  5408                           
  5409                           ;my_uart.c: 22: else{
  5410                           
  5411                           ;my_uart.c: 21: }
  5412  001A1E  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5413  001A20  0E00               	movlw	0
  5414  001A22  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5415  001A24  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5416                           
  5417                           ;my_uart.c: 27: while(curIndex < length){
  5418  001A26  D00D               	goto	i1l4054
  5419  001A28                     i1l345:
  5420  001A28  A2AD               	btfss	4013,1,c	;volatile
  5421  001A2A  D7FE               	goto	i1l345
  5422                           
  5423                           ;my_uart.c: 29: TXREG1 = data[curIndex];
  5424  001A2C  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5425  001A2E  0D01               	mullw	1
  5426  001A30  50F3               	movf	prodl,w,c
  5427  001A32  241F               	addwf	uart_trans_int_handler@data,w,c
  5428  001A34  6ED9               	movwf	fsr2l,c
  5429  001A36  50F4               	movf	prodh,w,c
  5430  001A38  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5431  001A3A  6EDA               	movwf	fsr2h,c
  5432  001A3C  50DF               	movf	indf2,w,c
  5433  001A3E  6EAE               	movwf	4014,c	;volatile
  5434                           
  5435                           ;my_uart.c: 30: curIndex++;
  5436  001A40  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5437  001A42                     i1l4054:
  5438  001A42  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5439  001A44  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5440  001A46  D004               	goto	i1l342
  5441  001A48  0AFF               	xorlw	255
  5442  001A4A  2423               	addwf	uart_trans_int_handler@length,w,c
  5443  001A4C  B0D8               	btfsc	status,0,c
  5444  001A4E  D7EC               	goto	i1l345
  5445  001A50                     i1l342:
  5446                           
  5447                           ;my_uart.c: 31: }
  5448                           ;my_uart.c: 32: }
  5449                           ;my_uart.c: 34: PIE1bits.TXIE = 0;
  5450  001A50  989D               	bcf	3997,4,c	;volatile
  5451  001A52  0012               	return	
  5452  001A54                     __end_of_uart_trans_int_handler:
  5453                           	opt stack 0
  5454                           pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           fsr0h	equ	0xFEA
  5465                           fsr0l	equ	0xFE9
  5466                           wreg	equ	0xFE8
  5467                           indf1	equ	0xFE7
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           bsr	equ	0xFE0
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           postdec2	equ	0xFDD
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _FromMainLow_recvmsg *****************
  5479 ;; Defined at:
  5480 ;;		line 159 in file "src/messages.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  maxlength       1    wreg     unsigned char 
  5483 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5484 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5485 ;;  data            2   26[COMRAM] PTR void 
  5486 ;;		 -> NULL(0), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  maxlength       1   28[COMRAM] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      char 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;Total ram usage:        5 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    7
  5505 ;; This function calls:
  5506 ;;		i1_recv_msg
  5507 ;; This function is called by:
  5508 ;;		_uart_trans_int_handler
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text34
  5513  001E7C                     __ptext34:
  5514                           	opt stack 0
  5515  001E7C                     _FromMainLow_recvmsg:
  5516                           	opt stack 16
  5517                           
  5518                           ;incstack = 0
  5519                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5520  001E7C  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5521                           
  5522                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5523  001E80  0101               	movlb	1	; () banked
  5524  001E82  0E01               	movlw	high _FromMainLow_MQ
  5525  001E84  6E0C               	movwf	i1recv_msg@qptr+1,c
  5526  001E86  0101               	movlb	1	; () banked
  5527  001E88  0E36               	movlw	low _FromMainLow_MQ
  5528  001E8A  6E0B               	movwf	i1recv_msg@qptr,c
  5529  001E8C  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5530  001E90  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5531  001E94  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5532  001E98  6A11               	clrf	i1recv_msg@data+1,c
  5533  001E9A  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5534  001E9E  ECFB  F008         	call	i1_recv_msg	;wreg free
  5535  001EA2  0012               	return	
  5536  001EA4                     __end_of_FromMainLow_recvmsg:
  5537                           	opt stack 0
  5538                           pclatu	equ	0xFFB
  5539                           pclath	equ	0xFFA
  5540                           tblptru	equ	0xFF8
  5541                           tblptrh	equ	0xFF7
  5542                           tblptrl	equ	0xFF6
  5543                           tablat	equ	0xFF5
  5544                           prodh	equ	0xFF4
  5545                           prodl	equ	0xFF3
  5546                           intcon	equ	0xFF2
  5547                           postinc0	equ	0xFEE
  5548                           fsr0h	equ	0xFEA
  5549                           fsr0l	equ	0xFE9
  5550                           wreg	equ	0xFE8
  5551                           indf1	equ	0xFE7
  5552                           fsr1h	equ	0xFE2
  5553                           fsr1l	equ	0xFE1
  5554                           bsr	equ	0xFE0
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function i1_recv_msg *****************
  5563 ;; Defined at:
  5564 ;;		line 63 in file "src/messages.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5567 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5568 ;;  maxlength       1   12[COMRAM] unsigned char 
  5569 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5570 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5571 ;;  data            2   15[COMRAM] PTR void 
  5572 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5575 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5576 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5577 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5578 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      char 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5588 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5592 ;;Total ram usage:       14 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:    6
  5595 ;; This function calls:
  5596 ;;		i1_memcpy
  5597 ;; This function is called by:
  5598 ;;		_FromMainLow_recvmsg
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text35
  5603  0011F6                     __ptext35:
  5604                           	opt stack 0
  5605  0011F6                     i1_recv_msg:
  5606                           	opt stack 16
  5607                           
  5608                           ;messages.c: 64: unsigned char slot;
  5609                           ;messages.c: 68: msg *qmsg;
  5610                           ;messages.c: 69: size_t tlength;
  5611                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5612                           
  5613                           ;incstack = 0
  5614  0011F6  EE20 F035          	lfsr	2,53
  5615  0011FA  500B               	movf	i1recv_msg@qptr,w,c
  5616  0011FC  26D9               	addwf	fsr2l,f,c
  5617  0011FE  500C               	movf	i1recv_msg@qptr+1,w,c
  5618  001200  22DA               	addwfc	fsr2h,f,c
  5619  001202  50DF               	movf	indf2,w,c
  5620  001204  6E14               	movwf	i1recv_msg@slot,c
  5621                           
  5622                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5623  001206  5014               	movf	i1recv_msg@slot,w,c
  5624  001208  0D0D               	mullw	13
  5625  00120A  50F3               	movf	prodl,w,c
  5626  00120C  240B               	addwf	i1recv_msg@qptr,w,c
  5627  00120E  6E17               	movwf	i1recv_msg@qmsg,c
  5628  001210  50F4               	movf	prodh,w,c
  5629  001212  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5630  001214  6E18               	movwf	i1recv_msg@qmsg+1,c
  5631                           
  5632                           ;messages.c: 74: if (qmsg->full == 1) {
  5633  001216  0E01               	movlw	1
  5634  001218  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5635  00121C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5636  001220  62DF               	cpfseq	indf2,c
  5637  001222  D050               	goto	i1l4002
  5638                           
  5639                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5640  001224  EE20 F001          	lfsr	2,1
  5641  001228  5017               	movf	i1recv_msg@qmsg,w,c
  5642  00122A  26D9               	addwf	fsr2l,f,c
  5643  00122C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5644  00122E  22DA               	addwfc	fsr2h,f,c
  5645  001230  50DF               	movf	indf2,w,c
  5646  001232  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5647  001234  B0D8               	btfsc	status,0,c
  5648  001236  D002               	goto	i1l3986
  5649                           
  5650                           ;messages.c: 77: return (-3);
  5651  001238  0EFD               	movlw	253
  5652  00123A  0012               	return	
  5653  00123C                     i1l3986:
  5654                           
  5655                           ;messages.c: 78: }
  5656                           ;messages.c: 80: tlength = qmsg->length;
  5657  00123C  EE20 F001          	lfsr	2,1
  5658  001240  5017               	movf	i1recv_msg@qmsg,w,c
  5659  001242  26D9               	addwf	fsr2l,f,c
  5660  001244  5018               	movf	i1recv_msg@qmsg+1,w,c
  5661  001246  22DA               	addwfc	fsr2h,f,c
  5662  001248  50DF               	movf	indf2,w,c
  5663  00124A  6E12               	movwf	??i1_recv_msg& (0+255),c
  5664  00124C  5012               	movf	??i1_recv_msg,w,c
  5665  00124E  6E15               	movwf	i1recv_msg@tlength,c
  5666  001250  6A16               	clrf	i1recv_msg@tlength+1,c
  5667                           
  5668                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5669  001252  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5670  001256  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5671  00125A  0E03               	movlw	3
  5672  00125C  2417               	addwf	i1recv_msg@qmsg,w,c
  5673  00125E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5674  001260  0E00               	movlw	0
  5675  001262  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5676  001264  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5677  001266  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5678  00126A  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5679  00126E  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5680  001272  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5681  001276  EC37  F00E         	call	i1_memcpy	;wreg free
  5682                           
  5683                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5684  00127A  EE20 F035          	lfsr	2,53
  5685  00127E  500B               	movf	i1recv_msg@qptr,w,c
  5686  001280  26D9               	addwf	fsr2l,f,c
  5687  001282  500C               	movf	i1recv_msg@qptr+1,w,c
  5688  001284  22DA               	addwfc	fsr2h,f,c
  5689  001286  EE10 F035          	lfsr	1,53
  5690  00128A  500B               	movf	i1recv_msg@qptr,w,c
  5691  00128C  26E1               	addwf	fsr1l,f,c
  5692  00128E  500C               	movf	i1recv_msg@qptr+1,w,c
  5693  001290  22E2               	addwfc	fsr1h,f,c
  5694  001292  50E7               	movf	indf1,w,c
  5695  001294  6E12               	movwf	??i1_recv_msg& (0+255),c
  5696  001296  2812               	incf	??i1_recv_msg,w,c
  5697  001298  0B03               	andlw	3
  5698  00129A  6EDF               	movwf	indf2,c
  5699                           
  5700                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5701  00129C  EE20 F002          	lfsr	2,2
  5702  0012A0  5017               	movf	i1recv_msg@qmsg,w,c
  5703  0012A2  26D9               	addwf	fsr2l,f,c
  5704  0012A4  5018               	movf	i1recv_msg@qmsg+1,w,c
  5705  0012A6  22DA               	addwfc	fsr2h,f,c
  5706  0012A8  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5707  0012AC  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5708  0012B0  CFDF FFE7          	movff	indf2,indf1
  5709                           
  5710                           ;messages.c: 91: qmsg->full = 0;
  5711  0012B4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5712  0012B8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5713  0012BC  0E00               	movlw	0
  5714  0012BE  6EDF               	movwf	indf2,c
  5715                           
  5716                           ;messages.c: 92: return (tlength);
  5717  0012C0  5015               	movf	i1recv_msg@tlength,w,c
  5718  0012C2  0012               	return	
  5719  0012C4                     i1l4002:
  5720                           
  5721                           ;messages.c: 94: return (-4);
  5722  0012C4  0EFC               	movlw	252
  5723  0012C6  0012               	return	
  5724  0012C8                     __end_ofi1_recv_msg:
  5725                           	opt stack 0
  5726                           pclatu	equ	0xFFB
  5727                           pclath	equ	0xFFA
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           prodh	equ	0xFF4
  5733                           prodl	equ	0xFF3
  5734                           intcon	equ	0xFF2
  5735                           postinc0	equ	0xFEE
  5736                           fsr0h	equ	0xFEA
  5737                           fsr0l	equ	0xFE9
  5738                           wreg	equ	0xFE8
  5739                           indf1	equ	0xFE7
  5740                           fsr1h	equ	0xFE2
  5741                           fsr1l	equ	0xFE1
  5742                           bsr	equ	0xFE0
  5743                           indf2	equ	0xFDF
  5744                           postinc2	equ	0xFDE
  5745                           postdec2	equ	0xFDD
  5746                           fsr2h	equ	0xFDA
  5747                           fsr2l	equ	0xFD9
  5748                           status	equ	0xFD8
  5749                           
  5750 ;; *************** function _uart_recv_int_handler *****************
  5751 ;; Defined at:
  5752 ;;		line 37 in file "src/my_uart.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;Total ram usage:        1 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    8
  5773 ;; This function calls:
  5774 ;;		_Read1USART
  5775 ;;		i1_ToMainLow_sendmsg
  5776 ;; This function is called by:
  5777 ;;		_InterruptHandlerLow
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text36
  5782  00143E                     __ptext36:
  5783                           	opt stack 0
  5784  00143E                     _uart_recv_int_handler:
  5785                           	opt stack 16
  5786                           
  5787                           ;my_uart.c: 43: if ((PIR1bits.RC1IF)) {
  5788                           
  5789                           ;incstack = 0
  5790  00143E  AA9E               	btfss	3998,5,c	;volatile
  5791  001440  D03C               	goto	i1l4032
  5792                           
  5793                           ;my_uart.c: 44: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5794  001442  EE20 F004          	lfsr	2,4
  5795  001446  5035               	movf	_uc_ptr,w,c
  5796  001448  26D9               	addwf	fsr2l,f,c
  5797  00144A  5036               	movf	_uc_ptr+1,w,c
  5798  00144C  22DA               	addwfc	fsr2h,f,c
  5799  00144E  50DF               	movf	indf2,w,c
  5800  001450  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5801  001452  501B               	movf	??_uart_recv_int_handler,w,c
  5802  001454  0D01               	mullw	1
  5803  001456  50F3               	movf	prodl,w,c
  5804  001458  2435               	addwf	_uc_ptr,w,c
  5805  00145A  6ED9               	movwf	fsr2l,c
  5806  00145C  50F4               	movf	prodh,w,c
  5807  00145E  2036               	addwfc	_uc_ptr+1,w,c
  5808  001460  6EDA               	movwf	fsr2h,c
  5809  001462  EC86  F00F         	call	_Read1USART	;wreg free
  5810  001466  6EDF               	movwf	indf2,c
  5811                           
  5812                           ;my_uart.c: 51: uc_ptr->buflen++;
  5813  001468  EE20 F004          	lfsr	2,4
  5814  00146C  5035               	movf	_uc_ptr,w,c
  5815  00146E  26D9               	addwf	fsr2l,f,c
  5816  001470  5036               	movf	_uc_ptr+1,w,c
  5817  001472  22DA               	addwfc	fsr2h,f,c
  5818  001474  2ADF               	incf	indf2,f,c
  5819                           
  5820                           ;my_uart.c: 53: if (uc_ptr->buflen == 4) {
  5821  001476  EE20 F004          	lfsr	2,4
  5822  00147A  5035               	movf	_uc_ptr,w,c
  5823  00147C  26D9               	addwf	fsr2l,f,c
  5824  00147E  5036               	movf	_uc_ptr+1,w,c
  5825  001480  22DA               	addwfc	fsr2h,f,c
  5826  001482  0E04               	movlw	4
  5827  001484  62DF               	cpfseq	indf2,c
  5828  001486  D019               	goto	i1l4032
  5829                           
  5830                           ;my_uart.c: 54: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5831  001488  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5832  00148A  0E20               	movlw	32
  5833  00148C  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5834  00148E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5835  001490  C036  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5836  001494  C035  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5837  001498  EE20 F004          	lfsr	2,4
  5838  00149C  5035               	movf	_uc_ptr,w,c
  5839  00149E  26D9               	addwf	fsr2l,f,c
  5840  0014A0  5036               	movf	_uc_ptr+1,w,c
  5841  0014A2  22DA               	addwfc	fsr2h,f,c
  5842  0014A4  50DF               	movf	indf2,w,c
  5843  0014A6  EC52  F00F         	call	i1_ToMainLow_sendmsg
  5844                           
  5845                           ;my_uart.c: 55: uc_ptr->buflen = 0;
  5846  0014AA  EE20 F004          	lfsr	2,4
  5847  0014AE  5035               	movf	_uc_ptr,w,c
  5848  0014B0  26D9               	addwf	fsr2l,f,c
  5849  0014B2  5036               	movf	_uc_ptr+1,w,c
  5850  0014B4  22DA               	addwfc	fsr2h,f,c
  5851  0014B6  0E00               	movlw	0
  5852  0014B8  6EDF               	movwf	indf2,c
  5853  0014BA                     i1l4032:
  5854                           
  5855                           ;my_uart.c: 56: }
  5856                           ;my_uart.c: 57: }
  5857                           ;my_uart.c: 62: if (USART1_Status.OVERRUN_ERROR == 1) {
  5858  0014BA  A637               	btfss	_USART1_Status,3,c
  5859  0014BC  0012               	return	
  5860                           
  5861                           ;my_uart.c: 69: RCSTAbits.CREN = 0;
  5862  0014BE  98AC               	bcf	4012,4,c	;volatile
  5863                           
  5864                           ;my_uart.c: 70: RCSTAbits.CREN = 1;
  5865  0014C0  88AC               	bsf	4012,4,c	;volatile
  5866                           
  5867                           ;my_uart.c: 71: ToMainLow_sendmsg(0, 30, (void *) 0);
  5868  0014C2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5869  0014C4  0E1E               	movlw	30
  5870  0014C6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5871  0014C8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5872  0014CA  0E00               	movlw	0
  5873  0014CC  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5874  0014CE  0E00               	movlw	0
  5875  0014D0  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5876  0014D2  0E00               	movlw	0
  5877  0014D4  EC52  F00F         	call	i1_ToMainLow_sendmsg
  5878  0014D8  0012               	return	
  5879  0014DA                     __end_of_uart_recv_int_handler:
  5880                           	opt stack 0
  5881                           pclatu	equ	0xFFB
  5882                           pclath	equ	0xFFA
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           postinc0	equ	0xFEE
  5891                           fsr0h	equ	0xFEA
  5892                           fsr0l	equ	0xFE9
  5893                           wreg	equ	0xFE8
  5894                           indf1	equ	0xFE7
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           bsr	equ	0xFE0
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function _Read1USART *****************
  5906 ;; Defined at:
  5907 ;;		line 17 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  data            1    0[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      unsigned char 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;Total ram usage:        1 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    5
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_uart_recv_int_handler
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text37
  5936  001F0C                     __ptext37:
  5937                           	opt stack 0
  5938  001F0C                     _Read1USART:
  5939                           	opt stack 18
  5940                           
  5941                           ;incstack = 0
  5942  001F0C  0EF2               	movlw	242
  5943  001F0E  1637               	andwf	_USART1_Status,f,c
  5944  001F10  ACAC               	btfss	4012,6,c	;volatile
  5945  001F12  D003               	goto	i1l517
  5946  001F14  9037               	bcf	_USART1_Status,0,c
  5947  001F16  B0AC               	btfsc	4012,0,c	;volatile
  5948  001F18  8037               	bsf	_USART1_Status,0,c
  5949  001F1A                     i1l517:
  5950  001F1A  B4AC               	btfsc	4012,2,c	;volatile
  5951  001F1C  8437               	bsf	_USART1_Status,2,c
  5952  001F1E  B2AC               	btfsc	4012,1,c	;volatile
  5953  001F20  8637               	bsf	_USART1_Status,3,c
  5954  001F22  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5955  001F26  5001               	movf	Read1USART@data,w,c
  5956  001F28  0012               	return	
  5957  001F2A                     __end_of_Read1USART:
  5958                           	opt stack 0
  5959                           pclatu	equ	0xFFB
  5960                           pclath	equ	0xFFA
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           postinc0	equ	0xFEE
  5969                           fsr0h	equ	0xFEA
  5970                           fsr0l	equ	0xFE9
  5971                           wreg	equ	0xFE8
  5972                           indf1	equ	0xFE7
  5973                           fsr1h	equ	0xFE2
  5974                           fsr1l	equ	0xFE1
  5975                           bsr	equ	0xFE0
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           postdec2	equ	0xFDD
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _timer1_int_handler *****************
  5984 ;; Defined at:
  5985 ;;		line 36 in file "src/user_interrupts.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  result          2   27[COMRAM] unsigned int 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;		None               void
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        3 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    8
  6006 ;; This function calls:
  6007 ;;		_WriteTimer1
  6008 ;;		i1_ReadTimer1
  6009 ;;		i1_ToMainLow_sendmsg
  6010 ;; This function is called by:
  6011 ;;		_InterruptHandlerLow
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text38
  6016  001DFA                     __ptext38:
  6017                           	opt stack 0
  6018  001DFA                     _timer1_int_handler:
  6019                           	opt stack 16
  6020                           
  6021                           ;user_interrupts.c: 37: unsigned int result;
  6022                           ;user_interrupts.c: 44: result = ReadTimer1();
  6023                           
  6024                           ;incstack = 0
  6025  001DFA  ECBB  F00F         	call	i1_ReadTimer1	;wreg free
  6026  001DFE  C001  F01C         	movff	?i1_ReadTimer1,timer1_int_handler@result
  6027  001E02  C002  F01D         	movff	?i1_ReadTimer1+1,timer1_int_handler@result+1
  6028                           
  6029                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  6030  001E06  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6031  001E08  0E0B               	movlw	11
  6032  001E0A  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6033  001E0C  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6034  001E0E  0E00               	movlw	0
  6035  001E10  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6036  001E12  0E00               	movlw	0
  6037  001E14  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6038  001E16  0E00               	movlw	0
  6039  001E18  EC52  F00F         	call	i1_ToMainLow_sendmsg
  6040                           
  6041                           ;user_interrupts.c: 48: WriteTimer1(0);
  6042  001E1C  0E00               	movlw	0
  6043  001E1E  6E02               	movwf	WriteTimer1@timer1+1,c
  6044  001E20  0E00               	movlw	0
  6045  001E22  6E01               	movwf	WriteTimer1@timer1,c
  6046  001E24  ECC4  F00F         	call	_WriteTimer1	;wreg free
  6047  001E28  0012               	return	
  6048  001E2A                     __end_of_timer1_int_handler:
  6049                           	opt stack 0
  6050                           pclatu	equ	0xFFB
  6051                           pclath	equ	0xFFA
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           prodh	equ	0xFF4
  6057                           prodl	equ	0xFF3
  6058                           intcon	equ	0xFF2
  6059                           postinc0	equ	0xFEE
  6060                           fsr0h	equ	0xFEA
  6061                           fsr0l	equ	0xFE9
  6062                           wreg	equ	0xFE8
  6063                           indf1	equ	0xFE7
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           bsr	equ	0xFE0
  6067                           indf2	equ	0xFDF
  6068                           postinc2	equ	0xFDE
  6069                           postdec2	equ	0xFDD
  6070                           fsr2h	equ	0xFDA
  6071                           fsr2l	equ	0xFD9
  6072                           status	equ	0xFD8
  6073                           
  6074 ;; *************** function i1_ToMainLow_sendmsg *****************
  6075 ;; Defined at:
  6076 ;;		line 103 in file "src/messages.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  length          1    wreg     unsigned char 
  6079 ;;  msgtype         1   22[COMRAM] unsigned char 
  6080 ;;  data            2   23[COMRAM] PTR void 
  6081 ;;		 -> NULL(0), main@t1thread_data(12), main@uc(5), 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  length          1   25[COMRAM] unsigned char 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      char 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;Total ram usage:        4 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    7
  6100 ;; This function calls:
  6101 ;;		i1_send_msg
  6102 ;; This function is called by:
  6103 ;;		_uart_recv_int_handler
  6104 ;;		_timer1_int_handler
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text39
  6109  001EA4                     __ptext39:
  6110                           	opt stack 0
  6111  001EA4                     i1_ToMainLow_sendmsg:
  6112                           	opt stack 16
  6113                           
  6114                           ;incstack = 0
  6115                           ;i1ToMainLow_sendmsg@length stored from wreg
  6116  001EA4  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6117                           
  6118                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6119                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6120  001EA8  0100               	movlb	0	; () banked
  6121  001EAA  0E00               	movlw	high _ToMainLow_MQ
  6122  001EAC  6E0C               	movwf	i1send_msg@qptr+1,c
  6123  001EAE  0100               	movlb	0	; () banked
  6124  001EB0  0E61               	movlw	low _ToMainLow_MQ
  6125  001EB2  6E0B               	movwf	i1send_msg@qptr,c
  6126  001EB4  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6127  001EB8  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6128  001EBC  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6129  001EC0  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6130  001EC4  ECCA  F009         	call	i1_send_msg	;wreg free
  6131  001EC8  0012               	return	
  6132  001ECA                     __end_ofi1_ToMainLow_sendmsg:
  6133                           	opt stack 0
  6134                           pclatu	equ	0xFFB
  6135                           pclath	equ	0xFFA
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           postinc0	equ	0xFEE
  6144                           fsr0h	equ	0xFEA
  6145                           fsr0l	equ	0xFE9
  6146                           wreg	equ	0xFE8
  6147                           indf1	equ	0xFE7
  6148                           fsr1h	equ	0xFE2
  6149                           fsr1l	equ	0xFE1
  6150                           bsr	equ	0xFE0
  6151                           indf2	equ	0xFDF
  6152                           postinc2	equ	0xFDE
  6153                           postdec2	equ	0xFDD
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function i1_send_msg *****************
  6159 ;; Defined at:
  6160 ;;		line 24 in file "src/messages.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6163 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6164 ;;  length          1   12[COMRAM] unsigned char 
  6165 ;;  msgtype         1   13[COMRAM] unsigned char 
  6166 ;;  data            2   14[COMRAM] PTR void 
  6167 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  6168 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6171 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6172 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6173 ;;  send_msg        2   17[COMRAM] unsigned int 
  6174 ;;  send_msg        1   19[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      char 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6184 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;Total ram usage:       12 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    6
  6191 ;; This function calls:
  6192 ;;		i1_memcpy
  6193 ;; This function is called by:
  6194 ;;		i1_ToMainLow_sendmsg
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text40
  6199  001394                     __ptext40:
  6200                           	opt stack 0
  6201  001394                     i1_send_msg:
  6202                           	opt stack 16
  6203                           
  6204                           ;messages.c: 25: unsigned char slot;
  6205                           ;messages.c: 27: msg *qmsg;
  6206                           ;messages.c: 28: size_t tlength = length;
  6207                           
  6208                           ;incstack = 0
  6209  001394  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6210  001398  6A13               	clrf	i1send_msg@tlength+1,c
  6211                           
  6212                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6213  00139A  EE20 F034          	lfsr	2,52
  6214  00139E  500B               	movf	i1send_msg@qptr,w,c
  6215  0013A0  26D9               	addwf	fsr2l,f,c
  6216  0013A2  500C               	movf	i1send_msg@qptr+1,w,c
  6217  0013A4  22DA               	addwfc	fsr2h,f,c
  6218  0013A6  50DF               	movf	indf2,w,c
  6219  0013A8  6E14               	movwf	i1send_msg@slot,c
  6220                           
  6221                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6222  0013AA  5014               	movf	i1send_msg@slot,w,c
  6223  0013AC  0D0D               	mullw	13
  6224  0013AE  50F3               	movf	prodl,w,c
  6225  0013B0  240B               	addwf	i1send_msg@qptr,w,c
  6226  0013B2  6E15               	movwf	i1send_msg@qmsg,c
  6227  0013B4  50F4               	movf	prodh,w,c
  6228  0013B6  200C               	addwfc	i1send_msg@qptr+1,w,c
  6229  0013B8  6E16               	movwf	i1send_msg@qmsg+1,c
  6230                           
  6231                           ;messages.c: 41: if (qmsg->full != 0) {
  6232  0013BA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6233  0013BE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6234  0013C2  50DF               	movf	indf2,w,c
  6235  0013C4  B4D8               	btfsc	status,2,c
  6236  0013C6  D002               	goto	i1l3962
  6237                           
  6238                           ;messages.c: 42: return (-1);
  6239  0013C8  0EFF               	movlw	255
  6240  0013CA  0012               	return	
  6241  0013CC                     i1l3962:
  6242                           
  6243                           ;messages.c: 43: }
  6244                           ;messages.c: 46: qmsg->length = length;
  6245  0013CC  EE20 F001          	lfsr	2,1
  6246  0013D0  5015               	movf	i1send_msg@qmsg,w,c
  6247  0013D2  26D9               	addwf	fsr2l,f,c
  6248  0013D4  5016               	movf	i1send_msg@qmsg+1,w,c
  6249  0013D6  22DA               	addwfc	fsr2h,f,c
  6250  0013D8  C00D  FFDF         	movff	i1send_msg@length,indf2
  6251                           
  6252                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6253  0013DC  EE20 F002          	lfsr	2,2
  6254  0013E0  5015               	movf	i1send_msg@qmsg,w,c
  6255  0013E2  26D9               	addwf	fsr2l,f,c
  6256  0013E4  5016               	movf	i1send_msg@qmsg+1,w,c
  6257  0013E6  22DA               	addwfc	fsr2h,f,c
  6258  0013E8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6259                           
  6260                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6261  0013EC  0E03               	movlw	3
  6262  0013EE  2415               	addwf	i1send_msg@qmsg,w,c
  6263  0013F0  6E01               	movwf	i1memcpy@d1,c
  6264  0013F2  0E00               	movlw	0
  6265  0013F4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6266  0013F6  6E02               	movwf	i1memcpy@d1+1,c
  6267  0013F8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6268  0013FC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6269  001400  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6270  001404  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6271  001408  EC37  F00E         	call	i1_memcpy	;wreg free
  6272                           
  6273                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6274  00140C  EE20 F034          	lfsr	2,52
  6275  001410  500B               	movf	i1send_msg@qptr,w,c
  6276  001412  26D9               	addwf	fsr2l,f,c
  6277  001414  500C               	movf	i1send_msg@qptr+1,w,c
  6278  001416  22DA               	addwfc	fsr2h,f,c
  6279  001418  EE10 F034          	lfsr	1,52
  6280  00141C  500B               	movf	i1send_msg@qptr,w,c
  6281  00141E  26E1               	addwf	fsr1l,f,c
  6282  001420  500C               	movf	i1send_msg@qptr+1,w,c
  6283  001422  22E2               	addwfc	fsr1h,f,c
  6284  001424  50E7               	movf	indf1,w,c
  6285  001426  6E11               	movwf	??i1_send_msg& (0+255),c
  6286  001428  2811               	incf	??i1_send_msg,w,c
  6287  00142A  0B03               	andlw	3
  6288  00142C  6EDF               	movwf	indf2,c
  6289                           
  6290                           ;messages.c: 59: qmsg->full = 1;
  6291  00142E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6292  001432  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6293  001436  0E01               	movlw	1
  6294  001438  6EDF               	movwf	indf2,c
  6295                           
  6296                           ;messages.c: 60: return (1);
  6297  00143A  0E01               	movlw	1
  6298  00143C  0012               	return	
  6299  00143E                     __end_ofi1_send_msg:
  6300                           	opt stack 0
  6301                           pclatu	equ	0xFFB
  6302                           pclath	equ	0xFFA
  6303                           tblptru	equ	0xFF8
  6304                           tblptrh	equ	0xFF7
  6305                           tblptrl	equ	0xFF6
  6306                           tablat	equ	0xFF5
  6307                           prodh	equ	0xFF4
  6308                           prodl	equ	0xFF3
  6309                           intcon	equ	0xFF2
  6310                           postinc0	equ	0xFEE
  6311                           fsr0h	equ	0xFEA
  6312                           fsr0l	equ	0xFE9
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           fsr1h	equ	0xFE2
  6316                           fsr1l	equ	0xFE1
  6317                           bsr	equ	0xFE0
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           postdec2	equ	0xFDD
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function i1_memcpy *****************
  6326 ;; Defined at:
  6327 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  d1              2    0[COMRAM] PTR void 
  6330 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6331 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6332 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6333 ;;  s1              2    2[COMRAM] PTR const void 
  6334 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6335 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6336 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6337 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6338 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6339 ;;  n               2    4[COMRAM] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6342 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6343 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6344 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6345 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6346 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  6347 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6348 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6349 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6350 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  2    0[COMRAM] PTR void 
  6353 ;; Registers used:
  6354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:       10 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    5
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		i1_send_msg
  6371 ;;		i1_recv_msg
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text41
  6376  001C6E                     __ptext41:
  6377                           	opt stack 0
  6378  001C6E                     i1_memcpy:
  6379                           	opt stack 16
  6380                           
  6381                           ;incstack = 0
  6382  001C6E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6383  001C72  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6384  001C76  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6385  001C7A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6386  001C7E  D00E               	goto	i1l3938
  6387  001C80                     i1l3932:
  6388  001C80  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6389  001C84  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6390  001C88  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6391  001C8C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6392  001C90  CFDF FFE7          	movff	indf2,indf1
  6393  001C94  4A09               	infsnz	i1memcpy@s,f,c
  6394  001C96  2A0A               	incf	i1memcpy@s+1,f,c
  6395  001C98  4A07               	infsnz	i1memcpy@d,f,c
  6396  001C9A  2A08               	incf	i1memcpy@d+1,f,c
  6397  001C9C                     i1l3938:
  6398  001C9C  0605               	decf	i1memcpy@n,f,c
  6399  001C9E  A0D8               	btfss	status,0,c
  6400  001CA0  0606               	decf	i1memcpy@n+1,f,c
  6401  001CA2  2805               	incf	i1memcpy@n& (0+255),w,c
  6402  001CA4  B4D8               	btfsc	status,2,c
  6403  001CA6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6404  001CA8  B4D8               	btfsc	status,2,c
  6405                           
  6406                           ;	Return value of i1_memcpy is never used
  6407  001CAA  0012               	return	
  6408  001CAC  D7E9               	goto	i1l3932
  6409  001CAE                     __end_ofi1_memcpy:
  6410                           	opt stack 0
  6411                           pclatu	equ	0xFFB
  6412                           pclath	equ	0xFFA
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           prodh	equ	0xFF4
  6418                           prodl	equ	0xFF3
  6419                           intcon	equ	0xFF2
  6420                           postinc0	equ	0xFEE
  6421                           fsr0h	equ	0xFEA
  6422                           fsr0l	equ	0xFE9
  6423                           wreg	equ	0xFE8
  6424                           indf1	equ	0xFE7
  6425                           fsr1h	equ	0xFE2
  6426                           fsr1l	equ	0xFE1
  6427                           bsr	equ	0xFE0
  6428                           indf2	equ	0xFDF
  6429                           postinc2	equ	0xFDE
  6430                           postdec2	equ	0xFDD
  6431                           fsr2h	equ	0xFDA
  6432                           fsr2l	equ	0xFD9
  6433                           status	equ	0xFD8
  6434                           
  6435 ;; *************** function i1_ReadTimer1 *****************
  6436 ;; Defined at:
  6437 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  ReadTimer1      2    2[COMRAM] struct Timers
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2    0[COMRAM] unsigned int 
  6444 ;; Registers used:
  6445 ;;		None
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;Total ram usage:        4 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    5
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_timer1_int_handler
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text42
  6466  001F76                     __ptext42:
  6467                           	opt stack 0
  6468  001F76                     i1_ReadTimer1:
  6469                           	opt stack 18
  6470                           
  6471                           ;incstack = 0
  6472  001F76  CFCE F003          	movff	4046,i1ReadTimer1@timer	;volatile
  6473  001F7A  CFCF F004          	movff	4047,i1ReadTimer1@timer+1	;volatile
  6474  001F7E  C003  F001         	movff	i1ReadTimer1@timer,?i1_ReadTimer1
  6475  001F82  C004  F002         	movff	i1ReadTimer1@timer+1,?i1_ReadTimer1+1
  6476  001F86  0012               	return	
  6477  001F88                     __end_ofi1_ReadTimer1:
  6478                           	opt stack 0
  6479                           pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           postinc0	equ	0xFEE
  6489                           fsr0h	equ	0xFEA
  6490                           fsr0l	equ	0xFE9
  6491                           wreg	equ	0xFE8
  6492                           indf1	equ	0xFE7
  6493                           fsr1h	equ	0xFE2
  6494                           fsr1l	equ	0xFE1
  6495                           bsr	equ	0xFE0
  6496                           indf2	equ	0xFDF
  6497                           postinc2	equ	0xFDE
  6498                           postdec2	equ	0xFDD
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8
  6502                           
  6503 ;; *************** function _WriteTimer1 *****************
  6504 ;; Defined at:
  6505 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  timer1          2    0[COMRAM] unsigned int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  timer           2    2[COMRAM] struct Timers
  6510 ;; Return value:  Size  Location     Type
  6511 ;;		None               void
  6512 ;; Registers used:
  6513 ;;		None
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6523 ;;Total ram usage:        4 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    5
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_timer1_int_handler
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text43
  6534  001F88                     __ptext43:
  6535                           	opt stack 0
  6536  001F88                     _WriteTimer1:
  6537                           	opt stack 18
  6538                           
  6539                           ;incstack = 0
  6540  001F88  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6541  001F8C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6542  001F90  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6543  001F94  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6544  001F98  0012               	return	
  6545  001F9A                     __end_of_WriteTimer1:
  6546                           	opt stack 0
  6547                           pclatu	equ	0xFFB
  6548                           pclath	equ	0xFFA
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           prodh	equ	0xFF4
  6554                           prodl	equ	0xFF3
  6555                           intcon	equ	0xFF2
  6556                           postinc0	equ	0xFEE
  6557                           fsr0h	equ	0xFEA
  6558                           fsr0l	equ	0xFE9
  6559                           wreg	equ	0xFE8
  6560                           indf1	equ	0xFE7
  6561                           fsr1h	equ	0xFE2
  6562                           fsr1l	equ	0xFE1
  6563                           bsr	equ	0xFE0
  6564                           indf2	equ	0xFDF
  6565                           postinc2	equ	0xFDE
  6566                           postdec2	equ	0xFDD
  6567                           fsr2h	equ	0xFDA
  6568                           fsr2l	equ	0xFD9
  6569                           status	equ	0xFD8
  6570                           
  6571 ;; *************** function _InterruptHandlerHigh *****************
  6572 ;; Defined at:
  6573 ;;		line 83 in file "src/interrupts.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;		None               void
  6580 ;; Registers used:
  6581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6589 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6590 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;Total ram usage:       14 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		_SleepIfOkay
  6596 ;;		_i2c_int_handler
  6597 ;;		_timer0_int_handler
  6598 ;; This function is called by:
  6599 ;;		Interrupt level 2
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	intcode
  6604  000008                     __pintcode:
  6605                           	opt stack 0
  6606  000008                     _InterruptHandlerHigh:
  6607                           	opt stack 16
  6608                           
  6609                           ;incstack = 0
  6610  000008  CFFA F0BC          	movff	pclath,??_InterruptHandlerHigh
  6611  00000C  CFFB F0BD          	movff	pclatu,??_InterruptHandlerHigh+1
  6612  000010  EF3C  F00B         	goto	int_func
  6613                           pclatu	equ	0xFFB
  6614                           pclath	equ	0xFFA
  6615                           tblptru	equ	0xFF8
  6616                           tblptrh	equ	0xFF7
  6617                           tblptrl	equ	0xFF6
  6618                           tablat	equ	0xFF5
  6619                           prodh	equ	0xFF4
  6620                           prodl	equ	0xFF3
  6621                           intcon	equ	0xFF2
  6622                           postinc0	equ	0xFEE
  6623                           fsr0h	equ	0xFEA
  6624                           fsr0l	equ	0xFE9
  6625                           wreg	equ	0xFE8
  6626                           indf1	equ	0xFE7
  6627                           fsr1h	equ	0xFE2
  6628                           fsr1l	equ	0xFE1
  6629                           bsr	equ	0xFE0
  6630                           indf2	equ	0xFDF
  6631                           postinc2	equ	0xFDE
  6632                           postdec2	equ	0xFDD
  6633                           fsr2h	equ	0xFDA
  6634                           fsr2l	equ	0xFD9
  6635                           status	equ	0xFD8
  6636                           
  6637                           	psect	intcode_body
  6638  001678                     __pintcode_body:
  6639                           	opt stack 16
  6640  001678                     int_func:
  6641                           	opt stack 16
  6642  001678  CFE9 F0BE          	movff	fsr0l,??_InterruptHandlerHigh+2
  6643  00167C  CFEA F0BF          	movff	fsr0h,??_InterruptHandlerHigh+3
  6644  001680  CFE1 F0C0          	movff	fsr1l,??_InterruptHandlerHigh+4
  6645  001684  CFE2 F0C1          	movff	fsr1h,??_InterruptHandlerHigh+5
  6646  001688  CFD9 F0C2          	movff	fsr2l,??_InterruptHandlerHigh+6
  6647  00168C  CFDA F0C3          	movff	fsr2h,??_InterruptHandlerHigh+7
  6648  001690  CFF3 F0C4          	movff	prodl,??_InterruptHandlerHigh+8
  6649  001694  CFF4 F0C5          	movff	prodh,??_InterruptHandlerHigh+9
  6650  001698  CFF6 F0C6          	movff	tblptrl,??_InterruptHandlerHigh+10
  6651  00169C  CFF7 F0C7          	movff	tblptrh,??_InterruptHandlerHigh+11
  6652  0016A0  CFF8 F0C8          	movff	tblptru,??_InterruptHandlerHigh+12
  6653  0016A4  CFF5 F0C9          	movff	tablat,??_InterruptHandlerHigh+13
  6654                           
  6655                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6656  0016A8  A69E               	btfss	3998,3,c	;volatile
  6657  0016AA  D003               	goto	i2l3248
  6658                           
  6659                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6660  0016AC  969E               	bcf	3998,3,c	;volatile
  6661                           
  6662                           ;interrupts.c: 92: i2c_int_handler();
  6663  0016AE  EC62  F000         	call	_i2c_int_handler	;wreg free
  6664  0016B2                     i2l3248:
  6665                           
  6666                           ;interrupts.c: 93: }
  6667                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6668  0016B2  A4F2               	btfss	intcon,2,c	;volatile
  6669  0016B4  D003               	goto	i2l3254
  6670                           
  6671                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6672  0016B6  94F2               	bcf	intcon,2,c	;volatile
  6673                           
  6674                           ;interrupts.c: 99: timer0_int_handler();
  6675  0016B8  ECF7  F00A         	call	_timer0_int_handler	;wreg free
  6676  0016BC                     i2l3254:
  6677                           
  6678                           ;interrupts.c: 100: }
  6679                           ;interrupts.c: 109: SleepIfOkay();
  6680  0016BC  EC33  F00C         	call	_SleepIfOkay	;wreg free
  6681  0016C0  C0C9  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6682  0016C4  C0C8  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6683  0016C8  C0C7  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6684  0016CC  C0C6  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6685  0016D0  C0C5  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6686  0016D4  C0C4  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6687  0016D8  C0C3  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6688  0016DC  C0C2  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6689  0016E0  C0C1  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6690  0016E4  C0C0  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6691  0016E8  C0BF  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6692  0016EC  C0BE  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6693  0016F0  C0BD  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6694  0016F4  C0BC  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6695  0016F8  0011               	retfie		f
  6696  0016FA                     __end_of_InterruptHandlerHigh:
  6697                           	opt stack 0
  6698                           pclatu	equ	0xFFB
  6699                           pclath	equ	0xFFA
  6700                           tblptru	equ	0xFF8
  6701                           tblptrh	equ	0xFF7
  6702                           tblptrl	equ	0xFF6
  6703                           tablat	equ	0xFF5
  6704                           prodh	equ	0xFF4
  6705                           prodl	equ	0xFF3
  6706                           intcon	equ	0xFF2
  6707                           postinc0	equ	0xFEE
  6708                           fsr0h	equ	0xFEA
  6709                           fsr0l	equ	0xFE9
  6710                           wreg	equ	0xFE8
  6711                           indf1	equ	0xFE7
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           bsr	equ	0xFE0
  6715                           indf2	equ	0xFDF
  6716                           postinc2	equ	0xFDE
  6717                           postdec2	equ	0xFDD
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _timer0_int_handler *****************
  6723 ;; Defined at:
  6724 ;;		line 16 in file "src/user_interrupts.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  val             2   34[BANK0 ] unsigned int 
  6729 ;;  msgtype         2   32[BANK0 ] int 
  6730 ;;  length          2   30[BANK0 ] int 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;		None               void
  6733 ;; Registers used:
  6734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6744 ;;Total ram usage:        7 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    3
  6747 ;; This function calls:
  6748 ;;		_FromMainHigh_recvmsg
  6749 ;;		_ToMainHigh_sendmsg
  6750 ;;		_WriteTimer0
  6751 ;; This function is called by:
  6752 ;;		_InterruptHandlerHigh
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text45
  6757  0015EE                     __ptext45:
  6758                           	opt stack 0
  6759  0015EE                     _timer0_int_handler:
  6760                           	opt stack 16
  6761                           
  6762                           ;user_interrupts.c: 17: unsigned int val;
  6763                           ;user_interrupts.c: 18: int length, msgtype;
  6764                           ;user_interrupts.c: 25: WriteTimer0(0);
  6765                           
  6766                           ;incstack = 0
  6767  0015EE  0E00               	movlw	0
  6768  0015F0  0100               	movlb	0	; () banked
  6769  0015F2  0100               	movlb	0	; () banked
  6770  0015F4  6F98               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6771  0015F6  0E00               	movlw	0
  6772  0015F8  0100               	movlb	0	; () banked
  6773  0015FA  6F97               	movwf	WriteTimer0@timer0& (0+255),b
  6774  0015FC  ECCD  F00F         	call	_WriteTimer0	;wreg free
  6775                           
  6776                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6777  001600  0100               	movlb	0	; () banked
  6778  001602  0E00               	movlw	high timer0_int_handler@msgtype
  6779  001604  0100               	movlb	0	; () banked
  6780  001606  0100               	movlb	0	; () banked
  6781  001608  6FB0               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6782  00160A  0100               	movlb	0	; () banked
  6783  00160C  0EB7               	movlw	low timer0_int_handler@msgtype
  6784  00160E  0100               	movlb	0	; () banked
  6785  001610  0100               	movlb	0	; () banked
  6786  001612  6FAF               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6787  001614  0100               	movlb	0	; () banked
  6788  001616  0E00               	movlw	high timer0_int_handler@val
  6789  001618  0100               	movlb	0	; () banked
  6790  00161A  0100               	movlb	0	; () banked
  6791  00161C  6FB2               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6792  00161E  0100               	movlb	0	; () banked
  6793  001620  0EB9               	movlw	low timer0_int_handler@val
  6794  001622  0100               	movlb	0	; () banked
  6795  001624  0100               	movlb	0	; () banked
  6796  001626  6FB1               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6797  001628  0E02               	movlw	2
  6798  00162A  ECF6  F00D         	call	_FromMainHigh_recvmsg
  6799  00162E  0100               	movlb	0	; () banked
  6800  001630  0100               	movlb	0	; () banked
  6801  001632  6FB5               	movwf	timer0_int_handler@length& (0+255),b
  6802  001634  0100               	movlb	0	; () banked
  6803  001636  6BB6               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6804  001638  0100               	movlb	0	; () banked
  6805  00163A  BFB5               	btfsc	timer0_int_handler@length& (0+255),7,b
  6806  00163C  07B6               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6810  00163E  0100               	movlb	0	; () banked
  6811  001640  0100               	movlb	0	; () banked
  6812  001642  51B5               	movf	timer0_int_handler@length& (0+255),w,b
  6813  001644  0A02               	xorlw	2
  6814  001646  11B6               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6815  001648  A4D8               	btfss	status,2,c
  6816  00164A  0012               	return	
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6820  00164C  0100               	movlb	0	; () banked
  6821  00164E  6FB4               	movwf	??_timer0_int_handler& (0+255),b
  6822  001650  0E0A               	movlw	10
  6823  001652  0100               	movlb	0	; () banked
  6824  001654  0100               	movlb	0	; () banked
  6825  001656  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6826  001658  0100               	movlb	0	; () banked
  6827  00165A  51B4               	movf	??_timer0_int_handler& (0+255),w,b
  6828  00165C  0100               	movlb	0	; () banked
  6829  00165E  0E00               	movlw	high timer0_int_handler@val
  6830  001660  0100               	movlb	0	; () banked
  6831  001662  0100               	movlb	0	; () banked
  6832  001664  6FAF               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6833  001666  0100               	movlb	0	; () banked
  6834  001668  0EB9               	movlw	low timer0_int_handler@val
  6835  00166A  0100               	movlb	0	; () banked
  6836  00166C  0100               	movlb	0	; () banked
  6837  00166E  6FAE               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6838  001670  0E02               	movlw	2
  6839  001672  ECC7  F00E         	call	_ToMainHigh_sendmsg
  6840  001676  0012               	return	
  6841  001678                     __end_of_timer0_int_handler:
  6842                           	opt stack 0
  6843                           pclatu	equ	0xFFB
  6844                           pclath	equ	0xFFA
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           postinc0	equ	0xFEE
  6853                           fsr0h	equ	0xFEA
  6854                           fsr0l	equ	0xFE9
  6855                           wreg	equ	0xFE8
  6856                           indf1	equ	0xFE7
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           bsr	equ	0xFE0
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function _WriteTimer0 *****************
  6868 ;; Defined at:
  6869 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  timer0          2    0[BANK0 ] unsigned int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  timer           2    2[BANK0 ] struct Timers
  6874 ;; Return value:  Size  Location     Type
  6875 ;;		None               void
  6876 ;; Registers used:
  6877 ;;		None
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;Total ram usage:        4 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_timer0_int_handler
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text46
  6897  001F9A                     __ptext46:
  6898                           	opt stack 0
  6899  001F9A                     _WriteTimer0:
  6900                           	opt stack 18
  6901                           
  6902                           ;incstack = 0
  6903  001F9A  C097  F099         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6904  001F9E  C098  F09A         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6905  001FA2  C09A  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6906  001FA6  C099  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6907  001FAA  0012               	return	
  6908  001FAC                     __end_of_WriteTimer0:
  6909                           	opt stack 0
  6910                           pclatu	equ	0xFFB
  6911                           pclath	equ	0xFFA
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           postinc0	equ	0xFEE
  6920                           fsr0h	equ	0xFEA
  6921                           fsr0l	equ	0xFE9
  6922                           wreg	equ	0xFE8
  6923                           indf1	equ	0xFE7
  6924                           fsr1h	equ	0xFE2
  6925                           fsr1l	equ	0xFE1
  6926                           bsr	equ	0xFE0
  6927                           indf2	equ	0xFDF
  6928                           postinc2	equ	0xFDE
  6929                           postdec2	equ	0xFDD
  6930                           fsr2h	equ	0xFDA
  6931                           fsr2l	equ	0xFD9
  6932                           status	equ	0xFD8
  6933                           
  6934 ;; *************** function _FromMainHigh_recvmsg *****************
  6935 ;; Defined at:
  6936 ;;		line 183 in file "src/messages.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  maxlength       1    wreg     unsigned char 
  6939 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  6940 ;;		 -> timer0_int_handler@msgtype(2), 
  6941 ;;  data            2   26[BANK0 ] PTR void 
  6942 ;;		 -> timer0_int_handler@val(2), 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  maxlength       1   28[BANK0 ] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  1    wreg      char 
  6947 ;; Registers used:
  6948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;Total ram usage:        5 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    2
  6961 ;; This function calls:
  6962 ;;		i2_recv_msg
  6963 ;; This function is called by:
  6964 ;;		_timer0_int_handler
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text47
  6969  001BEC                     __ptext47:
  6970                           	opt stack 0
  6971  001BEC                     _FromMainHigh_recvmsg:
  6972                           	opt stack 16
  6973                           
  6974                           ;incstack = 0
  6975                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6976  001BEC  CFE8 F0B3          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6977                           
  6978                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6979  001BF0  0101               	movlb	1	; () banked
  6980  001BF2  0E01               	movlw	high _FromMainHigh_MQ
  6981  001BF4  0100               	movlb	0	; () banked
  6982  001BF6  0100               	movlb	0	; () banked
  6983  001BF8  6FA2               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6984  001BFA  0101               	movlb	1	; () banked
  6985  001BFC  0E00               	movlw	low _FromMainHigh_MQ
  6986  001BFE  0100               	movlb	0	; () banked
  6987  001C00  0100               	movlb	0	; () banked
  6988  001C02  6FA1               	movwf	i2recv_msg@qptr& (0+255),b
  6989  001C04  C0B3  F0A3         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6990  001C08  0100               	movlb	0	; () banked
  6991  001C0A  0100               	movlb	0	; () banked
  6992  001C0C  C0B0  F0A5         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6993  001C10  0100               	movlb	0	; () banked
  6994  001C12  0100               	movlb	0	; () banked
  6995  001C14  C0AF  F0A4         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6996  001C18  0100               	movlb	0	; () banked
  6997  001C1A  0100               	movlb	0	; () banked
  6998  001C1C  C0B2  F0A7         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6999  001C20  0100               	movlb	0	; () banked
  7000  001C22  0100               	movlb	0	; () banked
  7001  001C24  C0B1  F0A6         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7002  001C28  EC60  F006         	call	i2_recv_msg	;wreg free
  7003  001C2C  0012               	return	
  7004  001C2E                     __end_of_FromMainHigh_recvmsg:
  7005                           	opt stack 0
  7006                           pclatu	equ	0xFFB
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           postinc0	equ	0xFEE
  7016                           fsr0h	equ	0xFEA
  7017                           fsr0l	equ	0xFE9
  7018                           wreg	equ	0xFE8
  7019                           indf1	equ	0xFE7
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           bsr	equ	0xFE0
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function i2_recv_msg *****************
  7031 ;; Defined at:
  7032 ;;		line 63 in file "src/messages.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7035 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7036 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7037 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7038 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  7039 ;;  data            2   15[BANK0 ] PTR void 
  7040 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7043 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7044 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7045 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7046 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      char 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7056 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;Total ram usage:       14 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    1
  7063 ;; This function calls:
  7064 ;;		i2_memcpy
  7065 ;; This function is called by:
  7066 ;;		_FromMainHigh_recvmsg
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text48
  7071  000CC0                     __ptext48:
  7072                           	opt stack 0
  7073  000CC0                     i2_recv_msg:
  7074                           	opt stack 16
  7075                           
  7076                           ;messages.c: 64: unsigned char slot;
  7077                           ;messages.c: 68: msg *qmsg;
  7078                           ;messages.c: 69: size_t tlength;
  7079                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7080                           
  7081                           ;incstack = 0
  7082  000CC0  0100               	movlb	0	; () banked
  7083  000CC2  EE20 F035          	lfsr	2,53
  7084  000CC6  0100               	movlb	0	; () banked
  7085  000CC8  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7086  000CCA  26D9               	addwf	fsr2l,f,c
  7087  000CCC  0100               	movlb	0	; () banked
  7088  000CCE  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7089  000CD0  22DA               	addwfc	fsr2h,f,c
  7090  000CD2  50DF               	movf	indf2,w,c
  7091  000CD4  0100               	movlb	0	; () banked
  7092  000CD6  0100               	movlb	0	; () banked
  7093  000CD8  6FAA               	movwf	i2recv_msg@slot& (0+255),b
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7097  000CDA  0100               	movlb	0	; () banked
  7098  000CDC  0100               	movlb	0	; () banked
  7099  000CDE  51AA               	movf	i2recv_msg@slot& (0+255),w,b
  7100  000CE0  0D0D               	mullw	13
  7101  000CE2  50F3               	movf	prodl,w,c
  7102  000CE4  0100               	movlb	0	; () banked
  7103  000CE6  0100               	movlb	0	; () banked
  7104  000CE8  25A1               	addwf	i2recv_msg@qptr& (0+255),w,b
  7105  000CEA  0100               	movlb	0	; () banked
  7106  000CEC  0100               	movlb	0	; () banked
  7107  000CEE  6FAD               	movwf	i2recv_msg@qmsg& (0+255),b
  7108  000CF0  50F4               	movf	prodh,w,c
  7109  000CF2  0100               	movlb	0	; () banked
  7110  000CF4  0100               	movlb	0	; () banked
  7111  000CF6  21A2               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7112  000CF8  0100               	movlb	0	; () banked
  7113  000CFA  6FAE               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;messages.c: 74: if (qmsg->full == 1) {
  7117  000CFC  0E01               	movlw	1
  7118  000CFE  C0AD  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7119  000D02  C0AE  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7120  000D06  62DF               	cpfseq	indf2,c
  7121  000D08  D074               	goto	i2l3924
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7125  000D0A  0100               	movlb	0	; () banked
  7126  000D0C  EE20 F001          	lfsr	2,1
  7127  000D10  0100               	movlb	0	; () banked
  7128  000D12  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7129  000D14  26D9               	addwf	fsr2l,f,c
  7130  000D16  0100               	movlb	0	; () banked
  7131  000D18  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7132  000D1A  22DA               	addwfc	fsr2h,f,c
  7133  000D1C  50DF               	movf	indf2,w,c
  7134  000D1E  0100               	movlb	0	; () banked
  7135  000D20  0100               	movlb	0	; () banked
  7136  000D22  5DA3               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7137  000D24  B0D8               	btfsc	status,0,c
  7138  000D26  D002               	goto	i2l3908
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;messages.c: 77: return (-3);
  7142  000D28  0EFD               	movlw	253
  7143  000D2A  0012               	return	
  7144  000D2C                     i2l3908:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;messages.c: 78: }
  7148                           ;messages.c: 80: tlength = qmsg->length;
  7149  000D2C  0100               	movlb	0	; () banked
  7150  000D2E  EE20 F001          	lfsr	2,1
  7151  000D32  0100               	movlb	0	; () banked
  7152  000D34  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7153  000D36  26D9               	addwf	fsr2l,f,c
  7154  000D38  0100               	movlb	0	; () banked
  7155  000D3A  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7156  000D3C  22DA               	addwfc	fsr2h,f,c
  7157  000D3E  50DF               	movf	indf2,w,c
  7158  000D40  0100               	movlb	0	; () banked
  7159  000D42  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7160  000D44  0100               	movlb	0	; () banked
  7161  000D46  51A8               	movf	??i2_recv_msg& (0+255),w,b
  7162  000D48  0100               	movlb	0	; () banked
  7163  000D4A  0100               	movlb	0	; () banked
  7164  000D4C  6FAB               	movwf	i2recv_msg@tlength& (0+255),b
  7165  000D4E  0100               	movlb	0	; () banked
  7166  000D50  6BAC               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7170  000D52  0100               	movlb	0	; () banked
  7171  000D54  0100               	movlb	0	; () banked
  7172  000D56  C0A7  F098         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7173  000D5A  0100               	movlb	0	; () banked
  7174  000D5C  0100               	movlb	0	; () banked
  7175  000D5E  C0A6  F097         	movff	i2recv_msg@data,i2memcpy@d1
  7176  000D62  0E03               	movlw	3
  7177  000D64  0100               	movlb	0	; () banked
  7178  000D66  0100               	movlb	0	; () banked
  7179  000D68  25AD               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7180  000D6A  0100               	movlb	0	; () banked
  7181  000D6C  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7182  000D6E  0E00               	movlw	0
  7183  000D70  0100               	movlb	0	; () banked
  7184  000D72  0100               	movlb	0	; () banked
  7185  000D74  21AE               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7186  000D76  0100               	movlb	0	; () banked
  7187  000D78  6FA9               	movwf	(??i2_recv_msg+1)& (0+255),b
  7188  000D7A  C0A8  F099         	movff	??i2_recv_msg,i2memcpy@s1
  7189  000D7E  C0A9  F09A         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7190  000D82  C0AB  F09B         	movff	i2recv_msg@tlength,i2memcpy@n
  7191  000D86  C0AC  F09C         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7192  000D8A  ECCE  F00C         	call	i2_memcpy	;wreg free
  7193                           
  7194                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7195  000D8E  0100               	movlb	0	; () banked
  7196  000D90  EE20 F035          	lfsr	2,53
  7197  000D94  0100               	movlb	0	; () banked
  7198  000D96  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7199  000D98  26D9               	addwf	fsr2l,f,c
  7200  000D9A  0100               	movlb	0	; () banked
  7201  000D9C  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7202  000D9E  22DA               	addwfc	fsr2h,f,c
  7203  000DA0  0100               	movlb	0	; () banked
  7204  000DA2  EE10 F035          	lfsr	1,53
  7205  000DA6  0100               	movlb	0	; () banked
  7206  000DA8  51A1               	movf	i2recv_msg@qptr& (0+255),w,b
  7207  000DAA  26E1               	addwf	fsr1l,f,c
  7208  000DAC  0100               	movlb	0	; () banked
  7209  000DAE  51A2               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7210  000DB0  22E2               	addwfc	fsr1h,f,c
  7211  000DB2  50E7               	movf	indf1,w,c
  7212  000DB4  0100               	movlb	0	; () banked
  7213  000DB6  6FA8               	movwf	??i2_recv_msg& (0+255),b
  7214  000DB8  0100               	movlb	0	; () banked
  7215  000DBA  29A8               	incf	??i2_recv_msg& (0+255),w,b
  7216  000DBC  0B03               	andlw	3
  7217  000DBE  6EDF               	movwf	indf2,c
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7221  000DC0  0100               	movlb	0	; () banked
  7222  000DC2  EE20 F002          	lfsr	2,2
  7223  000DC6  0100               	movlb	0	; () banked
  7224  000DC8  51AD               	movf	i2recv_msg@qmsg& (0+255),w,b
  7225  000DCA  26D9               	addwf	fsr2l,f,c
  7226  000DCC  0100               	movlb	0	; () banked
  7227  000DCE  51AE               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7228  000DD0  22DA               	addwfc	fsr2h,f,c
  7229  000DD2  C0A4  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7230  000DD6  C0A5  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7231  000DDA  CFDF FFE7          	movff	indf2,indf1
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;messages.c: 91: qmsg->full = 0;
  7235  000DDE  C0AD  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7236  000DE2  C0AE  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7237  000DE6  0E00               	movlw	0
  7238  000DE8  6EDF               	movwf	indf2,c
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;messages.c: 92: return (tlength);
  7242  000DEA  0100               	movlb	0	; () banked
  7243  000DEC  0100               	movlb	0	; () banked
  7244  000DEE  51AB               	movf	i2recv_msg@tlength& (0+255),w,b
  7245  000DF0  0012               	return	
  7246  000DF2                     i2l3924:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;messages.c: 94: return (-4);
  7250  000DF2  0EFC               	movlw	252
  7251  000DF4  0012               	return	
  7252  000DF6                     __end_ofi2_recv_msg:
  7253                           	opt stack 0
  7254                           pclatu	equ	0xFFB
  7255                           pclath	equ	0xFFA
  7256                           tblptru	equ	0xFF8
  7257                           tblptrh	equ	0xFF7
  7258                           tblptrl	equ	0xFF6
  7259                           tablat	equ	0xFF5
  7260                           prodh	equ	0xFF4
  7261                           prodl	equ	0xFF3
  7262                           intcon	equ	0xFF2
  7263                           postinc0	equ	0xFEE
  7264                           fsr0h	equ	0xFEA
  7265                           fsr0l	equ	0xFE9
  7266                           wreg	equ	0xFE8
  7267                           indf1	equ	0xFE7
  7268                           fsr1h	equ	0xFE2
  7269                           fsr1l	equ	0xFE1
  7270                           bsr	equ	0xFE0
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           postdec2	equ	0xFDD
  7274                           fsr2h	equ	0xFDA
  7275                           fsr2l	equ	0xFD9
  7276                           status	equ	0xFD8
  7277                           
  7278 ;; *************** function _i2c_int_handler *****************
  7279 ;; Defined at:
  7280 ;;		line 100 in file "src/my_i2c.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  7285 ;;  data_read       1   36[BANK0 ] unsigned char 
  7286 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  7287 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  7288 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  7289 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  7290 ;;  data_written    1   31[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:       11 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    3
  7307 ;; This function calls:
  7308 ;;		_ToMainHigh_sendmsg
  7309 ;;		_handle_start
  7310 ;; This function is called by:
  7311 ;;		_InterruptHandlerHigh
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text49
  7316  0000C4                     __ptext49:
  7317                           	opt stack 0
  7318  0000C4                     _i2c_int_handler:
  7319                           	opt stack 16
  7320                           
  7321                           ;my_i2c.c: 101: unsigned char i2c_data;
  7322                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;incstack = 0
  7326  0000C4  0100               	movlb	0	; () banked
  7327  0000C6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7328  0000C8  0E00               	movlw	0
  7329  0000CA  0100               	movlb	0	; () banked
  7330  0000CC  0100               	movlb	0	; () banked
  7331  0000CE  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7332  0000D0  0100               	movlb	0	; () banked
  7333  0000D2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7334                           
  7335                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7336  0000D4  0100               	movlb	0	; () banked
  7337  0000D6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7338  0000D8  0E00               	movlw	0
  7339  0000DA  0100               	movlb	0	; () banked
  7340  0000DC  0100               	movlb	0	; () banked
  7341  0000DE  6FB6               	movwf	i2c_int_handler@data_written& (0+255),b
  7342  0000E0  0100               	movlb	0	; () banked
  7343  0000E2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7344                           
  7345                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7346  0000E4  0100               	movlb	0	; () banked
  7347  0000E6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7348  0000E8  0E00               	movlw	0
  7349  0000EA  0100               	movlb	0	; () banked
  7350  0000EC  0100               	movlb	0	; () banked
  7351  0000EE  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7352  0000F0  0100               	movlb	0	; () banked
  7353  0000F2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7354                           
  7355                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7356  0000F4  0100               	movlb	0	; () banked
  7357  0000F6  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7358  0000F8  0E00               	movlw	0
  7359  0000FA  0100               	movlb	0	; () banked
  7360  0000FC  0100               	movlb	0	; () banked
  7361  0000FE  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7362  000100  0100               	movlb	0	; () banked
  7363  000102  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7364                           
  7365                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7366  000104  0100               	movlb	0	; () banked
  7367  000106  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7368  000108  0E00               	movlw	0
  7369  00010A  0100               	movlb	0	; () banked
  7370  00010C  0100               	movlb	0	; () banked
  7371  00010E  6FB7               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7372  000110  0100               	movlb	0	; () banked
  7373  000112  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7377                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7378  000114  ACC6               	btfss	4038,6,c	;volatile
  7379  000116  D029               	goto	i2l3270
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7383  000118  9CC6               	bcf	4038,6,c	;volatile
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7387  00011A  0100               	movlb	0	; () banked
  7388  00011C  EE20 F00C          	lfsr	2,12
  7389  000120  0100               	movlb	0	; () banked
  7390  000122  51CB               	movf	_ic_ptr& (0+255),w,b
  7391  000124  26D9               	addwf	fsr2l,f,c
  7392  000126  0100               	movlb	0	; () banked
  7393  000128  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7394  00012A  22DA               	addwfc	fsr2h,f,c
  7395  00012C  0E05               	movlw	5
  7396  00012E  6EDF               	movwf	indf2,c
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;my_i2c.c: 116: overrun_error = 1;
  7400  000130  0100               	movlb	0	; () banked
  7401  000132  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7402  000134  0E01               	movlw	1
  7403  000136  0100               	movlb	0	; () banked
  7404  000138  0100               	movlb	0	; () banked
  7405  00013A  6FB7               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7406  00013C  0100               	movlb	0	; () banked
  7407  00013E  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7411  000140  0100               	movlb	0	; () banked
  7412  000142  EE20 F00E          	lfsr	2,14
  7413  000146  0100               	movlb	0	; () banked
  7414  000148  51CB               	movf	_ic_ptr& (0+255),w,b
  7415  00014A  26D9               	addwf	fsr2l,f,c
  7416  00014C  0100               	movlb	0	; () banked
  7417  00014E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7418  000150  22DA               	addwfc	fsr2h,f,c
  7419  000152  2ADF               	incf	indf2,f,c
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7423  000154  0100               	movlb	0	; () banked
  7424  000156  EE20 F00D          	lfsr	2,13
  7425  00015A  0100               	movlb	0	; () banked
  7426  00015C  51CB               	movf	_ic_ptr& (0+255),w,b
  7427  00015E  26D9               	addwf	fsr2l,f,c
  7428  000160  0100               	movlb	0	; () banked
  7429  000162  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7430  000164  22DA               	addwfc	fsr2h,f,c
  7431  000166  0E04               	movlw	4
  7432  000168  6EDF               	movwf	indf2,c
  7433  00016A                     i2l3270:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 119: }
  7437                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7438  00016A  A0C7               	btfss	4039,0,c	;volatile
  7439  00016C  D00A               	goto	i2l3276
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7443  00016E  CFC9 F0B8          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;my_i2c.c: 123: data_read = 1;
  7447  000172  0100               	movlb	0	; () banked
  7448  000174  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7449  000176  0E01               	movlw	1
  7450  000178  0100               	movlb	0	; () banked
  7451  00017A  0100               	movlb	0	; () banked
  7452  00017C  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7453  00017E  0100               	movlb	0	; () banked
  7454  000180  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7455  000182                     i2l3276:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;my_i2c.c: 124: }
  7459                           ;my_i2c.c: 126: if (!overrun_error) {
  7460  000182  0100               	movlb	0	; () banked
  7461  000184  0100               	movlb	0	; () banked
  7462  000186  67B7               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7463  000188  D1CE               	goto	i2l269
  7464  00018A  D1B7               	goto	i2l3364
  7465  00018C                     i2l271:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;my_i2c.c: 129: {
  7469                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7470  00018C  A6C7               	btfss	4039,3,c	;volatile
  7471  00018E  D1CB               	goto	i2l269
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;my_i2c.c: 132: handle_start(data_read);
  7475  000190  0100               	movlb	0	; () banked
  7476  000192  0100               	movlb	0	; () banked
  7477  000194  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7478  000196  EC64  F009         	call	_handle_start
  7479                           
  7480                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7481  00019A  0100               	movlb	0	; () banked
  7482  00019C  EE20 F00C          	lfsr	2,12
  7483  0001A0  0100               	movlb	0	; () banked
  7484  0001A2  51CB               	movf	_ic_ptr& (0+255),w,b
  7485  0001A4  26D9               	addwf	fsr2l,f,c
  7486  0001A6  0100               	movlb	0	; () banked
  7487  0001A8  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  0001AA  22DA               	addwfc	fsr2h,f,c
  7489  0001AC  0E08               	movlw	8
  7490  0001AE  62DF               	cpfseq	indf2,c
  7491  0001B0  D1BA               	goto	i2l269
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;my_i2c.c: 135: data_read = 0;
  7495  0001B2  0100               	movlb	0	; () banked
  7496  0001B4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7497  0001B6  0E00               	movlw	0
  7498  0001B8  0100               	movlb	0	; () banked
  7499  0001BA  0100               	movlb	0	; () banked
  7500  0001BC  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  7501  0001BE  0100               	movlb	0	; () banked
  7502  0001C0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7503                           
  7504                           ;my_i2c.c: 136: msg_to_send = 1;
  7505  0001C2  0100               	movlb	0	; () banked
  7506  0001C4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7507  0001C6  0E01               	movlw	1
  7508  0001C8  0100               	movlb	0	; () banked
  7509  0001CA  0100               	movlb	0	; () banked
  7510  0001CC  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7511  0001CE  D187               	goto	L11
  7512  0001D0                     i2l275:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;my_i2c.c: 142: {
  7516                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7517  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7518  0001D2  D030               	goto	i2l3296
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7522  0001D4  0100               	movlb	0	; () banked
  7523  0001D6  EE20 F00B          	lfsr	2,11
  7524  0001DA  0100               	movlb	0	; () banked
  7525  0001DC  51CB               	movf	_ic_ptr& (0+255),w,b
  7526  0001DE  26D9               	addwf	fsr2l,f,c
  7527  0001E0  0100               	movlb	0	; () banked
  7528  0001E2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  0001E4  22DA               	addwfc	fsr2h,f,c
  7530  0001E6  2ADF               	incf	indf2,f,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 148: if (data_read) {
  7534  0001E8  0100               	movlb	0	; () banked
  7535  0001EA  0100               	movlb	0	; () banked
  7536  0001EC  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7537  0001EE  B4D8               	btfsc	status,2,c
  7538  0001F0  D179               	goto	L13
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7542  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7543  0001F4  D009               	goto	i2l3294
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;my_i2c.c: 150: msg_ready = 1;
  7547  0001F6  0100               	movlb	0	; () banked
  7548  0001F8  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7549  0001FA  0E01               	movlw	1
  7550  0001FC  0100               	movlb	0	; () banked
  7551  0001FE  0100               	movlb	0	; () banked
  7552  000200  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7553  000202  0100               	movlb	0	; () banked
  7554  000204  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7555                           
  7556                           ;my_i2c.c: 151: } else {
  7557  000206  D16E               	goto	L13
  7558  000208                     i2l3294:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7562  000208  0100               	movlb	0	; () banked
  7563  00020A  EE20 F00E          	lfsr	2,14
  7564  00020E  0100               	movlb	0	; () banked
  7565  000210  51CB               	movf	_ic_ptr& (0+255),w,b
  7566  000212  26D9               	addwf	fsr2l,f,c
  7567  000214  0100               	movlb	0	; () banked
  7568  000216  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7569  000218  22DA               	addwfc	fsr2h,f,c
  7570  00021A  2ADF               	incf	indf2,f,c
  7571                           
  7572                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7573  00021C  0100               	movlb	0	; () banked
  7574  00021E  EE20 F00D          	lfsr	2,13
  7575  000222  0100               	movlb	0	; () banked
  7576  000224  51CB               	movf	_ic_ptr& (0+255),w,b
  7577  000226  26D9               	addwf	fsr2l,f,c
  7578  000228  0100               	movlb	0	; () banked
  7579  00022A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7580  00022C  22DA               	addwfc	fsr2h,f,c
  7581  00022E  0E06               	movlw	6
  7582  000230  6EDF               	movwf	indf2,c
  7583                           
  7584                           ; BSR set to: 0
  7585  000232  D158               	goto	L13
  7586  000234                     i2l3296:
  7587                           
  7588                           ; BSR set to: 0
  7589  000234  0100               	movlb	0	; () banked
  7590  000236  0100               	movlb	0	; () banked
  7591  000238  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7592  00023A  B4D8               	btfsc	status,2,c
  7593  00023C  D174               	goto	i2l269
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7597  00023E  0100               	movlb	0	; () banked
  7598  000240  EE20 F00B          	lfsr	2,11
  7599  000244  0100               	movlb	0	; () banked
  7600  000246  51CB               	movf	_ic_ptr& (0+255),w,b
  7601  000248  26D9               	addwf	fsr2l,f,c
  7602  00024A  0100               	movlb	0	; () banked
  7603  00024C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  00024E  22DA               	addwfc	fsr2h,f,c
  7605  000250  2ADF               	incf	indf2,f,c
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7609  000252  BAC7               	btfsc	4039,5,c	;volatile
  7610  000254  D019               	goto	i2l3312
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7614  000256  B4C7               	btfsc	4039,2,c	;volatile
  7615  000258  D00B               	goto	i2l3306
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7619  00025A  0100               	movlb	0	; () banked
  7620  00025C  EE20 F00C          	lfsr	2,12
  7621  000260  0100               	movlb	0	; () banked
  7622  000262  51CB               	movf	_ic_ptr& (0+255),w,b
  7623  000264  26D9               	addwf	fsr2l,f,c
  7624  000266  0100               	movlb	0	; () banked
  7625  000268  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7626  00026A  22DA               	addwfc	fsr2h,f,c
  7627  00026C  0E07               	movlw	7
  7628  00026E  D076               	goto	L10
  7629  000270                     i2l3306:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7633  000270  0100               	movlb	0	; () banked
  7634  000272  EE20 F00C          	lfsr	2,12
  7635  000276  0100               	movlb	0	; () banked
  7636  000278  51CB               	movf	_ic_ptr& (0+255),w,b
  7637  00027A  26D9               	addwf	fsr2l,f,c
  7638  00027C  0100               	movlb	0	; () banked
  7639  00027E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7640  000280  22DA               	addwfc	fsr2h,f,c
  7641  000282  0E08               	movlw	8
  7642  000284  6EDF               	movwf	indf2,c
  7643  000286  D11D               	goto	L14
  7644  000288                     i2l3312:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7648  000288  0100               	movlb	0	; () banked
  7649  00028A  EE20 F00E          	lfsr	2,14
  7650  00028E  0100               	movlb	0	; () banked
  7651  000290  51CB               	movf	_ic_ptr& (0+255),w,b
  7652  000292  26D9               	addwf	fsr2l,f,c
  7653  000294  0100               	movlb	0	; () banked
  7654  000296  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7655  000298  22DA               	addwfc	fsr2h,f,c
  7656  00029A  2ADF               	incf	indf2,f,c
  7657                           
  7658                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7659  00029C  0100               	movlb	0	; () banked
  7660  00029E  EE20 F00C          	lfsr	2,12
  7661  0002A2  0100               	movlb	0	; () banked
  7662  0002A4  51CB               	movf	_ic_ptr& (0+255),w,b
  7663  0002A6  26D9               	addwf	fsr2l,f,c
  7664  0002A8  0100               	movlb	0	; () banked
  7665  0002AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7666  0002AC  22DA               	addwfc	fsr2h,f,c
  7667  0002AE  0E05               	movlw	5
  7668  0002B0  6EDF               	movwf	indf2,c
  7669                           
  7670                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7671  0002B2  0100               	movlb	0	; () banked
  7672  0002B4  EE20 F00D          	lfsr	2,13
  7673  0002B8  0100               	movlb	0	; () banked
  7674  0002BA  51CB               	movf	_ic_ptr& (0+255),w,b
  7675  0002BC  26D9               	addwf	fsr2l,f,c
  7676  0002BE  0100               	movlb	0	; () banked
  7677  0002C0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7678  0002C2  22DA               	addwfc	fsr2h,f,c
  7679  0002C4  0E06               	movlw	6
  7680  0002C6  D04A               	goto	L10
  7681  0002C8                     i2l3314:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;my_i2c.c: 177: {
  7685                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7686  0002C8  0100               	movlb	0	; () banked
  7687  0002CA  EE20 F01A          	lfsr	2,26
  7688  0002CE  0100               	movlb	0	; () banked
  7689  0002D0  51CB               	movf	_ic_ptr& (0+255),w,b
  7690  0002D2  26D9               	addwf	fsr2l,f,c
  7691  0002D4  0100               	movlb	0	; () banked
  7692  0002D6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7693  0002D8  22DA               	addwfc	fsr2h,f,c
  7694  0002DA  50DF               	movf	indf2,w,c
  7695  0002DC  0100               	movlb	0	; () banked
  7696  0002DE  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7697  0002E0  0100               	movlb	0	; () banked
  7698  0002E2  EE20 F019          	lfsr	2,25
  7699  0002E6  0100               	movlb	0	; () banked
  7700  0002E8  51CB               	movf	_ic_ptr& (0+255),w,b
  7701  0002EA  26D9               	addwf	fsr2l,f,c
  7702  0002EC  0100               	movlb	0	; () banked
  7703  0002EE  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7704  0002F0  22DA               	addwfc	fsr2h,f,c
  7705  0002F2  50DF               	movf	indf2,w,c
  7706  0002F4  0100               	movlb	0	; () banked
  7707  0002F6  5DB1               	subwf	??_i2c_int_handler& (0+255),w,b
  7708  0002F8  B0D8               	btfsc	status,0,c
  7709  0002FA  D0F4               	goto	L13
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7713  0002FC  0100               	movlb	0	; () banked
  7714  0002FE  EE20 F01A          	lfsr	2,26
  7715  000302  0100               	movlb	0	; () banked
  7716  000304  51CB               	movf	_ic_ptr& (0+255),w,b
  7717  000306  26D9               	addwf	fsr2l,f,c
  7718  000308  0100               	movlb	0	; () banked
  7719  00030A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7720  00030C  22DA               	addwfc	fsr2h,f,c
  7721  00030E  50DF               	movf	indf2,w,c
  7722  000310  0100               	movlb	0	; () banked
  7723  000312  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7724  000314  0100               	movlb	0	; () banked
  7725  000316  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7726  000318  0D01               	mullw	1
  7727  00031A  0E0F               	movlw	15
  7728  00031C  26F3               	addwf	prodl,f,c
  7729  00031E  0E00               	movlw	0
  7730  000320  22F4               	addwfc	prodh,f,c
  7731  000322  50F3               	movf	prodl,w,c
  7732  000324  0100               	movlb	0	; () banked
  7733  000326  0100               	movlb	0	; () banked
  7734  000328  25CB               	addwf	_ic_ptr& (0+255),w,b
  7735  00032A  6ED9               	movwf	fsr2l,c
  7736  00032C  50F4               	movf	prodh,w,c
  7737  00032E  0100               	movlb	0	; () banked
  7738  000330  0100               	movlb	0	; () banked
  7739  000332  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7740  000334  6EDA               	movwf	fsr2h,c
  7741  000336  50DF               	movf	indf2,w,c
  7742  000338  6EC9               	movwf	4041,c	;volatile
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7746  00033A  0100               	movlb	0	; () banked
  7747  00033C  EE20 F01A          	lfsr	2,26
  7748  000340  0100               	movlb	0	; () banked
  7749  000342  51CB               	movf	_ic_ptr& (0+255),w,b
  7750  000344  26D9               	addwf	fsr2l,f,c
  7751  000346  0100               	movlb	0	; () banked
  7752  000348  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7753  00034A  22DA               	addwfc	fsr2h,f,c
  7754  00034C  2ADF               	incf	indf2,f,c
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;my_i2c.c: 181: data_written = 1;
  7758  00034E  0100               	movlb	0	; () banked
  7759  000350  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7760  000352  0E01               	movlw	1
  7761  000354  0100               	movlb	0	; () banked
  7762  000356  0100               	movlb	0	; () banked
  7763  000358  6FB6               	movwf	i2c_int_handler@data_written& (0+255),b
  7764  00035A  D0C1               	goto	L11
  7765  00035C                     L10:
  7766  00035C  6EDF               	movwf	indf2,c
  7767  00035E  D0E3               	goto	i2l269
  7768  000360                     i2l289:
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 189: {
  7772                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7773  000360  A8C7               	btfss	4039,4,c	;volatile
  7774  000362  D062               	goto	i2l3342
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7778  000364  0100               	movlb	0	; () banked
  7779  000366  EE20 F00B          	lfsr	2,11
  7780  00036A  0100               	movlb	0	; () banked
  7781  00036C  51CB               	movf	_ic_ptr& (0+255),w,b
  7782  00036E  26D9               	addwf	fsr2l,f,c
  7783  000370  0100               	movlb	0	; () banked
  7784  000372  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7785  000374  22DA               	addwfc	fsr2h,f,c
  7786  000376  2ADF               	incf	indf2,f,c
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;my_i2c.c: 194: if (data_read) {
  7790  000378  0100               	movlb	0	; () banked
  7791  00037A  0100               	movlb	0	; () banked
  7792  00037C  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7793  00037E  B4D8               	btfsc	status,2,c
  7794  000380  D04A               	goto	i2l3338
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7798  000382  AAC7               	btfss	4039,5,c	;volatile
  7799  000384  D027               	goto	i2l3336
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7803  000386  0100               	movlb	0	; () banked
  7804  000388  EE20 F00A          	lfsr	2,10
  7805  00038C  0100               	movlb	0	; () banked
  7806  00038E  51CB               	movf	_ic_ptr& (0+255),w,b
  7807  000390  26D9               	addwf	fsr2l,f,c
  7808  000392  0100               	movlb	0	; () banked
  7809  000394  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7810  000396  22DA               	addwfc	fsr2h,f,c
  7811  000398  50DF               	movf	indf2,w,c
  7812  00039A  0100               	movlb	0	; () banked
  7813  00039C  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7814  00039E  0100               	movlb	0	; () banked
  7815  0003A0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7816  0003A2  0D01               	mullw	1
  7817  0003A4  50F3               	movf	prodl,w,c
  7818  0003A6  0100               	movlb	0	; () banked
  7819  0003A8  0100               	movlb	0	; () banked
  7820  0003AA  25CB               	addwf	_ic_ptr& (0+255),w,b
  7821  0003AC  6ED9               	movwf	fsr2l,c
  7822  0003AE  50F4               	movf	prodh,w,c
  7823  0003B0  0100               	movlb	0	; () banked
  7824  0003B2  0100               	movlb	0	; () banked
  7825  0003B4  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7826  0003B6  6EDA               	movwf	fsr2h,c
  7827  0003B8  0100               	movlb	0	; () banked
  7828  0003BA  C0B8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7832  0003BE  0100               	movlb	0	; () banked
  7833  0003C0  EE20 F00A          	lfsr	2,10
  7834  0003C4  0100               	movlb	0	; () banked
  7835  0003C6  51CB               	movf	_ic_ptr& (0+255),w,b
  7836  0003C8  26D9               	addwf	fsr2l,f,c
  7837  0003CA  0100               	movlb	0	; () banked
  7838  0003CC  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7839  0003CE  22DA               	addwfc	fsr2h,f,c
  7840  0003D0  2ADF               	incf	indf2,f,c
  7841  0003D2  D021               	goto	i2l3338
  7842  0003D4                     i2l3336:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7846  0003D4  0100               	movlb	0	; () banked
  7847  0003D6  EE20 F00E          	lfsr	2,14
  7848  0003DA  0100               	movlb	0	; () banked
  7849  0003DC  51CB               	movf	_ic_ptr& (0+255),w,b
  7850  0003DE  26D9               	addwf	fsr2l,f,c
  7851  0003E0  0100               	movlb	0	; () banked
  7852  0003E2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7853  0003E4  22DA               	addwfc	fsr2h,f,c
  7854  0003E6  2ADF               	incf	indf2,f,c
  7855                           
  7856                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7857  0003E8  0100               	movlb	0	; () banked
  7858  0003EA  EE20 F00D          	lfsr	2,13
  7859  0003EE  0100               	movlb	0	; () banked
  7860  0003F0  51CB               	movf	_ic_ptr& (0+255),w,b
  7861  0003F2  26D9               	addwf	fsr2l,f,c
  7862  0003F4  0100               	movlb	0	; () banked
  7863  0003F6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7864  0003F8  22DA               	addwfc	fsr2h,f,c
  7865  0003FA  0E06               	movlw	6
  7866  0003FC  6EDF               	movwf	indf2,c
  7867                           
  7868                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7869  0003FE  0100               	movlb	0	; () banked
  7870  000400  EE20 F00C          	lfsr	2,12
  7871  000404  0100               	movlb	0	; () banked
  7872  000406  51CB               	movf	_ic_ptr& (0+255),w,b
  7873  000408  26D9               	addwf	fsr2l,f,c
  7874  00040A  0100               	movlb	0	; () banked
  7875  00040C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7876  00040E  22DA               	addwfc	fsr2h,f,c
  7877  000410  0E05               	movlw	5
  7878  000412  6EDF               	movwf	indf2,c
  7879  000414  D067               	goto	L13
  7880  000416                     i2l3338:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;my_i2c.c: 205: msg_ready = 1;
  7884  000416  0100               	movlb	0	; () banked
  7885  000418  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7886  00041A  0E01               	movlw	1
  7887  00041C  0100               	movlb	0	; () banked
  7888  00041E  0100               	movlb	0	; () banked
  7889  000420  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7890  000422  0100               	movlb	0	; () banked
  7891  000424  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7892                           
  7893                           ; BSR set to: 0
  7894  000426  D05E               	goto	L13
  7895  000428                     i2l3342:
  7896                           
  7897                           ; BSR set to: 0
  7898  000428  0100               	movlb	0	; () banked
  7899  00042A  0100               	movlb	0	; () banked
  7900  00042C  51BB               	movf	i2c_int_handler@data_read& (0+255),w,b
  7901  00042E  B4D8               	btfsc	status,2,c
  7902  000430  D07A               	goto	i2l269
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7906  000432  0100               	movlb	0	; () banked
  7907  000434  EE20 F00B          	lfsr	2,11
  7908  000438  0100               	movlb	0	; () banked
  7909  00043A  51CB               	movf	_ic_ptr& (0+255),w,b
  7910  00043C  26D9               	addwf	fsr2l,f,c
  7911  00043E  0100               	movlb	0	; () banked
  7912  000440  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7913  000442  22DA               	addwfc	fsr2h,f,c
  7914  000444  2ADF               	incf	indf2,f,c
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7918  000446  AAC7               	btfss	4039,5,c	;volatile
  7919  000448  D027               	goto	i2l297
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7923  00044A  0100               	movlb	0	; () banked
  7924  00044C  EE20 F00A          	lfsr	2,10
  7925  000450  0100               	movlb	0	; () banked
  7926  000452  51CB               	movf	_ic_ptr& (0+255),w,b
  7927  000454  26D9               	addwf	fsr2l,f,c
  7928  000456  0100               	movlb	0	; () banked
  7929  000458  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7930  00045A  22DA               	addwfc	fsr2h,f,c
  7931  00045C  50DF               	movf	indf2,w,c
  7932  00045E  0100               	movlb	0	; () banked
  7933  000460  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7934  000462  0100               	movlb	0	; () banked
  7935  000464  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7936  000466  0D01               	mullw	1
  7937  000468  50F3               	movf	prodl,w,c
  7938  00046A  0100               	movlb	0	; () banked
  7939  00046C  0100               	movlb	0	; () banked
  7940  00046E  25CB               	addwf	_ic_ptr& (0+255),w,b
  7941  000470  6ED9               	movwf	fsr2l,c
  7942  000472  50F4               	movf	prodh,w,c
  7943  000474  0100               	movlb	0	; () banked
  7944  000476  0100               	movlb	0	; () banked
  7945  000478  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7946  00047A  6EDA               	movwf	fsr2h,c
  7947  00047C  0100               	movlb	0	; () banked
  7948  00047E  C0B8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7952  000482  0100               	movlb	0	; () banked
  7953  000484  EE20 F00A          	lfsr	2,10
  7954  000488  0100               	movlb	0	; () banked
  7955  00048A  51CB               	movf	_ic_ptr& (0+255),w,b
  7956  00048C  26D9               	addwf	fsr2l,f,c
  7957  00048E  0100               	movlb	0	; () banked
  7958  000490  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7959  000492  22DA               	addwfc	fsr2h,f,c
  7960  000494  2ADF               	incf	indf2,f,c
  7961                           
  7962                           ;my_i2c.c: 213: } else {
  7963  000496  D047               	goto	i2l269
  7964  000498                     i2l297:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7968  000498  A4C7               	btfss	4039,2,c	;volatile
  7969  00049A  D6B6               	goto	i2l3294
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7973  00049C  0100               	movlb	0	; () banked
  7974  00049E  EE20 F00C          	lfsr	2,12
  7975  0004A2  0100               	movlb	0	; () banked
  7976  0004A4  51CB               	movf	_ic_ptr& (0+255),w,b
  7977  0004A6  26D9               	addwf	fsr2l,f,c
  7978  0004A8  0100               	movlb	0	; () banked
  7979  0004AA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  7980  0004AC  22DA               	addwfc	fsr2h,f,c
  7981  0004AE  0E08               	movlw	8
  7982  0004B0  6EDF               	movwf	indf2,c
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;my_i2c.c: 216: msg_ready = 1;
  7986  0004B2  0100               	movlb	0	; () banked
  7987  0004B4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  7988  0004B6  0E01               	movlw	1
  7989  0004B8  0100               	movlb	0	; () banked
  7990  0004BA  0100               	movlb	0	; () banked
  7991  0004BC  6FBA               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7992  0004BE  0100               	movlb	0	; () banked
  7993  0004C0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  7994  0004C2                     L14:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;my_i2c.c: 217: msg_to_send = 1;
  7998  0004C2  0100               	movlb	0	; () banked
  7999  0004C4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8000  0004C6  0E01               	movlw	1
  8001  0004C8  0100               	movlb	0	; () banked
  8002  0004CA  0100               	movlb	0	; () banked
  8003  0004CC  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8004  0004CE  0100               	movlb	0	; () banked
  8005  0004D0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;my_i2c.c: 219: data_read = 0;
  8009  0004D2  0100               	movlb	0	; () banked
  8010  0004D4  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8011  0004D6  0E00               	movlw	0
  8012  0004D8  0100               	movlb	0	; () banked
  8013  0004DA  0100               	movlb	0	; () banked
  8014  0004DC  6FBB               	movwf	i2c_int_handler@data_read& (0+255),b
  8015  0004DE                     L11:
  8016  0004DE  0100               	movlb	0	; () banked
  8017  0004E0  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8018                           
  8019                           ;my_i2c.c: 220: } else {
  8020  0004E2  D021               	goto	i2l269
  8021  0004E4                     L13:
  8022                           
  8023                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8024  0004E4  0100               	movlb	0	; () banked
  8025  0004E6  EE20 F00C          	lfsr	2,12
  8026  0004EA  0100               	movlb	0	; () banked
  8027  0004EC  51CB               	movf	_ic_ptr& (0+255),w,b
  8028  0004EE  26D9               	addwf	fsr2l,f,c
  8029  0004F0  0100               	movlb	0	; () banked
  8030  0004F2  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8031  0004F4  22DA               	addwfc	fsr2h,f,c
  8032  0004F6  0E05               	movlw	5
  8033  0004F8  D731               	goto	L10
  8034  0004FA                     i2l3364:
  8035                           
  8036                           ; BSR set to: 0
  8037  0004FA  0100               	movlb	0	; () banked
  8038  0004FC  EE20 F00C          	lfsr	2,12
  8039  000500  0100               	movlb	0	; () banked
  8040  000502  51CB               	movf	_ic_ptr& (0+255),w,b
  8041  000504  26D9               	addwf	fsr2l,f,c
  8042  000506  0100               	movlb	0	; () banked
  8043  000508  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8044  00050A  22DA               	addwfc	fsr2h,f,c
  8045  00050C  50DF               	movf	indf2,w,c
  8046                           
  8047                           ; Switch size 1, requested type "space"
  8048                           ; Number of cases is 4, Range of values is 5 to 8
  8049                           ; switch strategies available:
  8050                           ; Name         Instructions Cycles
  8051                           ; simple_byte           13     7 (average)
  8052                           ;	Chosen strategy is simple_byte
  8053  00050E  0A05               	xorlw	5	; case 5
  8054  000510  B4D8               	btfsc	status,2,c
  8055  000512  D63C               	goto	i2l271
  8056  000514  0A03               	xorlw	3	; case 6
  8057  000516  B4D8               	btfsc	status,2,c
  8058  000518  D65B               	goto	i2l275
  8059  00051A  0A01               	xorlw	1	; case 7
  8060  00051C  B4D8               	btfsc	status,2,c
  8061  00051E  D720               	goto	i2l289
  8062  000520  0A0F               	xorlw	15	; case 8
  8063  000522  B4D8               	btfsc	status,2,c
  8064  000524  D6D1               	goto	i2l3314
  8065  000526                     i2l269:
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;my_i2c.c: 230: }
  8069                           ;my_i2c.c: 233: if (data_read || data_written) {
  8070  000526  0100               	movlb	0	; () banked
  8071  000528  0100               	movlb	0	; () banked
  8072  00052A  67BB               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8073  00052C  D005               	goto	i2l303
  8074                           
  8075                           ; BSR set to: 0
  8076  00052E  0100               	movlb	0	; () banked
  8077  000530  0100               	movlb	0	; () banked
  8078  000532  51B6               	movf	i2c_int_handler@data_written& (0+255),w,b
  8079  000534  B4D8               	btfsc	status,2,c
  8080  000536  D002               	goto	i2l3370
  8081  000538                     i2l303:
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8085  000538  A8C6               	btfss	4038,4,c	;volatile
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8089  00053A  88C6               	bsf	4038,4,c	;volatile
  8090  00053C                     i2l3370:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;my_i2c.c: 237: }
  8094                           ;my_i2c.c: 238: }
  8095                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8096  00053C  0100               	movlb	0	; () banked
  8097  00053E  EE20 F00A          	lfsr	2,10
  8098  000542  0100               	movlb	0	; () banked
  8099  000544  51CB               	movf	_ic_ptr& (0+255),w,b
  8100  000546  26D9               	addwf	fsr2l,f,c
  8101  000548  0100               	movlb	0	; () banked
  8102  00054A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8103  00054C  22DA               	addwfc	fsr2h,f,c
  8104  00054E  0E08               	movlw	8
  8105  000550  64DF               	cpfsgt	indf2,c
  8106  000552  D024               	goto	i2l3376
  8107                           
  8108                           ; BSR set to: 0
  8109  000554  0100               	movlb	0	; () banked
  8110  000556  0100               	movlb	0	; () banked
  8111  000558  67BA               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8112  00055A  D020               	goto	i2l3376
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8116  00055C  0100               	movlb	0	; () banked
  8117  00055E  EE20 F00C          	lfsr	2,12
  8118  000562  0100               	movlb	0	; () banked
  8119  000564  51CB               	movf	_ic_ptr& (0+255),w,b
  8120  000566  26D9               	addwf	fsr2l,f,c
  8121  000568  0100               	movlb	0	; () banked
  8122  00056A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8123  00056C  22DA               	addwfc	fsr2h,f,c
  8124  00056E  0E05               	movlw	5
  8125  000570  6EDF               	movwf	indf2,c
  8126                           
  8127                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8128  000572  0100               	movlb	0	; () banked
  8129  000574  EE20 F00E          	lfsr	2,14
  8130  000578  0100               	movlb	0	; () banked
  8131  00057A  51CB               	movf	_ic_ptr& (0+255),w,b
  8132  00057C  26D9               	addwf	fsr2l,f,c
  8133  00057E  0100               	movlb	0	; () banked
  8134  000580  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8135  000582  22DA               	addwfc	fsr2h,f,c
  8136  000584  2ADF               	incf	indf2,f,c
  8137                           
  8138                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8139  000586  0100               	movlb	0	; () banked
  8140  000588  EE20 F00D          	lfsr	2,13
  8141  00058C  0100               	movlb	0	; () banked
  8142  00058E  51CB               	movf	_ic_ptr& (0+255),w,b
  8143  000590  26D9               	addwf	fsr2l,f,c
  8144  000592  0100               	movlb	0	; () banked
  8145  000594  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8146  000596  22DA               	addwfc	fsr2h,f,c
  8147  000598  0E07               	movlw	7
  8148  00059A  6EDF               	movwf	indf2,c
  8149  00059C                     i2l3376:
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;my_i2c.c: 245: }
  8153                           ;my_i2c.c: 247: if (msg_ready) {
  8154  00059C  0100               	movlb	0	; () banked
  8155  00059E  0100               	movlb	0	; () banked
  8156  0005A0  51BA               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8157  0005A2  B4D8               	btfsc	status,2,c
  8158  0005A4  D048               	goto	i2l3384
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8162  0005A6  0100               	movlb	0	; () banked
  8163  0005A8  EE20 F00B          	lfsr	2,11
  8164  0005AC  0100               	movlb	0	; () banked
  8165  0005AE  51CB               	movf	_ic_ptr& (0+255),w,b
  8166  0005B0  26D9               	addwf	fsr2l,f,c
  8167  0005B2  0100               	movlb	0	; () banked
  8168  0005B4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8169  0005B6  22DA               	addwfc	fsr2h,f,c
  8170  0005B8  0100               	movlb	0	; () banked
  8171  0005BA  EE10 F00A          	lfsr	1,10
  8172  0005BE  0100               	movlb	0	; () banked
  8173  0005C0  51CB               	movf	_ic_ptr& (0+255),w,b
  8174  0005C2  26E1               	addwf	fsr1l,f,c
  8175  0005C4  0100               	movlb	0	; () banked
  8176  0005C6  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8177  0005C8  22E2               	addwfc	fsr1h,f,c
  8178  0005CA  50E7               	movf	indf1,w,c
  8179  0005CC  0100               	movlb	0	; () banked
  8180  0005CE  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8181  0005D0  0100               	movlb	0	; () banked
  8182  0005D2  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8183  0005D4  0D01               	mullw	1
  8184  0005D6  50F3               	movf	prodl,w,c
  8185  0005D8  0100               	movlb	0	; () banked
  8186  0005DA  0100               	movlb	0	; () banked
  8187  0005DC  25CB               	addwf	_ic_ptr& (0+255),w,b
  8188  0005DE  6EE1               	movwf	fsr1l,c
  8189  0005E0  50F4               	movf	prodh,w,c
  8190  0005E2  0100               	movlb	0	; () banked
  8191  0005E4  0100               	movlb	0	; () banked
  8192  0005E6  21CC               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8193  0005E8  6EE2               	movwf	fsr1h,c
  8194  0005EA  CFDF FFE7          	movff	indf2,indf1
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8198  0005EE  0100               	movlb	0	; () banked
  8199  0005F0  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8200  0005F2  0E28               	movlw	40
  8201  0005F4  0100               	movlb	0	; () banked
  8202  0005F6  0100               	movlb	0	; () banked
  8203  0005F8  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8204  0005FA  0100               	movlb	0	; () banked
  8205  0005FC  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8206  0005FE  0100               	movlb	0	; () banked
  8207  000600  0100               	movlb	0	; () banked
  8208  000602  C0CC  F0AF         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8209  000606  0100               	movlb	0	; () banked
  8210  000608  0100               	movlb	0	; () banked
  8211  00060A  C0CB  F0AE         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8212  00060E  0100               	movlb	0	; () banked
  8213  000610  EE20 F00A          	lfsr	2,10
  8214  000614  0100               	movlb	0	; () banked
  8215  000616  51CB               	movf	_ic_ptr& (0+255),w,b
  8216  000618  26D9               	addwf	fsr2l,f,c
  8217  00061A  0100               	movlb	0	; () banked
  8218  00061C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8219  00061E  22DA               	addwfc	fsr2h,f,c
  8220  000620  50DF               	movf	indf2,w,c
  8221  000622  0100               	movlb	0	; () banked
  8222  000624  6FB2               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8223  000626  0100               	movlb	0	; () banked
  8224  000628  29B2               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8225  00062A  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8226                           
  8227                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8228  00062E  0100               	movlb	0	; () banked
  8229  000630  EE20 F00A          	lfsr	2,10
  8230  000634  D04B               	goto	L12
  8231  000636                     i2l3384:
  8232                           
  8233                           ; BSR set to: 0
  8234  000636  0100               	movlb	0	; () banked
  8235  000638  EE20 F00E          	lfsr	2,14
  8236  00063C  0100               	movlb	0	; () banked
  8237  00063E  51CB               	movf	_ic_ptr& (0+255),w,b
  8238  000640  26D9               	addwf	fsr2l,f,c
  8239  000642  0100               	movlb	0	; () banked
  8240  000644  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8241  000646  22DA               	addwfc	fsr2h,f,c
  8242  000648  50DF               	movf	indf2,w,c
  8243  00064A  B4D8               	btfsc	status,2,c
  8244  00064C  D047               	goto	i2l3392
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8248  00064E  0100               	movlb	0	; () banked
  8249  000650  EE20 F00E          	lfsr	2,14
  8250  000654  0100               	movlb	0	; () banked
  8251  000656  51CB               	movf	_ic_ptr& (0+255),w,b
  8252  000658  26D9               	addwf	fsr2l,f,c
  8253  00065A  0100               	movlb	0	; () banked
  8254  00065C  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8255  00065E  22DA               	addwfc	fsr2h,f,c
  8256  000660  50DF               	movf	indf2,w,c
  8257  000662  0100               	movlb	0	; () banked
  8258  000664  0100               	movlb	0	; () banked
  8259  000666  6FB3               	movwf	i2c_int_handler@error_buf& (0+255),b
  8260                           
  8261                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8262  000668  0100               	movlb	0	; () banked
  8263  00066A  EE20 F00D          	lfsr	2,13
  8264  00066E  0100               	movlb	0	; () banked
  8265  000670  51CB               	movf	_ic_ptr& (0+255),w,b
  8266  000672  26D9               	addwf	fsr2l,f,c
  8267  000674  0100               	movlb	0	; () banked
  8268  000676  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8269  000678  22DA               	addwfc	fsr2h,f,c
  8270  00067A  50DF               	movf	indf2,w,c
  8271  00067C  0100               	movlb	0	; () banked
  8272  00067E  0100               	movlb	0	; () banked
  8273  000680  6FB4               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8274                           
  8275                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8276  000682  0100               	movlb	0	; () banked
  8277  000684  EE20 F00B          	lfsr	2,11
  8278  000688  0100               	movlb	0	; () banked
  8279  00068A  51CB               	movf	_ic_ptr& (0+255),w,b
  8280  00068C  26D9               	addwf	fsr2l,f,c
  8281  00068E  0100               	movlb	0	; () banked
  8282  000690  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8283  000692  22DA               	addwfc	fsr2h,f,c
  8284  000694  50DF               	movf	indf2,w,c
  8285  000696  0100               	movlb	0	; () banked
  8286  000698  0100               	movlb	0	; () banked
  8287  00069A  6FB5               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8291  00069C  0100               	movlb	0	; () banked
  8292  00069E  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8293  0006A0  0E29               	movlw	41
  8294  0006A2  0100               	movlb	0	; () banked
  8295  0006A4  0100               	movlb	0	; () banked
  8296  0006A6  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8297  0006A8  0100               	movlb	0	; () banked
  8298  0006AA  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8299  0006AC  0100               	movlb	0	; () banked
  8300  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  8301  0006B0  0100               	movlb	0	; () banked
  8302  0006B2  0100               	movlb	0	; () banked
  8303  0006B4  6FAF               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8304  0006B6  0100               	movlb	0	; () banked
  8305  0006B8  0EB3               	movlw	low i2c_int_handler@error_buf
  8306  0006BA  0100               	movlb	0	; () banked
  8307  0006BC  0100               	movlb	0	; () banked
  8308  0006BE  6FAE               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8309  0006C0  0E03               	movlw	3
  8310  0006C2  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8311                           
  8312                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8313  0006C6  0100               	movlb	0	; () banked
  8314  0006C8  EE20 F00E          	lfsr	2,14
  8315  0006CC                     L12:
  8316  0006CC  0100               	movlb	0	; () banked
  8317  0006CE  51CB               	movf	_ic_ptr& (0+255),w,b
  8318  0006D0  26D9               	addwf	fsr2l,f,c
  8319  0006D2  0100               	movlb	0	; () banked
  8320  0006D4  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8321  0006D6  22DA               	addwfc	fsr2h,f,c
  8322  0006D8  0E00               	movlw	0
  8323  0006DA  6EDF               	movwf	indf2,c
  8324  0006DC                     i2l3392:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;my_i2c.c: 257: }
  8328                           ;my_i2c.c: 258: if (msg_to_send) {
  8329  0006DC  0100               	movlb	0	; () banked
  8330  0006DE  0100               	movlb	0	; () banked
  8331  0006E0  51B9               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8332  0006E2  B4D8               	btfsc	status,2,c
  8333  0006E4  0012               	return	
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8337  0006E6  0100               	movlb	0	; () banked
  8338  0006E8  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8339  0006EA  0E2A               	movlw	42
  8340  0006EC  0100               	movlb	0	; () banked
  8341  0006EE  0100               	movlb	0	; () banked
  8342  0006F0  6FAD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8343  0006F2  0100               	movlb	0	; () banked
  8344  0006F4  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8345  0006F6  0100               	movlb	0	; () banked
  8346  0006F8  0100               	movlb	0	; () banked
  8347  0006FA  C0CC  F0AF         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8348  0006FE  0100               	movlb	0	; () banked
  8349  000700  0100               	movlb	0	; () banked
  8350  000702  C0CB  F0AE         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8351  000706  0E00               	movlw	0
  8352  000708  ECC7  F00E         	call	_ToMainHigh_sendmsg
  8353                           
  8354                           ;my_i2c.c: 261: msg_to_send = 0;
  8355  00070C  0100               	movlb	0	; () banked
  8356  00070E  6FB1               	movwf	??_i2c_int_handler& (0+255),b
  8357  000710  0E00               	movlw	0
  8358  000712  0100               	movlb	0	; () banked
  8359  000714  0100               	movlb	0	; () banked
  8360  000716  6FB9               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8361  000718  0100               	movlb	0	; () banked
  8362  00071A  51B1               	movf	??_i2c_int_handler& (0+255),w,b
  8363  00071C  0012               	return	
  8364  00071E                     __end_of_i2c_int_handler:
  8365                           	opt stack 0
  8366                           pclatu	equ	0xFFB
  8367                           pclath	equ	0xFFA
  8368                           tblptru	equ	0xFF8
  8369                           tblptrh	equ	0xFF7
  8370                           tblptrl	equ	0xFF6
  8371                           tablat	equ	0xFF5
  8372                           prodh	equ	0xFF4
  8373                           prodl	equ	0xFF3
  8374                           intcon	equ	0xFF2
  8375                           postinc0	equ	0xFEE
  8376                           fsr0h	equ	0xFEA
  8377                           fsr0l	equ	0xFE9
  8378                           wreg	equ	0xFE8
  8379                           indf1	equ	0xFE7
  8380                           fsr1h	equ	0xFE2
  8381                           fsr1l	equ	0xFE1
  8382                           bsr	equ	0xFE0
  8383                           indf2	equ	0xFDF
  8384                           postinc2	equ	0xFDE
  8385                           postdec2	equ	0xFDD
  8386                           fsr2h	equ	0xFDA
  8387                           fsr2l	equ	0xFD9
  8388                           status	equ	0xFD8
  8389                           
  8390 ;; *************** function _handle_start *****************
  8391 ;; Defined at:
  8392 ;;		line 71 in file "src/my_i2c.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  data_read       1    wreg     unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  data_read       1    0[BANK0 ] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;		None               void
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;Total ram usage:        1 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_i2c_int_handler
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text50
  8420  0012C8                     __ptext50:
  8421                           	opt stack 0
  8422  0012C8                     _handle_start:
  8423                           	opt stack 18
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;incstack = 0
  8427                           ;handle_start@data_read stored from wreg
  8428  0012C8  CFE8 F097          	movff	wreg,handle_start@data_read
  8429                           
  8430                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8431  0012CC  0100               	movlb	0	; () banked
  8432  0012CE  EE20 F00B          	lfsr	2,11
  8433  0012D2  0100               	movlb	0	; () banked
  8434  0012D4  51CB               	movf	_ic_ptr& (0+255),w,b
  8435  0012D6  26D9               	addwf	fsr2l,f,c
  8436  0012D8  0100               	movlb	0	; () banked
  8437  0012DA  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8438  0012DC  22DA               	addwfc	fsr2h,f,c
  8439  0012DE  0E01               	movlw	1
  8440  0012E0  6EDF               	movwf	indf2,c
  8441                           
  8442                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8443  0012E2  0100               	movlb	0	; () banked
  8444  0012E4  EE20 F00A          	lfsr	2,10
  8445  0012E8  0100               	movlb	0	; () banked
  8446  0012EA  51CB               	movf	_ic_ptr& (0+255),w,b
  8447  0012EC  26D9               	addwf	fsr2l,f,c
  8448  0012EE  0100               	movlb	0	; () banked
  8449  0012F0  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8450  0012F2  22DA               	addwfc	fsr2h,f,c
  8451  0012F4  0E00               	movlw	0
  8452  0012F6  6EDF               	movwf	indf2,c
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;my_i2c.c: 75: if (data_read) {
  8456  0012F8  0100               	movlb	0	; () banked
  8457  0012FA  0100               	movlb	0	; () banked
  8458  0012FC  5197               	movf	handle_start@data_read& (0+255),w,b
  8459  0012FE  B4D8               	btfsc	status,2,c
  8460  001300  D03D               	goto	i2l3824
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8464  001302  AAC7               	btfss	4039,5,c	;volatile
  8465  001304  D021               	goto	i2l259
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8469  001306  0100               	movlb	0	; () banked
  8470  001308  EE20 F00C          	lfsr	2,12
  8471  00130C  0100               	movlb	0	; () banked
  8472  00130E  51CB               	movf	_ic_ptr& (0+255),w,b
  8473  001310  26D9               	addwf	fsr2l,f,c
  8474  001312  0100               	movlb	0	; () banked
  8475  001314  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8476  001316  22DA               	addwfc	fsr2h,f,c
  8477  001318  0E05               	movlw	5
  8478  00131A  6EDF               	movwf	indf2,c
  8479                           
  8480                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8481  00131C  0100               	movlb	0	; () banked
  8482  00131E  EE20 F00E          	lfsr	2,14
  8483  001322  0100               	movlb	0	; () banked
  8484  001324  51CB               	movf	_ic_ptr& (0+255),w,b
  8485  001326  26D9               	addwf	fsr2l,f,c
  8486  001328  0100               	movlb	0	; () banked
  8487  00132A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8488  00132C  22DA               	addwfc	fsr2h,f,c
  8489  00132E  2ADF               	incf	indf2,f,c
  8490                           
  8491                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8492  001330  0100               	movlb	0	; () banked
  8493  001332  EE20 F00D          	lfsr	2,13
  8494  001336  0100               	movlb	0	; () banked
  8495  001338  51CB               	movf	_ic_ptr& (0+255),w,b
  8496  00133A  26D9               	addwf	fsr2l,f,c
  8497  00133C  0100               	movlb	0	; () banked
  8498  00133E  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8499  001340  22DA               	addwfc	fsr2h,f,c
  8500  001342  0E05               	movlw	5
  8501  001344  6EDF               	movwf	indf2,c
  8502                           
  8503                           ;my_i2c.c: 82: } else {
  8504  001346  0012               	return	
  8505  001348                     i2l259:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8509  001348  A4C7               	btfss	4039,2,c	;volatile
  8510  00134A  D00C               	goto	i2l3822
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8514  00134C  0100               	movlb	0	; () banked
  8515  00134E  EE20 F00C          	lfsr	2,12
  8516  001352  0100               	movlb	0	; () banked
  8517  001354  51CB               	movf	_ic_ptr& (0+255),w,b
  8518  001356  26D9               	addwf	fsr2l,f,c
  8519  001358  0100               	movlb	0	; () banked
  8520  00135A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8521  00135C  22DA               	addwfc	fsr2h,f,c
  8522  00135E  0E08               	movlw	8
  8523  001360  6EDF               	movwf	indf2,c
  8524                           
  8525                           ;my_i2c.c: 85: } else {
  8526  001362  0012               	return	
  8527  001364                     i2l3822:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8531  001364  0100               	movlb	0	; () banked
  8532  001366  EE20 F00C          	lfsr	2,12
  8533  00136A  0100               	movlb	0	; () banked
  8534  00136C  51CB               	movf	_ic_ptr& (0+255),w,b
  8535  00136E  26D9               	addwf	fsr2l,f,c
  8536  001370  0100               	movlb	0	; () banked
  8537  001372  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8538  001374  22DA               	addwfc	fsr2h,f,c
  8539  001376  0E07               	movlw	7
  8540  001378  6EDF               	movwf	indf2,c
  8541  00137A  0012               	return	
  8542  00137C                     i2l3824:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8546  00137C  0100               	movlb	0	; () banked
  8547  00137E  EE20 F00C          	lfsr	2,12
  8548  001382  0100               	movlb	0	; () banked
  8549  001384  51CB               	movf	_ic_ptr& (0+255),w,b
  8550  001386  26D9               	addwf	fsr2l,f,c
  8551  001388  0100               	movlb	0	; () banked
  8552  00138A  51CC               	movf	(_ic_ptr+1)& (0+255),w,b
  8553  00138C  22DA               	addwfc	fsr2h,f,c
  8554  00138E  0E06               	movlw	6
  8555  001390  6EDF               	movwf	indf2,c
  8556  001392  0012               	return	
  8557  001394                     __end_of_handle_start:
  8558                           	opt stack 0
  8559                           pclatu	equ	0xFFB
  8560                           pclath	equ	0xFFA
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           postinc0	equ	0xFEE
  8569                           fsr0h	equ	0xFEA
  8570                           fsr0l	equ	0xFE9
  8571                           wreg	equ	0xFE8
  8572                           indf1	equ	0xFE7
  8573                           fsr1h	equ	0xFE2
  8574                           fsr1l	equ	0xFE1
  8575                           bsr	equ	0xFE0
  8576                           indf2	equ	0xFDF
  8577                           postinc2	equ	0xFDE
  8578                           postdec2	equ	0xFDD
  8579                           fsr2h	equ	0xFDA
  8580                           fsr2l	equ	0xFD9
  8581                           status	equ	0xFD8
  8582                           
  8583 ;; *************** function _ToMainHigh_sendmsg *****************
  8584 ;; Defined at:
  8585 ;;		line 126 in file "src/messages.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  length          1    wreg     unsigned char 
  8588 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8589 ;;  data            2   23[BANK0 ] PTR void 
  8590 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  length          1   25[BANK0 ] unsigned char 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      char 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8602 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;Total ram usage:        4 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    2
  8609 ;; This function calls:
  8610 ;;		i2_send_msg
  8611 ;; This function is called by:
  8612 ;;		_i2c_int_handler
  8613 ;;		_timer0_int_handler
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text51
  8618  001D8E                     __ptext51:
  8619                           	opt stack 0
  8620  001D8E                     _ToMainHigh_sendmsg:
  8621                           	opt stack 16
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;incstack = 0
  8625                           ;ToMainHigh_sendmsg@length stored from wreg
  8626  001D8E  CFE8 F0B0          	movff	wreg,ToMainHigh_sendmsg@length
  8627                           
  8628                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8629                           ;	Return value of _ToMainHigh_sendmsg is never used
  8630  001D92  0101               	movlb	1	; () banked
  8631  001D94  0E01               	movlw	high _ToMainHigh_MQ
  8632  001D96  0100               	movlb	0	; () banked
  8633  001D98  0100               	movlb	0	; () banked
  8634  001D9A  6FA2               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8635  001D9C  0101               	movlb	1	; () banked
  8636  001D9E  0E6C               	movlw	low _ToMainHigh_MQ
  8637  001DA0  0100               	movlb	0	; () banked
  8638  001DA2  0100               	movlb	0	; () banked
  8639  001DA4  6FA1               	movwf	i2send_msg@qptr& (0+255),b
  8640  001DA6  C0B0  F0A3         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8641  001DAA  C0AD  F0A4         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8642  001DAE  0100               	movlb	0	; () banked
  8643  001DB0  0100               	movlb	0	; () banked
  8644  001DB2  C0AF  F0A6         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8645  001DB6  0100               	movlb	0	; () banked
  8646  001DB8  0100               	movlb	0	; () banked
  8647  001DBA  C0AE  F0A5         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8648  001DBE  EC04  F008         	call	i2_send_msg	;wreg free
  8649  001DC2  0012               	return	
  8650  001DC4                     __end_of_ToMainHigh_sendmsg:
  8651                           	opt stack 0
  8652                           pclatu	equ	0xFFB
  8653                           pclath	equ	0xFFA
  8654                           tblptru	equ	0xFF8
  8655                           tblptrh	equ	0xFF7
  8656                           tblptrl	equ	0xFF6
  8657                           tablat	equ	0xFF5
  8658                           prodh	equ	0xFF4
  8659                           prodl	equ	0xFF3
  8660                           intcon	equ	0xFF2
  8661                           postinc0	equ	0xFEE
  8662                           fsr0h	equ	0xFEA
  8663                           fsr0l	equ	0xFE9
  8664                           wreg	equ	0xFE8
  8665                           indf1	equ	0xFE7
  8666                           fsr1h	equ	0xFE2
  8667                           fsr1l	equ	0xFE1
  8668                           bsr	equ	0xFE0
  8669                           indf2	equ	0xFDF
  8670                           postinc2	equ	0xFDE
  8671                           postdec2	equ	0xFDD
  8672                           fsr2h	equ	0xFDA
  8673                           fsr2l	equ	0xFD9
  8674                           status	equ	0xFD8
  8675                           
  8676 ;; *************** function i2_send_msg *****************
  8677 ;; Defined at:
  8678 ;;		line 24 in file "src/messages.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8681 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8682 ;;  length          1   12[BANK0 ] unsigned char 
  8683 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8684 ;;  data            2   14[BANK0 ] PTR void 
  8685 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8686 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8689 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8690 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8691 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8692 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      char 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8702 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8705 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8706 ;;Total ram usage:       12 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    1
  8709 ;; This function calls:
  8710 ;;		i2_memcpy
  8711 ;; This function is called by:
  8712 ;;		_ToMainHigh_sendmsg
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text52
  8717  001008                     __ptext52:
  8718                           	opt stack 0
  8719  001008                     i2_send_msg:
  8720                           	opt stack 16
  8721                           
  8722                           ;messages.c: 25: unsigned char slot;
  8723                           ;messages.c: 27: msg *qmsg;
  8724                           ;messages.c: 28: size_t tlength = length;
  8725                           
  8726                           ;incstack = 0
  8727  001008  0100               	movlb	0	; () banked
  8728  00100A  0100               	movlb	0	; () banked
  8729  00100C  C0A3  F0A8         	movff	i2send_msg@length,i2send_msg@tlength
  8730  001010  0100               	movlb	0	; () banked
  8731  001012  0100               	movlb	0	; () banked
  8732  001014  6BA9               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8736  001016  0100               	movlb	0	; () banked
  8737  001018  EE20 F034          	lfsr	2,52
  8738  00101C  0100               	movlb	0	; () banked
  8739  00101E  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8740  001020  26D9               	addwf	fsr2l,f,c
  8741  001022  0100               	movlb	0	; () banked
  8742  001024  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8743  001026  22DA               	addwfc	fsr2h,f,c
  8744  001028  50DF               	movf	indf2,w,c
  8745  00102A  0100               	movlb	0	; () banked
  8746  00102C  0100               	movlb	0	; () banked
  8747  00102E  6FAA               	movwf	i2send_msg@slot& (0+255),b
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8751  001030  0100               	movlb	0	; () banked
  8752  001032  0100               	movlb	0	; () banked
  8753  001034  51AA               	movf	i2send_msg@slot& (0+255),w,b
  8754  001036  0D0D               	mullw	13
  8755  001038  50F3               	movf	prodl,w,c
  8756  00103A  0100               	movlb	0	; () banked
  8757  00103C  0100               	movlb	0	; () banked
  8758  00103E  25A1               	addwf	i2send_msg@qptr& (0+255),w,b
  8759  001040  0100               	movlb	0	; () banked
  8760  001042  0100               	movlb	0	; () banked
  8761  001044  6FAB               	movwf	i2send_msg@qmsg& (0+255),b
  8762  001046  50F4               	movf	prodh,w,c
  8763  001048  0100               	movlb	0	; () banked
  8764  00104A  0100               	movlb	0	; () banked
  8765  00104C  21A2               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8766  00104E  0100               	movlb	0	; () banked
  8767  001050  6FAC               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;messages.c: 41: if (qmsg->full != 0) {
  8771  001052  C0AB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8772  001056  C0AC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8773  00105A  50DF               	movf	indf2,w,c
  8774  00105C  B4D8               	btfsc	status,2,c
  8775  00105E  D002               	goto	i2l3884
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;messages.c: 42: return (-1);
  8779  001060  0EFF               	movlw	255
  8780  001062  0012               	return	
  8781  001064                     i2l3884:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;messages.c: 43: }
  8785                           ;messages.c: 46: qmsg->length = length;
  8786  001064  0100               	movlb	0	; () banked
  8787  001066  EE20 F001          	lfsr	2,1
  8788  00106A  0100               	movlb	0	; () banked
  8789  00106C  51AB               	movf	i2send_msg@qmsg& (0+255),w,b
  8790  00106E  26D9               	addwf	fsr2l,f,c
  8791  001070  0100               	movlb	0	; () banked
  8792  001072  51AC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8793  001074  22DA               	addwfc	fsr2h,f,c
  8794  001076  0100               	movlb	0	; () banked
  8795  001078  C0A3  FFDF         	movff	i2send_msg@length,indf2
  8796                           
  8797                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8798  00107C  0100               	movlb	0	; () banked
  8799  00107E  EE20 F002          	lfsr	2,2
  8800  001082  0100               	movlb	0	; () banked
  8801  001084  51AB               	movf	i2send_msg@qmsg& (0+255),w,b
  8802  001086  26D9               	addwf	fsr2l,f,c
  8803  001088  0100               	movlb	0	; () banked
  8804  00108A  51AC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8805  00108C  22DA               	addwfc	fsr2h,f,c
  8806  00108E  0100               	movlb	0	; () banked
  8807  001090  C0A4  FFDF         	movff	i2send_msg@msgtype,indf2
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8811  001094  0E03               	movlw	3
  8812  001096  0100               	movlb	0	; () banked
  8813  001098  0100               	movlb	0	; () banked
  8814  00109A  25AB               	addwf	i2send_msg@qmsg& (0+255),w,b
  8815  00109C  0100               	movlb	0	; () banked
  8816  00109E  0100               	movlb	0	; () banked
  8817  0010A0  6F97               	movwf	i2memcpy@d1& (0+255),b
  8818  0010A2  0E00               	movlw	0
  8819  0010A4  0100               	movlb	0	; () banked
  8820  0010A6  0100               	movlb	0	; () banked
  8821  0010A8  21AC               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8822  0010AA  0100               	movlb	0	; () banked
  8823  0010AC  6F98               	movwf	(i2memcpy@d1+1)& (0+255),b
  8824  0010AE  0100               	movlb	0	; () banked
  8825  0010B0  0100               	movlb	0	; () banked
  8826  0010B2  C0A6  F09A         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8827  0010B6  0100               	movlb	0	; () banked
  8828  0010B8  0100               	movlb	0	; () banked
  8829  0010BA  C0A5  F099         	movff	i2send_msg@data,i2memcpy@s1
  8830  0010BE  C0A8  F09B         	movff	i2send_msg@tlength,i2memcpy@n
  8831  0010C2  C0A9  F09C         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8832  0010C6  ECCE  F00C         	call	i2_memcpy	;wreg free
  8833                           
  8834                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8835  0010CA  0100               	movlb	0	; () banked
  8836  0010CC  EE20 F034          	lfsr	2,52
  8837  0010D0  0100               	movlb	0	; () banked
  8838  0010D2  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8839  0010D4  26D9               	addwf	fsr2l,f,c
  8840  0010D6  0100               	movlb	0	; () banked
  8841  0010D8  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8842  0010DA  22DA               	addwfc	fsr2h,f,c
  8843  0010DC  0100               	movlb	0	; () banked
  8844  0010DE  EE10 F034          	lfsr	1,52
  8845  0010E2  0100               	movlb	0	; () banked
  8846  0010E4  51A1               	movf	i2send_msg@qptr& (0+255),w,b
  8847  0010E6  26E1               	addwf	fsr1l,f,c
  8848  0010E8  0100               	movlb	0	; () banked
  8849  0010EA  51A2               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8850  0010EC  22E2               	addwfc	fsr1h,f,c
  8851  0010EE  50E7               	movf	indf1,w,c
  8852  0010F0  0100               	movlb	0	; () banked
  8853  0010F2  6FA7               	movwf	??i2_send_msg& (0+255),b
  8854  0010F4  0100               	movlb	0	; () banked
  8855  0010F6  29A7               	incf	??i2_send_msg& (0+255),w,b
  8856  0010F8  0B03               	andlw	3
  8857  0010FA  6EDF               	movwf	indf2,c
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;messages.c: 59: qmsg->full = 1;
  8861  0010FC  C0AB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8862  001100  C0AC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8863  001104  0E01               	movlw	1
  8864  001106  6EDF               	movwf	indf2,c
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;messages.c: 60: return (1);
  8868  001108  0E01               	movlw	1
  8869  00110A  0012               	return	
  8870  00110C                     __end_ofi2_send_msg:
  8871                           	opt stack 0
  8872                           pclatu	equ	0xFFB
  8873                           pclath	equ	0xFFA
  8874                           tblptru	equ	0xFF8
  8875                           tblptrh	equ	0xFF7
  8876                           tblptrl	equ	0xFF6
  8877                           tablat	equ	0xFF5
  8878                           prodh	equ	0xFF4
  8879                           prodl	equ	0xFF3
  8880                           intcon	equ	0xFF2
  8881                           postinc0	equ	0xFEE
  8882                           fsr0h	equ	0xFEA
  8883                           fsr0l	equ	0xFE9
  8884                           wreg	equ	0xFE8
  8885                           indf1	equ	0xFE7
  8886                           fsr1h	equ	0xFE2
  8887                           fsr1l	equ	0xFE1
  8888                           bsr	equ	0xFE0
  8889                           indf2	equ	0xFDF
  8890                           postinc2	equ	0xFDE
  8891                           postdec2	equ	0xFDD
  8892                           fsr2h	equ	0xFDA
  8893                           fsr2l	equ	0xFD9
  8894                           status	equ	0xFD8
  8895                           
  8896 ;; *************** function i2_memcpy *****************
  8897 ;; Defined at:
  8898 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  d1              2    0[BANK0 ] PTR void 
  8901 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8902 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8903 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8904 ;;  s1              2    2[BANK0 ] PTR const void 
  8905 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8906 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8907 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8908 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8909 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8910 ;;  n               2    4[BANK0 ] unsigned int 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8913 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8914 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8915 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8916 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8917 ;;		 -> main@t1thread_data(12), main@ic(28), main@uc(5), 
  8918 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8919 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8920 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8921 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  2    0[BANK0 ] PTR void 
  8924 ;; Registers used:
  8925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8931 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8932 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;Total ram usage:       10 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		i2_send_msg
  8941 ;;		i2_recv_msg
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text53
  8946  00199C                     __ptext53:
  8947                           	opt stack 0
  8948  00199C                     i2_memcpy:
  8949                           	opt stack 16
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;incstack = 0
  8953  00199C  0100               	movlb	0	; () banked
  8954  00199E  0100               	movlb	0	; () banked
  8955  0019A0  C09A  F0A0         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8956  0019A4  0100               	movlb	0	; () banked
  8957  0019A6  0100               	movlb	0	; () banked
  8958  0019A8  C099  F09F         	movff	i2memcpy@s1,i2memcpy@s
  8959  0019AC  0100               	movlb	0	; () banked
  8960  0019AE  0100               	movlb	0	; () banked
  8961  0019B0  C098  F09E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8962  0019B4  0100               	movlb	0	; () banked
  8963  0019B6  0100               	movlb	0	; () banked
  8964  0019B8  C097  F09D         	movff	i2memcpy@d1,i2memcpy@d
  8965  0019BC  D012               	goto	i2l3948
  8966  0019BE                     i2l3942:
  8967                           
  8968                           ; BSR set to: 0
  8969  0019BE  C09F  FFD9         	movff	i2memcpy@s,fsr2l
  8970  0019C2  C0A0  FFDA         	movff	i2memcpy@s+1,fsr2h
  8971  0019C6  C09D  FFE1         	movff	i2memcpy@d,fsr1l
  8972  0019CA  C09E  FFE2         	movff	i2memcpy@d+1,fsr1h
  8973  0019CE  CFDF FFE7          	movff	indf2,indf1
  8974                           
  8975                           ; BSR set to: 0
  8976  0019D2  0100               	movlb	0	; () banked
  8977  0019D4  0100               	movlb	0	; () banked
  8978  0019D6  4B9F               	infsnz	i2memcpy@s& (0+255),f,b
  8979  0019D8  2BA0               	incf	(i2memcpy@s+1)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982  0019DA  0100               	movlb	0	; () banked
  8983  0019DC  0100               	movlb	0	; () banked
  8984  0019DE  4B9D               	infsnz	i2memcpy@d& (0+255),f,b
  8985  0019E0  2B9E               	incf	(i2memcpy@d+1)& (0+255),f,b
  8986  0019E2                     i2l3948:
  8987                           
  8988                           ; BSR set to: 0
  8989  0019E2  0100               	movlb	0	; () banked
  8990  0019E4  0100               	movlb	0	; () banked
  8991  0019E6  079B               	decf	i2memcpy@n& (0+255),f,b
  8992  0019E8  A0D8               	btfss	status,0,c
  8993  0019EA  079C               	decf	(i2memcpy@n+1)& (0+255),f,b
  8994  0019EC  0100               	movlb	0	; () banked
  8995  0019EE  299B               	incf	i2memcpy@n& (0+255),w,b
  8996  0019F0  B4D8               	btfsc	status,2,c
  8997  0019F2  299C               	incf	(i2memcpy@n+1)& (0+255),w,b
  8998  0019F4  B4D8               	btfsc	status,2,c
  8999                           
  9000                           ; BSR set to: 0
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;	Return value of i2_memcpy is never used
  9004  0019F6  0012               	return	
  9005  0019F8  D7E2               	goto	i2l3942
  9006  0019FA                     __end_ofi2_memcpy:
  9007                           	opt stack 0
  9008                           pclatu	equ	0xFFB
  9009                           pclath	equ	0xFFA
  9010                           tblptru	equ	0xFF8
  9011                           tblptrh	equ	0xFF7
  9012                           tblptrl	equ	0xFF6
  9013                           tablat	equ	0xFF5
  9014                           prodh	equ	0xFF4
  9015                           prodl	equ	0xFF3
  9016                           intcon	equ	0xFF2
  9017                           postinc0	equ	0xFEE
  9018                           fsr0h	equ	0xFEA
  9019                           fsr0l	equ	0xFE9
  9020                           wreg	equ	0xFE8
  9021                           indf1	equ	0xFE7
  9022                           fsr1h	equ	0xFE2
  9023                           fsr1l	equ	0xFE1
  9024                           bsr	equ	0xFE0
  9025                           indf2	equ	0xFDF
  9026                           postinc2	equ	0xFDE
  9027                           postdec2	equ	0xFDD
  9028                           fsr2h	equ	0xFDA
  9029                           fsr2l	equ	0xFD9
  9030                           status	equ	0xFD8
  9031                           
  9032 ;; *************** function _SleepIfOkay *****************
  9033 ;; Defined at:
  9034 ;;		line 228 in file "src/messages.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;		None
  9039 ;; Return value:  Size  Location     Type
  9040 ;;		None               void
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;Total ram usage:        0 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    2
  9055 ;; This function calls:
  9056 ;;		_enter_sleep_mode
  9057 ;;		i2_check_msg
  9058 ;;		i2_in_high_int
  9059 ;;		i2_in_low_int
  9060 ;; This function is called by:
  9061 ;;		_InterruptHandlerHigh
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text54
  9066  001866                     __ptext54:
  9067                           	opt stack 0
  9068  001866                     _SleepIfOkay:
  9069                           	opt stack 17
  9070                           
  9071                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;incstack = 0
  9075  001866  0100               	movlb	0	; () banked
  9076  001868  0100               	movlb	0	; () banked
  9077  00186A  6760               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9078  00186C  D001               	goto	i2l2462
  9079  00186E  0012               	return	
  9080  001870                     i2l2462:
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;messages.c: 232: }
  9084                           ;messages.c: 235: if (in_low_int()) {
  9085  001870  EC4D  F00D         	call	i2_in_low_int	;wreg free
  9086  001874  0100               	movlb	0	; () banked
  9087  001876  0100               	movlb	0	; () banked
  9088  001878  519A               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9089  00187A  0100               	movlb	0	; () banked
  9090  00187C  1199               	iorwf	?i2_in_low_int& (0+255),w,b
  9091  00187E  A4D8               	btfss	status,2,c
  9092  001880  0012               	return	
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;messages.c: 237: }
  9096                           ;messages.c: 240: if (!in_high_int()) {
  9097                           
  9098                           ; BSR set to: 0
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;messages.c: 236: return;
  9102  001882  ECD6  F00F         	call	i2_in_high_int	;wreg free
  9103  001886  0100               	movlb	0	; () banked
  9104  001888  0100               	movlb	0	; () banked
  9105  00188A  5198               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9106  00188C  0100               	movlb	0	; () banked
  9107  00188E  1197               	iorwf	?i2_in_high_int& (0+255),w,b
  9108  001890  B4D8               	btfsc	status,2,c
  9109  001892  0012               	return	
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;messages.c: 242: }
  9113                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9114                           
  9115                           ; BSR set to: 0
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;messages.c: 241: return;
  9119  001894  0101               	movlb	1	; () banked
  9120  001896  0E01               	movlw	high _ToMainHigh_MQ
  9121  001898  0100               	movlb	0	; () banked
  9122  00189A  0100               	movlb	0	; () banked
  9123  00189C  6F98               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9124  00189E  0101               	movlb	1	; () banked
  9125  0018A0  0E6C               	movlw	low _ToMainHigh_MQ
  9126  0018A2  0100               	movlb	0	; () banked
  9127  0018A4  0100               	movlb	0	; () banked
  9128  0018A6  6F97               	movwf	i2check_msg@qptr& (0+255),b
  9129  0018A8  ECE2  F00E         	call	i2_check_msg	;wreg free
  9130  0018AC  0900               	iorlw	0
  9131  0018AE  A4D8               	btfss	status,2,c
  9132  0018B0  0012               	return	
  9133                           
  9134                           ;messages.c: 249: }
  9135                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9136                           
  9137                           ;messages.c: 248: return;
  9138  0018B2  0100               	movlb	0	; () banked
  9139  0018B4  0E00               	movlw	high _ToMainLow_MQ
  9140  0018B6  0100               	movlb	0	; () banked
  9141  0018B8  0100               	movlb	0	; () banked
  9142  0018BA  6F98               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9143  0018BC  0100               	movlb	0	; () banked
  9144  0018BE  0E61               	movlw	low _ToMainLow_MQ
  9145  0018C0  0100               	movlb	0	; () banked
  9146  0018C2  0100               	movlb	0	; () banked
  9147  0018C4  6F97               	movwf	i2check_msg@qptr& (0+255),b
  9148  0018C6  ECE2  F00E         	call	i2_check_msg	;wreg free
  9149  0018CA  0900               	iorlw	0
  9150  0018CC  B4D8               	btfsc	status,2,c
  9151                           
  9152                           ;messages.c: 252: }
  9153                           ;messages.c: 253: enter_sleep_mode();
  9154                           
  9155                           ;messages.c: 251: return;
  9156  0018CE  ECE3  F00F         	call	_enter_sleep_mode	;wreg free
  9157  0018D2  0012               	return	
  9158  0018D4                     __end_of_SleepIfOkay:
  9159                           	opt stack 0
  9160                           pclatu	equ	0xFFB
  9161                           pclath	equ	0xFFA
  9162                           tblptru	equ	0xFF8
  9163                           tblptrh	equ	0xFF7
  9164                           tblptrl	equ	0xFF6
  9165                           tablat	equ	0xFF5
  9166                           prodh	equ	0xFF4
  9167                           prodl	equ	0xFF3
  9168                           intcon	equ	0xFF2
  9169                           postinc0	equ	0xFEE
  9170                           fsr0h	equ	0xFEA
  9171                           fsr0l	equ	0xFE9
  9172                           wreg	equ	0xFE8
  9173                           indf1	equ	0xFE7
  9174                           fsr1h	equ	0xFE2
  9175                           fsr1l	equ	0xFE1
  9176                           bsr	equ	0xFE0
  9177                           indf2	equ	0xFDF
  9178                           postinc2	equ	0xFDE
  9179                           postdec2	equ	0xFDD
  9180                           fsr2h	equ	0xFDA
  9181                           fsr2l	equ	0xFD9
  9182                           status	equ	0xFD8
  9183                           
  9184 ;; *************** function i2_in_low_int *****************
  9185 ;; Defined at:
  9186 ;;		line 30 in file "src/interrupts.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;		None
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;		None
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  2    2[BANK0 ] int 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, cstack
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9204 ;;Total ram usage:        2 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    1
  9207 ;; This function calls:
  9208 ;;		i2_in_high_int
  9209 ;; This function is called by:
  9210 ;;		_SleepIfOkay
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text55
  9215  001A9A                     __ptext55:
  9216                           	opt stack 0
  9217  001A9A                     i2_in_low_int:
  9218                           	opt stack 17
  9219                           
  9220                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9221                           
  9222                           ;incstack = 0
  9223  001A9A  ACF2               	btfss	intcon,6,c	;volatile
  9224  001A9C  D008               	goto	i2l2962
  9225                           
  9226                           ;interrupts.c: 32: return (0);
  9227  001A9E  0E00               	movlw	0
  9228  001AA0  0100               	movlb	0	; () banked
  9229  001AA2  0100               	movlb	0	; () banked
  9230  001AA4  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9231  001AA6  0E00               	movlw	0
  9232  001AA8  0100               	movlb	0	; () banked
  9233  001AAA  6F99               	movwf	?i2_in_low_int& (0+255),b
  9234  001AAC  0012               	return	
  9235  001AAE                     i2l2962:
  9236  001AAE  ECD6  F00F         	call	i2_in_high_int	;wreg free
  9237  001AB2  0100               	movlb	0	; () banked
  9238  001AB4  0100               	movlb	0	; () banked
  9239  001AB6  5198               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9240  001AB8  0100               	movlb	0	; () banked
  9241  001ABA  1197               	iorwf	?i2_in_high_int& (0+255),w,b
  9242  001ABC  B4D8               	btfsc	status,2,c
  9243  001ABE  D008               	goto	i2l2970
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;interrupts.c: 34: return (0);
  9247  001AC0  0E00               	movlw	0
  9248  001AC2  0100               	movlb	0	; () banked
  9249  001AC4  0100               	movlb	0	; () banked
  9250  001AC6  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9251  001AC8  0E00               	movlw	0
  9252  001ACA  0100               	movlb	0	; () banked
  9253  001ACC  6F99               	movwf	?i2_in_low_int& (0+255),b
  9254  001ACE  0012               	return	
  9255  001AD0                     i2l2970:
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;interrupts.c: 36: return (1);
  9259  001AD0  0E00               	movlw	0
  9260  001AD2  0100               	movlb	0	; () banked
  9261  001AD4  0100               	movlb	0	; () banked
  9262  001AD6  6F9A               	movwf	(?i2_in_low_int+1)& (0+255),b
  9263  001AD8  0E01               	movlw	1
  9264  001ADA  0100               	movlb	0	; () banked
  9265  001ADC  6F99               	movwf	?i2_in_low_int& (0+255),b
  9266  001ADE  0012               	return	
  9267  001AE0                     __end_ofi2_in_low_int:
  9268                           	opt stack 0
  9269                           pclatu	equ	0xFFB
  9270                           pclath	equ	0xFFA
  9271                           tblptru	equ	0xFF8
  9272                           tblptrh	equ	0xFF7
  9273                           tblptrl	equ	0xFF6
  9274                           tablat	equ	0xFF5
  9275                           prodh	equ	0xFF4
  9276                           prodl	equ	0xFF3
  9277                           intcon	equ	0xFF2
  9278                           postinc0	equ	0xFEE
  9279                           fsr0h	equ	0xFEA
  9280                           fsr0l	equ	0xFE9
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           fsr1h	equ	0xFE2
  9284                           fsr1l	equ	0xFE1
  9285                           bsr	equ	0xFE0
  9286                           indf2	equ	0xFDF
  9287                           postinc2	equ	0xFDE
  9288                           postdec2	equ	0xFDD
  9289                           fsr2h	equ	0xFDA
  9290                           fsr2l	equ	0xFD9
  9291                           status	equ	0xFD8
  9292                           
  9293 ;; *************** function i2_in_high_int *****************
  9294 ;; Defined at:
  9295 ;;		line 22 in file "src/interrupts.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;		None
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  2    0[BANK0 ] int 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;Total ram usage:        2 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_SleepIfOkay
  9319 ;;		i2_in_low_int
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text56
  9324  001FAC                     __ptext56:
  9325                           	opt stack 0
  9326  001FAC                     i2_in_high_int:
  9327                           	opt stack 17
  9328                           
  9329                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;incstack = 0
  9333  001FAC  0E00               	movlw	0
  9334  001FAE  AEF2               	btfss	intcon,7,c	;volatile
  9335  001FB0  0E01               	movlw	1
  9336  001FB2  0100               	movlb	0	; () banked
  9337  001FB4  0100               	movlb	0	; () banked
  9338  001FB6  6F97               	movwf	?i2_in_high_int& (0+255),b
  9339  001FB8  0100               	movlb	0	; () banked
  9340  001FBA  6B98               	clrf	(?i2_in_high_int+1)& (0+255),b
  9341  001FBC  0012               	return	
  9342  001FBE                     __end_ofi2_in_high_int:
  9343                           	opt stack 0
  9344                           pclatu	equ	0xFFB
  9345                           pclath	equ	0xFFA
  9346                           tblptru	equ	0xFF8
  9347                           tblptrh	equ	0xFF7
  9348                           tblptrl	equ	0xFF6
  9349                           tablat	equ	0xFF5
  9350                           prodh	equ	0xFF4
  9351                           prodl	equ	0xFF3
  9352                           intcon	equ	0xFF2
  9353                           postinc0	equ	0xFEE
  9354                           fsr0h	equ	0xFEA
  9355                           fsr0l	equ	0xFE9
  9356                           wreg	equ	0xFE8
  9357                           indf1	equ	0xFE7
  9358                           fsr1h	equ	0xFE2
  9359                           fsr1l	equ	0xFE1
  9360                           bsr	equ	0xFE0
  9361                           indf2	equ	0xFDF
  9362                           postinc2	equ	0xFDE
  9363                           postdec2	equ	0xFDD
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function i2_check_msg *****************
  9369 ;; Defined at:
  9370 ;;		line 222 in file "src/messages.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9373 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      unsigned char 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9389 ;;Total ram usage:        3 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_SleepIfOkay
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           	psect	text57
  9399  001DC4                     __ptext57:
  9400                           	opt stack 0
  9401  001DC4                     i2_check_msg:
  9402                           	opt stack 18
  9403                           
  9404                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;incstack = 0
  9408  001DC4  0100               	movlb	0	; () banked
  9409  001DC6  EE20 F035          	lfsr	2,53
  9410  001DCA  0100               	movlb	0	; () banked
  9411  001DCC  5197               	movf	i2check_msg@qptr& (0+255),w,b
  9412  001DCE  26D9               	addwf	fsr2l,f,c
  9413  001DD0  0100               	movlb	0	; () banked
  9414  001DD2  5198               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9415  001DD4  22DA               	addwfc	fsr2h,f,c
  9416  001DD6  50DF               	movf	indf2,w,c
  9417  001DD8  0100               	movlb	0	; () banked
  9418  001DDA  6F99               	movwf	??i2_check_msg& (0+255),b
  9419  001DDC  0100               	movlb	0	; () banked
  9420  001DDE  5199               	movf	??i2_check_msg& (0+255),w,b
  9421  001DE0  0D0D               	mullw	13
  9422  001DE2  50F3               	movf	prodl,w,c
  9423  001DE4  0100               	movlb	0	; () banked
  9424  001DE6  0100               	movlb	0	; () banked
  9425  001DE8  2597               	addwf	i2check_msg@qptr& (0+255),w,b
  9426  001DEA  6ED9               	movwf	fsr2l,c
  9427  001DEC  50F4               	movf	prodh,w,c
  9428  001DEE  0100               	movlb	0	; () banked
  9429  001DF0  0100               	movlb	0	; () banked
  9430  001DF2  2198               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9431  001DF4  6EDA               	movwf	fsr2h,c
  9432  001DF6  50DF               	movf	indf2,w,c
  9433  001DF8  0012               	return	
  9434  001DFA                     __end_ofi2_check_msg:
  9435                           	opt stack 0
  9436                           pclatu	equ	0xFFB
  9437                           pclath	equ	0xFFA
  9438                           tblptru	equ	0xFF8
  9439                           tblptrh	equ	0xFF7
  9440                           tblptrl	equ	0xFF6
  9441                           tablat	equ	0xFF5
  9442                           prodh	equ	0xFF4
  9443                           prodl	equ	0xFF3
  9444                           intcon	equ	0xFF2
  9445                           postinc0	equ	0xFEE
  9446                           fsr0h	equ	0xFEA
  9447                           fsr0l	equ	0xFE9
  9448                           wreg	equ	0xFE8
  9449                           indf1	equ	0xFE7
  9450                           fsr1h	equ	0xFE2
  9451                           fsr1l	equ	0xFE1
  9452                           bsr	equ	0xFE0
  9453                           indf2	equ	0xFDF
  9454                           postinc2	equ	0xFDE
  9455                           postdec2	equ	0xFDD
  9456                           fsr2h	equ	0xFDA
  9457                           fsr2l	equ	0xFD9
  9458                           status	equ	0xFD8
  9459                           
  9460 ;; *************** function _enter_sleep_mode *****************
  9461 ;; Defined at:
  9462 ;;		line 202 in file "src/messages.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;		None               void
  9469 ;; Registers used:
  9470 ;;		None
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_SleepIfOkay
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text58
  9490  001FC6                     __ptext58:
  9491                           	opt stack 0
  9492  001FC6                     _enter_sleep_mode:
  9493                           	opt stack 18
  9494                           
  9495                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;incstack = 0
  9499  001FC6  8ED3               	bsf	4051,7,c	;volatile
  9500  001FC8  0003               	sleep		;# 
  9501  001FCA  0012               	return	
  9502  001FCC                     __end_of_enter_sleep_mode:
  9503                           	opt stack 0
  9504  0000                     pclatu	equ	0xFFB
  9505                           pclath	equ	0xFFA
  9506                           tblptru	equ	0xFF8
  9507                           tblptrh	equ	0xFF7
  9508                           tblptrl	equ	0xFF6
  9509                           tablat	equ	0xFF5
  9510                           prodh	equ	0xFF4
  9511                           prodl	equ	0xFF3
  9512                           intcon	equ	0xFF2
  9513                           postinc0	equ	0xFEE
  9514                           fsr0h	equ	0xFEA
  9515                           fsr0l	equ	0xFE9
  9516                           wreg	equ	0xFE8
  9517                           indf1	equ	0xFE7
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           bsr	equ	0xFE0
  9521                           indf2	equ	0xFDF
  9522                           postinc2	equ	0xFDE
  9523                           postdec2	equ	0xFDD
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8
  9527                           pclatu	equ	0xFFB
  9528                           pclath	equ	0xFFA
  9529                           tblptru	equ	0xFF8
  9530                           tblptrh	equ	0xFF7
  9531                           tblptrl	equ	0xFF6
  9532                           tablat	equ	0xFF5
  9533                           prodh	equ	0xFF4
  9534                           prodl	equ	0xFF3
  9535                           intcon	equ	0xFF2
  9536                           postinc0	equ	0xFEE
  9537                           fsr0h	equ	0xFEA
  9538                           fsr0l	equ	0xFE9
  9539                           wreg	equ	0xFE8
  9540                           indf1	equ	0xFE7
  9541                           fsr1h	equ	0xFE2
  9542                           fsr1l	equ	0xFE1
  9543                           bsr	equ	0xFE0
  9544                           indf2	equ	0xFDF
  9545                           postinc2	equ	0xFDE
  9546                           postdec2	equ	0xFDD
  9547                           fsr2h	equ	0xFDA
  9548                           fsr2l	equ	0xFD9
  9549                           status	equ	0xFD8
  9550                           
  9551                           	psect	param0
  9552  0000                     pclatu	equ	0xFFB
  9553                           pclath	equ	0xFFA
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           intcon	equ	0xFF2
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           indf1	equ	0xFE7
  9566                           fsr1h	equ	0xFE2
  9567                           fsr1l	equ	0xFE1
  9568                           bsr	equ	0xFE0
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           postdec2	equ	0xFDD
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      55
    BANK0           160     52     109
    BANK1           256     45     207
    BANK2           256     73      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    sendUART@data	PTR unsigned char  size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 12
		 -> NULL(NULL[0]), main@t1thread_data(BANK2[12]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[12]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_Open1USART
    _main->_OpenTimer0
    _main->_OpenTimer1
    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_i2c_configure_slave
    _main->_start_i2c_slave_reply
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->___lwmod
    _ToMainLow_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_Delay1KTCYx
    _block_on_To_msgqueues->_check_msg

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUART
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0   15888
                                             44 BANK1      1     1      0
                                              0 BANK2     73    73      0
                         _Open1USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             25 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             21 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      15     7      8    3890
                                             30 BANK1     14     6      8
                         _ReadTimer1
                            ___lwmod
                           _sendUART
 ---------------------------------------------------------------------------------
 (2) _sendUART                                             5     3      2    2874
                                             25 BANK1      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2701
                                             21 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             51 BANK0      1     1      0
                                             10 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             51 BANK0      1     1      0
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      81
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             51 BANK0      1     1      0
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     170
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                              3 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             51 BANK0      1     1      0
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             51 BANK0      1     1      0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             51 BANK0      1     1      0
                                             24 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             51 BANK0      1     1      0
                                             24 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     170
                                             51 BANK0      1     0      1
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     387
                                             51 BANK0      1     1      0
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0   10490
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               6     6      0    3280
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    3481
                                             26 COMRAM     1     1      0
                         _Read1USART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _Read1USART                                           1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   3     3      0    3729
                                             26 COMRAM     3     3      0
                        _WriteTimer1
                       i1_ReadTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) i1_ToMainLow_sendmsg                                  4     1      3    3447
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    2859
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) i1_ReadTimer1                                         4     2      2     181
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   10905
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    6686
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     132
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2994
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    11    11      0    3983
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2659
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _ReadTimer1
     ___lwmod
     _sendUART
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _WriteTimer1
     i1_ReadTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _Read1USART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     49      49      10       28.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2D      CF       8       80.9%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      6D       5       68.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      37       1       57.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC       6        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 23 23:21:43 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 0060  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1BAA  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1D58  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 00A4  
              i2recv_msg@tlength 00AB             ?_FromMainLow_recvmsg 0019  
                            l109 088C                              l500 172E  
                            l504 174C                              l433 1E4E  
                            l506 175A                              l434 1E50  
                            l507 175C                              l461 1C64  
                            l462 1C66                              l732 1F2E  
           ?_FromMainLow_sendmsg 01B7  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 01A2                 ??_init_uart_recv 00CA  
                ReadTimer1@timer 01A4              i2recv_msg@maxlength 00A3  
                           l1044 155A                             l3224 1A8A  
                           l3216 1A68                             l3238 1B58  
                           l3612 1586                             l3700 11C6  
                           l3460 08C0                             l3462 08DE  
                           l3624 15E6                             l3712 17C2  
                           l3480 0990                             l3456 083A  
                           l3472 0934                             l3448 07F8  
                           l3562 1730                             l3554 171A  
                           l3618 15B6                             l3634 0E12  
                           l3730 0F60                             l3482 09E2  
                           l3458 0892                             l3466 08FC  
                           l3474 0952                             l3660 0ACE  
                           l3468 0914                             l3574 174E  
                           l3750 1984                             l3638 0E96  
                           l3662 0AFA                             l3486 0A34  
                           l3744 1960                             l3850 1B20  
                           l3666 0B28                             l3658 0ABE  
                           l3764 0BF6                             l3780 0CBC  
                           l3860 14F8                             l3668 0B4E  
                           l3862 150A                             l3864 1512  
                           l3696 119E                             l3868 1546  
                           _LATB 000F8A                             u3017 1F30  
                           i1l52 007A                  _FromMainHigh_MQ 0100  
                 Read1USART@data 0001           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 11F6                             _main 071E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 022B  
                     i1_send_msg 1394                             pclat 000FFA  
                    i2_check_msg 1DC4                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0097  
                           start 00C0                       i2_recv_msg 0CC0  
                     i2_send_msg 1008        ToMainHigh_recvmsg@msgtype 01BA  
                 send_msg@length 01AE      __size_of_timer0_int_handler 008A  
                    _Delay1KTCYx 1F2A                    __CFG_PLLDIV$3 000000  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00CB  
                          ?_main 0001     __size_ofi1_ToMainLow_sendmsg 0026  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 01A2                            i1l342 1A50  
                          i1l345 1A28                  __end_of___lwmod 1564  
                     i1memcpy@d1 0001                            i1l517 1F1A  
                          i2l303 0538                            i2l271 018C  
                          i2l259 1348                            i2l275 01D0  
                          i2l269 0526                            i2l297 0498  
                          i2l289 0360                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 00AF                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                     i2memcpy@d1 0097                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0099                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1B68  
     ToMainLow_recvmsg@maxlength 00CA                       _Read1USART 1F0C  
        timer0_lthread@msgbuffer 01A8                   __CFG_T1DIG$OFF 000000  
        i2c_configure_slave@addr 00CA                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 19FA  
               __end_ofi1_memcpy 1CAE                 __end_ofi2_memcpy 19FA  
                __initialization 1ECA       uart_trans_int_handler@data 001F  
                   __end_of_main 0A54     uart_trans_int_handler@length 0023  
                     _ReadTimer1 1F40      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_recvmsg 0042       __size_of_ToMainLow_sendmsg 0036  
  __size_of_FromMainHigh_recvmsg 0042            __size_ofi2_in_low_int 0046  
                 __CFG_OSC$HSPLL 000000                       _Open1USART 16FA  
                         ??_main 01CE                  send_msg@msgtype 01AF  
                  __activetblptr 000002                  send_msg@tlength 01B2  
     FromMainLow_sendmsg@msgtype 01B7             __end_of_handle_start 1394  
              timer1_lthread@len 01CA          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l4002 12C4  
                         i1l4032 14BA                           i1l4054 1A42  
                         i1l4062 0066                           i1l4068 0070  
                         i1l3932 1C80                           i2l3312 0288  
                     _OpenTimer0 1E2A                           i2l3314 02C8  
                         i2l3306 0270                           i1l3938 1C9C  
                         i1l3962 13CC                       _OpenTimer1 1C2E  
                         i2l2462 1870                           i2l3342 0428  
                         i2l3270 016A                           i2l3254 16BC  
                 __CFG_WDTEN$OFF 000000                           i2l3336 03D4  
                         i2l3248 16B2                           i2l3370 053C  
                         i2l3338 0416                           i1l3986 123C  
                         i2l3364 04FA                           i2l3276 0182  
                         i2l3294 0208                           i2l3392 06DC  
                         i2l3384 0636                           i2l3376 059C  
                         i2l3296 0234                           i2l3822 1364  
                         i2l3824 137C                           i2l2970 1AD0  
                         i2l2962 1AAE                           i2l3908 0D2C  
                         i2l3924 0DF2                           i2l3942 19BE  
                         i2l3948 19E2                           i2l3884 1064  
                         _RCREG1 000FAF      __end_of_i2c_configure_slave 1E7C  
                  ??_SleepIfOkay 009B                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                           _TXREG1 000FAE  
                    ?i1_send_msg 000B                           _TXSTA1 000FAD  
  __end_of_start_i2c_slave_reply 0F04               timer0_lthread@tptr 01A2  
                 __CFG_WPDIS$OFF 000000          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 00A1                     i2_in_low_int 1A9A  
                    ?i2_send_msg 00A1                   __CFG_XINST$OFF 000000  
                _i2c_int_handler 00C4                 OpenTimer0@config 00CA  
                         _ic_ptr 00CB                        ??___lwmod 00CA  
                  main@msgbuffer 0200                 __end_of_init_i2c 193E  
               OpenTimer1@config 01A3                           _memcpy 193E  
                         clear_0 1ED0                           clear_1 1EDC  
                         _uc_ptr 0035                 __end_of_sendUART 1B24  
                         main@ic 022D                           main@uc 021A  
               __end_of_recv_msg 0CC0      start_i2c_slave_reply@length 00CA  
                      ??_in_main 00CA                 __end_of_send_msg 1008  
          timer0_int_handler@val 00B9          i2c_int_handler@i2c_data 00B8  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 01A4  
       ToMainLow_recvmsg@msgtype 01BA             __size_of_in_high_int 0012  
                    ?_Read1USART 0001          FromMainLow_sendmsg@data 01B8  
              _init_uart_lthread 1FCC                       __accesstop 0060  
        __end_of__initialization 1EE4       __end_of_ToMainHigh_recvmsg 1BEC  
     __end_of_ToMainHigh_sendmsg 1DC4               ?_init_uart_lthread 01A2  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 1CEC              __end_of_SleepIfOkay 18D4  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 0012  
            ??_init_uart_lthread 00CA                      ?_ReadTimer1 01A2  
             __size_of_check_msg 0036                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 01A2        timer0_int_handler@msgtype 00B7  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 16F2  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0097  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 0136  
               _enter_sleep_mode 1FC6              __size_ofi2_send_msg 0104  
           timer1_lthread@length 01C4                    check_msg@qptr 01A2  
      __end_of_init_uart_lthread 1FCE          ??_block_on_To_msgqueues 01A8  
           __size_of_init_queues 0072                       __pbssBANK0 0060  
                     __pbssBANK1 0100                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 00CA   uart_trans_int_handler@curIndex 0021  
                     __pnvCOMRAM 0035              i1_ToMainLow_sendmsg 1EA4  
        __end_of_i2c_int_handler 071E                     ?i2_check_msg 0097  
             timer1_lthread@even 01CC               timer1_lthread@tptr 01C0  
              recv_msg@maxlength 01AE                  recv_msg@msgtype 01AF  
                recv_msg@tlength 01B6            __size_of_handle_start 00CC  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0099  
                        ?_memcpy 01A2                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0099                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 0012  
                 sendUART@length 01BE             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0136                   sendUART@retval 01BF  
               Open1USART@config 00CA                       ??i1_memcpy 0007  
                     ??i2_memcpy 009D                          _SPBRGH1 000F7F  
               i1send_msg@length 000D                    i2_in_high_int 1FAC  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1D8E  
                      ?_init_i2c 01A2                      _SleepIfOkay 1866  
            __size_of_Open1USART 0080                        ?_sendUART 01BB  
                      ?_recv_msg 01AC                       _in_low_int 1A54  
                   _handle_start 12C8                          __Hparam 0000  
                      ?_send_msg 01AC                          __Lparam 0000  
     __end_of_timer0_int_handler 1678      __end_of_FromMainLow_recvmsg 1EA4  
    __end_of_FromMainLow_sendmsg 1D22                 init_uart_recv@uc 01A2  
                        ___lwmod 14DA                  __CFG_STVREN$OFF 000000  
                        __pcinit 1ECA                  __size_of_memcpy 005E  
                     _init_queue 177A                          __ramtop 0F00  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0040                          __ptext0 071E  
                        __ptext1 110C                          __ptext2 1CEC  
                        __ptext3 0A54                          __ptext4 1AE0  
                        __ptext5 1D22                          __ptext6 0F04  
                        __ptext7 14DA                          __ptext8 1F40  
                        __ptext9 1F52                uart_lthread@index 01C4  
                      _T0CONbits 000FD5                OpenTimer1@config1 00CA  
                        _in_main 1B24                        _T1CONbits 000FCD  
            __end_of_WriteTimer0 1FAC              __end_of_WriteTimer1 1F9A  
                 ?i2_in_high_int 0097   __end_of_uart_trans_int_handler 1A54  
                  ?i1_ReadTimer1 0001       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1678     __end_of_FromMainHigh_recvmsg 1C2E  
           end_of_initialization 1EE4          timer1_lthread@msgbuffer 01C6  
 __size_of_uart_recv_int_handler 009C                          memcpy@d 01A8  
                        memcpy@n 01A6                          memcpy@s 01AA  
  __end_of_uart_recv_int_handler 14DA                       ??_init_i2c 00CA  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00B6  
                  __Lmediumconst 0000                          int_func 1678  
                   ??i1_send_msg 0011                    ?_uart_lthread 01BB  
                     ??_sendUART 01BD          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                     ??i2_recv_msg 00A8  
                     ??_recv_msg 01B3                     ??i2_send_msg 00A7  
                     ??_send_msg 00CA       __end_of_timer1_int_handler 1E2A  
                      _RCSTAbits 000FAC                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 00AD                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000               __end_ofi1_recv_msg 12C8  
               __CFG_CPUDIV$OSC1 000000               __end_ofi1_send_msg 143E  
                      _TRISBbits 000F93               __end_ofi2_recv_msg 0DF6  
                 ??i1_ReadTimer1 0003               __end_ofi2_send_msg 110C  
                   ??_Read1USART 0001    FromMainHigh_recvmsg@maxlength 00B3  
       timer1_int_handler@result 001C                   ??_uart_lthread 00CB  
              __CFG_WPFP$PAGE_63 000000                       main@length 022C  
                    ?_in_low_int 01A4            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0DF6              __CFG_MSSP7B_EN$MSK7 000000  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 1FCC                     ??_ReadTimer1 00CA  
             _ToMainHigh_recvmsg 1BAA                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1D8E                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1F52  
                   ??_Open1USART 01A4                      ?_init_queue 01A2  
                      i2memcpy@d 009D                      _WriteTimer0 1F9A  
                    _WriteTimer1 1F88                        i2memcpy@n 009B  
                      i2memcpy@s 009F               __end_of_Read1USART 1F2A  
                 _timer1_lthread 0A54                   __end_of_memcpy 199C  
              _enable_interrupts 1FBE             __size_of_Delay1KTCYx 0016  
               __CFG_DSWDTEN$OFF 000000              ?_ToMainHigh_recvmsg 01BA  
                ??i2_in_high_int 0099         i2c_int_handler@data_read 00BB  
            ?_ToMainHigh_sendmsg 00AD          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1ECA  
                  ??_in_high_int 00CA                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        FromMainLow_sendmsg@length 01BA  
            ??_enable_interrupts 00CA                     ??_OpenTimer0 00CA  
                   ??_OpenTimer1 01A2   __size_of_block_on_To_msgqueues 008A  
             __end_of_ReadTimer1 1F52    __end_of_block_on_To_msgqueues 15EE  
                   sendUART@data 01BB     __end_of_InterruptHandlerHigh 16FA  
             __end_of_Open1USART 177A                       init_i2c@ic 01A2  
           ??_ToMainHigh_recvmsg 00CA             ??_ToMainHigh_sendmsg 00B0  
         __end_of_timer0_lthread 1F64         i2c_int_handler@error_buf 00B3  
         __end_of_timer1_lthread 0B8A                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1FC6                         ??_memcpy 00CA  
          timer1_lthread@msgtype 01C2             _FromMainHigh_recvmsg 1BEC  
          timer1_lthread@success 01CB     __size_of_init_timer1_lthread 003E  
             __end_of_OpenTimer0 1E54               __end_of_OpenTimer1 1C6E  
       i2c_int_handler@msg_ready 00BA                i1ReadTimer1@timer 0003  
                    __pbssCOMRAM 0037                    ??_init_queues 01A5  
                  __pcstackBANK0 0097                    __pcstackBANK1 01A2  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 01A2                  Delay1KTCYx@unit 00CA  
       ToMainLow_sendmsg@msgtype 01B7     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1F76                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01BC                     _ToMainLow_MQ 0061  
            __size_of_init_queue 007A                   _init_uart_recv 1EEE  
                      _check_msg 1D58                        __pnvBANK0 00CB  
         ?_start_i2c_slave_reply 01A2                __size_of_init_i2c 006A  
                   recv_msg@data 01B1                __size_of_sendUART 0044  
                   recv_msg@qmsg 01B8                     recv_msg@slot 01B5  
                   recv_msg@qptr 01AC                __size_of_recv_msg 0136  
                      __pintcode 0008                __size_of_send_msg 0104  
           __end_ofi1_ReadTimer1 1F88                  ?_timer0_lthread 01A2  
                       ?___lwmod 01A2            ?_FromMainHigh_recvmsg 00AF  
                ?_timer1_lthread 01C0                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01BC                  Open1USART@spbrg 01A2  
           __end_of_uart_lthread 11F6       i2c_int_handler@msg_to_send 00B9  
                       ?_in_main 01A6                WriteTimer0@timer0 0097  
             _timer0_int_handler 15EE                WriteTimer1@timer1 0001  
     i1ToMainLow_sendmsg@msgtype 0017             __CFG_RTCOSC$T1OSCREF 000000  
            uart_lthread@msgtype 01BD            ToMainLow_sendmsg@data 01B8  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01BB           __end_of_init_uart_recv 1F0C  
            __end_of_init_queues 1866                  i2check_msg@qptr 0097  
                     ?_check_msg 01A2                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0099  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00AE  
    __end_ofi1_ToMainLow_sendmsg 1ECA                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 00B4                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1DFA                         i1_memcpy 1C6E  
           _InterruptHandlerHigh 0008                         i2_memcpy 199C  
           timer0_lthread@msgval 01AA         FromMainHigh_recvmsg@data 00B1  
                    _in_high_int 1F64                     send_msg@data 01B0  
            _i2c_configure_slave 1E54                     send_msg@qmsg 01B5  
                   send_msg@slot 01B4                     send_msg@qptr 01AC  
          uart_lthread@msgbuffer 01C1              ?_timer1_int_handler 0001  
                ?_init_uart_recv 01A2                   ??i2_in_low_int 009B  
                       __Hparam0 0000            _uart_recv_int_handler 143E  
                   ??_in_low_int 00CA                         __Lparam0 0000  
           ?_i2c_configure_slave 0001                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 00B3             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0097  
               __size_of___lwmod 008A                     ??_init_queue 00CA  
                   ?_WriteTimer0 0097                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 01BA                main@t0thread_data 020B  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 00A4      ToMainHigh_recvmsg@maxlength 00CA  
              i2send_msg@tlength 00A8          init_timer1_lthread@tptr 01A2  
                    _init_queues 17F4               __end_of_in_low_int 1A9A  
                       __ptext10 0DF6                         __ptext11 1EEE  
                       __ptext20 1B24                         __ptext12 1FCC  
                       __ptext21 1A54                         __ptext13 1CAE  
                     _T1GCONbits 000F9A                         __ptext30 1E2A  
                       __ptext22 1F64                         __ptext14 17F4  
                       __ptext31 16FA                         __ptext23 1D58  
                       __ptext15 177A                         __ptext40 1394  
                       __ptext24 1F2A                         __ptext16 18D4  
                       __ptext41 1C6E                         __ptext33 19FA  
                       __ptext25 1B68                         __ptext17 1E54  
                       __ptext50 12C8                         __ptext42 1F76  
                       __ptext34 1E7C                         __ptext26 1BAA  
                       __ptext18 1FBE                         __ptext51 1D8E  
                       __ptext43 1F88                         __ptext35 11F6  
                       __ptext27 0B8A                         __ptext19 1564  
                       __ptext52 1008                         __ptext36 143E  
                       __ptext28 193E                         __ptext53 199C  
                       __ptext45 15EE                         __ptext37 1F0C  
                       __ptext29 1C2E                         __ptext54 1866  
                       __ptext46 1F9A                         __ptext38 1DFA  
                       __ptext55 1A9A                         __ptext47 1BEC  
                       __ptext39 1EA4                         __ptext56 1FAC  
                       __ptext48 0CC0                         __ptext57 1DC4  
                       __ptext49 00C4                         __ptext58 1FC6  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01BF  
       timer0_int_handler@length 00B5               uart_lthread@status 01C3  
                       _init_i2c 18D4              _init_timer1_lthread 1CAE  
                  __size_of_main 0336                    ??i2_check_msg 0099  
              main@t1thread_data 021F                      ??_check_msg 00CA  
             __end_of_init_queue 17F4                         _sendUART 1AE0  
          __size_ofi1_ReadTimer1 0012             __size_of_SleepIfOkay 006E  
                       _recv_msg 0B8A            ??_i2c_configure_slave 00CA  
                       _send_msg 0F04                   init_queue@qptr 01A2  
          __size_of_uart_lthread 00EA                   i2recv_msg@data 00A6  
  uart_trans_int_handler@msgtype 0022                   i2recv_msg@qmsg 00AD  
                  ??_Delay1KTCYx 00CA                   i2recv_msg@slot 00AA  
                 i2recv_msg@qptr 00A1                         main@baud 020E  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 01A2  
                  _USART1_Status 0037         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 01A2                         memcpy@s1 01A4  
          __end_ofi2_in_high_int 1FBE     i2c_int_handler@overrun_error 00B7  
                   i1_ReadTimer1 1F76                 i2send_msg@length 00A3  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 01A4  
               ___lwmod@dividend 01A2           ?_uart_recv_int_handler 0001  
                   _uart_lthread 110C                   main@UARTConfig 020F  
                     _RCSTA1bits 000FAC            _block_on_To_msgqueues 1564  
                  ?_handle_start 0001                 ??_timer0_lthread 00CA  
    __size_of_ToMainHigh_recvmsg 0042      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 01C8  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 00B0              __end_ofi2_check_msg 1DFA  
          ??_init_timer1_lthread 00CA           ??_InterruptHandlerHigh 00BC  
              _ToMainLow_recvmsg 1B68                _ToMainLow_sendmsg 1D22  
             main@last_reg_recvd 020D                  ___lwmod@divisor 01A4  
           __end_ofi2_in_low_int 1AE0               ?_ToMainLow_recvmsg 01BA  
            __end_of_Delay1KTCYx 1F40                ??_i2c_int_handler 00B1  
                ___lwmod@counter 01A6               ?_ToMainLow_sendmsg 01B7  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 00A5            ??_InterruptHandlerLow 0024  
            ??_ToMainLow_recvmsg 00CA                   i2send_msg@qmsg 00AB  
                 i2send_msg@slot 00AA                   i2send_msg@qptr 00A1  
            ??_ToMainLow_sendmsg 00CB              _FromMainLow_recvmsg 1E7C  
                 ??_handle_start 0097              _FromMainLow_sendmsg 1CEC  
