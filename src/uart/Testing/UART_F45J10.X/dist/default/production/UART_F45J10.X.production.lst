

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 23 23:44:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     _INTCONbits	set	4082
    75  0000                     _IPR1bits	set	3999
    76  0000                     _LATB	set	3978
    77  0000                     _OSCCON	set	4051
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _OSCTUNEbits	set	3995
    80  0000                     _PIE1bits	set	3997
    81  0000                     _PIR1bits	set	3998
    82  0000                     _RCONbits	set	4048
    83  0000                     _RCREG	set	4014
    84  0000                     _RCSTA	set	4011
    85  0000                     _RCSTAbits	set	4011
    86  0000                     _SPBRG	set	4015
    87  0000                     _SPBRGH	set	4016
    88  0000                     _SSPADD	set	4040
    89  0000                     _SSPBUF	set	4041
    90  0000                     _SSPCON1	set	4038
    91  0000                     _SSPCON1bits	set	4038
    92  0000                     _SSPCON2	set	4037
    93  0000                     _SSPCON2bits	set	4037
    94  0000                     _SSPSTAT	set	4039
    95  0000                     _SSPSTATbits	set	4039
    96  0000                     _T0CON	set	4053
    97  0000                     _T0CONbits	set	4053
    98  0000                     _T1CON	set	4045
    99  0000                     _T1CONbits	set	4045
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TMR1H	set	4047
   103  0000                     _TMR1L	set	4046
   104  0000                     _TRISB	set	3987
   105  0000                     _TRISCbits	set	3988
   106  0000                     _TXREG	set	4013
   107  0000                     _TXSTA	set	4012
   108  0000                     _TXSTAbits	set	4012
   109                           
   110                           	psect	nvCOMRAM
   111  000048                     __pnvCOMRAM:
   112                           	opt stack 0
   113  000048                     _uc_ptr:
   114                           	opt stack 0
   115  000048                     	ds	2
   116                           
   117                           	psect	nvBANK0
   118  0000DD                     __pnvBANK0:
   119                           	opt stack 0
   120  0000DD                     _ic_ptr:
   121                           	opt stack 0
   122  0000DD                     	ds	2
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  001BC0                     __pcinit:
   128                           	opt stack 0
   129  001BC0                     start_initialization:
   130                           	opt stack 0
   131  001BC0                     __initialization:
   132                           	opt stack 0
   133                           
   134                           ; Clear objects allocated to BANK1 (162 bytes)
   135  001BC0  EE01  F000         	lfsr	0,__pbssBANK1
   136  001BC4  0EA2               	movlw	162
   137  001BC6                     clear_0:
   138  001BC6  6AEE               	clrf	postinc0,c
   139  001BC8  06E8               	decf	wreg,f,c
   140  001BCA  E1FD               	bnz	clear_0
   141                           
   142                           ; Clear objects allocated to BANK0 (54 bytes)
   143  001BCC  EE00  F080         	lfsr	0,__pbssBANK0
   144  001BD0  0E36               	movlw	54
   145  001BD2                     clear_1:
   146  001BD2  6AEE               	clrf	postinc0,c
   147  001BD4  06E8               	decf	wreg,f,c
   148  001BD6  E1FD               	bnz	clear_1
   149                           
   150                           ; Clear objects allocated to COMRAM (2 bytes)
   151  001BD8  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   152  001BDA  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   153  001BDC                     end_of_initialization:
   154                           	opt stack 0
   155  001BDC                     __end_of__initialization:
   156                           	opt stack 0
   157  001BDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158  001BDE  6EF8               	movwf	tblptru,c
   159  001BE0  0100               	movlb	0
   160  001BE2  EF8F  F003         	goto	_main	;jump to C main() function
   161                           tblptru	equ	0xFF8
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           
   165                           	psect	bssCOMRAM
   166  00004A                     __pbssCOMRAM:
   167                           	opt stack 0
   168  00004A                     _MQ_Main_Willing_to_block:
   169                           	opt stack 0
   170  00004A                     	ds	1
   171  00004B                     _USART_Status:
   172                           	opt stack 0
   173  00004B                     	ds	1
   174                           tblptru	equ	0xFF8
   175                           postinc0	equ	0xFEE
   176                           wreg	equ	0xFE8
   177                           
   178                           	psect	bssBANK0
   179  000080                     __pbssBANK0:
   180                           	opt stack 0
   181  000080                     _ToMainLow_MQ:
   182                           	opt stack 0
   183  000080                     	ds	54
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	bssBANK1
   189  000100                     __pbssBANK1:
   190                           	opt stack 0
   191  000100                     _FromMainHigh_MQ:
   192                           	opt stack 0
   193  000100                     	ds	54
   194  000136                     _FromMainLow_MQ:
   195                           	opt stack 0
   196  000136                     	ds	54
   197  00016C                     _ToMainHigh_MQ:
   198                           	opt stack 0
   199  00016C                     	ds	54
   200                           tblptru	equ	0xFF8
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204                           	psect	cstackBANK2
   205  000200                     __pcstackBANK2:
   206                           	opt stack 0
   207  000200                     main@msgbuffer:
   208                           	opt stack 0
   209                           
   210                           ; 11 bytes @ 0x0
   211  000200                     	ds	11
   212  00020B                     main@t0thread_data:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0xB
   216  00020B                     	ds	2
   217  00020D                     main@last_reg_recvd:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0xD
   221  00020D                     	ds	1
   222  00020E                     main@baud:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0xE
   226  00020E                     	ds	1
   227  00020F                     main@UARTConfig:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0xF
   231  00020F                     	ds	1
   232  000210                     main@uthread_data:
   233                           	opt stack 0
   234                           
   235                           ; 10 bytes @ 0x10
   236  000210                     	ds	10
   237  00021A                     main@t1thread_data:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x1A
   241  00021A                     	ds	2
   242  00021C                     main@uc:
   243                           	opt stack 0
   244                           
   245                           ; 5 bytes @ 0x1C
   246  00021C                     	ds	5
   247  000221                     main@msgtype:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x21
   251  000221                     	ds	1
   252  000222                     main@length:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x22
   256  000222                     	ds	1
   257  000223                     main@ic:
   258                           	opt stack 0
   259                           
   260                           ; 28 bytes @ 0x23
   261  000223                     	ds	28
   262                           tblptru	equ	0xFF8
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	cstackBANK1
   267  0001A2                     __pcstackBANK1:
   268                           	opt stack 0
   269  0001A2                     ??_block_on_To_msgqueues:
   270  0001A2                     timer0_lthread@tptr:
   271                           	opt stack 0
   272  0001A2                     timer1_lthread@tptr:
   273                           	opt stack 0
   274  0001A2                     memcpy@d:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x0
   278  0001A2                     	ds	2
   279  0001A4                     timer0_lthread@msgtype:
   280                           	opt stack 0
   281  0001A4                     timer1_lthread@msgtype:
   282                           	opt stack 0
   283  0001A4                     memcpy@s:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x2
   287  0001A4                     	ds	2
   288  0001A6                     send_msg@qptr:
   289                           	opt stack 0
   290  0001A6                     recv_msg@qptr:
   291                           	opt stack 0
   292  0001A6                     timer0_lthread@length:
   293                           	opt stack 0
   294  0001A6                     timer1_lthread@length:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x4
   298  0001A6                     	ds	2
   299  0001A8                     send_msg@length:
   300                           	opt stack 0
   301  0001A8                     recv_msg@maxlength:
   302                           	opt stack 0
   303  0001A8                     timer0_lthread@msgbuffer:
   304                           	opt stack 0
   305  0001A8                     timer1_lthread@msgbuffer:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x6
   309  0001A8                     	ds	1
   310  0001A9                     send_msg@msgtype:
   311                           	opt stack 0
   312  0001A9                     recv_msg@msgtype:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x7
   316  0001A9                     	ds	1
   317  0001AA                     send_msg@data:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x8
   321  0001AA                     	ds	1
   322  0001AB                     recv_msg@data:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x9
   326  0001AB                     	ds	1
   327  0001AC                     ??_send_msg:
   328                           
   329                           ; 0 bytes @ 0xA
   330  0001AC                     	ds	1
   331  0001AD                     ??_recv_msg:
   332  0001AD                     send_msg@tlength:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xB
   336  0001AD                     	ds	2
   337  0001AF                     send_msg@slot:
   338                           	opt stack 0
   339  0001AF                     recv_msg@slot:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0xD
   343  0001AF                     	ds	1
   344  0001B0                     send_msg@qmsg:
   345                           	opt stack 0
   346  0001B0                     recv_msg@tlength:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350  0001B0                     	ds	2
   351  0001B2                     FromMainLow_sendmsg@msgtype:
   352                           	opt stack 0
   353  0001B2                     recv_msg@qmsg:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x10
   357  0001B2                     	ds	1
   358  0001B3                     FromMainLow_sendmsg@data:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x11
   362  0001B3                     	ds	1
   363  0001B4                     ToMainLow_recvmsg@msgtype:
   364                           	opt stack 0
   365  0001B4                     ToMainHigh_recvmsg@msgtype:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x12
   369  0001B4                     	ds	1
   370  0001B5                     FromMainLow_sendmsg@length:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x13
   374  0001B5                     	ds	1
   375  0001B6                     ToMainLow_recvmsg@data:
   376                           	opt stack 0
   377  0001B6                     ToMainHigh_recvmsg@data:
   378                           	opt stack 0
   379  0001B6                     uart_lthread@uptr:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x14
   383  0001B6                     	ds	2
   384  0001B8                     ToMainLow_recvmsg@maxlength:
   385                           	opt stack 0
   386  0001B8                     ToMainHigh_recvmsg@maxlength:
   387                           	opt stack 0
   388  0001B8                     uart_lthread@msgtype:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x16
   392  0001B8                     	ds	2
   393  0001BA                     uart_lthread@length:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x18
   397  0001BA                     	ds	2
   398  0001BC                     uart_lthread@msgbuffer:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x1A
   402  0001BC                     	ds	2
   403  0001BE                     uart_lthread@status:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1C
   407  0001BE                     	ds	1
   408  0001BF                     uart_lthread@index:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1D
   412  0001BF                     	ds	2
   413  0001C1                     ??_main:
   414                           
   415                           ; 0 bytes @ 0x1F
   416  0001C1                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackBANK0
   422  0000B6                     __pcstackBANK0:
   423                           	opt stack 0
   424  0000B6                     i2recv_msg@slot:
   425                           	opt stack 0
   426  0000B6                     i2send_msg@tlength:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  0000B6                     	ds	1
   431  0000B7                     i2recv_msg@tlength:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x1
   435  0000B7                     	ds	1
   436  0000B8                     i2send_msg@slot:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x2
   440  0000B8                     	ds	1
   441  0000B9                     i2send_msg@qmsg:
   442                           	opt stack 0
   443  0000B9                     i2recv_msg@qmsg:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x3
   447  0000B9                     	ds	2
   448  0000BB                     ToMainHigh_sendmsg@msgtype:
   449                           	opt stack 0
   450  0000BB                     FromMainHigh_recvmsg@msgtype:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454  0000BB                     	ds	1
   455  0000BC                     ToMainHigh_sendmsg@data:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x6
   459  0000BC                     	ds	1
   460  0000BD                     FromMainHigh_recvmsg@data:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x7
   464  0000BD                     	ds	1
   465  0000BE                     ??_i2c_int_handler:
   466                           
   467                           ; 0 bytes @ 0x8
   468  0000BE                     	ds	1
   469  0000BF                     FromMainHigh_recvmsg@maxlength:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x9
   473  0000BF                     	ds	1
   474  0000C0                     ??_timer0_int_handler:
   475  0000C0                     i2c_int_handler@error_buf:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0xA
   479  0000C0                     	ds	1
   480  0000C1                     timer0_int_handler@length:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0xB
   484  0000C1                     	ds	2
   485  0000C3                     i2c_int_handler@data_written:
   486                           	opt stack 0
   487  0000C3                     timer0_int_handler@msgtype:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0xD
   491  0000C3                     	ds	1
   492  0000C4                     i2c_int_handler@overrun_error:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0xE
   496  0000C4                     	ds	1
   497  0000C5                     i2c_int_handler@i2c_data:
   498                           	opt stack 0
   499  0000C5                     timer0_int_handler@val:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0xF
   503  0000C5                     	ds	1
   504  0000C6                     i2c_int_handler@msg_to_send:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x10
   508  0000C6                     	ds	1
   509  0000C7                     i2c_int_handler@msg_ready:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x11
   513  0000C7                     	ds	1
   514  0000C8                     i2c_int_handler@data_read:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x12
   518  0000C8                     	ds	1
   519  0000C9                     ??_InterruptHandlerHigh:
   520                           
   521                           ; 0 bytes @ 0x13
   522  0000C9                     	ds	14
   523  0000D7                     ?_in_high_int:
   524                           	opt stack 0
   525  0000D7                     ?___lwmod:
   526                           	opt stack 0
   527  0000D7                     i2c_configure_slave@addr:
   528                           	opt stack 0
   529  0000D7                     OpenTimer0@config:
   530                           	opt stack 0
   531  0000D7                     OpenTimer1@config:
   532                           	opt stack 0
   533  0000D7                     Delay1KTCYx@unit:
   534                           	opt stack 0
   535  0000D7                     init_queue@qptr:
   536                           	opt stack 0
   537  0000D7                     check_msg@qptr:
   538                           	opt stack 0
   539  0000D7                     start_i2c_slave_reply@msg:
   540                           	opt stack 0
   541  0000D7                     init_i2c@ic:
   542                           	opt stack 0
   543  0000D7                     init_uart_recv@uc:
   544                           	opt stack 0
   545  0000D7                     timer0_lthread@msgval:
   546                           	opt stack 0
   547  0000D7                     init_timer1_lthread@tptr:
   548                           	opt stack 0
   549  0000D7                     init_uart_lthread@uptr:
   550                           	opt stack 0
   551  0000D7                     OpenUSART@spbrg:
   552                           	opt stack 0
   553  0000D7                     ___lwmod@dividend:
   554                           	opt stack 0
   555  0000D7                     memcpy@d1:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x21
   559  0000D7                     	ds	2
   560  0000D9                     ??_OpenUSART:
   561  0000D9                     ??_start_i2c_slave_reply:
   562  0000D9                     ??_init_queue:
   563  0000D9                     ??_check_msg:
   564  0000D9                     ?_in_low_int:
   565                           	opt stack 0
   566  0000D9                     ___lwmod@divisor:
   567                           	opt stack 0
   568  0000D9                     memcpy@s1:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x23
   572  0000D9                     	ds	1
   573  0000DA                     init_queue@i:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x24
   577  0000DA                     	ds	1
   578  0000DB                     ??_init_queues:
   579  0000DB                     ??___lwmod:
   580  0000DB                     ?_in_main:
   581                           	opt stack 0
   582  0000DB                     start_i2c_slave_reply@length:
   583                           	opt stack 0
   584  0000DB                     memcpy@n:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x25
   588  0000DB                     	ds	1
   589  0000DC                     OpenUSART@config:
   590                           	opt stack 0
   591  0000DC                     ___lwmod@counter:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x26
   595  0000DC                     	ds	1
   596  0000DD                     tblptru	equ	0xFF8
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           
   600                           ; 0 bytes @ 0x27
   601                           
   602                           	psect	cstackCOMRAM
   603  000001                     __pcstackCOMRAM:
   604                           	opt stack 0
   605  000001                     ?_ReadTimer1:
   606                           	opt stack 0
   607  000001                     ReadUSART@data:
   608                           	opt stack 0
   609  000001                     WriteTimer1@timer1:
   610                           	opt stack 0
   611  000001                     i1memcpy@d1:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x0
   615  000001                     	ds	2
   616  000003                     ReadTimer1@timer:
   617                           	opt stack 0
   618  000003                     WriteTimer1@timer:
   619                           	opt stack 0
   620  000003                     i1memcpy@s1:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x2
   624  000003                     	ds	2
   625  000005                     i1memcpy@n:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x4
   629  000005                     	ds	2
   630  000007                     i1memcpy@d:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x6
   634  000007                     	ds	2
   635  000009                     i1memcpy@s:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x8
   639  000009                     	ds	2
   640  00000B                     i1send_msg@qptr:
   641                           	opt stack 0
   642  00000B                     i1recv_msg@qptr:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0xA
   646  00000B                     	ds	2
   647  00000D                     i1send_msg@length:
   648                           	opt stack 0
   649  00000D                     i1recv_msg@maxlength:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0xC
   653  00000D                     	ds	1
   654  00000E                     i1send_msg@msgtype:
   655                           	opt stack 0
   656  00000E                     i1recv_msg@msgtype:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0xD
   660  00000E                     	ds	1
   661  00000F                     i1send_msg@data:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0xE
   665  00000F                     	ds	1
   666  000010                     i1recv_msg@data:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0xF
   670  000010                     	ds	1
   671  000011                     ??i1_send_msg:
   672                           
   673                           ; 0 bytes @ 0x10
   674  000011                     	ds	1
   675  000012                     ??i1_recv_msg:
   676  000012                     i1send_msg@tlength:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x11
   680  000012                     	ds	2
   681  000014                     i1send_msg@slot:
   682                           	opt stack 0
   683  000014                     i1recv_msg@slot:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x13
   687  000014                     	ds	1
   688  000015                     i1send_msg@qmsg:
   689                           	opt stack 0
   690  000015                     i1recv_msg@tlength:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x14
   694  000015                     	ds	2
   695  000017                     ToMainLow_sendmsg@msgtype:
   696                           	opt stack 0
   697  000017                     i1recv_msg@qmsg:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x16
   701  000017                     	ds	1
   702  000018                     ToMainLow_sendmsg@data:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x17
   706  000018                     	ds	1
   707  000019                     FromMainLow_recvmsg@msgtype:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x18
   711  000019                     	ds	1
   712  00001A                     ToMainLow_sendmsg@length:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x19
   716  00001A                     	ds	1
   717  00001B                     ??_timer1_int_handler:
   718  00001B                     ??_uart_recv_int_handler:
   719  00001B                     FromMainLow_recvmsg@data:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1A
   723  00001B                     	ds	1
   724  00001C                     timer1_int_handler@result:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x1B
   728  00001C                     	ds	1
   729  00001D                     FromMainLow_recvmsg@maxlength:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x1C
   733  00001D                     	ds	1
   734  00001E                     ??_uart_trans_int_handler:
   735                           
   736                           ; 0 bytes @ 0x1D
   737  00001E                     	ds	1
   738  00001F                     uart_trans_int_handler@data:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x1E
   742  00001F                     	ds	2
   743  000021                     uart_trans_int_handler@curIndex:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x20
   747  000021                     	ds	1
   748  000022                     uart_trans_int_handler@msgtype:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x21
   752  000022                     	ds	1
   753  000023                     uart_trans_int_handler@length:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x22
   757  000023                     	ds	1
   758  000024                     ??_InterruptHandlerLow:
   759                           
   760                           ; 0 bytes @ 0x23
   761  000024                     	ds	17
   762  000035                     ?i2_in_high_int:
   763                           	opt stack 0
   764  000035                     handle_start@data_read:
   765                           	opt stack 0
   766  000035                     WriteTimer0@timer0:
   767                           	opt stack 0
   768  000035                     i2check_msg@qptr:
   769                           	opt stack 0
   770  000035                     i2memcpy@d1:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x34
   774  000035                     	ds	2
   775  000037                     ??i2_check_msg:
   776  000037                     ?i2_in_low_int:
   777                           	opt stack 0
   778  000037                     WriteTimer0@timer:
   779                           	opt stack 0
   780  000037                     i2memcpy@s1:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x36
   784  000037                     	ds	2
   785  000039                     i2memcpy@n:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x38
   789  000039                     	ds	2
   790  00003B                     i2memcpy@d:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x3A
   794  00003B                     	ds	2
   795  00003D                     i2memcpy@s:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x3C
   799  00003D                     	ds	2
   800  00003F                     i2send_msg@qptr:
   801                           	opt stack 0
   802  00003F                     i2recv_msg@qptr:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x3E
   806  00003F                     	ds	2
   807  000041                     i2send_msg@length:
   808                           	opt stack 0
   809  000041                     i2recv_msg@maxlength:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x40
   813  000041                     	ds	1
   814  000042                     i2send_msg@msgtype:
   815                           	opt stack 0
   816  000042                     i2recv_msg@msgtype:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x41
   820  000042                     	ds	1
   821  000043                     i2send_msg@data:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x42
   825  000043                     	ds	1
   826  000044                     i2recv_msg@data:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x43
   830  000044                     	ds	1
   831  000045                     ??i2_send_msg:
   832                           
   833                           ; 0 bytes @ 0x44
   834  000045                     	ds	1
   835  000046                     ??i2_recv_msg:
   836  000046                     ToMainHigh_sendmsg@length:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x45
   840  000046                     	ds	2
   841  000048                     tblptru	equ	0xFF8
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           
   845                           ; 0 bytes @ 0x47
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 139 in file "src/main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  ic             28   35[BANK2 ] struct __i2c_comm
   856 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   857 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   858 ;;  uc              5   28[BANK2 ] struct __uart_comm
   859 ;;  t1thread_dat    2   26[BANK2 ] struct __timer1_thread_s
   860 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   861 ;;  length          1   34[BANK2 ] char 
   862 ;;  msgtype         1   33[BANK2 ] unsigned char 
   863 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   864 ;;  baud            1   14[BANK2 ] unsigned char 
   865 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   866 ;;  i               1    0        unsigned char 
   867 ;;  c               1    0        unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;		None               void
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0      63       0
   879 ;;      Temps:          0       0       1       0       0
   880 ;;      Totals:         0       0       1      63       0
   881 ;;Total ram usage:       64 bytes
   882 ;; Hardware stack levels required when called:   14
   883 ;; This function calls:
   884 ;;		_OpenTimer0
   885 ;;		_OpenTimer1
   886 ;;		_OpenUSART
   887 ;;		_ToMainHigh_recvmsg
   888 ;;		_ToMainLow_recvmsg
   889 ;;		_block_on_To_msgqueues
   890 ;;		_enable_interrupts
   891 ;;		_i2c_configure_slave
   892 ;;		_init_i2c
   893 ;;		_init_queues
   894 ;;		_init_timer1_lthread
   895 ;;		_init_uart_lthread
   896 ;;		_init_uart_recv
   897 ;;		_start_i2c_slave_reply
   898 ;;		_timer0_lthread
   899 ;;		_timer1_lthread
   900 ;;		_uart_lthread
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text0
   907  00071E                     __ptext0:
   908                           	opt stack 0
   909  00071E                     _main:
   910                           	opt stack 17
   911                           
   912                           ;main.c: 140: char c;
   913                           ;main.c: 141: signed char length;
   914                           ;main.c: 142: unsigned char msgtype;
   915                           ;main.c: 143: unsigned char last_reg_recvd;
   916                           ;main.c: 144: unsigned char baud, UARTConfig;
   917                           ;main.c: 145: uart_comm uc;
   918                           ;main.c: 146: i2c_comm ic;
   919                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   920                           ;main.c: 148: unsigned char i;
   921                           ;main.c: 149: uart_thread_struct uthread_data;
   922                           ;main.c: 150: timer1_thread_struct t1thread_data;
   923                           ;main.c: 151: timer0_thread_struct t0thread_data;
   924                           ;main.c: 159: OSCCON = 0x82;
   925                           
   926                           ;incstack = 0
   927  00071E  0E82               	movlw	130
   928  000720  6ED3               	movwf	4051,c	;volatile
   929                           
   930                           ;main.c: 160: OSCTUNEbits.PLLEN = 0;
   931  000722  9C9B               	bcf	3995,6,c	;volatile
   932                           
   933                           ;main.c: 173: init_uart_recv(&uc);
   934  000724  0102               	movlb	2	; () banked
   935  000726  0E02               	movlw	high main@uc
   936  000728  0100               	movlb	0	; () banked
   937  00072A  0100               	movlb	0	; () banked
   938  00072C  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   939  00072E  0102               	movlb	2	; () banked
   940  000730  0E1C               	movlw	low main@uc
   941  000732  0100               	movlb	0	; () banked
   942  000734  0100               	movlb	0	; () banked
   943  000736  6FD7               	movwf	init_uart_recv@uc& (0+255),b
   944  000738  EC18  F00E         	call	_init_uart_recv	;wreg free
   945                           
   946                           ;main.c: 176: init_i2c(&ic);
   947  00073C  0102               	movlb	2	; () banked
   948  00073E  0E02               	movlw	high main@ic
   949  000740  0100               	movlb	0	; () banked
   950  000742  0100               	movlb	0	; () banked
   951  000744  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
   952  000746  0102               	movlb	2	; () banked
   953  000748  0E23               	movlw	low main@ic
   954  00074A  0100               	movlb	0	; () banked
   955  00074C  0100               	movlb	0	; () banked
   956  00074E  6FD7               	movwf	init_i2c@ic& (0+255),b
   957  000750  EC5A  F00B         	call	_init_i2c	;wreg free
   958                           
   959                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
   960  000754  0102               	movlb	2	; () banked
   961  000756  0E02               	movlw	high main@t1thread_data
   962  000758  0100               	movlb	0	; () banked
   963  00075A  0100               	movlb	0	; () banked
   964  00075C  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   965  00075E  0102               	movlb	2	; () banked
   966  000760  0E1A               	movlw	low main@t1thread_data
   967  000762  0100               	movlb	0	; () banked
   968  000764  0100               	movlb	0	; () banked
   969  000766  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
   970  000768  EC4A  F00E         	call	_init_timer1_lthread	;wreg free
   971                           
   972                           ;main.c: 182: init_uart_lthread(&uthread_data);
   973  00076C  0102               	movlb	2	; () banked
   974  00076E  0E02               	movlw	high main@uthread_data
   975  000770  0100               	movlb	0	; () banked
   976  000772  0100               	movlb	0	; () banked
   977  000774  6FD8               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   978  000776  0102               	movlb	2	; () banked
   979  000778  0E10               	movlw	low main@uthread_data
   980  00077A  0100               	movlb	0	; () banked
   981  00077C  0100               	movlb	0	; () banked
   982  00077E  6FD7               	movwf	init_uart_lthread@uptr& (0+255),b
   983  000780  EC84  F00E         	call	_init_uart_lthread	;wreg free
   984                           
   985                           ;main.c: 186: init_queues();
   986  000784  EC23  F00B         	call	_init_queues	;wreg free
   987                           
   988                           ;main.c: 189: TRISB = 0x0;
   989  000788  0E00               	movlw	0
   990  00078A  6E93               	movwf	3987,c	;volatile
   991                           
   992                           ;main.c: 190: LATB = 0x0;
   993  00078C  0E00               	movlw	0
   994  00078E  6E8A               	movwf	3978,c	;volatile
   995                           
   996                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   997  000790  0E96               	movlw	150
   998  000792  EC8E  F00D         	call	_OpenTimer0
   999                           
  1000                           ;main.c: 198: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1001  000796  0EF5               	movlw	245
  1002  000798  ECD9  F00C         	call	_OpenTimer1
  1003                           
  1004                           ;main.c: 207: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1005  00079C  0101               	movlb	1	; () banked
  1006  00079E  6FC1               	movwf	??_main& (0+255),b
  1007  0007A0  0EFC               	movlw	252
  1008  0007A2  0102               	movlb	2	; () banked
  1009  0007A4  0102               	movlb	2	; () banked
  1010  0007A6  6F0F               	movwf	main@UARTConfig& (0+255),b
  1011  0007A8  0101               	movlb	1	; () banked
  1012  0007AA  51C1               	movf	??_main& (0+255),w,b
  1013                           
  1014                           ; BSR set to: 1
  1015                           ;main.c: 208: baud = 77;
  1016  0007AC  0101               	movlb	1	; () banked
  1017  0007AE  6FC1               	movwf	??_main& (0+255),b
  1018  0007B0  0E4D               	movlw	77
  1019  0007B2  0102               	movlb	2	; () banked
  1020  0007B4  0102               	movlb	2	; () banked
  1021  0007B6  6F0E               	movwf	main@baud& (0+255),b
  1022  0007B8  0101               	movlb	1	; () banked
  1023  0007BA  51C1               	movf	??_main& (0+255),w,b
  1024                           
  1025                           ; BSR set to: 1
  1026                           ;main.c: 209: OpenUSART(UARTConfig,baud);
  1027  0007BC  0102               	movlb	2	; () banked
  1028  0007BE  0100               	movlb	0	; () banked
  1029  0007C0  C20E  F0D7         	movff	main@baud,OpenUSART@spbrg
  1030  0007C4  0100               	movlb	0	; () banked
  1031  0007C6  0100               	movlb	0	; () banked
  1032  0007C8  6BD8               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1033  0007CA  0102               	movlb	2	; () banked
  1034  0007CC  0102               	movlb	2	; () banked
  1035  0007CE  510F               	movf	main@UARTConfig& (0+255),w,b
  1036  0007D0  EC96  F009         	call	_OpenUSART
  1037                           
  1038                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1039  0007D4  909F               	bcf	3999,0,c	;volatile
  1040                           
  1041                           ;main.c: 217: IPR1bits.RCIP = 0;
  1042  0007D6  9A9F               	bcf	3999,5,c	;volatile
  1043                           
  1044                           ;main.c: 219: IPR1bits.TXIP = 0;
  1045  0007D8  989F               	bcf	3999,4,c	;volatile
  1046                           
  1047                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1048  0007DA  869F               	bsf	3999,3,c	;volatile
  1049                           
  1050                           ;main.c: 230: i2c_configure_slave(0x9E);
  1051  0007DC  0E9E               	movlw	158
  1052  0007DE  ECB8  F00D         	call	_i2c_configure_slave
  1053                           
  1054                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1055  0007E2  869D               	bsf	3997,3,c	;volatile
  1056                           
  1057                           ;main.c: 249: enable_interrupts();
  1058  0007E4  EC7D  F00E         	call	_enable_interrupts	;wreg free
  1059  0007E8                     l3334:
  1060                           
  1061                           ;main.c: 273: block_on_To_msgqueues();
  1062  0007E8  ECA7  F00A         	call	_block_on_To_msgqueues	;wreg free
  1063                           
  1064                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1065  0007EC  0102               	movlb	2	; () banked
  1066  0007EE  0E02               	movlw	high main@msgtype
  1067  0007F0  0101               	movlb	1	; () banked
  1068  0007F2  0101               	movlb	1	; () banked
  1069  0007F4  6FB5               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1070  0007F6  0102               	movlb	2	; () banked
  1071  0007F8  0E21               	movlw	low main@msgtype
  1072  0007FA  0101               	movlb	1	; () banked
  1073  0007FC  0101               	movlb	1	; () banked
  1074  0007FE  6FB4               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1075  000800  0102               	movlb	2	; () banked
  1076  000802  0E02               	movlw	high main@msgbuffer
  1077  000804  0101               	movlb	1	; () banked
  1078  000806  0101               	movlb	1	; () banked
  1079  000808  6FB7               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1080  00080A  0102               	movlb	2	; () banked
  1081  00080C  0E00               	movlw	low main@msgbuffer
  1082  00080E  0101               	movlb	1	; () banked
  1083  000810  0101               	movlb	1	; () banked
  1084  000812  6FB6               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1085  000814  0E0A               	movlw	10
  1086  000816  EC78  F00C         	call	_ToMainHigh_recvmsg
  1087  00081A  0102               	movlb	2	; () banked
  1088  00081C  0102               	movlb	2	; () banked
  1089  00081E  6F22               	movwf	main@length& (0+255),b
  1090                           
  1091                           ; BSR set to: 2
  1092                           ;main.c: 281: if (length < 0) {
  1093  000820  0102               	movlb	2	; () banked
  1094  000822  0102               	movlb	2	; () banked
  1095  000824  BF22               	btfsc	main@length& (0+255),7,b
  1096  000826  D08D               	goto	l3360
  1097  000828  D07D               	goto	l3358
  1098  00082A                     l3342:
  1099                           
  1100                           ; BSR set to: 2
  1101                           ;main.c: 289: {
  1102                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1103  00082A  0102               	movlb	2	; () banked
  1104  00082C  0E02               	movlw	high main@t0thread_data
  1105  00082E  0101               	movlb	1	; () banked
  1106  000830  0101               	movlb	1	; () banked
  1107  000832  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1108  000834  0102               	movlb	2	; () banked
  1109  000836  0E0B               	movlw	low main@t0thread_data
  1110  000838  0101               	movlb	1	; () banked
  1111  00083A  0101               	movlb	1	; () banked
  1112  00083C  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1113  00083E  0102               	movlb	2	; () banked
  1114  000840  0101               	movlb	1	; () banked
  1115  000842  C221  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1116  000846  0101               	movlb	1	; () banked
  1117  000848  0101               	movlb	1	; () banked
  1118  00084A  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1119  00084C  0102               	movlb	2	; () banked
  1120  00084E  0102               	movlb	2	; () banked
  1121  000850  5122               	movf	main@length& (0+255),w,b
  1122  000852  0101               	movlb	1	; () banked
  1123  000854  0101               	movlb	1	; () banked
  1124  000856  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1125  000858  0101               	movlb	1	; () banked
  1126  00085A  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1127  00085C  0101               	movlb	1	; () banked
  1128  00085E  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1129  000860  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1130  000862  0102               	movlb	2	; () banked
  1131  000864  0E02               	movlw	high main@msgbuffer
  1132  000866  0101               	movlb	1	; () banked
  1133  000868  0101               	movlb	1	; () banked
  1134  00086A  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1135  00086C  0102               	movlb	2	; () banked
  1136  00086E  0E00               	movlw	low main@msgbuffer
  1137  000870  0101               	movlb	1	; () banked
  1138  000872  0101               	movlb	1	; () banked
  1139  000874  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1140  000876  EC41  F00E         	call	_timer0_lthread	;wreg free
  1141                           
  1142                           ;main.c: 291: break;
  1143  00087A  D063               	goto	l3360
  1144  00087C                     l109:
  1145                           
  1146                           ;main.c: 294: case 41:
  1147                           ;main.c: 295: {
  1148                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1149  00087C  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1150                           
  1151                           ;main.c: 299: break;
  1152  000880  D060               	goto	l3360
  1153  000882                     l3344:
  1154                           
  1155                           ;main.c: 312: {
  1156                           ;main.c: 313: length = 2;
  1157  000882  0101               	movlb	1	; () banked
  1158  000884  6FC1               	movwf	??_main& (0+255),b
  1159  000886  0E02               	movlw	2
  1160  000888  0102               	movlb	2	; () banked
  1161  00088A  0102               	movlb	2	; () banked
  1162  00088C  6F22               	movwf	main@length& (0+255),b
  1163  00088E  0101               	movlb	1	; () banked
  1164  000890  51C1               	movf	??_main& (0+255),w,b
  1165                           
  1166                           ;main.c: 314: msgbuffer[0] = 0x55;
  1167  000892  0101               	movlb	1	; () banked
  1168  000894  6FC1               	movwf	??_main& (0+255),b
  1169  000896  0E55               	movlw	85
  1170  000898  0102               	movlb	2	; () banked
  1171  00089A  0102               	movlb	2	; () banked
  1172  00089C  6F00               	movwf	main@msgbuffer& (0+255),b
  1173  00089E  0101               	movlb	1	; () banked
  1174  0008A0  51C1               	movf	??_main& (0+255),w,b
  1175                           
  1176                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1177  0008A2  0101               	movlb	1	; () banked
  1178  0008A4  6FC1               	movwf	??_main& (0+255),b
  1179  0008A6  0EAA               	movlw	170
  1180  0008A8  0102               	movlb	2	; () banked
  1181  0008AA  0102               	movlb	2	; () banked
  1182  0008AC  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1183  0008AE  D00C               	goto	L1
  1184  0008B0                     l3346:
  1185                           
  1186                           ;main.c: 319: {
  1187                           ;main.c: 320: length = 1;
  1188  0008B0  0101               	movlb	1	; () banked
  1189  0008B2  6FC1               	movwf	??_main& (0+255),b
  1190  0008B4  0E01               	movlw	1
  1191  0008B6  0102               	movlb	2	; () banked
  1192  0008B8  0102               	movlb	2	; () banked
  1193  0008BA  6F22               	movwf	main@length& (0+255),b
  1194  0008BC  0101               	movlb	1	; () banked
  1195  0008BE  51C1               	movf	??_main& (0+255),w,b
  1196                           
  1197                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1198  0008C0  0101               	movlb	1	; () banked
  1199  0008C2  6FC1               	movwf	??_main& (0+255),b
  1200  0008C4  0E3A               	movlw	58
  1201  0008C6  D00E               	goto	L2
  1202  0008C8                     L1:
  1203  0008C8  0101               	movlb	1	; () banked
  1204  0008CA  51C1               	movf	??_main& (0+255),w,b
  1205                           
  1206                           ;main.c: 322: break;
  1207  0008CC  D01B               	goto	l3354
  1208  0008CE                     l3348:
  1209                           
  1210                           ;main.c: 325: {
  1211                           ;main.c: 326: length = 1;
  1212  0008CE  0101               	movlb	1	; () banked
  1213  0008D0  6FC1               	movwf	??_main& (0+255),b
  1214  0008D2  0E01               	movlw	1
  1215  0008D4  0102               	movlb	2	; () banked
  1216  0008D6  0102               	movlb	2	; () banked
  1217  0008D8  6F22               	movwf	main@length& (0+255),b
  1218  0008DA  0101               	movlb	1	; () banked
  1219  0008DC  51C1               	movf	??_main& (0+255),w,b
  1220                           
  1221                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1222  0008DE  0101               	movlb	1	; () banked
  1223  0008E0  6FC1               	movwf	??_main& (0+255),b
  1224  0008E2  0EA3               	movlw	163
  1225  0008E4                     L2:
  1226  0008E4  0102               	movlb	2	; () banked
  1227  0008E6  0102               	movlb	2	; () banked
  1228  0008E8  6F00               	movwf	main@msgbuffer& (0+255),b
  1229  0008EA  D7EE               	goto	L1
  1230  0008EC                     l3352:
  1231  0008EC  0102               	movlb	2	; () banked
  1232  0008EE  0102               	movlb	2	; () banked
  1233  0008F0  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1234                           
  1235                           ; Switch size 1, requested type "space"
  1236                           ; Number of cases is 3, Range of values is 168 to 170
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte           10     6 (average)
  1240                           ;	Chosen strategy is simple_byte
  1241  0008F2  0AA8               	xorlw	168	; case 168
  1242  0008F4  B4D8               	btfsc	status,2,c
  1243  0008F6  D7DC               	goto	l3346
  1244  0008F8  0A01               	xorlw	1	; case 169
  1245  0008FA  B4D8               	btfsc	status,2,c
  1246  0008FC  D7E8               	goto	l3348
  1247  0008FE  0A03               	xorlw	3	; case 170
  1248  000900  B4D8               	btfsc	status,2,c
  1249  000902  D7BF               	goto	l3344
  1250  000904                     l3354:
  1251                           
  1252                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1253  000904  0102               	movlb	2	; () banked
  1254  000906  0E02               	movlw	high main@msgbuffer
  1255  000908  0100               	movlb	0	; () banked
  1256  00090A  0100               	movlb	0	; () banked
  1257  00090C  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1258  00090E  0102               	movlb	2	; () banked
  1259  000910  0E00               	movlw	low main@msgbuffer
  1260  000912  0100               	movlb	0	; () banked
  1261  000914  0100               	movlb	0	; () banked
  1262  000916  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1263  000918  0102               	movlb	2	; () banked
  1264  00091A  0102               	movlb	2	; () banked
  1265  00091C  5122               	movf	main@length& (0+255),w,b
  1266  00091E  ECBD  F005         	call	_start_i2c_slave_reply
  1267                           
  1268                           ;main.c: 332: break;
  1269  000922  D00F               	goto	l3360
  1270  000924                     l3358:
  1271  000924  0102               	movlb	2	; () banked
  1272  000926  0102               	movlb	2	; () banked
  1273  000928  5121               	movf	main@msgtype& (0+255),w,b
  1274                           
  1275                           ; Switch size 1, requested type "space"
  1276                           ; Number of cases is 4, Range of values is 10 to 42
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte           13     7 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281  00092A  0A0A               	xorlw	10	; case 10
  1282  00092C  B4D8               	btfsc	status,2,c
  1283  00092E  D77D               	goto	l3342
  1284  000930  0A22               	xorlw	34	; case 40
  1285  000932  B4D8               	btfsc	status,2,c
  1286  000934  D7A3               	goto	l109
  1287  000936  0A01               	xorlw	1	; case 41
  1288  000938  B4D8               	btfsc	status,2,c
  1289  00093A  D7A0               	goto	l109
  1290  00093C  0A03               	xorlw	3	; case 42
  1291  00093E  B4D8               	btfsc	status,2,c
  1292  000940  D7D5               	goto	l3352
  1293  000942                     l3360:
  1294                           
  1295                           ;main.c: 340: }
  1296                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1297  000942  0102               	movlb	2	; () banked
  1298  000944  0E02               	movlw	high main@msgtype
  1299  000946  0101               	movlb	1	; () banked
  1300  000948  0101               	movlb	1	; () banked
  1301  00094A  6FB5               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1302  00094C  0102               	movlb	2	; () banked
  1303  00094E  0E21               	movlw	low main@msgtype
  1304  000950  0101               	movlb	1	; () banked
  1305  000952  0101               	movlb	1	; () banked
  1306  000954  6FB4               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1307  000956  0102               	movlb	2	; () banked
  1308  000958  0E02               	movlw	high main@msgbuffer
  1309  00095A  0101               	movlb	1	; () banked
  1310  00095C  0101               	movlb	1	; () banked
  1311  00095E  6FB7               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1312  000960  0102               	movlb	2	; () banked
  1313  000962  0E00               	movlw	low main@msgbuffer
  1314  000964  0101               	movlb	1	; () banked
  1315  000966  0101               	movlb	1	; () banked
  1316  000968  6FB6               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1317  00096A  0E0A               	movlw	10
  1318  00096C  EC57  F00C         	call	_ToMainLow_recvmsg
  1319  000970  0102               	movlb	2	; () banked
  1320  000972  0102               	movlb	2	; () banked
  1321  000974  6F22               	movwf	main@length& (0+255),b
  1322                           
  1323                           ; BSR set to: 2
  1324                           ;main.c: 344: if (length < 0) {
  1325  000976  0102               	movlb	2	; () banked
  1326  000978  0102               	movlb	2	; () banked
  1327  00097A  BF22               	btfsc	main@length& (0+255),7,b
  1328  00097C  D735               	goto	l3334
  1329  00097E  D052               	goto	l3372
  1330  000980                     l3366:
  1331                           
  1332                           ; BSR set to: 2
  1333                           ;main.c: 352: {
  1334                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1335  000980  0102               	movlb	2	; () banked
  1336  000982  0E02               	movlw	high main@t1thread_data
  1337  000984  0101               	movlb	1	; () banked
  1338  000986  0101               	movlb	1	; () banked
  1339  000988  6FA3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1340  00098A  0102               	movlb	2	; () banked
  1341  00098C  0E1A               	movlw	low main@t1thread_data
  1342  00098E  0101               	movlb	1	; () banked
  1343  000990  0101               	movlb	1	; () banked
  1344  000992  6FA2               	movwf	timer1_lthread@tptr& (0+255),b
  1345  000994  0102               	movlb	2	; () banked
  1346  000996  0101               	movlb	1	; () banked
  1347  000998  C221  F1A4         	movff	main@msgtype,timer1_lthread@msgtype
  1348  00099C  0101               	movlb	1	; () banked
  1349  00099E  0101               	movlb	1	; () banked
  1350  0009A0  6BA5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1351  0009A2  0102               	movlb	2	; () banked
  1352  0009A4  0102               	movlb	2	; () banked
  1353  0009A6  5122               	movf	main@length& (0+255),w,b
  1354  0009A8  0101               	movlb	1	; () banked
  1355  0009AA  0101               	movlb	1	; () banked
  1356  0009AC  6FA6               	movwf	timer1_lthread@length& (0+255),b
  1357  0009AE  0101               	movlb	1	; () banked
  1358  0009B0  6BA7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1359  0009B2  0101               	movlb	1	; () banked
  1360  0009B4  BFA6               	btfsc	timer1_lthread@length& (0+255),7,b
  1361  0009B6  07A7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1362  0009B8  0102               	movlb	2	; () banked
  1363  0009BA  0E02               	movlw	high main@msgbuffer
  1364  0009BC  0101               	movlb	1	; () banked
  1365  0009BE  0101               	movlb	1	; () banked
  1366  0009C0  6FA9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1367  0009C2  0102               	movlb	2	; () banked
  1368  0009C4  0E00               	movlw	low main@msgbuffer
  1369  0009C6  0101               	movlb	1	; () banked
  1370  0009C8  0101               	movlb	1	; () banked
  1371  0009CA  6FA8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1372  0009CC  EC10  F00D         	call	_timer1_lthread	;wreg free
  1373                           
  1374                           ;main.c: 354: break;
  1375  0009D0  D70B               	goto	l3334
  1376  0009D2                     l3368:
  1377                           
  1378                           ;main.c: 357: case 31:
  1379                           ;main.c: 358: case 32:
  1380                           ;main.c: 359: {
  1381                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1382  0009D2  0102               	movlb	2	; () banked
  1383  0009D4  0E02               	movlw	high main@uthread_data
  1384  0009D6  0101               	movlb	1	; () banked
  1385  0009D8  0101               	movlb	1	; () banked
  1386  0009DA  6FB7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1387  0009DC  0102               	movlb	2	; () banked
  1388  0009DE  0E10               	movlw	low main@uthread_data
  1389  0009E0  0101               	movlb	1	; () banked
  1390  0009E2  0101               	movlb	1	; () banked
  1391  0009E4  6FB6               	movwf	uart_lthread@uptr& (0+255),b
  1392  0009E6  0102               	movlb	2	; () banked
  1393  0009E8  0101               	movlb	1	; () banked
  1394  0009EA  C221  F1B8         	movff	main@msgtype,uart_lthread@msgtype
  1395  0009EE  0101               	movlb	1	; () banked
  1396  0009F0  0101               	movlb	1	; () banked
  1397  0009F2  6BB9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1398  0009F4  0102               	movlb	2	; () banked
  1399  0009F6  0102               	movlb	2	; () banked
  1400  0009F8  5122               	movf	main@length& (0+255),w,b
  1401  0009FA  0101               	movlb	1	; () banked
  1402  0009FC  0101               	movlb	1	; () banked
  1403  0009FE  6FBA               	movwf	uart_lthread@length& (0+255),b
  1404  000A00  0101               	movlb	1	; () banked
  1405  000A02  6BBB               	clrf	(uart_lthread@length+1)& (0+255),b
  1406  000A04  0101               	movlb	1	; () banked
  1407  000A06  BFBA               	btfsc	uart_lthread@length& (0+255),7,b
  1408  000A08  07BB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1409  000A0A  0102               	movlb	2	; () banked
  1410  000A0C  0E02               	movlw	high main@msgbuffer
  1411  000A0E  0101               	movlb	1	; () banked
  1412  000A10  0101               	movlb	1	; () banked
  1413  000A12  6FBD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1414  000A14  0102               	movlb	2	; () banked
  1415  000A16  0E00               	movlw	low main@msgbuffer
  1416  000A18  0101               	movlb	1	; () banked
  1417  000A1A  0101               	movlb	1	; () banked
  1418  000A1C  6FBC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1419  000A1E  EC48  F007         	call	_uart_lthread	;wreg free
  1420                           
  1421                           ;main.c: 361: break;
  1422  000A22  D6E2               	goto	l3334
  1423  000A24                     l3372:
  1424  000A24  0102               	movlb	2	; () banked
  1425  000A26  0102               	movlb	2	; () banked
  1426  000A28  5121               	movf	main@msgtype& (0+255),w,b
  1427                           
  1428                           ; Switch size 1, requested type "space"
  1429                           ; Number of cases is 4, Range of values is 11 to 32
  1430                           ; switch strategies available:
  1431                           ; Name         Instructions Cycles
  1432                           ; simple_byte           13     7 (average)
  1433                           ;	Chosen strategy is simple_byte
  1434  000A2A  0A0B               	xorlw	11	; case 11
  1435  000A2C  B4D8               	btfsc	status,2,c
  1436  000A2E  D7A8               	goto	l3366
  1437  000A30  0A15               	xorlw	21	; case 30
  1438  000A32  B4D8               	btfsc	status,2,c
  1439  000A34  D7CE               	goto	l3368
  1440  000A36  0A01               	xorlw	1	; case 31
  1441  000A38  B4D8               	btfsc	status,2,c
  1442  000A3A  D7CB               	goto	l3368
  1443  000A3C  0A3F               	xorlw	63	; case 32
  1444  000A3E  B4D8               	btfsc	status,2,c
  1445  000A40  D7C8               	goto	l3368
  1446  000A42  D6D2               	goto	l3334
  1447  000A44                     __end_of_main:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _uart_lthread *****************
  1455 ;; Defined at:
  1456 ;;		line 12 in file "src/uart_thread.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  uptr            2   20[BANK1 ] PTR struct __uart_thread
  1459 ;;		 -> main@uthread_data(10), 
  1460 ;;  msgtype         2   22[BANK1 ] int 
  1461 ;;  length          2   24[BANK1 ] int 
  1462 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1463 ;;		 -> main@msgbuffer(11), 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  index           2   29[BANK1 ] int 
  1466 ;;  status          1   28[BANK1 ] char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   20[BANK1 ] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1476 ;;      Params:         0       0       8       0       0
  1477 ;;      Locals:         0       0       3       0       0
  1478 ;;      Temps:          0       0       0       0       0
  1479 ;;      Totals:         0       0      11       0       0
  1480 ;;Total ram usage:       11 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:   13
  1483 ;; This function calls:
  1484 ;;		_FromMainLow_sendmsg
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text1
  1491  000E90                     __ptext1:
  1492                           	opt stack 0
  1493  000E90                     _uart_lthread:
  1494                           	opt stack 17
  1495                           
  1496                           ;uart_thread.c: 13: if (msgtype == 30) {
  1497                           
  1498                           ; BSR set to: 2
  1499                           ;incstack = 0
  1500  000E90  0101               	movlb	1	; () banked
  1501  000E92  0101               	movlb	1	; () banked
  1502  000E94  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1503  000E96  0A1E               	xorlw	30
  1504  000E98  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1505  000E9A  B4D8               	btfsc	status,2,c
  1506  000E9C  0012               	return	
  1507                           
  1508                           ; BSR set to: 1
  1509                           ;uart_thread.c: 16: else if(msgtype == 31){
  1510                           
  1511                           ; BSR set to: 1
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;uart_thread.c: 15: }
  1515  000E9E  0101               	movlb	1	; () banked
  1516  000EA0  0101               	movlb	1	; () banked
  1517  000EA2  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1518  000EA4  0A1F               	xorlw	31
  1519  000EA6  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1520  000EA8  A4D8               	btfss	status,2,c
  1521  000EAA  D04F               	goto	l3566
  1522                           
  1523                           ; BSR set to: 1
  1524                           ;uart_thread.c: 18: int index = 0;
  1525  000EAC  0E00               	movlw	0
  1526  000EAE  0101               	movlb	1	; () banked
  1527  000EB0  0101               	movlb	1	; () banked
  1528  000EB2  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1529  000EB4  0E00               	movlw	0
  1530  000EB6  0101               	movlb	1	; () banked
  1531  000EB8  6FBF               	movwf	uart_lthread@index& (0+255),b
  1532                           
  1533                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1534  000EBA  0E00               	movlw	0
  1535  000EBC  0101               	movlb	1	; () banked
  1536  000EBE  0101               	movlb	1	; () banked
  1537  000EC0  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1538  000EC2  0E00               	movlw	0
  1539  000EC4  0101               	movlb	1	; () banked
  1540  000EC6  6FBF               	movwf	uart_lthread@index& (0+255),b
  1541  000EC8                     
  1542                           ; BSR set to: 1
  1543  000EC8  0101               	movlb	1	; () banked
  1544  000ECA  0101               	movlb	1	; () banked
  1545  000ECC  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1546  000ECE  0A80               	xorlw	128
  1547  000ED0  0F80               	addlw	-128
  1548  000ED2  0E0A               	movlw	10
  1549  000ED4  B4D8               	btfsc	status,2,c
  1550  000ED6  5DBF               	subwf	uart_lthread@index& (0+255),w,b
  1551  000ED8  B0D8               	btfsc	status,0,c
  1552  000EDA  D023               	goto	l3562
  1553                           
  1554                           ; BSR set to: 1
  1555                           
  1556                           ; BSR set to: 1
  1557                           
  1558                           ; BSR set to: 1
  1559  000EDC  0101               	movlb	1	; () banked
  1560  000EDE  0101               	movlb	1	; () banked
  1561  000EE0  51BF               	movf	uart_lthread@index& (0+255),w,b
  1562  000EE2  0101               	movlb	1	; () banked
  1563  000EE4  0101               	movlb	1	; () banked
  1564  000EE6  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1565  000EE8  6ED9               	movwf	fsr2l,c
  1566  000EEA  0101               	movlb	1	; () banked
  1567  000EEC  0101               	movlb	1	; () banked
  1568  000EEE  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1569  000EF0  0101               	movlb	1	; () banked
  1570  000EF2  0101               	movlb	1	; () banked
  1571  000EF4  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1572  000EF6  6EDA               	movwf	fsr2h,c
  1573  000EF8  0101               	movlb	1	; () banked
  1574  000EFA  0101               	movlb	1	; () banked
  1575  000EFC  51BF               	movf	uart_lthread@index& (0+255),w,b
  1576  000EFE  0101               	movlb	1	; () banked
  1577  000F00  0101               	movlb	1	; () banked
  1578  000F02  25B6               	addwf	uart_lthread@uptr& (0+255),w,b
  1579  000F04  6EE1               	movwf	fsr1l,c
  1580  000F06  0101               	movlb	1	; () banked
  1581  000F08  0101               	movlb	1	; () banked
  1582  000F0A  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1583  000F0C  0101               	movlb	1	; () banked
  1584  000F0E  0101               	movlb	1	; () banked
  1585  000F10  21B7               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1586  000F12  6EE2               	movwf	fsr1h,c
  1587  000F14  CFDF FFE7          	movff	indf2,indf1
  1588                           
  1589                           ; BSR set to: 1
  1590  000F18  0101               	movlb	1	; () banked
  1591  000F1A  0101               	movlb	1	; () banked
  1592  000F1C  4BBF               	infsnz	uart_lthread@index& (0+255),f,b
  1593  000F1E  2BC0               	incf	(uart_lthread@index+1)& (0+255),f,b
  1594  000F20  D7D3               	goto	L3
  1595  000F22                     l3562:
  1596                           
  1597                           ; BSR set to: 1
  1598                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1599  000F22  C1B8  F1B2         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1600  000F26  0101               	movlb	1	; () banked
  1601  000F28  0101               	movlb	1	; () banked
  1602  000F2A  C1B7  F1B4         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1603  000F2E  0101               	movlb	1	; () banked
  1604  000F30  0101               	movlb	1	; () banked
  1605  000F32  C1B6  F1B3         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1606  000F36  0101               	movlb	1	; () banked
  1607  000F38  0101               	movlb	1	; () banked
  1608  000F3A  51BA               	movf	uart_lthread@length& (0+255),w,b
  1609  000F3C  ECF5  F00C         	call	_FromMainLow_sendmsg
  1610  000F40  0101               	movlb	1	; () banked
  1611  000F42  0101               	movlb	1	; () banked
  1612  000F44  6FBE               	movwf	uart_lthread@status& (0+255),b
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;uart_thread.c: 25: }
  1616                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1617                           
  1618                           ; BSR set to: 1
  1619  000F46  889D               	bsf	3997,4,c	;volatile
  1620                           
  1621                           ;uart_thread.c: 29: }
  1622  000F48  0012               	return	
  1623  000F4A                     l3566:
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;uart_thread.c: 30: else if(msgtype == 32){
  1627  000F4A  0101               	movlb	1	; () banked
  1628  000F4C  0101               	movlb	1	; () banked
  1629  000F4E  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1630  000F50  0A20               	xorlw	32
  1631  000F52  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1632  000F54  A4D8               	btfss	status,2,c
  1633  000F56  0012               	return	
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1637  000F58  0101               	movlb	1	; () banked
  1638  000F5A  0101               	movlb	1	; () banked
  1639  000F5C  51BA               	movf	uart_lthread@length& (0+255),w,b
  1640  000F5E  0101               	movlb	1	; () banked
  1641  000F60  0101               	movlb	1	; () banked
  1642  000F62  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1643  000F64  6ED9               	movwf	fsr2l,c
  1644  000F66  0101               	movlb	1	; () banked
  1645  000F68  0101               	movlb	1	; () banked
  1646  000F6A  51BB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1647  000F6C  0101               	movlb	1	; () banked
  1648  000F6E  0101               	movlb	1	; () banked
  1649  000F70  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1650  000F72  6EDA               	movwf	fsr2h,c
  1651  000F74  0E00               	movlw	0
  1652  000F76  6EDF               	movwf	indf2,c
  1653  000F78  0012               	return	
  1654  000F7A                     __end_of_uart_lthread:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           indf1	equ	0xFE7
  1660                           fsr1h	equ	0xFE2
  1661                           fsr1l	equ	0xFE1
  1662                           indf2	equ	0xFDF
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _FromMainLow_sendmsg *****************
  1668 ;; Defined at:
  1669 ;;		line 150 in file "src/messages.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  length          1    wreg     unsigned char 
  1672 ;;  msgtype         1   16[BANK1 ] unsigned char 
  1673 ;;  data            2   17[BANK1 ] PTR void 
  1674 ;;		 -> main@uthread_data(10), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  length          1   19[BANK1 ] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      char 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1686 ;;      Params:         0       0       3       0       0
  1687 ;;      Locals:         0       0       1       0       0
  1688 ;;      Temps:          0       0       0       0       0
  1689 ;;      Totals:         0       0       4       0       0
  1690 ;;Total ram usage:        4 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:   12
  1693 ;; This function calls:
  1694 ;;		_send_msg
  1695 ;; This function is called by:
  1696 ;;		_uart_lthread
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701  0019EA                     __ptext2:
  1702                           	opt stack 0
  1703  0019EA                     _FromMainLow_sendmsg:
  1704                           	opt stack 17
  1705                           
  1706                           ; BSR set to: 1
  1707                           ;incstack = 0
  1708                           ;FromMainLow_sendmsg@length stored from wreg
  1709  0019EA  CFE8 F1B5          	movff	wreg,FromMainLow_sendmsg@length
  1710                           
  1711                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1712  0019EE  0101               	movlb	1	; () banked
  1713  0019F0  0E01               	movlw	high _FromMainLow_MQ
  1714  0019F2  0101               	movlb	1	; () banked
  1715  0019F4  0101               	movlb	1	; () banked
  1716  0019F6  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1717  0019F8  0101               	movlb	1	; () banked
  1718  0019FA  0E36               	movlw	low _FromMainLow_MQ
  1719  0019FC  0101               	movlb	1	; () banked
  1720  0019FE  0101               	movlb	1	; () banked
  1721  001A00  6FA6               	movwf	send_msg@qptr& (0+255),b
  1722  001A02  C1B5  F1A8         	movff	FromMainLow_sendmsg@length,send_msg@length
  1723  001A06  C1B2  F1A9         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1724  001A0A  0101               	movlb	1	; () banked
  1725  001A0C  0101               	movlb	1	; () banked
  1726  001A0E  C1B4  F1AB         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1727  001A12  0101               	movlb	1	; () banked
  1728  001A14  0101               	movlb	1	; () banked
  1729  001A16  C1B3  F1AA         	movff	FromMainLow_sendmsg@data,send_msg@data
  1730  001A1A  EC44  F006         	call	_send_msg	;wreg free
  1731  001A1E  0012               	return	
  1732  001A20                     __end_of_FromMainLow_sendmsg:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           indf1	equ	0xFE7
  1738                           fsr1h	equ	0xFE2
  1739                           fsr1l	equ	0xFE1
  1740                           indf2	equ	0xFDF
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _send_msg *****************
  1746 ;; Defined at:
  1747 ;;		line 24 in file "src/messages.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  1750 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1751 ;;  length          1    6[BANK1 ] unsigned char 
  1752 ;;  msgtype         1    7[BANK1 ] unsigned char 
  1753 ;;  data            2    8[BANK1 ] PTR void 
  1754 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  1755 ;;		 -> main@ic(28), main@uc(5), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  1758 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1759 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1760 ;;  tlength         2   11[BANK1 ] unsigned int 
  1761 ;;  slot            1   13[BANK1 ] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      char 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1771 ;;      Params:         0       0       6       0       0
  1772 ;;      Locals:         0       0       5       0       0
  1773 ;;      Temps:          0       0       1       0       0
  1774 ;;      Totals:         0       0      12       0       0
  1775 ;;Total ram usage:       12 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:   11
  1778 ;; This function calls:
  1779 ;;		_memcpy
  1780 ;; This function is called by:
  1781 ;;		_FromMainLow_sendmsg
  1782 ;;		_FromMainHigh_sendmsg
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text3
  1787  000C88                     __ptext3:
  1788                           	opt stack 0
  1789  000C88                     _send_msg:
  1790                           	opt stack 17
  1791                           
  1792                           ;messages.c: 25: unsigned char slot;
  1793                           ;messages.c: 27: msg *qmsg;
  1794                           ;messages.c: 28: size_t tlength = length;
  1795                           
  1796                           ;incstack = 0
  1797  000C88  0101               	movlb	1	; () banked
  1798  000C8A  0101               	movlb	1	; () banked
  1799  000C8C  C1A8  F1AD         	movff	send_msg@length,send_msg@tlength
  1800  000C90  0101               	movlb	1	; () banked
  1801  000C92  0101               	movlb	1	; () banked
  1802  000C94  6BAE               	clrf	(send_msg@tlength+1)& (0+255),b
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1806  000C96  0101               	movlb	1	; () banked
  1807  000C98  EE20 F034          	lfsr	2,52
  1808  000C9C  0101               	movlb	1	; () banked
  1809  000C9E  51A6               	movf	send_msg@qptr& (0+255),w,b
  1810  000CA0  26D9               	addwf	fsr2l,f,c
  1811  000CA2  0101               	movlb	1	; () banked
  1812  000CA4  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  1813  000CA6  22DA               	addwfc	fsr2h,f,c
  1814  000CA8  50DF               	movf	indf2,w,c
  1815  000CAA  0101               	movlb	1	; () banked
  1816  000CAC  0101               	movlb	1	; () banked
  1817  000CAE  6FAF               	movwf	send_msg@slot& (0+255),b
  1818                           
  1819                           ; BSR set to: 1
  1820                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1821  000CB0  0101               	movlb	1	; () banked
  1822  000CB2  0101               	movlb	1	; () banked
  1823  000CB4  51AF               	movf	send_msg@slot& (0+255),w,b
  1824  000CB6  0D0D               	mullw	13
  1825  000CB8  50F3               	movf	prodl,w,c
  1826  000CBA  0101               	movlb	1	; () banked
  1827  000CBC  0101               	movlb	1	; () banked
  1828  000CBE  25A6               	addwf	send_msg@qptr& (0+255),w,b
  1829  000CC0  0101               	movlb	1	; () banked
  1830  000CC2  0101               	movlb	1	; () banked
  1831  000CC4  6FB0               	movwf	send_msg@qmsg& (0+255),b
  1832  000CC6  50F4               	movf	prodh,w,c
  1833  000CC8  0101               	movlb	1	; () banked
  1834  000CCA  0101               	movlb	1	; () banked
  1835  000CCC  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1836  000CCE  0101               	movlb	1	; () banked
  1837  000CD0  6FB1               	movwf	(send_msg@qmsg+1)& (0+255),b
  1838                           
  1839                           ; BSR set to: 1
  1840                           ;messages.c: 41: if (qmsg->full != 0) {
  1841  000CD2  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  1842  000CD6  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1843  000CDA  50DF               	movf	indf2,w,c
  1844  000CDC  B4D8               	btfsc	status,2,c
  1845  000CDE  D002               	goto	l3596
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;messages.c: 42: return (-1);
  1849  000CE0  0EFF               	movlw	255
  1850  000CE2  0012               	return	
  1851  000CE4                     l3596:
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;messages.c: 43: }
  1855                           ;messages.c: 46: qmsg->length = length;
  1856  000CE4  0101               	movlb	1	; () banked
  1857  000CE6  EE20 F001          	lfsr	2,1
  1858  000CEA  0101               	movlb	1	; () banked
  1859  000CEC  51B0               	movf	send_msg@qmsg& (0+255),w,b
  1860  000CEE  26D9               	addwf	fsr2l,f,c
  1861  000CF0  0101               	movlb	1	; () banked
  1862  000CF2  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1863  000CF4  22DA               	addwfc	fsr2h,f,c
  1864  000CF6  0101               	movlb	1	; () banked
  1865  000CF8  C1A8  FFDF         	movff	send_msg@length,indf2
  1866                           
  1867                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1868  000CFC  0101               	movlb	1	; () banked
  1869  000CFE  EE20 F002          	lfsr	2,2
  1870  000D02  0101               	movlb	1	; () banked
  1871  000D04  51B0               	movf	send_msg@qmsg& (0+255),w,b
  1872  000D06  26D9               	addwf	fsr2l,f,c
  1873  000D08  0101               	movlb	1	; () banked
  1874  000D0A  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1875  000D0C  22DA               	addwfc	fsr2h,f,c
  1876  000D0E  0101               	movlb	1	; () banked
  1877  000D10  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1881  000D14  0E03               	movlw	3
  1882  000D16  0101               	movlb	1	; () banked
  1883  000D18  0101               	movlb	1	; () banked
  1884  000D1A  25B0               	addwf	send_msg@qmsg& (0+255),w,b
  1885  000D1C  0100               	movlb	0	; () banked
  1886  000D1E  0100               	movlb	0	; () banked
  1887  000D20  6FD7               	movwf	memcpy@d1& (0+255),b
  1888  000D22  0E00               	movlw	0
  1889  000D24  0101               	movlb	1	; () banked
  1890  000D26  0101               	movlb	1	; () banked
  1891  000D28  21B1               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1892  000D2A  0100               	movlb	0	; () banked
  1893  000D2C  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  1894  000D2E  0101               	movlb	1	; () banked
  1895  000D30  0100               	movlb	0	; () banked
  1896  000D32  C1AB  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  1897  000D36  0101               	movlb	1	; () banked
  1898  000D38  0100               	movlb	0	; () banked
  1899  000D3A  C1AA  F0D9         	movff	send_msg@data,memcpy@s1
  1900  000D3E  C1AD  F0DB         	movff	send_msg@tlength,memcpy@n
  1901  000D42  C1AE  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  1902  000D46  EC8F  F00B         	call	_memcpy	;wreg free
  1903                           
  1904                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1905  000D4A  0101               	movlb	1	; () banked
  1906  000D4C  EE20 F034          	lfsr	2,52
  1907  000D50  0101               	movlb	1	; () banked
  1908  000D52  51A6               	movf	send_msg@qptr& (0+255),w,b
  1909  000D54  26D9               	addwf	fsr2l,f,c
  1910  000D56  0101               	movlb	1	; () banked
  1911  000D58  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  1912  000D5A  22DA               	addwfc	fsr2h,f,c
  1913  000D5C  0101               	movlb	1	; () banked
  1914  000D5E  EE10 F034          	lfsr	1,52
  1915  000D62  0101               	movlb	1	; () banked
  1916  000D64  51A6               	movf	send_msg@qptr& (0+255),w,b
  1917  000D66  26E1               	addwf	fsr1l,f,c
  1918  000D68  0101               	movlb	1	; () banked
  1919  000D6A  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  1920  000D6C  22E2               	addwfc	fsr1h,f,c
  1921  000D6E  50E7               	movf	indf1,w,c
  1922  000D70  0101               	movlb	1	; () banked
  1923  000D72  6FAC               	movwf	??_send_msg& (0+255),b
  1924  000D74  0101               	movlb	1	; () banked
  1925  000D76  29AC               	incf	??_send_msg& (0+255),w,b
  1926  000D78  0B03               	andlw	3
  1927  000D7A  6EDF               	movwf	indf2,c
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;messages.c: 59: qmsg->full = 1;
  1931  000D7C  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  1932  000D80  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1933  000D84  0E01               	movlw	1
  1934  000D86  6EDF               	movwf	indf2,c
  1935                           
  1936                           ; BSR set to: 1
  1937                           ;messages.c: 60: return (1);
  1938  000D88  0E01               	movlw	1
  1939  000D8A  0012               	return	
  1940  000D8C                     __end_of_send_msg:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           prodh	equ	0xFF4
  1944                           prodl	equ	0xFF3
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           indf1	equ	0xFE7
  1948                           fsr1h	equ	0xFE2
  1949                           fsr1l	equ	0xFE1
  1950                           indf2	equ	0xFDF
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _timer1_lthread *****************
  1956 ;; Defined at:
  1957 ;;		line 15 in file "src/timer1_thread.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  1960 ;;		 -> main@t1thread_data(2), 
  1961 ;;  msgtype         2    2[BANK1 ] int 
  1962 ;;  length          2    4[BANK1 ] int 
  1963 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  1964 ;;		 -> main@msgbuffer(11), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2    0[BANK1 ] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1976 ;;      Params:         0       0       8       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0
  1979 ;;      Totals:         0       0       8       0       0
  1980 ;;Total ram usage:        8 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:   11
  1983 ;; This function calls:
  1984 ;;		___lwmod
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text4
  1991  001A20                     __ptext4:
  1992                           	opt stack 0
  1993  001A20                     _timer1_lthread:
  1994                           	opt stack 19
  1995                           
  1996                           ;timer1_thread.c: 16: tptr->msgcount++;
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;incstack = 0
  2000  001A20  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2001  001A24  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2002  001A28  2ADE               	incf	postinc2,f,c
  2003  001A2A  0E00               	movlw	0
  2004  001A2C  22DD               	addwfc	postdec2,f,c
  2005                           
  2006                           ;timer1_thread.c: 18: if ((tptr->msgcount % 6) == 5) {
  2007  001A2E  C1A2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2008  001A32  C1A3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2009  001A36  0100               	movlb	0	; () banked
  2010  001A38  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  2011  001A3C  0100               	movlb	0	; () banked
  2012  001A3E  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  2013  001A42  0E00               	movlw	0
  2014  001A44  0100               	movlb	0	; () banked
  2015  001A46  0100               	movlb	0	; () banked
  2016  001A48  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  2017  001A4A  0E06               	movlw	6
  2018  001A4C  0100               	movlb	0	; () banked
  2019  001A4E  6FD9               	movwf	___lwmod@divisor& (0+255),b
  2020  001A50  ECDF  F009         	call	___lwmod	;wreg free
  2021  001A54  0012               	return	
  2022  001A56                     __end_of_timer1_lthread:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           indf1	equ	0xFE7
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           indf2	equ	0xFDF
  2033                           postinc2	equ	0xFDE
  2034                           postdec2	equ	0xFDD
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function ___lwmod *****************
  2040 ;; Defined at:
  2041 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  dividend        2   33[BANK0 ] unsigned int 
  2044 ;;  divisor         2   35[BANK0 ] unsigned int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  counter         1   38[BANK0 ] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  2   33[BANK0 ] unsigned int 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2056 ;;      Params:         0       4       0       0       0
  2057 ;;      Locals:         0       1       0       0       0
  2058 ;;      Temps:          0       1       0       0       0
  2059 ;;      Totals:         0       6       0       0       0
  2060 ;;Total ram usage:        6 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:   10
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_timer1_lthread
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text5
  2071  0013BE                     __ptext5:
  2072                           	opt stack 0
  2073  0013BE                     ___lwmod:
  2074                           	opt stack 19
  2075                           
  2076                           ;incstack = 0
  2077  0013BE  0100               	movlb	0	; () banked
  2078  0013C0  0100               	movlb	0	; () banked
  2079  0013C2  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2080  0013C4  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  2081  0013C6  B4D8               	btfsc	status,2,c
  2082  0013C8  D03A               	goto	l1034
  2083                           
  2084                           ; BSR set to: 0
  2085  0013CA  0100               	movlb	0	; () banked
  2086  0013CC  6FDB               	movwf	??___lwmod& (0+255),b
  2087  0013CE  0E01               	movlw	1
  2088  0013D0  0100               	movlb	0	; () banked
  2089  0013D2  0100               	movlb	0	; () banked
  2090  0013D4  6FDC               	movwf	___lwmod@counter& (0+255),b
  2091  0013D6  0100               	movlb	0	; () banked
  2092  0013D8  51DB               	movf	??___lwmod& (0+255),w,b
  2093  0013DA  D009               	goto	l3720
  2094  0013DC                     l3718:
  2095                           
  2096                           ; BSR set to: 0
  2097  0013DC  0100               	movlb	0	; () banked
  2098  0013DE  0100               	movlb	0	; () banked
  2099  0013E0  0100               	movlb	0	; () banked
  2100  0013E2  90D8               	bcf	status,0,c
  2101  0013E4  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  2102  0013E6  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2103  0013E8  0100               	movlb	0	; () banked
  2104  0013EA  0100               	movlb	0	; () banked
  2105  0013EC  2BDC               	incf	___lwmod@counter& (0+255),f,b
  2106  0013EE                     l3720:
  2107                           
  2108                           ; BSR set to: 0
  2109  0013EE  0100               	movlb	0	; () banked
  2110  0013F0  0100               	movlb	0	; () banked
  2111  0013F2  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2112  0013F4  D7F3               	goto	l3718
  2113  0013F6                     l3722:
  2114                           
  2115                           ; BSR set to: 0
  2116  0013F6  0100               	movlb	0	; () banked
  2117  0013F8  0100               	movlb	0	; () banked
  2118  0013FA  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2119  0013FC  0100               	movlb	0	; () banked
  2120  0013FE  0100               	movlb	0	; () banked
  2121  001400  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  2122  001402  0100               	movlb	0	; () banked
  2123  001404  0100               	movlb	0	; () banked
  2124  001406  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2125  001408  0100               	movlb	0	; () banked
  2126  00140A  0100               	movlb	0	; () banked
  2127  00140C  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2128  00140E  A0D8               	btfss	status,0,c
  2129  001410  D00C               	goto	l3726
  2130                           
  2131                           ; BSR set to: 0
  2132  001412  0100               	movlb	0	; () banked
  2133  001414  0100               	movlb	0	; () banked
  2134  001416  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2135  001418  0100               	movlb	0	; () banked
  2136  00141A  0100               	movlb	0	; () banked
  2137  00141C  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  2138  00141E  0100               	movlb	0	; () banked
  2139  001420  0100               	movlb	0	; () banked
  2140  001422  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2141  001424  0100               	movlb	0	; () banked
  2142  001426  0100               	movlb	0	; () banked
  2143  001428  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2144  00142A                     l3726:
  2145                           
  2146                           ; BSR set to: 0
  2147  00142A  0100               	movlb	0	; () banked
  2148  00142C  0100               	movlb	0	; () banked
  2149  00142E  0100               	movlb	0	; () banked
  2150  001430  90D8               	bcf	status,0,c
  2151  001432  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2152  001434  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  2153                           
  2154                           ; BSR set to: 0
  2155  001436  0100               	movlb	0	; () banked
  2156  001438  0100               	movlb	0	; () banked
  2157  00143A  2FDC               	decfsz	___lwmod@counter& (0+255),f,b
  2158  00143C  D7DC               	goto	l3722
  2159  00143E                     l1034:
  2160                           
  2161                           ; BSR set to: 0
  2162  00143E  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  2163  001442  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  2164                           
  2165                           ; BSR set to: 0
  2166  001446  0012               	return	
  2167  001448                     __end_of___lwmod:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           prodh	equ	0xFF4
  2171                           prodl	equ	0xFF3
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           indf1	equ	0xFE7
  2175                           fsr1h	equ	0xFE2
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           postinc2	equ	0xFDE
  2179                           postdec2	equ	0xFDD
  2180                           fsr2h	equ	0xFDA
  2181                           fsr2l	equ	0xFD9
  2182                           status	equ	0xFD8
  2183                           
  2184 ;; *************** function _timer0_lthread *****************
  2185 ;; Defined at:
  2186 ;;		line 9 in file "src/timer0_thread.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2189 ;;		 -> main@t0thread_data(2), 
  2190 ;;  msgtype         2    2[BANK1 ] int 
  2191 ;;  length          2    4[BANK1 ] int 
  2192 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2193 ;;		 -> main@msgbuffer(11), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2196 ;;		 -> main@msgbuffer(11), 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  2    0[BANK1 ] int 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2206 ;;      Params:         0       0       8       0       0
  2207 ;;      Locals:         0       2       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         0       2       8       0       0
  2210 ;;Total ram usage:       10 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:   10
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text6
  2221  001C82                     __ptext6:
  2222                           	opt stack 0
  2223  001C82                     _timer0_lthread:
  2224                           	opt stack 20
  2225                           
  2226                           ;timer0_thread.c: 10: unsigned int *msgval;
  2227                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;incstack = 0
  2231  001C82  0101               	movlb	1	; () banked
  2232  001C84  0100               	movlb	0	; () banked
  2233  001C86  C1A9  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2234  001C8A  0101               	movlb	1	; () banked
  2235  001C8C  0100               	movlb	0	; () banked
  2236  001C8E  C1A8  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2237                           
  2238                           ; BSR set to: 0
  2239  001C92  0012               	return	
  2240  001C94                     __end_of_timer0_lthread:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           indf1	equ	0xFE7
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           indf2	equ	0xFDF
  2251                           postinc2	equ	0xFDE
  2252                           postdec2	equ	0xFDD
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _start_i2c_slave_reply *****************
  2258 ;; Defined at:
  2259 ;;		line 53 in file "src/my_i2c.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  length          1    wreg     unsigned char 
  2262 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  2263 ;;		 -> main@msgbuffer(11), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  length          1   37[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2275 ;;      Params:         0       2       0       0       0
  2276 ;;      Locals:         0       1       0       0       0
  2277 ;;      Temps:          0       2       0       0       0
  2278 ;;      Totals:         0       5       0       0       0
  2279 ;;Total ram usage:        5 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:   10
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text7
  2290  000B7A                     __ptext7:
  2291                           	opt stack 0
  2292  000B7A                     _start_i2c_slave_reply:
  2293                           	opt stack 20
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;incstack = 0
  2297                           ;start_i2c_slave_reply@length stored from wreg
  2298  000B7A  CFE8 F0DB          	movff	wreg,start_i2c_slave_reply@length
  2299                           
  2300                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2301  000B7E  0100               	movlb	0	; () banked
  2302  000B80  EE20 F019          	lfsr	2,25
  2303  000B84  0100               	movlb	0	; () banked
  2304  000B86  51DD               	movf	_ic_ptr& (0+255),w,b
  2305  000B88  26D9               	addwf	fsr2l,f,c
  2306  000B8A  0100               	movlb	0	; () banked
  2307  000B8C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2308  000B8E  22DA               	addwfc	fsr2h,f,c
  2309  000B90  0E00               	movlw	0
  2310  000B92  6EDF               	movwf	indf2,c
  2311  000B94  D042               	goto	l3530
  2312  000B96                     l3526:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2316  000B96  0100               	movlb	0	; () banked
  2317  000B98  EE20 F019          	lfsr	2,25
  2318  000B9C  0100               	movlb	0	; () banked
  2319  000B9E  51DD               	movf	_ic_ptr& (0+255),w,b
  2320  000BA0  26D9               	addwf	fsr2l,f,c
  2321  000BA2  0100               	movlb	0	; () banked
  2322  000BA4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2323  000BA6  22DA               	addwfc	fsr2h,f,c
  2324  000BA8  50DF               	movf	indf2,w,c
  2325  000BAA  0100               	movlb	0	; () banked
  2326  000BAC  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2327  000BAE  0100               	movlb	0	; () banked
  2328  000BB0  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2329  000BB2  0D01               	mullw	1
  2330  000BB4  50F3               	movf	prodl,w,c
  2331  000BB6  0100               	movlb	0	; () banked
  2332  000BB8  0100               	movlb	0	; () banked
  2333  000BBA  25D7               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2334  000BBC  6ED9               	movwf	fsr2l,c
  2335  000BBE  50F4               	movf	prodh,w,c
  2336  000BC0  0100               	movlb	0	; () banked
  2337  000BC2  0100               	movlb	0	; () banked
  2338  000BC4  21D8               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2339  000BC6  6EDA               	movwf	fsr2h,c
  2340  000BC8  0100               	movlb	0	; () banked
  2341  000BCA  EE10 F019          	lfsr	1,25
  2342  000BCE  0100               	movlb	0	; () banked
  2343  000BD0  51DD               	movf	_ic_ptr& (0+255),w,b
  2344  000BD2  26E1               	addwf	fsr1l,f,c
  2345  000BD4  0100               	movlb	0	; () banked
  2346  000BD6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2347  000BD8  22E2               	addwfc	fsr1h,f,c
  2348  000BDA  50E7               	movf	indf1,w,c
  2349  000BDC  0100               	movlb	0	; () banked
  2350  000BDE  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2351  000BE0  0100               	movlb	0	; () banked
  2352  000BE2  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2353  000BE4  0D01               	mullw	1
  2354  000BE6  0E0F               	movlw	15
  2355  000BE8  26F3               	addwf	prodl,f,c
  2356  000BEA  0E00               	movlw	0
  2357  000BEC  22F4               	addwfc	prodh,f,c
  2358  000BEE  50F3               	movf	prodl,w,c
  2359  000BF0  0100               	movlb	0	; () banked
  2360  000BF2  0100               	movlb	0	; () banked
  2361  000BF4  25DD               	addwf	_ic_ptr& (0+255),w,b
  2362  000BF6  6EE1               	movwf	fsr1l,c
  2363  000BF8  50F4               	movf	prodh,w,c
  2364  000BFA  0100               	movlb	0	; () banked
  2365  000BFC  0100               	movlb	0	; () banked
  2366  000BFE  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2367  000C00  6EE2               	movwf	fsr1h,c
  2368  000C02  CFDF FFE7          	movff	indf2,indf1
  2369                           
  2370                           ; BSR set to: 0
  2371  000C06  0100               	movlb	0	; () banked
  2372  000C08  EE20 F019          	lfsr	2,25
  2373  000C0C  0100               	movlb	0	; () banked
  2374  000C0E  51DD               	movf	_ic_ptr& (0+255),w,b
  2375  000C10  26D9               	addwf	fsr2l,f,c
  2376  000C12  0100               	movlb	0	; () banked
  2377  000C14  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2378  000C16  22DA               	addwfc	fsr2h,f,c
  2379  000C18  2ADF               	incf	indf2,f,c
  2380  000C1A                     l3530:
  2381                           
  2382                           ; BSR set to: 0
  2383  000C1A  0100               	movlb	0	; () banked
  2384  000C1C  EE20 F019          	lfsr	2,25
  2385  000C20  0100               	movlb	0	; () banked
  2386  000C22  51DD               	movf	_ic_ptr& (0+255),w,b
  2387  000C24  26D9               	addwf	fsr2l,f,c
  2388  000C26  0100               	movlb	0	; () banked
  2389  000C28  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2390  000C2A  22DA               	addwfc	fsr2h,f,c
  2391  000C2C  50DF               	movf	indf2,w,c
  2392  000C2E  0100               	movlb	0	; () banked
  2393  000C30  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2394  000C32  0100               	movlb	0	; () banked
  2395  000C34  0100               	movlb	0	; () banked
  2396  000C36  51DB               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2397  000C38  0100               	movlb	0	; () banked
  2398  000C3A  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2399  000C3C  A0D8               	btfss	status,0,c
  2400  000C3E  D7AB               	goto	l3526
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;my_i2c.c: 57: }
  2404                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2405                           
  2406                           ; BSR set to: 0
  2407  000C40  0100               	movlb	0	; () banked
  2408  000C42  EE20 F019          	lfsr	2,25
  2409  000C46  0100               	movlb	0	; () banked
  2410  000C48  51DD               	movf	_ic_ptr& (0+255),w,b
  2411  000C4A  26D9               	addwf	fsr2l,f,c
  2412  000C4C  0100               	movlb	0	; () banked
  2413  000C4E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2414  000C50  22DA               	addwfc	fsr2h,f,c
  2415  000C52  0100               	movlb	0	; () banked
  2416  000C54  C0DB  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2417                           
  2418                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2419  000C58  0100               	movlb	0	; () banked
  2420  000C5A  EE20 F01A          	lfsr	2,26
  2421  000C5E  0100               	movlb	0	; () banked
  2422  000C60  51DD               	movf	_ic_ptr& (0+255),w,b
  2423  000C62  26D9               	addwf	fsr2l,f,c
  2424  000C64  0100               	movlb	0	; () banked
  2425  000C66  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2426  000C68  22DA               	addwfc	fsr2h,f,c
  2427  000C6A  0E01               	movlw	1
  2428  000C6C  6EDF               	movwf	indf2,c
  2429                           
  2430                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2431  000C6E  0100               	movlb	0	; () banked
  2432  000C70  EE20 F00F          	lfsr	2,15
  2433  000C74  0100               	movlb	0	; () banked
  2434  000C76  51DD               	movf	_ic_ptr& (0+255),w,b
  2435  000C78  26D9               	addwf	fsr2l,f,c
  2436  000C7A  0100               	movlb	0	; () banked
  2437  000C7C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2438  000C7E  22DA               	addwfc	fsr2h,f,c
  2439  000C80  50DF               	movf	indf2,w,c
  2440  000C82  6EC9               	movwf	4041,c	;volatile
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2444  000C84  88C6               	bsf	4038,4,c	;volatile
  2445                           
  2446                           ; BSR set to: 0
  2447  000C86  0012               	return	
  2448  000C88                     __end_of_start_i2c_slave_reply:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _init_uart_recv *****************
  2466 ;; Defined at:
  2467 ;;		line 80 in file "src/my_uart.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  uc              2   33[BANK0 ] PTR struct __uart_comm
  2470 ;;		 -> main@uc(5), 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;		None               void
  2475 ;; Registers used:
  2476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2482 ;;      Params:         0       2       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0
  2485 ;;      Totals:         0       2       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:   10
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text8
  2497  001C30                     __ptext8:
  2498                           	opt stack 0
  2499  001C30                     _init_uart_recv:
  2500                           	opt stack 20
  2501                           
  2502                           ;my_uart.c: 81: uc_ptr = uc;
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;incstack = 0
  2506  001C30  0100               	movlb	0	; () banked
  2507  001C32  C0D8  F049         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2508  001C36  0100               	movlb	0	; () banked
  2509  001C38  C0D7  F048         	movff	init_uart_recv@uc,_uc_ptr
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2513  001C3C  EE20 F004          	lfsr	2,4
  2514  001C40  5048               	movf	_uc_ptr,w,c
  2515  001C42  26D9               	addwf	fsr2l,f,c
  2516  001C44  5049               	movf	_uc_ptr+1,w,c
  2517  001C46  22DA               	addwfc	fsr2h,f,c
  2518  001C48  0E00               	movlw	0
  2519  001C4A  6EDF               	movwf	indf2,c
  2520                           
  2521                           ; BSR set to: 0
  2522  001C4C  0012               	return	
  2523  001C4E                     __end_of_init_uart_recv:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           prodh	equ	0xFF4
  2527                           prodl	equ	0xFF3
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           indf1	equ	0xFE7
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           postinc2	equ	0xFDE
  2535                           postdec2	equ	0xFDD
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function _init_uart_lthread *****************
  2541 ;; Defined at:
  2542 ;;		line 7 in file "src/uart_thread.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  uptr            2   33[BANK0 ] PTR struct __uart_thread
  2545 ;;		 -> main@uthread_data(10), 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		None
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2557 ;;      Params:         0       2       0       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0
  2560 ;;      Totals:         0       2       0       0       0
  2561 ;;Total ram usage:        2 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:   10
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_main
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text9
  2572  001D08                     __ptext9:
  2573                           	opt stack 0
  2574  001D08                     _init_uart_lthread:
  2575                           	opt stack 20
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;incstack = 0
  2579  001D08  0012               	return	
  2580  001D0A                     __end_of_init_uart_lthread:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           indf1	equ	0xFE7
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           indf2	equ	0xFDF
  2591                           postinc2	equ	0xFDE
  2592                           postdec2	equ	0xFDD
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _init_timer1_lthread *****************
  2598 ;; Defined at:
  2599 ;;		line 7 in file "src/timer1_thread.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  tptr            2   33[BANK0 ] PTR struct __timer1_thre
  2602 ;;		 -> main@t1thread_data(2), 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;		None               void
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2614 ;;      Params:         0       2       0       0       0
  2615 ;;      Locals:         0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0
  2617 ;;      Totals:         0       2       0       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:   10
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text10
  2629  001C94                     __ptext10:
  2630                           	opt stack 0
  2631  001C94                     _init_timer1_lthread:
  2632                           	opt stack 20
  2633                           
  2634                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2635                           
  2636                           ;incstack = 0
  2637  001C94  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2638  001C98  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2639  001C9C  0E00               	movlw	0
  2640  001C9E  6EDE               	movwf	postinc2,c
  2641  001CA0  0E00               	movlw	0
  2642  001CA2  6EDD               	movwf	postdec2,c
  2643  001CA4  0012               	return	
  2644  001CA6                     __end_of_init_timer1_lthread:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf1	equ	0xFE7
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _init_queues *****************
  2662 ;; Defined at:
  2663 ;;		line 194 in file "src/messages.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2677 ;;      Params:         0       0       0       0       0
  2678 ;;      Locals:         0       0       0       0       0
  2679 ;;      Temps:          0       1       0       0       0
  2680 ;;      Totals:         0       1       0       0       0
  2681 ;;Total ram usage:        1 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:   11
  2684 ;; This function calls:
  2685 ;;		_init_queue
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text11
  2692  001646                     __ptext11:
  2693                           	opt stack 0
  2694  001646                     _init_queues:
  2695                           	opt stack 19
  2696                           
  2697                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2698                           
  2699                           ;incstack = 0
  2700  001646  0100               	movlb	0	; () banked
  2701  001648  6FDB               	movwf	??_init_queues& (0+255),b
  2702  00164A  0E00               	movlw	0
  2703  00164C  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  2704  00164E  0100               	movlb	0	; () banked
  2705  001650  51DB               	movf	??_init_queues& (0+255),w,b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2709  001652  0100               	movlb	0	; () banked
  2710  001654  0E00               	movlw	high _ToMainLow_MQ
  2711  001656  0100               	movlb	0	; () banked
  2712  001658  0100               	movlb	0	; () banked
  2713  00165A  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2714  00165C  0100               	movlb	0	; () banked
  2715  00165E  0E80               	movlw	low _ToMainLow_MQ
  2716  001660  0100               	movlb	0	; () banked
  2717  001662  0100               	movlb	0	; () banked
  2718  001664  6FD7               	movwf	init_queue@qptr& (0+255),b
  2719  001666  ECE6  F00A         	call	_init_queue	;wreg free
  2720                           
  2721                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2722  00166A  0101               	movlb	1	; () banked
  2723  00166C  0E01               	movlw	high _ToMainHigh_MQ
  2724  00166E  0100               	movlb	0	; () banked
  2725  001670  0100               	movlb	0	; () banked
  2726  001672  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2727  001674  0101               	movlb	1	; () banked
  2728  001676  0E6C               	movlw	low _ToMainHigh_MQ
  2729  001678  0100               	movlb	0	; () banked
  2730  00167A  0100               	movlb	0	; () banked
  2731  00167C  6FD7               	movwf	init_queue@qptr& (0+255),b
  2732  00167E  ECE6  F00A         	call	_init_queue	;wreg free
  2733                           
  2734                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2735  001682  0101               	movlb	1	; () banked
  2736  001684  0E01               	movlw	high _FromMainLow_MQ
  2737  001686  0100               	movlb	0	; () banked
  2738  001688  0100               	movlb	0	; () banked
  2739  00168A  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2740  00168C  0101               	movlb	1	; () banked
  2741  00168E  0E36               	movlw	low _FromMainLow_MQ
  2742  001690  0100               	movlb	0	; () banked
  2743  001692  0100               	movlb	0	; () banked
  2744  001694  6FD7               	movwf	init_queue@qptr& (0+255),b
  2745  001696  ECE6  F00A         	call	_init_queue	;wreg free
  2746                           
  2747                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2748  00169A  0101               	movlb	1	; () banked
  2749  00169C  0E01               	movlw	high _FromMainHigh_MQ
  2750  00169E  0100               	movlb	0	; () banked
  2751  0016A0  0100               	movlb	0	; () banked
  2752  0016A2  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2753  0016A4  0101               	movlb	1	; () banked
  2754  0016A6  0E00               	movlw	low _FromMainHigh_MQ
  2755  0016A8  0100               	movlb	0	; () banked
  2756  0016AA  0100               	movlb	0	; () banked
  2757  0016AC  6FD7               	movwf	init_queue@qptr& (0+255),b
  2758  0016AE  ECE6  F00A         	call	_init_queue	;wreg free
  2759  0016B2  0012               	return	
  2760  0016B4                     __end_of_init_queues:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           prodh	equ	0xFF4
  2764                           prodl	equ	0xFF3
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           indf1	equ	0xFE7
  2768                           fsr1h	equ	0xFE2
  2769                           fsr1l	equ	0xFE1
  2770                           indf2	equ	0xFDF
  2771                           postinc2	equ	0xFDE
  2772                           postdec2	equ	0xFDD
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777 ;; *************** function _init_queue *****************
  2778 ;; Defined at:
  2779 ;;		line 14 in file "src/messages.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2782 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  i               1   36[BANK0 ] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;		None               void
  2787 ;; Registers used:
  2788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2794 ;;      Params:         0       2       0       0       0
  2795 ;;      Locals:         0       1       0       0       0
  2796 ;;      Temps:          0       1       0       0       0
  2797 ;;      Totals:         0       4       0       0       0
  2798 ;;Total ram usage:        4 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:   10
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_init_queues
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text12
  2809  0015CC                     __ptext12:
  2810                           	opt stack 0
  2811  0015CC                     _init_queue:
  2812                           	opt stack 19
  2813                           
  2814                           ;messages.c: 15: unsigned char i;
  2815                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2816                           
  2817                           ;incstack = 0
  2818  0015CC  0100               	movlb	0	; () banked
  2819  0015CE  EE20 F034          	lfsr	2,52
  2820  0015D2  0100               	movlb	0	; () banked
  2821  0015D4  51D7               	movf	init_queue@qptr& (0+255),w,b
  2822  0015D6  26D9               	addwf	fsr2l,f,c
  2823  0015D8  0100               	movlb	0	; () banked
  2824  0015DA  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2825  0015DC  22DA               	addwfc	fsr2h,f,c
  2826  0015DE  0E00               	movlw	0
  2827  0015E0  6EDF               	movwf	indf2,c
  2828                           
  2829                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2830  0015E2  0100               	movlb	0	; () banked
  2831  0015E4  EE20 F035          	lfsr	2,53
  2832  0015E8  0100               	movlb	0	; () banked
  2833  0015EA  51D7               	movf	init_queue@qptr& (0+255),w,b
  2834  0015EC  26D9               	addwf	fsr2l,f,c
  2835  0015EE  0100               	movlb	0	; () banked
  2836  0015F0  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2837  0015F2  22DA               	addwfc	fsr2h,f,c
  2838  0015F4  0E00               	movlw	0
  2839  0015F6  6EDF               	movwf	indf2,c
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2843  0015F8  0100               	movlb	0	; () banked
  2844  0015FA  6FD9               	movwf	??_init_queue& (0+255),b
  2845  0015FC  0E00               	movlw	0
  2846  0015FE  0100               	movlb	0	; () banked
  2847  001600  0100               	movlb	0	; () banked
  2848  001602  6FDA               	movwf	init_queue@i& (0+255),b
  2849  001604  0100               	movlb	0	; () banked
  2850  001606  51D9               	movf	??_init_queue& (0+255),w,b
  2851                           
  2852                           ; BSR set to: 0
  2853  001608  0E03               	movlw	3
  2854  00160A  0100               	movlb	0	; () banked
  2855  00160C  0100               	movlb	0	; () banked
  2856  00160E  65DA               	cpfsgt	init_queue@i& (0+255),b
  2857  001610  D001               	goto	l3578
  2858  001612  0012               	return	
  2859  001614                     l3578:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;messages.c: 20: qptr->queue[i].full = 0;
  2863  001614  0100               	movlb	0	; () banked
  2864  001616  0100               	movlb	0	; () banked
  2865  001618  51DA               	movf	init_queue@i& (0+255),w,b
  2866  00161A  0D0D               	mullw	13
  2867  00161C  50F3               	movf	prodl,w,c
  2868  00161E  0100               	movlb	0	; () banked
  2869  001620  0100               	movlb	0	; () banked
  2870  001622  25D7               	addwf	init_queue@qptr& (0+255),w,b
  2871  001624  6ED9               	movwf	fsr2l,c
  2872  001626  50F4               	movf	prodh,w,c
  2873  001628  0100               	movlb	0	; () banked
  2874  00162A  0100               	movlb	0	; () banked
  2875  00162C  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2876  00162E  6EDA               	movwf	fsr2h,c
  2877  001630  0E00               	movlw	0
  2878  001632  6EDF               	movwf	indf2,c
  2879                           
  2880                           ; BSR set to: 0
  2881  001634  0100               	movlb	0	; () banked
  2882  001636  0100               	movlb	0	; () banked
  2883  001638  2BDA               	incf	init_queue@i& (0+255),f,b
  2884                           
  2885                           ; BSR set to: 0
  2886  00163A  0E03               	movlw	3
  2887  00163C  0100               	movlb	0	; () banked
  2888  00163E  0100               	movlb	0	; () banked
  2889  001640  65DA               	cpfsgt	init_queue@i& (0+255),b
  2890  001642  D7E8               	goto	l3578
  2891  001644  0012               	return	
  2892  001646                     __end_of_init_queue:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           prodh	equ	0xFF4
  2896                           prodl	equ	0xFF3
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           indf1	equ	0xFE7
  2900                           fsr1h	equ	0xFE2
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function _init_i2c *****************
  2910 ;; Defined at:
  2911 ;;		line 268 in file "src/my_i2c.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  ic              2   33[BANK0 ] PTR struct __i2c_comm
  2914 ;;		 -> main@ic(28), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;		None               void
  2919 ;; Registers used:
  2920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2926 ;;      Params:         0       2       0       0       0
  2927 ;;      Locals:         0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0
  2929 ;;      Totals:         0       2       0       0       0
  2930 ;;Total ram usage:        2 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:   10
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text13
  2941  0016B4                     __ptext13:
  2942                           	opt stack 0
  2943  0016B4                     _init_i2c:
  2944                           	opt stack 20
  2945                           
  2946                           ;my_i2c.c: 269: ic_ptr = ic;
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;incstack = 0
  2950  0016B4  0100               	movlb	0	; () banked
  2951  0016B6  0100               	movlb	0	; () banked
  2952  0016B8  C0D8  F0DE         	movff	init_i2c@ic+1,_ic_ptr+1
  2953  0016BC  0100               	movlb	0	; () banked
  2954  0016BE  0100               	movlb	0	; () banked
  2955  0016C0  C0D7  F0DD         	movff	init_i2c@ic,_ic_ptr
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  2959  0016C4  0100               	movlb	0	; () banked
  2960  0016C6  EE20 F00A          	lfsr	2,10
  2961  0016CA  0100               	movlb	0	; () banked
  2962  0016CC  51DD               	movf	_ic_ptr& (0+255),w,b
  2963  0016CE  26D9               	addwf	fsr2l,f,c
  2964  0016D0  0100               	movlb	0	; () banked
  2965  0016D2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2966  0016D4  22DA               	addwfc	fsr2h,f,c
  2967  0016D6  0E00               	movlw	0
  2968  0016D8  6EDF               	movwf	indf2,c
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  2972  0016DA  0100               	movlb	0	; () banked
  2973  0016DC  EE20 F00B          	lfsr	2,11
  2974  0016E0  0100               	movlb	0	; () banked
  2975  0016E2  51DD               	movf	_ic_ptr& (0+255),w,b
  2976  0016E4  26D9               	addwf	fsr2l,f,c
  2977  0016E6  0100               	movlb	0	; () banked
  2978  0016E8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2979  0016EA  22DA               	addwfc	fsr2h,f,c
  2980  0016EC  0E00               	movlw	0
  2981  0016EE  6EDF               	movwf	indf2,c
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  2985  0016F0  0100               	movlb	0	; () banked
  2986  0016F2  EE20 F00C          	lfsr	2,12
  2987  0016F6  0100               	movlb	0	; () banked
  2988  0016F8  51DD               	movf	_ic_ptr& (0+255),w,b
  2989  0016FA  26D9               	addwf	fsr2l,f,c
  2990  0016FC  0100               	movlb	0	; () banked
  2991  0016FE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2992  001700  22DA               	addwfc	fsr2h,f,c
  2993  001702  0E05               	movlw	5
  2994  001704  6EDF               	movwf	indf2,c
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  2998  001706  0100               	movlb	0	; () banked
  2999  001708  EE20 F00E          	lfsr	2,14
  3000  00170C  0100               	movlb	0	; () banked
  3001  00170E  51DD               	movf	_ic_ptr& (0+255),w,b
  3002  001710  26D9               	addwf	fsr2l,f,c
  3003  001712  0100               	movlb	0	; () banked
  3004  001714  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3005  001716  22DA               	addwfc	fsr2h,f,c
  3006  001718  0E00               	movlw	0
  3007  00171A  6EDF               	movwf	indf2,c
  3008                           
  3009                           ; BSR set to: 0
  3010  00171C  0012               	return	
  3011  00171E                     __end_of_init_i2c:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _i2c_configure_slave *****************
  3029 ;; Defined at:
  3030 ;;		line 279 in file "src/my_i2c.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  addr            1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  addr            1   33[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       1       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       1       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:   10
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text14
  3059  001B70                     __ptext14:
  3060                           	opt stack 0
  3061  001B70                     _i2c_configure_slave:
  3062                           	opt stack 20
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;incstack = 0
  3066                           ;i2c_configure_slave@addr stored from wreg
  3067  001B70  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3068                           
  3069                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3070  001B74  8694               	bsf	3988,3,c	;volatile
  3071                           
  3072                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3073  001B76  8894               	bsf	3988,4,c	;volatile
  3074                           
  3075                           ;my_i2c.c: 297: SSPADD = addr;
  3076  001B78  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3077                           
  3078                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3079  001B7C  0E00               	movlw	0
  3080  001B7E  6EC7               	movwf	4039,c	;volatile
  3081                           
  3082                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3083  001B80  0E00               	movlw	0
  3084  001B82  6EC6               	movwf	4038,c	;volatile
  3085                           
  3086                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3087  001B84  0E00               	movlw	0
  3088  001B86  6EC5               	movwf	4037,c	;volatile
  3089                           
  3090                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3091  001B88  0E0E               	movlw	14
  3092  001B8A  12C6               	iorwf	4038,f,c	;volatile
  3093                           
  3094                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3095  001B8C  8EC7               	bsf	4039,7,c	;volatile
  3096                           
  3097                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3098  001B8E  8694               	bsf	3988,3,c	;volatile
  3099                           
  3100                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3101  001B90  8894               	bsf	3988,4,c	;volatile
  3102                           
  3103                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3104  001B92  80C5               	bsf	4037,0,c	;volatile
  3105                           
  3106                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3107  001B94  8AC6               	bsf	4038,5,c	;volatile
  3108  001B96  0012               	return	
  3109  001B98                     __end_of_i2c_configure_slave:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           postinc0	equ	0xFEE
  3115                           wreg	equ	0xFE8
  3116                           indf1	equ	0xFE7
  3117                           fsr1h	equ	0xFE2
  3118                           fsr1l	equ	0xFE1
  3119                           indf2	equ	0xFDF
  3120                           postinc2	equ	0xFDE
  3121                           postdec2	equ	0xFDD
  3122                           fsr2h	equ	0xFDA
  3123                           fsr2l	equ	0xFD9
  3124                           status	equ	0xFD8
  3125                           
  3126 ;; *************** function _enable_interrupts *****************
  3127 ;; Defined at:
  3128 ;;		line 14 in file "src/interrupts.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		None
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:   10
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text15
  3157  001CFA                     __ptext15:
  3158                           	opt stack 0
  3159  001CFA                     _enable_interrupts:
  3160                           	opt stack 20
  3161                           
  3162                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3163                           
  3164                           ;incstack = 0
  3165  001CFA  8ED0               	bsf	4048,7,c	;volatile
  3166                           
  3167                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3168  001CFC  8EF2               	bsf	intcon,7,c	;volatile
  3169                           
  3170                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3171  001CFE  8CF2               	bsf	intcon,6,c	;volatile
  3172  001D00  0012               	return	
  3173  001D02                     __end_of_enable_interrupts:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           indf1	equ	0xFE7
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           postinc2	equ	0xFDE
  3186                           postdec2	equ	0xFDD
  3187                           fsr2h	equ	0xFDA
  3188                           fsr2l	equ	0xFD9
  3189                           status	equ	0xFD8
  3190                           
  3191 ;; *************** function _block_on_To_msgqueues *****************
  3192 ;; Defined at:
  3193 ;;		line 258 in file "src/messages.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       1       0       0
  3210 ;;      Totals:         0       0       1       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:   13
  3214 ;; This function calls:
  3215 ;;		_Delay1KTCYx
  3216 ;;		_check_msg
  3217 ;;		_in_main
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text16
  3224  00154E                     __ptext16:
  3225                           	opt stack 0
  3226  00154E                     _block_on_To_msgqueues:
  3227                           	opt stack 17
  3228                           
  3229                           ;messages.c: 259: if (!in_main()) {
  3230                           
  3231                           ;incstack = 0
  3232  00154E  EC35  F00C         	call	_in_main	;wreg free
  3233  001552  0100               	movlb	0	; () banked
  3234  001554  0100               	movlb	0	; () banked
  3235  001556  51DC               	movf	(?_in_main+1)& (0+255),w,b
  3236  001558  0100               	movlb	0	; () banked
  3237  00155A  11DB               	iorwf	?_in_main& (0+255),w,b
  3238  00155C  B4D8               	btfsc	status,2,c
  3239  00155E  0012               	return	
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;messages.c: 261: }
  3243                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3244                           
  3245                           ; BSR set to: 0
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;messages.c: 260: return;
  3249  001560  0101               	movlb	1	; () banked
  3250  001562  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3251  001564  0E01               	movlw	1
  3252  001566  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3253  001568  0101               	movlb	1	; () banked
  3254  00156A  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3255  00156C                     l3504:
  3256                           
  3257                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3258  00156C  0101               	movlb	1	; () banked
  3259  00156E  0E01               	movlw	high _ToMainHigh_MQ
  3260  001570  0100               	movlb	0	; () banked
  3261  001572  0100               	movlb	0	; () banked
  3262  001574  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3263  001576  0101               	movlb	1	; () banked
  3264  001578  0E6C               	movlw	low _ToMainHigh_MQ
  3265  00157A  0100               	movlb	0	; () banked
  3266  00157C  0100               	movlb	0	; () banked
  3267  00157E  6FD7               	movwf	check_msg@qptr& (0+255),b
  3268  001580  EC2B  F00D         	call	_check_msg	;wreg free
  3269  001584  0900               	iorlw	0
  3270  001586  B4D8               	btfsc	status,2,c
  3271  001588  D007               	goto	l3510
  3272                           
  3273                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3274  00158A  0101               	movlb	1	; () banked
  3275  00158C  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3276  00158E  0E00               	movlw	0
  3277  001590  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3278  001592  0101               	movlb	1	; () banked
  3279  001594  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3280  001596  0012               	return	
  3281  001598                     l3510:
  3282                           
  3283                           ;messages.c: 271: }
  3284                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3285  001598  0100               	movlb	0	; () banked
  3286  00159A  0E00               	movlw	high _ToMainLow_MQ
  3287  00159C  0100               	movlb	0	; () banked
  3288  00159E  0100               	movlb	0	; () banked
  3289  0015A0  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3290  0015A2  0100               	movlb	0	; () banked
  3291  0015A4  0E80               	movlw	low _ToMainLow_MQ
  3292  0015A6  0100               	movlb	0	; () banked
  3293  0015A8  0100               	movlb	0	; () banked
  3294  0015AA  6FD7               	movwf	check_msg@qptr& (0+255),b
  3295  0015AC  EC2B  F00D         	call	_check_msg	;wreg free
  3296  0015B0  0900               	iorlw	0
  3297  0015B2  B4D8               	btfsc	status,2,c
  3298  0015B4  D007               	goto	l3516
  3299                           
  3300                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3301  0015B6  0101               	movlb	1	; () banked
  3302  0015B8  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3303  0015BA  0E00               	movlw	0
  3304  0015BC  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3305  0015BE  0101               	movlb	1	; () banked
  3306  0015C0  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3307  0015C2  0012               	return	
  3308  0015C4                     l3516:
  3309                           
  3310                           ;messages.c: 278: }
  3311                           ;messages.c: 279: Delay1KTCYx(10);
  3312  0015C4  0E0A               	movlw	10
  3313  0015C6  EC36  F00E         	call	_Delay1KTCYx
  3314  0015CA  D7D0               	goto	l3504
  3315  0015CC                     __end_of_block_on_To_msgqueues:
  3316                           	opt stack 0
  3317                           tblptru	equ	0xFF8
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           indf1	equ	0xFE7
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           postinc2	equ	0xFDE
  3328                           postdec2	equ	0xFDD
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _in_main *****************
  3334 ;; Defined at:
  3335 ;;		line 40 in file "src/interrupts.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   37[BANK0 ] int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3349 ;;      Params:         0       2       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       2       0       0       0
  3353 ;;Total ram usage:        2 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:   12
  3356 ;; This function calls:
  3357 ;;		_in_high_int
  3358 ;;		_in_low_int
  3359 ;; This function is called by:
  3360 ;;		_block_on_To_msgqueues
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text17
  3365  00186A                     __ptext17:
  3366                           	opt stack 0
  3367  00186A                     _in_main:
  3368                           	opt stack 17
  3369                           
  3370                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3371                           
  3372                           ;incstack = 0
  3373  00186A  EC12  F00C         	call	_in_low_int	;wreg free
  3374  00186E  0100               	movlb	0	; () banked
  3375  001870  0100               	movlb	0	; () banked
  3376  001872  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3377  001874  0100               	movlb	0	; () banked
  3378  001876  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3379  001878  A4D8               	btfss	status,2,c
  3380  00187A  D011               	goto	l3124
  3381                           
  3382                           ; BSR set to: 0
  3383  00187C  EC53  F00E         	call	_in_high_int	;wreg free
  3384  001880  0100               	movlb	0	; () banked
  3385  001882  0100               	movlb	0	; () banked
  3386  001884  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3387  001886  0100               	movlb	0	; () banked
  3388  001888  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3389  00188A  A4D8               	btfss	status,2,c
  3390  00188C  D008               	goto	l3124
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;interrupts.c: 42: return (1);
  3394  00188E  0E00               	movlw	0
  3395  001890  0100               	movlb	0	; () banked
  3396  001892  0100               	movlb	0	; () banked
  3397  001894  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3398  001896  0E01               	movlw	1
  3399  001898  0100               	movlb	0	; () banked
  3400  00189A  6FDB               	movwf	?_in_main& (0+255),b
  3401  00189C  0012               	return	
  3402  00189E                     l3124:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;interrupts.c: 44: return (0);
  3406  00189E  0E00               	movlw	0
  3407  0018A0  0100               	movlb	0	; () banked
  3408  0018A2  0100               	movlb	0	; () banked
  3409  0018A4  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3410  0018A6  0E00               	movlw	0
  3411  0018A8  0100               	movlb	0	; () banked
  3412  0018AA  6FDB               	movwf	?_in_main& (0+255),b
  3413  0018AC  0012               	return	
  3414  0018AE                     __end_of_in_main:
  3415                           	opt stack 0
  3416                           tblptru	equ	0xFF8
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           intcon	equ	0xFF2
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           indf1	equ	0xFE7
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _in_low_int *****************
  3433 ;; Defined at:
  3434 ;;		line 30 in file "src/interrupts.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2   35[BANK0 ] int 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3448 ;;      Params:         0       2       0       0       0
  3449 ;;      Locals:         0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0
  3451 ;;      Totals:         0       2       0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:   11
  3455 ;; This function calls:
  3456 ;;		_in_high_int
  3457 ;; This function is called by:
  3458 ;;		_in_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text18
  3463  001824                     __ptext18:
  3464                           	opt stack 0
  3465  001824                     _in_low_int:
  3466                           	opt stack 17
  3467                           
  3468                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;incstack = 0
  3472  001824  ACF2               	btfss	intcon,6,c	;volatile
  3473  001826  D008               	goto	l3102
  3474                           
  3475                           ;interrupts.c: 32: return (0);
  3476  001828  0E00               	movlw	0
  3477  00182A  0100               	movlb	0	; () banked
  3478  00182C  0100               	movlb	0	; () banked
  3479  00182E  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3480  001830  0E00               	movlw	0
  3481  001832  0100               	movlb	0	; () banked
  3482  001834  6FD9               	movwf	?_in_low_int& (0+255),b
  3483  001836  0012               	return	
  3484  001838                     l3102:
  3485  001838  EC53  F00E         	call	_in_high_int	;wreg free
  3486  00183C  0100               	movlb	0	; () banked
  3487  00183E  0100               	movlb	0	; () banked
  3488  001840  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3489  001842  0100               	movlb	0	; () banked
  3490  001844  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3491  001846  B4D8               	btfsc	status,2,c
  3492  001848  D008               	goto	l3110
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;interrupts.c: 34: return (0);
  3496  00184A  0E00               	movlw	0
  3497  00184C  0100               	movlb	0	; () banked
  3498  00184E  0100               	movlb	0	; () banked
  3499  001850  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3500  001852  0E00               	movlw	0
  3501  001854  0100               	movlb	0	; () banked
  3502  001856  6FD9               	movwf	?_in_low_int& (0+255),b
  3503  001858  0012               	return	
  3504  00185A                     l3110:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;interrupts.c: 36: return (1);
  3508  00185A  0E00               	movlw	0
  3509  00185C  0100               	movlb	0	; () banked
  3510  00185E  0100               	movlb	0	; () banked
  3511  001860  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3512  001862  0E01               	movlw	1
  3513  001864  0100               	movlb	0	; () banked
  3514  001866  6FD9               	movwf	?_in_low_int& (0+255),b
  3515  001868  0012               	return	
  3516  00186A                     __end_of_in_low_int:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           intcon	equ	0xFF2
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           indf1	equ	0xFE7
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _in_high_int *****************
  3535 ;; Defined at:
  3536 ;;		line 22 in file "src/interrupts.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2   33[BANK0 ] int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3550 ;;      Params:         0       2       0       0       0
  3551 ;;      Locals:         0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       2       0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:   10
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_in_low_int
  3561 ;;		_in_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text19
  3566  001CA6                     __ptext19:
  3567                           	opt stack 0
  3568  001CA6                     _in_high_int:
  3569                           	opt stack 17
  3570                           
  3571                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;incstack = 0
  3575  001CA6  0E00               	movlw	0
  3576  001CA8  AEF2               	btfss	intcon,7,c	;volatile
  3577  001CAA  0E01               	movlw	1
  3578  001CAC  0100               	movlb	0	; () banked
  3579  001CAE  0100               	movlb	0	; () banked
  3580  001CB0  6FD7               	movwf	?_in_high_int& (0+255),b
  3581  001CB2  0100               	movlb	0	; () banked
  3582  001CB4  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  3583  001CB6  0012               	return	
  3584  001CB8                     __end_of_in_high_int:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon	equ	0xFF2
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           fsr1h	equ	0xFE2
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _check_msg *****************
  3603 ;; Defined at:
  3604 ;;		line 222 in file "src/messages.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3607 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      unsigned char 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3619 ;;      Params:         0       2       0       0       0
  3620 ;;      Locals:         0       0       0       0       0
  3621 ;;      Temps:          0       1       0       0       0
  3622 ;;      Totals:         0       3       0       0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   10
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_block_on_To_msgqueues
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text20
  3634  001A56                     __ptext20:
  3635                           	opt stack 0
  3636  001A56                     _check_msg:
  3637                           	opt stack 19
  3638                           
  3639                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;incstack = 0
  3643  001A56  0100               	movlb	0	; () banked
  3644  001A58  EE20 F035          	lfsr	2,53
  3645  001A5C  0100               	movlb	0	; () banked
  3646  001A5E  51D7               	movf	check_msg@qptr& (0+255),w,b
  3647  001A60  26D9               	addwf	fsr2l,f,c
  3648  001A62  0100               	movlb	0	; () banked
  3649  001A64  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3650  001A66  22DA               	addwfc	fsr2h,f,c
  3651  001A68  50DF               	movf	indf2,w,c
  3652  001A6A  0100               	movlb	0	; () banked
  3653  001A6C  6FD9               	movwf	??_check_msg& (0+255),b
  3654  001A6E  0100               	movlb	0	; () banked
  3655  001A70  51D9               	movf	??_check_msg& (0+255),w,b
  3656  001A72  0D0D               	mullw	13
  3657  001A74  50F3               	movf	prodl,w,c
  3658  001A76  0100               	movlb	0	; () banked
  3659  001A78  0100               	movlb	0	; () banked
  3660  001A7A  25D7               	addwf	check_msg@qptr& (0+255),w,b
  3661  001A7C  6ED9               	movwf	fsr2l,c
  3662  001A7E  50F4               	movf	prodh,w,c
  3663  001A80  0100               	movlb	0	; () banked
  3664  001A82  0100               	movlb	0	; () banked
  3665  001A84  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3666  001A86  6EDA               	movwf	fsr2h,c
  3667  001A88  50DF               	movf	indf2,w,c
  3668  001A8A  0012               	return	
  3669  001A8C                     __end_of_check_msg:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           postinc0	equ	0xFEE
  3676                           wreg	equ	0xFE8
  3677                           indf1	equ	0xFE7
  3678                           fsr1h	equ	0xFE2
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _Delay1KTCYx *****************
  3688 ;; Defined at:
  3689 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  unit            1    wreg     unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  unit            1   33[BANK0 ] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3703 ;;      Params:         0       0       0       0       0
  3704 ;;      Locals:         0       1       0       0       0
  3705 ;;      Temps:          0       0       0       0       0
  3706 ;;      Totals:         0       1       0       0       0
  3707 ;;Total ram usage:        1 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:   10
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_block_on_To_msgqueues
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text21
  3718  001C6C                     __ptext21:
  3719                           	opt stack 0
  3720  001C6C                     _Delay1KTCYx:
  3721                           	opt stack 19
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;incstack = 0
  3725                           ;Delay1KTCYx@unit stored from wreg
  3726  001C6C  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  3727  001C70                     l722:
  3728  001C70  0EFA               	movlw	250
  3729  001C72                     u3017:
  3730  001C72  F000               	nop	
  3731  001C74  2EE8               	decfsz	wreg,f,c
  3732  001C76  D7FD               	goto	u3017
  3733  001C78  0100               	movlb	0	; () banked
  3734  001C7A  0100               	movlb	0	; () banked
  3735  001C7C  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3736  001C7E  D7F8               	goto	l722
  3737  001C80  0012               	return	
  3738  001C82                     __end_of_Delay1KTCYx:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           indf1	equ	0xFE7
  3747                           fsr1h	equ	0xFE2
  3748                           fsr1l	equ	0xFE1
  3749                           indf2	equ	0xFDF
  3750                           postinc2	equ	0xFDE
  3751                           postdec2	equ	0xFDD
  3752                           fsr2h	equ	0xFDA
  3753                           fsr2l	equ	0xFD9
  3754                           status	equ	0xFD8
  3755                           
  3756 ;; *************** function _ToMainLow_recvmsg *****************
  3757 ;; Defined at:
  3758 ;;		line 112 in file "src/messages.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  maxlength       1    wreg     unsigned char 
  3761 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  3762 ;;		 -> main@msgtype(1), 
  3763 ;;  data            2   20[BANK1 ] PTR void 
  3764 ;;		 -> main@msgbuffer(11), 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  maxlength       1   22[BANK1 ] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      char 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3776 ;;      Params:         0       0       4       0       0
  3777 ;;      Locals:         0       0       1       0       0
  3778 ;;      Temps:          0       0       0       0       0
  3779 ;;      Totals:         0       0       5       0       0
  3780 ;;Total ram usage:        5 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:   12
  3783 ;; This function calls:
  3784 ;;		_recv_msg
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text22
  3791  0018AE                     __ptext22:
  3792                           	opt stack 0
  3793  0018AE                     _ToMainLow_recvmsg:
  3794                           	opt stack 18
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;incstack = 0
  3798                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3799  0018AE  CFE8 F1B8          	movff	wreg,ToMainLow_recvmsg@maxlength
  3800                           
  3801                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3802  0018B2  0100               	movlb	0	; () banked
  3803  0018B4  0E00               	movlw	high _ToMainLow_MQ
  3804  0018B6  0101               	movlb	1	; () banked
  3805  0018B8  0101               	movlb	1	; () banked
  3806  0018BA  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  3807  0018BC  0100               	movlb	0	; () banked
  3808  0018BE  0E80               	movlw	low _ToMainLow_MQ
  3809  0018C0  0101               	movlb	1	; () banked
  3810  0018C2  0101               	movlb	1	; () banked
  3811  0018C4  6FA6               	movwf	recv_msg@qptr& (0+255),b
  3812  0018C6  C1B8  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3813  0018CA  0101               	movlb	1	; () banked
  3814  0018CC  0101               	movlb	1	; () banked
  3815  0018CE  C1B5  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3816  0018D2  0101               	movlb	1	; () banked
  3817  0018D4  0101               	movlb	1	; () banked
  3818  0018D6  C1B4  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3819  0018DA  0101               	movlb	1	; () banked
  3820  0018DC  0101               	movlb	1	; () banked
  3821  0018DE  C1B7  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3822  0018E2  0101               	movlb	1	; () banked
  3823  0018E4  0101               	movlb	1	; () banked
  3824  0018E6  C1B6  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3825  0018EA  EC22  F005         	call	_recv_msg	;wreg free
  3826  0018EE  0012               	return	
  3827  0018F0                     __end_of_ToMainLow_recvmsg:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           indf1	equ	0xFE7
  3836                           fsr1h	equ	0xFE2
  3837                           fsr1l	equ	0xFE1
  3838                           indf2	equ	0xFDF
  3839                           postinc2	equ	0xFDE
  3840                           postdec2	equ	0xFDD
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function _ToMainHigh_recvmsg *****************
  3846 ;; Defined at:
  3847 ;;		line 135 in file "src/messages.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  maxlength       1    wreg     unsigned char 
  3850 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  3851 ;;		 -> main@msgtype(1), 
  3852 ;;  data            2   20[BANK1 ] PTR void 
  3853 ;;		 -> main@msgbuffer(11), 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  maxlength       1   22[BANK1 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      char 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3865 ;;      Params:         0       0       4       0       0
  3866 ;;      Locals:         0       0       1       0       0
  3867 ;;      Temps:          0       0       0       0       0
  3868 ;;      Totals:         0       0       5       0       0
  3869 ;;Total ram usage:        5 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:   12
  3872 ;; This function calls:
  3873 ;;		_recv_msg
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text23
  3880  0018F0                     __ptext23:
  3881                           	opt stack 0
  3882  0018F0                     _ToMainHigh_recvmsg:
  3883                           	opt stack 18
  3884                           
  3885                           ;incstack = 0
  3886                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3887  0018F0  CFE8 F1B8          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3888                           
  3889                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3890  0018F4  0101               	movlb	1	; () banked
  3891  0018F6  0E01               	movlw	high _ToMainHigh_MQ
  3892  0018F8  0101               	movlb	1	; () banked
  3893  0018FA  0101               	movlb	1	; () banked
  3894  0018FC  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  3895  0018FE  0101               	movlb	1	; () banked
  3896  001900  0E6C               	movlw	low _ToMainHigh_MQ
  3897  001902  0101               	movlb	1	; () banked
  3898  001904  0101               	movlb	1	; () banked
  3899  001906  6FA6               	movwf	recv_msg@qptr& (0+255),b
  3900  001908  C1B8  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3901  00190C  0101               	movlb	1	; () banked
  3902  00190E  0101               	movlb	1	; () banked
  3903  001910  C1B5  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3904  001914  0101               	movlb	1	; () banked
  3905  001916  0101               	movlb	1	; () banked
  3906  001918  C1B4  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3907  00191C  0101               	movlb	1	; () banked
  3908  00191E  0101               	movlb	1	; () banked
  3909  001920  C1B7  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3910  001924  0101               	movlb	1	; () banked
  3911  001926  0101               	movlb	1	; () banked
  3912  001928  C1B6  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3913  00192C  EC22  F005         	call	_recv_msg	;wreg free
  3914  001930  0012               	return	
  3915  001932                     __end_of_ToMainHigh_recvmsg:
  3916                           	opt stack 0
  3917                           tblptru	equ	0xFF8
  3918                           prodh	equ	0xFF4
  3919                           prodl	equ	0xFF3
  3920                           intcon	equ	0xFF2
  3921                           postinc0	equ	0xFEE
  3922                           wreg	equ	0xFE8
  3923                           indf1	equ	0xFE7
  3924                           fsr1h	equ	0xFE2
  3925                           fsr1l	equ	0xFE1
  3926                           indf2	equ	0xFDF
  3927                           postinc2	equ	0xFDE
  3928                           postdec2	equ	0xFDD
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           status	equ	0xFD8
  3932                           
  3933 ;; *************** function _recv_msg *****************
  3934 ;; Defined at:
  3935 ;;		line 63 in file "src/messages.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  3938 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3939 ;;  maxlength       1    6[BANK1 ] unsigned char 
  3940 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  3941 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  3942 ;;  data            2    9[BANK1 ] PTR void 
  3943 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  qmsg            2   16[BANK1 ] PTR struct __msg
  3946 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3947 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3948 ;;  tlength         2   14[BANK1 ] unsigned int 
  3949 ;;  slot            1   13[BANK1 ] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      char 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3959 ;;      Params:         0       0       7       0       0
  3960 ;;      Locals:         0       0       5       0       0
  3961 ;;      Temps:          0       0       2       0       0
  3962 ;;      Totals:         0       0      14       0       0
  3963 ;;Total ram usage:       14 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:   11
  3966 ;; This function calls:
  3967 ;;		_memcpy
  3968 ;; This function is called by:
  3969 ;;		_ToMainLow_recvmsg
  3970 ;;		_ToMainHigh_recvmsg
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text24
  3975  000A44                     __ptext24:
  3976                           	opt stack 0
  3977  000A44                     _recv_msg:
  3978                           	opt stack 18
  3979                           
  3980                           ;messages.c: 64: unsigned char slot;
  3981                           ;messages.c: 68: msg *qmsg;
  3982                           ;messages.c: 69: size_t tlength;
  3983                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3984                           
  3985                           ;incstack = 0
  3986  000A44  0101               	movlb	1	; () banked
  3987  000A46  EE20 F035          	lfsr	2,53
  3988  000A4A  0101               	movlb	1	; () banked
  3989  000A4C  51A6               	movf	recv_msg@qptr& (0+255),w,b
  3990  000A4E  26D9               	addwf	fsr2l,f,c
  3991  000A50  0101               	movlb	1	; () banked
  3992  000A52  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3993  000A54  22DA               	addwfc	fsr2h,f,c
  3994  000A56  50DF               	movf	indf2,w,c
  3995  000A58  0101               	movlb	1	; () banked
  3996  000A5A  0101               	movlb	1	; () banked
  3997  000A5C  6FAF               	movwf	recv_msg@slot& (0+255),b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4001  000A5E  0101               	movlb	1	; () banked
  4002  000A60  0101               	movlb	1	; () banked
  4003  000A62  51AF               	movf	recv_msg@slot& (0+255),w,b
  4004  000A64  0D0D               	mullw	13
  4005  000A66  50F3               	movf	prodl,w,c
  4006  000A68  0101               	movlb	1	; () banked
  4007  000A6A  0101               	movlb	1	; () banked
  4008  000A6C  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4009  000A6E  0101               	movlb	1	; () banked
  4010  000A70  0101               	movlb	1	; () banked
  4011  000A72  6FB2               	movwf	recv_msg@qmsg& (0+255),b
  4012  000A74  50F4               	movf	prodh,w,c
  4013  000A76  0101               	movlb	1	; () banked
  4014  000A78  0101               	movlb	1	; () banked
  4015  000A7A  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4016  000A7C  0101               	movlb	1	; () banked
  4017  000A7E  6FB3               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;messages.c: 74: if (qmsg->full == 1) {
  4021  000A80  0E01               	movlw	1
  4022  000A82  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4023  000A86  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4024  000A8A  62DF               	cpfseq	indf2,c
  4025  000A8C  D074               	goto	l3646
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4029  000A8E  0101               	movlb	1	; () banked
  4030  000A90  EE20 F001          	lfsr	2,1
  4031  000A94  0101               	movlb	1	; () banked
  4032  000A96  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4033  000A98  26D9               	addwf	fsr2l,f,c
  4034  000A9A  0101               	movlb	1	; () banked
  4035  000A9C  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4036  000A9E  22DA               	addwfc	fsr2h,f,c
  4037  000AA0  50DF               	movf	indf2,w,c
  4038  000AA2  0101               	movlb	1	; () banked
  4039  000AA4  0101               	movlb	1	; () banked
  4040  000AA6  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4041  000AA8  B0D8               	btfsc	status,0,c
  4042  000AAA  D002               	goto	l3630
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;messages.c: 77: return (-3);
  4046  000AAC  0EFD               	movlw	253
  4047  000AAE  0012               	return	
  4048  000AB0                     l3630:
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;messages.c: 78: }
  4052                           ;messages.c: 80: tlength = qmsg->length;
  4053  000AB0  0101               	movlb	1	; () banked
  4054  000AB2  EE20 F001          	lfsr	2,1
  4055  000AB6  0101               	movlb	1	; () banked
  4056  000AB8  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4057  000ABA  26D9               	addwf	fsr2l,f,c
  4058  000ABC  0101               	movlb	1	; () banked
  4059  000ABE  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4060  000AC0  22DA               	addwfc	fsr2h,f,c
  4061  000AC2  50DF               	movf	indf2,w,c
  4062  000AC4  0101               	movlb	1	; () banked
  4063  000AC6  6FAD               	movwf	??_recv_msg& (0+255),b
  4064  000AC8  0101               	movlb	1	; () banked
  4065  000ACA  51AD               	movf	??_recv_msg& (0+255),w,b
  4066  000ACC  0101               	movlb	1	; () banked
  4067  000ACE  0101               	movlb	1	; () banked
  4068  000AD0  6FB0               	movwf	recv_msg@tlength& (0+255),b
  4069  000AD2  0101               	movlb	1	; () banked
  4070  000AD4  6BB1               	clrf	(recv_msg@tlength+1)& (0+255),b
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4074  000AD6  0101               	movlb	1	; () banked
  4075  000AD8  0100               	movlb	0	; () banked
  4076  000ADA  C1AC  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  4077  000ADE  0101               	movlb	1	; () banked
  4078  000AE0  0100               	movlb	0	; () banked
  4079  000AE2  C1AB  F0D7         	movff	recv_msg@data,memcpy@d1
  4080  000AE6  0E03               	movlw	3
  4081  000AE8  0101               	movlb	1	; () banked
  4082  000AEA  0101               	movlb	1	; () banked
  4083  000AEC  25B2               	addwf	recv_msg@qmsg& (0+255),w,b
  4084  000AEE  0101               	movlb	1	; () banked
  4085  000AF0  6FAD               	movwf	??_recv_msg& (0+255),b
  4086  000AF2  0E00               	movlw	0
  4087  000AF4  0101               	movlb	1	; () banked
  4088  000AF6  0101               	movlb	1	; () banked
  4089  000AF8  21B3               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4090  000AFA  0101               	movlb	1	; () banked
  4091  000AFC  6FAE               	movwf	(??_recv_msg+1)& (0+255),b
  4092  000AFE  C1AD  F0D9         	movff	??_recv_msg,memcpy@s1
  4093  000B02  C1AE  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  4094  000B06  C1B0  F0DB         	movff	recv_msg@tlength,memcpy@n
  4095  000B0A  C1B1  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  4096  000B0E  EC8F  F00B         	call	_memcpy	;wreg free
  4097                           
  4098                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4099  000B12  0101               	movlb	1	; () banked
  4100  000B14  EE20 F035          	lfsr	2,53
  4101  000B18  0101               	movlb	1	; () banked
  4102  000B1A  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4103  000B1C  26D9               	addwf	fsr2l,f,c
  4104  000B1E  0101               	movlb	1	; () banked
  4105  000B20  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4106  000B22  22DA               	addwfc	fsr2h,f,c
  4107  000B24  0101               	movlb	1	; () banked
  4108  000B26  EE10 F035          	lfsr	1,53
  4109  000B2A  0101               	movlb	1	; () banked
  4110  000B2C  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4111  000B2E  26E1               	addwf	fsr1l,f,c
  4112  000B30  0101               	movlb	1	; () banked
  4113  000B32  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4114  000B34  22E2               	addwfc	fsr1h,f,c
  4115  000B36  50E7               	movf	indf1,w,c
  4116  000B38  0101               	movlb	1	; () banked
  4117  000B3A  6FAD               	movwf	??_recv_msg& (0+255),b
  4118  000B3C  0101               	movlb	1	; () banked
  4119  000B3E  29AD               	incf	??_recv_msg& (0+255),w,b
  4120  000B40  0B03               	andlw	3
  4121  000B42  6EDF               	movwf	indf2,c
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4125  000B44  0101               	movlb	1	; () banked
  4126  000B46  EE20 F002          	lfsr	2,2
  4127  000B4A  0101               	movlb	1	; () banked
  4128  000B4C  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4129  000B4E  26D9               	addwf	fsr2l,f,c
  4130  000B50  0101               	movlb	1	; () banked
  4131  000B52  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4132  000B54  22DA               	addwfc	fsr2h,f,c
  4133  000B56  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  4134  000B5A  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4135  000B5E  CFDF FFE7          	movff	indf2,indf1
  4136                           
  4137                           ; BSR set to: 1
  4138                           ;messages.c: 91: qmsg->full = 0;
  4139  000B62  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4140  000B66  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4141  000B6A  0E00               	movlw	0
  4142  000B6C  6EDF               	movwf	indf2,c
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;messages.c: 92: return (tlength);
  4146  000B6E  0101               	movlb	1	; () banked
  4147  000B70  0101               	movlb	1	; () banked
  4148  000B72  51B0               	movf	recv_msg@tlength& (0+255),w,b
  4149  000B74  0012               	return	
  4150  000B76                     l3646:
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;messages.c: 94: return (-4);
  4154  000B76  0EFC               	movlw	252
  4155  000B78  0012               	return	
  4156  000B7A                     __end_of_recv_msg:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           prodh	equ	0xFF4
  4160                           prodl	equ	0xFF3
  4161                           intcon	equ	0xFF2
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           indf1	equ	0xFE7
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _memcpy *****************
  4175 ;; Defined at:
  4176 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  d1              2   33[BANK0 ] PTR void 
  4179 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4180 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4181 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4182 ;;  s1              2   35[BANK0 ] PTR const void 
  4183 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4184 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4185 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4186 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4187 ;;		 -> main@ic(28), main@uc(5), 
  4188 ;;  n               2   37[BANK0 ] unsigned int 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4191 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4192 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4193 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4194 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4195 ;;		 -> main@ic(28), main@uc(5), 
  4196 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4197 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4198 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4199 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  2   33[BANK0 ] PTR void 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4209 ;;      Params:         0       6       0       0       0
  4210 ;;      Locals:         0       0       4       0       0
  4211 ;;      Temps:          0       0       0       0       0
  4212 ;;      Totals:         0       6       4       0       0
  4213 ;;Total ram usage:       10 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:   10
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_send_msg
  4220 ;;		_recv_msg
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text25
  4225  00171E                     __ptext25:
  4226                           	opt stack 0
  4227  00171E                     _memcpy:
  4228                           	opt stack 17
  4229                           
  4230                           ; BSR set to: 1
  4231                           ;incstack = 0
  4232  00171E  0100               	movlb	0	; () banked
  4233  001720  0101               	movlb	1	; () banked
  4234  001722  C0DA  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  4235  001726  0100               	movlb	0	; () banked
  4236  001728  0101               	movlb	1	; () banked
  4237  00172A  C0D9  F1A4         	movff	memcpy@s1,memcpy@s
  4238  00172E  0100               	movlb	0	; () banked
  4239  001730  0101               	movlb	1	; () banked
  4240  001732  C0D8  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  4241  001736  0100               	movlb	0	; () banked
  4242  001738  0101               	movlb	1	; () banked
  4243  00173A  C0D7  F1A2         	movff	memcpy@d1,memcpy@d
  4244  00173E  D012               	goto	l3616
  4245  001740                     l3610:
  4246  001740  C1A4  FFD9         	movff	memcpy@s,fsr2l
  4247  001744  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  4248  001748  C1A2  FFE1         	movff	memcpy@d,fsr1l
  4249  00174C  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  4250  001750  CFDF FFE7          	movff	indf2,indf1
  4251  001754  0101               	movlb	1	; () banked
  4252  001756  0101               	movlb	1	; () banked
  4253  001758  4BA4               	infsnz	memcpy@s& (0+255),f,b
  4254  00175A  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 1
  4257  00175C  0101               	movlb	1	; () banked
  4258  00175E  0101               	movlb	1	; () banked
  4259  001760  4BA2               	infsnz	memcpy@d& (0+255),f,b
  4260  001762  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  4261  001764                     l3616:
  4262                           
  4263                           ; BSR set to: 1
  4264  001764  0100               	movlb	0	; () banked
  4265  001766  0100               	movlb	0	; () banked
  4266  001768  07DB               	decf	memcpy@n& (0+255),f,b
  4267  00176A  A0D8               	btfss	status,0,c
  4268  00176C  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  4269  00176E  0100               	movlb	0	; () banked
  4270  001770  29DB               	incf	memcpy@n& (0+255),w,b
  4271  001772  B4D8               	btfsc	status,2,c
  4272  001774  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  4273  001776  B4D8               	btfsc	status,2,c
  4274                           
  4275                           ; BSR set to: 0
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;	Return value of _memcpy is never used
  4279  001778  0012               	return	
  4280  00177A  D7E2               	goto	l3610
  4281  00177C                     __end_of_memcpy:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           postinc0	equ	0xFEE
  4288                           wreg	equ	0xFE8
  4289                           indf1	equ	0xFE7
  4290                           fsr1h	equ	0xFE2
  4291                           fsr1l	equ	0xFE1
  4292                           indf2	equ	0xFDF
  4293                           postinc2	equ	0xFDE
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _OpenUSART *****************
  4300 ;; Defined at:
  4301 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  config          1    wreg     unsigned char 
  4304 ;;  spbrg           2   33[BANK0 ] unsigned int 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  config          1   38[BANK0 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, status,2
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4316 ;;      Params:         0       2       0       0       0
  4317 ;;      Locals:         0       1       0       0       0
  4318 ;;      Temps:          0       3       0       0       0
  4319 ;;      Totals:         0       6       0       0       0
  4320 ;;Total ram usage:        6 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:   10
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text26
  4331  00132C                     __ptext26:
  4332                           	opt stack 0
  4333  00132C                     _OpenUSART:
  4334                           	opt stack 20
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;incstack = 0
  4338                           ;OpenUSART@config stored from wreg
  4339  00132C  CFE8 F0DC          	movff	wreg,OpenUSART@config
  4340  001330  0E00               	movlw	0
  4341  001332  6EAC               	movwf	4012,c	;volatile
  4342  001334  0E00               	movlw	0
  4343  001336  6EAB               	movwf	4011,c	;volatile
  4344  001338  0100               	movlb	0	; () banked
  4345  00133A  0100               	movlb	0	; () banked
  4346  00133C  B1DC               	btfsc	OpenUSART@config& (0+255),0,b
  4347                           
  4348                           ; BSR set to: 0
  4349  00133E  88AC               	bsf	4012,4,c	;volatile
  4350                           
  4351                           ; BSR set to: 0
  4352                           
  4353                           ; BSR set to: 0
  4354  001340  0100               	movlb	0	; () banked
  4355  001342  0100               	movlb	0	; () banked
  4356  001344  A3DC               	btfss	OpenUSART@config& (0+255),1,b
  4357  001346  D002               	goto	l3436
  4358                           
  4359                           ; BSR set to: 0
  4360  001348  8CAC               	bsf	4012,6,c	;volatile
  4361  00134A  8CAB               	bsf	4011,6,c	;volatile
  4362  00134C                     l3436:
  4363                           
  4364                           ; BSR set to: 0
  4365  00134C  0100               	movlb	0	; () banked
  4366  00134E  0100               	movlb	0	; () banked
  4367  001350  B5DC               	btfsc	OpenUSART@config& (0+255),2,b
  4368                           
  4369                           ; BSR set to: 0
  4370  001352  8EAC               	bsf	4012,7,c	;volatile
  4371                           
  4372                           ; BSR set to: 0
  4373                           
  4374                           ; BSR set to: 0
  4375  001354  0100               	movlb	0	; () banked
  4376  001356  0100               	movlb	0	; () banked
  4377  001358  A7DC               	btfss	OpenUSART@config& (0+255),3,b
  4378  00135A  D002               	goto	l489
  4379                           
  4380                           ; BSR set to: 0
  4381  00135C  88AB               	bsf	4011,4,c	;volatile
  4382  00135E  D001               	goto	l3444
  4383  001360                     l489:
  4384                           
  4385                           ; BSR set to: 0
  4386  001360  8AAB               	bsf	4011,5,c	;volatile
  4387  001362                     l3444:
  4388                           
  4389                           ; BSR set to: 0
  4390  001362  0100               	movlb	0	; () banked
  4391  001364  0100               	movlb	0	; () banked
  4392  001366  B9DC               	btfsc	OpenUSART@config& (0+255),4,b
  4393                           
  4394                           ; BSR set to: 0
  4395  001368  84AC               	bsf	4012,2,c	;volatile
  4396                           
  4397                           ; BSR set to: 0
  4398  00136A  989E               	bcf	3998,4,c	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401  00136C  0100               	movlb	0	; () banked
  4402  00136E  0100               	movlb	0	; () banked
  4403  001370  BBDC               	btfsc	OpenUSART@config& (0+255),5,b
  4404                           
  4405                           ; BSR set to: 0
  4406  001372  86AB               	bsf	4011,3,c	;volatile
  4407                           
  4408                           ; BSR set to: 0
  4409                           
  4410                           ; BSR set to: 0
  4411  001374  0100               	movlb	0	; () banked
  4412  001376  0100               	movlb	0	; () banked
  4413  001378  ADDC               	btfss	OpenUSART@config& (0+255),6,b
  4414  00137A  D002               	goto	l493
  4415                           
  4416                           ; BSR set to: 0
  4417  00137C  8A9D               	bsf	3997,5,c	;volatile
  4418  00137E  D001               	goto	l494
  4419  001380                     l493:
  4420                           
  4421                           ; BSR set to: 0
  4422  001380  9A9D               	bcf	3997,5,c	;volatile
  4423  001382                     l494:
  4424                           
  4425                           ; BSR set to: 0
  4426  001382  9A9E               	bcf	3998,5,c	;volatile
  4427                           
  4428                           ; BSR set to: 0
  4429  001384  0100               	movlb	0	; () banked
  4430  001386  0100               	movlb	0	; () banked
  4431  001388  AFDC               	btfss	OpenUSART@config& (0+255),7,b
  4432  00138A  D002               	goto	l495
  4433                           
  4434                           ; BSR set to: 0
  4435  00138C  889D               	bsf	3997,4,c	;volatile
  4436  00138E  D001               	goto	l496
  4437  001390                     l495:
  4438                           
  4439                           ; BSR set to: 0
  4440  001390  989D               	bcf	3997,4,c	;volatile
  4441  001392                     l496:
  4442                           
  4443                           ; BSR set to: 0
  4444  001392  C0D7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4445                           
  4446                           ; BSR set to: 0
  4447  001396  0100               	movlb	0	; () banked
  4448  001398  C0D8  F0D9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4449  00139C  C0D9  F0DA         	movff	??_OpenUSART,??_OpenUSART+1
  4450  0013A0  0100               	movlb	0	; () banked
  4451  0013A2  6BDB               	clrf	(??_OpenUSART+2)& (0+255),b
  4452  0013A4  0100               	movlb	0	; () banked
  4453  0013A6  51DA               	movf	(??_OpenUSART+1)& (0+255),w,b
  4454  0013A8  6EB0               	movwf	4016,c	;volatile
  4455                           
  4456                           ; BSR set to: 0
  4457  0013AA  8AAC               	bsf	4012,5,c	;volatile
  4458                           
  4459                           ; BSR set to: 0
  4460  0013AC  8EAB               	bsf	4011,7,c	;volatile
  4461                           
  4462                           ; BSR set to: 0
  4463  0013AE  9C94               	bcf	3988,6,c	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466  0013B0  8E94               	bsf	3988,7,c	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469  0013B2  A8AC               	btfss	4012,4,c	;volatile
  4470  0013B4  0012               	return	
  4471                           
  4472                           ; BSR set to: 0
  4473  0013B6  BEAC               	btfsc	4012,7,c	;volatile
  4474  0013B8  0012               	return	
  4475                           
  4476                           ; BSR set to: 0
  4477  0013BA  8C94               	bsf	3988,6,c	;volatile
  4478  0013BC  0012               	return	
  4479  0013BE                     __end_of_OpenUSART:
  4480                           	opt stack 0
  4481                           tblptru	equ	0xFF8
  4482                           prodh	equ	0xFF4
  4483                           prodl	equ	0xFF3
  4484                           intcon	equ	0xFF2
  4485                           postinc0	equ	0xFEE
  4486                           wreg	equ	0xFE8
  4487                           indf1	equ	0xFE7
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function _OpenTimer1 *****************
  4498 ;; Defined at:
  4499 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  config          1    wreg     unsigned char 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  config          1   33[BANK0 ] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;		None               void
  4506 ;; Registers used:
  4507 ;;		wreg, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4513 ;;      Params:         0       0       0       0       0
  4514 ;;      Locals:         0       1       0       0       0
  4515 ;;      Temps:          0       0       0       0       0
  4516 ;;      Totals:         0       1       0       0       0
  4517 ;;Total ram usage:        1 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:   10
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text27
  4528  0019B2                     __ptext27:
  4529                           	opt stack 0
  4530  0019B2                     _OpenTimer1:
  4531                           	opt stack 20
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;incstack = 0
  4535                           ;OpenTimer1@config stored from wreg
  4536  0019B2  CFE8 F0D7          	movff	wreg,OpenTimer1@config
  4537  0019B6  0100               	movlb	0	; () banked
  4538  0019B8  0100               	movlb	0	; () banked
  4539  0019BA  51D7               	movf	OpenTimer1@config& (0+255),w,b
  4540  0019BC  0B7E               	andlw	126
  4541  0019BE  6ECD               	movwf	4045,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544  0019C0  0100               	movlb	0	; () banked
  4545  0019C2  0100               	movlb	0	; () banked
  4546  0019C4  ADD7               	btfss	OpenTimer1@config& (0+255),6,b
  4547  0019C6  D002               	goto	l445
  4548                           
  4549                           ; BSR set to: 0
  4550  0019C8  8ECD               	bsf	4045,7,c	;volatile
  4551  0019CA  D001               	goto	l3418
  4552  0019CC                     l445:
  4553                           
  4554                           ; BSR set to: 0
  4555  0019CC  9ECD               	bcf	4045,7,c	;volatile
  4556  0019CE                     l3418:
  4557                           
  4558                           ; BSR set to: 0
  4559  0019CE  0E00               	movlw	0
  4560  0019D0  6ECF               	movwf	4047,c	;volatile
  4561  0019D2  0E00               	movlw	0
  4562  0019D4  6ECE               	movwf	4046,c	;volatile
  4563                           
  4564                           ; BSR set to: 0
  4565  0019D6  909E               	bcf	3998,0,c	;volatile
  4566                           
  4567                           ; BSR set to: 0
  4568  0019D8  0100               	movlb	0	; () banked
  4569  0019DA  0100               	movlb	0	; () banked
  4570  0019DC  AFD7               	btfss	OpenTimer1@config& (0+255),7,b
  4571  0019DE  D002               	goto	l447
  4572                           
  4573                           ; BSR set to: 0
  4574  0019E0  809D               	bsf	3997,0,c	;volatile
  4575  0019E2  D001               	goto	l448
  4576  0019E4                     l447:
  4577                           
  4578                           ; BSR set to: 0
  4579  0019E4  909D               	bcf	3997,0,c	;volatile
  4580  0019E6                     l448:
  4581                           
  4582                           ; BSR set to: 0
  4583  0019E6  80CD               	bsf	4045,0,c	;volatile
  4584                           
  4585                           ; BSR set to: 0
  4586  0019E8  0012               	return	
  4587  0019EA                     __end_of_OpenTimer1:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           indf1	equ	0xFE7
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           indf2	equ	0xFDF
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           fsr2h	equ	0xFDA
  4602                           fsr2l	equ	0xFD9
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function _OpenTimer0 *****************
  4606 ;; Defined at:
  4607 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  config          1    wreg     unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  config          1   33[BANK0 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;		None               void
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4621 ;;      Params:         0       0       0       0       0
  4622 ;;      Locals:         0       1       0       0       0
  4623 ;;      Temps:          0       0       0       0       0
  4624 ;;      Totals:         0       1       0       0       0
  4625 ;;Total ram usage:        1 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:   10
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_main
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text28
  4636  001B1C                     __ptext28:
  4637                           	opt stack 0
  4638  001B1C                     _OpenTimer0:
  4639                           	opt stack 20
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;incstack = 0
  4643                           ;OpenTimer0@config stored from wreg
  4644  001B1C  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  4645  001B20  0100               	movlb	0	; () banked
  4646  001B22  0100               	movlb	0	; () banked
  4647  001B24  51D7               	movf	OpenTimer0@config& (0+255),w,b
  4648  001B26  0B7F               	andlw	127
  4649  001B28  6ED5               	movwf	4053,c	;volatile
  4650                           
  4651                           ; BSR set to: 0
  4652  001B2A  0E00               	movlw	0
  4653  001B2C  6ED7               	movwf	4055,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656  001B2E  0E00               	movlw	0
  4657  001B30  6ED6               	movwf	4054,c	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660  001B32  94F2               	bcf	intcon,2,c	;volatile
  4661                           
  4662                           ; BSR set to: 0
  4663  001B34  0100               	movlb	0	; () banked
  4664  001B36  0100               	movlb	0	; () banked
  4665  001B38  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  4666  001B3A  D002               	goto	l421
  4667                           
  4668                           ; BSR set to: 0
  4669  001B3C  8AF2               	bsf	intcon,5,c	;volatile
  4670  001B3E  D001               	goto	l422
  4671  001B40                     l421:
  4672                           
  4673                           ; BSR set to: 0
  4674  001B40  9AF2               	bcf	intcon,5,c	;volatile
  4675  001B42                     l422:
  4676                           
  4677                           ; BSR set to: 0
  4678  001B42  8ED5               	bsf	4053,7,c	;volatile
  4679                           
  4680                           ; BSR set to: 0
  4681  001B44  0012               	return	
  4682  001B46                     __end_of_OpenTimer0:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           postinc0	equ	0xFEE
  4689                           wreg	equ	0xFE8
  4690                           indf1	equ	0xFE7
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           postdec2	equ	0xFDD
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _InterruptHandlerLow *****************
  4701 ;; Defined at:
  4702 ;;		line 122 in file "src/interrupts.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0
  4718 ;;      Temps:         17       0       0       0       0
  4719 ;;      Totals:        17       0       0       0       0
  4720 ;;Total ram usage:       17 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    9
  4723 ;; This function calls:
  4724 ;;		_timer1_int_handler
  4725 ;;		_uart_recv_int_handler
  4726 ;;		_uart_trans_int_handler
  4727 ;; This function is called by:
  4728 ;;		Interrupt level 1
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	intcodelo
  4733  000018                     __pintcodelo:
  4734                           	opt stack 0
  4735  000018                     _InterruptHandlerLow:
  4736                           	opt stack 17
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;incstack = 0
  4740  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  4741  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  4742  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  4743  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  4744  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  4745  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  4746  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  4747  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  4748  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  4749  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  4750  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  4751  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  4752  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  4753  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  4754  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  4755  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  4756  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  4757                           
  4758                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4759  00005C  A09E               	btfss	3998,0,c	;volatile
  4760  00005E  D003               	goto	i1l3918
  4761                           
  4762                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4763  000060  909E               	bcf	3998,0,c	;volatile
  4764                           
  4765                           ;interrupts.c: 126: timer1_int_handler();
  4766  000062  EC5F  F00D         	call	_timer1_int_handler	;wreg free
  4767  000066                     i1l3918:
  4768                           
  4769                           ;interrupts.c: 127: }
  4770                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4771  000066  AA9E               	btfss	3998,5,c	;volatile
  4772  000068  D003               	goto	i1l3924
  4773                           
  4774                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4775  00006A  9A9E               	bcf	3998,5,c	;volatile
  4776                           
  4777                           ;interrupts.c: 132: uart_recv_int_handler();
  4778  00006C  EC48  F009         	call	_uart_recv_int_handler	;wreg free
  4779  000070                     i1l3924:
  4780                           
  4781                           ;interrupts.c: 133: }
  4782                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4783  000070  B89E               	btfsc	3998,4,c	;volatile
  4784  000072  A89D               	btfss	3997,4,c	;volatile
  4785  000074  D002               	goto	i1l52
  4786                           
  4787                           ;interrupts.c: 137: uart_trans_int_handler();
  4788  000076  ECBE  F00B         	call	_uart_trans_int_handler	;wreg free
  4789  00007A                     i1l52:
  4790  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4791  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4792  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4793  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4794  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4795  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4796  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4797  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4798  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4799  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4800  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4801  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4802  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4803  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4804  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4805  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4806  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  4807  0000BE  0010               	retfie	
  4808  0000C0                     __end_of_InterruptHandlerLow:
  4809                           	opt stack 0
  4810                           pclatu	equ	0xFFB
  4811                           pclath	equ	0xFFA
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           prodh	equ	0xFF4
  4817                           prodl	equ	0xFF3
  4818                           intcon	equ	0xFF2
  4819                           postinc0	equ	0xFEE
  4820                           fsr0h	equ	0xFEA
  4821                           fsr0l	equ	0xFE9
  4822                           wreg	equ	0xFE8
  4823                           indf1	equ	0xFE7
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           bsr	equ	0xFE0
  4827                           indf2	equ	0xFDF
  4828                           postinc2	equ	0xFDE
  4829                           postdec2	equ	0xFDD
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _uart_trans_int_handler *****************
  4835 ;; Defined at:
  4836 ;;		line 11 in file "src/my_uart.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  data            2   30[COMRAM] PTR unsigned char 
  4841 ;;		 -> NULL(0), 
  4842 ;;  length          1   34[COMRAM] char 
  4843 ;;  msgtype         1   33[COMRAM] unsigned char 
  4844 ;;  curIndex        1   32[COMRAM] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;		None               void
  4847 ;; Registers used:
  4848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4854 ;;      Params:         0       0       0       0       0
  4855 ;;      Locals:         5       0       0       0       0
  4856 ;;      Temps:          1       0       0       0       0
  4857 ;;      Totals:         6       0       0       0       0
  4858 ;;Total ram usage:        6 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    8
  4861 ;; This function calls:
  4862 ;;		_FromMainLow_recvmsg
  4863 ;; This function is called by:
  4864 ;;		_InterruptHandlerLow
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text30
  4869  00177C                     __ptext30:
  4870                           	opt stack 0
  4871  00177C                     _uart_trans_int_handler:
  4872                           	opt stack 17
  4873                           
  4874                           ;my_uart.c: 13: unsigned char* data = (0);
  4875                           
  4876                           ;incstack = 0
  4877  00177C  0E00               	movlw	0
  4878  00177E  6E20               	movwf	uart_trans_int_handler@data+1,c
  4879  001780  0E00               	movlw	0
  4880  001782  6E1F               	movwf	uart_trans_int_handler@data,c
  4881                           
  4882                           ;my_uart.c: 14: unsigned char msgtype;
  4883                           ;my_uart.c: 15: unsigned char curIndex;
  4884                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  4885  001784  0E00               	movlw	high uart_trans_int_handler@msgtype
  4886  001786  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4887  001788  0E22               	movlw	low uart_trans_int_handler@msgtype
  4888  00178A  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4889  00178C  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  4890  001790  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  4891  001794  0E0A               	movlw	10
  4892  001796  ECCC  F00D         	call	_FromMainLow_recvmsg
  4893  00179A  6E23               	movwf	uart_trans_int_handler@length,c
  4894                           
  4895                           ;my_uart.c: 17: if (length < 0) {
  4896  00179C  BE23               	btfsc	uart_trans_int_handler@length,7,c
  4897  00179E  D019               	goto	i1l340
  4898                           
  4899                           ;my_uart.c: 26: curIndex = 0;
  4900                           
  4901                           ;my_uart.c: 24: }
  4902                           ;my_uart.c: 25: } else {
  4903                           
  4904                           ;my_uart.c: 22: else{
  4905                           
  4906                           ;my_uart.c: 21: }
  4907  0017A0  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  4908  0017A2  0E00               	movlw	0
  4909  0017A4  6E21               	movwf	uart_trans_int_handler@curIndex,c
  4910  0017A6  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  4911                           
  4912                           ;my_uart.c: 27: while(curIndex < length){
  4913  0017A8  D00D               	goto	i1l3910
  4914  0017AA                     i1l343:
  4915  0017AA  A2AC               	btfss	4012,1,c	;volatile
  4916  0017AC  D7FE               	goto	i1l343
  4917                           
  4918                           ;my_uart.c: 33: TXREG = data[curIndex];
  4919  0017AE  5021               	movf	uart_trans_int_handler@curIndex,w,c
  4920  0017B0  0D01               	mullw	1
  4921  0017B2  50F3               	movf	prodl,w,c
  4922  0017B4  241F               	addwf	uart_trans_int_handler@data,w,c
  4923  0017B6  6ED9               	movwf	fsr2l,c
  4924  0017B8  50F4               	movf	prodh,w,c
  4925  0017BA  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  4926  0017BC  6EDA               	movwf	fsr2h,c
  4927  0017BE  50DF               	movf	indf2,w,c
  4928  0017C0  6EAD               	movwf	4013,c	;volatile
  4929                           
  4930                           ;my_uart.c: 35: curIndex++;
  4931  0017C2  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  4932  0017C4                     i1l3910:
  4933  0017C4  5021               	movf	uart_trans_int_handler@curIndex,w,c
  4934  0017C6  BE23               	btfsc	uart_trans_int_handler@length,7,c
  4935  0017C8  D004               	goto	i1l340
  4936  0017CA  0AFF               	xorlw	255
  4937  0017CC  2423               	addwf	uart_trans_int_handler@length,w,c
  4938  0017CE  B0D8               	btfsc	status,0,c
  4939  0017D0  D7EC               	goto	i1l343
  4940  0017D2                     i1l340:
  4941                           
  4942                           ;my_uart.c: 36: }
  4943                           ;my_uart.c: 37: }
  4944                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  4945  0017D2  989D               	bcf	3997,4,c	;volatile
  4946  0017D4  0012               	return	
  4947  0017D6                     __end_of_uart_trans_int_handler:
  4948                           	opt stack 0
  4949                           pclatu	equ	0xFFB
  4950                           pclath	equ	0xFFA
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           postinc0	equ	0xFEE
  4959                           fsr0h	equ	0xFEA
  4960                           fsr0l	equ	0xFE9
  4961                           wreg	equ	0xFE8
  4962                           indf1	equ	0xFE7
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           bsr	equ	0xFE0
  4966                           indf2	equ	0xFDF
  4967                           postinc2	equ	0xFDE
  4968                           postdec2	equ	0xFDD
  4969                           fsr2h	equ	0xFDA
  4970                           fsr2l	equ	0xFD9
  4971                           status	equ	0xFD8
  4972                           
  4973 ;; *************** function _FromMainLow_recvmsg *****************
  4974 ;; Defined at:
  4975 ;;		line 159 in file "src/messages.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  maxlength       1    wreg     unsigned char 
  4978 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4979 ;;		 -> uart_trans_int_handler@msgtype(1), 
  4980 ;;  data            2   26[COMRAM] PTR void 
  4981 ;;		 -> NULL(0), 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  maxlength       1   28[COMRAM] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      char 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4993 ;;      Params:         4       0       0       0       0
  4994 ;;      Locals:         1       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0
  4996 ;;      Totals:         5       0       0       0       0
  4997 ;;Total ram usage:        5 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    7
  5000 ;; This function calls:
  5001 ;;		i1_recv_msg
  5002 ;; This function is called by:
  5003 ;;		_uart_trans_int_handler
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text31
  5008  001B98                     __ptext31:
  5009                           	opt stack 0
  5010  001B98                     _FromMainLow_recvmsg:
  5011                           	opt stack 17
  5012                           
  5013                           ;incstack = 0
  5014                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5015  001B98  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5016                           
  5017                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5018  001B9C  0101               	movlb	1	; () banked
  5019  001B9E  0E01               	movlw	high _FromMainLow_MQ
  5020  001BA0  6E0C               	movwf	i1recv_msg@qptr+1,c
  5021  001BA2  0101               	movlb	1	; () banked
  5022  001BA4  0E36               	movlw	low _FromMainLow_MQ
  5023  001BA6  6E0B               	movwf	i1recv_msg@qptr,c
  5024  001BA8  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5025  001BAC  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5026  001BB0  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5027  001BB4  6A11               	clrf	i1recv_msg@data+1,c
  5028  001BB6  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5029  001BBA  ECBD  F007         	call	i1_recv_msg	;wreg free
  5030  001BBE  0012               	return	
  5031  001BC0                     __end_of_FromMainLow_recvmsg:
  5032                           	opt stack 0
  5033                           pclatu	equ	0xFFB
  5034                           pclath	equ	0xFFA
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           fsr0h	equ	0xFEA
  5044                           fsr0l	equ	0xFE9
  5045                           wreg	equ	0xFE8
  5046                           indf1	equ	0xFE7
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           bsr	equ	0xFE0
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function i1_recv_msg *****************
  5058 ;; Defined at:
  5059 ;;		line 63 in file "src/messages.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5062 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5063 ;;  maxlength       1   12[COMRAM] unsigned char 
  5064 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5065 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5066 ;;  data            2   15[COMRAM] PTR void 
  5067 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5070 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5071 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5072 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5073 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      char 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5083 ;;      Params:         7       0       0       0       0
  5084 ;;      Locals:         5       0       0       0       0
  5085 ;;      Temps:          2       0       0       0       0
  5086 ;;      Totals:        14       0       0       0       0
  5087 ;;Total ram usage:       14 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    6
  5090 ;; This function calls:
  5091 ;;		i1_memcpy
  5092 ;; This function is called by:
  5093 ;;		_FromMainLow_recvmsg
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text32
  5098  000F7A                     __ptext32:
  5099                           	opt stack 0
  5100  000F7A                     i1_recv_msg:
  5101                           	opt stack 17
  5102                           
  5103                           ;messages.c: 64: unsigned char slot;
  5104                           ;messages.c: 68: msg *qmsg;
  5105                           ;messages.c: 69: size_t tlength;
  5106                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5107                           
  5108                           ;incstack = 0
  5109  000F7A  EE20 F035          	lfsr	2,53
  5110  000F7E  500B               	movf	i1recv_msg@qptr,w,c
  5111  000F80  26D9               	addwf	fsr2l,f,c
  5112  000F82  500C               	movf	i1recv_msg@qptr+1,w,c
  5113  000F84  22DA               	addwfc	fsr2h,f,c
  5114  000F86  50DF               	movf	indf2,w,c
  5115  000F88  6E14               	movwf	i1recv_msg@slot,c
  5116                           
  5117                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5118  000F8A  5014               	movf	i1recv_msg@slot,w,c
  5119  000F8C  0D0D               	mullw	13
  5120  000F8E  50F3               	movf	prodl,w,c
  5121  000F90  240B               	addwf	i1recv_msg@qptr,w,c
  5122  000F92  6E17               	movwf	i1recv_msg@qmsg,c
  5123  000F94  50F4               	movf	prodh,w,c
  5124  000F96  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5125  000F98  6E18               	movwf	i1recv_msg@qmsg+1,c
  5126                           
  5127                           ;messages.c: 74: if (qmsg->full == 1) {
  5128  000F9A  0E01               	movlw	1
  5129  000F9C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5130  000FA0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5131  000FA4  62DF               	cpfseq	indf2,c
  5132  000FA6  D050               	goto	i1l3858
  5133                           
  5134                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5135  000FA8  EE20 F001          	lfsr	2,1
  5136  000FAC  5017               	movf	i1recv_msg@qmsg,w,c
  5137  000FAE  26D9               	addwf	fsr2l,f,c
  5138  000FB0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5139  000FB2  22DA               	addwfc	fsr2h,f,c
  5140  000FB4  50DF               	movf	indf2,w,c
  5141  000FB6  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5142  000FB8  B0D8               	btfsc	status,0,c
  5143  000FBA  D002               	goto	i1l3842
  5144                           
  5145                           ;messages.c: 77: return (-3);
  5146  000FBC  0EFD               	movlw	253
  5147  000FBE  0012               	return	
  5148  000FC0                     i1l3842:
  5149                           
  5150                           ;messages.c: 78: }
  5151                           ;messages.c: 80: tlength = qmsg->length;
  5152  000FC0  EE20 F001          	lfsr	2,1
  5153  000FC4  5017               	movf	i1recv_msg@qmsg,w,c
  5154  000FC6  26D9               	addwf	fsr2l,f,c
  5155  000FC8  5018               	movf	i1recv_msg@qmsg+1,w,c
  5156  000FCA  22DA               	addwfc	fsr2h,f,c
  5157  000FCC  50DF               	movf	indf2,w,c
  5158  000FCE  6E12               	movwf	??i1_recv_msg& (0+255),c
  5159  000FD0  5012               	movf	??i1_recv_msg,w,c
  5160  000FD2  6E15               	movwf	i1recv_msg@tlength,c
  5161  000FD4  6A16               	clrf	i1recv_msg@tlength+1,c
  5162                           
  5163                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5164  000FD6  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5165  000FDA  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5166  000FDE  0E03               	movlw	3
  5167  000FE0  2417               	addwf	i1recv_msg@qmsg,w,c
  5168  000FE2  6E12               	movwf	??i1_recv_msg& (0+255),c
  5169  000FE4  0E00               	movlw	0
  5170  000FE6  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5171  000FE8  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5172  000FEA  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5173  000FEE  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5174  000FF2  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5175  000FF6  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5176  000FFA  EC99  F00C         	call	i1_memcpy	;wreg free
  5177                           
  5178                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5179  000FFE  EE20 F035          	lfsr	2,53
  5180  001002  500B               	movf	i1recv_msg@qptr,w,c
  5181  001004  26D9               	addwf	fsr2l,f,c
  5182  001006  500C               	movf	i1recv_msg@qptr+1,w,c
  5183  001008  22DA               	addwfc	fsr2h,f,c
  5184  00100A  EE10 F035          	lfsr	1,53
  5185  00100E  500B               	movf	i1recv_msg@qptr,w,c
  5186  001010  26E1               	addwf	fsr1l,f,c
  5187  001012  500C               	movf	i1recv_msg@qptr+1,w,c
  5188  001014  22E2               	addwfc	fsr1h,f,c
  5189  001016  50E7               	movf	indf1,w,c
  5190  001018  6E12               	movwf	??i1_recv_msg& (0+255),c
  5191  00101A  2812               	incf	??i1_recv_msg,w,c
  5192  00101C  0B03               	andlw	3
  5193  00101E  6EDF               	movwf	indf2,c
  5194                           
  5195                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5196  001020  EE20 F002          	lfsr	2,2
  5197  001024  5017               	movf	i1recv_msg@qmsg,w,c
  5198  001026  26D9               	addwf	fsr2l,f,c
  5199  001028  5018               	movf	i1recv_msg@qmsg+1,w,c
  5200  00102A  22DA               	addwfc	fsr2h,f,c
  5201  00102C  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5202  001030  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5203  001034  CFDF FFE7          	movff	indf2,indf1
  5204                           
  5205                           ;messages.c: 91: qmsg->full = 0;
  5206  001038  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5207  00103C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5208  001040  0E00               	movlw	0
  5209  001042  6EDF               	movwf	indf2,c
  5210                           
  5211                           ;messages.c: 92: return (tlength);
  5212  001044  5015               	movf	i1recv_msg@tlength,w,c
  5213  001046  0012               	return	
  5214  001048                     i1l3858:
  5215                           
  5216                           ;messages.c: 94: return (-4);
  5217  001048  0EFC               	movlw	252
  5218  00104A  0012               	return	
  5219  00104C                     __end_ofi1_recv_msg:
  5220                           	opt stack 0
  5221                           pclatu	equ	0xFFB
  5222                           pclath	equ	0xFFA
  5223                           tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           prodh	equ	0xFF4
  5228                           prodl	equ	0xFF3
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           fsr0h	equ	0xFEA
  5232                           fsr0l	equ	0xFE9
  5233                           wreg	equ	0xFE8
  5234                           indf1	equ	0xFE7
  5235                           fsr1h	equ	0xFE2
  5236                           fsr1l	equ	0xFE1
  5237                           bsr	equ	0xFE0
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           postdec2	equ	0xFDD
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _uart_recv_int_handler *****************
  5246 ;; Defined at:
  5247 ;;		line 42 in file "src/my_uart.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;		None               void
  5254 ;; Registers used:
  5255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5261 ;;      Params:         0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0
  5263 ;;      Temps:          1       0       0       0       0
  5264 ;;      Totals:         1       0       0       0       0
  5265 ;;Total ram usage:        1 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    8
  5268 ;; This function calls:
  5269 ;;		_ReadUSART
  5270 ;;		_ToMainLow_sendmsg
  5271 ;; This function is called by:
  5272 ;;		_InterruptHandlerLow
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text33
  5277  001290                     __ptext33:
  5278                           	opt stack 0
  5279  001290                     _uart_recv_int_handler:
  5280                           	opt stack 17
  5281                           
  5282                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5283                           
  5284                           ;incstack = 0
  5285  001290  AA9E               	btfss	3998,5,c	;volatile
  5286  001292  D03C               	goto	i1l3888
  5287                           
  5288                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5289  001294  EE20 F004          	lfsr	2,4
  5290  001298  5048               	movf	_uc_ptr,w,c
  5291  00129A  26D9               	addwf	fsr2l,f,c
  5292  00129C  5049               	movf	_uc_ptr+1,w,c
  5293  00129E  22DA               	addwfc	fsr2h,f,c
  5294  0012A0  50DF               	movf	indf2,w,c
  5295  0012A2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5296  0012A4  501B               	movf	??_uart_recv_int_handler,w,c
  5297  0012A6  0D01               	mullw	1
  5298  0012A8  50F3               	movf	prodl,w,c
  5299  0012AA  2448               	addwf	_uc_ptr,w,c
  5300  0012AC  6ED9               	movwf	fsr2l,c
  5301  0012AE  50F4               	movf	prodh,w,c
  5302  0012B0  2049               	addwfc	_uc_ptr+1,w,c
  5303  0012B2  6EDA               	movwf	fsr2h,c
  5304  0012B4  EC27  F00E         	call	_ReadUSART	;wreg free
  5305  0012B8  6EDF               	movwf	indf2,c
  5306                           
  5307                           ;my_uart.c: 56: uc_ptr->buflen++;
  5308  0012BA  EE20 F004          	lfsr	2,4
  5309  0012BE  5048               	movf	_uc_ptr,w,c
  5310  0012C0  26D9               	addwf	fsr2l,f,c
  5311  0012C2  5049               	movf	_uc_ptr+1,w,c
  5312  0012C4  22DA               	addwfc	fsr2h,f,c
  5313  0012C6  2ADF               	incf	indf2,f,c
  5314                           
  5315                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5316  0012C8  EE20 F004          	lfsr	2,4
  5317  0012CC  5048               	movf	_uc_ptr,w,c
  5318  0012CE  26D9               	addwf	fsr2l,f,c
  5319  0012D0  5049               	movf	_uc_ptr+1,w,c
  5320  0012D2  22DA               	addwfc	fsr2h,f,c
  5321  0012D4  0E04               	movlw	4
  5322  0012D6  62DF               	cpfseq	indf2,c
  5323  0012D8  D019               	goto	i1l3888
  5324                           
  5325                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5326  0012DA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5327  0012DC  0E20               	movlw	32
  5328  0012DE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5329  0012E0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5330  0012E2  C049  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5331  0012E6  C048  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5332  0012EA  EE20 F004          	lfsr	2,4
  5333  0012EE  5048               	movf	_uc_ptr,w,c
  5334  0012F0  26D9               	addwf	fsr2l,f,c
  5335  0012F2  5049               	movf	_uc_ptr+1,w,c
  5336  0012F4  22DA               	addwfc	fsr2h,f,c
  5337  0012F6  50DF               	movf	indf2,w,c
  5338  0012F8  ECF3  F00D         	call	_ToMainLow_sendmsg
  5339                           
  5340                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5341  0012FC  EE20 F004          	lfsr	2,4
  5342  001300  5048               	movf	_uc_ptr,w,c
  5343  001302  26D9               	addwf	fsr2l,f,c
  5344  001304  5049               	movf	_uc_ptr+1,w,c
  5345  001306  22DA               	addwfc	fsr2h,f,c
  5346  001308  0E00               	movlw	0
  5347  00130A  6EDF               	movwf	indf2,c
  5348  00130C                     i1l3888:
  5349                           
  5350                           ;my_uart.c: 61: }
  5351                           ;my_uart.c: 62: }
  5352                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5353  00130C  A64B               	btfss	_USART_Status,3,c
  5354  00130E  0012               	return	
  5355                           
  5356                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5357  001310  98AB               	bcf	4011,4,c	;volatile
  5358                           
  5359                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5360  001312  88AB               	bsf	4011,4,c	;volatile
  5361                           
  5362                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5363  001314  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5364  001316  0E1E               	movlw	30
  5365  001318  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5366  00131A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5367  00131C  0E00               	movlw	0
  5368  00131E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5369  001320  0E00               	movlw	0
  5370  001322  6E18               	movwf	ToMainLow_sendmsg@data,c
  5371  001324  0E00               	movlw	0
  5372  001326  ECF3  F00D         	call	_ToMainLow_sendmsg
  5373  00132A  0012               	return	
  5374  00132C                     __end_of_uart_recv_int_handler:
  5375                           	opt stack 0
  5376                           pclatu	equ	0xFFB
  5377                           pclath	equ	0xFFA
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           intcon	equ	0xFF2
  5385                           postinc0	equ	0xFEE
  5386                           fsr0h	equ	0xFEA
  5387                           fsr0l	equ	0xFE9
  5388                           wreg	equ	0xFE8
  5389                           indf1	equ	0xFE7
  5390                           fsr1h	equ	0xFE2
  5391                           fsr1l	equ	0xFE1
  5392                           bsr	equ	0xFE0
  5393                           indf2	equ	0xFDF
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8
  5399                           
  5400 ;; *************** function _ReadUSART *****************
  5401 ;; Defined at:
  5402 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  data            1    0[COMRAM] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      unsigned char 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5416 ;;      Params:         0       0       0       0       0
  5417 ;;      Locals:         1       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0
  5419 ;;      Totals:         1       0       0       0       0
  5420 ;;Total ram usage:        1 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    5
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_uart_recv_int_handler
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text34
  5431  001C4E                     __ptext34:
  5432                           	opt stack 0
  5433  001C4E                     _ReadUSART:
  5434                           	opt stack 19
  5435                           
  5436                           ;incstack = 0
  5437  001C4E  0EF2               	movlw	242
  5438  001C50  164B               	andwf	_USART_Status,f,c
  5439  001C52  ACAB               	btfss	4011,6,c	;volatile
  5440  001C54  D003               	goto	i1l507
  5441  001C56  904B               	bcf	_USART_Status,0,c
  5442  001C58  B0AB               	btfsc	4011,0,c	;volatile
  5443  001C5A  804B               	bsf	_USART_Status,0,c
  5444  001C5C                     i1l507:
  5445  001C5C  B4AB               	btfsc	4011,2,c	;volatile
  5446  001C5E  844B               	bsf	_USART_Status,2,c
  5447  001C60  B2AB               	btfsc	4011,1,c	;volatile
  5448  001C62  864B               	bsf	_USART_Status,3,c
  5449  001C64  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5450  001C68  5001               	movf	ReadUSART@data,w,c
  5451  001C6A  0012               	return	
  5452  001C6C                     __end_of_ReadUSART:
  5453                           	opt stack 0
  5454                           pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           fsr0h	equ	0xFEA
  5465                           fsr0l	equ	0xFE9
  5466                           wreg	equ	0xFE8
  5467                           indf1	equ	0xFE7
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           bsr	equ	0xFE0
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           postdec2	equ	0xFDD
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _timer1_int_handler *****************
  5479 ;; Defined at:
  5480 ;;		line 36 in file "src/user_interrupts.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  result          2   27[COMRAM] unsigned int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;		None               void
  5487 ;; Registers used:
  5488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5494 ;;      Params:         0       0       0       0       0
  5495 ;;      Locals:         2       0       0       0       0
  5496 ;;      Temps:          1       0       0       0       0
  5497 ;;      Totals:         3       0       0       0       0
  5498 ;;Total ram usage:        3 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    8
  5501 ;; This function calls:
  5502 ;;		_ReadTimer1
  5503 ;;		_ToMainLow_sendmsg
  5504 ;;		_WriteTimer1
  5505 ;; This function is called by:
  5506 ;;		_InterruptHandlerLow
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text35
  5511  001ABE                     __ptext35:
  5512                           	opt stack 0
  5513  001ABE                     _timer1_int_handler:
  5514                           	opt stack 17
  5515                           
  5516                           ;user_interrupts.c: 37: unsigned int result;
  5517                           ;user_interrupts.c: 44: result = ReadTimer1();
  5518                           
  5519                           ;incstack = 0
  5520  001ABE  EC65  F00E         	call	_ReadTimer1	;wreg free
  5521  001AC2  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5522  001AC6  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5523                           
  5524                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5525  001ACA  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5526  001ACC  0E0B               	movlw	11
  5527  001ACE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5528  001AD0  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5529  001AD2  0E00               	movlw	0
  5530  001AD4  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5531  001AD6  0E00               	movlw	0
  5532  001AD8  6E18               	movwf	ToMainLow_sendmsg@data,c
  5533  001ADA  0E00               	movlw	0
  5534  001ADC  ECF3  F00D         	call	_ToMainLow_sendmsg
  5535                           
  5536                           ;user_interrupts.c: 48: WriteTimer1(0);
  5537  001AE0  0E00               	movlw	0
  5538  001AE2  6E02               	movwf	WriteTimer1@timer1+1,c
  5539  001AE4  0E00               	movlw	0
  5540  001AE6  6E01               	movwf	WriteTimer1@timer1,c
  5541  001AE8  EC5C  F00E         	call	_WriteTimer1	;wreg free
  5542  001AEC  0012               	return	
  5543  001AEE                     __end_of_timer1_int_handler:
  5544                           	opt stack 0
  5545                           pclatu	equ	0xFFB
  5546                           pclath	equ	0xFFA
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           postinc0	equ	0xFEE
  5555                           fsr0h	equ	0xFEA
  5556                           fsr0l	equ	0xFE9
  5557                           wreg	equ	0xFE8
  5558                           indf1	equ	0xFE7
  5559                           fsr1h	equ	0xFE2
  5560                           fsr1l	equ	0xFE1
  5561                           bsr	equ	0xFE0
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           postdec2	equ	0xFDD
  5565                           fsr2h	equ	0xFDA
  5566                           fsr2l	equ	0xFD9
  5567                           status	equ	0xFD8
  5568                           
  5569 ;; *************** function _WriteTimer1 *****************
  5570 ;; Defined at:
  5571 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  timer1          2    0[COMRAM] unsigned int 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  timer           2    2[COMRAM] struct Timers
  5576 ;; Return value:  Size  Location     Type
  5577 ;;		None               void
  5578 ;; Registers used:
  5579 ;;		None
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5585 ;;      Params:         2       0       0       0       0
  5586 ;;      Locals:         2       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0
  5588 ;;      Totals:         4       0       0       0       0
  5589 ;;Total ram usage:        4 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    5
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_timer1_int_handler
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text36
  5600  001CB8                     __ptext36:
  5601                           	opt stack 0
  5602  001CB8                     _WriteTimer1:
  5603                           	opt stack 19
  5604                           
  5605                           ;incstack = 0
  5606  001CB8  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5607  001CBC  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5608  001CC0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5609  001CC4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5610  001CC8  0012               	return	
  5611  001CCA                     __end_of_WriteTimer1:
  5612                           	opt stack 0
  5613                           pclatu	equ	0xFFB
  5614                           pclath	equ	0xFFA
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           postinc0	equ	0xFEE
  5623                           fsr0h	equ	0xFEA
  5624                           fsr0l	equ	0xFE9
  5625                           wreg	equ	0xFE8
  5626                           indf1	equ	0xFE7
  5627                           fsr1h	equ	0xFE2
  5628                           fsr1l	equ	0xFE1
  5629                           bsr	equ	0xFE0
  5630                           indf2	equ	0xFDF
  5631                           postinc2	equ	0xFDE
  5632                           postdec2	equ	0xFDD
  5633                           fsr2h	equ	0xFDA
  5634                           fsr2l	equ	0xFD9
  5635                           status	equ	0xFD8
  5636                           
  5637 ;; *************** function _ToMainLow_sendmsg *****************
  5638 ;; Defined at:
  5639 ;;		line 103 in file "src/messages.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  length          1    wreg     unsigned char 
  5642 ;;  msgtype         1   22[COMRAM] unsigned char 
  5643 ;;  data            2   23[COMRAM] PTR void 
  5644 ;;		 -> NULL(0), main@uc(5), 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  length          1   25[COMRAM] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      char 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5656 ;;      Params:         3       0       0       0       0
  5657 ;;      Locals:         1       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0
  5659 ;;      Totals:         4       0       0       0       0
  5660 ;;Total ram usage:        4 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    7
  5663 ;; This function calls:
  5664 ;;		i1_send_msg
  5665 ;; This function is called by:
  5666 ;;		_uart_recv_int_handler
  5667 ;;		_timer1_int_handler
  5668 ;;		_sendUART
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text37
  5673  001BE6                     __ptext37:
  5674                           	opt stack 0
  5675  001BE6                     _ToMainLow_sendmsg:
  5676                           	opt stack 17
  5677                           
  5678                           ;incstack = 0
  5679                           ;ToMainLow_sendmsg@length stored from wreg
  5680  001BE6  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5681                           
  5682                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5683  001BEA  0100               	movlb	0	; () banked
  5684  001BEC  0E00               	movlw	high _ToMainLow_MQ
  5685  001BEE  6E0C               	movwf	i1send_msg@qptr+1,c
  5686  001BF0  0100               	movlb	0	; () banked
  5687  001BF2  0E80               	movlw	low _ToMainLow_MQ
  5688  001BF4  6E0B               	movwf	i1send_msg@qptr,c
  5689  001BF6  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5690  001BFA  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5691  001BFE  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5692  001C02  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5693  001C06  ECF3  F008         	call	i1_send_msg	;wreg free
  5694  001C0A  0012               	return	
  5695  001C0C                     __end_of_ToMainLow_sendmsg:
  5696                           	opt stack 0
  5697                           pclatu	equ	0xFFB
  5698                           pclath	equ	0xFFA
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           intcon	equ	0xFF2
  5706                           postinc0	equ	0xFEE
  5707                           fsr0h	equ	0xFEA
  5708                           fsr0l	equ	0xFE9
  5709                           wreg	equ	0xFE8
  5710                           indf1	equ	0xFE7
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           bsr	equ	0xFE0
  5714                           indf2	equ	0xFDF
  5715                           postinc2	equ	0xFDE
  5716                           postdec2	equ	0xFDD
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function i1_send_msg *****************
  5722 ;; Defined at:
  5723 ;;		line 24 in file "src/messages.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5726 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5727 ;;  length          1   12[COMRAM] unsigned char 
  5728 ;;  msgtype         1   13[COMRAM] unsigned char 
  5729 ;;  data            2   14[COMRAM] PTR void 
  5730 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  5731 ;;		 -> main@ic(28), main@uc(5), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5734 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5735 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5736 ;;  send_msg        2   17[COMRAM] unsigned int 
  5737 ;;  send_msg        1   19[COMRAM] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      char 
  5740 ;; Registers used:
  5741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5747 ;;      Params:         6       0       0       0       0
  5748 ;;      Locals:         5       0       0       0       0
  5749 ;;      Temps:          1       0       0       0       0
  5750 ;;      Totals:        12       0       0       0       0
  5751 ;;Total ram usage:       12 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    6
  5754 ;; This function calls:
  5755 ;;		i1_memcpy
  5756 ;; This function is called by:
  5757 ;;		_ToMainLow_sendmsg
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text38
  5762  0011E6                     __ptext38:
  5763                           	opt stack 0
  5764  0011E6                     i1_send_msg:
  5765                           	opt stack 17
  5766                           
  5767                           ;messages.c: 25: unsigned char slot;
  5768                           ;messages.c: 27: msg *qmsg;
  5769                           ;messages.c: 28: size_t tlength = length;
  5770                           
  5771                           ;incstack = 0
  5772  0011E6  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5773  0011EA  6A13               	clrf	i1send_msg@tlength+1,c
  5774                           
  5775                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5776  0011EC  EE20 F034          	lfsr	2,52
  5777  0011F0  500B               	movf	i1send_msg@qptr,w,c
  5778  0011F2  26D9               	addwf	fsr2l,f,c
  5779  0011F4  500C               	movf	i1send_msg@qptr+1,w,c
  5780  0011F6  22DA               	addwfc	fsr2h,f,c
  5781  0011F8  50DF               	movf	indf2,w,c
  5782  0011FA  6E14               	movwf	i1send_msg@slot,c
  5783                           
  5784                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5785  0011FC  5014               	movf	i1send_msg@slot,w,c
  5786  0011FE  0D0D               	mullw	13
  5787  001200  50F3               	movf	prodl,w,c
  5788  001202  240B               	addwf	i1send_msg@qptr,w,c
  5789  001204  6E15               	movwf	i1send_msg@qmsg,c
  5790  001206  50F4               	movf	prodh,w,c
  5791  001208  200C               	addwfc	i1send_msg@qptr+1,w,c
  5792  00120A  6E16               	movwf	i1send_msg@qmsg+1,c
  5793                           
  5794                           ;messages.c: 41: if (qmsg->full != 0) {
  5795  00120C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5796  001210  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5797  001214  50DF               	movf	indf2,w,c
  5798  001216  B4D8               	btfsc	status,2,c
  5799  001218  D002               	goto	i1l3818
  5800                           
  5801                           ;messages.c: 42: return (-1);
  5802  00121A  0EFF               	movlw	255
  5803  00121C  0012               	return	
  5804  00121E                     i1l3818:
  5805                           
  5806                           ;messages.c: 43: }
  5807                           ;messages.c: 46: qmsg->length = length;
  5808  00121E  EE20 F001          	lfsr	2,1
  5809  001222  5015               	movf	i1send_msg@qmsg,w,c
  5810  001224  26D9               	addwf	fsr2l,f,c
  5811  001226  5016               	movf	i1send_msg@qmsg+1,w,c
  5812  001228  22DA               	addwfc	fsr2h,f,c
  5813  00122A  C00D  FFDF         	movff	i1send_msg@length,indf2
  5814                           
  5815                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5816  00122E  EE20 F002          	lfsr	2,2
  5817  001232  5015               	movf	i1send_msg@qmsg,w,c
  5818  001234  26D9               	addwf	fsr2l,f,c
  5819  001236  5016               	movf	i1send_msg@qmsg+1,w,c
  5820  001238  22DA               	addwfc	fsr2h,f,c
  5821  00123A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5822                           
  5823                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5824  00123E  0E03               	movlw	3
  5825  001240  2415               	addwf	i1send_msg@qmsg,w,c
  5826  001242  6E01               	movwf	i1memcpy@d1,c
  5827  001244  0E00               	movlw	0
  5828  001246  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5829  001248  6E02               	movwf	i1memcpy@d1+1,c
  5830  00124A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5831  00124E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5832  001252  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5833  001256  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5834  00125A  EC99  F00C         	call	i1_memcpy	;wreg free
  5835                           
  5836                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5837  00125E  EE20 F034          	lfsr	2,52
  5838  001262  500B               	movf	i1send_msg@qptr,w,c
  5839  001264  26D9               	addwf	fsr2l,f,c
  5840  001266  500C               	movf	i1send_msg@qptr+1,w,c
  5841  001268  22DA               	addwfc	fsr2h,f,c
  5842  00126A  EE10 F034          	lfsr	1,52
  5843  00126E  500B               	movf	i1send_msg@qptr,w,c
  5844  001270  26E1               	addwf	fsr1l,f,c
  5845  001272  500C               	movf	i1send_msg@qptr+1,w,c
  5846  001274  22E2               	addwfc	fsr1h,f,c
  5847  001276  50E7               	movf	indf1,w,c
  5848  001278  6E11               	movwf	??i1_send_msg& (0+255),c
  5849  00127A  2811               	incf	??i1_send_msg,w,c
  5850  00127C  0B03               	andlw	3
  5851  00127E  6EDF               	movwf	indf2,c
  5852                           
  5853                           ;messages.c: 59: qmsg->full = 1;
  5854  001280  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5855  001284  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5856  001288  0E01               	movlw	1
  5857  00128A  6EDF               	movwf	indf2,c
  5858                           
  5859                           ;messages.c: 60: return (1);
  5860  00128C  0E01               	movlw	1
  5861  00128E  0012               	return	
  5862  001290                     __end_ofi1_send_msg:
  5863                           	opt stack 0
  5864                           pclatu	equ	0xFFB
  5865                           pclath	equ	0xFFA
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           prodh	equ	0xFF4
  5871                           prodl	equ	0xFF3
  5872                           intcon	equ	0xFF2
  5873                           postinc0	equ	0xFEE
  5874                           fsr0h	equ	0xFEA
  5875                           fsr0l	equ	0xFE9
  5876                           wreg	equ	0xFE8
  5877                           indf1	equ	0xFE7
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           bsr	equ	0xFE0
  5881                           indf2	equ	0xFDF
  5882                           postinc2	equ	0xFDE
  5883                           postdec2	equ	0xFDD
  5884                           fsr2h	equ	0xFDA
  5885                           fsr2l	equ	0xFD9
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function i1_memcpy *****************
  5889 ;; Defined at:
  5890 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  d1              2    0[COMRAM] PTR void 
  5893 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5894 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5895 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5896 ;;  s1              2    2[COMRAM] PTR const void 
  5897 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5898 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5899 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5900 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5901 ;;		 -> main@ic(28), main@uc(5), 
  5902 ;;  n               2    4[COMRAM] unsigned int 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5905 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5906 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5907 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5908 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5909 ;;		 -> main@ic(28), main@uc(5), 
  5910 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5911 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5912 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5913 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  2    0[COMRAM] PTR void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5923 ;;      Params:         6       0       0       0       0
  5924 ;;      Locals:         4       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0
  5926 ;;      Totals:        10       0       0       0       0
  5927 ;;Total ram usage:       10 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    5
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		i1_send_msg
  5934 ;;		i1_recv_msg
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text39
  5939  001932                     __ptext39:
  5940                           	opt stack 0
  5941  001932                     i1_memcpy:
  5942                           	opt stack 17
  5943                           
  5944                           ;incstack = 0
  5945  001932  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5946  001936  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5947  00193A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5948  00193E  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5949  001942  D00E               	goto	i1l3794
  5950  001944                     i1l3788:
  5951  001944  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5952  001948  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5953  00194C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5954  001950  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5955  001954  CFDF FFE7          	movff	indf2,indf1
  5956  001958  4A09               	infsnz	i1memcpy@s,f,c
  5957  00195A  2A0A               	incf	i1memcpy@s+1,f,c
  5958  00195C  4A07               	infsnz	i1memcpy@d,f,c
  5959  00195E  2A08               	incf	i1memcpy@d+1,f,c
  5960  001960                     i1l3794:
  5961  001960  0605               	decf	i1memcpy@n,f,c
  5962  001962  A0D8               	btfss	status,0,c
  5963  001964  0606               	decf	i1memcpy@n+1,f,c
  5964  001966  2805               	incf	i1memcpy@n& (0+255),w,c
  5965  001968  B4D8               	btfsc	status,2,c
  5966  00196A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5967  00196C  B4D8               	btfsc	status,2,c
  5968                           
  5969                           ;	Return value of i1_memcpy is never used
  5970  00196E  0012               	return	
  5971  001970  D7E9               	goto	i1l3788
  5972  001972                     __end_ofi1_memcpy:
  5973                           	opt stack 0
  5974                           pclatu	equ	0xFFB
  5975                           pclath	equ	0xFFA
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           prodh	equ	0xFF4
  5981                           prodl	equ	0xFF3
  5982                           intcon	equ	0xFF2
  5983                           postinc0	equ	0xFEE
  5984                           fsr0h	equ	0xFEA
  5985                           fsr0l	equ	0xFE9
  5986                           wreg	equ	0xFE8
  5987                           indf1	equ	0xFE7
  5988                           fsr1h	equ	0xFE2
  5989                           fsr1l	equ	0xFE1
  5990                           bsr	equ	0xFE0
  5991                           indf2	equ	0xFDF
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           fsr2h	equ	0xFDA
  5995                           fsr2l	equ	0xFD9
  5996                           status	equ	0xFD8
  5997                           
  5998 ;; *************** function _ReadTimer1 *****************
  5999 ;; Defined at:
  6000 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  timer           2    2[COMRAM] struct Timers
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2    0[COMRAM] unsigned int 
  6007 ;; Registers used:
  6008 ;;		None
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6014 ;;      Params:         2       0       0       0       0
  6015 ;;      Locals:         2       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0
  6017 ;;      Totals:         4       0       0       0       0
  6018 ;;Total ram usage:        4 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    5
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_timer1_int_handler
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text40
  6029  001CCA                     __ptext40:
  6030                           	opt stack 0
  6031  001CCA                     _ReadTimer1:
  6032                           	opt stack 19
  6033                           
  6034                           ;incstack = 0
  6035  001CCA  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6036  001CCE  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6037  001CD2  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6038  001CD6  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6039  001CDA  0012               	return	
  6040  001CDC                     __end_of_ReadTimer1:
  6041                           	opt stack 0
  6042                           pclatu	equ	0xFFB
  6043                           pclath	equ	0xFFA
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           postinc0	equ	0xFEE
  6052                           fsr0h	equ	0xFEA
  6053                           fsr0l	equ	0xFE9
  6054                           wreg	equ	0xFE8
  6055                           indf1	equ	0xFE7
  6056                           fsr1h	equ	0xFE2
  6057                           fsr1l	equ	0xFE1
  6058                           bsr	equ	0xFE0
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function _InterruptHandlerHigh *****************
  6067 ;; Defined at:
  6068 ;;		line 83 in file "src/interrupts.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;		None
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;		None               void
  6075 ;; Registers used:
  6076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6082 ;;      Params:         0       0       0       0       0
  6083 ;;      Locals:         0       0       0       0       0
  6084 ;;      Temps:          0      14       0       0       0
  6085 ;;      Totals:         0      14       0       0       0
  6086 ;;Total ram usage:       14 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    4
  6089 ;; This function calls:
  6090 ;;		_SleepIfOkay
  6091 ;;		_i2c_int_handler
  6092 ;;		_timer0_int_handler
  6093 ;; This function is called by:
  6094 ;;		Interrupt level 2
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	intcode
  6099  000008                     __pintcode:
  6100                           	opt stack 0
  6101  000008                     _InterruptHandlerHigh:
  6102                           	opt stack 17
  6103                           
  6104                           ;incstack = 0
  6105  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh
  6106  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+1
  6107  000010  EF66  F00A         	goto	int_func
  6108                           pclatu	equ	0xFFB
  6109                           pclath	equ	0xFFA
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           postinc0	equ	0xFEE
  6118                           fsr0h	equ	0xFEA
  6119                           fsr0l	equ	0xFE9
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           bsr	equ	0xFE0
  6125                           indf2	equ	0xFDF
  6126                           postinc2	equ	0xFDE
  6127                           postdec2	equ	0xFDD
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132                           	psect	intcode_body
  6133  0014CC                     __pintcode_body:
  6134                           	opt stack 17
  6135  0014CC                     int_func:
  6136                           	opt stack 17
  6137  0014CC  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6138  0014D0  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6139  0014D4  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6140  0014D8  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6141  0014DC  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6142  0014E0  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6143  0014E4  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+8
  6144  0014E8  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+9
  6145  0014EC  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6146  0014F0  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6147  0014F4  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+12
  6148  0014F8  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+13
  6149                           
  6150                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6151  0014FC  A69E               	btfss	3998,3,c	;volatile
  6152  0014FE  D003               	goto	i2l3134
  6153                           
  6154                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6155  001500  969E               	bcf	3998,3,c	;volatile
  6156                           
  6157                           ;interrupts.c: 92: i2c_int_handler();
  6158  001502  EC62  F000         	call	_i2c_int_handler	;wreg free
  6159  001506                     i2l3134:
  6160                           
  6161                           ;interrupts.c: 93: }
  6162                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6163  001506  A4F2               	btfss	intcon,2,c	;volatile
  6164  001508  D003               	goto	i2l3140
  6165                           
  6166                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6167  00150A  94F2               	bcf	intcon,2,c	;volatile
  6168                           
  6169                           ;interrupts.c: 99: timer0_int_handler();
  6170  00150C  EC24  F00A         	call	_timer0_int_handler	;wreg free
  6171  001510                     i2l3140:
  6172                           
  6173                           ;interrupts.c: 100: }
  6174                           ;interrupts.c: 109: SleepIfOkay();
  6175  001510  ECEB  F00B         	call	_SleepIfOkay	;wreg free
  6176  001514  C0D6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6177  001518  C0D5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6178  00151C  C0D4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6179  001520  C0D3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6180  001524  C0D2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6181  001528  C0D1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6182  00152C  C0D0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6183  001530  C0CF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6184  001534  C0CE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6185  001538  C0CD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6186  00153C  C0CC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6187  001540  C0CB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6188  001544  C0CA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6189  001548  C0C9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6190  00154C  0011               	retfie		f
  6191  00154E                     __end_of_InterruptHandlerHigh:
  6192                           	opt stack 0
  6193                           pclatu	equ	0xFFB
  6194                           pclath	equ	0xFFA
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           postinc0	equ	0xFEE
  6203                           fsr0h	equ	0xFEA
  6204                           fsr0l	equ	0xFE9
  6205                           wreg	equ	0xFE8
  6206                           indf1	equ	0xFE7
  6207                           fsr1h	equ	0xFE2
  6208                           fsr1l	equ	0xFE1
  6209                           bsr	equ	0xFE0
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function _timer0_int_handler *****************
  6218 ;; Defined at:
  6219 ;;		line 16 in file "src/user_interrupts.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  val             2   15[BANK0 ] unsigned int 
  6224 ;;  msgtype         2   13[BANK0 ] int 
  6225 ;;  length          2   11[BANK0 ] int 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;		None               void
  6228 ;; Registers used:
  6229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6235 ;;      Params:         0       0       0       0       0
  6236 ;;      Locals:         0       6       0       0       0
  6237 ;;      Temps:          0       1       0       0       0
  6238 ;;      Totals:         0       7       0       0       0
  6239 ;;Total ram usage:        7 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    3
  6242 ;; This function calls:
  6243 ;;		_FromMainHigh_recvmsg
  6244 ;;		_ToMainHigh_sendmsg
  6245 ;;		_WriteTimer0
  6246 ;; This function is called by:
  6247 ;;		_InterruptHandlerHigh
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text42
  6252  001448                     __ptext42:
  6253                           	opt stack 0
  6254  001448                     _timer0_int_handler:
  6255                           	opt stack 17
  6256                           
  6257                           ;user_interrupts.c: 17: unsigned int val;
  6258                           ;user_interrupts.c: 18: int length, msgtype;
  6259                           ;user_interrupts.c: 25: WriteTimer0(0);
  6260                           
  6261                           ;incstack = 0
  6262  001448  0E00               	movlw	0
  6263  00144A  6E36               	movwf	WriteTimer0@timer0+1,c
  6264  00144C  0E00               	movlw	0
  6265  00144E  6E35               	movwf	WriteTimer0@timer0,c
  6266  001450  EC6E  F00E         	call	_WriteTimer0	;wreg free
  6267                           
  6268                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6269  001454  0100               	movlb	0	; () banked
  6270  001456  0E00               	movlw	high timer0_int_handler@msgtype
  6271  001458  0100               	movlb	0	; () banked
  6272  00145A  0100               	movlb	0	; () banked
  6273  00145C  6FBC               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6274  00145E  0100               	movlb	0	; () banked
  6275  001460  0EC3               	movlw	low timer0_int_handler@msgtype
  6276  001462  0100               	movlb	0	; () banked
  6277  001464  0100               	movlb	0	; () banked
  6278  001466  6FBB               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6279  001468  0100               	movlb	0	; () banked
  6280  00146A  0E00               	movlw	high timer0_int_handler@val
  6281  00146C  0100               	movlb	0	; () banked
  6282  00146E  0100               	movlb	0	; () banked
  6283  001470  6FBE               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6284  001472  0100               	movlb	0	; () banked
  6285  001474  0EC5               	movlw	low timer0_int_handler@val
  6286  001476  0100               	movlb	0	; () banked
  6287  001478  0100               	movlb	0	; () banked
  6288  00147A  6FBD               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6289  00147C  0E02               	movlw	2
  6290  00147E  EC46  F00D         	call	_FromMainHigh_recvmsg
  6291  001482  0100               	movlb	0	; () banked
  6292  001484  0100               	movlb	0	; () banked
  6293  001486  6FC1               	movwf	timer0_int_handler@length& (0+255),b
  6294  001488  0100               	movlb	0	; () banked
  6295  00148A  6BC2               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6296  00148C  0100               	movlb	0	; () banked
  6297  00148E  BFC1               	btfsc	timer0_int_handler@length& (0+255),7,b
  6298  001490  07C2               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6302  001492  0100               	movlb	0	; () banked
  6303  001494  0100               	movlb	0	; () banked
  6304  001496  51C1               	movf	timer0_int_handler@length& (0+255),w,b
  6305  001498  0A02               	xorlw	2
  6306  00149A  11C2               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6307  00149C  A4D8               	btfss	status,2,c
  6308  00149E  0012               	return	
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6312  0014A0  0100               	movlb	0	; () banked
  6313  0014A2  6FC0               	movwf	??_timer0_int_handler& (0+255),b
  6314  0014A4  0E0A               	movlw	10
  6315  0014A6  0100               	movlb	0	; () banked
  6316  0014A8  0100               	movlb	0	; () banked
  6317  0014AA  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6318  0014AC  0100               	movlb	0	; () banked
  6319  0014AE  51C0               	movf	??_timer0_int_handler& (0+255),w,b
  6320  0014B0  0100               	movlb	0	; () banked
  6321  0014B2  0E00               	movlw	high timer0_int_handler@val
  6322  0014B4  0100               	movlb	0	; () banked
  6323  0014B6  0100               	movlb	0	; () banked
  6324  0014B8  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6325  0014BA  0100               	movlb	0	; () banked
  6326  0014BC  0EC5               	movlw	low timer0_int_handler@val
  6327  0014BE  0100               	movlb	0	; () banked
  6328  0014C0  0100               	movlb	0	; () banked
  6329  0014C2  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6330  0014C4  0E02               	movlw	2
  6331  0014C6  ECA3  F00D         	call	_ToMainHigh_sendmsg
  6332  0014CA  0012               	return	
  6333  0014CC                     __end_of_timer0_int_handler:
  6334                           	opt stack 0
  6335                           pclatu	equ	0xFFB
  6336                           pclath	equ	0xFFA
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           postinc0	equ	0xFEE
  6345                           fsr0h	equ	0xFEA
  6346                           fsr0l	equ	0xFE9
  6347                           wreg	equ	0xFE8
  6348                           indf1	equ	0xFE7
  6349                           fsr1h	equ	0xFE2
  6350                           fsr1l	equ	0xFE1
  6351                           bsr	equ	0xFE0
  6352                           indf2	equ	0xFDF
  6353                           postinc2	equ	0xFDE
  6354                           postdec2	equ	0xFDD
  6355                           fsr2h	equ	0xFDA
  6356                           fsr2l	equ	0xFD9
  6357                           status	equ	0xFD8
  6358                           
  6359 ;; *************** function _WriteTimer0 *****************
  6360 ;; Defined at:
  6361 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  timer0          2   52[COMRAM] unsigned int 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  timer           2   54[COMRAM] struct Timers
  6366 ;; Return value:  Size  Location     Type
  6367 ;;		None               void
  6368 ;; Registers used:
  6369 ;;		None
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6375 ;;      Params:         2       0       0       0       0
  6376 ;;      Locals:         2       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0
  6378 ;;      Totals:         4       0       0       0       0
  6379 ;;Total ram usage:        4 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_timer0_int_handler
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text43
  6389  001CDC                     __ptext43:
  6390                           	opt stack 0
  6391  001CDC                     _WriteTimer0:
  6392                           	opt stack 19
  6393                           
  6394                           ;incstack = 0
  6395  001CDC  C035  F037         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6396  001CE0  C036  F038         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6397  001CE4  C038  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6398  001CE8  C037  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6399  001CEC  0012               	return	
  6400  001CEE                     __end_of_WriteTimer0:
  6401                           	opt stack 0
  6402                           pclatu	equ	0xFFB
  6403                           pclath	equ	0xFFA
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           intcon	equ	0xFF2
  6411                           postinc0	equ	0xFEE
  6412                           fsr0h	equ	0xFEA
  6413                           fsr0l	equ	0xFE9
  6414                           wreg	equ	0xFE8
  6415                           indf1	equ	0xFE7
  6416                           fsr1h	equ	0xFE2
  6417                           fsr1l	equ	0xFE1
  6418                           bsr	equ	0xFE0
  6419                           indf2	equ	0xFDF
  6420                           postinc2	equ	0xFDE
  6421                           postdec2	equ	0xFDD
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426 ;; *************** function _FromMainHigh_recvmsg *****************
  6427 ;; Defined at:
  6428 ;;		line 183 in file "src/messages.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  maxlength       1    wreg     unsigned char 
  6431 ;;  msgtype         2    5[BANK0 ] PTR unsigned char 
  6432 ;;		 -> timer0_int_handler@msgtype(2), 
  6433 ;;  data            2    7[BANK0 ] PTR void 
  6434 ;;		 -> timer0_int_handler@val(2), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  maxlength       1    9[BANK0 ] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      char 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6446 ;;      Params:         0       4       0       0       0
  6447 ;;      Locals:         0       1       0       0       0
  6448 ;;      Temps:          0       0       0       0       0
  6449 ;;      Totals:         0       5       0       0       0
  6450 ;;Total ram usage:        5 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    2
  6453 ;; This function calls:
  6454 ;;		i2_recv_msg
  6455 ;; This function is called by:
  6456 ;;		_timer0_int_handler
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text44
  6461  001A8C                     __ptext44:
  6462                           	opt stack 0
  6463  001A8C                     _FromMainHigh_recvmsg:
  6464                           	opt stack 17
  6465                           
  6466                           ;incstack = 0
  6467                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6468  001A8C  CFE8 F0BF          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6469                           
  6470                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6471  001A90  0101               	movlb	1	; () banked
  6472  001A92  0E01               	movlw	high _FromMainHigh_MQ
  6473  001A94  6E40               	movwf	i2recv_msg@qptr+1,c
  6474  001A96  0101               	movlb	1	; () banked
  6475  001A98  0E00               	movlw	low _FromMainHigh_MQ
  6476  001A9A  6E3F               	movwf	i2recv_msg@qptr,c
  6477  001A9C  C0BF  F041         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6478  001AA0  0100               	movlb	0	; () banked
  6479  001AA2  C0BC  F043         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6480  001AA6  0100               	movlb	0	; () banked
  6481  001AA8  C0BB  F042         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6482  001AAC  0100               	movlb	0	; () banked
  6483  001AAE  C0BE  F045         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6484  001AB2  0100               	movlb	0	; () banked
  6485  001AB4  C0BD  F044         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6486  001AB8  ECC6  F006         	call	i2_recv_msg	;wreg free
  6487  001ABC  0012               	return	
  6488  001ABE                     __end_of_FromMainHigh_recvmsg:
  6489                           	opt stack 0
  6490                           pclatu	equ	0xFFB
  6491                           pclath	equ	0xFFA
  6492                           tblptru	equ	0xFF8
  6493                           tblptrh	equ	0xFF7
  6494                           tblptrl	equ	0xFF6
  6495                           tablat	equ	0xFF5
  6496                           prodh	equ	0xFF4
  6497                           prodl	equ	0xFF3
  6498                           intcon	equ	0xFF2
  6499                           postinc0	equ	0xFEE
  6500                           fsr0h	equ	0xFEA
  6501                           fsr0l	equ	0xFE9
  6502                           wreg	equ	0xFE8
  6503                           indf1	equ	0xFE7
  6504                           fsr1h	equ	0xFE2
  6505                           fsr1l	equ	0xFE1
  6506                           bsr	equ	0xFE0
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           
  6514 ;; *************** function i2_recv_msg *****************
  6515 ;; Defined at:
  6516 ;;		line 63 in file "src/messages.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  6519 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6520 ;;  maxlength       1   64[COMRAM] unsigned char 
  6521 ;;  msgtype         2   65[COMRAM] PTR unsigned char 
  6522 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6523 ;;  data            2   67[COMRAM] PTR void 
  6524 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
  6527 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6528 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6529 ;;  recv_msg        2    1[BANK0 ] unsigned int 
  6530 ;;  recv_msg        1    0[BANK0 ] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      char 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6540 ;;      Params:         7       0       0       0       0
  6541 ;;      Locals:         0       5       0       0       0
  6542 ;;      Temps:          2       0       0       0       0
  6543 ;;      Totals:         9       5       0       0       0
  6544 ;;Total ram usage:       14 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    1
  6547 ;; This function calls:
  6548 ;;		i2_memcpy
  6549 ;; This function is called by:
  6550 ;;		_FromMainHigh_recvmsg
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text45
  6555  000D8C                     __ptext45:
  6556                           	opt stack 0
  6557  000D8C                     i2_recv_msg:
  6558                           	opt stack 17
  6559                           
  6560                           ;messages.c: 64: unsigned char slot;
  6561                           ;messages.c: 68: msg *qmsg;
  6562                           ;messages.c: 69: size_t tlength;
  6563                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6564                           
  6565                           ;incstack = 0
  6566  000D8C  EE20 F035          	lfsr	2,53
  6567  000D90  503F               	movf	i2recv_msg@qptr,w,c
  6568  000D92  26D9               	addwf	fsr2l,f,c
  6569  000D94  5040               	movf	i2recv_msg@qptr+1,w,c
  6570  000D96  22DA               	addwfc	fsr2h,f,c
  6571  000D98  50DF               	movf	indf2,w,c
  6572  000D9A  0100               	movlb	0	; () banked
  6573  000D9C  0100               	movlb	0	; () banked
  6574  000D9E  6FB6               	movwf	i2recv_msg@slot& (0+255),b
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6578  000DA0  0100               	movlb	0	; () banked
  6579  000DA2  0100               	movlb	0	; () banked
  6580  000DA4  51B6               	movf	i2recv_msg@slot& (0+255),w,b
  6581  000DA6  0D0D               	mullw	13
  6582  000DA8  50F3               	movf	prodl,w,c
  6583  000DAA  243F               	addwf	i2recv_msg@qptr,w,c
  6584  000DAC  0100               	movlb	0	; () banked
  6585  000DAE  0100               	movlb	0	; () banked
  6586  000DB0  6FB9               	movwf	i2recv_msg@qmsg& (0+255),b
  6587  000DB2  50F4               	movf	prodh,w,c
  6588  000DB4  2040               	addwfc	i2recv_msg@qptr+1,w,c
  6589  000DB6  0100               	movlb	0	; () banked
  6590  000DB8  6FBA               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;messages.c: 74: if (qmsg->full == 1) {
  6594  000DBA  0E01               	movlw	1
  6595  000DBC  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6596  000DC0  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6597  000DC4  62DF               	cpfseq	indf2,c
  6598  000DC6  D062               	goto	i2l3782
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6602  000DC8  0100               	movlb	0	; () banked
  6603  000DCA  EE20 F001          	lfsr	2,1
  6604  000DCE  0100               	movlb	0	; () banked
  6605  000DD0  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6606  000DD2  26D9               	addwf	fsr2l,f,c
  6607  000DD4  0100               	movlb	0	; () banked
  6608  000DD6  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6609  000DD8  22DA               	addwfc	fsr2h,f,c
  6610  000DDA  50DF               	movf	indf2,w,c
  6611  000DDC  5C41               	subwf	i2recv_msg@maxlength,w,c
  6612  000DDE  B0D8               	btfsc	status,0,c
  6613  000DE0  D002               	goto	i2l3766
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;messages.c: 77: return (-3);
  6617  000DE2  0EFD               	movlw	253
  6618  000DE4  0012               	return	
  6619  000DE6                     i2l3766:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;messages.c: 78: }
  6623                           ;messages.c: 80: tlength = qmsg->length;
  6624  000DE6  0100               	movlb	0	; () banked
  6625  000DE8  EE20 F001          	lfsr	2,1
  6626  000DEC  0100               	movlb	0	; () banked
  6627  000DEE  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6628  000DF0  26D9               	addwf	fsr2l,f,c
  6629  000DF2  0100               	movlb	0	; () banked
  6630  000DF4  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6631  000DF6  22DA               	addwfc	fsr2h,f,c
  6632  000DF8  50DF               	movf	indf2,w,c
  6633  000DFA  6E46               	movwf	??i2_recv_msg& (0+255),c
  6634  000DFC  5046               	movf	??i2_recv_msg,w,c
  6635  000DFE  0100               	movlb	0	; () banked
  6636  000E00  0100               	movlb	0	; () banked
  6637  000E02  6FB7               	movwf	i2recv_msg@tlength& (0+255),b
  6638  000E04  0100               	movlb	0	; () banked
  6639  000E06  6BB8               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6643  000E08  C045  F036         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6644  000E0C  C044  F035         	movff	i2recv_msg@data,i2memcpy@d1
  6645  000E10  0E03               	movlw	3
  6646  000E12  0100               	movlb	0	; () banked
  6647  000E14  0100               	movlb	0	; () banked
  6648  000E16  25B9               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6649  000E18  6E46               	movwf	??i2_recv_msg& (0+255),c
  6650  000E1A  0E00               	movlw	0
  6651  000E1C  0100               	movlb	0	; () banked
  6652  000E1E  0100               	movlb	0	; () banked
  6653  000E20  21BA               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6654  000E22  6E47               	movwf	(??i2_recv_msg+1)& (0+255),c
  6655  000E24  C046  F037         	movff	??i2_recv_msg,i2memcpy@s1
  6656  000E28  C047  F038         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6657  000E2C  C0B7  F039         	movff	i2recv_msg@tlength,i2memcpy@n
  6658  000E30  C0B8  F03A         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6659  000E34  ECB9  F00C         	call	i2_memcpy	;wreg free
  6660                           
  6661                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6662  000E38  EE20 F035          	lfsr	2,53
  6663  000E3C  503F               	movf	i2recv_msg@qptr,w,c
  6664  000E3E  26D9               	addwf	fsr2l,f,c
  6665  000E40  5040               	movf	i2recv_msg@qptr+1,w,c
  6666  000E42  22DA               	addwfc	fsr2h,f,c
  6667  000E44  EE10 F035          	lfsr	1,53
  6668  000E48  503F               	movf	i2recv_msg@qptr,w,c
  6669  000E4A  26E1               	addwf	fsr1l,f,c
  6670  000E4C  5040               	movf	i2recv_msg@qptr+1,w,c
  6671  000E4E  22E2               	addwfc	fsr1h,f,c
  6672  000E50  50E7               	movf	indf1,w,c
  6673  000E52  6E46               	movwf	??i2_recv_msg& (0+255),c
  6674  000E54  2846               	incf	??i2_recv_msg,w,c
  6675  000E56  0B03               	andlw	3
  6676  000E58  6EDF               	movwf	indf2,c
  6677                           
  6678                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6679  000E5A  0100               	movlb	0	; () banked
  6680  000E5C  EE20 F002          	lfsr	2,2
  6681  000E60  0100               	movlb	0	; () banked
  6682  000E62  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6683  000E64  26D9               	addwf	fsr2l,f,c
  6684  000E66  0100               	movlb	0	; () banked
  6685  000E68  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6686  000E6A  22DA               	addwfc	fsr2h,f,c
  6687  000E6C  C042  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6688  000E70  C043  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6689  000E74  CFDF FFE7          	movff	indf2,indf1
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;messages.c: 91: qmsg->full = 0;
  6693  000E78  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6694  000E7C  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6695  000E80  0E00               	movlw	0
  6696  000E82  6EDF               	movwf	indf2,c
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;messages.c: 92: return (tlength);
  6700  000E84  0100               	movlb	0	; () banked
  6701  000E86  0100               	movlb	0	; () banked
  6702  000E88  51B7               	movf	i2recv_msg@tlength& (0+255),w,b
  6703  000E8A  0012               	return	
  6704  000E8C                     i2l3782:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;messages.c: 94: return (-4);
  6708  000E8C  0EFC               	movlw	252
  6709  000E8E  0012               	return	
  6710  000E90                     __end_ofi2_recv_msg:
  6711                           	opt stack 0
  6712                           pclatu	equ	0xFFB
  6713                           pclath	equ	0xFFA
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           postinc0	equ	0xFEE
  6722                           fsr0h	equ	0xFEA
  6723                           fsr0l	equ	0xFE9
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           fsr1h	equ	0xFE2
  6727                           fsr1l	equ	0xFE1
  6728                           bsr	equ	0xFE0
  6729                           indf2	equ	0xFDF
  6730                           postinc2	equ	0xFDE
  6731                           postdec2	equ	0xFDD
  6732                           fsr2h	equ	0xFDA
  6733                           fsr2l	equ	0xFD9
  6734                           status	equ	0xFD8
  6735                           
  6736 ;; *************** function _i2c_int_handler *****************
  6737 ;; Defined at:
  6738 ;;		line 100 in file "src/my_i2c.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  error_buf       3   10[BANK0 ] unsigned char [3]
  6743 ;;  data_read       1   18[BANK0 ] unsigned char 
  6744 ;;  msg_ready       1   17[BANK0 ] unsigned char 
  6745 ;;  msg_to_send     1   16[BANK0 ] unsigned char 
  6746 ;;  i2c_data        1   15[BANK0 ] unsigned char 
  6747 ;;  overrun_erro    1   14[BANK0 ] unsigned char 
  6748 ;;  data_written    1   13[BANK0 ] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;		None               void
  6751 ;; Registers used:
  6752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6758 ;;      Params:         0       0       0       0       0
  6759 ;;      Locals:         0       9       0       0       0
  6760 ;;      Temps:          0       2       0       0       0
  6761 ;;      Totals:         0      11       0       0       0
  6762 ;;Total ram usage:       11 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    3
  6765 ;; This function calls:
  6766 ;;		_ToMainHigh_sendmsg
  6767 ;;		_handle_start
  6768 ;; This function is called by:
  6769 ;;		_InterruptHandlerHigh
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text46
  6774  0000C4                     __ptext46:
  6775                           	opt stack 0
  6776  0000C4                     _i2c_int_handler:
  6777                           	opt stack 17
  6778                           
  6779                           ;my_i2c.c: 101: unsigned char i2c_data;
  6780                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;incstack = 0
  6784  0000C4  0100               	movlb	0	; () banked
  6785  0000C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6786  0000C8  0E00               	movlw	0
  6787  0000CA  0100               	movlb	0	; () banked
  6788  0000CC  0100               	movlb	0	; () banked
  6789  0000CE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  6790  0000D0  0100               	movlb	0	; () banked
  6791  0000D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6792                           
  6793                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6794  0000D4  0100               	movlb	0	; () banked
  6795  0000D6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6796  0000D8  0E00               	movlw	0
  6797  0000DA  0100               	movlb	0	; () banked
  6798  0000DC  0100               	movlb	0	; () banked
  6799  0000DE  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  6800  0000E0  0100               	movlb	0	; () banked
  6801  0000E2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6802                           
  6803                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6804  0000E4  0100               	movlb	0	; () banked
  6805  0000E6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6806  0000E8  0E00               	movlw	0
  6807  0000EA  0100               	movlb	0	; () banked
  6808  0000EC  0100               	movlb	0	; () banked
  6809  0000EE  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6810  0000F0  0100               	movlb	0	; () banked
  6811  0000F2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6812                           
  6813                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6814  0000F4  0100               	movlb	0	; () banked
  6815  0000F6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6816  0000F8  0E00               	movlw	0
  6817  0000FA  0100               	movlb	0	; () banked
  6818  0000FC  0100               	movlb	0	; () banked
  6819  0000FE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6820  000100  0100               	movlb	0	; () banked
  6821  000102  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6822                           
  6823                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6824  000104  0100               	movlb	0	; () banked
  6825  000106  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6826  000108  0E00               	movlw	0
  6827  00010A  0100               	movlb	0	; () banked
  6828  00010C  0100               	movlb	0	; () banked
  6829  00010E  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6830  000110  0100               	movlb	0	; () banked
  6831  000112  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6835                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6836  000114  ACC6               	btfss	4038,6,c	;volatile
  6837  000116  D029               	goto	i2l3156
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6841  000118  9CC6               	bcf	4038,6,c	;volatile
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6845  00011A  0100               	movlb	0	; () banked
  6846  00011C  EE20 F00C          	lfsr	2,12
  6847  000120  0100               	movlb	0	; () banked
  6848  000122  51DD               	movf	_ic_ptr& (0+255),w,b
  6849  000124  26D9               	addwf	fsr2l,f,c
  6850  000126  0100               	movlb	0	; () banked
  6851  000128  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6852  00012A  22DA               	addwfc	fsr2h,f,c
  6853  00012C  0E05               	movlw	5
  6854  00012E  6EDF               	movwf	indf2,c
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;my_i2c.c: 116: overrun_error = 1;
  6858  000130  0100               	movlb	0	; () banked
  6859  000132  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6860  000134  0E01               	movlw	1
  6861  000136  0100               	movlb	0	; () banked
  6862  000138  0100               	movlb	0	; () banked
  6863  00013A  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6864  00013C  0100               	movlb	0	; () banked
  6865  00013E  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6869  000140  0100               	movlb	0	; () banked
  6870  000142  EE20 F00E          	lfsr	2,14
  6871  000146  0100               	movlb	0	; () banked
  6872  000148  51DD               	movf	_ic_ptr& (0+255),w,b
  6873  00014A  26D9               	addwf	fsr2l,f,c
  6874  00014C  0100               	movlb	0	; () banked
  6875  00014E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6876  000150  22DA               	addwfc	fsr2h,f,c
  6877  000152  2ADF               	incf	indf2,f,c
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6881  000154  0100               	movlb	0	; () banked
  6882  000156  EE20 F00D          	lfsr	2,13
  6883  00015A  0100               	movlb	0	; () banked
  6884  00015C  51DD               	movf	_ic_ptr& (0+255),w,b
  6885  00015E  26D9               	addwf	fsr2l,f,c
  6886  000160  0100               	movlb	0	; () banked
  6887  000162  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6888  000164  22DA               	addwfc	fsr2h,f,c
  6889  000166  0E04               	movlw	4
  6890  000168  6EDF               	movwf	indf2,c
  6891  00016A                     i2l3156:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;my_i2c.c: 119: }
  6895                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6896  00016A  A0C7               	btfss	4039,0,c	;volatile
  6897  00016C  D00A               	goto	i2l3162
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6901  00016E  CFC9 F0C5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;my_i2c.c: 123: data_read = 1;
  6905  000172  0100               	movlb	0	; () banked
  6906  000174  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6907  000176  0E01               	movlw	1
  6908  000178  0100               	movlb	0	; () banked
  6909  00017A  0100               	movlb	0	; () banked
  6910  00017C  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  6911  00017E  0100               	movlb	0	; () banked
  6912  000180  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6913  000182                     i2l3162:
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;my_i2c.c: 124: }
  6917                           ;my_i2c.c: 126: if (!overrun_error) {
  6918  000182  0100               	movlb	0	; () banked
  6919  000184  0100               	movlb	0	; () banked
  6920  000186  67C4               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6921  000188  D1CE               	goto	i2l267
  6922  00018A  D1B7               	goto	i2l3250
  6923  00018C                     i2l269:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 129: {
  6927                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6928  00018C  A6C7               	btfss	4039,3,c	;volatile
  6929  00018E  D1CB               	goto	i2l267
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;my_i2c.c: 132: handle_start(data_read);
  6933  000190  0100               	movlb	0	; () banked
  6934  000192  0100               	movlb	0	; () banked
  6935  000194  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  6936  000196  EC8F  F008         	call	_handle_start
  6937                           
  6938                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6939  00019A  0100               	movlb	0	; () banked
  6940  00019C  EE20 F00C          	lfsr	2,12
  6941  0001A0  0100               	movlb	0	; () banked
  6942  0001A2  51DD               	movf	_ic_ptr& (0+255),w,b
  6943  0001A4  26D9               	addwf	fsr2l,f,c
  6944  0001A6  0100               	movlb	0	; () banked
  6945  0001A8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6946  0001AA  22DA               	addwfc	fsr2h,f,c
  6947  0001AC  0E08               	movlw	8
  6948  0001AE  62DF               	cpfseq	indf2,c
  6949  0001B0  D1BA               	goto	i2l267
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;my_i2c.c: 135: data_read = 0;
  6953  0001B2  0100               	movlb	0	; () banked
  6954  0001B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6955  0001B6  0E00               	movlw	0
  6956  0001B8  0100               	movlb	0	; () banked
  6957  0001BA  0100               	movlb	0	; () banked
  6958  0001BC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  6959  0001BE  0100               	movlb	0	; () banked
  6960  0001C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6961                           
  6962                           ;my_i2c.c: 136: msg_to_send = 1;
  6963  0001C2  0100               	movlb	0	; () banked
  6964  0001C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6965  0001C6  0E01               	movlw	1
  6966  0001C8  0100               	movlb	0	; () banked
  6967  0001CA  0100               	movlb	0	; () banked
  6968  0001CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6969  0001CE  D187               	goto	L9
  6970  0001D0                     i2l273:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;my_i2c.c: 142: {
  6974                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6975  0001D0  A8C7               	btfss	4039,4,c	;volatile
  6976  0001D2  D030               	goto	i2l3182
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6980  0001D4  0100               	movlb	0	; () banked
  6981  0001D6  EE20 F00B          	lfsr	2,11
  6982  0001DA  0100               	movlb	0	; () banked
  6983  0001DC  51DD               	movf	_ic_ptr& (0+255),w,b
  6984  0001DE  26D9               	addwf	fsr2l,f,c
  6985  0001E0  0100               	movlb	0	; () banked
  6986  0001E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6987  0001E4  22DA               	addwfc	fsr2h,f,c
  6988  0001E6  2ADF               	incf	indf2,f,c
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 148: if (data_read) {
  6992  0001E8  0100               	movlb	0	; () banked
  6993  0001EA  0100               	movlb	0	; () banked
  6994  0001EC  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  6995  0001EE  B4D8               	btfsc	status,2,c
  6996  0001F0  D179               	goto	L11
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7000  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7001  0001F4  D009               	goto	i2l3180
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;my_i2c.c: 150: msg_ready = 1;
  7005  0001F6  0100               	movlb	0	; () banked
  7006  0001F8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7007  0001FA  0E01               	movlw	1
  7008  0001FC  0100               	movlb	0	; () banked
  7009  0001FE  0100               	movlb	0	; () banked
  7010  000200  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7011  000202  0100               	movlb	0	; () banked
  7012  000204  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7013                           
  7014                           ;my_i2c.c: 151: } else {
  7015  000206  D16E               	goto	L11
  7016  000208                     i2l3180:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7020  000208  0100               	movlb	0	; () banked
  7021  00020A  EE20 F00E          	lfsr	2,14
  7022  00020E  0100               	movlb	0	; () banked
  7023  000210  51DD               	movf	_ic_ptr& (0+255),w,b
  7024  000212  26D9               	addwf	fsr2l,f,c
  7025  000214  0100               	movlb	0	; () banked
  7026  000216  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7027  000218  22DA               	addwfc	fsr2h,f,c
  7028  00021A  2ADF               	incf	indf2,f,c
  7029                           
  7030                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7031  00021C  0100               	movlb	0	; () banked
  7032  00021E  EE20 F00D          	lfsr	2,13
  7033  000222  0100               	movlb	0	; () banked
  7034  000224  51DD               	movf	_ic_ptr& (0+255),w,b
  7035  000226  26D9               	addwf	fsr2l,f,c
  7036  000228  0100               	movlb	0	; () banked
  7037  00022A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7038  00022C  22DA               	addwfc	fsr2h,f,c
  7039  00022E  0E06               	movlw	6
  7040  000230  6EDF               	movwf	indf2,c
  7041                           
  7042                           ; BSR set to: 0
  7043  000232  D158               	goto	L11
  7044  000234                     i2l3182:
  7045                           
  7046                           ; BSR set to: 0
  7047  000234  0100               	movlb	0	; () banked
  7048  000236  0100               	movlb	0	; () banked
  7049  000238  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7050  00023A  B4D8               	btfsc	status,2,c
  7051  00023C  D174               	goto	i2l267
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7055  00023E  0100               	movlb	0	; () banked
  7056  000240  EE20 F00B          	lfsr	2,11
  7057  000244  0100               	movlb	0	; () banked
  7058  000246  51DD               	movf	_ic_ptr& (0+255),w,b
  7059  000248  26D9               	addwf	fsr2l,f,c
  7060  00024A  0100               	movlb	0	; () banked
  7061  00024C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7062  00024E  22DA               	addwfc	fsr2h,f,c
  7063  000250  2ADF               	incf	indf2,f,c
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7067  000252  BAC7               	btfsc	4039,5,c	;volatile
  7068  000254  D019               	goto	i2l3198
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7072  000256  B4C7               	btfsc	4039,2,c	;volatile
  7073  000258  D00B               	goto	i2l3192
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7077  00025A  0100               	movlb	0	; () banked
  7078  00025C  EE20 F00C          	lfsr	2,12
  7079  000260  0100               	movlb	0	; () banked
  7080  000262  51DD               	movf	_ic_ptr& (0+255),w,b
  7081  000264  26D9               	addwf	fsr2l,f,c
  7082  000266  0100               	movlb	0	; () banked
  7083  000268  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7084  00026A  22DA               	addwfc	fsr2h,f,c
  7085  00026C  0E07               	movlw	7
  7086  00026E  D076               	goto	L8
  7087  000270                     i2l3192:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7091  000270  0100               	movlb	0	; () banked
  7092  000272  EE20 F00C          	lfsr	2,12
  7093  000276  0100               	movlb	0	; () banked
  7094  000278  51DD               	movf	_ic_ptr& (0+255),w,b
  7095  00027A  26D9               	addwf	fsr2l,f,c
  7096  00027C  0100               	movlb	0	; () banked
  7097  00027E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7098  000280  22DA               	addwfc	fsr2h,f,c
  7099  000282  0E08               	movlw	8
  7100  000284  6EDF               	movwf	indf2,c
  7101  000286  D11D               	goto	L12
  7102  000288                     i2l3198:
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7106  000288  0100               	movlb	0	; () banked
  7107  00028A  EE20 F00E          	lfsr	2,14
  7108  00028E  0100               	movlb	0	; () banked
  7109  000290  51DD               	movf	_ic_ptr& (0+255),w,b
  7110  000292  26D9               	addwf	fsr2l,f,c
  7111  000294  0100               	movlb	0	; () banked
  7112  000296  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  000298  22DA               	addwfc	fsr2h,f,c
  7114  00029A  2ADF               	incf	indf2,f,c
  7115                           
  7116                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7117  00029C  0100               	movlb	0	; () banked
  7118  00029E  EE20 F00C          	lfsr	2,12
  7119  0002A2  0100               	movlb	0	; () banked
  7120  0002A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7121  0002A6  26D9               	addwf	fsr2l,f,c
  7122  0002A8  0100               	movlb	0	; () banked
  7123  0002AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7124  0002AC  22DA               	addwfc	fsr2h,f,c
  7125  0002AE  0E05               	movlw	5
  7126  0002B0  6EDF               	movwf	indf2,c
  7127                           
  7128                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7129  0002B2  0100               	movlb	0	; () banked
  7130  0002B4  EE20 F00D          	lfsr	2,13
  7131  0002B8  0100               	movlb	0	; () banked
  7132  0002BA  51DD               	movf	_ic_ptr& (0+255),w,b
  7133  0002BC  26D9               	addwf	fsr2l,f,c
  7134  0002BE  0100               	movlb	0	; () banked
  7135  0002C0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7136  0002C2  22DA               	addwfc	fsr2h,f,c
  7137  0002C4  0E06               	movlw	6
  7138  0002C6  D04A               	goto	L8
  7139  0002C8                     i2l3200:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;my_i2c.c: 177: {
  7143                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7144  0002C8  0100               	movlb	0	; () banked
  7145  0002CA  EE20 F01A          	lfsr	2,26
  7146  0002CE  0100               	movlb	0	; () banked
  7147  0002D0  51DD               	movf	_ic_ptr& (0+255),w,b
  7148  0002D2  26D9               	addwf	fsr2l,f,c
  7149  0002D4  0100               	movlb	0	; () banked
  7150  0002D6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7151  0002D8  22DA               	addwfc	fsr2h,f,c
  7152  0002DA  50DF               	movf	indf2,w,c
  7153  0002DC  0100               	movlb	0	; () banked
  7154  0002DE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7155  0002E0  0100               	movlb	0	; () banked
  7156  0002E2  EE20 F019          	lfsr	2,25
  7157  0002E6  0100               	movlb	0	; () banked
  7158  0002E8  51DD               	movf	_ic_ptr& (0+255),w,b
  7159  0002EA  26D9               	addwf	fsr2l,f,c
  7160  0002EC  0100               	movlb	0	; () banked
  7161  0002EE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7162  0002F0  22DA               	addwfc	fsr2h,f,c
  7163  0002F2  50DF               	movf	indf2,w,c
  7164  0002F4  0100               	movlb	0	; () banked
  7165  0002F6  5DBE               	subwf	??_i2c_int_handler& (0+255),w,b
  7166  0002F8  B0D8               	btfsc	status,0,c
  7167  0002FA  D0F4               	goto	L11
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7171  0002FC  0100               	movlb	0	; () banked
  7172  0002FE  EE20 F01A          	lfsr	2,26
  7173  000302  0100               	movlb	0	; () banked
  7174  000304  51DD               	movf	_ic_ptr& (0+255),w,b
  7175  000306  26D9               	addwf	fsr2l,f,c
  7176  000308  0100               	movlb	0	; () banked
  7177  00030A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7178  00030C  22DA               	addwfc	fsr2h,f,c
  7179  00030E  50DF               	movf	indf2,w,c
  7180  000310  0100               	movlb	0	; () banked
  7181  000312  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7182  000314  0100               	movlb	0	; () banked
  7183  000316  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7184  000318  0D01               	mullw	1
  7185  00031A  0E0F               	movlw	15
  7186  00031C  26F3               	addwf	prodl,f,c
  7187  00031E  0E00               	movlw	0
  7188  000320  22F4               	addwfc	prodh,f,c
  7189  000322  50F3               	movf	prodl,w,c
  7190  000324  0100               	movlb	0	; () banked
  7191  000326  0100               	movlb	0	; () banked
  7192  000328  25DD               	addwf	_ic_ptr& (0+255),w,b
  7193  00032A  6ED9               	movwf	fsr2l,c
  7194  00032C  50F4               	movf	prodh,w,c
  7195  00032E  0100               	movlb	0	; () banked
  7196  000330  0100               	movlb	0	; () banked
  7197  000332  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7198  000334  6EDA               	movwf	fsr2h,c
  7199  000336  50DF               	movf	indf2,w,c
  7200  000338  6EC9               	movwf	4041,c	;volatile
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7204  00033A  0100               	movlb	0	; () banked
  7205  00033C  EE20 F01A          	lfsr	2,26
  7206  000340  0100               	movlb	0	; () banked
  7207  000342  51DD               	movf	_ic_ptr& (0+255),w,b
  7208  000344  26D9               	addwf	fsr2l,f,c
  7209  000346  0100               	movlb	0	; () banked
  7210  000348  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7211  00034A  22DA               	addwfc	fsr2h,f,c
  7212  00034C  2ADF               	incf	indf2,f,c
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 181: data_written = 1;
  7216  00034E  0100               	movlb	0	; () banked
  7217  000350  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7218  000352  0E01               	movlw	1
  7219  000354  0100               	movlb	0	; () banked
  7220  000356  0100               	movlb	0	; () banked
  7221  000358  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7222  00035A  D0C1               	goto	L9
  7223  00035C                     L8:
  7224  00035C  6EDF               	movwf	indf2,c
  7225  00035E  D0E3               	goto	i2l267
  7226  000360                     i2l287:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;my_i2c.c: 189: {
  7230                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7231  000360  A8C7               	btfss	4039,4,c	;volatile
  7232  000362  D062               	goto	i2l3228
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7236  000364  0100               	movlb	0	; () banked
  7237  000366  EE20 F00B          	lfsr	2,11
  7238  00036A  0100               	movlb	0	; () banked
  7239  00036C  51DD               	movf	_ic_ptr& (0+255),w,b
  7240  00036E  26D9               	addwf	fsr2l,f,c
  7241  000370  0100               	movlb	0	; () banked
  7242  000372  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  000374  22DA               	addwfc	fsr2h,f,c
  7244  000376  2ADF               	incf	indf2,f,c
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 194: if (data_read) {
  7248  000378  0100               	movlb	0	; () banked
  7249  00037A  0100               	movlb	0	; () banked
  7250  00037C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7251  00037E  B4D8               	btfsc	status,2,c
  7252  000380  D04A               	goto	i2l3224
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7256  000382  AAC7               	btfss	4039,5,c	;volatile
  7257  000384  D027               	goto	i2l3222
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7261  000386  0100               	movlb	0	; () banked
  7262  000388  EE20 F00A          	lfsr	2,10
  7263  00038C  0100               	movlb	0	; () banked
  7264  00038E  51DD               	movf	_ic_ptr& (0+255),w,b
  7265  000390  26D9               	addwf	fsr2l,f,c
  7266  000392  0100               	movlb	0	; () banked
  7267  000394  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7268  000396  22DA               	addwfc	fsr2h,f,c
  7269  000398  50DF               	movf	indf2,w,c
  7270  00039A  0100               	movlb	0	; () banked
  7271  00039C  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7272  00039E  0100               	movlb	0	; () banked
  7273  0003A0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7274  0003A2  0D01               	mullw	1
  7275  0003A4  50F3               	movf	prodl,w,c
  7276  0003A6  0100               	movlb	0	; () banked
  7277  0003A8  0100               	movlb	0	; () banked
  7278  0003AA  25DD               	addwf	_ic_ptr& (0+255),w,b
  7279  0003AC  6ED9               	movwf	fsr2l,c
  7280  0003AE  50F4               	movf	prodh,w,c
  7281  0003B0  0100               	movlb	0	; () banked
  7282  0003B2  0100               	movlb	0	; () banked
  7283  0003B4  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7284  0003B6  6EDA               	movwf	fsr2h,c
  7285  0003B8  0100               	movlb	0	; () banked
  7286  0003BA  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7290  0003BE  0100               	movlb	0	; () banked
  7291  0003C0  EE20 F00A          	lfsr	2,10
  7292  0003C4  0100               	movlb	0	; () banked
  7293  0003C6  51DD               	movf	_ic_ptr& (0+255),w,b
  7294  0003C8  26D9               	addwf	fsr2l,f,c
  7295  0003CA  0100               	movlb	0	; () banked
  7296  0003CC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7297  0003CE  22DA               	addwfc	fsr2h,f,c
  7298  0003D0  2ADF               	incf	indf2,f,c
  7299  0003D2  D021               	goto	i2l3224
  7300  0003D4                     i2l3222:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7304  0003D4  0100               	movlb	0	; () banked
  7305  0003D6  EE20 F00E          	lfsr	2,14
  7306  0003DA  0100               	movlb	0	; () banked
  7307  0003DC  51DD               	movf	_ic_ptr& (0+255),w,b
  7308  0003DE  26D9               	addwf	fsr2l,f,c
  7309  0003E0  0100               	movlb	0	; () banked
  7310  0003E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7311  0003E4  22DA               	addwfc	fsr2h,f,c
  7312  0003E6  2ADF               	incf	indf2,f,c
  7313                           
  7314                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7315  0003E8  0100               	movlb	0	; () banked
  7316  0003EA  EE20 F00D          	lfsr	2,13
  7317  0003EE  0100               	movlb	0	; () banked
  7318  0003F0  51DD               	movf	_ic_ptr& (0+255),w,b
  7319  0003F2  26D9               	addwf	fsr2l,f,c
  7320  0003F4  0100               	movlb	0	; () banked
  7321  0003F6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7322  0003F8  22DA               	addwfc	fsr2h,f,c
  7323  0003FA  0E06               	movlw	6
  7324  0003FC  6EDF               	movwf	indf2,c
  7325                           
  7326                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7327  0003FE  0100               	movlb	0	; () banked
  7328  000400  EE20 F00C          	lfsr	2,12
  7329  000404  0100               	movlb	0	; () banked
  7330  000406  51DD               	movf	_ic_ptr& (0+255),w,b
  7331  000408  26D9               	addwf	fsr2l,f,c
  7332  00040A  0100               	movlb	0	; () banked
  7333  00040C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7334  00040E  22DA               	addwfc	fsr2h,f,c
  7335  000410  0E05               	movlw	5
  7336  000412  6EDF               	movwf	indf2,c
  7337  000414  D067               	goto	L11
  7338  000416                     i2l3224:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;my_i2c.c: 205: msg_ready = 1;
  7342  000416  0100               	movlb	0	; () banked
  7343  000418  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7344  00041A  0E01               	movlw	1
  7345  00041C  0100               	movlb	0	; () banked
  7346  00041E  0100               	movlb	0	; () banked
  7347  000420  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7348  000422  0100               	movlb	0	; () banked
  7349  000424  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7350                           
  7351                           ; BSR set to: 0
  7352  000426  D05E               	goto	L11
  7353  000428                     i2l3228:
  7354                           
  7355                           ; BSR set to: 0
  7356  000428  0100               	movlb	0	; () banked
  7357  00042A  0100               	movlb	0	; () banked
  7358  00042C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7359  00042E  B4D8               	btfsc	status,2,c
  7360  000430  D07A               	goto	i2l267
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7364  000432  0100               	movlb	0	; () banked
  7365  000434  EE20 F00B          	lfsr	2,11
  7366  000438  0100               	movlb	0	; () banked
  7367  00043A  51DD               	movf	_ic_ptr& (0+255),w,b
  7368  00043C  26D9               	addwf	fsr2l,f,c
  7369  00043E  0100               	movlb	0	; () banked
  7370  000440  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7371  000442  22DA               	addwfc	fsr2h,f,c
  7372  000444  2ADF               	incf	indf2,f,c
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7376  000446  AAC7               	btfss	4039,5,c	;volatile
  7377  000448  D027               	goto	i2l295
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7381  00044A  0100               	movlb	0	; () banked
  7382  00044C  EE20 F00A          	lfsr	2,10
  7383  000450  0100               	movlb	0	; () banked
  7384  000452  51DD               	movf	_ic_ptr& (0+255),w,b
  7385  000454  26D9               	addwf	fsr2l,f,c
  7386  000456  0100               	movlb	0	; () banked
  7387  000458  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7388  00045A  22DA               	addwfc	fsr2h,f,c
  7389  00045C  50DF               	movf	indf2,w,c
  7390  00045E  0100               	movlb	0	; () banked
  7391  000460  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7392  000462  0100               	movlb	0	; () banked
  7393  000464  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7394  000466  0D01               	mullw	1
  7395  000468  50F3               	movf	prodl,w,c
  7396  00046A  0100               	movlb	0	; () banked
  7397  00046C  0100               	movlb	0	; () banked
  7398  00046E  25DD               	addwf	_ic_ptr& (0+255),w,b
  7399  000470  6ED9               	movwf	fsr2l,c
  7400  000472  50F4               	movf	prodh,w,c
  7401  000474  0100               	movlb	0	; () banked
  7402  000476  0100               	movlb	0	; () banked
  7403  000478  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7404  00047A  6EDA               	movwf	fsr2h,c
  7405  00047C  0100               	movlb	0	; () banked
  7406  00047E  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7410  000482  0100               	movlb	0	; () banked
  7411  000484  EE20 F00A          	lfsr	2,10
  7412  000488  0100               	movlb	0	; () banked
  7413  00048A  51DD               	movf	_ic_ptr& (0+255),w,b
  7414  00048C  26D9               	addwf	fsr2l,f,c
  7415  00048E  0100               	movlb	0	; () banked
  7416  000490  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7417  000492  22DA               	addwfc	fsr2h,f,c
  7418  000494  2ADF               	incf	indf2,f,c
  7419                           
  7420                           ;my_i2c.c: 213: } else {
  7421  000496  D047               	goto	i2l267
  7422  000498                     i2l295:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7426  000498  A4C7               	btfss	4039,2,c	;volatile
  7427  00049A  D6B6               	goto	i2l3180
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7431  00049C  0100               	movlb	0	; () banked
  7432  00049E  EE20 F00C          	lfsr	2,12
  7433  0004A2  0100               	movlb	0	; () banked
  7434  0004A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7435  0004A6  26D9               	addwf	fsr2l,f,c
  7436  0004A8  0100               	movlb	0	; () banked
  7437  0004AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7438  0004AC  22DA               	addwfc	fsr2h,f,c
  7439  0004AE  0E08               	movlw	8
  7440  0004B0  6EDF               	movwf	indf2,c
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;my_i2c.c: 216: msg_ready = 1;
  7444  0004B2  0100               	movlb	0	; () banked
  7445  0004B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7446  0004B6  0E01               	movlw	1
  7447  0004B8  0100               	movlb	0	; () banked
  7448  0004BA  0100               	movlb	0	; () banked
  7449  0004BC  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7450  0004BE  0100               	movlb	0	; () banked
  7451  0004C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7452  0004C2                     L12:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 217: msg_to_send = 1;
  7456  0004C2  0100               	movlb	0	; () banked
  7457  0004C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7458  0004C6  0E01               	movlw	1
  7459  0004C8  0100               	movlb	0	; () banked
  7460  0004CA  0100               	movlb	0	; () banked
  7461  0004CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7462  0004CE  0100               	movlb	0	; () banked
  7463  0004D0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;my_i2c.c: 219: data_read = 0;
  7467  0004D2  0100               	movlb	0	; () banked
  7468  0004D4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7469  0004D6  0E00               	movlw	0
  7470  0004D8  0100               	movlb	0	; () banked
  7471  0004DA  0100               	movlb	0	; () banked
  7472  0004DC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7473  0004DE                     L9:
  7474  0004DE  0100               	movlb	0	; () banked
  7475  0004E0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7476                           
  7477                           ;my_i2c.c: 220: } else {
  7478  0004E2  D021               	goto	i2l267
  7479  0004E4                     L11:
  7480                           
  7481                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7482  0004E4  0100               	movlb	0	; () banked
  7483  0004E6  EE20 F00C          	lfsr	2,12
  7484  0004EA  0100               	movlb	0	; () banked
  7485  0004EC  51DD               	movf	_ic_ptr& (0+255),w,b
  7486  0004EE  26D9               	addwf	fsr2l,f,c
  7487  0004F0  0100               	movlb	0	; () banked
  7488  0004F2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7489  0004F4  22DA               	addwfc	fsr2h,f,c
  7490  0004F6  0E05               	movlw	5
  7491  0004F8  D731               	goto	L8
  7492  0004FA                     i2l3250:
  7493                           
  7494                           ; BSR set to: 0
  7495  0004FA  0100               	movlb	0	; () banked
  7496  0004FC  EE20 F00C          	lfsr	2,12
  7497  000500  0100               	movlb	0	; () banked
  7498  000502  51DD               	movf	_ic_ptr& (0+255),w,b
  7499  000504  26D9               	addwf	fsr2l,f,c
  7500  000506  0100               	movlb	0	; () banked
  7501  000508  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7502  00050A  22DA               	addwfc	fsr2h,f,c
  7503  00050C  50DF               	movf	indf2,w,c
  7504                           
  7505                           ; Switch size 1, requested type "space"
  7506                           ; Number of cases is 4, Range of values is 5 to 8
  7507                           ; switch strategies available:
  7508                           ; Name         Instructions Cycles
  7509                           ; simple_byte           13     7 (average)
  7510                           ;	Chosen strategy is simple_byte
  7511  00050E  0A05               	xorlw	5	; case 5
  7512  000510  B4D8               	btfsc	status,2,c
  7513  000512  D63C               	goto	i2l269
  7514  000514  0A03               	xorlw	3	; case 6
  7515  000516  B4D8               	btfsc	status,2,c
  7516  000518  D65B               	goto	i2l273
  7517  00051A  0A01               	xorlw	1	; case 7
  7518  00051C  B4D8               	btfsc	status,2,c
  7519  00051E  D720               	goto	i2l287
  7520  000520  0A0F               	xorlw	15	; case 8
  7521  000522  B4D8               	btfsc	status,2,c
  7522  000524  D6D1               	goto	i2l3200
  7523  000526                     i2l267:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;my_i2c.c: 230: }
  7527                           ;my_i2c.c: 233: if (data_read || data_written) {
  7528  000526  0100               	movlb	0	; () banked
  7529  000528  0100               	movlb	0	; () banked
  7530  00052A  67C8               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7531  00052C  D005               	goto	i2l301
  7532                           
  7533                           ; BSR set to: 0
  7534  00052E  0100               	movlb	0	; () banked
  7535  000530  0100               	movlb	0	; () banked
  7536  000532  51C3               	movf	i2c_int_handler@data_written& (0+255),w,b
  7537  000534  B4D8               	btfsc	status,2,c
  7538  000536  D002               	goto	i2l3256
  7539  000538                     i2l301:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7543  000538  A8C6               	btfss	4038,4,c	;volatile
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7547  00053A  88C6               	bsf	4038,4,c	;volatile
  7548  00053C                     i2l3256:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;my_i2c.c: 237: }
  7552                           ;my_i2c.c: 238: }
  7553                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7554  00053C  0100               	movlb	0	; () banked
  7555  00053E  EE20 F00A          	lfsr	2,10
  7556  000542  0100               	movlb	0	; () banked
  7557  000544  51DD               	movf	_ic_ptr& (0+255),w,b
  7558  000546  26D9               	addwf	fsr2l,f,c
  7559  000548  0100               	movlb	0	; () banked
  7560  00054A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7561  00054C  22DA               	addwfc	fsr2h,f,c
  7562  00054E  0E08               	movlw	8
  7563  000550  64DF               	cpfsgt	indf2,c
  7564  000552  D024               	goto	i2l3262
  7565                           
  7566                           ; BSR set to: 0
  7567  000554  0100               	movlb	0	; () banked
  7568  000556  0100               	movlb	0	; () banked
  7569  000558  67C7               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7570  00055A  D020               	goto	i2l3262
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7574  00055C  0100               	movlb	0	; () banked
  7575  00055E  EE20 F00C          	lfsr	2,12
  7576  000562  0100               	movlb	0	; () banked
  7577  000564  51DD               	movf	_ic_ptr& (0+255),w,b
  7578  000566  26D9               	addwf	fsr2l,f,c
  7579  000568  0100               	movlb	0	; () banked
  7580  00056A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7581  00056C  22DA               	addwfc	fsr2h,f,c
  7582  00056E  0E05               	movlw	5
  7583  000570  6EDF               	movwf	indf2,c
  7584                           
  7585                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7586  000572  0100               	movlb	0	; () banked
  7587  000574  EE20 F00E          	lfsr	2,14
  7588  000578  0100               	movlb	0	; () banked
  7589  00057A  51DD               	movf	_ic_ptr& (0+255),w,b
  7590  00057C  26D9               	addwf	fsr2l,f,c
  7591  00057E  0100               	movlb	0	; () banked
  7592  000580  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7593  000582  22DA               	addwfc	fsr2h,f,c
  7594  000584  2ADF               	incf	indf2,f,c
  7595                           
  7596                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7597  000586  0100               	movlb	0	; () banked
  7598  000588  EE20 F00D          	lfsr	2,13
  7599  00058C  0100               	movlb	0	; () banked
  7600  00058E  51DD               	movf	_ic_ptr& (0+255),w,b
  7601  000590  26D9               	addwf	fsr2l,f,c
  7602  000592  0100               	movlb	0	; () banked
  7603  000594  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  000596  22DA               	addwfc	fsr2h,f,c
  7605  000598  0E07               	movlw	7
  7606  00059A  6EDF               	movwf	indf2,c
  7607  00059C                     i2l3262:
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;my_i2c.c: 245: }
  7611                           ;my_i2c.c: 247: if (msg_ready) {
  7612  00059C  0100               	movlb	0	; () banked
  7613  00059E  0100               	movlb	0	; () banked
  7614  0005A0  51C7               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7615  0005A2  B4D8               	btfsc	status,2,c
  7616  0005A4  D048               	goto	i2l3270
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7620  0005A6  0100               	movlb	0	; () banked
  7621  0005A8  EE20 F00B          	lfsr	2,11
  7622  0005AC  0100               	movlb	0	; () banked
  7623  0005AE  51DD               	movf	_ic_ptr& (0+255),w,b
  7624  0005B0  26D9               	addwf	fsr2l,f,c
  7625  0005B2  0100               	movlb	0	; () banked
  7626  0005B4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7627  0005B6  22DA               	addwfc	fsr2h,f,c
  7628  0005B8  0100               	movlb	0	; () banked
  7629  0005BA  EE10 F00A          	lfsr	1,10
  7630  0005BE  0100               	movlb	0	; () banked
  7631  0005C0  51DD               	movf	_ic_ptr& (0+255),w,b
  7632  0005C2  26E1               	addwf	fsr1l,f,c
  7633  0005C4  0100               	movlb	0	; () banked
  7634  0005C6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  0005C8  22E2               	addwfc	fsr1h,f,c
  7636  0005CA  50E7               	movf	indf1,w,c
  7637  0005CC  0100               	movlb	0	; () banked
  7638  0005CE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7639  0005D0  0100               	movlb	0	; () banked
  7640  0005D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7641  0005D4  0D01               	mullw	1
  7642  0005D6  50F3               	movf	prodl,w,c
  7643  0005D8  0100               	movlb	0	; () banked
  7644  0005DA  0100               	movlb	0	; () banked
  7645  0005DC  25DD               	addwf	_ic_ptr& (0+255),w,b
  7646  0005DE  6EE1               	movwf	fsr1l,c
  7647  0005E0  50F4               	movf	prodh,w,c
  7648  0005E2  0100               	movlb	0	; () banked
  7649  0005E4  0100               	movlb	0	; () banked
  7650  0005E6  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7651  0005E8  6EE2               	movwf	fsr1h,c
  7652  0005EA  CFDF FFE7          	movff	indf2,indf1
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7656  0005EE  0100               	movlb	0	; () banked
  7657  0005F0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7658  0005F2  0E28               	movlw	40
  7659  0005F4  0100               	movlb	0	; () banked
  7660  0005F6  0100               	movlb	0	; () banked
  7661  0005F8  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7662  0005FA  0100               	movlb	0	; () banked
  7663  0005FC  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7664  0005FE  0100               	movlb	0	; () banked
  7665  000600  0100               	movlb	0	; () banked
  7666  000602  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7667  000606  0100               	movlb	0	; () banked
  7668  000608  0100               	movlb	0	; () banked
  7669  00060A  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7670  00060E  0100               	movlb	0	; () banked
  7671  000610  EE20 F00A          	lfsr	2,10
  7672  000614  0100               	movlb	0	; () banked
  7673  000616  51DD               	movf	_ic_ptr& (0+255),w,b
  7674  000618  26D9               	addwf	fsr2l,f,c
  7675  00061A  0100               	movlb	0	; () banked
  7676  00061C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7677  00061E  22DA               	addwfc	fsr2h,f,c
  7678  000620  50DF               	movf	indf2,w,c
  7679  000622  0100               	movlb	0	; () banked
  7680  000624  6FBF               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7681  000626  0100               	movlb	0	; () banked
  7682  000628  29BF               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7683  00062A  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7684                           
  7685                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7686  00062E  0100               	movlb	0	; () banked
  7687  000630  EE20 F00A          	lfsr	2,10
  7688  000634  D04B               	goto	L10
  7689  000636                     i2l3270:
  7690                           
  7691                           ; BSR set to: 0
  7692  000636  0100               	movlb	0	; () banked
  7693  000638  EE20 F00E          	lfsr	2,14
  7694  00063C  0100               	movlb	0	; () banked
  7695  00063E  51DD               	movf	_ic_ptr& (0+255),w,b
  7696  000640  26D9               	addwf	fsr2l,f,c
  7697  000642  0100               	movlb	0	; () banked
  7698  000644  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7699  000646  22DA               	addwfc	fsr2h,f,c
  7700  000648  50DF               	movf	indf2,w,c
  7701  00064A  B4D8               	btfsc	status,2,c
  7702  00064C  D047               	goto	i2l3278
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7706  00064E  0100               	movlb	0	; () banked
  7707  000650  EE20 F00E          	lfsr	2,14
  7708  000654  0100               	movlb	0	; () banked
  7709  000656  51DD               	movf	_ic_ptr& (0+255),w,b
  7710  000658  26D9               	addwf	fsr2l,f,c
  7711  00065A  0100               	movlb	0	; () banked
  7712  00065C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7713  00065E  22DA               	addwfc	fsr2h,f,c
  7714  000660  50DF               	movf	indf2,w,c
  7715  000662  0100               	movlb	0	; () banked
  7716  000664  0100               	movlb	0	; () banked
  7717  000666  6FC0               	movwf	i2c_int_handler@error_buf& (0+255),b
  7718                           
  7719                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7720  000668  0100               	movlb	0	; () banked
  7721  00066A  EE20 F00D          	lfsr	2,13
  7722  00066E  0100               	movlb	0	; () banked
  7723  000670  51DD               	movf	_ic_ptr& (0+255),w,b
  7724  000672  26D9               	addwf	fsr2l,f,c
  7725  000674  0100               	movlb	0	; () banked
  7726  000676  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7727  000678  22DA               	addwfc	fsr2h,f,c
  7728  00067A  50DF               	movf	indf2,w,c
  7729  00067C  0100               	movlb	0	; () banked
  7730  00067E  0100               	movlb	0	; () banked
  7731  000680  6FC1               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7732                           
  7733                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7734  000682  0100               	movlb	0	; () banked
  7735  000684  EE20 F00B          	lfsr	2,11
  7736  000688  0100               	movlb	0	; () banked
  7737  00068A  51DD               	movf	_ic_ptr& (0+255),w,b
  7738  00068C  26D9               	addwf	fsr2l,f,c
  7739  00068E  0100               	movlb	0	; () banked
  7740  000690  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7741  000692  22DA               	addwfc	fsr2h,f,c
  7742  000694  50DF               	movf	indf2,w,c
  7743  000696  0100               	movlb	0	; () banked
  7744  000698  0100               	movlb	0	; () banked
  7745  00069A  6FC2               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7749  00069C  0100               	movlb	0	; () banked
  7750  00069E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7751  0006A0  0E29               	movlw	41
  7752  0006A2  0100               	movlb	0	; () banked
  7753  0006A4  0100               	movlb	0	; () banked
  7754  0006A6  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7755  0006A8  0100               	movlb	0	; () banked
  7756  0006AA  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7757  0006AC  0100               	movlb	0	; () banked
  7758  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  7759  0006B0  0100               	movlb	0	; () banked
  7760  0006B2  0100               	movlb	0	; () banked
  7761  0006B4  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7762  0006B6  0100               	movlb	0	; () banked
  7763  0006B8  0EC0               	movlw	low i2c_int_handler@error_buf
  7764  0006BA  0100               	movlb	0	; () banked
  7765  0006BC  0100               	movlb	0	; () banked
  7766  0006BE  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7767  0006C0  0E03               	movlw	3
  7768  0006C2  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7769                           
  7770                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7771  0006C6  0100               	movlb	0	; () banked
  7772  0006C8  EE20 F00E          	lfsr	2,14
  7773  0006CC                     L10:
  7774  0006CC  0100               	movlb	0	; () banked
  7775  0006CE  51DD               	movf	_ic_ptr& (0+255),w,b
  7776  0006D0  26D9               	addwf	fsr2l,f,c
  7777  0006D2  0100               	movlb	0	; () banked
  7778  0006D4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7779  0006D6  22DA               	addwfc	fsr2h,f,c
  7780  0006D8  0E00               	movlw	0
  7781  0006DA  6EDF               	movwf	indf2,c
  7782  0006DC                     i2l3278:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;my_i2c.c: 257: }
  7786                           ;my_i2c.c: 258: if (msg_to_send) {
  7787  0006DC  0100               	movlb	0	; () banked
  7788  0006DE  0100               	movlb	0	; () banked
  7789  0006E0  51C6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7790  0006E2  B4D8               	btfsc	status,2,c
  7791  0006E4  0012               	return	
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7795  0006E6  0100               	movlb	0	; () banked
  7796  0006E8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7797  0006EA  0E2A               	movlw	42
  7798  0006EC  0100               	movlb	0	; () banked
  7799  0006EE  0100               	movlb	0	; () banked
  7800  0006F0  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7801  0006F2  0100               	movlb	0	; () banked
  7802  0006F4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7803  0006F6  0100               	movlb	0	; () banked
  7804  0006F8  0100               	movlb	0	; () banked
  7805  0006FA  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7806  0006FE  0100               	movlb	0	; () banked
  7807  000700  0100               	movlb	0	; () banked
  7808  000702  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7809  000706  0E00               	movlw	0
  7810  000708  ECA3  F00D         	call	_ToMainHigh_sendmsg
  7811                           
  7812                           ;my_i2c.c: 261: msg_to_send = 0;
  7813  00070C  0100               	movlb	0	; () banked
  7814  00070E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7815  000710  0E00               	movlw	0
  7816  000712  0100               	movlb	0	; () banked
  7817  000714  0100               	movlb	0	; () banked
  7818  000716  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7819  000718  0100               	movlb	0	; () banked
  7820  00071A  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7821  00071C  0012               	return	
  7822  00071E                     __end_of_i2c_int_handler:
  7823                           	opt stack 0
  7824                           pclatu	equ	0xFFB
  7825                           pclath	equ	0xFFA
  7826                           tblptru	equ	0xFF8
  7827                           tblptrh	equ	0xFF7
  7828                           tblptrl	equ	0xFF6
  7829                           tablat	equ	0xFF5
  7830                           prodh	equ	0xFF4
  7831                           prodl	equ	0xFF3
  7832                           intcon	equ	0xFF2
  7833                           postinc0	equ	0xFEE
  7834                           fsr0h	equ	0xFEA
  7835                           fsr0l	equ	0xFE9
  7836                           wreg	equ	0xFE8
  7837                           indf1	equ	0xFE7
  7838                           fsr1h	equ	0xFE2
  7839                           fsr1l	equ	0xFE1
  7840                           bsr	equ	0xFE0
  7841                           indf2	equ	0xFDF
  7842                           postinc2	equ	0xFDE
  7843                           postdec2	equ	0xFDD
  7844                           fsr2h	equ	0xFDA
  7845                           fsr2l	equ	0xFD9
  7846                           status	equ	0xFD8
  7847                           
  7848 ;; *************** function _handle_start *****************
  7849 ;; Defined at:
  7850 ;;		line 71 in file "src/my_i2c.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  data_read       1    wreg     unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  data_read       1   52[COMRAM] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7864 ;;      Params:         0       0       0       0       0
  7865 ;;      Locals:         1       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0
  7867 ;;      Totals:         1       0       0       0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_i2c_int_handler
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text47
  7878  00111E                     __ptext47:
  7879                           	opt stack 0
  7880  00111E                     _handle_start:
  7881                           	opt stack 19
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;incstack = 0
  7885                           ;handle_start@data_read stored from wreg
  7886  00111E  CFE8 F035          	movff	wreg,handle_start@data_read
  7887                           
  7888                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7889  001122  0100               	movlb	0	; () banked
  7890  001124  EE20 F00B          	lfsr	2,11
  7891  001128  0100               	movlb	0	; () banked
  7892  00112A  51DD               	movf	_ic_ptr& (0+255),w,b
  7893  00112C  26D9               	addwf	fsr2l,f,c
  7894  00112E  0100               	movlb	0	; () banked
  7895  001130  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7896  001132  22DA               	addwfc	fsr2h,f,c
  7897  001134  0E01               	movlw	1
  7898  001136  6EDF               	movwf	indf2,c
  7899                           
  7900                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7901  001138  0100               	movlb	0	; () banked
  7902  00113A  EE20 F00A          	lfsr	2,10
  7903  00113E  0100               	movlb	0	; () banked
  7904  001140  51DD               	movf	_ic_ptr& (0+255),w,b
  7905  001142  26D9               	addwf	fsr2l,f,c
  7906  001144  0100               	movlb	0	; () banked
  7907  001146  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7908  001148  22DA               	addwfc	fsr2h,f,c
  7909  00114A  0E00               	movlw	0
  7910  00114C  6EDF               	movwf	indf2,c
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;my_i2c.c: 75: if (data_read) {
  7914  00114E  5035               	movf	handle_start@data_read,w,c
  7915  001150  B4D8               	btfsc	status,2,c
  7916  001152  D03D               	goto	i2l3686
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7920  001154  AAC7               	btfss	4039,5,c	;volatile
  7921  001156  D021               	goto	i2l257
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7925  001158  0100               	movlb	0	; () banked
  7926  00115A  EE20 F00C          	lfsr	2,12
  7927  00115E  0100               	movlb	0	; () banked
  7928  001160  51DD               	movf	_ic_ptr& (0+255),w,b
  7929  001162  26D9               	addwf	fsr2l,f,c
  7930  001164  0100               	movlb	0	; () banked
  7931  001166  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7932  001168  22DA               	addwfc	fsr2h,f,c
  7933  00116A  0E05               	movlw	5
  7934  00116C  6EDF               	movwf	indf2,c
  7935                           
  7936                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7937  00116E  0100               	movlb	0	; () banked
  7938  001170  EE20 F00E          	lfsr	2,14
  7939  001174  0100               	movlb	0	; () banked
  7940  001176  51DD               	movf	_ic_ptr& (0+255),w,b
  7941  001178  26D9               	addwf	fsr2l,f,c
  7942  00117A  0100               	movlb	0	; () banked
  7943  00117C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7944  00117E  22DA               	addwfc	fsr2h,f,c
  7945  001180  2ADF               	incf	indf2,f,c
  7946                           
  7947                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7948  001182  0100               	movlb	0	; () banked
  7949  001184  EE20 F00D          	lfsr	2,13
  7950  001188  0100               	movlb	0	; () banked
  7951  00118A  51DD               	movf	_ic_ptr& (0+255),w,b
  7952  00118C  26D9               	addwf	fsr2l,f,c
  7953  00118E  0100               	movlb	0	; () banked
  7954  001190  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7955  001192  22DA               	addwfc	fsr2h,f,c
  7956  001194  0E05               	movlw	5
  7957  001196  6EDF               	movwf	indf2,c
  7958                           
  7959                           ;my_i2c.c: 82: } else {
  7960  001198  0012               	return	
  7961  00119A                     i2l257:
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7965  00119A  A4C7               	btfss	4039,2,c	;volatile
  7966  00119C  D00C               	goto	i2l3684
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7970  00119E  0100               	movlb	0	; () banked
  7971  0011A0  EE20 F00C          	lfsr	2,12
  7972  0011A4  0100               	movlb	0	; () banked
  7973  0011A6  51DD               	movf	_ic_ptr& (0+255),w,b
  7974  0011A8  26D9               	addwf	fsr2l,f,c
  7975  0011AA  0100               	movlb	0	; () banked
  7976  0011AC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  0011AE  22DA               	addwfc	fsr2h,f,c
  7978  0011B0  0E08               	movlw	8
  7979  0011B2  6EDF               	movwf	indf2,c
  7980                           
  7981                           ;my_i2c.c: 85: } else {
  7982  0011B4  0012               	return	
  7983  0011B6                     i2l3684:
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7987  0011B6  0100               	movlb	0	; () banked
  7988  0011B8  EE20 F00C          	lfsr	2,12
  7989  0011BC  0100               	movlb	0	; () banked
  7990  0011BE  51DD               	movf	_ic_ptr& (0+255),w,b
  7991  0011C0  26D9               	addwf	fsr2l,f,c
  7992  0011C2  0100               	movlb	0	; () banked
  7993  0011C4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7994  0011C6  22DA               	addwfc	fsr2h,f,c
  7995  0011C8  0E07               	movlw	7
  7996  0011CA  6EDF               	movwf	indf2,c
  7997  0011CC  0012               	return	
  7998  0011CE                     i2l3686:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8002  0011CE  0100               	movlb	0	; () banked
  8003  0011D0  EE20 F00C          	lfsr	2,12
  8004  0011D4  0100               	movlb	0	; () banked
  8005  0011D6  51DD               	movf	_ic_ptr& (0+255),w,b
  8006  0011D8  26D9               	addwf	fsr2l,f,c
  8007  0011DA  0100               	movlb	0	; () banked
  8008  0011DC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8009  0011DE  22DA               	addwfc	fsr2h,f,c
  8010  0011E0  0E06               	movlw	6
  8011  0011E2  6EDF               	movwf	indf2,c
  8012  0011E4  0012               	return	
  8013  0011E6                     __end_of_handle_start:
  8014                           	opt stack 0
  8015                           pclatu	equ	0xFFB
  8016                           pclath	equ	0xFFA
  8017                           tblptru	equ	0xFF8
  8018                           tblptrh	equ	0xFF7
  8019                           tblptrl	equ	0xFF6
  8020                           tablat	equ	0xFF5
  8021                           prodh	equ	0xFF4
  8022                           prodl	equ	0xFF3
  8023                           intcon	equ	0xFF2
  8024                           postinc0	equ	0xFEE
  8025                           fsr0h	equ	0xFEA
  8026                           fsr0l	equ	0xFE9
  8027                           wreg	equ	0xFE8
  8028                           indf1	equ	0xFE7
  8029                           fsr1h	equ	0xFE2
  8030                           fsr1l	equ	0xFE1
  8031                           bsr	equ	0xFE0
  8032                           indf2	equ	0xFDF
  8033                           postinc2	equ	0xFDE
  8034                           postdec2	equ	0xFDD
  8035                           fsr2h	equ	0xFDA
  8036                           fsr2l	equ	0xFD9
  8037                           status	equ	0xFD8
  8038                           
  8039 ;; *************** function _ToMainHigh_sendmsg *****************
  8040 ;; Defined at:
  8041 ;;		line 126 in file "src/messages.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  length          1    wreg     unsigned char 
  8044 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8045 ;;  data            2    6[BANK0 ] PTR void 
  8046 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  length          1   69[COMRAM] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      char 
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8058 ;;      Params:         0       3       0       0       0
  8059 ;;      Locals:         1       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0
  8061 ;;      Totals:         1       3       0       0       0
  8062 ;;Total ram usage:        4 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    2
  8065 ;; This function calls:
  8066 ;;		i2_send_msg
  8067 ;; This function is called by:
  8068 ;;		_i2c_int_handler
  8069 ;;		_timer0_int_handler
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text48
  8074  001B46                     __ptext48:
  8075                           	opt stack 0
  8076  001B46                     _ToMainHigh_sendmsg:
  8077                           	opt stack 17
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;incstack = 0
  8081                           ;ToMainHigh_sendmsg@length stored from wreg
  8082  001B46  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  8083                           
  8084                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8085                           ;	Return value of _ToMainHigh_sendmsg is never used
  8086  001B4A  0101               	movlb	1	; () banked
  8087  001B4C  0E01               	movlw	high _ToMainHigh_MQ
  8088  001B4E  6E40               	movwf	i2send_msg@qptr+1,c
  8089  001B50  0101               	movlb	1	; () banked
  8090  001B52  0E6C               	movlw	low _ToMainHigh_MQ
  8091  001B54  6E3F               	movwf	i2send_msg@qptr,c
  8092  001B56  C046  F041         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8093  001B5A  C0BB  F042         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8094  001B5E  0100               	movlb	0	; () banked
  8095  001B60  C0BD  F044         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8096  001B64  0100               	movlb	0	; () banked
  8097  001B66  C0BC  F043         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8098  001B6A  EC26  F008         	call	i2_send_msg	;wreg free
  8099  001B6E  0012               	return	
  8100  001B70                     __end_of_ToMainHigh_sendmsg:
  8101                           	opt stack 0
  8102                           pclatu	equ	0xFFB
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           postinc0	equ	0xFEE
  8112                           fsr0h	equ	0xFEA
  8113                           fsr0l	equ	0xFE9
  8114                           wreg	equ	0xFE8
  8115                           indf1	equ	0xFE7
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           bsr	equ	0xFE0
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function i2_send_msg *****************
  8127 ;; Defined at:
  8128 ;;		line 24 in file "src/messages.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  8131 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8132 ;;  length          1   64[COMRAM] unsigned char 
  8133 ;;  msgtype         1   65[COMRAM] unsigned char 
  8134 ;;  data            2   66[COMRAM] PTR void 
  8135 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8136 ;;		 -> main@ic(28), main@uc(5), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8139 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8140 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8141 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8142 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      char 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8152 ;;      Params:         6       0       0       0       0
  8153 ;;      Locals:         0       5       0       0       0
  8154 ;;      Temps:          1       0       0       0       0
  8155 ;;      Totals:         7       5       0       0       0
  8156 ;;Total ram usage:       12 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    1
  8159 ;; This function calls:
  8160 ;;		i2_memcpy
  8161 ;; This function is called by:
  8162 ;;		_ToMainHigh_sendmsg
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text49
  8167  00104C                     __ptext49:
  8168                           	opt stack 0
  8169  00104C                     i2_send_msg:
  8170                           	opt stack 17
  8171                           
  8172                           ;messages.c: 25: unsigned char slot;
  8173                           ;messages.c: 27: msg *qmsg;
  8174                           ;messages.c: 28: size_t tlength = length;
  8175                           
  8176                           ;incstack = 0
  8177  00104C  0100               	movlb	0	; () banked
  8178  00104E  C041  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8179  001052  0100               	movlb	0	; () banked
  8180  001054  0100               	movlb	0	; () banked
  8181  001056  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8185  001058  EE20 F034          	lfsr	2,52
  8186  00105C  503F               	movf	i2send_msg@qptr,w,c
  8187  00105E  26D9               	addwf	fsr2l,f,c
  8188  001060  5040               	movf	i2send_msg@qptr+1,w,c
  8189  001062  22DA               	addwfc	fsr2h,f,c
  8190  001064  50DF               	movf	indf2,w,c
  8191  001066  0100               	movlb	0	; () banked
  8192  001068  0100               	movlb	0	; () banked
  8193  00106A  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8197  00106C  0100               	movlb	0	; () banked
  8198  00106E  0100               	movlb	0	; () banked
  8199  001070  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8200  001072  0D0D               	mullw	13
  8201  001074  50F3               	movf	prodl,w,c
  8202  001076  243F               	addwf	i2send_msg@qptr,w,c
  8203  001078  0100               	movlb	0	; () banked
  8204  00107A  0100               	movlb	0	; () banked
  8205  00107C  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8206  00107E  50F4               	movf	prodh,w,c
  8207  001080  2040               	addwfc	i2send_msg@qptr+1,w,c
  8208  001082  0100               	movlb	0	; () banked
  8209  001084  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;messages.c: 41: if (qmsg->full != 0) {
  8213  001086  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8214  00108A  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8215  00108E  50DF               	movf	indf2,w,c
  8216  001090  B4D8               	btfsc	status,2,c
  8217  001092  D002               	goto	i2l3742
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;messages.c: 42: return (-1);
  8221  001094  0EFF               	movlw	255
  8222  001096  0012               	return	
  8223  001098                     i2l3742:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;messages.c: 43: }
  8227                           ;messages.c: 46: qmsg->length = length;
  8228  001098  0100               	movlb	0	; () banked
  8229  00109A  EE20 F001          	lfsr	2,1
  8230  00109E  0100               	movlb	0	; () banked
  8231  0010A0  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8232  0010A2  26D9               	addwf	fsr2l,f,c
  8233  0010A4  0100               	movlb	0	; () banked
  8234  0010A6  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8235  0010A8  22DA               	addwfc	fsr2h,f,c
  8236  0010AA  C041  FFDF         	movff	i2send_msg@length,indf2
  8237                           
  8238                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8239  0010AE  0100               	movlb	0	; () banked
  8240  0010B0  EE20 F002          	lfsr	2,2
  8241  0010B4  0100               	movlb	0	; () banked
  8242  0010B6  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8243  0010B8  26D9               	addwf	fsr2l,f,c
  8244  0010BA  0100               	movlb	0	; () banked
  8245  0010BC  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8246  0010BE  22DA               	addwfc	fsr2h,f,c
  8247  0010C0  C042  FFDF         	movff	i2send_msg@msgtype,indf2
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8251  0010C4  0E03               	movlw	3
  8252  0010C6  0100               	movlb	0	; () banked
  8253  0010C8  0100               	movlb	0	; () banked
  8254  0010CA  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8255  0010CC  6E35               	movwf	i2memcpy@d1,c
  8256  0010CE  0E00               	movlw	0
  8257  0010D0  0100               	movlb	0	; () banked
  8258  0010D2  0100               	movlb	0	; () banked
  8259  0010D4  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8260  0010D6  6E36               	movwf	i2memcpy@d1+1,c
  8261  0010D8  C044  F038         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8262  0010DC  C043  F037         	movff	i2send_msg@data,i2memcpy@s1
  8263  0010E0  C0B6  F039         	movff	i2send_msg@tlength,i2memcpy@n
  8264  0010E4  C0B7  F03A         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8265  0010E8  ECB9  F00C         	call	i2_memcpy	;wreg free
  8266                           
  8267                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8268  0010EC  EE20 F034          	lfsr	2,52
  8269  0010F0  503F               	movf	i2send_msg@qptr,w,c
  8270  0010F2  26D9               	addwf	fsr2l,f,c
  8271  0010F4  5040               	movf	i2send_msg@qptr+1,w,c
  8272  0010F6  22DA               	addwfc	fsr2h,f,c
  8273  0010F8  EE10 F034          	lfsr	1,52
  8274  0010FC  503F               	movf	i2send_msg@qptr,w,c
  8275  0010FE  26E1               	addwf	fsr1l,f,c
  8276  001100  5040               	movf	i2send_msg@qptr+1,w,c
  8277  001102  22E2               	addwfc	fsr1h,f,c
  8278  001104  50E7               	movf	indf1,w,c
  8279  001106  6E45               	movwf	??i2_send_msg& (0+255),c
  8280  001108  2845               	incf	??i2_send_msg,w,c
  8281  00110A  0B03               	andlw	3
  8282  00110C  6EDF               	movwf	indf2,c
  8283                           
  8284                           ;messages.c: 59: qmsg->full = 1;
  8285  00110E  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8286  001112  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8287  001116  0E01               	movlw	1
  8288  001118  6EDF               	movwf	indf2,c
  8289                           
  8290                           ;messages.c: 60: return (1);
  8291  00111A  0E01               	movlw	1
  8292  00111C  0012               	return	
  8293  00111E                     __end_ofi2_send_msg:
  8294                           	opt stack 0
  8295                           pclatu	equ	0xFFB
  8296                           pclath	equ	0xFFA
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           intcon	equ	0xFF2
  8304                           postinc0	equ	0xFEE
  8305                           fsr0h	equ	0xFEA
  8306                           fsr0l	equ	0xFE9
  8307                           wreg	equ	0xFE8
  8308                           indf1	equ	0xFE7
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           bsr	equ	0xFE0
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319 ;; *************** function i2_memcpy *****************
  8320 ;; Defined at:
  8321 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  d1              2   52[COMRAM] PTR void 
  8324 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8325 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8326 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8327 ;;  s1              2   54[COMRAM] PTR const void 
  8328 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8329 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8330 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8331 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8332 ;;		 -> main@ic(28), main@uc(5), 
  8333 ;;  n               2   56[COMRAM] unsigned int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  memcpy          2   60[COMRAM] PTR const unsigned char 
  8336 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8337 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8338 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8339 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8340 ;;		 -> main@ic(28), main@uc(5), 
  8341 ;;  memcpy          2   58[COMRAM] PTR unsigned char 
  8342 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8343 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8344 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  2   52[COMRAM] PTR void 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8354 ;;      Params:         6       0       0       0       0
  8355 ;;      Locals:         4       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0
  8357 ;;      Totals:        10       0       0       0       0
  8358 ;;Total ram usage:       10 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		i2_send_msg
  8364 ;;		i2_recv_msg
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text50
  8369  001972                     __ptext50:
  8370                           	opt stack 0
  8371  001972                     i2_memcpy:
  8372                           	opt stack 17
  8373                           
  8374                           ;incstack = 0
  8375  001972  C038  F03E         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8376  001976  C037  F03D         	movff	i2memcpy@s1,i2memcpy@s
  8377  00197A  C036  F03C         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8378  00197E  C035  F03B         	movff	i2memcpy@d1,i2memcpy@d
  8379  001982  D00E               	goto	i2l3804
  8380  001984                     i2l3798:
  8381  001984  C03D  FFD9         	movff	i2memcpy@s,fsr2l
  8382  001988  C03E  FFDA         	movff	i2memcpy@s+1,fsr2h
  8383  00198C  C03B  FFE1         	movff	i2memcpy@d,fsr1l
  8384  001990  C03C  FFE2         	movff	i2memcpy@d+1,fsr1h
  8385  001994  CFDF FFE7          	movff	indf2,indf1
  8386  001998  4A3D               	infsnz	i2memcpy@s,f,c
  8387  00199A  2A3E               	incf	i2memcpy@s+1,f,c
  8388  00199C  4A3B               	infsnz	i2memcpy@d,f,c
  8389  00199E  2A3C               	incf	i2memcpy@d+1,f,c
  8390  0019A0                     i2l3804:
  8391  0019A0  0639               	decf	i2memcpy@n,f,c
  8392  0019A2  A0D8               	btfss	status,0,c
  8393  0019A4  063A               	decf	i2memcpy@n+1,f,c
  8394  0019A6  2839               	incf	i2memcpy@n& (0+255),w,c
  8395  0019A8  B4D8               	btfsc	status,2,c
  8396  0019AA  283A               	incf	(i2memcpy@n+1)& (0+255),w,c
  8397  0019AC  B4D8               	btfsc	status,2,c
  8398                           
  8399                           ;	Return value of i2_memcpy is never used
  8400  0019AE  0012               	return	
  8401  0019B0  D7E9               	goto	i2l3798
  8402  0019B2                     __end_ofi2_memcpy:
  8403                           	opt stack 0
  8404                           pclatu	equ	0xFFB
  8405                           pclath	equ	0xFFA
  8406                           tblptru	equ	0xFF8
  8407                           tblptrh	equ	0xFF7
  8408                           tblptrl	equ	0xFF6
  8409                           tablat	equ	0xFF5
  8410                           prodh	equ	0xFF4
  8411                           prodl	equ	0xFF3
  8412                           intcon	equ	0xFF2
  8413                           postinc0	equ	0xFEE
  8414                           fsr0h	equ	0xFEA
  8415                           fsr0l	equ	0xFE9
  8416                           wreg	equ	0xFE8
  8417                           indf1	equ	0xFE7
  8418                           fsr1h	equ	0xFE2
  8419                           fsr1l	equ	0xFE1
  8420                           bsr	equ	0xFE0
  8421                           indf2	equ	0xFDF
  8422                           postinc2	equ	0xFDE
  8423                           postdec2	equ	0xFDD
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _SleepIfOkay *****************
  8429 ;; Defined at:
  8430 ;;		line 228 in file "src/messages.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;		None               void
  8437 ;; Registers used:
  8438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8444 ;;      Params:         0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    2
  8451 ;; This function calls:
  8452 ;;		_enter_sleep_mode
  8453 ;;		i2_check_msg
  8454 ;;		i2_in_high_int
  8455 ;;		i2_in_low_int
  8456 ;; This function is called by:
  8457 ;;		_InterruptHandlerHigh
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text51
  8462  0017D6                     __ptext51:
  8463                           	opt stack 0
  8464  0017D6                     _SleepIfOkay:
  8465                           	opt stack 18
  8466                           
  8467                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8468                           
  8469                           ;incstack = 0
  8470  0017D6  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  8471  0017D8  D001               	goto	i2l2398
  8472  0017DA  0012               	return	
  8473  0017DC                     i2l2398:
  8474                           
  8475                           ;messages.c: 232: }
  8476                           ;messages.c: 235: if (in_low_int()) {
  8477  0017DC  EC77  F00D         	call	i2_in_low_int	;wreg free
  8478  0017E0  5038               	movf	?i2_in_low_int+1,w,c
  8479  0017E2  1037               	iorwf	?i2_in_low_int,w,c
  8480  0017E4  A4D8               	btfss	status,2,c
  8481  0017E6  0012               	return	
  8482                           
  8483                           ;messages.c: 237: }
  8484                           ;messages.c: 240: if (!in_high_int()) {
  8485                           
  8486                           ;messages.c: 236: return;
  8487  0017E8  EC77  F00E         	call	i2_in_high_int	;wreg free
  8488  0017EC  5036               	movf	?i2_in_high_int+1,w,c
  8489  0017EE  1035               	iorwf	?i2_in_high_int,w,c
  8490  0017F0  B4D8               	btfsc	status,2,c
  8491  0017F2  0012               	return	
  8492                           
  8493                           ;messages.c: 242: }
  8494                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8495                           
  8496                           ;messages.c: 241: return;
  8497  0017F4  0101               	movlb	1	; () banked
  8498  0017F6  0E01               	movlw	high _ToMainHigh_MQ
  8499  0017F8  6E36               	movwf	i2check_msg@qptr+1,c
  8500  0017FA  0101               	movlb	1	; () banked
  8501  0017FC  0E6C               	movlw	low _ToMainHigh_MQ
  8502  0017FE  6E35               	movwf	i2check_msg@qptr,c
  8503  001800  EC06  F00E         	call	i2_check_msg	;wreg free
  8504  001804  0900               	iorlw	0
  8505  001806  A4D8               	btfss	status,2,c
  8506  001808  0012               	return	
  8507                           
  8508                           ;messages.c: 249: }
  8509                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8510                           
  8511                           ;messages.c: 248: return;
  8512  00180A  0100               	movlb	0	; () banked
  8513  00180C  0E00               	movlw	high _ToMainLow_MQ
  8514  00180E  6E36               	movwf	i2check_msg@qptr+1,c
  8515  001810  0100               	movlb	0	; () banked
  8516  001812  0E80               	movlw	low _ToMainLow_MQ
  8517  001814  6E35               	movwf	i2check_msg@qptr,c
  8518  001816  EC06  F00E         	call	i2_check_msg	;wreg free
  8519  00181A  0900               	iorlw	0
  8520  00181C  B4D8               	btfsc	status,2,c
  8521                           
  8522                           ;messages.c: 252: }
  8523                           ;messages.c: 253: enter_sleep_mode();
  8524                           
  8525                           ;messages.c: 251: return;
  8526  00181E  EC81  F00E         	call	_enter_sleep_mode	;wreg free
  8527  001822  0012               	return	
  8528  001824                     __end_of_SleepIfOkay:
  8529                           	opt stack 0
  8530                           pclatu	equ	0xFFB
  8531                           pclath	equ	0xFFA
  8532                           tblptru	equ	0xFF8
  8533                           tblptrh	equ	0xFF7
  8534                           tblptrl	equ	0xFF6
  8535                           tablat	equ	0xFF5
  8536                           prodh	equ	0xFF4
  8537                           prodl	equ	0xFF3
  8538                           intcon	equ	0xFF2
  8539                           postinc0	equ	0xFEE
  8540                           fsr0h	equ	0xFEA
  8541                           fsr0l	equ	0xFE9
  8542                           wreg	equ	0xFE8
  8543                           indf1	equ	0xFE7
  8544                           fsr1h	equ	0xFE2
  8545                           fsr1l	equ	0xFE1
  8546                           bsr	equ	0xFE0
  8547                           indf2	equ	0xFDF
  8548                           postinc2	equ	0xFDE
  8549                           postdec2	equ	0xFDD
  8550                           fsr2h	equ	0xFDA
  8551                           fsr2l	equ	0xFD9
  8552                           status	equ	0xFD8
  8553                           
  8554 ;; *************** function i2_in_low_int *****************
  8555 ;; Defined at:
  8556 ;;		line 30 in file "src/interrupts.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;		None
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  2   54[COMRAM] int 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, cstack
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8570 ;;      Params:         2       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0
  8572 ;;      Temps:          0       0       0       0       0
  8573 ;;      Totals:         2       0       0       0       0
  8574 ;;Total ram usage:        2 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:    1
  8577 ;; This function calls:
  8578 ;;		i2_in_high_int
  8579 ;; This function is called by:
  8580 ;;		_SleepIfOkay
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text52
  8585  001AEE                     __ptext52:
  8586                           	opt stack 0
  8587  001AEE                     i2_in_low_int:
  8588                           	opt stack 18
  8589                           
  8590                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8591                           
  8592                           ;incstack = 0
  8593  001AEE  ACF2               	btfss	intcon,6,c	;volatile
  8594  001AF0  D005               	goto	i2l2870
  8595                           
  8596                           ;interrupts.c: 32: return (0);
  8597  001AF2  0E00               	movlw	0
  8598  001AF4  6E38               	movwf	?i2_in_low_int+1,c
  8599  001AF6  0E00               	movlw	0
  8600  001AF8  6E37               	movwf	?i2_in_low_int,c
  8601  001AFA  0012               	return	
  8602  001AFC                     i2l2870:
  8603  001AFC  EC77  F00E         	call	i2_in_high_int	;wreg free
  8604  001B00  5036               	movf	?i2_in_high_int+1,w,c
  8605  001B02  1035               	iorwf	?i2_in_high_int,w,c
  8606  001B04  B4D8               	btfsc	status,2,c
  8607  001B06  D005               	goto	i2l2878
  8608                           
  8609                           ;interrupts.c: 34: return (0);
  8610  001B08  0E00               	movlw	0
  8611  001B0A  6E38               	movwf	?i2_in_low_int+1,c
  8612  001B0C  0E00               	movlw	0
  8613  001B0E  6E37               	movwf	?i2_in_low_int,c
  8614  001B10  0012               	return	
  8615  001B12                     i2l2878:
  8616                           
  8617                           ;interrupts.c: 36: return (1);
  8618  001B12  0E00               	movlw	0
  8619  001B14  6E38               	movwf	?i2_in_low_int+1,c
  8620  001B16  0E01               	movlw	1
  8621  001B18  6E37               	movwf	?i2_in_low_int,c
  8622  001B1A  0012               	return	
  8623  001B1C                     __end_ofi2_in_low_int:
  8624                           	opt stack 0
  8625                           pclatu	equ	0xFFB
  8626                           pclath	equ	0xFFA
  8627                           tblptru	equ	0xFF8
  8628                           tblptrh	equ	0xFF7
  8629                           tblptrl	equ	0xFF6
  8630                           tablat	equ	0xFF5
  8631                           prodh	equ	0xFF4
  8632                           prodl	equ	0xFF3
  8633                           intcon	equ	0xFF2
  8634                           postinc0	equ	0xFEE
  8635                           fsr0h	equ	0xFEA
  8636                           fsr0l	equ	0xFE9
  8637                           wreg	equ	0xFE8
  8638                           indf1	equ	0xFE7
  8639                           fsr1h	equ	0xFE2
  8640                           fsr1l	equ	0xFE1
  8641                           bsr	equ	0xFE0
  8642                           indf2	equ	0xFDF
  8643                           postinc2	equ	0xFDE
  8644                           postdec2	equ	0xFDD
  8645                           fsr2h	equ	0xFDA
  8646                           fsr2l	equ	0xFD9
  8647                           status	equ	0xFD8
  8648                           
  8649 ;; *************** function i2_in_high_int *****************
  8650 ;; Defined at:
  8651 ;;		line 22 in file "src/interrupts.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  2   52[COMRAM] int 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8665 ;;      Params:         2       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0
  8668 ;;      Totals:         2       0       0       0       0
  8669 ;;Total ram usage:        2 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_SleepIfOkay
  8675 ;;		i2_in_low_int
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text53
  8680  001CEE                     __ptext53:
  8681                           	opt stack 0
  8682  001CEE                     i2_in_high_int:
  8683                           	opt stack 18
  8684                           
  8685                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8686                           
  8687                           ;incstack = 0
  8688  001CEE  0E00               	movlw	0
  8689  001CF0  AEF2               	btfss	intcon,7,c	;volatile
  8690  001CF2  0E01               	movlw	1
  8691  001CF4  6E35               	movwf	?i2_in_high_int,c
  8692  001CF6  6A36               	clrf	?i2_in_high_int+1,c
  8693  001CF8  0012               	return	
  8694  001CFA                     __end_ofi2_in_high_int:
  8695                           	opt stack 0
  8696                           pclatu	equ	0xFFB
  8697                           pclath	equ	0xFFA
  8698                           tblptru	equ	0xFF8
  8699                           tblptrh	equ	0xFF7
  8700                           tblptrl	equ	0xFF6
  8701                           tablat	equ	0xFF5
  8702                           prodh	equ	0xFF4
  8703                           prodl	equ	0xFF3
  8704                           intcon	equ	0xFF2
  8705                           postinc0	equ	0xFEE
  8706                           fsr0h	equ	0xFEA
  8707                           fsr0l	equ	0xFE9
  8708                           wreg	equ	0xFE8
  8709                           indf1	equ	0xFE7
  8710                           fsr1h	equ	0xFE2
  8711                           fsr1l	equ	0xFE1
  8712                           bsr	equ	0xFE0
  8713                           indf2	equ	0xFDF
  8714                           postinc2	equ	0xFDE
  8715                           postdec2	equ	0xFDD
  8716                           fsr2h	equ	0xFDA
  8717                           fsr2l	equ	0xFD9
  8718                           status	equ	0xFD8
  8719                           
  8720 ;; *************** function i2_check_msg *****************
  8721 ;; Defined at:
  8722 ;;		line 222 in file "src/messages.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  qptr            2   52[COMRAM] PTR struct __msg_queue
  8725 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      unsigned char 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8737 ;;      Params:         2       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0
  8739 ;;      Temps:          1       0       0       0       0
  8740 ;;      Totals:         3       0       0       0       0
  8741 ;;Total ram usage:        3 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; This function calls:
  8744 ;;		Nothing
  8745 ;; This function is called by:
  8746 ;;		_SleepIfOkay
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text54
  8751  001C0C                     __ptext54:
  8752                           	opt stack 0
  8753  001C0C                     i2_check_msg:
  8754                           	opt stack 19
  8755                           
  8756                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8757                           
  8758                           ;incstack = 0
  8759  001C0C  EE20 F035          	lfsr	2,53
  8760  001C10  5035               	movf	i2check_msg@qptr,w,c
  8761  001C12  26D9               	addwf	fsr2l,f,c
  8762  001C14  5036               	movf	i2check_msg@qptr+1,w,c
  8763  001C16  22DA               	addwfc	fsr2h,f,c
  8764  001C18  50DF               	movf	indf2,w,c
  8765  001C1A  6E37               	movwf	??i2_check_msg& (0+255),c
  8766  001C1C  5037               	movf	??i2_check_msg,w,c
  8767  001C1E  0D0D               	mullw	13
  8768  001C20  50F3               	movf	prodl,w,c
  8769  001C22  2435               	addwf	i2check_msg@qptr,w,c
  8770  001C24  6ED9               	movwf	fsr2l,c
  8771  001C26  50F4               	movf	prodh,w,c
  8772  001C28  2036               	addwfc	i2check_msg@qptr+1,w,c
  8773  001C2A  6EDA               	movwf	fsr2h,c
  8774  001C2C  50DF               	movf	indf2,w,c
  8775  001C2E  0012               	return	
  8776  001C30                     __end_ofi2_check_msg:
  8777                           	opt stack 0
  8778                           pclatu	equ	0xFFB
  8779                           pclath	equ	0xFFA
  8780                           tblptru	equ	0xFF8
  8781                           tblptrh	equ	0xFF7
  8782                           tblptrl	equ	0xFF6
  8783                           tablat	equ	0xFF5
  8784                           prodh	equ	0xFF4
  8785                           prodl	equ	0xFF3
  8786                           intcon	equ	0xFF2
  8787                           postinc0	equ	0xFEE
  8788                           fsr0h	equ	0xFEA
  8789                           fsr0l	equ	0xFE9
  8790                           wreg	equ	0xFE8
  8791                           indf1	equ	0xFE7
  8792                           fsr1h	equ	0xFE2
  8793                           fsr1l	equ	0xFE1
  8794                           bsr	equ	0xFE0
  8795                           indf2	equ	0xFDF
  8796                           postinc2	equ	0xFDE
  8797                           postdec2	equ	0xFDD
  8798                           fsr2h	equ	0xFDA
  8799                           fsr2l	equ	0xFD9
  8800                           status	equ	0xFD8
  8801                           
  8802 ;; *************** function _enter_sleep_mode *****************
  8803 ;; Defined at:
  8804 ;;		line 202 in file "src/messages.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;		None               void
  8811 ;; Registers used:
  8812 ;;		None
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8818 ;;      Params:         0       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0
  8821 ;;      Totals:         0       0       0       0       0
  8822 ;;Total ram usage:        0 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_SleepIfOkay
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text55
  8832  001D02                     __ptext55:
  8833                           	opt stack 0
  8834  001D02                     _enter_sleep_mode:
  8835                           	opt stack 19
  8836                           
  8837                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8838                           
  8839                           ;incstack = 0
  8840  001D02  8ED3               	bsf	4051,7,c	;volatile
  8841  001D04  0003               	sleep		;# 
  8842  001D06  0012               	return	
  8843  001D08                     __end_of_enter_sleep_mode:
  8844                           	opt stack 0
  8845  0000                     pclatu	equ	0xFFB
  8846                           pclath	equ	0xFFA
  8847                           tblptru	equ	0xFF8
  8848                           tblptrh	equ	0xFF7
  8849                           tblptrl	equ	0xFF6
  8850                           tablat	equ	0xFF5
  8851                           prodh	equ	0xFF4
  8852                           prodl	equ	0xFF3
  8853                           intcon	equ	0xFF2
  8854                           postinc0	equ	0xFEE
  8855                           fsr0h	equ	0xFEA
  8856                           fsr0l	equ	0xFE9
  8857                           wreg	equ	0xFE8
  8858                           indf1	equ	0xFE7
  8859                           fsr1h	equ	0xFE2
  8860                           fsr1l	equ	0xFE1
  8861                           bsr	equ	0xFE0
  8862                           indf2	equ	0xFDF
  8863                           postinc2	equ	0xFDE
  8864                           postdec2	equ	0xFDD
  8865                           fsr2h	equ	0xFDA
  8866                           fsr2l	equ	0xFD9
  8867                           status	equ	0xFD8
  8868                           pclatu	equ	0xFFB
  8869                           pclath	equ	0xFFA
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           postinc0	equ	0xFEE
  8878                           fsr0h	equ	0xFEA
  8879                           fsr0l	equ	0xFE9
  8880                           wreg	equ	0xFE8
  8881                           indf1	equ	0xFE7
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           bsr	equ	0xFE0
  8885                           indf2	equ	0xFDF
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           
  8892                           	psect	rparam
  8893  0000                     pclatu	equ	0xFFB
  8894                           pclath	equ	0xFFA
  8895                           tblptru	equ	0xFF8
  8896                           tblptrh	equ	0xFF7
  8897                           tblptrl	equ	0xFF6
  8898                           tablat	equ	0xFF5
  8899                           prodh	equ	0xFF4
  8900                           prodl	equ	0xFF3
  8901                           intcon	equ	0xFF2
  8902                           postinc0	equ	0xFEE
  8903                           fsr0h	equ	0xFEA
  8904                           fsr0l	equ	0xFE9
  8905                           wreg	equ	0xFE8
  8906                           indf1	equ	0xFE7
  8907                           fsr1h	equ	0xFE2
  8908                           fsr1l	equ	0xFE1
  8909                           bsr	equ	0xFE0
  8910                           indf2	equ	0xFDF
  8911                           postinc2	equ	0xFDE
  8912                           postdec2	equ	0xFDD
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      75
    BANK0           128     39      95
    BANK1           256     32     194
    BANK2           256     63      63
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_OpenUSART
    _send_msg->_memcpy
    _timer1_lthread->___lwmod
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   12342
                                             31 BANK1      1     1      0
                                              0 BANK2     63    63      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3094
                                             20 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2309
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                              4 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     0      8     672
                                              0 BANK1      8     0      8
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             33 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             37 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              0 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             37 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             33 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                              4 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             33 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             33 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   10181
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               6     6      0    3280
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3402
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3499
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3368
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2659
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10905
                                             19 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6686
                                             10 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             52 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                              5 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             62 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3983
                                              8 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             62 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             52 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             54 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             52 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             52 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3F      3F       8       24.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     20      C2       6       75.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     27      5F       4       74.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      11        0.0%
DATA                 0      0     1AB      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 23 23:44:44 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 004A  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 18F0  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1C0C  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0042  
              i2recv_msg@tlength 00B7             ?_FromMainLow_recvmsg 0019  
                            l109 087C                              l421 1B40  
                            l422 1B42                              l445 19CC  
                            l447 19E4                              l448 19E6  
                            l722 1C70                              l493 1380  
                            l494 1382                              l495 1390  
                            l496 1392                              l489 1360  
           ?_FromMainLow_sendmsg 01B2  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D7  
               ??_init_uart_recv 00D9                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 0041                             l1034 143E  
                           l3110 185A                             l3102 1838  
                           l3124 189E                             l3510 1598  
                           l3342 082A                             l3334 07E8  
                           l3504 156C                             l3344 0882  
                           l3352 08EC                             l3360 0942  
                           l3418 19CE                             l3610 1740  
                           l3530 0C1A                             l3346 08B0  
                           l3354 0904                             l3444 1362  
                           l3436 134C                             l3516 15C4  
                           l3372 0A24                             l3348 08CE  
                           l3630 0AB0                             l3526 0B96  
                           l3366 0980                             l3358 0924  
                           l3616 1764                             l3720 13EE  
                           l3368 09D2                             l3722 13F6  
                           l3562 0F22                             l3646 0B76  
                           l3726 142A                             l3718 13DC  
                           l3566 0F4A                             l3578 1614  
                           l3596 0CE4                             _LATB 000F8A  
                           u3017 1C72                             i1l52 007A  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0F7A  
                           _main 071E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0221  
                     i1_send_msg 11E6                             pclat 000FFA  
                    i2_check_msg 1C0C                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0035  
                           start 00C0                       i2_recv_msg 0D8C  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 104C  
      ToMainHigh_recvmsg@msgtype 01B4                   send_msg@length 01A8  
    __size_of_timer0_int_handler 0084                      _Delay1KTCYx 1C6C  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00DD  
                          ?_main 0001                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D7  
                          i1l340 17D2                            i1l343 17AA  
                __end_of___lwmod 1448                       i1memcpy@d1 0001  
                          i1l507 1C5C                            i2l301 0538  
                          i2l257 119A                            i2l273 01D0  
                          i2l267 0526                            i2l269 018C  
                          i2l295 0498                            i2l287 0360  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 00BB  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0035                       i2memcpy@s1 0037  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 18AE       ToMainLow_recvmsg@maxlength 01B8  
        timer0_lthread@msgbuffer 01A8          i2c_configure_slave@addr 00D7  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 177C                 __end_ofi1_memcpy 1972  
               __end_ofi2_memcpy 19B2                  __initialization 1BC0  
     uart_trans_int_handler@data 001F                     __end_of_main 0A44  
   uart_trans_int_handler@length 0023                       _ReadTimer1 1CCA  
    __size_of_timer1_int_handler 0030       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026    __size_of_FromMainHigh_recvmsg 0032  
          __size_ofi2_in_low_int 002E                           ??_main 01C1  
                send_msg@msgtype 01A9                    __activetblptr 000002  
                send_msg@tlength 01AD       FromMainLow_sendmsg@msgtype 01B2  
           __end_of_handle_start 11E6          ??_uart_recv_int_handler 001B  
                         i1l3910 17C4                           i2l3200 02C8  
                         i1l3818 121E                           i1l3842 0FC0  
                         i2l3140 1510                           i1l3924 0070  
                         i2l3222 03D4                           i2l3134 1506  
                         i1l3918 0066                           i2l3224 0416  
                     _OpenTimer0 1B1C                           i2l3250 04FA  
                         i2l3162 0182                           i1l3794 1960  
                         i1l3858 1048                       _OpenTimer1 19B2  
                         i2l3228 0428                           i2l3180 0208  
                         i2l3156 016A                           i1l3788 1944  
                         i2l3270 0636                           i2l3262 059C  
                         i2l3182 0234                   __CFG_WDTEN$OFF 000000  
                         i2l3256 053C                           i2l3192 0270  
                         i1l3888 130C                           i2l2398 17DC  
                         i2l3278 06DC                           i2l3198 0288  
                         i2l3804 19A0                           i2l2870 1AFC  
                         i2l3742 1098                           i2l3684 11B6  
                         i2l2878 1B12                           i2l3686 11CE  
                         i2l3766 0DE6                           i2l3782 0E8C  
                         i2l3798 1984      __end_of_i2c_configure_slave 1B98  
                  ??_SleepIfOkay 0039               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 010E  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0C88  
             timer0_lthread@tptr 01A2          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 003F                     i2_in_low_int 1AEE  
                    ?i2_send_msg 003F                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0092                  _i2c_int_handler 00C4  
               OpenTimer0@config 00D7                           _ic_ptr 00DD  
                      ??___lwmod 00DB                    main@msgbuffer 0200  
               __end_of_init_i2c 171E                 OpenTimer1@config 00D7  
                         _memcpy 171E                           clear_0 1BC6  
                         clear_1 1BD2                           _uc_ptr 0048  
                         main@ic 0223                           main@uc 021C  
               __end_of_recv_msg 0B7A      start_i2c_slave_reply@length 00DB  
                      ??_in_main 00DD                 __end_of_send_msg 0D8C  
          timer0_int_handler@val 00C5          i2c_int_handler@i2c_data 00C5  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 00DA  
       ToMainLow_recvmsg@msgtype 01B4             __size_of_in_high_int 0012  
        FromMainLow_sendmsg@data 01B3                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 1D08                       __accesstop 0080  
        __end_of__initialization 1BDC       __end_of_ToMainHigh_recvmsg 1932  
     __end_of_ToMainHigh_sendmsg 1B70               ?_init_uart_lthread 00D7  
    __end_of_init_timer1_lthread 1CA6              __end_of_SleepIfOkay 1824  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D9                      ?_ReadTimer1 0001  
             __size_of_check_msg 0036                __end_of_ReadUSART 1C6C  
      timer0_int_handler@msgtype 00C3              __size_ofi1_recv_msg 00D2  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 1546      __end_of_InterruptHandlerLow 00C0  
                      ?i2_memcpy 0035                    _ToMainHigh_MQ 016C  
            __size_ofi2_recv_msg 0104                 _enter_sleep_mode 1D02  
            __size_ofi2_send_msg 00D2             timer1_lthread@length 01A6  
                  ReadUSART@data 0001                __end_of_OpenUSART 13BE  
                  check_msg@qptr 00D7        __end_of_init_uart_lthread 1D0A  
        ??_block_on_To_msgqueues 01A2             __size_of_init_queues 006E  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0048  
        __end_of_i2c_int_handler 071E                     ?i2_check_msg 0035  
             timer1_lthread@tptr 01A2                recv_msg@maxlength 01A8  
                recv_msg@msgtype 01A9                  recv_msg@tlength 01B0  
          __size_of_handle_start 00C8                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0037                          ?_memcpy 00D7  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0037  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 0012  
        __size_of_timer1_lthread 0036                       ??i1_memcpy 0007  
                     ??i2_memcpy 003B                 i1send_msg@length 000D  
                  i2_in_high_int 1CEE                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001              __size_of_ReadTimer1 0012  
              __end_of_check_msg 1A8C                        ?_init_i2c 00D7  
                    _SleepIfOkay 17D6                        ?_recv_msg 01A6  
                     _in_low_int 1824                     _handle_start 111E  
                        __Hparam 0000                        ?_send_msg 01A6  
                        __Lparam 0000       __end_of_timer0_int_handler 14CC  
    __end_of_FromMainLow_recvmsg 1BC0      __end_of_FromMainLow_sendmsg 1A20  
               init_uart_recv@uc 00D7                          ___lwmod 13BE  
                __CFG_STVREN$OFF 000000                          __pcinit 1BC0  
                __size_of_memcpy 005E                       _init_queue 15CC  
                        __ramtop 0400              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0038                          __ptext0 071E  
                        __ptext1 0E90                          __ptext2 19EA  
                        __ptext3 0C88                          __ptext4 1A20  
                        __ptext5 13BE                          __ptext6 1C82  
                        __ptext7 0B7A                          __ptext8 1C30  
                        __ptext9 1D08                uart_lthread@index 01BF  
                      _T0CONbits 000FD5                          _in_main 186A  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1CEE  
            __end_of_WriteTimer1 1CCA                   ?i2_in_high_int 0035  
 __end_of_uart_trans_int_handler 17D6       __size_of_init_uart_lthread 0002  
                 __pintcode_body 14CC     __end_of_FromMainHigh_recvmsg 1ABE  
           end_of_initialization 1BDC          timer1_lthread@msgbuffer 01A8  
 __size_of_uart_recv_int_handler 009C                          memcpy@d 01A2  
                        memcpy@n 00DB                          memcpy@s 01A4  
  __end_of_uart_recv_int_handler 132C                       ??_init_i2c 00D9  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00C3  
                  __Lmediumconst 0000                          int_func 14CC  
                   ??i1_send_msg 0011                    ?_uart_lthread 01B6  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 0046                       ??_recv_msg 01AD  
                   ??i2_send_msg 0045                       ??_send_msg 01AC  
     __end_of_timer1_int_handler 1AEE                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 00BB  
             __end_ofi1_recv_msg 104C               __end_ofi1_send_msg 1290  
                      _TRISCbits 000F94               __end_ofi2_recv_msg 0E90  
             __end_ofi2_send_msg 111E    FromMainHigh_recvmsg@maxlength 00BF  
       timer1_int_handler@result 001C                   ??_uart_lthread 00DD  
                      _TXSTAbits 000FAC                       main@length 0222  
                    ?_in_low_int 00D9            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0B7A     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1D08  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 18F0  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1B46  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 1C82                      ?_init_queue 00D7  
                      i2memcpy@d 003B                      _WriteTimer0 1CDC  
                    _WriteTimer1 1CB8                        i2memcpy@n 0039  
                      i2memcpy@s 003D                   _timer1_lthread 1A20  
                 __end_of_memcpy 177C                _enable_interrupts 1CFA  
           __size_of_Delay1KTCYx 0016              ?_ToMainHigh_recvmsg 01B4  
                ??i2_in_high_int 0037         i2c_int_handler@data_read 00C8  
            ?_ToMainHigh_sendmsg 00BB               ?_enable_interrupts 0001  
            start_initialization 1BC0                    ??_in_high_int 00D9  
                      _ReadUSART 1C4E                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 01B5  
            ??_enable_interrupts 00D7                     ??_OpenTimer0 00D7  
                   ??_OpenTimer1 00D7   __size_of_block_on_To_msgqueues 007E  
             __end_of_ReadTimer1 1CDC    __end_of_block_on_To_msgqueues 15CC  
                      _OpenUSART 132C     __end_of_InterruptHandlerHigh 154E  
                     init_i2c@ic 00D7             ??_ToMainHigh_recvmsg 00DD  
           ??_ToMainHigh_sendmsg 0046           __end_of_timer0_lthread 1C94  
       i2c_int_handler@error_buf 00C0           __end_of_timer1_lthread 1A56  
      __end_of_enable_interrupts 1D02                         ??_memcpy 00DD  
          timer1_lthread@msgtype 01A4             _FromMainHigh_recvmsg 1A8C  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1B46  
             __end_of_OpenTimer1 19EA         i2c_int_handler@msg_ready 00C7  
                    __pbssCOMRAM 004A                       ?_ReadUSART 0001  
                  ??_init_queues 00DB                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2                    __pcstackBANK2 0200  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00D7  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D7  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1CB8                       ?_OpenUSART 00D7  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B6  
                   _ToMainLow_MQ 0080              __size_of_init_queue 007A  
                 _init_uart_recv 1C30                        _check_msg 1A56  
                      __pnvBANK0 00DD           ?_start_i2c_slave_reply 00D7  
              __size_of_init_i2c 006A                     recv_msg@data 01AB  
                   recv_msg@qmsg 01B2                     recv_msg@slot 01AF  
                   recv_msg@qptr 01A6                __size_of_recv_msg 0136  
                      __pintcode 0008                __size_of_send_msg 0104  
                ?_timer0_lthread 01A2                         ?___lwmod 00D7  
          ?_FromMainHigh_recvmsg 00BB                  ?_timer1_lthread 01A2  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 01B6  
           __end_of_uart_lthread 0F7A       i2c_int_handler@msg_to_send 00C6  
                       ?_in_main 00DB                WriteTimer0@timer0 0035  
             _timer0_int_handler 1448                WriteTimer1@timer1 0001  
            uart_lthread@msgtype 01B8            ToMainLow_sendmsg@data 0018  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01B6           __end_of_init_uart_recv 1C4E  
            __end_of_init_queues 16B4                  i2check_msg@qptr 0035  
                     ?_check_msg 00D7                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0037  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00BC  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010             ??_timer0_int_handler 00C0  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0028     __size_of_FromMainLow_sendmsg 0036  
           timer0_lthread@length 01A6               _timer1_int_handler 1ABE  
                       i1_memcpy 1932             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1972  
           timer0_lthread@msgval 00D7         FromMainHigh_recvmsg@data 00BD  
                    _in_high_int 1CA6                     send_msg@data 01AA  
            _i2c_configure_slave 1B70                     send_msg@qmsg 01B0  
                   send_msg@slot 01AF                     send_msg@qptr 01A6  
          uart_lthread@msgbuffer 01BC              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00D7                      ??_OpenUSART 00D9  
                OpenUSART@config 00DC                   ??i2_in_low_int 0039  
          _uart_recv_int_handler 1290                     ??_in_low_int 00DB  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 0048             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0035  
               __size_of___lwmod 008A                     ??_init_queue 00D9  
                   ?_WriteTimer0 0035                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A                main@t0thread_data 020B  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 0042      ToMainHigh_recvmsg@maxlength 01B8  
              i2send_msg@tlength 00B6          init_timer1_lthread@tptr 00D7  
                    _init_queues 1646               __end_of_in_low_int 186A  
                       __ptext10 1C94                         __ptext11 1646  
                       __ptext20 1A56                         __ptext12 15CC  
                       __ptext21 1C6C                         __ptext13 16B4  
                       __ptext30 177C                         __ptext22 18AE  
                       __ptext14 1B70                         __ptext31 1B98  
                       __ptext23 18F0                         __ptext15 1CFA  
                       __ptext40 1CCA                         __ptext32 0F7A  
                       __ptext24 0A44                         __ptext16 154E  
                       __ptext33 1290                         __ptext25 171E  
                       __ptext17 186A                         __ptext50 1972  
                       __ptext42 1448                         __ptext34 1C4E  
                       __ptext26 132C                         __ptext18 1824  
                       __ptext51 17D6                         __ptext43 1CDC  
                       __ptext35 1ABE                         __ptext27 19B2  
                       __ptext19 1CA6                         __ptext52 1AEE  
                       __ptext44 1A8C                         __ptext36 1CB8  
                       __ptext28 1B1C                         __ptext53 1CEE  
                       __ptext45 0D8C                         __ptext37 1BE6  
                       __ptext54 1C0C                         __ptext46 00C4  
                       __ptext38 11E6                         __ptext55 1D02  
                       __ptext47 111E                         __ptext39 1932  
                       __ptext48 1B46                         __ptext49 104C  
                 i1send_msg@data 000F                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 01BA         timer0_int_handler@length 00C1  
             uart_lthread@status 01BE                         _init_i2c 16B4  
            _init_timer1_lthread 1C94                    __size_of_main 0326  
                  ??i2_check_msg 0037                main@t1thread_data 021A  
                    ??_check_msg 00D9               __end_of_init_queue 1646  
           __size_of_SleepIfOkay 004E                         _recv_msg 0A44  
          ??_i2c_configure_slave 00D7                         _send_msg 0C88  
                 init_queue@qptr 00D7            __size_of_uart_lthread 00EA  
                 i2recv_msg@data 0044    uart_trans_int_handler@msgtype 0022  
                 i2recv_msg@qmsg 00B9                    ??_Delay1KTCYx 00D7  
                 i2recv_msg@slot 00B6                   i2recv_msg@qptr 003F  
                       main@baud 020E              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00D7         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00D7                         memcpy@d1 00D7  
                       memcpy@s1 00D9            __end_ofi2_in_high_int 1CFA  
   i2c_int_handler@overrun_error 00C4                 i2send_msg@length 0041  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D9  
               ___lwmod@dividend 00D7           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0E90                   main@UARTConfig 020F  
          _block_on_To_msgqueues 154E                    ?_handle_start 0001  
               ??_timer0_lthread 00D7      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00DD                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0046  
            __end_ofi2_check_msg 1C30            ??_init_timer1_lthread 00D9  
         ??_InterruptHandlerHigh 00C9                _ToMainLow_recvmsg 18AE  
              _ToMainLow_sendmsg 1BE6               main@last_reg_recvd 020D  
                ___lwmod@divisor 00D9             __end_ofi2_in_low_int 1B1C  
             ?_ToMainLow_recvmsg 01B4              __end_of_Delay1KTCYx 1C82  
              ??_i2c_int_handler 00BE                  ___lwmod@counter 00DC  
             ?_ToMainLow_sendmsg 0017                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0043  
          ??_InterruptHandlerLow 0024              ??_ToMainLow_recvmsg 00DD  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003F              ??_ToMainLow_sendmsg 001A  
            _FromMainLow_recvmsg 1B98                   ??_handle_start 0035  
            _FromMainLow_sendmsg 19EA                     _USART_Status 004B  
