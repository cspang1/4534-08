

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Feb 24 08:57:32 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     _INTCONbits	set	4082
    74  0000                     _IPR1bits	set	3999
    75  0000                     _LATB	set	3978
    76  0000                     _OSCCON	set	4051
    77  0000                     _OSCCONbits	set	4051
    78  0000                     _OSCTUNEbits	set	3995
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIR1bits	set	3998
    81  0000                     _RCONbits	set	4048
    82  0000                     _RCREG	set	4014
    83  0000                     _RCSTA	set	4011
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SPBRG	set	4015
    86  0000                     _SPBRGH	set	4016
    87  0000                     _SSPADD	set	4040
    88  0000                     _SSPBUF	set	4041
    89  0000                     _SSPCON1	set	4038
    90  0000                     _SSPCON1bits	set	4038
    91  0000                     _SSPCON2	set	4037
    92  0000                     _SSPCON2bits	set	4037
    93  0000                     _SSPSTAT	set	4039
    94  0000                     _SSPSTATbits	set	4039
    95  0000                     _T0CON	set	4053
    96  0000                     _T0CONbits	set	4053
    97  0000                     _T1CON	set	4045
    98  0000                     _T1CONbits	set	4045
    99  0000                     _TMR0H	set	4055
   100  0000                     _TMR0L	set	4054
   101  0000                     _TMR1H	set	4047
   102  0000                     _TMR1L	set	4046
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISCbits	set	3988
   105  0000                     _TXREG	set	4013
   106  0000                     _TXSTA	set	4012
   107  0000                     _TXSTAbits	set	4012
   108                           
   109                           	psect	nvCOMRAM
   110  000049                     __pnvCOMRAM:
   111                           	opt stack 0
   112  000049                     _uc_ptr:
   113                           	opt stack 0
   114  000049                     	ds	2
   115                           
   116                           	psect	nvBANK0
   117  0000E1                     __pnvBANK0:
   118                           	opt stack 0
   119  0000E1                     _ic_ptr:
   120                           	opt stack 0
   121  0000E1                     	ds	2
   122                           
   123                           ; #config settings
   124  0000                     
   125                           	psect	cinit
   126  001814                     __pcinit:
   127                           	opt stack 0
   128  001814                     start_initialization:
   129                           	opt stack 0
   130  001814                     __initialization:
   131                           	opt stack 0
   132                           
   133                           ; Clear objects allocated to BANK1 (162 bytes)
   134  001814  EE01  F000         	lfsr	0,__pbssBANK1
   135  001818  0EA2               	movlw	162
   136  00181A                     clear_0:
   137  00181A  6AEE               	clrf	postinc0,c
   138  00181C  06E8               	decf	wreg,f,c
   139  00181E  E1FD               	bnz	clear_0
   140                           
   141                           ; Clear objects allocated to BANK0 (54 bytes)
   142  001820  EE00  F080         	lfsr	0,__pbssBANK0
   143  001824  0E36               	movlw	54
   144  001826                     clear_1:
   145  001826  6AEE               	clrf	postinc0,c
   146  001828  06E8               	decf	wreg,f,c
   147  00182A  E1FD               	bnz	clear_1
   148                           
   149                           ; Clear objects allocated to COMRAM (2 bytes)
   150  00182C  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   151  00182E  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   152  001830                     end_of_initialization:
   153                           	opt stack 0
   154  001830                     __end_of__initialization:
   155                           	opt stack 0
   156  001830  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  001832  6EF8               	movwf	tblptru,c
   158  001834  0100               	movlb	0
   159  001836  EF13  F003         	goto	_main	;jump to C main() function
   160                           tblptru	equ	0xFF8
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           
   164                           	psect	bssCOMRAM
   165  00004B                     __pbssCOMRAM:
   166                           	opt stack 0
   167  00004B                     _MQ_Main_Willing_to_block:
   168                           	opt stack 0
   169  00004B                     	ds	1
   170  00004C                     _USART_Status:
   171                           	opt stack 0
   172  00004C                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	bssBANK0
   178  000080                     __pbssBANK0:
   179                           	opt stack 0
   180  000080                     _ToMainLow_MQ:
   181                           	opt stack 0
   182  000080                     	ds	54
   183                           tblptru	equ	0xFF8
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	bssBANK1
   188  000100                     __pbssBANK1:
   189                           	opt stack 0
   190  000100                     _FromMainHigh_MQ:
   191                           	opt stack 0
   192  000100                     	ds	54
   193  000136                     _FromMainLow_MQ:
   194                           	opt stack 0
   195  000136                     	ds	54
   196  00016C                     _ToMainHigh_MQ:
   197                           	opt stack 0
   198  00016C                     	ds	54
   199                           tblptru	equ	0xFF8
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203                           	psect	cstackBANK1
   204  0001A2                     __pcstackBANK1:
   205                           	opt stack 0
   206  0001A2                     send_msg@qptr:
   207                           	opt stack 0
   208  0001A2                     recv_msg@qptr:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x0
   212  0001A2                     	ds	2
   213  0001A4                     send_msg@length:
   214                           	opt stack 0
   215  0001A4                     recv_msg@maxlength:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x2
   219  0001A4                     	ds	1
   220  0001A5                     send_msg@msgtype:
   221                           	opt stack 0
   222  0001A5                     recv_msg@msgtype:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x3
   226  0001A5                     	ds	1
   227  0001A6                     send_msg@data:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x4
   231  0001A6                     	ds	1
   232  0001A7                     recv_msg@data:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x5
   236  0001A7                     	ds	1
   237  0001A8                     send_msg@tlength:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x6
   241  0001A8                     	ds	1
   242  0001A9                     recv_msg@slot:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246  0001A9                     	ds	1
   247  0001AA                     send_msg@slot:
   248                           	opt stack 0
   249  0001AA                     recv_msg@tlength:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x8
   253  0001AA                     	ds	1
   254  0001AB                     send_msg@qmsg:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x9
   258  0001AB                     	ds	1
   259  0001AC                     recv_msg@qmsg:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0xA
   263  0001AC                     	ds	1
   264  0001AD                     FromMainLow_sendmsg@length:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xB
   268  0001AD                     	ds	1
   269  0001AE                     ToMainLow_recvmsg@msgtype:
   270                           	opt stack 0
   271  0001AE                     ToMainHigh_recvmsg@msgtype:
   272                           	opt stack 0
   273  0001AE                     uart_lthread@uptr:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xC
   277  0001AE                     	ds	2
   278  0001B0                     ToMainLow_recvmsg@data:
   279                           	opt stack 0
   280  0001B0                     ToMainHigh_recvmsg@data:
   281                           	opt stack 0
   282  0001B0                     uart_lthread@msgtype:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0xE
   286  0001B0                     	ds	2
   287  0001B2                     uart_lthread@length:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x10
   291  0001B2                     	ds	2
   292  0001B4                     uart_lthread@msgbuffer:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x12
   296  0001B4                     	ds	2
   297  0001B6                     uart_lthread@status:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x14
   301  0001B6                     	ds	1
   302  0001B7                     uart_lthread@index:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x15
   306  0001B7                     	ds	2
   307  0001B9                     main@msgbuffer:
   308                           	opt stack 0
   309                           
   310                           ; 11 bytes @ 0x17
   311  0001B9                     	ds	11
   312  0001C4                     main@t0thread_data:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x22
   316  0001C4                     	ds	2
   317  0001C6                     main@last_reg_recvd:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x24
   321  0001C6                     	ds	1
   322  0001C7                     main@baud:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x25
   326  0001C7                     	ds	1
   327  0001C8                     main@UARTConfig:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x26
   331  0001C8                     	ds	1
   332  0001C9                     main@uthread_data:
   333                           	opt stack 0
   334                           
   335                           ; 10 bytes @ 0x27
   336  0001C9                     	ds	10
   337  0001D3                     main@t1thread_data:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x31
   341  0001D3                     	ds	2
   342  0001D5                     main@uc:
   343                           	opt stack 0
   344                           
   345                           ; 5 bytes @ 0x33
   346  0001D5                     	ds	5
   347  0001DA                     main@msgtype:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x38
   351  0001DA                     	ds	1
   352  0001DB                     main@length:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x39
   356  0001DB                     	ds	1
   357  0001DC                     main@ic:
   358                           	opt stack 0
   359                           
   360                           ; 28 bytes @ 0x3A
   361  0001DC                     	ds	28
   362                           tblptru	equ	0xFF8
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           
   366                           	psect	cstackBANK0
   367  0000B6                     __pcstackBANK0:
   368                           	opt stack 0
   369  0000B6                     i2recv_msg@slot:
   370                           	opt stack 0
   371  0000B6                     i2send_msg@tlength:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x0
   375  0000B6                     	ds	1
   376  0000B7                     i2recv_msg@tlength:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x1
   380  0000B7                     	ds	1
   381  0000B8                     i2send_msg@slot:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x2
   385  0000B8                     	ds	1
   386  0000B9                     i2send_msg@qmsg:
   387                           	opt stack 0
   388  0000B9                     i2recv_msg@qmsg:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x3
   392  0000B9                     	ds	2
   393  0000BB                     ??_i2c_int_handler:
   394  0000BB                     FromMainHigh_recvmsg@msgtype:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x5
   398  0000BB                     	ds	1
   399  0000BC                     i2c_int_handler@error_buf:
   400                           	opt stack 0
   401                           
   402                           ; 3 bytes @ 0x6
   403  0000BC                     	ds	1
   404  0000BD                     FromMainHigh_recvmsg@data:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x7
   408  0000BD                     	ds	2
   409  0000BF                     i2c_int_handler@data_written:
   410                           	opt stack 0
   411  0000BF                     timer0_int_handler@length:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x9
   415  0000BF                     	ds	1
   416  0000C0                     i2c_int_handler@overrun_error:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xA
   420  0000C0                     	ds	1
   421  0000C1                     i2c_int_handler@i2c_data:
   422                           	opt stack 0
   423  0000C1                     timer0_int_handler@msgtype:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xB
   427  0000C1                     	ds	1
   428  0000C2                     i2c_int_handler@msg_to_send:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0xC
   432  0000C2                     	ds	1
   433  0000C3                     i2c_int_handler@msg_ready:
   434                           	opt stack 0
   435  0000C3                     timer0_int_handler@val:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0xD
   439  0000C3                     	ds	1
   440  0000C4                     i2c_int_handler@data_read:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0xE
   444  0000C4                     	ds	1
   445  0000C5                     ??_InterruptHandlerHigh:
   446                           
   447                           ; 0 bytes @ 0xF
   448  0000C5                     	ds	14
   449  0000D3                     ?_in_high_int:
   450                           	opt stack 0
   451  0000D3                     ?___lwmod:
   452                           	opt stack 0
   453  0000D3                     i2c_configure_slave@addr:
   454                           	opt stack 0
   455  0000D3                     OpenTimer0@config:
   456                           	opt stack 0
   457  0000D3                     OpenTimer1@config:
   458                           	opt stack 0
   459  0000D3                     Delay1KTCYx@unit:
   460                           	opt stack 0
   461  0000D3                     init_queue@qptr:
   462                           	opt stack 0
   463  0000D3                     check_msg@qptr:
   464                           	opt stack 0
   465  0000D3                     start_i2c_slave_reply@msg:
   466                           	opt stack 0
   467  0000D3                     init_i2c@ic:
   468                           	opt stack 0
   469  0000D3                     init_uart_recv@uc:
   470                           	opt stack 0
   471  0000D3                     timer0_lthread@tptr:
   472                           	opt stack 0
   473  0000D3                     init_timer1_lthread@tptr:
   474                           	opt stack 0
   475  0000D3                     init_uart_lthread@uptr:
   476                           	opt stack 0
   477  0000D3                     OpenUSART@spbrg:
   478                           	opt stack 0
   479  0000D3                     ___lwmod@dividend:
   480                           	opt stack 0
   481  0000D3                     memcpy@d1:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x1D
   485  0000D3                     	ds	2
   486  0000D5                     ??_OpenUSART:
   487  0000D5                     ??_start_i2c_slave_reply:
   488  0000D5                     ??_check_msg:
   489  0000D5                     ?_in_low_int:
   490                           	opt stack 0
   491  0000D5                     init_queue@i:
   492                           	opt stack 0
   493  0000D5                     timer0_lthread@msgtype:
   494                           	opt stack 0
   495  0000D5                     ___lwmod@divisor:
   496                           	opt stack 0
   497  0000D5                     memcpy@s1:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x1F
   501  0000D5                     	ds	1
   502  0000D6                     
   503                           ; 0 bytes @ 0x20
   504  0000D6                     	ds	1
   505  0000D7                     ?_in_main:
   506                           	opt stack 0
   507  0000D7                     start_i2c_slave_reply@length:
   508                           	opt stack 0
   509  0000D7                     ___lwmod@counter:
   510                           	opt stack 0
   511  0000D7                     timer0_lthread@length:
   512                           	opt stack 0
   513  0000D7                     memcpy@n:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x21
   517  0000D7                     	ds	1
   518  0000D8                     OpenUSART@config:
   519                           	opt stack 0
   520  0000D8                     timer1_lthread@tptr:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x22
   524  0000D8                     	ds	1
   525  0000D9                     timer0_lthread@msgbuffer:
   526                           	opt stack 0
   527  0000D9                     memcpy@d:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x23
   531  0000D9                     	ds	1
   532  0000DA                     timer1_lthread@msgtype:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x24
   536  0000DA                     	ds	1
   537  0000DB                     timer0_lthread@msgval:
   538                           	opt stack 0
   539  0000DB                     memcpy@s:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x25
   543  0000DB                     	ds	1
   544  0000DC                     timer1_lthread@length:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x26
   548  0000DC                     	ds	1
   549  0000DD                     ??_send_msg:
   550  0000DD                     ??_recv_msg:
   551                           
   552                           ; 0 bytes @ 0x27
   553  0000DD                     	ds	1
   554  0000DE                     FromMainLow_sendmsg@msgtype:
   555                           	opt stack 0
   556  0000DE                     timer1_lthread@msgbuffer:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x28
   560  0000DE                     	ds	1
   561  0000DF                     ToMainLow_recvmsg@maxlength:
   562                           	opt stack 0
   563  0000DF                     ToMainHigh_recvmsg@maxlength:
   564                           	opt stack 0
   565  0000DF                     FromMainLow_sendmsg@data:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x29
   569  0000DF                     	ds	1
   570  0000E0                     
   571                           ; 0 bytes @ 0x2A
   572  0000E0                     	ds	1
   573  0000E1                     tblptru	equ	0xFF8
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           
   577                           ; 0 bytes @ 0x2B
   578                           
   579                           	psect	cstackCOMRAM
   580  000001                     __pcstackCOMRAM:
   581                           	opt stack 0
   582  000001                     ?_ReadTimer1:
   583                           	opt stack 0
   584  000001                     ReadUSART@data:
   585                           	opt stack 0
   586  000001                     WriteTimer1@timer1:
   587                           	opt stack 0
   588  000001                     i1memcpy@d1:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x0
   592  000001                     	ds	2
   593  000003                     ReadTimer1@timer:
   594                           	opt stack 0
   595  000003                     WriteTimer1@timer:
   596                           	opt stack 0
   597  000003                     i1memcpy@s1:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x2
   601  000003                     	ds	2
   602  000005                     i1memcpy@n:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x4
   606  000005                     	ds	2
   607  000007                     i1memcpy@d:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x6
   611  000007                     	ds	2
   612  000009                     i1memcpy@s:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x8
   616  000009                     	ds	2
   617  00000B                     i1send_msg@qptr:
   618                           	opt stack 0
   619  00000B                     i1recv_msg@qptr:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xA
   623  00000B                     	ds	2
   624  00000D                     i1send_msg@length:
   625                           	opt stack 0
   626  00000D                     i1recv_msg@maxlength:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0xC
   630  00000D                     	ds	1
   631  00000E                     i1send_msg@msgtype:
   632                           	opt stack 0
   633  00000E                     i1recv_msg@msgtype:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0xD
   637  00000E                     	ds	1
   638  00000F                     i1send_msg@data:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xE
   642  00000F                     	ds	1
   643  000010                     i1recv_msg@data:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0xF
   647  000010                     	ds	1
   648  000011                     ??i1_send_msg:
   649                           
   650                           ; 0 bytes @ 0x10
   651  000011                     	ds	1
   652  000012                     ??i1_recv_msg:
   653  000012                     i1send_msg@tlength:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x11
   657  000012                     	ds	2
   658  000014                     i1send_msg@slot:
   659                           	opt stack 0
   660  000014                     i1recv_msg@slot:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x13
   664  000014                     	ds	1
   665  000015                     i1send_msg@qmsg:
   666                           	opt stack 0
   667  000015                     i1recv_msg@tlength:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x14
   671  000015                     	ds	2
   672  000017                     ToMainLow_sendmsg@msgtype:
   673                           	opt stack 0
   674  000017                     i1recv_msg@qmsg:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x16
   678  000017                     	ds	1
   679  000018                     ToMainLow_sendmsg@data:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x17
   683  000018                     	ds	1
   684  000019                     FromMainLow_recvmsg@msgtype:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x18
   688  000019                     	ds	1
   689  00001A                     ToMainLow_sendmsg@length:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x19
   693  00001A                     	ds	1
   694  00001B                     ??_uart_recv_int_handler:
   695  00001B                     FromMainLow_recvmsg@data:
   696                           	opt stack 0
   697  00001B                     timer1_int_handler@result:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x1A
   701  00001B                     	ds	2
   702  00001D                     FromMainLow_recvmsg@maxlength:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x1C
   706  00001D                     	ds	1
   707  00001E                     uart_trans_int_handler@data:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x1D
   711  00001E                     	ds	2
   712  000020                     uart_trans_int_handler@curIndex:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x1F
   716  000020                     	ds	1
   717  000021                     uart_trans_int_handler@msgtype:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x20
   721  000021                     	ds	1
   722  000022                     uart_trans_int_handler@length:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x21
   726  000022                     	ds	1
   727  000023                     ??_InterruptHandlerLow:
   728                           
   729                           ; 0 bytes @ 0x22
   730  000023                     	ds	17
   731  000034                     ?i2_in_high_int:
   732                           	opt stack 0
   733  000034                     handle_start@data_read:
   734                           	opt stack 0
   735  000034                     WriteTimer0@timer0:
   736                           	opt stack 0
   737  000034                     i2check_msg@qptr:
   738                           	opt stack 0
   739  000034                     i2memcpy@d1:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x33
   743  000034                     	ds	2
   744  000036                     ??i2_check_msg:
   745  000036                     ?i2_in_low_int:
   746                           	opt stack 0
   747  000036                     WriteTimer0@timer:
   748                           	opt stack 0
   749  000036                     i2memcpy@s1:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x35
   753  000036                     	ds	2
   754  000038                     i2memcpy@n:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x37
   758  000038                     	ds	2
   759  00003A                     i2memcpy@d:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x39
   763  00003A                     	ds	2
   764  00003C                     i2memcpy@s:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x3B
   768  00003C                     	ds	2
   769  00003E                     i2send_msg@qptr:
   770                           	opt stack 0
   771  00003E                     i2recv_msg@qptr:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x3D
   775  00003E                     	ds	2
   776  000040                     i2send_msg@length:
   777                           	opt stack 0
   778  000040                     i2recv_msg@maxlength:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3F
   782  000040                     	ds	1
   783  000041                     i2send_msg@msgtype:
   784                           	opt stack 0
   785  000041                     i2recv_msg@msgtype:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x40
   789  000041                     	ds	1
   790  000042                     i2send_msg@data:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x41
   794  000042                     	ds	1
   795  000043                     i2recv_msg@data:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x42
   799  000043                     	ds	1
   800  000044                     ??i2_send_msg:
   801                           
   802                           ; 0 bytes @ 0x43
   803  000044                     	ds	1
   804  000045                     ??i2_recv_msg:
   805  000045                     ToMainHigh_sendmsg@msgtype:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x44
   809  000045                     	ds	1
   810  000046                     ToMainHigh_sendmsg@data:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x45
   814  000046                     	ds	1
   815  000047                     FromMainHigh_recvmsg@maxlength:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x46
   819  000047                     	ds	1
   820  000048                     ToMainHigh_sendmsg@length:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x47
   824  000048                     	ds	1
   825  000049                     tblptru	equ	0xFF8
   826                           postinc0	equ	0xFEE
   827                           wreg	equ	0xFE8
   828                           
   829                           ; 0 bytes @ 0x48
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 139 in file "src/main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  ic             28   58[BANK1 ] struct __i2c_comm
   840 ;;  msgbuffer      11   23[BANK1 ] unsigned char [11]
   841 ;;  uthread_data   10   39[BANK1 ] struct __uart_thread_str
   842 ;;  uc              5   51[BANK1 ] struct __uart_comm
   843 ;;  t1thread_dat    2   49[BANK1 ] struct __timer1_thread_s
   844 ;;  t0thread_dat    2   34[BANK1 ] struct __timer0_thread_s
   845 ;;  length          1   57[BANK1 ] char 
   846 ;;  msgtype         1   56[BANK1 ] unsigned char 
   847 ;;  UARTConfig      1   38[BANK1 ] unsigned char 
   848 ;;  baud            1   37[BANK1 ] unsigned char 
   849 ;;  last_reg_rec    1   36[BANK1 ] unsigned char 
   850 ;;  i               1    0        unsigned char 
   851 ;;  c               1    0        unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;		None               void
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0      63       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0      63       0       0
   865 ;;Total ram usage:       63 bytes
   866 ;; Hardware stack levels required when called:   14
   867 ;; This function calls:
   868 ;;		_OpenTimer0
   869 ;;		_OpenTimer1
   870 ;;		_OpenUSART
   871 ;;		_ToMainHigh_recvmsg
   872 ;;		_ToMainLow_recvmsg
   873 ;;		_block_on_To_msgqueues
   874 ;;		_enable_interrupts
   875 ;;		_i2c_configure_slave
   876 ;;		_init_i2c
   877 ;;		_init_queues
   878 ;;		_init_timer1_lthread
   879 ;;		_init_uart_lthread
   880 ;;		_init_uart_recv
   881 ;;		_start_i2c_slave_reply
   882 ;;		_timer0_lthread
   883 ;;		_timer1_lthread
   884 ;;		_uart_lthread
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text0
   891  000626                     __ptext0:
   892                           	opt stack 0
   893  000626                     _main:
   894                           	opt stack 17
   895                           
   896                           ;main.c: 140: char c;
   897                           ;main.c: 141: signed char length;
   898                           ;main.c: 142: unsigned char msgtype;
   899                           ;main.c: 143: unsigned char last_reg_recvd;
   900                           ;main.c: 144: unsigned char baud, UARTConfig;
   901                           ;main.c: 145: uart_comm uc;
   902                           ;main.c: 146: i2c_comm ic;
   903                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   904                           ;main.c: 148: unsigned char i;
   905                           ;main.c: 149: uart_thread_struct uthread_data;
   906                           ;main.c: 150: timer1_thread_struct t1thread_data;
   907                           ;main.c: 151: timer0_thread_struct t0thread_data;
   908                           ;main.c: 159: OSCCON = 0x82;
   909                           
   910                           ;incstack = 0
   911  000626  0E82               	movlw	130
   912  000628  6ED3               	movwf	4051,c	;volatile
   913                           
   914                           ;main.c: 160: OSCTUNEbits.PLLEN = 0;
   915  00062A  9C9B               	bcf	3995,6,c	;volatile
   916                           
   917                           ;main.c: 173: init_uart_recv(&uc);
   918  00062C  0101               	movlb	1	; () banked
   919  00062E  0E01               	movlw	high main@uc
   920  000630  0100               	movlb	0	; () banked
   921  000632  6FD4               	movwf	(init_uart_recv@uc+1)& (0+255),b
   922  000634  0101               	movlb	1	; () banked
   923  000636  0ED5               	movlw	low main@uc
   924  000638  0100               	movlb	0	; () banked
   925  00063A  6FD3               	movwf	init_uart_recv@uc& (0+255),b
   926  00063C  EC79  F00C         	call	_init_uart_recv	;wreg free
   927                           
   928                           ;main.c: 176: init_i2c(&ic);
   929  000640  0101               	movlb	1	; () banked
   930  000642  0E01               	movlw	high main@ic
   931  000644  0100               	movlb	0	; () banked
   932  000646  6FD4               	movwf	(init_i2c@ic+1)& (0+255),b
   933  000648  0101               	movlb	1	; () banked
   934  00064A  0EDC               	movlw	low main@ic
   935  00064C  0100               	movlb	0	; () banked
   936  00064E  6FD3               	movwf	init_i2c@ic& (0+255),b
   937  000650  ECFF  F008         	call	_init_i2c	;wreg free
   938                           
   939                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
   940  000654  0101               	movlb	1	; () banked
   941  000656  0E01               	movlw	high main@t1thread_data
   942  000658  0100               	movlb	0	; () banked
   943  00065A  6FD4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   944  00065C  0101               	movlb	1	; () banked
   945  00065E  0ED3               	movlw	low main@t1thread_data
   946  000660  0100               	movlb	0	; () banked
   947  000662  6FD3               	movwf	init_timer1_lthread@tptr& (0+255),b
   948  000664  ECA1  F00C         	call	_init_timer1_lthread	;wreg free
   949                           
   950                           ;main.c: 182: init_uart_lthread(&uthread_data);
   951  000668  0101               	movlb	1	; () banked
   952  00066A  0E01               	movlw	high main@uthread_data
   953  00066C  0100               	movlb	0	; () banked
   954  00066E  6FD4               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   955  000670  0101               	movlb	1	; () banked
   956  000672  0EC9               	movlw	low main@uthread_data
   957  000674  0100               	movlb	0	; () banked
   958  000676  6FD3               	movwf	init_uart_lthread@uptr& (0+255),b
   959  000678  ECE1  F00C         	call	_init_uart_lthread	;wreg free
   960                           
   961                           ;main.c: 186: init_queues();
   962  00067C  ECF4  F009         	call	_init_queues	;wreg free
   963                           
   964                           ;main.c: 189: TRISB = 0x0;
   965  000680  0E00               	movlw	0
   966  000682  6E93               	movwf	3987,c	;volatile
   967                           
   968                           ;main.c: 190: LATB = 0x0;
   969  000684  0E00               	movlw	0
   970  000686  6E8A               	movwf	3978,c	;volatile
   971                           
   972                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   973  000688  0E96               	movlw	150
   974  00068A  EC1D  F00C         	call	_OpenTimer0
   975                           
   976                           ;main.c: 198: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   977  00068E  0EF5               	movlw	245
   978  000690  EC98  F00B         	call	_OpenTimer1
   979                           
   980                           ;main.c: 207: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
   981  000694  0EFC               	movlw	252
   982  000696  0101               	movlb	1	; () banked
   983  000698  6FC8               	movwf	main@UARTConfig& (0+255),b
   984                           
   985                           ; BSR set to: 1
   986                           ;main.c: 208: baud = 77;
   987  00069A  0E4D               	movlw	77
   988  00069C  0101               	movlb	1	; () banked
   989  00069E  6FC7               	movwf	main@baud& (0+255),b
   990                           
   991                           ; BSR set to: 1
   992                           ;main.c: 209: OpenUSART(UARTConfig,baud);
   993  0006A0  0101               	movlb	1	; () banked
   994  0006A2  0100               	movlb	0	; () banked
   995  0006A4  C1C7  F0D3         	movff	main@baud,OpenUSART@spbrg
   996  0006A8  0100               	movlb	0	; () banked
   997  0006AA  6BD4               	clrf	(OpenUSART@spbrg+1)& (0+255),b
   998  0006AC  0101               	movlb	1	; () banked
   999  0006AE  51C8               	movf	main@UARTConfig& (0+255),w,b
  1000  0006B0  EC7F  F008         	call	_OpenUSART
  1001                           
  1002                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1003  0006B4  909F               	bcf	3999,0,c	;volatile
  1004                           
  1005                           ;main.c: 217: IPR1bits.RCIP = 0;
  1006  0006B6  9A9F               	bcf	3999,5,c	;volatile
  1007                           
  1008                           ;main.c: 219: IPR1bits.TXIP = 0;
  1009  0006B8  989F               	bcf	3999,4,c	;volatile
  1010                           
  1011                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1012  0006BA  869F               	bsf	3999,3,c	;volatile
  1013                           
  1014                           ;main.c: 230: i2c_configure_slave(0x9E);
  1015  0006BC  0E9E               	movlw	158
  1016  0006BE  ECF6  F00B         	call	_i2c_configure_slave
  1017                           
  1018                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1019  0006C2  869D               	bsf	3997,3,c	;volatile
  1020                           
  1021                           ;main.c: 249: enable_interrupts();
  1022  0006C4  ECDA  F00C         	call	_enable_interrupts	;wreg free
  1023  0006C8                     l3304:
  1024                           
  1025                           ;main.c: 273: block_on_To_msgqueues();
  1026  0006C8  ECC6  F009         	call	_block_on_To_msgqueues	;wreg free
  1027                           
  1028                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1029  0006CC  0101               	movlb	1	; () banked
  1030  0006CE  0E01               	movlw	high main@msgtype
  1031  0006D0  0101               	movlb	1	; () banked
  1032  0006D2  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1033  0006D4  0101               	movlb	1	; () banked
  1034  0006D6  0EDA               	movlw	low main@msgtype
  1035  0006D8  0101               	movlb	1	; () banked
  1036  0006DA  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1037  0006DC  0101               	movlb	1	; () banked
  1038  0006DE  0E01               	movlw	high main@msgbuffer
  1039  0006E0  0101               	movlb	1	; () banked
  1040  0006E2  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1041  0006E4  0101               	movlb	1	; () banked
  1042  0006E6  0EB9               	movlw	low main@msgbuffer
  1043  0006E8  0101               	movlb	1	; () banked
  1044  0006EA  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1045  0006EC  0E0A               	movlw	10
  1046  0006EE  EC31  F00B         	call	_ToMainHigh_recvmsg
  1047  0006F2  0101               	movlb	1	; () banked
  1048  0006F4  6FDB               	movwf	main@length& (0+255),b
  1049                           
  1050                           ; BSR set to: 1
  1051                           ;main.c: 281: if (length < 0) {
  1052  0006F6  0101               	movlb	1	; () banked
  1053  0006F8  BFDB               	btfsc	main@length& (0+255),7,b
  1054  0006FA  D062               	goto	l3330
  1055  0006FC  D053               	goto	l3328
  1056  0006FE                     l3312:
  1057                           
  1058                           ; BSR set to: 1
  1059                           ;main.c: 289: {
  1060                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1061  0006FE  0101               	movlb	1	; () banked
  1062  000700  0E01               	movlw	high main@t0thread_data
  1063  000702  0100               	movlb	0	; () banked
  1064  000704  6FD4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1065  000706  0101               	movlb	1	; () banked
  1066  000708  0EC4               	movlw	low main@t0thread_data
  1067  00070A  0100               	movlb	0	; () banked
  1068  00070C  6FD3               	movwf	timer0_lthread@tptr& (0+255),b
  1069  00070E  0101               	movlb	1	; () banked
  1070  000710  0100               	movlb	0	; () banked
  1071  000712  C1DA  F0D5         	movff	main@msgtype,timer0_lthread@msgtype
  1072  000716  0100               	movlb	0	; () banked
  1073  000718  6BD6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1074  00071A  0101               	movlb	1	; () banked
  1075  00071C  51DB               	movf	main@length& (0+255),w,b
  1076  00071E  0100               	movlb	0	; () banked
  1077  000720  6FD7               	movwf	timer0_lthread@length& (0+255),b
  1078  000722  0100               	movlb	0	; () banked
  1079  000724  6BD8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1080  000726  0100               	movlb	0	; () banked
  1081  000728  BFD7               	btfsc	timer0_lthread@length& (0+255),7,b
  1082  00072A  07D8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1083  00072C  0101               	movlb	1	; () banked
  1084  00072E  0E01               	movlw	high main@msgbuffer
  1085  000730  0100               	movlb	0	; () banked
  1086  000732  6FDA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1087  000734  0101               	movlb	1	; () banked
  1088  000736  0EB9               	movlw	low main@msgbuffer
  1089  000738  0100               	movlb	0	; () banked
  1090  00073A  6FD9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1091  00073C  ECCD  F00C         	call	_timer0_lthread	;wreg free
  1092                           
  1093                           ;main.c: 291: break;
  1094  000740  D03F               	goto	l3330
  1095  000742                     l109:
  1096                           
  1097                           ;main.c: 294: case 41:
  1098                           ;main.c: 295: {
  1099                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1100  000742  C1B9  F1C6         	movff	main@msgbuffer,main@last_reg_recvd
  1101                           
  1102                           ;main.c: 299: break;
  1103  000746  D03C               	goto	l3330
  1104  000748                     l3314:
  1105                           
  1106                           ;main.c: 312: {
  1107                           ;main.c: 313: length = 2;
  1108  000748  0E02               	movlw	2
  1109  00074A  0101               	movlb	1	; () banked
  1110  00074C  6FDB               	movwf	main@length& (0+255),b
  1111                           
  1112                           ;main.c: 314: msgbuffer[0] = 0x55;
  1113  00074E  0E55               	movlw	85
  1114  000750  0101               	movlb	1	; () banked
  1115  000752  6FB9               	movwf	main@msgbuffer& (0+255),b
  1116                           
  1117                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1118  000754  0EAA               	movlw	170
  1119  000756  0101               	movlb	1	; () banked
  1120  000758  6FBA               	movwf	(main@msgbuffer+1)& (0+255),b
  1121                           
  1122                           ;main.c: 316: break;
  1123  00075A  D017               	goto	l3324
  1124  00075C                     l3316:
  1125                           
  1126                           ; BSR set to: 1
  1127                           ;main.c: 319: {
  1128                           ;main.c: 320: length = 1;
  1129  00075C  0E01               	movlw	1
  1130  00075E  0101               	movlb	1	; () banked
  1131  000760  6FDB               	movwf	main@length& (0+255),b
  1132                           
  1133                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1134  000762  0E3A               	movlw	58
  1135  000764  D004               	goto	L1
  1136  000766                     l3318:
  1137                           
  1138                           ; BSR set to: 1
  1139                           ;main.c: 325: {
  1140                           ;main.c: 326: length = 1;
  1141  000766  0E01               	movlw	1
  1142  000768  0101               	movlb	1	; () banked
  1143  00076A  6FDB               	movwf	main@length& (0+255),b
  1144                           
  1145                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1146  00076C  0EA3               	movlw	163
  1147  00076E                     L1:
  1148  00076E  0101               	movlb	1	; () banked
  1149  000770  6FB9               	movwf	main@msgbuffer& (0+255),b
  1150                           
  1151                           ;main.c: 328: break;
  1152  000772  D00B               	goto	l3324
  1153  000774                     l3322:
  1154  000774  0101               	movlb	1	; () banked
  1155  000776  51C6               	movf	main@last_reg_recvd& (0+255),w,b
  1156                           
  1157                           ; Switch size 1, requested type "space"
  1158                           ; Number of cases is 3, Range of values is 168 to 170
  1159                           ; switch strategies available:
  1160                           ; Name         Instructions Cycles
  1161                           ; simple_byte           10     6 (average)
  1162                           ;	Chosen strategy is simple_byte
  1163  000778  0AA8               	xorlw	168	; case 168
  1164  00077A  B4D8               	btfsc	status,2,c
  1165  00077C  D7EF               	goto	l3316
  1166  00077E  0A01               	xorlw	1	; case 169
  1167  000780  B4D8               	btfsc	status,2,c
  1168  000782  D7F1               	goto	l3318
  1169  000784  0A03               	xorlw	3	; case 170
  1170  000786  B4D8               	btfsc	status,2,c
  1171  000788  D7DF               	goto	l3314
  1172  00078A                     l3324:
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1176  00078A  0101               	movlb	1	; () banked
  1177  00078C  0E01               	movlw	high main@msgbuffer
  1178  00078E  0100               	movlb	0	; () banked
  1179  000790  6FD4               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1180  000792  0101               	movlb	1	; () banked
  1181  000794  0EB9               	movlw	low main@msgbuffer
  1182  000796  0100               	movlb	0	; () banked
  1183  000798  6FD3               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1184  00079A  0101               	movlb	1	; () banked
  1185  00079C  51DB               	movf	main@length& (0+255),w,b
  1186  00079E  ECDC  F004         	call	_start_i2c_slave_reply
  1187                           
  1188                           ;main.c: 332: break;
  1189  0007A2  D00E               	goto	l3330
  1190  0007A4                     l3328:
  1191  0007A4  0101               	movlb	1	; () banked
  1192  0007A6  51DA               	movf	main@msgtype& (0+255),w,b
  1193                           
  1194                           ; Switch size 1, requested type "space"
  1195                           ; Number of cases is 4, Range of values is 10 to 42
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte           13     7 (average)
  1199                           ;	Chosen strategy is simple_byte
  1200  0007A8  0A0A               	xorlw	10	; case 10
  1201  0007AA  B4D8               	btfsc	status,2,c
  1202  0007AC  D7A8               	goto	l3312
  1203  0007AE  0A22               	xorlw	34	; case 40
  1204  0007B0  B4D8               	btfsc	status,2,c
  1205  0007B2  D7C7               	goto	l109
  1206  0007B4  0A01               	xorlw	1	; case 41
  1207  0007B6  B4D8               	btfsc	status,2,c
  1208  0007B8  D7C4               	goto	l109
  1209  0007BA  0A03               	xorlw	3	; case 42
  1210  0007BC  B4D8               	btfsc	status,2,c
  1211  0007BE  D7DA               	goto	l3322
  1212  0007C0                     l3330:
  1213                           
  1214                           ;main.c: 340: }
  1215                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1216  0007C0  0101               	movlb	1	; () banked
  1217  0007C2  0E01               	movlw	high main@msgtype
  1218  0007C4  0101               	movlb	1	; () banked
  1219  0007C6  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1220  0007C8  0101               	movlb	1	; () banked
  1221  0007CA  0EDA               	movlw	low main@msgtype
  1222  0007CC  0101               	movlb	1	; () banked
  1223  0007CE  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1224  0007D0  0101               	movlb	1	; () banked
  1225  0007D2  0E01               	movlw	high main@msgbuffer
  1226  0007D4  0101               	movlb	1	; () banked
  1227  0007D6  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1228  0007D8  0101               	movlb	1	; () banked
  1229  0007DA  0EB9               	movlw	low main@msgbuffer
  1230  0007DC  0101               	movlb	1	; () banked
  1231  0007DE  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1232  0007E0  0E0A               	movlw	10
  1233  0007E2  EC16  F00B         	call	_ToMainLow_recvmsg
  1234  0007E6  0101               	movlb	1	; () banked
  1235  0007E8  6FDB               	movwf	main@length& (0+255),b
  1236                           
  1237                           ; BSR set to: 1
  1238                           ;main.c: 344: if (length < 0) {
  1239  0007EA  0101               	movlb	1	; () banked
  1240  0007EC  BFDB               	btfsc	main@length& (0+255),7,b
  1241  0007EE  D76C               	goto	l3304
  1242  0007F0  D043               	goto	l3342
  1243  0007F2                     l3336:
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 352: {
  1247                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1248  0007F2  0101               	movlb	1	; () banked
  1249  0007F4  0E01               	movlw	high main@t1thread_data
  1250  0007F6  0100               	movlb	0	; () banked
  1251  0007F8  6FD9               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1252  0007FA  0101               	movlb	1	; () banked
  1253  0007FC  0ED3               	movlw	low main@t1thread_data
  1254  0007FE  0100               	movlb	0	; () banked
  1255  000800  6FD8               	movwf	timer1_lthread@tptr& (0+255),b
  1256  000802  0101               	movlb	1	; () banked
  1257  000804  0100               	movlb	0	; () banked
  1258  000806  C1DA  F0DA         	movff	main@msgtype,timer1_lthread@msgtype
  1259  00080A  0100               	movlb	0	; () banked
  1260  00080C  6BDB               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1261  00080E  0101               	movlb	1	; () banked
  1262  000810  51DB               	movf	main@length& (0+255),w,b
  1263  000812  0100               	movlb	0	; () banked
  1264  000814  6FDC               	movwf	timer1_lthread@length& (0+255),b
  1265  000816  0100               	movlb	0	; () banked
  1266  000818  6BDD               	clrf	(timer1_lthread@length+1)& (0+255),b
  1267  00081A  0100               	movlb	0	; () banked
  1268  00081C  BFDC               	btfsc	timer1_lthread@length& (0+255),7,b
  1269  00081E  07DD               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1270  000820  0101               	movlb	1	; () banked
  1271  000822  0E01               	movlw	high main@msgbuffer
  1272  000824  0100               	movlb	0	; () banked
  1273  000826  6FDF               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1274  000828  0101               	movlb	1	; () banked
  1275  00082A  0EB9               	movlw	low main@msgbuffer
  1276  00082C  0100               	movlb	0	; () banked
  1277  00082E  6FDE               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1278  000830  EC4C  F00B         	call	_timer1_lthread	;wreg free
  1279                           
  1280                           ;main.c: 354: break;
  1281  000834  D749               	goto	l3304
  1282  000836                     l3338:
  1283                           
  1284                           ;main.c: 357: case 31:
  1285                           ;main.c: 358: case 32:
  1286                           ;main.c: 359: {
  1287                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1288  000836  0101               	movlb	1	; () banked
  1289  000838  0E01               	movlw	high main@uthread_data
  1290  00083A  0101               	movlb	1	; () banked
  1291  00083C  6FAF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1292  00083E  0101               	movlb	1	; () banked
  1293  000840  0EC9               	movlw	low main@uthread_data
  1294  000842  0101               	movlb	1	; () banked
  1295  000844  6FAE               	movwf	uart_lthread@uptr& (0+255),b
  1296  000846  0101               	movlb	1	; () banked
  1297  000848  C1DA  F1B0         	movff	main@msgtype,uart_lthread@msgtype
  1298  00084C  0101               	movlb	1	; () banked
  1299  00084E  6BB1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1300  000850  0101               	movlb	1	; () banked
  1301  000852  51DB               	movf	main@length& (0+255),w,b
  1302  000854  0101               	movlb	1	; () banked
  1303  000856  6FB2               	movwf	uart_lthread@length& (0+255),b
  1304  000858  0101               	movlb	1	; () banked
  1305  00085A  6BB3               	clrf	(uart_lthread@length+1)& (0+255),b
  1306  00085C  0101               	movlb	1	; () banked
  1307  00085E  BFB2               	btfsc	uart_lthread@length& (0+255),7,b
  1308  000860  07B3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1309  000862  0101               	movlb	1	; () banked
  1310  000864  0E01               	movlw	high main@msgbuffer
  1311  000866  0101               	movlb	1	; () banked
  1312  000868  6FB5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1313  00086A  0101               	movlb	1	; () banked
  1314  00086C  0EB9               	movlw	low main@msgbuffer
  1315  00086E  0101               	movlb	1	; () banked
  1316  000870  6FB4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1317  000872  EC80  F007         	call	_uart_lthread	;wreg free
  1318                           
  1319                           ;main.c: 361: break;
  1320  000876  D728               	goto	l3304
  1321  000878                     l3342:
  1322  000878  0101               	movlb	1	; () banked
  1323  00087A  51DA               	movf	main@msgtype& (0+255),w,b
  1324                           
  1325                           ; Switch size 1, requested type "space"
  1326                           ; Number of cases is 4, Range of values is 11 to 32
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte           13     7 (average)
  1330                           ;	Chosen strategy is simple_byte
  1331  00087C  0A0B               	xorlw	11	; case 11
  1332  00087E  B4D8               	btfsc	status,2,c
  1333  000880  D7B8               	goto	l3336
  1334  000882  0A15               	xorlw	21	; case 30
  1335  000884  B4D8               	btfsc	status,2,c
  1336  000886  D7D7               	goto	l3338
  1337  000888  0A01               	xorlw	1	; case 31
  1338  00088A  B4D8               	btfsc	status,2,c
  1339  00088C  D7D4               	goto	l3338
  1340  00088E  0A3F               	xorlw	63	; case 32
  1341  000890  B4D8               	btfsc	status,2,c
  1342  000892  D7D1               	goto	l3338
  1343  000894  D719               	goto	l3304
  1344  000896                     __end_of_main:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _uart_lthread *****************
  1352 ;; Defined at:
  1353 ;;		line 12 in file "src/uart_thread.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  uptr            2   12[BANK1 ] PTR struct __uart_thread
  1356 ;;		 -> main@uthread_data(10), 
  1357 ;;  msgtype         2   14[BANK1 ] int 
  1358 ;;  length          2   16[BANK1 ] int 
  1359 ;;  msgbuffer       2   18[BANK1 ] PTR unsigned char 
  1360 ;;		 -> main@msgbuffer(11), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  index           2   21[BANK1 ] int 
  1363 ;;  status          1   20[BANK1 ] char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   12[BANK1 ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1373 ;;      Params:         0       0       8       0       0
  1374 ;;      Locals:         0       0       3       0       0
  1375 ;;      Temps:          0       0       0       0       0
  1376 ;;      Totals:         0       0      11       0       0
  1377 ;;Total ram usage:       11 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:   13
  1380 ;; This function calls:
  1381 ;;		_FromMainLow_sendmsg
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text1
  1388  000F00                     __ptext1:
  1389                           	opt stack 0
  1390  000F00                     _uart_lthread:
  1391                           	opt stack 17
  1392                           
  1393                           ;uart_thread.c: 13: if (msgtype == 30) {
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;incstack = 0
  1397  000F00  0101               	movlb	1	; () banked
  1398  000F02  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1399  000F04  0A1E               	xorlw	30
  1400  000F06  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1401  000F08  B4D8               	btfsc	status,2,c
  1402  000F0A  0012               	return	
  1403                           
  1404                           ; BSR set to: 1
  1405                           ;uart_thread.c: 16: else if(msgtype == 31){
  1406                           
  1407                           ; BSR set to: 1
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;uart_thread.c: 15: }
  1411  000F0C  0101               	movlb	1	; () banked
  1412  000F0E  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1413  000F10  0A1F               	xorlw	31
  1414  000F12  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1415  000F14  A4D8               	btfss	status,2,c
  1416  000F16  D041               	goto	l3244
  1417                           
  1418                           ; BSR set to: 1
  1419                           ;uart_thread.c: 18: int index = 0;
  1420  000F18  0E00               	movlw	0
  1421  000F1A  0101               	movlb	1	; () banked
  1422  000F1C  6FB8               	movwf	(uart_lthread@index+1)& (0+255),b
  1423  000F1E  0E00               	movlw	0
  1424  000F20  0101               	movlb	1	; () banked
  1425  000F22  6FB7               	movwf	uart_lthread@index& (0+255),b
  1426                           
  1427                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1428  000F24  0E00               	movlw	0
  1429  000F26  0101               	movlb	1	; () banked
  1430  000F28  6FB8               	movwf	(uart_lthread@index+1)& (0+255),b
  1431  000F2A  0E00               	movlw	0
  1432  000F2C  0101               	movlb	1	; () banked
  1433  000F2E  6FB7               	movwf	uart_lthread@index& (0+255),b
  1434  000F30                     
  1435                           ; BSR set to: 1
  1436  000F30  0101               	movlb	1	; () banked
  1437  000F32  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1438  000F34  0A80               	xorlw	128
  1439  000F36  0F80               	addlw	-128
  1440  000F38  0E0A               	movlw	10
  1441  000F3A  B4D8               	btfsc	status,2,c
  1442  000F3C  5DB7               	subwf	uart_lthread@index& (0+255),w,b
  1443  000F3E  B0D8               	btfsc	status,0,c
  1444  000F40  D01A               	goto	l3240
  1445                           
  1446                           ; BSR set to: 1
  1447                           
  1448                           ; BSR set to: 1
  1449                           
  1450                           ; BSR set to: 1
  1451  000F42  0101               	movlb	1	; () banked
  1452  000F44  51B7               	movf	uart_lthread@index& (0+255),w,b
  1453  000F46  0101               	movlb	1	; () banked
  1454  000F48  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1455  000F4A  6ED9               	movwf	fsr2l,c
  1456  000F4C  0101               	movlb	1	; () banked
  1457  000F4E  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1458  000F50  0101               	movlb	1	; () banked
  1459  000F52  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1460  000F54  6EDA               	movwf	fsr2h,c
  1461  000F56  0101               	movlb	1	; () banked
  1462  000F58  51B7               	movf	uart_lthread@index& (0+255),w,b
  1463  000F5A  0101               	movlb	1	; () banked
  1464  000F5C  25AE               	addwf	uart_lthread@uptr& (0+255),w,b
  1465  000F5E  6EE1               	movwf	fsr1l,c
  1466  000F60  0101               	movlb	1	; () banked
  1467  000F62  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1468  000F64  0101               	movlb	1	; () banked
  1469  000F66  21AF               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1470  000F68  6EE2               	movwf	fsr1h,c
  1471  000F6A  CFDF FFE7          	movff	indf2,indf1
  1472                           
  1473                           ; BSR set to: 1
  1474  000F6E  0101               	movlb	1	; () banked
  1475  000F70  4BB7               	infsnz	uart_lthread@index& (0+255),f,b
  1476  000F72  2BB8               	incf	(uart_lthread@index+1)& (0+255),f,b
  1477  000F74  D7DD               	goto	L2
  1478  000F76                     l3240:
  1479                           
  1480                           ; BSR set to: 1
  1481                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1482  000F76  C1B0  F0DE         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1483  000F7A  0101               	movlb	1	; () banked
  1484  000F7C  0100               	movlb	0	; () banked
  1485  000F7E  C1AF  F0E0         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1486  000F82  0101               	movlb	1	; () banked
  1487  000F84  0100               	movlb	0	; () banked
  1488  000F86  C1AE  F0DF         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1489  000F8A  0101               	movlb	1	; () banked
  1490  000F8C  51B2               	movf	uart_lthread@length& (0+255),w,b
  1491  000F8E  EC66  F00B         	call	_FromMainLow_sendmsg
  1492  000F92  0101               	movlb	1	; () banked
  1493  000F94  6FB6               	movwf	uart_lthread@status& (0+255),b
  1494                           
  1495                           ; BSR set to: 1
  1496                           ;uart_thread.c: 25: }
  1497                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1498                           
  1499                           ; BSR set to: 1
  1500  000F96  889D               	bsf	3997,4,c	;volatile
  1501                           
  1502                           ;uart_thread.c: 29: }
  1503  000F98  0012               	return	
  1504  000F9A                     l3244:
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;uart_thread.c: 30: else if(msgtype == 32){
  1508  000F9A  0101               	movlb	1	; () banked
  1509  000F9C  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1510  000F9E  0A20               	xorlw	32
  1511  000FA0  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1512  000FA2  A4D8               	btfss	status,2,c
  1513  000FA4  0012               	return	
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1517  000FA6  0101               	movlb	1	; () banked
  1518  000FA8  51B2               	movf	uart_lthread@length& (0+255),w,b
  1519  000FAA  0101               	movlb	1	; () banked
  1520  000FAC  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1521  000FAE  6ED9               	movwf	fsr2l,c
  1522  000FB0  0101               	movlb	1	; () banked
  1523  000FB2  51B3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1524  000FB4  0101               	movlb	1	; () banked
  1525  000FB6  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1526  000FB8  6EDA               	movwf	fsr2h,c
  1527  000FBA  0E00               	movlw	0
  1528  000FBC  6EDF               	movwf	indf2,c
  1529  000FBE  0012               	return	
  1530  000FC0                     __end_of_uart_lthread:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           indf1	equ	0xFE7
  1536                           fsr1h	equ	0xFE2
  1537                           fsr1l	equ	0xFE1
  1538                           indf2	equ	0xFDF
  1539                           fsr2h	equ	0xFDA
  1540                           fsr2l	equ	0xFD9
  1541                           status	equ	0xFD8
  1542                           
  1543 ;; *************** function _FromMainLow_sendmsg *****************
  1544 ;; Defined at:
  1545 ;;		line 150 in file "src/messages.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  length          1    wreg     unsigned char 
  1548 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1549 ;;  data            2   41[BANK0 ] PTR void 
  1550 ;;		 -> main@uthread_data(10), 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  length          1   11[BANK1 ] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      char 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1562 ;;      Params:         0       3       0       0       0
  1563 ;;      Locals:         0       0       1       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         0       3       1       0       0
  1566 ;;Total ram usage:        4 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:   12
  1569 ;; This function calls:
  1570 ;;		_send_msg
  1571 ;; This function is called by:
  1572 ;;		_uart_lthread
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text2
  1577  0016CC                     __ptext2:
  1578                           	opt stack 0
  1579  0016CC                     _FromMainLow_sendmsg:
  1580                           	opt stack 17
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;incstack = 0
  1584                           ;FromMainLow_sendmsg@length stored from wreg
  1585  0016CC  0101               	movlb	1	; () banked
  1586  0016CE  6FAD               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1587                           
  1588                           ; BSR set to: 1
  1589                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1590  0016D0  0101               	movlb	1	; () banked
  1591  0016D2  0E01               	movlw	high _FromMainLow_MQ
  1592  0016D4  0101               	movlb	1	; () banked
  1593  0016D6  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1594  0016D8  0101               	movlb	1	; () banked
  1595  0016DA  0E36               	movlw	low _FromMainLow_MQ
  1596  0016DC  0101               	movlb	1	; () banked
  1597  0016DE  6FA2               	movwf	send_msg@qptr& (0+255),b
  1598  0016E0  C1AD  F1A4         	movff	FromMainLow_sendmsg@length,send_msg@length
  1599  0016E4  C0DE  F1A5         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1600  0016E8  0100               	movlb	0	; () banked
  1601  0016EA  0101               	movlb	1	; () banked
  1602  0016EC  C0E0  F1A7         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1603  0016F0  0100               	movlb	0	; () banked
  1604  0016F2  0101               	movlb	1	; () banked
  1605  0016F4  C0DF  F1A6         	movff	FromMainLow_sendmsg@data,send_msg@data
  1606  0016F8  ECD9  F005         	call	_send_msg	;wreg free
  1607  0016FC  0012               	return	
  1608  0016FE                     __end_of_FromMainLow_sendmsg:
  1609                           	opt stack 0
  1610                           tblptru	equ	0xFF8
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           indf1	equ	0xFE7
  1614                           fsr1h	equ	0xFE2
  1615                           fsr1l	equ	0xFE1
  1616                           indf2	equ	0xFDF
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _send_msg *****************
  1622 ;; Defined at:
  1623 ;;		line 24 in file "src/messages.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1626 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1627 ;;  length          1    2[BANK1 ] unsigned char 
  1628 ;;  msgtype         1    3[BANK1 ] unsigned char 
  1629 ;;  data            2    4[BANK1 ] PTR void 
  1630 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  1631 ;;		 -> main@ic(28), main@uc(5), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  1634 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1635 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1636 ;;  tlength         2    6[BANK1 ] unsigned int 
  1637 ;;  slot            1    8[BANK1 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      char 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1647 ;;      Params:         0       0       6       0       0
  1648 ;;      Locals:         0       0       5       0       0
  1649 ;;      Temps:          0       1       0       0       0
  1650 ;;      Totals:         0       1      11       0       0
  1651 ;;Total ram usage:       12 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:   11
  1654 ;; This function calls:
  1655 ;;		_memcpy
  1656 ;; This function is called by:
  1657 ;;		_FromMainLow_sendmsg
  1658 ;;		_FromMainHigh_sendmsg
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text3
  1663  000BB2                     __ptext3:
  1664                           	opt stack 0
  1665  000BB2                     _send_msg:
  1666                           	opt stack 17
  1667                           
  1668                           ;messages.c: 25: unsigned char slot;
  1669                           ;messages.c: 27: msg *qmsg;
  1670                           ;messages.c: 28: size_t tlength = length;
  1671                           
  1672                           ;incstack = 0
  1673  000BB2  0101               	movlb	1	; () banked
  1674  000BB4  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  1675  000BB8  0101               	movlb	1	; () banked
  1676  000BBA  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1680  000BBC  0101               	movlb	1	; () banked
  1681  000BBE  EE20 F034          	lfsr	2,52
  1682  000BC2  0101               	movlb	1	; () banked
  1683  000BC4  51A2               	movf	send_msg@qptr& (0+255),w,b
  1684  000BC6  26D9               	addwf	fsr2l,f,c
  1685  000BC8  0101               	movlb	1	; () banked
  1686  000BCA  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1687  000BCC  22DA               	addwfc	fsr2h,f,c
  1688  000BCE  50DF               	movf	indf2,w,c
  1689  000BD0  0101               	movlb	1	; () banked
  1690  000BD2  6FAA               	movwf	send_msg@slot& (0+255),b
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1694  000BD4  0101               	movlb	1	; () banked
  1695  000BD6  51AA               	movf	send_msg@slot& (0+255),w,b
  1696  000BD8  0D0D               	mullw	13
  1697  000BDA  50F3               	movf	prodl,w,c
  1698  000BDC  0101               	movlb	1	; () banked
  1699  000BDE  25A2               	addwf	send_msg@qptr& (0+255),w,b
  1700  000BE0  0101               	movlb	1	; () banked
  1701  000BE2  6FAB               	movwf	send_msg@qmsg& (0+255),b
  1702  000BE4  50F4               	movf	prodh,w,c
  1703  000BE6  0101               	movlb	1	; () banked
  1704  000BE8  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1705  000BEA  0101               	movlb	1	; () banked
  1706  000BEC  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;messages.c: 41: if (qmsg->full != 0) {
  1710  000BEE  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1711  000BF2  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1712  000BF6  50DF               	movf	indf2,w,c
  1713  000BF8  B4D8               	btfsc	status,2,c
  1714  000BFA  D002               	goto	l2952
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;messages.c: 42: return (-1);
  1718  000BFC  0EFF               	movlw	255
  1719  000BFE  0012               	return	
  1720  000C00                     l2952:
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;messages.c: 43: }
  1724                           ;messages.c: 46: qmsg->length = length;
  1725  000C00  0101               	movlb	1	; () banked
  1726  000C02  EE20 F001          	lfsr	2,1
  1727  000C06  0101               	movlb	1	; () banked
  1728  000C08  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1729  000C0A  26D9               	addwf	fsr2l,f,c
  1730  000C0C  0101               	movlb	1	; () banked
  1731  000C0E  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1732  000C10  22DA               	addwfc	fsr2h,f,c
  1733  000C12  0101               	movlb	1	; () banked
  1734  000C14  C1A4  FFDF         	movff	send_msg@length,indf2
  1735                           
  1736                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1737  000C18  0101               	movlb	1	; () banked
  1738  000C1A  EE20 F002          	lfsr	2,2
  1739  000C1E  0101               	movlb	1	; () banked
  1740  000C20  51AB               	movf	send_msg@qmsg& (0+255),w,b
  1741  000C22  26D9               	addwf	fsr2l,f,c
  1742  000C24  0101               	movlb	1	; () banked
  1743  000C26  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1744  000C28  22DA               	addwfc	fsr2h,f,c
  1745  000C2A  0101               	movlb	1	; () banked
  1746  000C2C  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  1747                           
  1748                           ; BSR set to: 1
  1749                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1750  000C30  0E03               	movlw	3
  1751  000C32  0101               	movlb	1	; () banked
  1752  000C34  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  1753  000C36  0100               	movlb	0	; () banked
  1754  000C38  6FD3               	movwf	memcpy@d1& (0+255),b
  1755  000C3A  0E00               	movlw	0
  1756  000C3C  0101               	movlb	1	; () banked
  1757  000C3E  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1758  000C40  0100               	movlb	0	; () banked
  1759  000C42  6FD4               	movwf	(memcpy@d1+1)& (0+255),b
  1760  000C44  0101               	movlb	1	; () banked
  1761  000C46  0100               	movlb	0	; () banked
  1762  000C48  C1A7  F0D6         	movff	send_msg@data+1,memcpy@s1+1
  1763  000C4C  0101               	movlb	1	; () banked
  1764  000C4E  0100               	movlb	0	; () banked
  1765  000C50  C1A6  F0D5         	movff	send_msg@data,memcpy@s1
  1766  000C54  C1A8  F0D7         	movff	send_msg@tlength,memcpy@n
  1767  000C58  C1A9  F0D8         	movff	send_msg@tlength+1,memcpy@n+1
  1768  000C5C  EC4A  F00A         	call	_memcpy	;wreg free
  1769                           
  1770                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1771  000C60  0101               	movlb	1	; () banked
  1772  000C62  EE20 F034          	lfsr	2,52
  1773  000C66  0101               	movlb	1	; () banked
  1774  000C68  51A2               	movf	send_msg@qptr& (0+255),w,b
  1775  000C6A  26D9               	addwf	fsr2l,f,c
  1776  000C6C  0101               	movlb	1	; () banked
  1777  000C6E  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1778  000C70  22DA               	addwfc	fsr2h,f,c
  1779  000C72  0101               	movlb	1	; () banked
  1780  000C74  EE10 F034          	lfsr	1,52
  1781  000C78  0101               	movlb	1	; () banked
  1782  000C7A  51A2               	movf	send_msg@qptr& (0+255),w,b
  1783  000C7C  26E1               	addwf	fsr1l,f,c
  1784  000C7E  0101               	movlb	1	; () banked
  1785  000C80  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1786  000C82  22E2               	addwfc	fsr1h,f,c
  1787  000C84  50E7               	movf	indf1,w,c
  1788  000C86  0100               	movlb	0	; () banked
  1789  000C88  6FDD               	movwf	??_send_msg& (0+255),b
  1790  000C8A  0100               	movlb	0	; () banked
  1791  000C8C  29DD               	incf	??_send_msg& (0+255),w,b
  1792  000C8E  0B03               	andlw	3
  1793  000C90  6EDF               	movwf	indf2,c
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;messages.c: 59: qmsg->full = 1;
  1797  000C92  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  1798  000C96  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1799  000C9A  0E01               	movlw	1
  1800  000C9C  6EDF               	movwf	indf2,c
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;messages.c: 60: return (1);
  1804  000C9E  0E01               	movlw	1
  1805  000CA0  0012               	return	
  1806  000CA2                     __end_of_send_msg:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           prodh	equ	0xFF4
  1810                           prodl	equ	0xFF3
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           indf1	equ	0xFE7
  1814                           fsr1h	equ	0xFE2
  1815                           fsr1l	equ	0xFE1
  1816                           indf2	equ	0xFDF
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _timer1_lthread *****************
  1822 ;; Defined at:
  1823 ;;		line 15 in file "src/timer1_thread.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  tptr            2   34[BANK0 ] PTR struct __timer1_thre
  1826 ;;		 -> main@t1thread_data(2), 
  1827 ;;  msgtype         2   36[BANK0 ] int 
  1828 ;;  length          2   38[BANK0 ] int 
  1829 ;;  msgbuffer       2   40[BANK0 ] PTR unsigned char 
  1830 ;;		 -> main@msgbuffer(11), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   34[BANK0 ] int 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1842 ;;      Params:         0       8       0       0       0
  1843 ;;      Locals:         0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0
  1845 ;;      Totals:         0       8       0       0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:   11
  1849 ;; This function calls:
  1850 ;;		___lwmod
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text4
  1857  001698                     __ptext4:
  1858                           	opt stack 0
  1859  001698                     _timer1_lthread:
  1860                           	opt stack 19
  1861                           
  1862                           ;timer1_thread.c: 16: tptr->msgcount++;
  1863                           
  1864                           ;incstack = 0
  1865  001698  C0D8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1866  00169C  C0D9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1867  0016A0  2ADE               	incf	postinc2,f,c
  1868  0016A2  0E00               	movlw	0
  1869  0016A4  22DD               	addwfc	postdec2,f,c
  1870                           
  1871                           ;timer1_thread.c: 18: if ((tptr->msgcount % 6) == 5) {
  1872  0016A6  C0D8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1873  0016AA  C0D9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1874  0016AE  0100               	movlb	0	; () banked
  1875  0016B0  CFDE F0D3          	movff	postinc2,___lwmod@dividend
  1876  0016B4  0100               	movlb	0	; () banked
  1877  0016B6  CFDD F0D4          	movff	postdec2,___lwmod@dividend+1
  1878  0016BA  0E00               	movlw	0
  1879  0016BC  0100               	movlb	0	; () banked
  1880  0016BE  6FD6               	movwf	(___lwmod@divisor+1)& (0+255),b
  1881  0016C0  0E06               	movlw	6
  1882  0016C2  0100               	movlb	0	; () banked
  1883  0016C4  6FD5               	movwf	___lwmod@divisor& (0+255),b
  1884  0016C6  EC96  F009         	call	___lwmod	;wreg free
  1885  0016CA  0012               	return	
  1886  0016CC                     __end_of_timer1_lthread:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           prodh	equ	0xFF4
  1890                           prodl	equ	0xFF3
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           indf1	equ	0xFE7
  1894                           fsr1h	equ	0xFE2
  1895                           fsr1l	equ	0xFE1
  1896                           indf2	equ	0xFDF
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function ___lwmod *****************
  1904 ;; Defined at:
  1905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  dividend        2   29[BANK0 ] unsigned int 
  1908 ;;  divisor         2   31[BANK0 ] unsigned int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  counter         1   33[BANK0 ] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   29[BANK0 ] unsigned int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1920 ;;      Params:         0       4       0       0       0
  1921 ;;      Locals:         0       1       0       0       0
  1922 ;;      Temps:          0       0       0       0       0
  1923 ;;      Totals:         0       5       0       0       0
  1924 ;;Total ram usage:        5 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:   10
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_timer1_lthread
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text5
  1935  00132C                     __ptext5:
  1936                           	opt stack 0
  1937  00132C                     ___lwmod:
  1938                           	opt stack 19
  1939                           
  1940                           ;incstack = 0
  1941  00132C  0100               	movlb	0	; () banked
  1942  00132E  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1943  001330  11D5               	iorwf	___lwmod@divisor& (0+255),w,b
  1944  001332  B4D8               	btfsc	status,2,c
  1945  001334  D026               	goto	l1043
  1946                           
  1947                           ; BSR set to: 0
  1948  001336  0E01               	movlw	1
  1949  001338  0100               	movlb	0	; () banked
  1950  00133A  6FD7               	movwf	___lwmod@counter& (0+255),b
  1951  00133C  D006               	goto	l2346
  1952  00133E                     l2344:
  1953                           
  1954                           ; BSR set to: 0
  1955  00133E  0100               	movlb	0	; () banked
  1956  001340  90D8               	bcf	status,0,c
  1957  001342  37D5               	rlcf	___lwmod@divisor& (0+255),f,b
  1958  001344  37D6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1959  001346  0100               	movlb	0	; () banked
  1960  001348  2BD7               	incf	___lwmod@counter& (0+255),f,b
  1961  00134A                     l2346:
  1962                           
  1963                           ; BSR set to: 0
  1964  00134A  0100               	movlb	0	; () banked
  1965  00134C  AFD6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1966  00134E  D7F7               	goto	l2344
  1967  001350                     l2348:
  1968                           
  1969                           ; BSR set to: 0
  1970  001350  0100               	movlb	0	; () banked
  1971  001352  51D5               	movf	___lwmod@divisor& (0+255),w,b
  1972  001354  0100               	movlb	0	; () banked
  1973  001356  5DD3               	subwf	___lwmod@dividend& (0+255),w,b
  1974  001358  0100               	movlb	0	; () banked
  1975  00135A  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1976  00135C  0100               	movlb	0	; () banked
  1977  00135E  59D4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1978  001360  A0D8               	btfss	status,0,c
  1979  001362  D008               	goto	l2352
  1980                           
  1981                           ; BSR set to: 0
  1982  001364  0100               	movlb	0	; () banked
  1983  001366  51D5               	movf	___lwmod@divisor& (0+255),w,b
  1984  001368  0100               	movlb	0	; () banked
  1985  00136A  5FD3               	subwf	___lwmod@dividend& (0+255),f,b
  1986  00136C  0100               	movlb	0	; () banked
  1987  00136E  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1988  001370  0100               	movlb	0	; () banked
  1989  001372  5BD4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1990  001374                     l2352:
  1991                           
  1992                           ; BSR set to: 0
  1993  001374  0100               	movlb	0	; () banked
  1994  001376  90D8               	bcf	status,0,c
  1995  001378  33D6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1996  00137A  33D5               	rrcf	___lwmod@divisor& (0+255),f,b
  1997                           
  1998                           ; BSR set to: 0
  1999  00137C  0100               	movlb	0	; () banked
  2000  00137E  2FD7               	decfsz	___lwmod@counter& (0+255),f,b
  2001  001380  D7E7               	goto	l2348
  2002  001382                     l1043:
  2003                           
  2004                           ; BSR set to: 0
  2005  001382  C0D3  F0D3         	movff	___lwmod@dividend,?___lwmod
  2006  001386  C0D4  F0D4         	movff	___lwmod@dividend+1,?___lwmod+1
  2007                           
  2008                           ; BSR set to: 0
  2009  00138A  0012               	return	
  2010  00138C                     __end_of___lwmod:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           prodh	equ	0xFF4
  2014                           prodl	equ	0xFF3
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           indf1	equ	0xFE7
  2018                           fsr1h	equ	0xFE2
  2019                           fsr1l	equ	0xFE1
  2020                           indf2	equ	0xFDF
  2021                           postinc2	equ	0xFDE
  2022                           postdec2	equ	0xFDD
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _timer0_lthread *****************
  2028 ;; Defined at:
  2029 ;;		line 9 in file "src/timer0_thread.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  2032 ;;		 -> main@t0thread_data(2), 
  2033 ;;  msgtype         2   31[BANK0 ] int 
  2034 ;;  length          2   33[BANK0 ] int 
  2035 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  2036 ;;		 -> main@msgbuffer(11), 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  msgval          2   37[BANK0 ] PTR unsigned int 
  2039 ;;		 -> main@msgbuffer(11), 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   29[BANK0 ] int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2049 ;;      Params:         0       8       0       0       0
  2050 ;;      Locals:         0       2       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         0      10       0       0       0
  2053 ;;Total ram usage:       10 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:   10
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text6
  2064  00199A                     __ptext6:
  2065                           	opt stack 0
  2066  00199A                     _timer0_lthread:
  2067                           	opt stack 20
  2068                           
  2069                           ;timer0_thread.c: 10: unsigned int *msgval;
  2070                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;incstack = 0
  2074  00199A  0100               	movlb	0	; () banked
  2075  00199C  C0DA  F0DC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2076  0019A0  0100               	movlb	0	; () banked
  2077  0019A2  C0D9  F0DB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2078                           
  2079                           ; BSR set to: 0
  2080  0019A6  0012               	return	
  2081  0019A8                     __end_of_timer0_lthread:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf1	equ	0xFE7
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _start_i2c_slave_reply *****************
  2099 ;; Defined at:
  2100 ;;		line 53 in file "src/my_i2c.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  length          1    wreg     unsigned char 
  2103 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2104 ;;		 -> main@msgbuffer(11), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  length          1   33[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2116 ;;      Params:         0       2       0       0       0
  2117 ;;      Locals:         0       1       0       0       0
  2118 ;;      Temps:          0       2       0       0       0
  2119 ;;      Totals:         0       5       0       0       0
  2120 ;;Total ram usage:        5 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:   10
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text7
  2131  0009B8                     __ptext7:
  2132                           	opt stack 0
  2133  0009B8                     _start_i2c_slave_reply:
  2134                           	opt stack 20
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;incstack = 0
  2138                           ;start_i2c_slave_reply@length stored from wreg
  2139  0009B8  0100               	movlb	0	; () banked
  2140  0009BA  6FD7               	movwf	start_i2c_slave_reply@length& (0+255),b
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2144  0009BC  0100               	movlb	0	; () banked
  2145  0009BE  EE20 F019          	lfsr	2,25
  2146  0009C2  0100               	movlb	0	; () banked
  2147  0009C4  51E1               	movf	_ic_ptr& (0+255),w,b
  2148  0009C6  26D9               	addwf	fsr2l,f,c
  2149  0009C8  0100               	movlb	0	; () banked
  2150  0009CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2151  0009CC  22DA               	addwfc	fsr2h,f,c
  2152  0009CE  0E00               	movlw	0
  2153  0009D0  6EDF               	movwf	indf2,c
  2154  0009D2  D03E               	goto	l2752
  2155  0009D4                     l2748:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2159  0009D4  0100               	movlb	0	; () banked
  2160  0009D6  EE20 F019          	lfsr	2,25
  2161  0009DA  0100               	movlb	0	; () banked
  2162  0009DC  51E1               	movf	_ic_ptr& (0+255),w,b
  2163  0009DE  26D9               	addwf	fsr2l,f,c
  2164  0009E0  0100               	movlb	0	; () banked
  2165  0009E2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2166  0009E4  22DA               	addwfc	fsr2h,f,c
  2167  0009E6  50DF               	movf	indf2,w,c
  2168  0009E8  0100               	movlb	0	; () banked
  2169  0009EA  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2170  0009EC  0100               	movlb	0	; () banked
  2171  0009EE  51D5               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2172  0009F0  0D01               	mullw	1
  2173  0009F2  50F3               	movf	prodl,w,c
  2174  0009F4  0100               	movlb	0	; () banked
  2175  0009F6  25D3               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2176  0009F8  6ED9               	movwf	fsr2l,c
  2177  0009FA  50F4               	movf	prodh,w,c
  2178  0009FC  0100               	movlb	0	; () banked
  2179  0009FE  21D4               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2180  000A00  6EDA               	movwf	fsr2h,c
  2181  000A02  0100               	movlb	0	; () banked
  2182  000A04  EE10 F019          	lfsr	1,25
  2183  000A08  0100               	movlb	0	; () banked
  2184  000A0A  51E1               	movf	_ic_ptr& (0+255),w,b
  2185  000A0C  26E1               	addwf	fsr1l,f,c
  2186  000A0E  0100               	movlb	0	; () banked
  2187  000A10  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2188  000A12  22E2               	addwfc	fsr1h,f,c
  2189  000A14  50E7               	movf	indf1,w,c
  2190  000A16  0100               	movlb	0	; () banked
  2191  000A18  6FD6               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2192  000A1A  0100               	movlb	0	; () banked
  2193  000A1C  51D6               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2194  000A1E  0D01               	mullw	1
  2195  000A20  0E0F               	movlw	15
  2196  000A22  26F3               	addwf	prodl,f,c
  2197  000A24  0E00               	movlw	0
  2198  000A26  22F4               	addwfc	prodh,f,c
  2199  000A28  50F3               	movf	prodl,w,c
  2200  000A2A  0100               	movlb	0	; () banked
  2201  000A2C  25E1               	addwf	_ic_ptr& (0+255),w,b
  2202  000A2E  6EE1               	movwf	fsr1l,c
  2203  000A30  50F4               	movf	prodh,w,c
  2204  000A32  0100               	movlb	0	; () banked
  2205  000A34  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2206  000A36  6EE2               	movwf	fsr1h,c
  2207  000A38  CFDF FFE7          	movff	indf2,indf1
  2208                           
  2209                           ; BSR set to: 0
  2210  000A3C  0100               	movlb	0	; () banked
  2211  000A3E  EE20 F019          	lfsr	2,25
  2212  000A42  0100               	movlb	0	; () banked
  2213  000A44  51E1               	movf	_ic_ptr& (0+255),w,b
  2214  000A46  26D9               	addwf	fsr2l,f,c
  2215  000A48  0100               	movlb	0	; () banked
  2216  000A4A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2217  000A4C  22DA               	addwfc	fsr2h,f,c
  2218  000A4E  2ADF               	incf	indf2,f,c
  2219  000A50                     l2752:
  2220                           
  2221                           ; BSR set to: 0
  2222  000A50  0100               	movlb	0	; () banked
  2223  000A52  EE20 F019          	lfsr	2,25
  2224  000A56  0100               	movlb	0	; () banked
  2225  000A58  51E1               	movf	_ic_ptr& (0+255),w,b
  2226  000A5A  26D9               	addwf	fsr2l,f,c
  2227  000A5C  0100               	movlb	0	; () banked
  2228  000A5E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2229  000A60  22DA               	addwfc	fsr2h,f,c
  2230  000A62  50DF               	movf	indf2,w,c
  2231  000A64  0100               	movlb	0	; () banked
  2232  000A66  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2233  000A68  0100               	movlb	0	; () banked
  2234  000A6A  51D7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2235  000A6C  0100               	movlb	0	; () banked
  2236  000A6E  5DD5               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2237  000A70  A0D8               	btfss	status,0,c
  2238  000A72  D7B0               	goto	l2748
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;my_i2c.c: 57: }
  2242                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2243                           
  2244                           ; BSR set to: 0
  2245  000A74  0100               	movlb	0	; () banked
  2246  000A76  EE20 F019          	lfsr	2,25
  2247  000A7A  0100               	movlb	0	; () banked
  2248  000A7C  51E1               	movf	_ic_ptr& (0+255),w,b
  2249  000A7E  26D9               	addwf	fsr2l,f,c
  2250  000A80  0100               	movlb	0	; () banked
  2251  000A82  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2252  000A84  22DA               	addwfc	fsr2h,f,c
  2253  000A86  0100               	movlb	0	; () banked
  2254  000A88  C0D7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2255                           
  2256                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2257  000A8C  0100               	movlb	0	; () banked
  2258  000A8E  EE20 F01A          	lfsr	2,26
  2259  000A92  0100               	movlb	0	; () banked
  2260  000A94  51E1               	movf	_ic_ptr& (0+255),w,b
  2261  000A96  26D9               	addwf	fsr2l,f,c
  2262  000A98  0100               	movlb	0	; () banked
  2263  000A9A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2264  000A9C  22DA               	addwfc	fsr2h,f,c
  2265  000A9E  0E01               	movlw	1
  2266  000AA0  6EDF               	movwf	indf2,c
  2267                           
  2268                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2269  000AA2  0100               	movlb	0	; () banked
  2270  000AA4  EE20 F00F          	lfsr	2,15
  2271  000AA8  0100               	movlb	0	; () banked
  2272  000AAA  51E1               	movf	_ic_ptr& (0+255),w,b
  2273  000AAC  26D9               	addwf	fsr2l,f,c
  2274  000AAE  0100               	movlb	0	; () banked
  2275  000AB0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2276  000AB2  22DA               	addwfc	fsr2h,f,c
  2277  000AB4  50DF               	movf	indf2,w,c
  2278  000AB6  6EC9               	movwf	4041,c	;volatile
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2282  000AB8  88C6               	bsf	4038,4,c	;volatile
  2283                           
  2284                           ; BSR set to: 0
  2285  000ABA  0012               	return	
  2286  000ABC                     __end_of_start_i2c_slave_reply:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           prodh	equ	0xFF4
  2290                           prodl	equ	0xFF3
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           indf1	equ	0xFE7
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           postinc2	equ	0xFDE
  2298                           postdec2	equ	0xFDD
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           
  2303 ;; *************** function _init_uart_recv *****************
  2304 ;; Defined at:
  2305 ;;		line 80 in file "src/my_uart.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  2308 ;;		 -> main@uc(5), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;		None               void
  2313 ;; Registers used:
  2314 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2320 ;;      Params:         0       2       0       0       0
  2321 ;;      Locals:         0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       2       0       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:   10
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text8
  2335  0018F2                     __ptext8:
  2336                           	opt stack 0
  2337  0018F2                     _init_uart_recv:
  2338                           	opt stack 20
  2339                           
  2340                           ;my_uart.c: 81: uc_ptr = uc;
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;incstack = 0
  2344  0018F2  0100               	movlb	0	; () banked
  2345  0018F4  C0D4  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2346  0018F8  0100               	movlb	0	; () banked
  2347  0018FA  C0D3  F049         	movff	init_uart_recv@uc,_uc_ptr
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2351  0018FE  EE20 F004          	lfsr	2,4
  2352  001902  5049               	movf	_uc_ptr,w,c
  2353  001904  26D9               	addwf	fsr2l,f,c
  2354  001906  504A               	movf	_uc_ptr+1,w,c
  2355  001908  22DA               	addwfc	fsr2h,f,c
  2356  00190A  0E00               	movlw	0
  2357  00190C  6EDF               	movwf	indf2,c
  2358                           
  2359                           ; BSR set to: 0
  2360  00190E  0012               	return	
  2361  001910                     __end_of_init_uart_recv:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           prodh	equ	0xFF4
  2365                           prodl	equ	0xFF3
  2366                           postinc0	equ	0xFEE
  2367                           wreg	equ	0xFE8
  2368                           indf1	equ	0xFE7
  2369                           fsr1h	equ	0xFE2
  2370                           fsr1l	equ	0xFE1
  2371                           indf2	equ	0xFDF
  2372                           postinc2	equ	0xFDE
  2373                           postdec2	equ	0xFDD
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _init_uart_lthread *****************
  2379 ;; Defined at:
  2380 ;;		line 7 in file "src/uart_thread.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  2383 ;;		 -> main@uthread_data(10), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		None
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2395 ;;      Params:         0       2       0       0       0
  2396 ;;      Locals:         0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0
  2398 ;;      Totals:         0       2       0       0       0
  2399 ;;Total ram usage:        2 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:   10
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text9
  2410  0019C2                     __ptext9:
  2411                           	opt stack 0
  2412  0019C2                     _init_uart_lthread:
  2413                           	opt stack 20
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;incstack = 0
  2417  0019C2  0012               	return	
  2418  0019C4                     __end_of_init_uart_lthread:
  2419                           	opt stack 0
  2420                           tblptru	equ	0xFF8
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           indf1	equ	0xFE7
  2426                           fsr1h	equ	0xFE2
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           postinc2	equ	0xFDE
  2430                           postdec2	equ	0xFDD
  2431                           fsr2h	equ	0xFDA
  2432                           fsr2l	equ	0xFD9
  2433                           status	equ	0xFD8
  2434                           
  2435 ;; *************** function _init_timer1_lthread *****************
  2436 ;; Defined at:
  2437 ;;		line 7 in file "src/timer1_thread.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  2440 ;;		 -> main@t1thread_data(2), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;		None               void
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2452 ;;      Params:         0       2       0       0       0
  2453 ;;      Locals:         0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0
  2455 ;;      Totals:         0       2       0       0       0
  2456 ;;Total ram usage:        2 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:   10
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text10
  2467  001942                     __ptext10:
  2468                           	opt stack 0
  2469  001942                     _init_timer1_lthread:
  2470                           	opt stack 20
  2471                           
  2472                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2473                           
  2474                           ;incstack = 0
  2475  001942  C0D3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2476  001946  C0D4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2477  00194A  0E00               	movlw	0
  2478  00194C  6EDE               	movwf	postinc2,c
  2479  00194E  0E00               	movlw	0
  2480  001950  6EDD               	movwf	postdec2,c
  2481  001952  0012               	return	
  2482  001954                     __end_of_init_timer1_lthread:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           prodh	equ	0xFF4
  2486                           prodl	equ	0xFF3
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           indf1	equ	0xFE7
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           postdec2	equ	0xFDD
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _init_queues *****************
  2500 ;; Defined at:
  2501 ;;		line 194 in file "src/messages.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;		None               void
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:   11
  2522 ;; This function calls:
  2523 ;;		_init_queue
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text11
  2530  0013E8                     __ptext11:
  2531                           	opt stack 0
  2532  0013E8                     _init_queues:
  2533                           	opt stack 19
  2534                           
  2535                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2536                           
  2537                           ;incstack = 0
  2538  0013E8  0E00               	movlw	0
  2539  0013EA  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2540                           
  2541                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2542  0013EC  0100               	movlb	0	; () banked
  2543  0013EE  0E00               	movlw	high _ToMainLow_MQ
  2544  0013F0  0100               	movlb	0	; () banked
  2545  0013F2  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2546  0013F4  0100               	movlb	0	; () banked
  2547  0013F6  0E80               	movlw	low _ToMainLow_MQ
  2548  0013F8  0100               	movlb	0	; () banked
  2549  0013FA  6FD3               	movwf	init_queue@qptr& (0+255),b
  2550  0013FC  EC32  F009         	call	_init_queue	;wreg free
  2551                           
  2552                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2553  001400  0101               	movlb	1	; () banked
  2554  001402  0E01               	movlw	high _ToMainHigh_MQ
  2555  001404  0100               	movlb	0	; () banked
  2556  001406  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2557  001408  0101               	movlb	1	; () banked
  2558  00140A  0E6C               	movlw	low _ToMainHigh_MQ
  2559  00140C  0100               	movlb	0	; () banked
  2560  00140E  6FD3               	movwf	init_queue@qptr& (0+255),b
  2561  001410  EC32  F009         	call	_init_queue	;wreg free
  2562                           
  2563                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2564  001414  0101               	movlb	1	; () banked
  2565  001416  0E01               	movlw	high _FromMainLow_MQ
  2566  001418  0100               	movlb	0	; () banked
  2567  00141A  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2568  00141C  0101               	movlb	1	; () banked
  2569  00141E  0E36               	movlw	low _FromMainLow_MQ
  2570  001420  0100               	movlb	0	; () banked
  2571  001422  6FD3               	movwf	init_queue@qptr& (0+255),b
  2572  001424  EC32  F009         	call	_init_queue	;wreg free
  2573                           
  2574                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2575  001428  0101               	movlb	1	; () banked
  2576  00142A  0E01               	movlw	high _FromMainHigh_MQ
  2577  00142C  0100               	movlb	0	; () banked
  2578  00142E  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2579  001430  0101               	movlb	1	; () banked
  2580  001432  0E00               	movlw	low _FromMainHigh_MQ
  2581  001434  0100               	movlb	0	; () banked
  2582  001436  6FD3               	movwf	init_queue@qptr& (0+255),b
  2583  001438  EC32  F009         	call	_init_queue	;wreg free
  2584  00143C  0012               	return	
  2585  00143E                     __end_of_init_queues:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           prodh	equ	0xFF4
  2589                           prodl	equ	0xFF3
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           indf1	equ	0xFE7
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           indf2	equ	0xFDF
  2596                           postinc2	equ	0xFDE
  2597                           postdec2	equ	0xFDD
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function _init_queue *****************
  2603 ;; Defined at:
  2604 ;;		line 14 in file "src/messages.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  2607 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  i               1   31[BANK0 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;		None               void
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2619 ;;      Params:         0       2       0       0       0
  2620 ;;      Locals:         0       1       0       0       0
  2621 ;;      Temps:          0       0       0       0       0
  2622 ;;      Totals:         0       3       0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:   10
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_init_queues
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text12
  2634  001264                     __ptext12:
  2635                           	opt stack 0
  2636  001264                     _init_queue:
  2637                           	opt stack 19
  2638                           
  2639                           ;messages.c: 15: unsigned char i;
  2640                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2641                           
  2642                           ;incstack = 0
  2643  001264  0100               	movlb	0	; () banked
  2644  001266  EE20 F034          	lfsr	2,52
  2645  00126A  0100               	movlb	0	; () banked
  2646  00126C  51D3               	movf	init_queue@qptr& (0+255),w,b
  2647  00126E  26D9               	addwf	fsr2l,f,c
  2648  001270  0100               	movlb	0	; () banked
  2649  001272  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2650  001274  22DA               	addwfc	fsr2h,f,c
  2651  001276  0E00               	movlw	0
  2652  001278  6EDF               	movwf	indf2,c
  2653                           
  2654                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2655  00127A  0100               	movlb	0	; () banked
  2656  00127C  EE20 F035          	lfsr	2,53
  2657  001280  0100               	movlb	0	; () banked
  2658  001282  51D3               	movf	init_queue@qptr& (0+255),w,b
  2659  001284  26D9               	addwf	fsr2l,f,c
  2660  001286  0100               	movlb	0	; () banked
  2661  001288  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2662  00128A  22DA               	addwfc	fsr2h,f,c
  2663  00128C  0E00               	movlw	0
  2664  00128E  6EDF               	movwf	indf2,c
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2668  001290  0E00               	movlw	0
  2669  001292  0100               	movlb	0	; () banked
  2670  001294  6FD5               	movwf	init_queue@i& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673  001296  0E03               	movlw	3
  2674  001298  0100               	movlb	0	; () banked
  2675  00129A  65D5               	cpfsgt	init_queue@i& (0+255),b
  2676  00129C  D001               	goto	l2240
  2677  00129E  0012               	return	
  2678  0012A0                     l2240:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;messages.c: 20: qptr->queue[i].full = 0;
  2682  0012A0  0100               	movlb	0	; () banked
  2683  0012A2  51D5               	movf	init_queue@i& (0+255),w,b
  2684  0012A4  0D0D               	mullw	13
  2685  0012A6  50F3               	movf	prodl,w,c
  2686  0012A8  0100               	movlb	0	; () banked
  2687  0012AA  25D3               	addwf	init_queue@qptr& (0+255),w,b
  2688  0012AC  6ED9               	movwf	fsr2l,c
  2689  0012AE  50F4               	movf	prodh,w,c
  2690  0012B0  0100               	movlb	0	; () banked
  2691  0012B2  21D4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2692  0012B4  6EDA               	movwf	fsr2h,c
  2693  0012B6  0E00               	movlw	0
  2694  0012B8  6EDF               	movwf	indf2,c
  2695                           
  2696                           ; BSR set to: 0
  2697  0012BA  0100               	movlb	0	; () banked
  2698  0012BC  2BD5               	incf	init_queue@i& (0+255),f,b
  2699                           
  2700                           ; BSR set to: 0
  2701  0012BE  0E03               	movlw	3
  2702  0012C0  0100               	movlb	0	; () banked
  2703  0012C2  65D5               	cpfsgt	init_queue@i& (0+255),b
  2704  0012C4  D7ED               	goto	l2240
  2705  0012C6  0012               	return	
  2706  0012C8                     __end_of_init_queue:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           prodh	equ	0xFF4
  2710                           prodl	equ	0xFF3
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           indf1	equ	0xFE7
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _init_i2c *****************
  2724 ;; Defined at:
  2725 ;;		line 268 in file "src/my_i2c.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  2728 ;;		 -> main@ic(28), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;		None               void
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2740 ;;      Params:         0       2       0       0       0
  2741 ;;      Locals:         0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0
  2743 ;;      Totals:         0       2       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:   10
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text13
  2755  0011FE                     __ptext13:
  2756                           	opt stack 0
  2757  0011FE                     _init_i2c:
  2758                           	opt stack 20
  2759                           
  2760                           ;my_i2c.c: 269: ic_ptr = ic;
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;incstack = 0
  2764  0011FE  0100               	movlb	0	; () banked
  2765  001200  C0D4  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  2766  001204  0100               	movlb	0	; () banked
  2767  001206  C0D3  F0E1         	movff	init_i2c@ic,_ic_ptr
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  2771  00120A  0100               	movlb	0	; () banked
  2772  00120C  EE20 F00A          	lfsr	2,10
  2773  001210  0100               	movlb	0	; () banked
  2774  001212  51E1               	movf	_ic_ptr& (0+255),w,b
  2775  001214  26D9               	addwf	fsr2l,f,c
  2776  001216  0100               	movlb	0	; () banked
  2777  001218  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2778  00121A  22DA               	addwfc	fsr2h,f,c
  2779  00121C  0E00               	movlw	0
  2780  00121E  6EDF               	movwf	indf2,c
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  2784  001220  0100               	movlb	0	; () banked
  2785  001222  EE20 F00B          	lfsr	2,11
  2786  001226  0100               	movlb	0	; () banked
  2787  001228  51E1               	movf	_ic_ptr& (0+255),w,b
  2788  00122A  26D9               	addwf	fsr2l,f,c
  2789  00122C  0100               	movlb	0	; () banked
  2790  00122E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2791  001230  22DA               	addwfc	fsr2h,f,c
  2792  001232  0E00               	movlw	0
  2793  001234  6EDF               	movwf	indf2,c
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  2797  001236  0100               	movlb	0	; () banked
  2798  001238  EE20 F00C          	lfsr	2,12
  2799  00123C  0100               	movlb	0	; () banked
  2800  00123E  51E1               	movf	_ic_ptr& (0+255),w,b
  2801  001240  26D9               	addwf	fsr2l,f,c
  2802  001242  0100               	movlb	0	; () banked
  2803  001244  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2804  001246  22DA               	addwfc	fsr2h,f,c
  2805  001248  0E05               	movlw	5
  2806  00124A  6EDF               	movwf	indf2,c
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  2810  00124C  0100               	movlb	0	; () banked
  2811  00124E  EE20 F00E          	lfsr	2,14
  2812  001252  0100               	movlb	0	; () banked
  2813  001254  51E1               	movf	_ic_ptr& (0+255),w,b
  2814  001256  26D9               	addwf	fsr2l,f,c
  2815  001258  0100               	movlb	0	; () banked
  2816  00125A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2817  00125C  22DA               	addwfc	fsr2h,f,c
  2818  00125E  0E00               	movlw	0
  2819  001260  6EDF               	movwf	indf2,c
  2820                           
  2821                           ; BSR set to: 0
  2822  001262  0012               	return	
  2823  001264                     __end_of_init_i2c:
  2824                           	opt stack 0
  2825                           tblptru	equ	0xFF8
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf1	equ	0xFE7
  2831                           fsr1h	equ	0xFE2
  2832                           fsr1l	equ	0xFE1
  2833                           indf2	equ	0xFDF
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function _i2c_configure_slave *****************
  2841 ;; Defined at:
  2842 ;;		line 279 in file "src/my_i2c.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  addr            1    wreg     unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  addr            1   29[BANK0 ] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;		None               void
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         0       1       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       1       0       0       0
  2860 ;;Total ram usage:        1 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:   10
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text14
  2871  0017EC                     __ptext14:
  2872                           	opt stack 0
  2873  0017EC                     _i2c_configure_slave:
  2874                           	opt stack 20
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;incstack = 0
  2878                           ;i2c_configure_slave@addr stored from wreg
  2879  0017EC  0100               	movlb	0	; () banked
  2880  0017EE  6FD3               	movwf	i2c_configure_slave@addr& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  2884  0017F0  8694               	bsf	3988,3,c	;volatile
  2885                           
  2886                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  2887  0017F2  8894               	bsf	3988,4,c	;volatile
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;my_i2c.c: 297: SSPADD = addr;
  2891  0017F4  C0D3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  2895  0017F8  0E00               	movlw	0
  2896  0017FA  6EC7               	movwf	4039,c	;volatile
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  2900  0017FC  0E00               	movlw	0
  2901  0017FE  6EC6               	movwf	4038,c	;volatile
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  2905  001800  0E00               	movlw	0
  2906  001802  6EC5               	movwf	4037,c	;volatile
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  2910  001804  0E0E               	movlw	14
  2911  001806  12C6               	iorwf	4038,f,c	;volatile
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  2915  001808  8EC7               	bsf	4039,7,c	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  2919  00180A  8694               	bsf	3988,3,c	;volatile
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  2923  00180C  8894               	bsf	3988,4,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  2927  00180E  80C5               	bsf	4037,0,c	;volatile
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  2931  001810  8AC6               	bsf	4038,5,c	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934  001812  0012               	return	
  2935  001814                     __end_of_i2c_configure_slave:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           indf1	equ	0xFE7
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           postdec2	equ	0xFDD
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _enable_interrupts *****************
  2953 ;; Defined at:
  2954 ;;		line 14 in file "src/interrupts.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		None
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2968 ;;      Params:         0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:   10
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text15
  2983  0019B4                     __ptext15:
  2984                           	opt stack 0
  2985  0019B4                     _enable_interrupts:
  2986                           	opt stack 20
  2987                           
  2988                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;incstack = 0
  2992  0019B4  8ED0               	bsf	4048,7,c	;volatile
  2993                           
  2994                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2995  0019B6  8EF2               	bsf	intcon,7,c	;volatile
  2996                           
  2997                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2998  0019B8  8CF2               	bsf	intcon,6,c	;volatile
  2999  0019BA  0012               	return	
  3000  0019BC                     __end_of_enable_interrupts:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           indf1	equ	0xFE7
  3009                           fsr1h	equ	0xFE2
  3010                           fsr1l	equ	0xFE1
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           postdec2	equ	0xFDD
  3014                           fsr2h	equ	0xFDA
  3015                           fsr2l	equ	0xFD9
  3016                           status	equ	0xFD8
  3017                           
  3018 ;; *************** function _block_on_To_msgqueues *****************
  3019 ;; Defined at:
  3020 ;;		line 256 in file "src/messages.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3034 ;;      Params:         0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:   13
  3041 ;; This function calls:
  3042 ;;		_Delay1KTCYx
  3043 ;;		_check_msg
  3044 ;;		_in_main
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text16
  3051  00138C                     __ptext16:
  3052                           	opt stack 0
  3053  00138C                     _block_on_To_msgqueues:
  3054                           	opt stack 17
  3055                           
  3056                           ;messages.c: 257: if (!in_main()) {
  3057                           
  3058                           ;incstack = 0
  3059  00138C  ECF8  F00A         	call	_in_main	;wreg free
  3060  001390  0100               	movlb	0	; () banked
  3061  001392  51D8               	movf	(?_in_main+1)& (0+255),w,b
  3062  001394  0100               	movlb	0	; () banked
  3063  001396  11D7               	iorwf	?_in_main& (0+255),w,b
  3064  001398  B4D8               	btfsc	status,2,c
  3065  00139A  0012               	return	
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;messages.c: 259: }
  3069                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3070                           
  3071                           ; BSR set to: 0
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;messages.c: 258: return;
  3075  00139C  0E01               	movlw	1
  3076  00139E  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3077  0013A0                     l2726:
  3078                           
  3079                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3080  0013A0  0101               	movlb	1	; () banked
  3081  0013A2  0E01               	movlw	high _ToMainHigh_MQ
  3082  0013A4  0100               	movlb	0	; () banked
  3083  0013A6  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3084  0013A8  0101               	movlb	1	; () banked
  3085  0013AA  0E6C               	movlw	low _ToMainHigh_MQ
  3086  0013AC  0100               	movlb	0	; () banked
  3087  0013AE  6FD3               	movwf	check_msg@qptr& (0+255),b
  3088  0013B0  EC7F  F00B         	call	_check_msg	;wreg free
  3089  0013B4  0900               	iorlw	0
  3090  0013B6  B4D8               	btfsc	status,2,c
  3091  0013B8  D003               	goto	l2732
  3092                           
  3093                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3094  0013BA  0E00               	movlw	0
  3095  0013BC  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3096  0013BE  0012               	return	
  3097  0013C0                     l2732:
  3098                           
  3099                           ;messages.c: 271: }
  3100                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3101  0013C0  0100               	movlb	0	; () banked
  3102  0013C2  0E00               	movlw	high _ToMainLow_MQ
  3103  0013C4  0100               	movlb	0	; () banked
  3104  0013C6  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3105  0013C8  0100               	movlb	0	; () banked
  3106  0013CA  0E80               	movlw	low _ToMainLow_MQ
  3107  0013CC  0100               	movlb	0	; () banked
  3108  0013CE  6FD3               	movwf	check_msg@qptr& (0+255),b
  3109  0013D0  EC7F  F00B         	call	_check_msg	;wreg free
  3110  0013D4  0900               	iorlw	0
  3111  0013D6  B4D8               	btfsc	status,2,c
  3112  0013D8  D003               	goto	l2738
  3113                           
  3114                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3115  0013DA  0E00               	movlw	0
  3116  0013DC  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3117  0013DE  0012               	return	
  3118  0013E0                     l2738:
  3119                           
  3120                           ;messages.c: 278: }
  3121                           ;messages.c: 279: Delay1KTCYx(10);
  3122  0013E0  0E0A               	movlw	10
  3123  0013E2  EC97  F00C         	call	_Delay1KTCYx
  3124  0013E6  D7DC               	goto	l2726
  3125  0013E8                     __end_of_block_on_To_msgqueues:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           wreg	equ	0xFE8
  3133                           indf1	equ	0xFE7
  3134                           fsr1h	equ	0xFE2
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           postdec2	equ	0xFDD
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _in_main *****************
  3144 ;; Defined at:
  3145 ;;		line 40 in file "src/interrupts.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2   33[BANK0 ] int 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3159 ;;      Params:         0       2       0       0       0
  3160 ;;      Locals:         0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0
  3162 ;;      Totals:         0       2       0       0       0
  3163 ;;Total ram usage:        2 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:   12
  3166 ;; This function calls:
  3167 ;;		_in_high_int
  3168 ;;		_in_low_int
  3169 ;; This function is called by:
  3170 ;;		_block_on_To_msgqueues
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text17
  3175  0015F0                     __ptext17:
  3176                           	opt stack 0
  3177  0015F0                     _in_main:
  3178                           	opt stack 17
  3179                           
  3180                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3181                           
  3182                           ;incstack = 0
  3183  0015F0  ECD9  F00A         	call	_in_low_int	;wreg free
  3184  0015F4  0100               	movlb	0	; () banked
  3185  0015F6  51D6               	movf	(?_in_low_int+1)& (0+255),w,b
  3186  0015F8  0100               	movlb	0	; () banked
  3187  0015FA  11D5               	iorwf	?_in_low_int& (0+255),w,b
  3188  0015FC  A4D8               	btfss	status,2,c
  3189  0015FE  D00F               	goto	l2228
  3190                           
  3191                           ; BSR set to: 0
  3192  001600  ECC5  F00C         	call	_in_high_int	;wreg free
  3193  001604  0100               	movlb	0	; () banked
  3194  001606  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3195  001608  0100               	movlb	0	; () banked
  3196  00160A  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3197  00160C  A4D8               	btfss	status,2,c
  3198  00160E  D007               	goto	l2228
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;interrupts.c: 42: return (1);
  3202  001610  0E00               	movlw	0
  3203  001612  0100               	movlb	0	; () banked
  3204  001614  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3205  001616  0E01               	movlw	1
  3206  001618  0100               	movlb	0	; () banked
  3207  00161A  6FD7               	movwf	?_in_main& (0+255),b
  3208  00161C  0012               	return	
  3209  00161E                     l2228:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;interrupts.c: 44: return (0);
  3213  00161E  0E00               	movlw	0
  3214  001620  0100               	movlb	0	; () banked
  3215  001622  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3216  001624  0E00               	movlw	0
  3217  001626  0100               	movlb	0	; () banked
  3218  001628  6FD7               	movwf	?_in_main& (0+255),b
  3219  00162A  0012               	return	
  3220  00162C                     __end_of_in_main:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           indf1	equ	0xFE7
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           indf2	equ	0xFDF
  3232                           postinc2	equ	0xFDE
  3233                           postdec2	equ	0xFDD
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _in_low_int *****************
  3239 ;; Defined at:
  3240 ;;		line 30 in file "src/interrupts.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2   31[BANK0 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3254 ;;      Params:         0       2       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       2       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:   11
  3261 ;; This function calls:
  3262 ;;		_in_high_int
  3263 ;; This function is called by:
  3264 ;;		_in_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text18
  3269  0015B2                     __ptext18:
  3270                           	opt stack 0
  3271  0015B2                     _in_low_int:
  3272                           	opt stack 17
  3273                           
  3274                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;incstack = 0
  3278  0015B2  ACF2               	btfss	intcon,6,c	;volatile
  3279  0015B4  D007               	goto	l2066
  3280                           
  3281                           ;interrupts.c: 32: return (0);
  3282  0015B6  0E00               	movlw	0
  3283  0015B8  0100               	movlb	0	; () banked
  3284  0015BA  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3285  0015BC  0E00               	movlw	0
  3286  0015BE  0100               	movlb	0	; () banked
  3287  0015C0  6FD5               	movwf	?_in_low_int& (0+255),b
  3288  0015C2  0012               	return	
  3289  0015C4                     l2066:
  3290  0015C4  ECC5  F00C         	call	_in_high_int	;wreg free
  3291  0015C8  0100               	movlb	0	; () banked
  3292  0015CA  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3293  0015CC  0100               	movlb	0	; () banked
  3294  0015CE  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3295  0015D0  B4D8               	btfsc	status,2,c
  3296  0015D2  D007               	goto	l2074
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;interrupts.c: 34: return (0);
  3300  0015D4  0E00               	movlw	0
  3301  0015D6  0100               	movlb	0	; () banked
  3302  0015D8  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3303  0015DA  0E00               	movlw	0
  3304  0015DC  0100               	movlb	0	; () banked
  3305  0015DE  6FD5               	movwf	?_in_low_int& (0+255),b
  3306  0015E0  0012               	return	
  3307  0015E2                     l2074:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;interrupts.c: 36: return (1);
  3311  0015E2  0E00               	movlw	0
  3312  0015E4  0100               	movlb	0	; () banked
  3313  0015E6  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3314  0015E8  0E01               	movlw	1
  3315  0015EA  0100               	movlb	0	; () banked
  3316  0015EC  6FD5               	movwf	?_in_low_int& (0+255),b
  3317  0015EE  0012               	return	
  3318  0015F0                     __end_of_in_low_int:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           intcon	equ	0xFF2
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           indf1	equ	0xFE7
  3327                           fsr1h	equ	0xFE2
  3328                           fsr1l	equ	0xFE1
  3329                           indf2	equ	0xFDF
  3330                           postinc2	equ	0xFDE
  3331                           postdec2	equ	0xFDD
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _in_high_int *****************
  3337 ;; Defined at:
  3338 ;;		line 22 in file "src/interrupts.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  2   29[BANK0 ] int 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3352 ;;      Params:         0       2       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       2       0       0       0
  3356 ;;Total ram usage:        2 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:   10
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_in_low_int
  3363 ;;		_in_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text19
  3368  00198A                     __ptext19:
  3369                           	opt stack 0
  3370  00198A                     _in_high_int:
  3371                           	opt stack 17
  3372                           
  3373                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;incstack = 0
  3377  00198A  0E00               	movlw	0
  3378  00198C  AEF2               	btfss	intcon,7,c	;volatile
  3379  00198E  0E01               	movlw	1
  3380  001990  0100               	movlb	0	; () banked
  3381  001992  6FD3               	movwf	?_in_high_int& (0+255),b
  3382  001994  0100               	movlb	0	; () banked
  3383  001996  6BD4               	clrf	(?_in_high_int+1)& (0+255),b
  3384  001998  0012               	return	
  3385  00199A                     __end_of_in_high_int:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           postinc0	equ	0xFEE
  3392                           wreg	equ	0xFE8
  3393                           indf1	equ	0xFE7
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           postdec2	equ	0xFDD
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _check_msg *****************
  3404 ;; Defined at:
  3405 ;;		line 220 in file "src/messages.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3408 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      unsigned char 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3420 ;;      Params:         0       2       0       0       0
  3421 ;;      Locals:         0       0       0       0       0
  3422 ;;      Temps:          0       1       0       0       0
  3423 ;;      Totals:         0       3       0       0       0
  3424 ;;Total ram usage:        3 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:   10
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_block_on_To_msgqueues
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text20
  3435  0016FE                     __ptext20:
  3436                           	opt stack 0
  3437  0016FE                     _check_msg:
  3438                           	opt stack 19
  3439                           
  3440                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;incstack = 0
  3444  0016FE  0100               	movlb	0	; () banked
  3445  001700  EE20 F035          	lfsr	2,53
  3446  001704  0100               	movlb	0	; () banked
  3447  001706  51D3               	movf	check_msg@qptr& (0+255),w,b
  3448  001708  26D9               	addwf	fsr2l,f,c
  3449  00170A  0100               	movlb	0	; () banked
  3450  00170C  51D4               	movf	(check_msg@qptr+1)& (0+255),w,b
  3451  00170E  22DA               	addwfc	fsr2h,f,c
  3452  001710  50DF               	movf	indf2,w,c
  3453  001712  0100               	movlb	0	; () banked
  3454  001714  6FD5               	movwf	??_check_msg& (0+255),b
  3455  001716  0100               	movlb	0	; () banked
  3456  001718  51D5               	movf	??_check_msg& (0+255),w,b
  3457  00171A  0D0D               	mullw	13
  3458  00171C  50F3               	movf	prodl,w,c
  3459  00171E  0100               	movlb	0	; () banked
  3460  001720  25D3               	addwf	check_msg@qptr& (0+255),w,b
  3461  001722  6ED9               	movwf	fsr2l,c
  3462  001724  50F4               	movf	prodh,w,c
  3463  001726  0100               	movlb	0	; () banked
  3464  001728  21D4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3465  00172A  6EDA               	movwf	fsr2h,c
  3466  00172C  50DF               	movf	indf2,w,c
  3467  00172E  0012               	return	
  3468  001730                     __end_of_check_msg:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           indf1	equ	0xFE7
  3477                           fsr1h	equ	0xFE2
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _Delay1KTCYx *****************
  3487 ;; Defined at:
  3488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  unit            1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  unit            1   29[BANK0 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       1       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       1       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:   10
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_block_on_To_msgqueues
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text21
  3517  00192E                     __ptext21:
  3518                           	opt stack 0
  3519  00192E                     _Delay1KTCYx:
  3520                           	opt stack 19
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;incstack = 0
  3524                           ;Delay1KTCYx@unit stored from wreg
  3525  00192E  0100               	movlb	0	; () banked
  3526  001930  6FD3               	movwf	Delay1KTCYx@unit& (0+255),b
  3527  001932                     l737:
  3528                           
  3529                           ; BSR set to: 0
  3530                           
  3531                           ; BSR set to: 0
  3532  001932  0EFA               	movlw	250
  3533  001934                     u2437:
  3534  001934  F000               	nop	
  3535  001936  2EE8               	decfsz	wreg,f,c
  3536  001938  D7FD               	goto	u2437
  3537  00193A  0100               	movlb	0	; () banked
  3538  00193C  2FD3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3539  00193E  D7F9               	goto	l737
  3540  001940  0012               	return	
  3541  001942                     __end_of_Delay1KTCYx:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           prodh	equ	0xFF4
  3545                           prodl	equ	0xFF3
  3546                           intcon	equ	0xFF2
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf1	equ	0xFE7
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function _ToMainLow_recvmsg *****************
  3560 ;; Defined at:
  3561 ;;		line 112 in file "src/messages.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  maxlength       1    wreg     unsigned char 
  3564 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3565 ;;		 -> main@msgtype(1), 
  3566 ;;  data            2   14[BANK1 ] PTR void 
  3567 ;;		 -> main@msgbuffer(11), 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  maxlength       1   41[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      char 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3579 ;;      Params:         0       0       4       0       0
  3580 ;;      Locals:         0       1       0       0       0
  3581 ;;      Temps:          0       0       0       0       0
  3582 ;;      Totals:         0       1       4       0       0
  3583 ;;Total ram usage:        5 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:   12
  3586 ;; This function calls:
  3587 ;;		_recv_msg
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text22
  3594  00162C                     __ptext22:
  3595                           	opt stack 0
  3596  00162C                     _ToMainLow_recvmsg:
  3597                           	opt stack 18
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;incstack = 0
  3601                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3602  00162C  0100               	movlb	0	; () banked
  3603  00162E  6FDF               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3607  001630  0100               	movlb	0	; () banked
  3608  001632  0E00               	movlw	high _ToMainLow_MQ
  3609  001634  0101               	movlb	1	; () banked
  3610  001636  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3611  001638  0100               	movlb	0	; () banked
  3612  00163A  0E80               	movlw	low _ToMainLow_MQ
  3613  00163C  0101               	movlb	1	; () banked
  3614  00163E  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3615  001640  C0DF  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3616  001644  0101               	movlb	1	; () banked
  3617  001646  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3618  00164A  0101               	movlb	1	; () banked
  3619  00164C  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3620  001650  0101               	movlb	1	; () banked
  3621  001652  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3622  001656  0101               	movlb	1	; () banked
  3623  001658  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3624  00165C  EC4B  F004         	call	_recv_msg	;wreg free
  3625  001660  0012               	return	
  3626  001662                     __end_of_ToMainLow_recvmsg:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           indf1	equ	0xFE7
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _ToMainHigh_recvmsg *****************
  3645 ;; Defined at:
  3646 ;;		line 135 in file "src/messages.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  maxlength       1    wreg     unsigned char 
  3649 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3650 ;;		 -> main@msgtype(1), 
  3651 ;;  data            2   14[BANK1 ] PTR void 
  3652 ;;		 -> main@msgbuffer(11), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  maxlength       1   41[BANK0 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      char 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       0       4       0       0
  3665 ;;      Locals:         0       1       0       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       1       4       0       0
  3668 ;;Total ram usage:        5 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   12
  3671 ;; This function calls:
  3672 ;;		_recv_msg
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text23
  3679  001662                     __ptext23:
  3680                           	opt stack 0
  3681  001662                     _ToMainHigh_recvmsg:
  3682                           	opt stack 18
  3683                           
  3684                           ;incstack = 0
  3685                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3686  001662  0100               	movlb	0	; () banked
  3687  001664  6FDF               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3691  001666  0101               	movlb	1	; () banked
  3692  001668  0E01               	movlw	high _ToMainHigh_MQ
  3693  00166A  0101               	movlb	1	; () banked
  3694  00166C  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3695  00166E  0101               	movlb	1	; () banked
  3696  001670  0E6C               	movlw	low _ToMainHigh_MQ
  3697  001672  0101               	movlb	1	; () banked
  3698  001674  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3699  001676  C0DF  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3700  00167A  0101               	movlb	1	; () banked
  3701  00167C  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3702  001680  0101               	movlb	1	; () banked
  3703  001682  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3704  001686  0101               	movlb	1	; () banked
  3705  001688  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3706  00168C  0101               	movlb	1	; () banked
  3707  00168E  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3708  001692  EC4B  F004         	call	_recv_msg	;wreg free
  3709  001696  0012               	return	
  3710  001698                     __end_of_ToMainHigh_recvmsg:
  3711                           	opt stack 0
  3712                           tblptru	equ	0xFF8
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           indf1	equ	0xFE7
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _recv_msg *****************
  3729 ;; Defined at:
  3730 ;;		line 63 in file "src/messages.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3733 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3734 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3735 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3736 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  3737 ;;  data            2    5[BANK1 ] PTR void 
  3738 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3741 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3742 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3743 ;;  tlength         2    8[BANK1 ] unsigned int 
  3744 ;;  slot            1    7[BANK1 ] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      char 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3754 ;;      Params:         0       0       7       0       0
  3755 ;;      Locals:         0       0       5       0       0
  3756 ;;      Temps:          0       2       0       0       0
  3757 ;;      Totals:         0       2      12       0       0
  3758 ;;Total ram usage:       14 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   11
  3761 ;; This function calls:
  3762 ;;		_memcpy
  3763 ;; This function is called by:
  3764 ;;		_ToMainLow_recvmsg
  3765 ;;		_ToMainHigh_recvmsg
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text24
  3770  000896                     __ptext24:
  3771                           	opt stack 0
  3772  000896                     _recv_msg:
  3773                           	opt stack 18
  3774                           
  3775                           ;messages.c: 64: unsigned char slot;
  3776                           ;messages.c: 68: msg *qmsg;
  3777                           ;messages.c: 69: size_t tlength;
  3778                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3779                           
  3780                           ;incstack = 0
  3781  000896  0101               	movlb	1	; () banked
  3782  000898  EE20 F035          	lfsr	2,53
  3783  00089C  0101               	movlb	1	; () banked
  3784  00089E  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3785  0008A0  26D9               	addwf	fsr2l,f,c
  3786  0008A2  0101               	movlb	1	; () banked
  3787  0008A4  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3788  0008A6  22DA               	addwfc	fsr2h,f,c
  3789  0008A8  50DF               	movf	indf2,w,c
  3790  0008AA  0101               	movlb	1	; () banked
  3791  0008AC  6FA9               	movwf	recv_msg@slot& (0+255),b
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3795  0008AE  0101               	movlb	1	; () banked
  3796  0008B0  51A9               	movf	recv_msg@slot& (0+255),w,b
  3797  0008B2  0D0D               	mullw	13
  3798  0008B4  50F3               	movf	prodl,w,c
  3799  0008B6  0101               	movlb	1	; () banked
  3800  0008B8  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3801  0008BA  0101               	movlb	1	; () banked
  3802  0008BC  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  3803  0008BE  50F4               	movf	prodh,w,c
  3804  0008C0  0101               	movlb	1	; () banked
  3805  0008C2  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3806  0008C4  0101               	movlb	1	; () banked
  3807  0008C6  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;messages.c: 74: if (qmsg->full == 1) {
  3811  0008C8  0E01               	movlw	1
  3812  0008CA  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3813  0008CE  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3814  0008D2  62DF               	cpfseq	indf2,c
  3815  0008D4  D06F               	goto	l3048
  3816                           
  3817                           ; BSR set to: 1
  3818                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3819  0008D6  0101               	movlb	1	; () banked
  3820  0008D8  EE20 F001          	lfsr	2,1
  3821  0008DC  0101               	movlb	1	; () banked
  3822  0008DE  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3823  0008E0  26D9               	addwf	fsr2l,f,c
  3824  0008E2  0101               	movlb	1	; () banked
  3825  0008E4  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3826  0008E6  22DA               	addwfc	fsr2h,f,c
  3827  0008E8  50DF               	movf	indf2,w,c
  3828  0008EA  0101               	movlb	1	; () banked
  3829  0008EC  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3830  0008EE  B0D8               	btfsc	status,0,c
  3831  0008F0  D002               	goto	l3032
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;messages.c: 77: return (-3);
  3835  0008F2  0EFD               	movlw	253
  3836  0008F4  0012               	return	
  3837  0008F6                     l3032:
  3838                           
  3839                           ; BSR set to: 1
  3840                           ;messages.c: 78: }
  3841                           ;messages.c: 80: tlength = qmsg->length;
  3842  0008F6  0101               	movlb	1	; () banked
  3843  0008F8  EE20 F001          	lfsr	2,1
  3844  0008FC  0101               	movlb	1	; () banked
  3845  0008FE  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3846  000900  26D9               	addwf	fsr2l,f,c
  3847  000902  0101               	movlb	1	; () banked
  3848  000904  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3849  000906  22DA               	addwfc	fsr2h,f,c
  3850  000908  50DF               	movf	indf2,w,c
  3851  00090A  0100               	movlb	0	; () banked
  3852  00090C  6FDD               	movwf	??_recv_msg& (0+255),b
  3853  00090E  0100               	movlb	0	; () banked
  3854  000910  51DD               	movf	??_recv_msg& (0+255),w,b
  3855  000912  0101               	movlb	1	; () banked
  3856  000914  6FAA               	movwf	recv_msg@tlength& (0+255),b
  3857  000916  0101               	movlb	1	; () banked
  3858  000918  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3862  00091A  0101               	movlb	1	; () banked
  3863  00091C  0100               	movlb	0	; () banked
  3864  00091E  C1A8  F0D4         	movff	recv_msg@data+1,memcpy@d1+1
  3865  000922  0101               	movlb	1	; () banked
  3866  000924  0100               	movlb	0	; () banked
  3867  000926  C1A7  F0D3         	movff	recv_msg@data,memcpy@d1
  3868  00092A  0E03               	movlw	3
  3869  00092C  0101               	movlb	1	; () banked
  3870  00092E  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  3871  000930  0100               	movlb	0	; () banked
  3872  000932  6FDD               	movwf	??_recv_msg& (0+255),b
  3873  000934  0E00               	movlw	0
  3874  000936  0101               	movlb	1	; () banked
  3875  000938  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3876  00093A  0100               	movlb	0	; () banked
  3877  00093C  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  3878  00093E  C0DD  F0D5         	movff	??_recv_msg,memcpy@s1
  3879  000942  C0DE  F0D6         	movff	??_recv_msg+1,memcpy@s1+1
  3880  000946  C1AA  F0D7         	movff	recv_msg@tlength,memcpy@n
  3881  00094A  C1AB  F0D8         	movff	recv_msg@tlength+1,memcpy@n+1
  3882  00094E  EC4A  F00A         	call	_memcpy	;wreg free
  3883                           
  3884                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3885  000952  0101               	movlb	1	; () banked
  3886  000954  EE20 F035          	lfsr	2,53
  3887  000958  0101               	movlb	1	; () banked
  3888  00095A  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3889  00095C  26D9               	addwf	fsr2l,f,c
  3890  00095E  0101               	movlb	1	; () banked
  3891  000960  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3892  000962  22DA               	addwfc	fsr2h,f,c
  3893  000964  0101               	movlb	1	; () banked
  3894  000966  EE10 F035          	lfsr	1,53
  3895  00096A  0101               	movlb	1	; () banked
  3896  00096C  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3897  00096E  26E1               	addwf	fsr1l,f,c
  3898  000970  0101               	movlb	1	; () banked
  3899  000972  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3900  000974  22E2               	addwfc	fsr1h,f,c
  3901  000976  50E7               	movf	indf1,w,c
  3902  000978  0100               	movlb	0	; () banked
  3903  00097A  6FDD               	movwf	??_recv_msg& (0+255),b
  3904  00097C  0100               	movlb	0	; () banked
  3905  00097E  29DD               	incf	??_recv_msg& (0+255),w,b
  3906  000980  0B03               	andlw	3
  3907  000982  6EDF               	movwf	indf2,c
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3911  000984  0101               	movlb	1	; () banked
  3912  000986  EE20 F002          	lfsr	2,2
  3913  00098A  0101               	movlb	1	; () banked
  3914  00098C  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3915  00098E  26D9               	addwf	fsr2l,f,c
  3916  000990  0101               	movlb	1	; () banked
  3917  000992  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3918  000994  22DA               	addwfc	fsr2h,f,c
  3919  000996  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3920  00099A  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3921  00099E  CFDF FFE7          	movff	indf2,indf1
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;messages.c: 91: qmsg->full = 0;
  3925  0009A2  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3926  0009A6  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3927  0009AA  0E00               	movlw	0
  3928  0009AC  6EDF               	movwf	indf2,c
  3929                           
  3930                           ; BSR set to: 1
  3931                           ;messages.c: 92: return (tlength);
  3932  0009AE  0101               	movlb	1	; () banked
  3933  0009B0  51AA               	movf	recv_msg@tlength& (0+255),w,b
  3934  0009B2  0012               	return	
  3935  0009B4                     l3048:
  3936                           
  3937                           ; BSR set to: 1
  3938                           ;messages.c: 94: return (-4);
  3939  0009B4  0EFC               	movlw	252
  3940  0009B6  0012               	return	
  3941  0009B8                     __end_of_recv_msg:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon	equ	0xFF2
  3947                           postinc0	equ	0xFEE
  3948                           wreg	equ	0xFE8
  3949                           indf1	equ	0xFE7
  3950                           fsr1h	equ	0xFE2
  3951                           fsr1l	equ	0xFE1
  3952                           indf2	equ	0xFDF
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _memcpy *****************
  3960 ;; Defined at:
  3961 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  d1              2   29[BANK0 ] PTR void 
  3964 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3965 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3966 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  3967 ;;  s1              2   31[BANK0 ] PTR const void 
  3968 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3969 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3970 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3971 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  3972 ;;		 -> main@ic(28), main@uc(5), 
  3973 ;;  n               2   33[BANK0 ] unsigned int 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  3976 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3977 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3978 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3979 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  3980 ;;		 -> main@ic(28), main@uc(5), 
  3981 ;;  d               2   35[BANK0 ] PTR unsigned char 
  3982 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3983 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3984 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  2   29[BANK0 ] PTR void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3994 ;;      Params:         0       6       0       0       0
  3995 ;;      Locals:         0       4       0       0       0
  3996 ;;      Temps:          0       0       0       0       0
  3997 ;;      Totals:         0      10       0       0       0
  3998 ;;Total ram usage:       10 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:   10
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_send_msg
  4005 ;;		_recv_msg
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text25
  4010  001494                     __ptext25:
  4011                           	opt stack 0
  4012  001494                     _memcpy:
  4013                           	opt stack 17
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;incstack = 0
  4017  001494  0100               	movlb	0	; () banked
  4018  001496  C0D6  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  4019  00149A  0100               	movlb	0	; () banked
  4020  00149C  C0D5  F0DB         	movff	memcpy@s1,memcpy@s
  4021  0014A0  0100               	movlb	0	; () banked
  4022  0014A2  C0D4  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  4023  0014A6  0100               	movlb	0	; () banked
  4024  0014A8  C0D3  F0D9         	movff	memcpy@d1,memcpy@d
  4025  0014AC  D010               	goto	l2928
  4026  0014AE                     l2922:
  4027                           
  4028                           ; BSR set to: 0
  4029  0014AE  C0DB  FFD9         	movff	memcpy@s,fsr2l
  4030  0014B2  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  4031  0014B6  C0D9  FFE1         	movff	memcpy@d,fsr1l
  4032  0014BA  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  4033  0014BE  CFDF FFE7          	movff	indf2,indf1
  4034                           
  4035                           ; BSR set to: 0
  4036  0014C2  0100               	movlb	0	; () banked
  4037  0014C4  4BDB               	infsnz	memcpy@s& (0+255),f,b
  4038  0014C6  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  4039                           
  4040                           ; BSR set to: 0
  4041  0014C8  0100               	movlb	0	; () banked
  4042  0014CA  4BD9               	infsnz	memcpy@d& (0+255),f,b
  4043  0014CC  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  4044  0014CE                     l2928:
  4045                           
  4046                           ; BSR set to: 0
  4047  0014CE  0100               	movlb	0	; () banked
  4048  0014D0  07D7               	decf	memcpy@n& (0+255),f,b
  4049  0014D2  A0D8               	btfss	status,0,c
  4050  0014D4  07D8               	decf	(memcpy@n+1)& (0+255),f,b
  4051  0014D6  0100               	movlb	0	; () banked
  4052  0014D8  29D7               	incf	memcpy@n& (0+255),w,b
  4053  0014DA  B4D8               	btfsc	status,2,c
  4054  0014DC  29D8               	incf	(memcpy@n+1)& (0+255),w,b
  4055  0014DE  B4D8               	btfsc	status,2,c
  4056                           
  4057                           ; BSR set to: 0
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;	Return value of _memcpy is never used
  4061  0014E0  0012               	return	
  4062  0014E2  D7E5               	goto	l2922
  4063  0014E4                     __end_of_memcpy:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           indf1	equ	0xFE7
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           postinc2	equ	0xFDE
  4076                           postdec2	equ	0xFDD
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _OpenUSART *****************
  4082 ;; Defined at:
  4083 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  config          1    wreg     unsigned char 
  4086 ;;  spbrg           2   29[BANK0 ] unsigned int 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  config          1   34[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;		None               void
  4091 ;; Registers used:
  4092 ;;		wreg, status,2
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4098 ;;      Params:         0       2       0       0       0
  4099 ;;      Locals:         0       1       0       0       0
  4100 ;;      Temps:          0       3       0       0       0
  4101 ;;      Totals:         0       6       0       0       0
  4102 ;;Total ram usage:        6 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:   10
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text26
  4113  0010FE                     __ptext26:
  4114                           	opt stack 0
  4115  0010FE                     _OpenUSART:
  4116                           	opt stack 20
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120                           ;OpenUSART@config stored from wreg
  4121  0010FE  0100               	movlb	0	; () banked
  4122  001100  6FD8               	movwf	OpenUSART@config& (0+255),b
  4123                           
  4124                           ; BSR set to: 0
  4125  001102  0E00               	movlw	0
  4126  001104  6EAC               	movwf	4012,c	;volatile
  4127  001106  0E00               	movlw	0
  4128  001108  6EAB               	movwf	4011,c	;volatile
  4129                           
  4130                           ; BSR set to: 0
  4131  00110A  0100               	movlb	0	; () banked
  4132  00110C  B1D8               	btfsc	OpenUSART@config& (0+255),0,b
  4133                           
  4134                           ; BSR set to: 0
  4135  00110E  88AC               	bsf	4012,4,c	;volatile
  4136                           
  4137                           ; BSR set to: 0
  4138                           
  4139                           ; BSR set to: 0
  4140  001110  0100               	movlb	0	; () banked
  4141  001112  A3D8               	btfss	OpenUSART@config& (0+255),1,b
  4142  001114  D002               	goto	l2658
  4143                           
  4144                           ; BSR set to: 0
  4145  001116  8CAC               	bsf	4012,6,c	;volatile
  4146  001118  8CAB               	bsf	4011,6,c	;volatile
  4147  00111A                     l2658:
  4148                           
  4149                           ; BSR set to: 0
  4150  00111A  0100               	movlb	0	; () banked
  4151  00111C  B5D8               	btfsc	OpenUSART@config& (0+255),2,b
  4152                           
  4153                           ; BSR set to: 0
  4154  00111E  8EAC               	bsf	4012,7,c	;volatile
  4155                           
  4156                           ; BSR set to: 0
  4157                           
  4158                           ; BSR set to: 0
  4159  001120  0100               	movlb	0	; () banked
  4160  001122  A7D8               	btfss	OpenUSART@config& (0+255),3,b
  4161  001124  D002               	goto	l489
  4162                           
  4163                           ; BSR set to: 0
  4164  001126  88AB               	bsf	4011,4,c	;volatile
  4165  001128  D001               	goto	l2666
  4166  00112A                     l489:
  4167                           
  4168                           ; BSR set to: 0
  4169  00112A  8AAB               	bsf	4011,5,c	;volatile
  4170  00112C                     l2666:
  4171                           
  4172                           ; BSR set to: 0
  4173  00112C  0100               	movlb	0	; () banked
  4174  00112E  B9D8               	btfsc	OpenUSART@config& (0+255),4,b
  4175                           
  4176                           ; BSR set to: 0
  4177  001130  84AC               	bsf	4012,2,c	;volatile
  4178                           
  4179                           ; BSR set to: 0
  4180  001132  989E               	bcf	3998,4,c	;volatile
  4181                           
  4182                           ; BSR set to: 0
  4183  001134  0100               	movlb	0	; () banked
  4184  001136  BBD8               	btfsc	OpenUSART@config& (0+255),5,b
  4185                           
  4186                           ; BSR set to: 0
  4187  001138  86AB               	bsf	4011,3,c	;volatile
  4188                           
  4189                           ; BSR set to: 0
  4190                           
  4191                           ; BSR set to: 0
  4192  00113A  0100               	movlb	0	; () banked
  4193  00113C  ADD8               	btfss	OpenUSART@config& (0+255),6,b
  4194  00113E  D002               	goto	l493
  4195                           
  4196                           ; BSR set to: 0
  4197  001140  8A9D               	bsf	3997,5,c	;volatile
  4198  001142  D001               	goto	l494
  4199  001144                     l493:
  4200                           
  4201                           ; BSR set to: 0
  4202  001144  9A9D               	bcf	3997,5,c	;volatile
  4203  001146                     l494:
  4204                           
  4205                           ; BSR set to: 0
  4206  001146  9A9E               	bcf	3998,5,c	;volatile
  4207                           
  4208                           ; BSR set to: 0
  4209  001148  0100               	movlb	0	; () banked
  4210  00114A  AFD8               	btfss	OpenUSART@config& (0+255),7,b
  4211  00114C  D002               	goto	l495
  4212                           
  4213                           ; BSR set to: 0
  4214  00114E  889D               	bsf	3997,4,c	;volatile
  4215  001150  D001               	goto	l496
  4216  001152                     l495:
  4217                           
  4218                           ; BSR set to: 0
  4219  001152  989D               	bcf	3997,4,c	;volatile
  4220  001154                     l496:
  4221                           
  4222                           ; BSR set to: 0
  4223  001154  C0D3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4224                           
  4225                           ; BSR set to: 0
  4226  001158  0100               	movlb	0	; () banked
  4227  00115A  C0D4  F0D5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4228  00115E  C0D5  F0D6         	movff	??_OpenUSART,??_OpenUSART+1
  4229  001162  0100               	movlb	0	; () banked
  4230  001164  6BD7               	clrf	(??_OpenUSART+2)& (0+255),b
  4231  001166  0100               	movlb	0	; () banked
  4232  001168  51D6               	movf	(??_OpenUSART+1)& (0+255),w,b
  4233  00116A  6EB0               	movwf	4016,c	;volatile
  4234                           
  4235                           ; BSR set to: 0
  4236  00116C  8AAC               	bsf	4012,5,c	;volatile
  4237                           
  4238                           ; BSR set to: 0
  4239  00116E  8EAB               	bsf	4011,7,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242  001170  9C94               	bcf	3988,6,c	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245  001172  8E94               	bsf	3988,7,c	;volatile
  4246                           
  4247                           ; BSR set to: 0
  4248  001174  A8AC               	btfss	4012,4,c	;volatile
  4249  001176  0012               	return	
  4250                           
  4251                           ; BSR set to: 0
  4252  001178  BEAC               	btfsc	4012,7,c	;volatile
  4253  00117A  0012               	return	
  4254                           
  4255                           ; BSR set to: 0
  4256  00117C  8C94               	bsf	3988,6,c	;volatile
  4257  00117E  0012               	return	
  4258  001180                     __end_of_OpenUSART:
  4259                           	opt stack 0
  4260                           tblptru	equ	0xFF8
  4261                           prodh	equ	0xFF4
  4262                           prodl	equ	0xFF3
  4263                           intcon	equ	0xFF2
  4264                           postinc0	equ	0xFEE
  4265                           wreg	equ	0xFE8
  4266                           indf1	equ	0xFE7
  4267                           fsr1h	equ	0xFE2
  4268                           fsr1l	equ	0xFE1
  4269                           indf2	equ	0xFDF
  4270                           postinc2	equ	0xFDE
  4271                           postdec2	equ	0xFDD
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _OpenTimer1 *****************
  4277 ;; Defined at:
  4278 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  config          1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  config          1   29[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       1       0       0       0
  4294 ;;      Temps:          0       0       0       0       0
  4295 ;;      Totals:         0       1       0       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:   10
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text27
  4307  001730                     __ptext27:
  4308                           	opt stack 0
  4309  001730                     _OpenTimer1:
  4310                           	opt stack 20
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;incstack = 0
  4314                           ;OpenTimer1@config stored from wreg
  4315  001730  0100               	movlb	0	; () banked
  4316  001732  6FD3               	movwf	OpenTimer1@config& (0+255),b
  4317                           
  4318                           ; BSR set to: 0
  4319  001734  0100               	movlb	0	; () banked
  4320  001736  51D3               	movf	OpenTimer1@config& (0+255),w,b
  4321  001738  0B7E               	andlw	126
  4322  00173A  6ECD               	movwf	4045,c	;volatile
  4323                           
  4324                           ; BSR set to: 0
  4325  00173C  0100               	movlb	0	; () banked
  4326  00173E  ADD3               	btfss	OpenTimer1@config& (0+255),6,b
  4327  001740  D002               	goto	l445
  4328                           
  4329                           ; BSR set to: 0
  4330  001742  8ECD               	bsf	4045,7,c	;volatile
  4331  001744  D001               	goto	l2640
  4332  001746                     l445:
  4333                           
  4334                           ; BSR set to: 0
  4335  001746  9ECD               	bcf	4045,7,c	;volatile
  4336  001748                     l2640:
  4337                           
  4338                           ; BSR set to: 0
  4339  001748  0E00               	movlw	0
  4340  00174A  6ECF               	movwf	4047,c	;volatile
  4341  00174C  0E00               	movlw	0
  4342  00174E  6ECE               	movwf	4046,c	;volatile
  4343                           
  4344                           ; BSR set to: 0
  4345  001750  909E               	bcf	3998,0,c	;volatile
  4346                           
  4347                           ; BSR set to: 0
  4348  001752  0100               	movlb	0	; () banked
  4349  001754  AFD3               	btfss	OpenTimer1@config& (0+255),7,b
  4350  001756  D002               	goto	l447
  4351                           
  4352                           ; BSR set to: 0
  4353  001758  809D               	bsf	3997,0,c	;volatile
  4354  00175A  D001               	goto	l448
  4355  00175C                     l447:
  4356                           
  4357                           ; BSR set to: 0
  4358  00175C  909D               	bcf	3997,0,c	;volatile
  4359  00175E                     l448:
  4360                           
  4361                           ; BSR set to: 0
  4362  00175E  80CD               	bsf	4045,0,c	;volatile
  4363                           
  4364                           ; BSR set to: 0
  4365  001760  0012               	return	
  4366  001762                     __end_of_OpenTimer1:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           prodh	equ	0xFF4
  4370                           prodl	equ	0xFF3
  4371                           intcon	equ	0xFF2
  4372                           postinc0	equ	0xFEE
  4373                           wreg	equ	0xFE8
  4374                           indf1	equ	0xFE7
  4375                           fsr1h	equ	0xFE2
  4376                           fsr1l	equ	0xFE1
  4377                           indf2	equ	0xFDF
  4378                           postinc2	equ	0xFDE
  4379                           postdec2	equ	0xFDD
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _OpenTimer0 *****************
  4385 ;; Defined at:
  4386 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  config          1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  config          1   29[BANK0 ] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4400 ;;      Params:         0       0       0       0       0
  4401 ;;      Locals:         0       1       0       0       0
  4402 ;;      Temps:          0       0       0       0       0
  4403 ;;      Totals:         0       1       0       0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   10
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text28
  4415  00183A                     __ptext28:
  4416                           	opt stack 0
  4417  00183A                     _OpenTimer0:
  4418                           	opt stack 20
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;incstack = 0
  4422                           ;OpenTimer0@config stored from wreg
  4423  00183A  0100               	movlb	0	; () banked
  4424  00183C  6FD3               	movwf	OpenTimer0@config& (0+255),b
  4425                           
  4426                           ; BSR set to: 0
  4427  00183E  0100               	movlb	0	; () banked
  4428  001840  51D3               	movf	OpenTimer0@config& (0+255),w,b
  4429  001842  0B7F               	andlw	127
  4430  001844  6ED5               	movwf	4053,c	;volatile
  4431                           
  4432                           ; BSR set to: 0
  4433  001846  0E00               	movlw	0
  4434  001848  6ED7               	movwf	4055,c	;volatile
  4435                           
  4436                           ; BSR set to: 0
  4437  00184A  0E00               	movlw	0
  4438  00184C  6ED6               	movwf	4054,c	;volatile
  4439                           
  4440                           ; BSR set to: 0
  4441  00184E  94F2               	bcf	intcon,2,c	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444  001850  0100               	movlb	0	; () banked
  4445  001852  AFD3               	btfss	OpenTimer0@config& (0+255),7,b
  4446  001854  D002               	goto	l421
  4447                           
  4448                           ; BSR set to: 0
  4449  001856  8AF2               	bsf	intcon,5,c	;volatile
  4450  001858  D001               	goto	l422
  4451  00185A                     l421:
  4452                           
  4453                           ; BSR set to: 0
  4454  00185A  9AF2               	bcf	intcon,5,c	;volatile
  4455  00185C                     l422:
  4456                           
  4457                           ; BSR set to: 0
  4458  00185C  8ED5               	bsf	4053,7,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461  00185E  0012               	return	
  4462  001860                     __end_of_OpenTimer0:
  4463                           	opt stack 0
  4464                           tblptru	equ	0xFF8
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           indf1	equ	0xFE7
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _InterruptHandlerLow *****************
  4481 ;; Defined at:
  4482 ;;		line 122 in file "src/interrupts.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4496 ;;      Params:         0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0
  4498 ;;      Temps:         17       0       0       0       0
  4499 ;;      Totals:        17       0       0       0       0
  4500 ;;Total ram usage:       17 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    9
  4503 ;; This function calls:
  4504 ;;		_timer1_int_handler
  4505 ;;		_uart_recv_int_handler
  4506 ;;		_uart_trans_int_handler
  4507 ;; This function is called by:
  4508 ;;		Interrupt level 1
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	intcodelo
  4513  000018                     __pintcodelo:
  4514                           	opt stack 0
  4515  000018                     _InterruptHandlerLow:
  4516                           	opt stack 17
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;incstack = 0
  4520  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  4521  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  4522  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  4523  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  4524  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  4525  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  4526  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  4527  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  4528  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  4529  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  4530  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  4531  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  4532  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  4533  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  4534  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  4535  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  4536  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  4537                           
  4538                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4539  00005C  A09E               	btfss	3998,0,c	;volatile
  4540  00005E  D003               	goto	i1l2812
  4541                           
  4542                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4543  000060  909E               	bcf	3998,0,c	;volatile
  4544                           
  4545                           ;interrupts.c: 126: timer1_int_handler();
  4546  000062  ECE0  F00B         	call	_timer1_int_handler	;wreg free
  4547  000066                     i1l2812:
  4548                           
  4549                           ;interrupts.c: 127: }
  4550                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4551  000066  AA9E               	btfss	3998,5,c	;volatile
  4552  000068  D003               	goto	i1l2818
  4553                           
  4554                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4555  00006A  9A9E               	bcf	3998,5,c	;volatile
  4556                           
  4557                           ;interrupts.c: 132: uart_recv_int_handler();
  4558  00006C  EC35  F008         	call	_uart_recv_int_handler	;wreg free
  4559  000070                     i1l2818:
  4560                           
  4561                           ;interrupts.c: 133: }
  4562                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4563  000070  B89E               	btfsc	3998,4,c	;volatile
  4564  000072  A89D               	btfss	3997,4,c	;volatile
  4565  000074  D002               	goto	i1l52
  4566                           
  4567                           ;interrupts.c: 137: uart_trans_int_handler();
  4568  000076  EC1F  F00A         	call	_uart_trans_int_handler	;wreg free
  4569  00007A                     i1l52:
  4570  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4571  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4572  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4573  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4574  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4575  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4576  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4577  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4578  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4579  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4580  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4581  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4582  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4583  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4584  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4585  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4586  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  4587  0000BE  0010               	retfie	
  4588  0000C0                     __end_of_InterruptHandlerLow:
  4589                           	opt stack 0
  4590                           pclatu	equ	0xFFB
  4591                           pclath	equ	0xFFA
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           prodh	equ	0xFF4
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           postinc0	equ	0xFEE
  4600                           fsr0h	equ	0xFEA
  4601                           fsr0l	equ	0xFE9
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           bsr	equ	0xFE0
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _uart_trans_int_handler *****************
  4615 ;; Defined at:
  4616 ;;		line 11 in file "src/my_uart.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  data            2   29[COMRAM] PTR unsigned char 
  4621 ;;		 -> NULL(0), 
  4622 ;;  length          1   33[COMRAM] char 
  4623 ;;  msgtype         1   32[COMRAM] unsigned char 
  4624 ;;  curIndex        1   31[COMRAM] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4634 ;;      Params:         0       0       0       0       0
  4635 ;;      Locals:         5       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0
  4637 ;;      Totals:         5       0       0       0       0
  4638 ;;Total ram usage:        5 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    8
  4641 ;; This function calls:
  4642 ;;		_FromMainLow_recvmsg
  4643 ;; This function is called by:
  4644 ;;		_InterruptHandlerLow
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text30
  4649  00143E                     __ptext30:
  4650                           	opt stack 0
  4651  00143E                     _uart_trans_int_handler:
  4652                           	opt stack 17
  4653                           
  4654                           ;my_uart.c: 13: unsigned char* data = (0);
  4655                           
  4656                           ;incstack = 0
  4657  00143E  0E00               	movlw	0
  4658  001440  6E1F               	movwf	uart_trans_int_handler@data+1,c
  4659  001442  0E00               	movlw	0
  4660  001444  6E1E               	movwf	uart_trans_int_handler@data,c
  4661                           
  4662                           ;my_uart.c: 14: unsigned char msgtype;
  4663                           ;my_uart.c: 15: unsigned char curIndex;
  4664                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  4665  001446  0E00               	movlw	high uart_trans_int_handler@msgtype
  4666  001448  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4667  00144A  0E21               	movlw	low uart_trans_int_handler@msgtype
  4668  00144C  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4669  00144E  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  4670  001452  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  4671  001456  0E0A               	movlw	10
  4672  001458  EC30  F00C         	call	_FromMainLow_recvmsg
  4673  00145C  6E22               	movwf	uart_trans_int_handler@length,c
  4674                           
  4675                           ;my_uart.c: 17: if (length < 0) {
  4676  00145E  BE22               	btfsc	uart_trans_int_handler@length,7,c
  4677  001460  D017               	goto	i1l340
  4678                           
  4679                           ;my_uart.c: 26: curIndex = 0;
  4680                           
  4681                           ;my_uart.c: 24: }
  4682                           ;my_uart.c: 25: } else {
  4683                           
  4684                           ;my_uart.c: 22: else{
  4685                           
  4686                           ;my_uart.c: 21: }
  4687  001462  0E00               	movlw	0
  4688  001464  6E20               	movwf	uart_trans_int_handler@curIndex,c
  4689                           
  4690                           ;my_uart.c: 27: while(curIndex < length){
  4691  001466  D00D               	goto	i1l2594
  4692  001468                     i1l343:
  4693  001468  A2AC               	btfss	4012,1,c	;volatile
  4694  00146A  D7FE               	goto	i1l343
  4695                           
  4696                           ;my_uart.c: 33: TXREG = data[curIndex];
  4697  00146C  5020               	movf	uart_trans_int_handler@curIndex,w,c
  4698  00146E  0D01               	mullw	1
  4699  001470  50F3               	movf	prodl,w,c
  4700  001472  241E               	addwf	uart_trans_int_handler@data,w,c
  4701  001474  6ED9               	movwf	fsr2l,c
  4702  001476  50F4               	movf	prodh,w,c
  4703  001478  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  4704  00147A  6EDA               	movwf	fsr2h,c
  4705  00147C  50DF               	movf	indf2,w,c
  4706  00147E  6EAD               	movwf	4013,c	;volatile
  4707                           
  4708                           ;my_uart.c: 35: curIndex++;
  4709  001480  2A20               	incf	uart_trans_int_handler@curIndex,f,c
  4710  001482                     i1l2594:
  4711  001482  5020               	movf	uart_trans_int_handler@curIndex,w,c
  4712  001484  BE22               	btfsc	uart_trans_int_handler@length,7,c
  4713  001486  D004               	goto	i1l340
  4714  001488  0AFF               	xorlw	255
  4715  00148A  2422               	addwf	uart_trans_int_handler@length,w,c
  4716  00148C  B0D8               	btfsc	status,0,c
  4717  00148E  D7EC               	goto	i1l343
  4718  001490                     i1l340:
  4719                           
  4720                           ;my_uart.c: 36: }
  4721                           ;my_uart.c: 37: }
  4722                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  4723  001490  989D               	bcf	3997,4,c	;volatile
  4724  001492  0012               	return	
  4725  001494                     __end_of_uart_trans_int_handler:
  4726                           	opt stack 0
  4727                           pclatu	equ	0xFFB
  4728                           pclath	equ	0xFFA
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           prodh	equ	0xFF4
  4734                           prodl	equ	0xFF3
  4735                           intcon	equ	0xFF2
  4736                           postinc0	equ	0xFEE
  4737                           fsr0h	equ	0xFEA
  4738                           fsr0l	equ	0xFE9
  4739                           wreg	equ	0xFE8
  4740                           indf1	equ	0xFE7
  4741                           fsr1h	equ	0xFE2
  4742                           fsr1l	equ	0xFE1
  4743                           bsr	equ	0xFE0
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _FromMainLow_recvmsg *****************
  4752 ;; Defined at:
  4753 ;;		line 159 in file "src/messages.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  maxlength       1    wreg     unsigned char 
  4756 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4757 ;;		 -> uart_trans_int_handler@msgtype(1), 
  4758 ;;  data            2   26[COMRAM] PTR void 
  4759 ;;		 -> NULL(0), 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  maxlength       1   28[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      char 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4771 ;;      Params:         4       0       0       0       0
  4772 ;;      Locals:         1       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         5       0       0       0       0
  4775 ;;Total ram usage:        5 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    7
  4778 ;; This function calls:
  4779 ;;		i1_recv_msg
  4780 ;; This function is called by:
  4781 ;;		_uart_trans_int_handler
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text31
  4786  001860                     __ptext31:
  4787                           	opt stack 0
  4788  001860                     _FromMainLow_recvmsg:
  4789                           	opt stack 17
  4790                           
  4791                           ;incstack = 0
  4792                           ;FromMainLow_recvmsg@maxlength stored from wreg
  4793  001860  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  4794                           
  4795                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  4796  001862  0101               	movlb	1	; () banked
  4797  001864  0E01               	movlw	high _FromMainLow_MQ
  4798  001866  6E0C               	movwf	i1recv_msg@qptr+1,c
  4799  001868  0101               	movlb	1	; () banked
  4800  00186A  0E36               	movlw	low _FromMainLow_MQ
  4801  00186C  6E0B               	movwf	i1recv_msg@qptr,c
  4802  00186E  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  4803  001872  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  4804  001876  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  4805  00187A  6A11               	clrf	i1recv_msg@data+1,c
  4806  00187C  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  4807  001880  EC51  F006         	call	i1_recv_msg	;wreg free
  4808  001884  0012               	return	
  4809  001886                     __end_of_FromMainLow_recvmsg:
  4810                           	opt stack 0
  4811                           pclatu	equ	0xFFB
  4812                           pclath	equ	0xFFA
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           postinc0	equ	0xFEE
  4821                           fsr0h	equ	0xFEA
  4822                           fsr0l	equ	0xFE9
  4823                           wreg	equ	0xFE8
  4824                           indf1	equ	0xFE7
  4825                           fsr1h	equ	0xFE2
  4826                           fsr1l	equ	0xFE1
  4827                           bsr	equ	0xFE0
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function i1_recv_msg *****************
  4836 ;; Defined at:
  4837 ;;		line 63 in file "src/messages.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4840 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4841 ;;  maxlength       1   12[COMRAM] unsigned char 
  4842 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  4843 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4844 ;;  data            2   15[COMRAM] PTR void 
  4845 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  4848 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4849 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4850 ;;  recv_msg        2   20[COMRAM] unsigned int 
  4851 ;;  recv_msg        1   19[COMRAM] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      char 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4861 ;;      Params:         7       0       0       0       0
  4862 ;;      Locals:         5       0       0       0       0
  4863 ;;      Temps:          2       0       0       0       0
  4864 ;;      Totals:        14       0       0       0       0
  4865 ;;Total ram usage:       14 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    6
  4868 ;; This function calls:
  4869 ;;		i1_memcpy
  4870 ;; This function is called by:
  4871 ;;		_FromMainLow_recvmsg
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text32
  4876  000CA2                     __ptext32:
  4877                           	opt stack 0
  4878  000CA2                     i1_recv_msg:
  4879                           	opt stack 17
  4880                           
  4881                           ;messages.c: 64: unsigned char slot;
  4882                           ;messages.c: 68: msg *qmsg;
  4883                           ;messages.c: 69: size_t tlength;
  4884                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4885                           
  4886                           ;incstack = 0
  4887  000CA2  EE20 F035          	lfsr	2,53
  4888  000CA6  500B               	movf	i1recv_msg@qptr,w,c
  4889  000CA8  26D9               	addwf	fsr2l,f,c
  4890  000CAA  500C               	movf	i1recv_msg@qptr+1,w,c
  4891  000CAC  22DA               	addwfc	fsr2h,f,c
  4892  000CAE  50DF               	movf	indf2,w,c
  4893  000CB0  6E14               	movwf	i1recv_msg@slot,c
  4894                           
  4895                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4896  000CB2  5014               	movf	i1recv_msg@slot,w,c
  4897  000CB4  0D0D               	mullw	13
  4898  000CB6  50F3               	movf	prodl,w,c
  4899  000CB8  240B               	addwf	i1recv_msg@qptr,w,c
  4900  000CBA  6E17               	movwf	i1recv_msg@qmsg,c
  4901  000CBC  50F4               	movf	prodh,w,c
  4902  000CBE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  4903  000CC0  6E18               	movwf	i1recv_msg@qmsg+1,c
  4904                           
  4905                           ;messages.c: 74: if (qmsg->full == 1) {
  4906  000CC2  0E01               	movlw	1
  4907  000CC4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4908  000CC8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4909  000CCC  62DF               	cpfseq	indf2,c
  4910  000CCE  D050               	goto	i1l2182
  4911                           
  4912                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4913  000CD0  EE20 F001          	lfsr	2,1
  4914  000CD4  5017               	movf	i1recv_msg@qmsg,w,c
  4915  000CD6  26D9               	addwf	fsr2l,f,c
  4916  000CD8  5018               	movf	i1recv_msg@qmsg+1,w,c
  4917  000CDA  22DA               	addwfc	fsr2h,f,c
  4918  000CDC  50DF               	movf	indf2,w,c
  4919  000CDE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  4920  000CE0  B0D8               	btfsc	status,0,c
  4921  000CE2  D002               	goto	i1l2166
  4922                           
  4923                           ;messages.c: 77: return (-3);
  4924  000CE4  0EFD               	movlw	253
  4925  000CE6  0012               	return	
  4926  000CE8                     i1l2166:
  4927                           
  4928                           ;messages.c: 78: }
  4929                           ;messages.c: 80: tlength = qmsg->length;
  4930  000CE8  EE20 F001          	lfsr	2,1
  4931  000CEC  5017               	movf	i1recv_msg@qmsg,w,c
  4932  000CEE  26D9               	addwf	fsr2l,f,c
  4933  000CF0  5018               	movf	i1recv_msg@qmsg+1,w,c
  4934  000CF2  22DA               	addwfc	fsr2h,f,c
  4935  000CF4  50DF               	movf	indf2,w,c
  4936  000CF6  6E12               	movwf	??i1_recv_msg& (0+255),c
  4937  000CF8  5012               	movf	??i1_recv_msg,w,c
  4938  000CFA  6E15               	movwf	i1recv_msg@tlength,c
  4939  000CFC  6A16               	clrf	i1recv_msg@tlength+1,c
  4940                           
  4941                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4942  000CFE  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  4943  000D02  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  4944  000D06  0E03               	movlw	3
  4945  000D08  2417               	addwf	i1recv_msg@qmsg,w,c
  4946  000D0A  6E12               	movwf	??i1_recv_msg& (0+255),c
  4947  000D0C  0E00               	movlw	0
  4948  000D0E  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  4949  000D10  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  4950  000D12  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  4951  000D16  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  4952  000D1A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  4953  000D1E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  4954  000D22  EC99  F00A         	call	i1_memcpy	;wreg free
  4955                           
  4956                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4957  000D26  EE20 F035          	lfsr	2,53
  4958  000D2A  500B               	movf	i1recv_msg@qptr,w,c
  4959  000D2C  26D9               	addwf	fsr2l,f,c
  4960  000D2E  500C               	movf	i1recv_msg@qptr+1,w,c
  4961  000D30  22DA               	addwfc	fsr2h,f,c
  4962  000D32  EE10 F035          	lfsr	1,53
  4963  000D36  500B               	movf	i1recv_msg@qptr,w,c
  4964  000D38  26E1               	addwf	fsr1l,f,c
  4965  000D3A  500C               	movf	i1recv_msg@qptr+1,w,c
  4966  000D3C  22E2               	addwfc	fsr1h,f,c
  4967  000D3E  50E7               	movf	indf1,w,c
  4968  000D40  6E12               	movwf	??i1_recv_msg& (0+255),c
  4969  000D42  2812               	incf	??i1_recv_msg,w,c
  4970  000D44  0B03               	andlw	3
  4971  000D46  6EDF               	movwf	indf2,c
  4972                           
  4973                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4974  000D48  EE20 F002          	lfsr	2,2
  4975  000D4C  5017               	movf	i1recv_msg@qmsg,w,c
  4976  000D4E  26D9               	addwf	fsr2l,f,c
  4977  000D50  5018               	movf	i1recv_msg@qmsg+1,w,c
  4978  000D52  22DA               	addwfc	fsr2h,f,c
  4979  000D54  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  4980  000D58  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  4981  000D5C  CFDF FFE7          	movff	indf2,indf1
  4982                           
  4983                           ;messages.c: 91: qmsg->full = 0;
  4984  000D60  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4985  000D64  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4986  000D68  0E00               	movlw	0
  4987  000D6A  6EDF               	movwf	indf2,c
  4988                           
  4989                           ;messages.c: 92: return (tlength);
  4990  000D6C  5015               	movf	i1recv_msg@tlength,w,c
  4991  000D6E  0012               	return	
  4992  000D70                     i1l2182:
  4993                           
  4994                           ;messages.c: 94: return (-4);
  4995  000D70  0EFC               	movlw	252
  4996  000D72  0012               	return	
  4997  000D74                     __end_ofi1_recv_msg:
  4998                           	opt stack 0
  4999                           pclatu	equ	0xFFB
  5000                           pclath	equ	0xFFA
  5001                           tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           prodh	equ	0xFF4
  5006                           prodl	equ	0xFF3
  5007                           intcon	equ	0xFF2
  5008                           postinc0	equ	0xFEE
  5009                           fsr0h	equ	0xFEA
  5010                           fsr0l	equ	0xFE9
  5011                           wreg	equ	0xFE8
  5012                           indf1	equ	0xFE7
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           bsr	equ	0xFE0
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023 ;; *************** function _uart_recv_int_handler *****************
  5024 ;; Defined at:
  5025 ;;		line 42 in file "src/my_uart.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5039 ;;      Params:         0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0
  5041 ;;      Temps:          1       0       0       0       0
  5042 ;;      Totals:         1       0       0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    8
  5046 ;; This function calls:
  5047 ;;		_ReadUSART
  5048 ;;		_ToMainLow_sendmsg
  5049 ;; This function is called by:
  5050 ;;		_InterruptHandlerLow
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text33
  5055  00106A                     __ptext33:
  5056                           	opt stack 0
  5057  00106A                     _uart_recv_int_handler:
  5058                           	opt stack 17
  5059                           
  5060                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5061                           
  5062                           ;incstack = 0
  5063  00106A  AA9E               	btfss	3998,5,c	;volatile
  5064  00106C  D03A               	goto	i1l2572
  5065                           
  5066                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5067  00106E  EE20 F004          	lfsr	2,4
  5068  001072  5049               	movf	_uc_ptr,w,c
  5069  001074  26D9               	addwf	fsr2l,f,c
  5070  001076  504A               	movf	_uc_ptr+1,w,c
  5071  001078  22DA               	addwfc	fsr2h,f,c
  5072  00107A  50DF               	movf	indf2,w,c
  5073  00107C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5074  00107E  501B               	movf	??_uart_recv_int_handler,w,c
  5075  001080  0D01               	mullw	1
  5076  001082  50F3               	movf	prodl,w,c
  5077  001084  2449               	addwf	_uc_ptr,w,c
  5078  001086  6ED9               	movwf	fsr2l,c
  5079  001088  50F4               	movf	prodh,w,c
  5080  00108A  204A               	addwfc	_uc_ptr+1,w,c
  5081  00108C  6EDA               	movwf	fsr2h,c
  5082  00108E  EC88  F00C         	call	_ReadUSART	;wreg free
  5083  001092  6EDF               	movwf	indf2,c
  5084                           
  5085                           ;my_uart.c: 56: uc_ptr->buflen++;
  5086  001094  EE20 F004          	lfsr	2,4
  5087  001098  5049               	movf	_uc_ptr,w,c
  5088  00109A  26D9               	addwf	fsr2l,f,c
  5089  00109C  504A               	movf	_uc_ptr+1,w,c
  5090  00109E  22DA               	addwfc	fsr2h,f,c
  5091  0010A0  2ADF               	incf	indf2,f,c
  5092                           
  5093                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5094  0010A2  EE20 F004          	lfsr	2,4
  5095  0010A6  5049               	movf	_uc_ptr,w,c
  5096  0010A8  26D9               	addwf	fsr2l,f,c
  5097  0010AA  504A               	movf	_uc_ptr+1,w,c
  5098  0010AC  22DA               	addwfc	fsr2h,f,c
  5099  0010AE  0E04               	movlw	4
  5100  0010B0  62DF               	cpfseq	indf2,c
  5101  0010B2  D017               	goto	i1l2572
  5102                           
  5103                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5104  0010B4  0E20               	movlw	32
  5105  0010B6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5106  0010B8  C04A  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5107  0010BC  C049  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5108  0010C0  EE20 F004          	lfsr	2,4
  5109  0010C4  5049               	movf	_uc_ptr,w,c
  5110  0010C6  26D9               	addwf	fsr2l,f,c
  5111  0010C8  504A               	movf	_uc_ptr+1,w,c
  5112  0010CA  22DA               	addwfc	fsr2h,f,c
  5113  0010CC  50DF               	movf	indf2,w,c
  5114  0010CE  EC43  F00C         	call	_ToMainLow_sendmsg
  5115                           
  5116                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5117  0010D2  EE20 F004          	lfsr	2,4
  5118  0010D6  5049               	movf	_uc_ptr,w,c
  5119  0010D8  26D9               	addwf	fsr2l,f,c
  5120  0010DA  504A               	movf	_uc_ptr+1,w,c
  5121  0010DC  22DA               	addwfc	fsr2h,f,c
  5122  0010DE  0E00               	movlw	0
  5123  0010E0  6EDF               	movwf	indf2,c
  5124  0010E2                     i1l2572:
  5125                           
  5126                           ;my_uart.c: 61: }
  5127                           ;my_uart.c: 62: }
  5128                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5129  0010E2  A64C               	btfss	_USART_Status,3,c
  5130  0010E4  0012               	return	
  5131                           
  5132                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5133  0010E6  98AB               	bcf	4011,4,c	;volatile
  5134                           
  5135                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5136  0010E8  88AB               	bsf	4011,4,c	;volatile
  5137                           
  5138                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5139  0010EA  0E1E               	movlw	30
  5140  0010EC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5141  0010EE  0E00               	movlw	0
  5142  0010F0  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5143  0010F2  0E00               	movlw	0
  5144  0010F4  6E18               	movwf	ToMainLow_sendmsg@data,c
  5145  0010F6  0E00               	movlw	0
  5146  0010F8  EC43  F00C         	call	_ToMainLow_sendmsg
  5147  0010FC  0012               	return	
  5148  0010FE                     __end_of_uart_recv_int_handler:
  5149                           	opt stack 0
  5150                           pclatu	equ	0xFFB
  5151                           pclath	equ	0xFFA
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           prodh	equ	0xFF4
  5157                           prodl	equ	0xFF3
  5158                           intcon	equ	0xFF2
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           indf1	equ	0xFE7
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           bsr	equ	0xFE0
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _ReadUSART *****************
  5175 ;; Defined at:
  5176 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  data            1    0[COMRAM] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      unsigned char 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5190 ;;      Params:         0       0       0       0       0
  5191 ;;      Locals:         1       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0
  5193 ;;      Totals:         1       0       0       0       0
  5194 ;;Total ram usage:        1 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    5
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_uart_recv_int_handler
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text34
  5205  001910                     __ptext34:
  5206                           	opt stack 0
  5207  001910                     _ReadUSART:
  5208                           	opt stack 19
  5209                           
  5210                           ;incstack = 0
  5211  001910  0EF2               	movlw	242
  5212  001912  164C               	andwf	_USART_Status,f,c
  5213  001914  ACAB               	btfss	4011,6,c	;volatile
  5214  001916  D003               	goto	i1l507
  5215  001918  904C               	bcf	_USART_Status,0,c
  5216  00191A  B0AB               	btfsc	4011,0,c	;volatile
  5217  00191C  804C               	bsf	_USART_Status,0,c
  5218  00191E                     i1l507:
  5219  00191E  B4AB               	btfsc	4011,2,c	;volatile
  5220  001920  844C               	bsf	_USART_Status,2,c
  5221  001922  B2AB               	btfsc	4011,1,c	;volatile
  5222  001924  864C               	bsf	_USART_Status,3,c
  5223  001926  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5224  00192A  5001               	movf	ReadUSART@data,w,c
  5225  00192C  0012               	return	
  5226  00192E                     __end_of_ReadUSART:
  5227                           	opt stack 0
  5228                           pclatu	equ	0xFFB
  5229                           pclath	equ	0xFFA
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           prodh	equ	0xFF4
  5235                           prodl	equ	0xFF3
  5236                           intcon	equ	0xFF2
  5237                           postinc0	equ	0xFEE
  5238                           fsr0h	equ	0xFEA
  5239                           fsr0l	equ	0xFE9
  5240                           wreg	equ	0xFE8
  5241                           indf1	equ	0xFE7
  5242                           fsr1h	equ	0xFE2
  5243                           fsr1l	equ	0xFE1
  5244                           bsr	equ	0xFE0
  5245                           indf2	equ	0xFDF
  5246                           postinc2	equ	0xFDE
  5247                           postdec2	equ	0xFDD
  5248                           fsr2h	equ	0xFDA
  5249                           fsr2l	equ	0xFD9
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function _timer1_int_handler *****************
  5253 ;; Defined at:
  5254 ;;		line 36 in file "src/user_interrupts.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  result          2   26[COMRAM] unsigned int 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5268 ;;      Params:         0       0       0       0       0
  5269 ;;      Locals:         2       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0
  5271 ;;      Totals:         2       0       0       0       0
  5272 ;;Total ram usage:        2 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    8
  5275 ;; This function calls:
  5276 ;;		_ReadTimer1
  5277 ;;		_ToMainLow_sendmsg
  5278 ;;		_WriteTimer1
  5279 ;; This function is called by:
  5280 ;;		_InterruptHandlerLow
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text35
  5285  0017C0                     __ptext35:
  5286                           	opt stack 0
  5287  0017C0                     _timer1_int_handler:
  5288                           	opt stack 17
  5289                           
  5290                           ;user_interrupts.c: 37: unsigned int result;
  5291                           ;user_interrupts.c: 44: result = ReadTimer1();
  5292                           
  5293                           ;incstack = 0
  5294  0017C0  ECB3  F00C         	call	_ReadTimer1	;wreg free
  5295  0017C4  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5296  0017C8  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5297                           
  5298                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5299  0017CC  0E0B               	movlw	11
  5300  0017CE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5301  0017D0  0E00               	movlw	0
  5302  0017D2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5303  0017D4  0E00               	movlw	0
  5304  0017D6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5305  0017D8  0E00               	movlw	0
  5306  0017DA  EC43  F00C         	call	_ToMainLow_sendmsg
  5307                           
  5308                           ;user_interrupts.c: 48: WriteTimer1(0);
  5309  0017DE  0E00               	movlw	0
  5310  0017E0  6E02               	movwf	WriteTimer1@timer1+1,c
  5311  0017E2  0E00               	movlw	0
  5312  0017E4  6E01               	movwf	WriteTimer1@timer1,c
  5313  0017E6  ECAA  F00C         	call	_WriteTimer1	;wreg free
  5314  0017EA  0012               	return	
  5315  0017EC                     __end_of_timer1_int_handler:
  5316                           	opt stack 0
  5317                           pclatu	equ	0xFFB
  5318                           pclath	equ	0xFFA
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           postinc0	equ	0xFEE
  5327                           fsr0h	equ	0xFEA
  5328                           fsr0l	equ	0xFE9
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           bsr	equ	0xFE0
  5334                           indf2	equ	0xFDF
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341 ;; *************** function _WriteTimer1 *****************
  5342 ;; Defined at:
  5343 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  timer1          2    0[COMRAM] unsigned int 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  timer           2    2[COMRAM] struct Timers
  5348 ;; Return value:  Size  Location     Type
  5349 ;;		None               void
  5350 ;; Registers used:
  5351 ;;		None
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5357 ;;      Params:         2       0       0       0       0
  5358 ;;      Locals:         2       0       0       0       0
  5359 ;;      Temps:          0       0       0       0       0
  5360 ;;      Totals:         4       0       0       0       0
  5361 ;;Total ram usage:        4 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    5
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_timer1_int_handler
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text36
  5372  001954                     __ptext36:
  5373                           	opt stack 0
  5374  001954                     _WriteTimer1:
  5375                           	opt stack 19
  5376                           
  5377                           ;incstack = 0
  5378  001954  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5379  001958  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5380  00195C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5381  001960  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5382  001964  0012               	return	
  5383  001966                     __end_of_WriteTimer1:
  5384                           	opt stack 0
  5385                           pclatu	equ	0xFFB
  5386                           pclath	equ	0xFFA
  5387                           tblptru	equ	0xFF8
  5388                           tblptrh	equ	0xFF7
  5389                           tblptrl	equ	0xFF6
  5390                           tablat	equ	0xFF5
  5391                           prodh	equ	0xFF4
  5392                           prodl	equ	0xFF3
  5393                           intcon	equ	0xFF2
  5394                           postinc0	equ	0xFEE
  5395                           fsr0h	equ	0xFEA
  5396                           fsr0l	equ	0xFE9
  5397                           wreg	equ	0xFE8
  5398                           indf1	equ	0xFE7
  5399                           fsr1h	equ	0xFE2
  5400                           fsr1l	equ	0xFE1
  5401                           bsr	equ	0xFE0
  5402                           indf2	equ	0xFDF
  5403                           postinc2	equ	0xFDE
  5404                           postdec2	equ	0xFDD
  5405                           fsr2h	equ	0xFDA
  5406                           fsr2l	equ	0xFD9
  5407                           status	equ	0xFD8
  5408                           
  5409 ;; *************** function _ToMainLow_sendmsg *****************
  5410 ;; Defined at:
  5411 ;;		line 103 in file "src/messages.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  length          1    wreg     unsigned char 
  5414 ;;  msgtype         1   22[COMRAM] unsigned char 
  5415 ;;  data            2   23[COMRAM] PTR void 
  5416 ;;		 -> NULL(0), main@uc(5), 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  length          1   25[COMRAM] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      char 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5428 ;;      Params:         3       0       0       0       0
  5429 ;;      Locals:         1       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0
  5431 ;;      Totals:         4       0       0       0       0
  5432 ;;Total ram usage:        4 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    7
  5435 ;; This function calls:
  5436 ;;		i1_send_msg
  5437 ;; This function is called by:
  5438 ;;		_uart_recv_int_handler
  5439 ;;		_timer1_int_handler
  5440 ;;		_sendUART
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text37
  5445  001886                     __ptext37:
  5446                           	opt stack 0
  5447  001886                     _ToMainLow_sendmsg:
  5448                           	opt stack 17
  5449                           
  5450                           ;incstack = 0
  5451                           ;ToMainLow_sendmsg@length stored from wreg
  5452  001886  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5453                           
  5454                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5455  001888  0100               	movlb	0	; () banked
  5456  00188A  0E00               	movlw	high _ToMainLow_MQ
  5457  00188C  6E0C               	movwf	i1send_msg@qptr+1,c
  5458  00188E  0100               	movlb	0	; () banked
  5459  001890  0E80               	movlw	low _ToMainLow_MQ
  5460  001892  6E0B               	movwf	i1send_msg@qptr,c
  5461  001894  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5462  001898  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5463  00189C  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5464  0018A0  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5465  0018A4  ECE0  F007         	call	i1_send_msg	;wreg free
  5466  0018A8  0012               	return	
  5467  0018AA                     __end_of_ToMainLow_sendmsg:
  5468                           	opt stack 0
  5469                           pclatu	equ	0xFFB
  5470                           pclath	equ	0xFFA
  5471                           tblptru	equ	0xFF8
  5472                           tblptrh	equ	0xFF7
  5473                           tblptrl	equ	0xFF6
  5474                           tablat	equ	0xFF5
  5475                           prodh	equ	0xFF4
  5476                           prodl	equ	0xFF3
  5477                           intcon	equ	0xFF2
  5478                           postinc0	equ	0xFEE
  5479                           fsr0h	equ	0xFEA
  5480                           fsr0l	equ	0xFE9
  5481                           wreg	equ	0xFE8
  5482                           indf1	equ	0xFE7
  5483                           fsr1h	equ	0xFE2
  5484                           fsr1l	equ	0xFE1
  5485                           bsr	equ	0xFE0
  5486                           indf2	equ	0xFDF
  5487                           postinc2	equ	0xFDE
  5488                           postdec2	equ	0xFDD
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function i1_send_msg *****************
  5494 ;; Defined at:
  5495 ;;		line 24 in file "src/messages.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5498 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5499 ;;  length          1   12[COMRAM] unsigned char 
  5500 ;;  msgtype         1   13[COMRAM] unsigned char 
  5501 ;;  data            2   14[COMRAM] PTR void 
  5502 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  5503 ;;		 -> main@ic(28), main@uc(5), 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5506 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5507 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5508 ;;  send_msg        2   17[COMRAM] unsigned int 
  5509 ;;  send_msg        1   19[COMRAM] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      char 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5519 ;;      Params:         6       0       0       0       0
  5520 ;;      Locals:         5       0       0       0       0
  5521 ;;      Temps:          1       0       0       0       0
  5522 ;;      Totals:        12       0       0       0       0
  5523 ;;Total ram usage:       12 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    6
  5526 ;; This function calls:
  5527 ;;		i1_memcpy
  5528 ;; This function is called by:
  5529 ;;		_ToMainLow_sendmsg
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text38
  5534  000FC0                     __ptext38:
  5535                           	opt stack 0
  5536  000FC0                     i1_send_msg:
  5537                           	opt stack 17
  5538                           
  5539                           ;messages.c: 25: unsigned char slot;
  5540                           ;messages.c: 27: msg *qmsg;
  5541                           ;messages.c: 28: size_t tlength = length;
  5542                           
  5543                           ;incstack = 0
  5544  000FC0  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5545  000FC4  6A13               	clrf	i1send_msg@tlength+1,c
  5546                           
  5547                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5548  000FC6  EE20 F034          	lfsr	2,52
  5549  000FCA  500B               	movf	i1send_msg@qptr,w,c
  5550  000FCC  26D9               	addwf	fsr2l,f,c
  5551  000FCE  500C               	movf	i1send_msg@qptr+1,w,c
  5552  000FD0  22DA               	addwfc	fsr2h,f,c
  5553  000FD2  50DF               	movf	indf2,w,c
  5554  000FD4  6E14               	movwf	i1send_msg@slot,c
  5555                           
  5556                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5557  000FD6  5014               	movf	i1send_msg@slot,w,c
  5558  000FD8  0D0D               	mullw	13
  5559  000FDA  50F3               	movf	prodl,w,c
  5560  000FDC  240B               	addwf	i1send_msg@qptr,w,c
  5561  000FDE  6E15               	movwf	i1send_msg@qmsg,c
  5562  000FE0  50F4               	movf	prodh,w,c
  5563  000FE2  200C               	addwfc	i1send_msg@qptr+1,w,c
  5564  000FE4  6E16               	movwf	i1send_msg@qmsg+1,c
  5565                           
  5566                           ;messages.c: 41: if (qmsg->full != 0) {
  5567  000FE6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5568  000FEA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5569  000FEE  50DF               	movf	indf2,w,c
  5570  000FF0  B4D8               	btfsc	status,2,c
  5571  000FF2  D002               	goto	i1l2118
  5572                           
  5573                           ;messages.c: 42: return (-1);
  5574  000FF4  0EFF               	movlw	255
  5575  000FF6  0012               	return	
  5576  000FF8                     i1l2118:
  5577                           
  5578                           ;messages.c: 43: }
  5579                           ;messages.c: 46: qmsg->length = length;
  5580  000FF8  EE20 F001          	lfsr	2,1
  5581  000FFC  5015               	movf	i1send_msg@qmsg,w,c
  5582  000FFE  26D9               	addwf	fsr2l,f,c
  5583  001000  5016               	movf	i1send_msg@qmsg+1,w,c
  5584  001002  22DA               	addwfc	fsr2h,f,c
  5585  001004  C00D  FFDF         	movff	i1send_msg@length,indf2
  5586                           
  5587                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5588  001008  EE20 F002          	lfsr	2,2
  5589  00100C  5015               	movf	i1send_msg@qmsg,w,c
  5590  00100E  26D9               	addwf	fsr2l,f,c
  5591  001010  5016               	movf	i1send_msg@qmsg+1,w,c
  5592  001012  22DA               	addwfc	fsr2h,f,c
  5593  001014  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5594                           
  5595                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5596  001018  0E03               	movlw	3
  5597  00101A  2415               	addwf	i1send_msg@qmsg,w,c
  5598  00101C  6E01               	movwf	i1memcpy@d1,c
  5599  00101E  0E00               	movlw	0
  5600  001020  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5601  001022  6E02               	movwf	i1memcpy@d1+1,c
  5602  001024  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5603  001028  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5604  00102C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5605  001030  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5606  001034  EC99  F00A         	call	i1_memcpy	;wreg free
  5607                           
  5608                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5609  001038  EE20 F034          	lfsr	2,52
  5610  00103C  500B               	movf	i1send_msg@qptr,w,c
  5611  00103E  26D9               	addwf	fsr2l,f,c
  5612  001040  500C               	movf	i1send_msg@qptr+1,w,c
  5613  001042  22DA               	addwfc	fsr2h,f,c
  5614  001044  EE10 F034          	lfsr	1,52
  5615  001048  500B               	movf	i1send_msg@qptr,w,c
  5616  00104A  26E1               	addwf	fsr1l,f,c
  5617  00104C  500C               	movf	i1send_msg@qptr+1,w,c
  5618  00104E  22E2               	addwfc	fsr1h,f,c
  5619  001050  50E7               	movf	indf1,w,c
  5620  001052  6E11               	movwf	??i1_send_msg& (0+255),c
  5621  001054  2811               	incf	??i1_send_msg,w,c
  5622  001056  0B03               	andlw	3
  5623  001058  6EDF               	movwf	indf2,c
  5624                           
  5625                           ;messages.c: 59: qmsg->full = 1;
  5626  00105A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5627  00105E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5628  001062  0E01               	movlw	1
  5629  001064  6EDF               	movwf	indf2,c
  5630                           
  5631                           ;messages.c: 60: return (1);
  5632  001066  0E01               	movlw	1
  5633  001068  0012               	return	
  5634  00106A                     __end_ofi1_send_msg:
  5635                           	opt stack 0
  5636                           pclatu	equ	0xFFB
  5637                           pclath	equ	0xFFA
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           intcon	equ	0xFF2
  5645                           postinc0	equ	0xFEE
  5646                           fsr0h	equ	0xFEA
  5647                           fsr0l	equ	0xFE9
  5648                           wreg	equ	0xFE8
  5649                           indf1	equ	0xFE7
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           bsr	equ	0xFE0
  5653                           indf2	equ	0xFDF
  5654                           postinc2	equ	0xFDE
  5655                           postdec2	equ	0xFDD
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function i1_memcpy *****************
  5661 ;; Defined at:
  5662 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  d1              2    0[COMRAM] PTR void 
  5665 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5666 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5667 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5668 ;;  s1              2    2[COMRAM] PTR const void 
  5669 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5670 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5671 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5672 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5673 ;;		 -> main@ic(28), main@uc(5), 
  5674 ;;  n               2    4[COMRAM] unsigned int 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5677 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5678 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5679 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5680 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5681 ;;		 -> main@ic(28), main@uc(5), 
  5682 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5683 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5684 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5685 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  2    0[COMRAM] PTR void 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5695 ;;      Params:         6       0       0       0       0
  5696 ;;      Locals:         4       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0
  5698 ;;      Totals:        10       0       0       0       0
  5699 ;;Total ram usage:       10 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    5
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		i1_send_msg
  5706 ;;		i1_recv_msg
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text39
  5711  001532                     __ptext39:
  5712                           	opt stack 0
  5713  001532                     i1_memcpy:
  5714                           	opt stack 17
  5715                           
  5716                           ;incstack = 0
  5717  001532  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5718  001536  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5719  00153A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5720  00153E  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5721  001542  D00E               	goto	i1l2046
  5722  001544                     i1l2040:
  5723  001544  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5724  001548  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5725  00154C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5726  001550  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5727  001554  CFDF FFE7          	movff	indf2,indf1
  5728  001558  4A09               	infsnz	i1memcpy@s,f,c
  5729  00155A  2A0A               	incf	i1memcpy@s+1,f,c
  5730  00155C  4A07               	infsnz	i1memcpy@d,f,c
  5731  00155E  2A08               	incf	i1memcpy@d+1,f,c
  5732  001560                     i1l2046:
  5733  001560  0605               	decf	i1memcpy@n,f,c
  5734  001562  A0D8               	btfss	status,0,c
  5735  001564  0606               	decf	i1memcpy@n+1,f,c
  5736  001566  2805               	incf	i1memcpy@n& (0+255),w,c
  5737  001568  B4D8               	btfsc	status,2,c
  5738  00156A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5739  00156C  B4D8               	btfsc	status,2,c
  5740                           
  5741                           ;	Return value of i1_memcpy is never used
  5742  00156E  0012               	return	
  5743  001570  D7E9               	goto	i1l2040
  5744  001572                     __end_ofi1_memcpy:
  5745                           	opt stack 0
  5746                           pclatu	equ	0xFFB
  5747                           pclath	equ	0xFFA
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           postinc0	equ	0xFEE
  5756                           fsr0h	equ	0xFEA
  5757                           fsr0l	equ	0xFE9
  5758                           wreg	equ	0xFE8
  5759                           indf1	equ	0xFE7
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           bsr	equ	0xFE0
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770 ;; *************** function _ReadTimer1 *****************
  5771 ;; Defined at:
  5772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  timer           2    2[COMRAM] struct Timers
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  2    0[COMRAM] unsigned int 
  5779 ;; Registers used:
  5780 ;;		None
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5786 ;;      Params:         2       0       0       0       0
  5787 ;;      Locals:         2       0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0
  5789 ;;      Totals:         4       0       0       0       0
  5790 ;;Total ram usage:        4 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    5
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_timer1_int_handler
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text40
  5801  001966                     __ptext40:
  5802                           	opt stack 0
  5803  001966                     _ReadTimer1:
  5804                           	opt stack 19
  5805                           
  5806                           ;incstack = 0
  5807  001966  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5808  00196A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5809  00196E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5810  001972  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5811  001976  0012               	return	
  5812  001978                     __end_of_ReadTimer1:
  5813                           	opt stack 0
  5814                           pclatu	equ	0xFFB
  5815                           pclath	equ	0xFFA
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           prodh	equ	0xFF4
  5821                           prodl	equ	0xFF3
  5822                           intcon	equ	0xFF2
  5823                           postinc0	equ	0xFEE
  5824                           fsr0h	equ	0xFEA
  5825                           fsr0l	equ	0xFE9
  5826                           wreg	equ	0xFE8
  5827                           indf1	equ	0xFE7
  5828                           fsr1h	equ	0xFE2
  5829                           fsr1l	equ	0xFE1
  5830                           bsr	equ	0xFE0
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function _InterruptHandlerHigh *****************
  5839 ;; Defined at:
  5840 ;;		line 83 in file "src/interrupts.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;		None               void
  5847 ;; Registers used:
  5848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5854 ;;      Params:         0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0
  5856 ;;      Temps:          0      14       0       0       0
  5857 ;;      Totals:         0      14       0       0       0
  5858 ;;Total ram usage:       14 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    4
  5861 ;; This function calls:
  5862 ;;		_SleepIfOkay
  5863 ;;		_i2c_int_handler
  5864 ;;		_timer0_int_handler
  5865 ;; This function is called by:
  5866 ;;		Interrupt level 2
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	intcode
  5871  000008                     __pintcode:
  5872                           	opt stack 0
  5873  000008                     _InterruptHandlerHigh:
  5874                           	opt stack 17
  5875                           
  5876                           ;incstack = 0
  5877  000008  CFFA F0C5          	movff	pclath,??_InterruptHandlerHigh
  5878  00000C  CFFB F0C6          	movff	pclatu,??_InterruptHandlerHigh+1
  5879  000010  CFE9 F0C7          	movff	fsr0l,??_InterruptHandlerHigh+2
  5880  000014  EFC0  F008         	goto	int_func
  5881                           pclatu	equ	0xFFB
  5882                           pclath	equ	0xFFA
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           postinc0	equ	0xFEE
  5891                           fsr0h	equ	0xFEA
  5892                           fsr0l	equ	0xFE9
  5893                           wreg	equ	0xFE8
  5894                           indf1	equ	0xFE7
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           bsr	equ	0xFE0
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905                           	psect	intcode_body
  5906  001180                     __pintcode_body:
  5907                           	opt stack 17
  5908  001180                     int_func:
  5909                           	opt stack 17
  5910  001180  CFEA F0C8          	movff	fsr0h,??_InterruptHandlerHigh+3
  5911  001184  CFE1 F0C9          	movff	fsr1l,??_InterruptHandlerHigh+4
  5912  001188  CFE2 F0CA          	movff	fsr1h,??_InterruptHandlerHigh+5
  5913  00118C  CFD9 F0CB          	movff	fsr2l,??_InterruptHandlerHigh+6
  5914  001190  CFDA F0CC          	movff	fsr2h,??_InterruptHandlerHigh+7
  5915  001194  CFF3 F0CD          	movff	prodl,??_InterruptHandlerHigh+8
  5916  001198  CFF4 F0CE          	movff	prodh,??_InterruptHandlerHigh+9
  5917  00119C  CFF6 F0CF          	movff	tblptrl,??_InterruptHandlerHigh+10
  5918  0011A0  CFF7 F0D0          	movff	tblptrh,??_InterruptHandlerHigh+11
  5919  0011A4  CFF8 F0D1          	movff	tblptru,??_InterruptHandlerHigh+12
  5920  0011A8  CFF5 F0D2          	movff	tablat,??_InterruptHandlerHigh+13
  5921                           
  5922                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5923  0011AC  A69E               	btfss	3998,3,c	;volatile
  5924  0011AE  D003               	goto	i2l3254
  5925                           
  5926                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5927  0011B0  969E               	bcf	3998,3,c	;volatile
  5928                           
  5929                           ;interrupts.c: 92: i2c_int_handler();
  5930  0011B2  EC62  F000         	call	_i2c_int_handler	;wreg free
  5931  0011B6                     i2l3254:
  5932                           
  5933                           ;interrupts.c: 93: }
  5934                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5935  0011B6  A4F2               	btfss	intcon,2,c	;volatile
  5936  0011B8  D003               	goto	i2l3260
  5937                           
  5938                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5939  0011BA  94F2               	bcf	intcon,2,c	;volatile
  5940                           
  5941                           ;interrupts.c: 99: timer0_int_handler();
  5942  0011BC  EC64  F009         	call	_timer0_int_handler	;wreg free
  5943  0011C0                     i2l3260:
  5944                           
  5945                           ;interrupts.c: 100: }
  5946                           ;interrupts.c: 109: SleepIfOkay();
  5947  0011C0  EC72  F00A         	call	_SleepIfOkay	;wreg free
  5948  0011C4  C0D2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5949  0011C8  C0D1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5950  0011CC  C0D0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5951  0011D0  C0CF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5952  0011D4  C0CE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5953  0011D8  C0CD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5954  0011DC  C0CC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5955  0011E0  C0CB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5956  0011E4  C0CA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5957  0011E8  C0C9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5958  0011EC  C0C8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5959  0011F0  C0C7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5960  0011F4  C0C6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5961  0011F8  C0C5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5962  0011FC  0011               	retfie		f
  5963  0011FE                     __end_of_InterruptHandlerHigh:
  5964                           	opt stack 0
  5965                           pclatu	equ	0xFFB
  5966                           pclath	equ	0xFFA
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           postinc0	equ	0xFEE
  5975                           fsr0h	equ	0xFEA
  5976                           fsr0l	equ	0xFE9
  5977                           wreg	equ	0xFE8
  5978                           indf1	equ	0xFE7
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           bsr	equ	0xFE0
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           postdec2	equ	0xFDD
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _timer0_int_handler *****************
  5990 ;; Defined at:
  5991 ;;		line 16 in file "src/user_interrupts.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  val             2   13[BANK0 ] unsigned int 
  5996 ;;  msgtype         2   11[BANK0 ] int 
  5997 ;;  length          2    9[BANK0 ] int 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;		None               void
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6007 ;;      Params:         0       0       0       0       0
  6008 ;;      Locals:         0       6       0       0       0
  6009 ;;      Temps:          0       0       0       0       0
  6010 ;;      Totals:         0       6       0       0       0
  6011 ;;Total ram usage:        6 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    3
  6014 ;; This function calls:
  6015 ;;		_FromMainHigh_recvmsg
  6016 ;;		_ToMainHigh_sendmsg
  6017 ;;		_WriteTimer0
  6018 ;; This function is called by:
  6019 ;;		_InterruptHandlerHigh
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text42
  6024  0012C8                     __ptext42:
  6025                           	opt stack 0
  6026  0012C8                     _timer0_int_handler:
  6027                           	opt stack 17
  6028                           
  6029                           ;user_interrupts.c: 17: unsigned int val;
  6030                           ;user_interrupts.c: 18: int length, msgtype;
  6031                           ;user_interrupts.c: 25: WriteTimer0(0);
  6032                           
  6033                           ;incstack = 0
  6034  0012C8  0E00               	movlw	0
  6035  0012CA  6E35               	movwf	WriteTimer0@timer0+1,c
  6036  0012CC  0E00               	movlw	0
  6037  0012CE  6E34               	movwf	WriteTimer0@timer0,c
  6038  0012D0  ECBC  F00C         	call	_WriteTimer0	;wreg free
  6039                           
  6040                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6041  0012D4  0100               	movlb	0	; () banked
  6042  0012D6  0E00               	movlw	high timer0_int_handler@msgtype
  6043  0012D8  0100               	movlb	0	; () banked
  6044  0012DA  6FBC               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6045  0012DC  0100               	movlb	0	; () banked
  6046  0012DE  0EC1               	movlw	low timer0_int_handler@msgtype
  6047  0012E0  0100               	movlb	0	; () banked
  6048  0012E2  6FBB               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6049  0012E4  0100               	movlb	0	; () banked
  6050  0012E6  0E00               	movlw	high timer0_int_handler@val
  6051  0012E8  0100               	movlb	0	; () banked
  6052  0012EA  6FBE               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6053  0012EC  0100               	movlb	0	; () banked
  6054  0012EE  0EC3               	movlw	low timer0_int_handler@val
  6055  0012F0  0100               	movlb	0	; () banked
  6056  0012F2  6FBD               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6057  0012F4  0E02               	movlw	2
  6058  0012F6  ECB1  F00B         	call	_FromMainHigh_recvmsg
  6059  0012FA  0100               	movlb	0	; () banked
  6060  0012FC  6FBF               	movwf	timer0_int_handler@length& (0+255),b
  6061  0012FE  0100               	movlb	0	; () banked
  6062  001300  6BC0               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6063  001302  0100               	movlb	0	; () banked
  6064  001304  BFBF               	btfsc	timer0_int_handler@length& (0+255),7,b
  6065  001306  07C0               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6069  001308  0100               	movlb	0	; () banked
  6070  00130A  51BF               	movf	timer0_int_handler@length& (0+255),w,b
  6071  00130C  0A02               	xorlw	2
  6072  00130E  11C0               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6073  001310  A4D8               	btfss	status,2,c
  6074  001312  0012               	return	
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6078  001314  0E0A               	movlw	10
  6079  001316  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6080  001318  0100               	movlb	0	; () banked
  6081  00131A  0E00               	movlw	high timer0_int_handler@val
  6082  00131C  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6083  00131E  0100               	movlb	0	; () banked
  6084  001320  0EC3               	movlw	low timer0_int_handler@val
  6085  001322  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6086  001324  0E02               	movlw	2
  6087  001326  EC55  F00C         	call	_ToMainHigh_sendmsg
  6088  00132A  0012               	return	
  6089  00132C                     __end_of_timer0_int_handler:
  6090                           	opt stack 0
  6091                           pclatu	equ	0xFFB
  6092                           pclath	equ	0xFFA
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           prodh	equ	0xFF4
  6098                           prodl	equ	0xFF3
  6099                           intcon	equ	0xFF2
  6100                           postinc0	equ	0xFEE
  6101                           fsr0h	equ	0xFEA
  6102                           fsr0l	equ	0xFE9
  6103                           wreg	equ	0xFE8
  6104                           indf1	equ	0xFE7
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           bsr	equ	0xFE0
  6108                           indf2	equ	0xFDF
  6109                           postinc2	equ	0xFDE
  6110                           postdec2	equ	0xFDD
  6111                           fsr2h	equ	0xFDA
  6112                           fsr2l	equ	0xFD9
  6113                           status	equ	0xFD8
  6114                           
  6115 ;; *************** function _WriteTimer0 *****************
  6116 ;; Defined at:
  6117 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  timer0          2   51[COMRAM] unsigned int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  timer           2   53[COMRAM] struct Timers
  6122 ;; Return value:  Size  Location     Type
  6123 ;;		None               void
  6124 ;; Registers used:
  6125 ;;		None
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6131 ;;      Params:         2       0       0       0       0
  6132 ;;      Locals:         2       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0
  6134 ;;      Totals:         4       0       0       0       0
  6135 ;;Total ram usage:        4 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_timer0_int_handler
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text43
  6145  001978                     __ptext43:
  6146                           	opt stack 0
  6147  001978                     _WriteTimer0:
  6148                           	opt stack 19
  6149                           
  6150                           ;incstack = 0
  6151  001978  C034  F036         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6152  00197C  C035  F037         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6153  001980  C037  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6154  001984  C036  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6155  001988  0012               	return	
  6156  00198A                     __end_of_WriteTimer0:
  6157                           	opt stack 0
  6158                           pclatu	equ	0xFFB
  6159                           pclath	equ	0xFFA
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           postinc0	equ	0xFEE
  6168                           fsr0h	equ	0xFEA
  6169                           fsr0l	equ	0xFE9
  6170                           wreg	equ	0xFE8
  6171                           indf1	equ	0xFE7
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           bsr	equ	0xFE0
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _FromMainHigh_recvmsg *****************
  6183 ;; Defined at:
  6184 ;;		line 183 in file "src/messages.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  maxlength       1    wreg     unsigned char 
  6187 ;;  msgtype         2    5[BANK0 ] PTR unsigned char 
  6188 ;;		 -> timer0_int_handler@msgtype(2), 
  6189 ;;  data            2    7[BANK0 ] PTR void 
  6190 ;;		 -> timer0_int_handler@val(2), 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  maxlength       1   70[COMRAM] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      char 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6202 ;;      Params:         0       4       0       0       0
  6203 ;;      Locals:         1       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0
  6205 ;;      Totals:         1       4       0       0       0
  6206 ;;Total ram usage:        5 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    2
  6209 ;; This function calls:
  6210 ;;		i2_recv_msg
  6211 ;; This function is called by:
  6212 ;;		_timer0_int_handler
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text44
  6217  001762                     __ptext44:
  6218                           	opt stack 0
  6219  001762                     _FromMainHigh_recvmsg:
  6220                           	opt stack 17
  6221                           
  6222                           ;incstack = 0
  6223                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6224  001762  6E47               	movwf	FromMainHigh_recvmsg@maxlength,c
  6225                           
  6226                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6227  001764  0101               	movlb	1	; () banked
  6228  001766  0E01               	movlw	high _FromMainHigh_MQ
  6229  001768  6E3F               	movwf	i2recv_msg@qptr+1,c
  6230  00176A  0101               	movlb	1	; () banked
  6231  00176C  0E00               	movlw	low _FromMainHigh_MQ
  6232  00176E  6E3E               	movwf	i2recv_msg@qptr,c
  6233  001770  C047  F040         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6234  001774  0100               	movlb	0	; () banked
  6235  001776  C0BC  F042         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6236  00177A  0100               	movlb	0	; () banked
  6237  00177C  C0BB  F041         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6238  001780  0100               	movlb	0	; () banked
  6239  001782  C0BE  F044         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6240  001786  0100               	movlb	0	; () banked
  6241  001788  C0BD  F043         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6242  00178C  EC5E  F005         	call	i2_recv_msg	;wreg free
  6243  001790  0012               	return	
  6244  001792                     __end_of_FromMainHigh_recvmsg:
  6245                           	opt stack 0
  6246                           pclatu	equ	0xFFB
  6247                           pclath	equ	0xFFA
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           postinc0	equ	0xFEE
  6256                           fsr0h	equ	0xFEA
  6257                           fsr0l	equ	0xFE9
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           bsr	equ	0xFE0
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function i2_recv_msg *****************
  6271 ;; Defined at:
  6272 ;;		line 63 in file "src/messages.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  6275 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6276 ;;  maxlength       1   63[COMRAM] unsigned char 
  6277 ;;  msgtype         2   64[COMRAM] PTR unsigned char 
  6278 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6279 ;;  data            2   66[COMRAM] PTR void 
  6280 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
  6283 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6284 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6285 ;;  recv_msg        2    1[BANK0 ] unsigned int 
  6286 ;;  recv_msg        1    0[BANK0 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      char 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6296 ;;      Params:         7       0       0       0       0
  6297 ;;      Locals:         0       5       0       0       0
  6298 ;;      Temps:          2       0       0       0       0
  6299 ;;      Totals:         9       5       0       0       0
  6300 ;;Total ram usage:       14 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    1
  6303 ;; This function calls:
  6304 ;;		i2_memcpy
  6305 ;; This function is called by:
  6306 ;;		_FromMainHigh_recvmsg
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text45
  6311  000ABC                     __ptext45:
  6312                           	opt stack 0
  6313  000ABC                     i2_recv_msg:
  6314                           	opt stack 17
  6315                           
  6316                           ;messages.c: 64: unsigned char slot;
  6317                           ;messages.c: 68: msg *qmsg;
  6318                           ;messages.c: 69: size_t tlength;
  6319                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6320                           
  6321                           ;incstack = 0
  6322  000ABC  EE20 F035          	lfsr	2,53
  6323  000AC0  503E               	movf	i2recv_msg@qptr,w,c
  6324  000AC2  26D9               	addwf	fsr2l,f,c
  6325  000AC4  503F               	movf	i2recv_msg@qptr+1,w,c
  6326  000AC6  22DA               	addwfc	fsr2h,f,c
  6327  000AC8  50DF               	movf	indf2,w,c
  6328  000ACA  0100               	movlb	0	; () banked
  6329  000ACC  6FB6               	movwf	i2recv_msg@slot& (0+255),b
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6333  000ACE  0100               	movlb	0	; () banked
  6334  000AD0  51B6               	movf	i2recv_msg@slot& (0+255),w,b
  6335  000AD2  0D0D               	mullw	13
  6336  000AD4  50F3               	movf	prodl,w,c
  6337  000AD6  243E               	addwf	i2recv_msg@qptr,w,c
  6338  000AD8  0100               	movlb	0	; () banked
  6339  000ADA  6FB9               	movwf	i2recv_msg@qmsg& (0+255),b
  6340  000ADC  50F4               	movf	prodh,w,c
  6341  000ADE  203F               	addwfc	i2recv_msg@qptr+1,w,c
  6342  000AE0  0100               	movlb	0	; () banked
  6343  000AE2  6FBA               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;messages.c: 74: if (qmsg->full == 1) {
  6347  000AE4  0E01               	movlw	1
  6348  000AE6  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6349  000AEA  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6350  000AEE  62DF               	cpfseq	indf2,c
  6351  000AF0  D05E               	goto	i2l3016
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6355  000AF2  0100               	movlb	0	; () banked
  6356  000AF4  EE20 F001          	lfsr	2,1
  6357  000AF8  0100               	movlb	0	; () banked
  6358  000AFA  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6359  000AFC  26D9               	addwf	fsr2l,f,c
  6360  000AFE  0100               	movlb	0	; () banked
  6361  000B00  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6362  000B02  22DA               	addwfc	fsr2h,f,c
  6363  000B04  50DF               	movf	indf2,w,c
  6364  000B06  5C40               	subwf	i2recv_msg@maxlength,w,c
  6365  000B08  B0D8               	btfsc	status,0,c
  6366  000B0A  D002               	goto	i2l3000
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;messages.c: 77: return (-3);
  6370  000B0C  0EFD               	movlw	253
  6371  000B0E  0012               	return	
  6372  000B10                     i2l3000:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;messages.c: 78: }
  6376                           ;messages.c: 80: tlength = qmsg->length;
  6377  000B10  0100               	movlb	0	; () banked
  6378  000B12  EE20 F001          	lfsr	2,1
  6379  000B16  0100               	movlb	0	; () banked
  6380  000B18  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6381  000B1A  26D9               	addwf	fsr2l,f,c
  6382  000B1C  0100               	movlb	0	; () banked
  6383  000B1E  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6384  000B20  22DA               	addwfc	fsr2h,f,c
  6385  000B22  50DF               	movf	indf2,w,c
  6386  000B24  6E45               	movwf	??i2_recv_msg& (0+255),c
  6387  000B26  5045               	movf	??i2_recv_msg,w,c
  6388  000B28  0100               	movlb	0	; () banked
  6389  000B2A  6FB7               	movwf	i2recv_msg@tlength& (0+255),b
  6390  000B2C  0100               	movlb	0	; () banked
  6391  000B2E  6BB8               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6395  000B30  C044  F035         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6396  000B34  C043  F034         	movff	i2recv_msg@data,i2memcpy@d1
  6397  000B38  0E03               	movlw	3
  6398  000B3A  0100               	movlb	0	; () banked
  6399  000B3C  25B9               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6400  000B3E  6E45               	movwf	??i2_recv_msg& (0+255),c
  6401  000B40  0E00               	movlw	0
  6402  000B42  0100               	movlb	0	; () banked
  6403  000B44  21BA               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6404  000B46  6E46               	movwf	(??i2_recv_msg+1)& (0+255),c
  6405  000B48  C045  F036         	movff	??i2_recv_msg,i2memcpy@s1
  6406  000B4C  C046  F037         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6407  000B50  C0B7  F038         	movff	i2recv_msg@tlength,i2memcpy@n
  6408  000B54  C0B8  F039         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6409  000B58  ECB9  F00A         	call	i2_memcpy	;wreg free
  6410                           
  6411                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6412  000B5C  EE20 F035          	lfsr	2,53
  6413  000B60  503E               	movf	i2recv_msg@qptr,w,c
  6414  000B62  26D9               	addwf	fsr2l,f,c
  6415  000B64  503F               	movf	i2recv_msg@qptr+1,w,c
  6416  000B66  22DA               	addwfc	fsr2h,f,c
  6417  000B68  EE10 F035          	lfsr	1,53
  6418  000B6C  503E               	movf	i2recv_msg@qptr,w,c
  6419  000B6E  26E1               	addwf	fsr1l,f,c
  6420  000B70  503F               	movf	i2recv_msg@qptr+1,w,c
  6421  000B72  22E2               	addwfc	fsr1h,f,c
  6422  000B74  50E7               	movf	indf1,w,c
  6423  000B76  6E45               	movwf	??i2_recv_msg& (0+255),c
  6424  000B78  2845               	incf	??i2_recv_msg,w,c
  6425  000B7A  0B03               	andlw	3
  6426  000B7C  6EDF               	movwf	indf2,c
  6427                           
  6428                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6429  000B7E  0100               	movlb	0	; () banked
  6430  000B80  EE20 F002          	lfsr	2,2
  6431  000B84  0100               	movlb	0	; () banked
  6432  000B86  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6433  000B88  26D9               	addwf	fsr2l,f,c
  6434  000B8A  0100               	movlb	0	; () banked
  6435  000B8C  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6436  000B8E  22DA               	addwfc	fsr2h,f,c
  6437  000B90  C041  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6438  000B94  C042  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6439  000B98  CFDF FFE7          	movff	indf2,indf1
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;messages.c: 91: qmsg->full = 0;
  6443  000B9C  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6444  000BA0  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6445  000BA4  0E00               	movlw	0
  6446  000BA6  6EDF               	movwf	indf2,c
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;messages.c: 92: return (tlength);
  6450  000BA8  0100               	movlb	0	; () banked
  6451  000BAA  51B7               	movf	i2recv_msg@tlength& (0+255),w,b
  6452  000BAC  0012               	return	
  6453  000BAE                     i2l3016:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;messages.c: 94: return (-4);
  6457  000BAE  0EFC               	movlw	252
  6458  000BB0  0012               	return	
  6459  000BB2                     __end_ofi2_recv_msg:
  6460                           	opt stack 0
  6461                           pclatu	equ	0xFFB
  6462                           pclath	equ	0xFFA
  6463                           tblptru	equ	0xFF8
  6464                           tblptrh	equ	0xFF7
  6465                           tblptrl	equ	0xFF6
  6466                           tablat	equ	0xFF5
  6467                           prodh	equ	0xFF4
  6468                           prodl	equ	0xFF3
  6469                           intcon	equ	0xFF2
  6470                           postinc0	equ	0xFEE
  6471                           fsr0h	equ	0xFEA
  6472                           fsr0l	equ	0xFE9
  6473                           wreg	equ	0xFE8
  6474                           indf1	equ	0xFE7
  6475                           fsr1h	equ	0xFE2
  6476                           fsr1l	equ	0xFE1
  6477                           bsr	equ	0xFE0
  6478                           indf2	equ	0xFDF
  6479                           postinc2	equ	0xFDE
  6480                           postdec2	equ	0xFDD
  6481                           fsr2h	equ	0xFDA
  6482                           fsr2l	equ	0xFD9
  6483                           status	equ	0xFD8
  6484                           
  6485 ;; *************** function _i2c_int_handler *****************
  6486 ;; Defined at:
  6487 ;;		line 100 in file "src/my_i2c.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6492 ;;  data_read       1   14[BANK0 ] unsigned char 
  6493 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6494 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6495 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6496 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6497 ;;  data_written    1    9[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;		None               void
  6500 ;; Registers used:
  6501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6507 ;;      Params:         0       0       0       0       0
  6508 ;;      Locals:         0       9       0       0       0
  6509 ;;      Temps:          0       1       0       0       0
  6510 ;;      Totals:         0      10       0       0       0
  6511 ;;Total ram usage:       10 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    3
  6514 ;; This function calls:
  6515 ;;		_ToMainHigh_sendmsg
  6516 ;;		_handle_start
  6517 ;; This function is called by:
  6518 ;;		_InterruptHandlerHigh
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text46
  6523  0000C4                     __ptext46:
  6524                           	opt stack 0
  6525  0000C4                     _i2c_int_handler:
  6526                           	opt stack 17
  6527                           
  6528                           ;my_i2c.c: 101: unsigned char i2c_data;
  6529                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;incstack = 0
  6533  0000C4  0E00               	movlw	0
  6534  0000C6  0100               	movlb	0	; () banked
  6535  0000C8  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6536                           
  6537                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6538  0000CA  0E00               	movlw	0
  6539  0000CC  0100               	movlb	0	; () banked
  6540  0000CE  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  6541                           
  6542                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6543  0000D0  0E00               	movlw	0
  6544  0000D2  0100               	movlb	0	; () banked
  6545  0000D4  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6546                           
  6547                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6548  0000D6  0E00               	movlw	0
  6549  0000D8  0100               	movlb	0	; () banked
  6550  0000DA  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6551                           
  6552                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6553  0000DC  0E00               	movlw	0
  6554  0000DE  0100               	movlb	0	; () banked
  6555  0000E0  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6559                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6560  0000E2  ACC6               	btfss	4038,6,c	;volatile
  6561  0000E4  D024               	goto	i2l3078
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6565  0000E6  9CC6               	bcf	4038,6,c	;volatile
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6569  0000E8  0100               	movlb	0	; () banked
  6570  0000EA  EE20 F00C          	lfsr	2,12
  6571  0000EE  0100               	movlb	0	; () banked
  6572  0000F0  51E1               	movf	_ic_ptr& (0+255),w,b
  6573  0000F2  26D9               	addwf	fsr2l,f,c
  6574  0000F4  0100               	movlb	0	; () banked
  6575  0000F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6576  0000F8  22DA               	addwfc	fsr2h,f,c
  6577  0000FA  0E05               	movlw	5
  6578  0000FC  6EDF               	movwf	indf2,c
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;my_i2c.c: 116: overrun_error = 1;
  6582  0000FE  0E01               	movlw	1
  6583  000100  0100               	movlb	0	; () banked
  6584  000102  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6588  000104  0100               	movlb	0	; () banked
  6589  000106  EE20 F00E          	lfsr	2,14
  6590  00010A  0100               	movlb	0	; () banked
  6591  00010C  51E1               	movf	_ic_ptr& (0+255),w,b
  6592  00010E  26D9               	addwf	fsr2l,f,c
  6593  000110  0100               	movlb	0	; () banked
  6594  000112  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6595  000114  22DA               	addwfc	fsr2h,f,c
  6596  000116  2ADF               	incf	indf2,f,c
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6600  000118  0100               	movlb	0	; () banked
  6601  00011A  EE20 F00D          	lfsr	2,13
  6602  00011E  0100               	movlb	0	; () banked
  6603  000120  51E1               	movf	_ic_ptr& (0+255),w,b
  6604  000122  26D9               	addwf	fsr2l,f,c
  6605  000124  0100               	movlb	0	; () banked
  6606  000126  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6607  000128  22DA               	addwfc	fsr2h,f,c
  6608  00012A  0E04               	movlw	4
  6609  00012C  6EDF               	movwf	indf2,c
  6610  00012E                     i2l3078:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;my_i2c.c: 119: }
  6614                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6615  00012E  A0C7               	btfss	4039,0,c	;volatile
  6616  000130  D005               	goto	i2l3084
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6620  000132  CFC9 F0C1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;my_i2c.c: 123: data_read = 1;
  6624  000136  0E01               	movlw	1
  6625  000138  0100               	movlb	0	; () banked
  6626  00013A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6627  00013C                     i2l3084:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;my_i2c.c: 124: }
  6631                           ;my_i2c.c: 126: if (!overrun_error) {
  6632  00013C  0100               	movlb	0	; () banked
  6633  00013E  67C0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6634  000140  D19F               	goto	i2l267
  6635  000142  D188               	goto	i2l3172
  6636  000144                     i2l269:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;my_i2c.c: 129: {
  6640                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6641  000144  A6C7               	btfss	4039,3,c	;volatile
  6642  000146  D19C               	goto	i2l267
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;my_i2c.c: 132: handle_start(data_read);
  6646  000148  0100               	movlb	0	; () banked
  6647  00014A  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  6648  00014C  ECBA  F006         	call	_handle_start
  6649                           
  6650                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  6651  000150  0100               	movlb	0	; () banked
  6652  000152  EE20 F00C          	lfsr	2,12
  6653  000156  0100               	movlb	0	; () banked
  6654  000158  51E1               	movf	_ic_ptr& (0+255),w,b
  6655  00015A  26D9               	addwf	fsr2l,f,c
  6656  00015C  0100               	movlb	0	; () banked
  6657  00015E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6658  000160  22DA               	addwfc	fsr2h,f,c
  6659  000162  0E08               	movlw	8
  6660  000164  62DF               	cpfseq	indf2,c
  6661  000166  D18C               	goto	i2l267
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;my_i2c.c: 135: data_read = 0;
  6665  000168  0E00               	movlw	0
  6666  00016A  0100               	movlb	0	; () banked
  6667  00016C  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6668                           
  6669                           ;my_i2c.c: 136: msg_to_send = 1;
  6670  00016E  0E01               	movlw	1
  6671  000170  0100               	movlb	0	; () banked
  6672  000172  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6673  000174  D185               	goto	i2l267
  6674  000176                     i2l273:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;my_i2c.c: 142: {
  6678                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  6679  000176  A8C7               	btfss	4039,4,c	;volatile
  6680  000178  D02A               	goto	i2l3104
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;my_i2c.c: 147: ic_ptr->event_count++;
  6684  00017A  0100               	movlb	0	; () banked
  6685  00017C  EE20 F00B          	lfsr	2,11
  6686  000180  0100               	movlb	0	; () banked
  6687  000182  51E1               	movf	_ic_ptr& (0+255),w,b
  6688  000184  26D9               	addwf	fsr2l,f,c
  6689  000186  0100               	movlb	0	; () banked
  6690  000188  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6691  00018A  22DA               	addwfc	fsr2h,f,c
  6692  00018C  2ADF               	incf	indf2,f,c
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;my_i2c.c: 148: if (data_read) {
  6696  00018E  0100               	movlb	0	; () banked
  6697  000190  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  6698  000192  B4D8               	btfsc	status,2,c
  6699  000194  D154               	goto	L8
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  6703  000196  BAC7               	btfsc	4039,5,c	;volatile
  6704  000198  D004               	goto	i2l3102
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;my_i2c.c: 150: msg_ready = 1;
  6708  00019A  0E01               	movlw	1
  6709  00019C  0100               	movlb	0	; () banked
  6710  00019E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6711                           
  6712                           ;my_i2c.c: 151: } else {
  6713  0001A0  D14E               	goto	L8
  6714  0001A2                     i2l3102:
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;my_i2c.c: 152: ic_ptr->error_count++;
  6718  0001A2  0100               	movlb	0	; () banked
  6719  0001A4  EE20 F00E          	lfsr	2,14
  6720  0001A8  0100               	movlb	0	; () banked
  6721  0001AA  51E1               	movf	_ic_ptr& (0+255),w,b
  6722  0001AC  26D9               	addwf	fsr2l,f,c
  6723  0001AE  0100               	movlb	0	; () banked
  6724  0001B0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6725  0001B2  22DA               	addwfc	fsr2h,f,c
  6726  0001B4  2ADF               	incf	indf2,f,c
  6727                           
  6728                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  6729  0001B6  0100               	movlb	0	; () banked
  6730  0001B8  EE20 F00D          	lfsr	2,13
  6731  0001BC  0100               	movlb	0	; () banked
  6732  0001BE  51E1               	movf	_ic_ptr& (0+255),w,b
  6733  0001C0  26D9               	addwf	fsr2l,f,c
  6734  0001C2  0100               	movlb	0	; () banked
  6735  0001C4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6736  0001C6  22DA               	addwfc	fsr2h,f,c
  6737  0001C8  0E06               	movlw	6
  6738  0001CA  6EDF               	movwf	indf2,c
  6739                           
  6740                           ; BSR set to: 0
  6741  0001CC  D138               	goto	L8
  6742  0001CE                     i2l3104:
  6743                           
  6744                           ; BSR set to: 0
  6745  0001CE  0100               	movlb	0	; () banked
  6746  0001D0  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  6747  0001D2  B4D8               	btfsc	status,2,c
  6748  0001D4  D155               	goto	i2l267
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;my_i2c.c: 158: ic_ptr->event_count++;
  6752  0001D6  0100               	movlb	0	; () banked
  6753  0001D8  EE20 F00B          	lfsr	2,11
  6754  0001DC  0100               	movlb	0	; () banked
  6755  0001DE  51E1               	movf	_ic_ptr& (0+255),w,b
  6756  0001E0  26D9               	addwf	fsr2l,f,c
  6757  0001E2  0100               	movlb	0	; () banked
  6758  0001E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6759  0001E6  22DA               	addwfc	fsr2h,f,c
  6760  0001E8  2ADF               	incf	indf2,f,c
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  6764  0001EA  BAC7               	btfsc	4039,5,c	;volatile
  6765  0001EC  D019               	goto	i2l3120
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  6769  0001EE  B4C7               	btfsc	4039,2,c	;volatile
  6770  0001F0  D00B               	goto	i2l3114
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  6774  0001F2  0100               	movlb	0	; () banked
  6775  0001F4  EE20 F00C          	lfsr	2,12
  6776  0001F8  0100               	movlb	0	; () banked
  6777  0001FA  51E1               	movf	_ic_ptr& (0+255),w,b
  6778  0001FC  26D9               	addwf	fsr2l,f,c
  6779  0001FE  0100               	movlb	0	; () banked
  6780  000200  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6781  000202  22DA               	addwfc	fsr2h,f,c
  6782  000204  0E07               	movlw	7
  6783  000206  D071               	goto	L6
  6784  000208                     i2l3114:
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  6788  000208  0100               	movlb	0	; () banked
  6789  00020A  EE20 F00C          	lfsr	2,12
  6790  00020E  0100               	movlb	0	; () banked
  6791  000210  51E1               	movf	_ic_ptr& (0+255),w,b
  6792  000212  26D9               	addwf	fsr2l,f,c
  6793  000214  0100               	movlb	0	; () banked
  6794  000216  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6795  000218  22DA               	addwfc	fsr2h,f,c
  6796  00021A  0E08               	movlw	8
  6797  00021C  6EDF               	movwf	indf2,c
  6798  00021E  D108               	goto	L5
  6799  000220                     i2l3120:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;my_i2c.c: 169: ic_ptr->error_count++;
  6803  000220  0100               	movlb	0	; () banked
  6804  000222  EE20 F00E          	lfsr	2,14
  6805  000226  0100               	movlb	0	; () banked
  6806  000228  51E1               	movf	_ic_ptr& (0+255),w,b
  6807  00022A  26D9               	addwf	fsr2l,f,c
  6808  00022C  0100               	movlb	0	; () banked
  6809  00022E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6810  000230  22DA               	addwfc	fsr2h,f,c
  6811  000232  2ADF               	incf	indf2,f,c
  6812                           
  6813                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  6814  000234  0100               	movlb	0	; () banked
  6815  000236  EE20 F00C          	lfsr	2,12
  6816  00023A  0100               	movlb	0	; () banked
  6817  00023C  51E1               	movf	_ic_ptr& (0+255),w,b
  6818  00023E  26D9               	addwf	fsr2l,f,c
  6819  000240  0100               	movlb	0	; () banked
  6820  000242  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6821  000244  22DA               	addwfc	fsr2h,f,c
  6822  000246  0E05               	movlw	5
  6823  000248  6EDF               	movwf	indf2,c
  6824                           
  6825                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  6826  00024A  0100               	movlb	0	; () banked
  6827  00024C  EE20 F00D          	lfsr	2,13
  6828  000250  0100               	movlb	0	; () banked
  6829  000252  51E1               	movf	_ic_ptr& (0+255),w,b
  6830  000254  26D9               	addwf	fsr2l,f,c
  6831  000256  0100               	movlb	0	; () banked
  6832  000258  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6833  00025A  22DA               	addwfc	fsr2h,f,c
  6834  00025C  0E06               	movlw	6
  6835  00025E  D045               	goto	L6
  6836  000260                     i2l3122:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;my_i2c.c: 177: {
  6840                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6841  000260  0100               	movlb	0	; () banked
  6842  000262  EE20 F01A          	lfsr	2,26
  6843  000266  0100               	movlb	0	; () banked
  6844  000268  51E1               	movf	_ic_ptr& (0+255),w,b
  6845  00026A  26D9               	addwf	fsr2l,f,c
  6846  00026C  0100               	movlb	0	; () banked
  6847  00026E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6848  000270  22DA               	addwfc	fsr2h,f,c
  6849  000272  50DF               	movf	indf2,w,c
  6850  000274  0100               	movlb	0	; () banked
  6851  000276  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  6852  000278  0100               	movlb	0	; () banked
  6853  00027A  EE20 F019          	lfsr	2,25
  6854  00027E  0100               	movlb	0	; () banked
  6855  000280  51E1               	movf	_ic_ptr& (0+255),w,b
  6856  000282  26D9               	addwf	fsr2l,f,c
  6857  000284  0100               	movlb	0	; () banked
  6858  000286  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6859  000288  22DA               	addwfc	fsr2h,f,c
  6860  00028A  50DF               	movf	indf2,w,c
  6861  00028C  0100               	movlb	0	; () banked
  6862  00028E  5DBB               	subwf	??_i2c_int_handler& (0+255),w,b
  6863  000290  B0D8               	btfsc	status,0,c
  6864  000292  D0D5               	goto	L8
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6868  000294  0100               	movlb	0	; () banked
  6869  000296  EE20 F01A          	lfsr	2,26
  6870  00029A  0100               	movlb	0	; () banked
  6871  00029C  51E1               	movf	_ic_ptr& (0+255),w,b
  6872  00029E  26D9               	addwf	fsr2l,f,c
  6873  0002A0  0100               	movlb	0	; () banked
  6874  0002A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6875  0002A4  22DA               	addwfc	fsr2h,f,c
  6876  0002A6  50DF               	movf	indf2,w,c
  6877  0002A8  0100               	movlb	0	; () banked
  6878  0002AA  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  6879  0002AC  0100               	movlb	0	; () banked
  6880  0002AE  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  6881  0002B0  0D01               	mullw	1
  6882  0002B2  0E0F               	movlw	15
  6883  0002B4  26F3               	addwf	prodl,f,c
  6884  0002B6  0E00               	movlw	0
  6885  0002B8  22F4               	addwfc	prodh,f,c
  6886  0002BA  50F3               	movf	prodl,w,c
  6887  0002BC  0100               	movlb	0	; () banked
  6888  0002BE  25E1               	addwf	_ic_ptr& (0+255),w,b
  6889  0002C0  6ED9               	movwf	fsr2l,c
  6890  0002C2  50F4               	movf	prodh,w,c
  6891  0002C4  0100               	movlb	0	; () banked
  6892  0002C6  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6893  0002C8  6EDA               	movwf	fsr2h,c
  6894  0002CA  50DF               	movf	indf2,w,c
  6895  0002CC  6EC9               	movwf	4041,c	;volatile
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  6899  0002CE  0100               	movlb	0	; () banked
  6900  0002D0  EE20 F01A          	lfsr	2,26
  6901  0002D4  0100               	movlb	0	; () banked
  6902  0002D6  51E1               	movf	_ic_ptr& (0+255),w,b
  6903  0002D8  26D9               	addwf	fsr2l,f,c
  6904  0002DA  0100               	movlb	0	; () banked
  6905  0002DC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6906  0002DE  22DA               	addwfc	fsr2h,f,c
  6907  0002E0  2ADF               	incf	indf2,f,c
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;my_i2c.c: 181: data_written = 1;
  6911  0002E2  0E01               	movlw	1
  6912  0002E4  0100               	movlb	0	; () banked
  6913  0002E6  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  6914                           
  6915                           ;my_i2c.c: 182: } else {
  6916  0002E8  D0CB               	goto	i2l267
  6917  0002EA                     L6:
  6918  0002EA  6EDF               	movwf	indf2,c
  6919  0002EC  D0C9               	goto	i2l267
  6920  0002EE                     i2l287:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;my_i2c.c: 189: {
  6924                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  6925  0002EE  A8C7               	btfss	4039,4,c	;volatile
  6926  0002F0  D05A               	goto	i2l3150
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;my_i2c.c: 193: ic_ptr->event_count++;
  6930  0002F2  0100               	movlb	0	; () banked
  6931  0002F4  EE20 F00B          	lfsr	2,11
  6932  0002F8  0100               	movlb	0	; () banked
  6933  0002FA  51E1               	movf	_ic_ptr& (0+255),w,b
  6934  0002FC  26D9               	addwf	fsr2l,f,c
  6935  0002FE  0100               	movlb	0	; () banked
  6936  000300  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6937  000302  22DA               	addwfc	fsr2h,f,c
  6938  000304  2ADF               	incf	indf2,f,c
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;my_i2c.c: 194: if (data_read) {
  6942  000306  0100               	movlb	0	; () banked
  6943  000308  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  6944  00030A  B4D8               	btfsc	status,2,c
  6945  00030C  D048               	goto	i2l3146
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  6949  00030E  AAC7               	btfss	4039,5,c	;volatile
  6950  000310  D025               	goto	i2l3144
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6954  000312  0100               	movlb	0	; () banked
  6955  000314  EE20 F00A          	lfsr	2,10
  6956  000318  0100               	movlb	0	; () banked
  6957  00031A  51E1               	movf	_ic_ptr& (0+255),w,b
  6958  00031C  26D9               	addwf	fsr2l,f,c
  6959  00031E  0100               	movlb	0	; () banked
  6960  000320  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6961  000322  22DA               	addwfc	fsr2h,f,c
  6962  000324  50DF               	movf	indf2,w,c
  6963  000326  0100               	movlb	0	; () banked
  6964  000328  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  6965  00032A  0100               	movlb	0	; () banked
  6966  00032C  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  6967  00032E  0D01               	mullw	1
  6968  000330  50F3               	movf	prodl,w,c
  6969  000332  0100               	movlb	0	; () banked
  6970  000334  25E1               	addwf	_ic_ptr& (0+255),w,b
  6971  000336  6ED9               	movwf	fsr2l,c
  6972  000338  50F4               	movf	prodh,w,c
  6973  00033A  0100               	movlb	0	; () banked
  6974  00033C  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6975  00033E  6EDA               	movwf	fsr2h,c
  6976  000340  0100               	movlb	0	; () banked
  6977  000342  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;my_i2c.c: 197: ic_ptr->buflen++;
  6981  000346  0100               	movlb	0	; () banked
  6982  000348  EE20 F00A          	lfsr	2,10
  6983  00034C  0100               	movlb	0	; () banked
  6984  00034E  51E1               	movf	_ic_ptr& (0+255),w,b
  6985  000350  26D9               	addwf	fsr2l,f,c
  6986  000352  0100               	movlb	0	; () banked
  6987  000354  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6988  000356  22DA               	addwfc	fsr2h,f,c
  6989  000358  2ADF               	incf	indf2,f,c
  6990  00035A  D021               	goto	i2l3146
  6991  00035C                     i2l3144:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;my_i2c.c: 200: ic_ptr->error_count++;
  6995  00035C  0100               	movlb	0	; () banked
  6996  00035E  EE20 F00E          	lfsr	2,14
  6997  000362  0100               	movlb	0	; () banked
  6998  000364  51E1               	movf	_ic_ptr& (0+255),w,b
  6999  000366  26D9               	addwf	fsr2l,f,c
  7000  000368  0100               	movlb	0	; () banked
  7001  00036A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7002  00036C  22DA               	addwfc	fsr2h,f,c
  7003  00036E  2ADF               	incf	indf2,f,c
  7004                           
  7005                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7006  000370  0100               	movlb	0	; () banked
  7007  000372  EE20 F00D          	lfsr	2,13
  7008  000376  0100               	movlb	0	; () banked
  7009  000378  51E1               	movf	_ic_ptr& (0+255),w,b
  7010  00037A  26D9               	addwf	fsr2l,f,c
  7011  00037C  0100               	movlb	0	; () banked
  7012  00037E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7013  000380  22DA               	addwfc	fsr2h,f,c
  7014  000382  0E06               	movlw	6
  7015  000384  6EDF               	movwf	indf2,c
  7016                           
  7017                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7018  000386  0100               	movlb	0	; () banked
  7019  000388  EE20 F00C          	lfsr	2,12
  7020  00038C  0100               	movlb	0	; () banked
  7021  00038E  51E1               	movf	_ic_ptr& (0+255),w,b
  7022  000390  26D9               	addwf	fsr2l,f,c
  7023  000392  0100               	movlb	0	; () banked
  7024  000394  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7025  000396  22DA               	addwfc	fsr2h,f,c
  7026  000398  0E05               	movlw	5
  7027  00039A  6EDF               	movwf	indf2,c
  7028  00039C  D050               	goto	L8
  7029  00039E                     i2l3146:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;my_i2c.c: 205: msg_ready = 1;
  7033  00039E  0E01               	movlw	1
  7034  0003A0  0100               	movlb	0	; () banked
  7035  0003A2  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7036                           
  7037                           ; BSR set to: 0
  7038  0003A4  D04C               	goto	L8
  7039  0003A6                     i2l3150:
  7040                           
  7041                           ; BSR set to: 0
  7042  0003A6  0100               	movlb	0	; () banked
  7043  0003A8  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7044  0003AA  B4D8               	btfsc	status,2,c
  7045  0003AC  D069               	goto	i2l267
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7049  0003AE  0100               	movlb	0	; () banked
  7050  0003B0  EE20 F00B          	lfsr	2,11
  7051  0003B4  0100               	movlb	0	; () banked
  7052  0003B6  51E1               	movf	_ic_ptr& (0+255),w,b
  7053  0003B8  26D9               	addwf	fsr2l,f,c
  7054  0003BA  0100               	movlb	0	; () banked
  7055  0003BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7056  0003BE  22DA               	addwfc	fsr2h,f,c
  7057  0003C0  2ADF               	incf	indf2,f,c
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7061  0003C2  AAC7               	btfss	4039,5,c	;volatile
  7062  0003C4  D025               	goto	i2l295
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7066  0003C6  0100               	movlb	0	; () banked
  7067  0003C8  EE20 F00A          	lfsr	2,10
  7068  0003CC  0100               	movlb	0	; () banked
  7069  0003CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7070  0003D0  26D9               	addwf	fsr2l,f,c
  7071  0003D2  0100               	movlb	0	; () banked
  7072  0003D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7073  0003D6  22DA               	addwfc	fsr2h,f,c
  7074  0003D8  50DF               	movf	indf2,w,c
  7075  0003DA  0100               	movlb	0	; () banked
  7076  0003DC  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7077  0003DE  0100               	movlb	0	; () banked
  7078  0003E0  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7079  0003E2  0D01               	mullw	1
  7080  0003E4  50F3               	movf	prodl,w,c
  7081  0003E6  0100               	movlb	0	; () banked
  7082  0003E8  25E1               	addwf	_ic_ptr& (0+255),w,b
  7083  0003EA  6ED9               	movwf	fsr2l,c
  7084  0003EC  50F4               	movf	prodh,w,c
  7085  0003EE  0100               	movlb	0	; () banked
  7086  0003F0  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7087  0003F2  6EDA               	movwf	fsr2h,c
  7088  0003F4  0100               	movlb	0	; () banked
  7089  0003F6  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7093  0003FA  0100               	movlb	0	; () banked
  7094  0003FC  EE20 F00A          	lfsr	2,10
  7095  000400  0100               	movlb	0	; () banked
  7096  000402  51E1               	movf	_ic_ptr& (0+255),w,b
  7097  000404  26D9               	addwf	fsr2l,f,c
  7098  000406  0100               	movlb	0	; () banked
  7099  000408  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7100  00040A  22DA               	addwfc	fsr2h,f,c
  7101  00040C  2ADF               	incf	indf2,f,c
  7102                           
  7103                           ;my_i2c.c: 213: } else {
  7104  00040E  D038               	goto	i2l267
  7105  000410                     i2l295:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7109  000410  A4C7               	btfss	4039,2,c	;volatile
  7110  000412  D6C7               	goto	i2l3102
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7114  000414  0100               	movlb	0	; () banked
  7115  000416  EE20 F00C          	lfsr	2,12
  7116  00041A  0100               	movlb	0	; () banked
  7117  00041C  51E1               	movf	_ic_ptr& (0+255),w,b
  7118  00041E  26D9               	addwf	fsr2l,f,c
  7119  000420  0100               	movlb	0	; () banked
  7120  000422  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7121  000424  22DA               	addwfc	fsr2h,f,c
  7122  000426  0E08               	movlw	8
  7123  000428  6EDF               	movwf	indf2,c
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;my_i2c.c: 216: msg_ready = 1;
  7127  00042A  0E01               	movlw	1
  7128  00042C  0100               	movlb	0	; () banked
  7129  00042E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7130  000430                     L5:
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;my_i2c.c: 217: msg_to_send = 1;
  7134  000430  0E01               	movlw	1
  7135  000432  0100               	movlb	0	; () banked
  7136  000434  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;my_i2c.c: 219: data_read = 0;
  7140  000436  0E00               	movlw	0
  7141  000438  0100               	movlb	0	; () banked
  7142  00043A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7143                           
  7144                           ;my_i2c.c: 220: } else {
  7145  00043C  D021               	goto	i2l267
  7146  00043E                     L8:
  7147                           
  7148                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7149  00043E  0100               	movlb	0	; () banked
  7150  000440  EE20 F00C          	lfsr	2,12
  7151  000444  0100               	movlb	0	; () banked
  7152  000446  51E1               	movf	_ic_ptr& (0+255),w,b
  7153  000448  26D9               	addwf	fsr2l,f,c
  7154  00044A  0100               	movlb	0	; () banked
  7155  00044C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7156  00044E  22DA               	addwfc	fsr2h,f,c
  7157  000450  0E05               	movlw	5
  7158  000452  D74B               	goto	L6
  7159  000454                     i2l3172:
  7160                           
  7161                           ; BSR set to: 0
  7162  000454  0100               	movlb	0	; () banked
  7163  000456  EE20 F00C          	lfsr	2,12
  7164  00045A  0100               	movlb	0	; () banked
  7165  00045C  51E1               	movf	_ic_ptr& (0+255),w,b
  7166  00045E  26D9               	addwf	fsr2l,f,c
  7167  000460  0100               	movlb	0	; () banked
  7168  000462  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7169  000464  22DA               	addwfc	fsr2h,f,c
  7170  000466  50DF               	movf	indf2,w,c
  7171                           
  7172                           ; Switch size 1, requested type "space"
  7173                           ; Number of cases is 4, Range of values is 5 to 8
  7174                           ; switch strategies available:
  7175                           ; Name         Instructions Cycles
  7176                           ; simple_byte           13     7 (average)
  7177                           ;	Chosen strategy is simple_byte
  7178  000468  0A05               	xorlw	5	; case 5
  7179  00046A  B4D8               	btfsc	status,2,c
  7180  00046C  D66B               	goto	i2l269
  7181  00046E  0A03               	xorlw	3	; case 6
  7182  000470  B4D8               	btfsc	status,2,c
  7183  000472  D681               	goto	i2l273
  7184  000474  0A01               	xorlw	1	; case 7
  7185  000476  B4D8               	btfsc	status,2,c
  7186  000478  D73A               	goto	i2l287
  7187  00047A  0A0F               	xorlw	15	; case 8
  7188  00047C  B4D8               	btfsc	status,2,c
  7189  00047E  D6F0               	goto	i2l3122
  7190  000480                     i2l267:
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;my_i2c.c: 230: }
  7194                           ;my_i2c.c: 233: if (data_read || data_written) {
  7195  000480  0100               	movlb	0	; () banked
  7196  000482  67C4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7197  000484  D004               	goto	i2l301
  7198                           
  7199                           ; BSR set to: 0
  7200  000486  0100               	movlb	0	; () banked
  7201  000488  51BF               	movf	i2c_int_handler@data_written& (0+255),w,b
  7202  00048A  B4D8               	btfsc	status,2,c
  7203  00048C  D002               	goto	i2l3178
  7204  00048E                     i2l301:
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7208  00048E  A8C6               	btfss	4038,4,c	;volatile
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7212  000490  88C6               	bsf	4038,4,c	;volatile
  7213  000492                     i2l3178:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;my_i2c.c: 237: }
  7217                           ;my_i2c.c: 238: }
  7218                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7219  000492  0100               	movlb	0	; () banked
  7220  000494  EE20 F00A          	lfsr	2,10
  7221  000498  0100               	movlb	0	; () banked
  7222  00049A  51E1               	movf	_ic_ptr& (0+255),w,b
  7223  00049C  26D9               	addwf	fsr2l,f,c
  7224  00049E  0100               	movlb	0	; () banked
  7225  0004A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7226  0004A2  22DA               	addwfc	fsr2h,f,c
  7227  0004A4  0E08               	movlw	8
  7228  0004A6  64DF               	cpfsgt	indf2,c
  7229  0004A8  D023               	goto	i2l3184
  7230                           
  7231                           ; BSR set to: 0
  7232  0004AA  0100               	movlb	0	; () banked
  7233  0004AC  67C3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7234  0004AE  D020               	goto	i2l3184
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7238  0004B0  0100               	movlb	0	; () banked
  7239  0004B2  EE20 F00C          	lfsr	2,12
  7240  0004B6  0100               	movlb	0	; () banked
  7241  0004B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7242  0004BA  26D9               	addwf	fsr2l,f,c
  7243  0004BC  0100               	movlb	0	; () banked
  7244  0004BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  0004C0  22DA               	addwfc	fsr2h,f,c
  7246  0004C2  0E05               	movlw	5
  7247  0004C4  6EDF               	movwf	indf2,c
  7248                           
  7249                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7250  0004C6  0100               	movlb	0	; () banked
  7251  0004C8  EE20 F00E          	lfsr	2,14
  7252  0004CC  0100               	movlb	0	; () banked
  7253  0004CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7254  0004D0  26D9               	addwf	fsr2l,f,c
  7255  0004D2  0100               	movlb	0	; () banked
  7256  0004D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7257  0004D6  22DA               	addwfc	fsr2h,f,c
  7258  0004D8  2ADF               	incf	indf2,f,c
  7259                           
  7260                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7261  0004DA  0100               	movlb	0	; () banked
  7262  0004DC  EE20 F00D          	lfsr	2,13
  7263  0004E0  0100               	movlb	0	; () banked
  7264  0004E2  51E1               	movf	_ic_ptr& (0+255),w,b
  7265  0004E4  26D9               	addwf	fsr2l,f,c
  7266  0004E6  0100               	movlb	0	; () banked
  7267  0004E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7268  0004EA  22DA               	addwfc	fsr2h,f,c
  7269  0004EC  0E07               	movlw	7
  7270  0004EE  6EDF               	movwf	indf2,c
  7271  0004F0                     i2l3184:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 245: }
  7275                           ;my_i2c.c: 247: if (msg_ready) {
  7276  0004F0  0100               	movlb	0	; () banked
  7277  0004F2  51C3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7278  0004F4  B4D8               	btfsc	status,2,c
  7279  0004F6  D03E               	goto	i2l3192
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7283  0004F8  0100               	movlb	0	; () banked
  7284  0004FA  EE20 F00B          	lfsr	2,11
  7285  0004FE  0100               	movlb	0	; () banked
  7286  000500  51E1               	movf	_ic_ptr& (0+255),w,b
  7287  000502  26D9               	addwf	fsr2l,f,c
  7288  000504  0100               	movlb	0	; () banked
  7289  000506  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7290  000508  22DA               	addwfc	fsr2h,f,c
  7291  00050A  0100               	movlb	0	; () banked
  7292  00050C  EE10 F00A          	lfsr	1,10
  7293  000510  0100               	movlb	0	; () banked
  7294  000512  51E1               	movf	_ic_ptr& (0+255),w,b
  7295  000514  26E1               	addwf	fsr1l,f,c
  7296  000516  0100               	movlb	0	; () banked
  7297  000518  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7298  00051A  22E2               	addwfc	fsr1h,f,c
  7299  00051C  50E7               	movf	indf1,w,c
  7300  00051E  0100               	movlb	0	; () banked
  7301  000520  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7302  000522  0100               	movlb	0	; () banked
  7303  000524  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7304  000526  0D01               	mullw	1
  7305  000528  50F3               	movf	prodl,w,c
  7306  00052A  0100               	movlb	0	; () banked
  7307  00052C  25E1               	addwf	_ic_ptr& (0+255),w,b
  7308  00052E  6EE1               	movwf	fsr1l,c
  7309  000530  50F4               	movf	prodh,w,c
  7310  000532  0100               	movlb	0	; () banked
  7311  000534  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7312  000536  6EE2               	movwf	fsr1h,c
  7313  000538  CFDF FFE7          	movff	indf2,indf1
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7317  00053C  0E28               	movlw	40
  7318  00053E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7319  000540  0100               	movlb	0	; () banked
  7320  000542  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7321  000546  0100               	movlb	0	; () banked
  7322  000548  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7323  00054C  0100               	movlb	0	; () banked
  7324  00054E  EE20 F00A          	lfsr	2,10
  7325  000552  0100               	movlb	0	; () banked
  7326  000554  51E1               	movf	_ic_ptr& (0+255),w,b
  7327  000556  26D9               	addwf	fsr2l,f,c
  7328  000558  0100               	movlb	0	; () banked
  7329  00055A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7330  00055C  22DA               	addwfc	fsr2h,f,c
  7331  00055E  50DF               	movf	indf2,w,c
  7332  000560  0100               	movlb	0	; () banked
  7333  000562  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7334  000564  0100               	movlb	0	; () banked
  7335  000566  29BB               	incf	??_i2c_int_handler& (0+255),w,b
  7336  000568  EC55  F00C         	call	_ToMainHigh_sendmsg
  7337                           
  7338                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7339  00056C  0100               	movlb	0	; () banked
  7340  00056E  EE20 F00A          	lfsr	2,10
  7341  000572  D03E               	goto	L7
  7342  000574                     i2l3192:
  7343                           
  7344                           ; BSR set to: 0
  7345  000574  0100               	movlb	0	; () banked
  7346  000576  EE20 F00E          	lfsr	2,14
  7347  00057A  0100               	movlb	0	; () banked
  7348  00057C  51E1               	movf	_ic_ptr& (0+255),w,b
  7349  00057E  26D9               	addwf	fsr2l,f,c
  7350  000580  0100               	movlb	0	; () banked
  7351  000582  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  000584  22DA               	addwfc	fsr2h,f,c
  7353  000586  50DF               	movf	indf2,w,c
  7354  000588  B4D8               	btfsc	status,2,c
  7355  00058A  D03A               	goto	i2l3200
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7359  00058C  0100               	movlb	0	; () banked
  7360  00058E  EE20 F00E          	lfsr	2,14
  7361  000592  0100               	movlb	0	; () banked
  7362  000594  51E1               	movf	_ic_ptr& (0+255),w,b
  7363  000596  26D9               	addwf	fsr2l,f,c
  7364  000598  0100               	movlb	0	; () banked
  7365  00059A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7366  00059C  22DA               	addwfc	fsr2h,f,c
  7367  00059E  50DF               	movf	indf2,w,c
  7368  0005A0  0100               	movlb	0	; () banked
  7369  0005A2  6FBC               	movwf	i2c_int_handler@error_buf& (0+255),b
  7370                           
  7371                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7372  0005A4  0100               	movlb	0	; () banked
  7373  0005A6  EE20 F00D          	lfsr	2,13
  7374  0005AA  0100               	movlb	0	; () banked
  7375  0005AC  51E1               	movf	_ic_ptr& (0+255),w,b
  7376  0005AE  26D9               	addwf	fsr2l,f,c
  7377  0005B0  0100               	movlb	0	; () banked
  7378  0005B2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7379  0005B4  22DA               	addwfc	fsr2h,f,c
  7380  0005B6  50DF               	movf	indf2,w,c
  7381  0005B8  0100               	movlb	0	; () banked
  7382  0005BA  6FBD               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7383                           
  7384                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7385  0005BC  0100               	movlb	0	; () banked
  7386  0005BE  EE20 F00B          	lfsr	2,11
  7387  0005C2  0100               	movlb	0	; () banked
  7388  0005C4  51E1               	movf	_ic_ptr& (0+255),w,b
  7389  0005C6  26D9               	addwf	fsr2l,f,c
  7390  0005C8  0100               	movlb	0	; () banked
  7391  0005CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  0005CC  22DA               	addwfc	fsr2h,f,c
  7393  0005CE  50DF               	movf	indf2,w,c
  7394  0005D0  0100               	movlb	0	; () banked
  7395  0005D2  6FBE               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7399  0005D4  0E29               	movlw	41
  7400  0005D6  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7401  0005D8  0100               	movlb	0	; () banked
  7402  0005DA  0E00               	movlw	high i2c_int_handler@error_buf
  7403  0005DC  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7404  0005DE  0100               	movlb	0	; () banked
  7405  0005E0  0EBC               	movlw	low i2c_int_handler@error_buf
  7406  0005E2  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7407  0005E4  0E03               	movlw	3
  7408  0005E6  EC55  F00C         	call	_ToMainHigh_sendmsg
  7409                           
  7410                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7411  0005EA  0100               	movlb	0	; () banked
  7412  0005EC  EE20 F00E          	lfsr	2,14
  7413  0005F0                     L7:
  7414  0005F0  0100               	movlb	0	; () banked
  7415  0005F2  51E1               	movf	_ic_ptr& (0+255),w,b
  7416  0005F4  26D9               	addwf	fsr2l,f,c
  7417  0005F6  0100               	movlb	0	; () banked
  7418  0005F8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7419  0005FA  22DA               	addwfc	fsr2h,f,c
  7420  0005FC  0E00               	movlw	0
  7421  0005FE  6EDF               	movwf	indf2,c
  7422  000600                     i2l3200:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;my_i2c.c: 257: }
  7426                           ;my_i2c.c: 258: if (msg_to_send) {
  7427  000600  0100               	movlb	0	; () banked
  7428  000602  51C2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7429  000604  B4D8               	btfsc	status,2,c
  7430  000606  0012               	return	
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7434  000608  0E2A               	movlw	42
  7435  00060A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7436  00060C  0100               	movlb	0	; () banked
  7437  00060E  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7438  000612  0100               	movlb	0	; () banked
  7439  000614  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7440  000618  0E00               	movlw	0
  7441  00061A  EC55  F00C         	call	_ToMainHigh_sendmsg
  7442                           
  7443                           ;my_i2c.c: 261: msg_to_send = 0;
  7444  00061E  0E00               	movlw	0
  7445  000620  0100               	movlb	0	; () banked
  7446  000622  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7447  000624  0012               	return	
  7448  000626                     __end_of_i2c_int_handler:
  7449                           	opt stack 0
  7450                           pclatu	equ	0xFFB
  7451                           pclath	equ	0xFFA
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           intcon	equ	0xFF2
  7459                           postinc0	equ	0xFEE
  7460                           fsr0h	equ	0xFEA
  7461                           fsr0l	equ	0xFE9
  7462                           wreg	equ	0xFE8
  7463                           indf1	equ	0xFE7
  7464                           fsr1h	equ	0xFE2
  7465                           fsr1l	equ	0xFE1
  7466                           bsr	equ	0xFE0
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           postdec2	equ	0xFDD
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function _handle_start *****************
  7475 ;; Defined at:
  7476 ;;		line 71 in file "src/my_i2c.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  data_read       1    wreg     unsigned char 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  data_read       1   51[COMRAM] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7490 ;;      Params:         0       0       0       0       0
  7491 ;;      Locals:         1       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0
  7493 ;;      Totals:         1       0       0       0       0
  7494 ;;Total ram usage:        1 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_i2c_int_handler
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text47
  7504  000D74                     __ptext47:
  7505                           	opt stack 0
  7506  000D74                     _handle_start:
  7507                           	opt stack 19
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;incstack = 0
  7511                           ;handle_start@data_read stored from wreg
  7512  000D74  6E34               	movwf	handle_start@data_read,c
  7513                           
  7514                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7515  000D76  0100               	movlb	0	; () banked
  7516  000D78  EE20 F00B          	lfsr	2,11
  7517  000D7C  0100               	movlb	0	; () banked
  7518  000D7E  51E1               	movf	_ic_ptr& (0+255),w,b
  7519  000D80  26D9               	addwf	fsr2l,f,c
  7520  000D82  0100               	movlb	0	; () banked
  7521  000D84  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7522  000D86  22DA               	addwfc	fsr2h,f,c
  7523  000D88  0E01               	movlw	1
  7524  000D8A  6EDF               	movwf	indf2,c
  7525                           
  7526                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7527  000D8C  0100               	movlb	0	; () banked
  7528  000D8E  EE20 F00A          	lfsr	2,10
  7529  000D92  0100               	movlb	0	; () banked
  7530  000D94  51E1               	movf	_ic_ptr& (0+255),w,b
  7531  000D96  26D9               	addwf	fsr2l,f,c
  7532  000D98  0100               	movlb	0	; () banked
  7533  000D9A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7534  000D9C  22DA               	addwfc	fsr2h,f,c
  7535  000D9E  0E00               	movlw	0
  7536  000DA0  6EDF               	movwf	indf2,c
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;my_i2c.c: 75: if (data_read) {
  7540  000DA2  5034               	movf	handle_start@data_read,w,c
  7541  000DA4  B4D8               	btfsc	status,2,c
  7542  000DA6  D03D               	goto	i2l2320
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7546  000DA8  AAC7               	btfss	4039,5,c	;volatile
  7547  000DAA  D021               	goto	i2l257
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7551  000DAC  0100               	movlb	0	; () banked
  7552  000DAE  EE20 F00C          	lfsr	2,12
  7553  000DB2  0100               	movlb	0	; () banked
  7554  000DB4  51E1               	movf	_ic_ptr& (0+255),w,b
  7555  000DB6  26D9               	addwf	fsr2l,f,c
  7556  000DB8  0100               	movlb	0	; () banked
  7557  000DBA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  000DBC  22DA               	addwfc	fsr2h,f,c
  7559  000DBE  0E05               	movlw	5
  7560  000DC0  6EDF               	movwf	indf2,c
  7561                           
  7562                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7563  000DC2  0100               	movlb	0	; () banked
  7564  000DC4  EE20 F00E          	lfsr	2,14
  7565  000DC8  0100               	movlb	0	; () banked
  7566  000DCA  51E1               	movf	_ic_ptr& (0+255),w,b
  7567  000DCC  26D9               	addwf	fsr2l,f,c
  7568  000DCE  0100               	movlb	0	; () banked
  7569  000DD0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7570  000DD2  22DA               	addwfc	fsr2h,f,c
  7571  000DD4  2ADF               	incf	indf2,f,c
  7572                           
  7573                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7574  000DD6  0100               	movlb	0	; () banked
  7575  000DD8  EE20 F00D          	lfsr	2,13
  7576  000DDC  0100               	movlb	0	; () banked
  7577  000DDE  51E1               	movf	_ic_ptr& (0+255),w,b
  7578  000DE0  26D9               	addwf	fsr2l,f,c
  7579  000DE2  0100               	movlb	0	; () banked
  7580  000DE4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7581  000DE6  22DA               	addwfc	fsr2h,f,c
  7582  000DE8  0E05               	movlw	5
  7583  000DEA  6EDF               	movwf	indf2,c
  7584                           
  7585                           ;my_i2c.c: 82: } else {
  7586  000DEC  0012               	return	
  7587  000DEE                     i2l257:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7591  000DEE  A4C7               	btfss	4039,2,c	;volatile
  7592  000DF0  D00C               	goto	i2l2318
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7596  000DF2  0100               	movlb	0	; () banked
  7597  000DF4  EE20 F00C          	lfsr	2,12
  7598  000DF8  0100               	movlb	0	; () banked
  7599  000DFA  51E1               	movf	_ic_ptr& (0+255),w,b
  7600  000DFC  26D9               	addwf	fsr2l,f,c
  7601  000DFE  0100               	movlb	0	; () banked
  7602  000E00  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7603  000E02  22DA               	addwfc	fsr2h,f,c
  7604  000E04  0E08               	movlw	8
  7605  000E06  6EDF               	movwf	indf2,c
  7606                           
  7607                           ;my_i2c.c: 85: } else {
  7608  000E08  0012               	return	
  7609  000E0A                     i2l2318:
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7613  000E0A  0100               	movlb	0	; () banked
  7614  000E0C  EE20 F00C          	lfsr	2,12
  7615  000E10  0100               	movlb	0	; () banked
  7616  000E12  51E1               	movf	_ic_ptr& (0+255),w,b
  7617  000E14  26D9               	addwf	fsr2l,f,c
  7618  000E16  0100               	movlb	0	; () banked
  7619  000E18  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7620  000E1A  22DA               	addwfc	fsr2h,f,c
  7621  000E1C  0E07               	movlw	7
  7622  000E1E  6EDF               	movwf	indf2,c
  7623  000E20  0012               	return	
  7624  000E22                     i2l2320:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7628  000E22  0100               	movlb	0	; () banked
  7629  000E24  EE20 F00C          	lfsr	2,12
  7630  000E28  0100               	movlb	0	; () banked
  7631  000E2A  51E1               	movf	_ic_ptr& (0+255),w,b
  7632  000E2C  26D9               	addwf	fsr2l,f,c
  7633  000E2E  0100               	movlb	0	; () banked
  7634  000E30  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  000E32  22DA               	addwfc	fsr2h,f,c
  7636  000E34  0E06               	movlw	6
  7637  000E36  6EDF               	movwf	indf2,c
  7638  000E38  0012               	return	
  7639  000E3A                     __end_of_handle_start:
  7640                           	opt stack 0
  7641                           pclatu	equ	0xFFB
  7642                           pclath	equ	0xFFA
  7643                           tblptru	equ	0xFF8
  7644                           tblptrh	equ	0xFF7
  7645                           tblptrl	equ	0xFF6
  7646                           tablat	equ	0xFF5
  7647                           prodh	equ	0xFF4
  7648                           prodl	equ	0xFF3
  7649                           intcon	equ	0xFF2
  7650                           postinc0	equ	0xFEE
  7651                           fsr0h	equ	0xFEA
  7652                           fsr0l	equ	0xFE9
  7653                           wreg	equ	0xFE8
  7654                           indf1	equ	0xFE7
  7655                           fsr1h	equ	0xFE2
  7656                           fsr1l	equ	0xFE1
  7657                           bsr	equ	0xFE0
  7658                           indf2	equ	0xFDF
  7659                           postinc2	equ	0xFDE
  7660                           postdec2	equ	0xFDD
  7661                           fsr2h	equ	0xFDA
  7662                           fsr2l	equ	0xFD9
  7663                           status	equ	0xFD8
  7664                           
  7665 ;; *************** function _ToMainHigh_sendmsg *****************
  7666 ;; Defined at:
  7667 ;;		line 126 in file "src/messages.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  length          1    wreg     unsigned char 
  7670 ;;  msgtype         1   68[COMRAM] unsigned char 
  7671 ;;  data            2   69[COMRAM] PTR void 
  7672 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  length          1   71[COMRAM] unsigned char 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      char 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7684 ;;      Params:         3       0       0       0       0
  7685 ;;      Locals:         1       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0
  7687 ;;      Totals:         4       0       0       0       0
  7688 ;;Total ram usage:        4 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    2
  7691 ;; This function calls:
  7692 ;;		i2_send_msg
  7693 ;; This function is called by:
  7694 ;;		_i2c_int_handler
  7695 ;;		_timer0_int_handler
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text48
  7700  0018AA                     __ptext48:
  7701                           	opt stack 0
  7702  0018AA                     _ToMainHigh_sendmsg:
  7703                           	opt stack 17
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;incstack = 0
  7707                           ;ToMainHigh_sendmsg@length stored from wreg
  7708  0018AA  6E48               	movwf	ToMainHigh_sendmsg@length,c
  7709                           
  7710                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7711                           ;	Return value of _ToMainHigh_sendmsg is never used
  7712  0018AC  0101               	movlb	1	; () banked
  7713  0018AE  0E01               	movlw	high _ToMainHigh_MQ
  7714  0018B0  6E3F               	movwf	i2send_msg@qptr+1,c
  7715  0018B2  0101               	movlb	1	; () banked
  7716  0018B4  0E6C               	movlw	low _ToMainHigh_MQ
  7717  0018B6  6E3E               	movwf	i2send_msg@qptr,c
  7718  0018B8  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7719  0018BC  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7720  0018C0  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7721  0018C4  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7722  0018C8  EC1D  F007         	call	i2_send_msg	;wreg free
  7723  0018CC  0012               	return	
  7724  0018CE                     __end_of_ToMainHigh_sendmsg:
  7725                           	opt stack 0
  7726                           pclatu	equ	0xFFB
  7727                           pclath	equ	0xFFA
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           postinc0	equ	0xFEE
  7736                           fsr0h	equ	0xFEA
  7737                           fsr0l	equ	0xFE9
  7738                           wreg	equ	0xFE8
  7739                           indf1	equ	0xFE7
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           bsr	equ	0xFE0
  7743                           indf2	equ	0xFDF
  7744                           postinc2	equ	0xFDE
  7745                           postdec2	equ	0xFDD
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function i2_send_msg *****************
  7751 ;; Defined at:
  7752 ;;		line 24 in file "src/messages.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  7755 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7756 ;;  length          1   63[COMRAM] unsigned char 
  7757 ;;  msgtype         1   64[COMRAM] unsigned char 
  7758 ;;  data            2   65[COMRAM] PTR void 
  7759 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  7760 ;;		 -> main@ic(28), main@uc(5), 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  7763 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7764 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7765 ;;  send_msg        2    0[BANK0 ] unsigned int 
  7766 ;;  send_msg        1    2[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      char 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7776 ;;      Params:         6       0       0       0       0
  7777 ;;      Locals:         0       5       0       0       0
  7778 ;;      Temps:          1       0       0       0       0
  7779 ;;      Totals:         7       5       0       0       0
  7780 ;;Total ram usage:       12 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    1
  7783 ;; This function calls:
  7784 ;;		i2_memcpy
  7785 ;; This function is called by:
  7786 ;;		_ToMainHigh_sendmsg
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text49
  7791  000E3A                     __ptext49:
  7792                           	opt stack 0
  7793  000E3A                     i2_send_msg:
  7794                           	opt stack 17
  7795                           
  7796                           ;messages.c: 25: unsigned char slot;
  7797                           ;messages.c: 27: msg *qmsg;
  7798                           ;messages.c: 28: size_t tlength = length;
  7799                           
  7800                           ;incstack = 0
  7801  000E3A  0100               	movlb	0	; () banked
  7802  000E3C  C040  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  7803  000E40  0100               	movlb	0	; () banked
  7804  000E42  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7808  000E44  EE20 F034          	lfsr	2,52
  7809  000E48  503E               	movf	i2send_msg@qptr,w,c
  7810  000E4A  26D9               	addwf	fsr2l,f,c
  7811  000E4C  503F               	movf	i2send_msg@qptr+1,w,c
  7812  000E4E  22DA               	addwfc	fsr2h,f,c
  7813  000E50  50DF               	movf	indf2,w,c
  7814  000E52  0100               	movlb	0	; () banked
  7815  000E54  6FB8               	movwf	i2send_msg@slot& (0+255),b
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7819  000E56  0100               	movlb	0	; () banked
  7820  000E58  51B8               	movf	i2send_msg@slot& (0+255),w,b
  7821  000E5A  0D0D               	mullw	13
  7822  000E5C  50F3               	movf	prodl,w,c
  7823  000E5E  243E               	addwf	i2send_msg@qptr,w,c
  7824  000E60  0100               	movlb	0	; () banked
  7825  000E62  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  7826  000E64  50F4               	movf	prodh,w,c
  7827  000E66  203F               	addwfc	i2send_msg@qptr+1,w,c
  7828  000E68  0100               	movlb	0	; () banked
  7829  000E6A  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;messages.c: 41: if (qmsg->full != 0) {
  7833  000E6C  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7834  000E70  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7835  000E74  50DF               	movf	indf2,w,c
  7836  000E76  B4D8               	btfsc	status,2,c
  7837  000E78  D002               	goto	i2l2976
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;messages.c: 42: return (-1);
  7841  000E7A  0EFF               	movlw	255
  7842  000E7C  0012               	return	
  7843  000E7E                     i2l2976:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;messages.c: 43: }
  7847                           ;messages.c: 46: qmsg->length = length;
  7848  000E7E  0100               	movlb	0	; () banked
  7849  000E80  EE20 F001          	lfsr	2,1
  7850  000E84  0100               	movlb	0	; () banked
  7851  000E86  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  7852  000E88  26D9               	addwf	fsr2l,f,c
  7853  000E8A  0100               	movlb	0	; () banked
  7854  000E8C  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7855  000E8E  22DA               	addwfc	fsr2h,f,c
  7856  000E90  C040  FFDF         	movff	i2send_msg@length,indf2
  7857                           
  7858                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7859  000E94  0100               	movlb	0	; () banked
  7860  000E96  EE20 F002          	lfsr	2,2
  7861  000E9A  0100               	movlb	0	; () banked
  7862  000E9C  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  7863  000E9E  26D9               	addwf	fsr2l,f,c
  7864  000EA0  0100               	movlb	0	; () banked
  7865  000EA2  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7866  000EA4  22DA               	addwfc	fsr2h,f,c
  7867  000EA6  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7871  000EAA  0E03               	movlw	3
  7872  000EAC  0100               	movlb	0	; () banked
  7873  000EAE  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  7874  000EB0  6E34               	movwf	i2memcpy@d1,c
  7875  000EB2  0E00               	movlw	0
  7876  000EB4  0100               	movlb	0	; () banked
  7877  000EB6  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7878  000EB8  6E35               	movwf	i2memcpy@d1+1,c
  7879  000EBA  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7880  000EBE  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  7881  000EC2  C0B6  F038         	movff	i2send_msg@tlength,i2memcpy@n
  7882  000EC6  C0B7  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7883  000ECA  ECB9  F00A         	call	i2_memcpy	;wreg free
  7884                           
  7885                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7886  000ECE  EE20 F034          	lfsr	2,52
  7887  000ED2  503E               	movf	i2send_msg@qptr,w,c
  7888  000ED4  26D9               	addwf	fsr2l,f,c
  7889  000ED6  503F               	movf	i2send_msg@qptr+1,w,c
  7890  000ED8  22DA               	addwfc	fsr2h,f,c
  7891  000EDA  EE10 F034          	lfsr	1,52
  7892  000EDE  503E               	movf	i2send_msg@qptr,w,c
  7893  000EE0  26E1               	addwf	fsr1l,f,c
  7894  000EE2  503F               	movf	i2send_msg@qptr+1,w,c
  7895  000EE4  22E2               	addwfc	fsr1h,f,c
  7896  000EE6  50E7               	movf	indf1,w,c
  7897  000EE8  6E44               	movwf	??i2_send_msg& (0+255),c
  7898  000EEA  2844               	incf	??i2_send_msg,w,c
  7899  000EEC  0B03               	andlw	3
  7900  000EEE  6EDF               	movwf	indf2,c
  7901                           
  7902                           ;messages.c: 59: qmsg->full = 1;
  7903  000EF0  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7904  000EF4  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7905  000EF8  0E01               	movlw	1
  7906  000EFA  6EDF               	movwf	indf2,c
  7907                           
  7908                           ;messages.c: 60: return (1);
  7909  000EFC  0E01               	movlw	1
  7910  000EFE  0012               	return	
  7911  000F00                     __end_ofi2_send_msg:
  7912                           	opt stack 0
  7913                           pclatu	equ	0xFFB
  7914                           pclath	equ	0xFFA
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           intcon	equ	0xFF2
  7922                           postinc0	equ	0xFEE
  7923                           fsr0h	equ	0xFEA
  7924                           fsr0l	equ	0xFE9
  7925                           wreg	equ	0xFE8
  7926                           indf1	equ	0xFE7
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           bsr	equ	0xFE0
  7930                           indf2	equ	0xFDF
  7931                           postinc2	equ	0xFDE
  7932                           postdec2	equ	0xFDD
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function i2_memcpy *****************
  7938 ;; Defined at:
  7939 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  d1              2   51[COMRAM] PTR void 
  7942 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7943 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7944 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  7945 ;;  s1              2   53[COMRAM] PTR const void 
  7946 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7947 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7948 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7949 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  7950 ;;		 -> main@ic(28), main@uc(5), 
  7951 ;;  n               2   55[COMRAM] unsigned int 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  7954 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7955 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7956 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7957 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  7958 ;;		 -> main@ic(28), main@uc(5), 
  7959 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  7960 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7961 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7962 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  2   51[COMRAM] PTR void 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7972 ;;      Params:         6       0       0       0       0
  7973 ;;      Locals:         4       0       0       0       0
  7974 ;;      Temps:          0       0       0       0       0
  7975 ;;      Totals:        10       0       0       0       0
  7976 ;;Total ram usage:       10 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; This function calls:
  7979 ;;		Nothing
  7980 ;; This function is called by:
  7981 ;;		i2_send_msg
  7982 ;;		i2_recv_msg
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text50
  7987  001572                     __ptext50:
  7988                           	opt stack 0
  7989  001572                     i2_memcpy:
  7990                           	opt stack 17
  7991                           
  7992                           ;incstack = 0
  7993  001572  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7994  001576  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  7995  00157A  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7996  00157E  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  7997  001582  D00E               	goto	i2l2938
  7998  001584                     i2l2932:
  7999  001584  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8000  001588  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8001  00158C  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8002  001590  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8003  001594  CFDF FFE7          	movff	indf2,indf1
  8004  001598  4A3C               	infsnz	i2memcpy@s,f,c
  8005  00159A  2A3D               	incf	i2memcpy@s+1,f,c
  8006  00159C  4A3A               	infsnz	i2memcpy@d,f,c
  8007  00159E  2A3B               	incf	i2memcpy@d+1,f,c
  8008  0015A0                     i2l2938:
  8009  0015A0  0638               	decf	i2memcpy@n,f,c
  8010  0015A2  A0D8               	btfss	status,0,c
  8011  0015A4  0639               	decf	i2memcpy@n+1,f,c
  8012  0015A6  2838               	incf	i2memcpy@n& (0+255),w,c
  8013  0015A8  B4D8               	btfsc	status,2,c
  8014  0015AA  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8015  0015AC  B4D8               	btfsc	status,2,c
  8016                           
  8017                           ;	Return value of i2_memcpy is never used
  8018  0015AE  0012               	return	
  8019  0015B0  D7E9               	goto	i2l2932
  8020  0015B2                     __end_ofi2_memcpy:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           postinc0	equ	0xFEE
  8032                           fsr0h	equ	0xFEA
  8033                           fsr0l	equ	0xFE9
  8034                           wreg	equ	0xFE8
  8035                           indf1	equ	0xFE7
  8036                           fsr1h	equ	0xFE2
  8037                           fsr1l	equ	0xFE1
  8038                           bsr	equ	0xFE0
  8039                           indf2	equ	0xFDF
  8040                           postinc2	equ	0xFDE
  8041                           postdec2	equ	0xFDD
  8042                           fsr2h	equ	0xFDA
  8043                           fsr2l	equ	0xFD9
  8044                           status	equ	0xFD8
  8045                           
  8046 ;; *************** function _SleepIfOkay *****************
  8047 ;; Defined at:
  8048 ;;		line 226 in file "src/messages.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;		None
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;		None               void
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8062 ;;      Params:         0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0
  8065 ;;      Totals:         0       0       0       0       0
  8066 ;;Total ram usage:        0 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    2
  8069 ;; This function calls:
  8070 ;;		_enter_sleep_mode
  8071 ;;		i2_check_msg
  8072 ;;		i2_in_high_int
  8073 ;;		i2_in_low_int
  8074 ;; This function is called by:
  8075 ;;		_InterruptHandlerHigh
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text51
  8080  0014E4                     __ptext51:
  8081                           	opt stack 0
  8082  0014E4                     _SleepIfOkay:
  8083                           	opt stack 18
  8084                           
  8085                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8086                           
  8087                           ;incstack = 0
  8088  0014E4  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8089  0014E6  D001               	goto	i2l2536
  8090  0014E8  0012               	return	
  8091  0014EA                     i2l2536:
  8092                           
  8093                           ;messages.c: 230: }
  8094                           ;messages.c: 233: if (in_low_int()) {
  8095  0014EA  ECC9  F00B         	call	i2_in_low_int	;wreg free
  8096  0014EE  5037               	movf	?i2_in_low_int+1,w,c
  8097  0014F0  1036               	iorwf	?i2_in_low_int,w,c
  8098  0014F2  A4D8               	btfss	status,2,c
  8099  0014F4  0012               	return	
  8100                           
  8101                           ;messages.c: 235: }
  8102                           ;messages.c: 238: if (!in_high_int()) {
  8103                           
  8104                           ;messages.c: 234: return;
  8105  0014F6  ECD4  F00C         	call	i2_in_high_int	;wreg free
  8106  0014FA  5035               	movf	?i2_in_high_int+1,w,c
  8107  0014FC  1034               	iorwf	?i2_in_high_int,w,c
  8108  0014FE  B4D8               	btfsc	status,2,c
  8109  001500  0012               	return	
  8110                           
  8111                           ;messages.c: 240: }
  8112                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8113                           
  8114                           ;messages.c: 239: return;
  8115  001502  0101               	movlb	1	; () banked
  8116  001504  0E01               	movlw	high _ToMainHigh_MQ
  8117  001506  6E35               	movwf	i2check_msg@qptr+1,c
  8118  001508  0101               	movlb	1	; () banked
  8119  00150A  0E6C               	movlw	low _ToMainHigh_MQ
  8120  00150C  6E34               	movwf	i2check_msg@qptr,c
  8121  00150E  EC67  F00C         	call	i2_check_msg	;wreg free
  8122  001512  0900               	iorlw	0
  8123  001514  A4D8               	btfss	status,2,c
  8124  001516  0012               	return	
  8125                           
  8126                           ;messages.c: 247: }
  8127                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8128                           
  8129                           ;messages.c: 246: return;
  8130  001518  0100               	movlb	0	; () banked
  8131  00151A  0E00               	movlw	high _ToMainLow_MQ
  8132  00151C  6E35               	movwf	i2check_msg@qptr+1,c
  8133  00151E  0100               	movlb	0	; () banked
  8134  001520  0E80               	movlw	low _ToMainLow_MQ
  8135  001522  6E34               	movwf	i2check_msg@qptr,c
  8136  001524  EC67  F00C         	call	i2_check_msg	;wreg free
  8137  001528  0900               	iorlw	0
  8138  00152A  B4D8               	btfsc	status,2,c
  8139                           
  8140                           ;messages.c: 250: }
  8141                           ;messages.c: 251: enter_sleep_mode();
  8142                           
  8143                           ;messages.c: 249: return;
  8144  00152C  ECDE  F00C         	call	_enter_sleep_mode	;wreg free
  8145  001530  0012               	return	
  8146  001532                     __end_of_SleepIfOkay:
  8147                           	opt stack 0
  8148                           pclatu	equ	0xFFB
  8149                           pclath	equ	0xFFA
  8150                           tblptru	equ	0xFF8
  8151                           tblptrh	equ	0xFF7
  8152                           tblptrl	equ	0xFF6
  8153                           tablat	equ	0xFF5
  8154                           prodh	equ	0xFF4
  8155                           prodl	equ	0xFF3
  8156                           intcon	equ	0xFF2
  8157                           postinc0	equ	0xFEE
  8158                           fsr0h	equ	0xFEA
  8159                           fsr0l	equ	0xFE9
  8160                           wreg	equ	0xFE8
  8161                           indf1	equ	0xFE7
  8162                           fsr1h	equ	0xFE2
  8163                           fsr1l	equ	0xFE1
  8164                           bsr	equ	0xFE0
  8165                           indf2	equ	0xFDF
  8166                           postinc2	equ	0xFDE
  8167                           postdec2	equ	0xFDD
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function i2_in_low_int *****************
  8173 ;; Defined at:
  8174 ;;		line 30 in file "src/interrupts.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  2   53[COMRAM] int 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8188 ;;      Params:         2       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0
  8191 ;;      Totals:         2       0       0       0       0
  8192 ;;Total ram usage:        2 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    1
  8195 ;; This function calls:
  8196 ;;		i2_in_high_int
  8197 ;; This function is called by:
  8198 ;;		_SleepIfOkay
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text52
  8203  001792                     __ptext52:
  8204                           	opt stack 0
  8205  001792                     i2_in_low_int:
  8206                           	opt stack 18
  8207                           
  8208                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8209                           
  8210                           ;incstack = 0
  8211  001792  ACF2               	btfss	intcon,6,c	;volatile
  8212  001794  D005               	goto	i2l2364
  8213                           
  8214                           ;interrupts.c: 32: return (0);
  8215  001796  0E00               	movlw	0
  8216  001798  6E37               	movwf	?i2_in_low_int+1,c
  8217  00179A  0E00               	movlw	0
  8218  00179C  6E36               	movwf	?i2_in_low_int,c
  8219  00179E  0012               	return	
  8220  0017A0                     i2l2364:
  8221  0017A0  ECD4  F00C         	call	i2_in_high_int	;wreg free
  8222  0017A4  5035               	movf	?i2_in_high_int+1,w,c
  8223  0017A6  1034               	iorwf	?i2_in_high_int,w,c
  8224  0017A8  B4D8               	btfsc	status,2,c
  8225  0017AA  D005               	goto	i2l2372
  8226                           
  8227                           ;interrupts.c: 34: return (0);
  8228  0017AC  0E00               	movlw	0
  8229  0017AE  6E37               	movwf	?i2_in_low_int+1,c
  8230  0017B0  0E00               	movlw	0
  8231  0017B2  6E36               	movwf	?i2_in_low_int,c
  8232  0017B4  0012               	return	
  8233  0017B6                     i2l2372:
  8234                           
  8235                           ;interrupts.c: 36: return (1);
  8236  0017B6  0E00               	movlw	0
  8237  0017B8  6E37               	movwf	?i2_in_low_int+1,c
  8238  0017BA  0E01               	movlw	1
  8239  0017BC  6E36               	movwf	?i2_in_low_int,c
  8240  0017BE  0012               	return	
  8241  0017C0                     __end_ofi2_in_low_int:
  8242                           	opt stack 0
  8243                           pclatu	equ	0xFFB
  8244                           pclath	equ	0xFFA
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           prodh	equ	0xFF4
  8250                           prodl	equ	0xFF3
  8251                           intcon	equ	0xFF2
  8252                           postinc0	equ	0xFEE
  8253                           fsr0h	equ	0xFEA
  8254                           fsr0l	equ	0xFE9
  8255                           wreg	equ	0xFE8
  8256                           indf1	equ	0xFE7
  8257                           fsr1h	equ	0xFE2
  8258                           fsr1l	equ	0xFE1
  8259                           bsr	equ	0xFE0
  8260                           indf2	equ	0xFDF
  8261                           postinc2	equ	0xFDE
  8262                           postdec2	equ	0xFDD
  8263                           fsr2h	equ	0xFDA
  8264                           fsr2l	equ	0xFD9
  8265                           status	equ	0xFD8
  8266                           
  8267 ;; *************** function i2_in_high_int *****************
  8268 ;; Defined at:
  8269 ;;		line 22 in file "src/interrupts.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  2   51[COMRAM] int 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8283 ;;      Params:         2       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0
  8286 ;;      Totals:         2       0       0       0       0
  8287 ;;Total ram usage:        2 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_SleepIfOkay
  8293 ;;		i2_in_low_int
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text53
  8298  0019A8                     __ptext53:
  8299                           	opt stack 0
  8300  0019A8                     i2_in_high_int:
  8301                           	opt stack 18
  8302                           
  8303                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8304                           
  8305                           ;incstack = 0
  8306  0019A8  0E00               	movlw	0
  8307  0019AA  AEF2               	btfss	intcon,7,c	;volatile
  8308  0019AC  0E01               	movlw	1
  8309  0019AE  6E34               	movwf	?i2_in_high_int,c
  8310  0019B0  6A35               	clrf	?i2_in_high_int+1,c
  8311  0019B2  0012               	return	
  8312  0019B4                     __end_ofi2_in_high_int:
  8313                           	opt stack 0
  8314                           pclatu	equ	0xFFB
  8315                           pclath	equ	0xFFA
  8316                           tblptru	equ	0xFF8
  8317                           tblptrh	equ	0xFF7
  8318                           tblptrl	equ	0xFF6
  8319                           tablat	equ	0xFF5
  8320                           prodh	equ	0xFF4
  8321                           prodl	equ	0xFF3
  8322                           intcon	equ	0xFF2
  8323                           postinc0	equ	0xFEE
  8324                           fsr0h	equ	0xFEA
  8325                           fsr0l	equ	0xFE9
  8326                           wreg	equ	0xFE8
  8327                           indf1	equ	0xFE7
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           bsr	equ	0xFE0
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function i2_check_msg *****************
  8339 ;; Defined at:
  8340 ;;		line 220 in file "src/messages.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8343 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      unsigned char 
  8348 ;; Registers used:
  8349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8355 ;;      Params:         2       0       0       0       0
  8356 ;;      Locals:         0       0       0       0       0
  8357 ;;      Temps:          1       0       0       0       0
  8358 ;;      Totals:         3       0       0       0       0
  8359 ;;Total ram usage:        3 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_SleepIfOkay
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text54
  8369  0018CE                     __ptext54:
  8370                           	opt stack 0
  8371  0018CE                     i2_check_msg:
  8372                           	opt stack 19
  8373                           
  8374                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8375                           
  8376                           ;incstack = 0
  8377  0018CE  EE20 F035          	lfsr	2,53
  8378  0018D2  5034               	movf	i2check_msg@qptr,w,c
  8379  0018D4  26D9               	addwf	fsr2l,f,c
  8380  0018D6  5035               	movf	i2check_msg@qptr+1,w,c
  8381  0018D8  22DA               	addwfc	fsr2h,f,c
  8382  0018DA  50DF               	movf	indf2,w,c
  8383  0018DC  6E36               	movwf	??i2_check_msg& (0+255),c
  8384  0018DE  5036               	movf	??i2_check_msg,w,c
  8385  0018E0  0D0D               	mullw	13
  8386  0018E2  50F3               	movf	prodl,w,c
  8387  0018E4  2434               	addwf	i2check_msg@qptr,w,c
  8388  0018E6  6ED9               	movwf	fsr2l,c
  8389  0018E8  50F4               	movf	prodh,w,c
  8390  0018EA  2035               	addwfc	i2check_msg@qptr+1,w,c
  8391  0018EC  6EDA               	movwf	fsr2h,c
  8392  0018EE  50DF               	movf	indf2,w,c
  8393  0018F0  0012               	return	
  8394  0018F2                     __end_ofi2_check_msg:
  8395                           	opt stack 0
  8396                           pclatu	equ	0xFFB
  8397                           pclath	equ	0xFFA
  8398                           tblptru	equ	0xFF8
  8399                           tblptrh	equ	0xFF7
  8400                           tblptrl	equ	0xFF6
  8401                           tablat	equ	0xFF5
  8402                           prodh	equ	0xFF4
  8403                           prodl	equ	0xFF3
  8404                           intcon	equ	0xFF2
  8405                           postinc0	equ	0xFEE
  8406                           fsr0h	equ	0xFEA
  8407                           fsr0l	equ	0xFE9
  8408                           wreg	equ	0xFE8
  8409                           indf1	equ	0xFE7
  8410                           fsr1h	equ	0xFE2
  8411                           fsr1l	equ	0xFE1
  8412                           bsr	equ	0xFE0
  8413                           indf2	equ	0xFDF
  8414                           postinc2	equ	0xFDE
  8415                           postdec2	equ	0xFDD
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420 ;; *************** function _enter_sleep_mode *****************
  8421 ;; Defined at:
  8422 ;;		line 202 in file "src/messages.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;		None               void
  8429 ;; Registers used:
  8430 ;;		None
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8436 ;;      Params:         0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0
  8438 ;;      Temps:          0       0       0       0       0
  8439 ;;      Totals:         0       0       0       0       0
  8440 ;;Total ram usage:        0 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_SleepIfOkay
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text55
  8450  0019BC                     __ptext55:
  8451                           	opt stack 0
  8452  0019BC                     _enter_sleep_mode:
  8453                           	opt stack 19
  8454                           
  8455                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8456                           
  8457                           ;incstack = 0
  8458  0019BC  8ED3               	bsf	4051,7,c	;volatile
  8459  0019BE  0003               	sleep		;# 
  8460  0019C0  0012               	return	
  8461  0019C2                     __end_of_enter_sleep_mode:
  8462                           	opt stack 0
  8463  0000                     pclatu	equ	0xFFB
  8464                           pclath	equ	0xFFA
  8465                           tblptru	equ	0xFF8
  8466                           tblptrh	equ	0xFF7
  8467                           tblptrl	equ	0xFF6
  8468                           tablat	equ	0xFF5
  8469                           prodh	equ	0xFF4
  8470                           prodl	equ	0xFF3
  8471                           intcon	equ	0xFF2
  8472                           postinc0	equ	0xFEE
  8473                           fsr0h	equ	0xFEA
  8474                           fsr0l	equ	0xFE9
  8475                           wreg	equ	0xFE8
  8476                           indf1	equ	0xFE7
  8477                           fsr1h	equ	0xFE2
  8478                           fsr1l	equ	0xFE1
  8479                           bsr	equ	0xFE0
  8480                           indf2	equ	0xFDF
  8481                           postinc2	equ	0xFDE
  8482                           postdec2	equ	0xFDD
  8483                           fsr2h	equ	0xFDA
  8484                           fsr2l	equ	0xFD9
  8485                           status	equ	0xFD8
  8486                           pclatu	equ	0xFFB
  8487                           pclath	equ	0xFFA
  8488                           tblptru	equ	0xFF8
  8489                           tblptrh	equ	0xFF7
  8490                           tblptrl	equ	0xFF6
  8491                           tablat	equ	0xFF5
  8492                           prodh	equ	0xFF4
  8493                           prodl	equ	0xFF3
  8494                           intcon	equ	0xFF2
  8495                           postinc0	equ	0xFEE
  8496                           fsr0h	equ	0xFEA
  8497                           fsr0l	equ	0xFE9
  8498                           wreg	equ	0xFE8
  8499                           indf1	equ	0xFE7
  8500                           fsr1h	equ	0xFE2
  8501                           fsr1l	equ	0xFE1
  8502                           bsr	equ	0xFE0
  8503                           indf2	equ	0xFDF
  8504                           postinc2	equ	0xFDE
  8505                           postdec2	equ	0xFDD
  8506                           fsr2h	equ	0xFDA
  8507                           fsr2l	equ	0xFD9
  8508                           status	equ	0xFD8
  8509                           
  8510                           	psect	rparam
  8511  0000                     pclatu	equ	0xFFB
  8512                           pclath	equ	0xFFA
  8513                           tblptru	equ	0xFF8
  8514                           tblptrh	equ	0xFF7
  8515                           tblptrl	equ	0xFF6
  8516                           tablat	equ	0xFF5
  8517                           prodh	equ	0xFF4
  8518                           prodl	equ	0xFF3
  8519                           intcon	equ	0xFF2
  8520                           postinc0	equ	0xFEE
  8521                           fsr0h	equ	0xFEA
  8522                           fsr0l	equ	0xFE9
  8523                           wreg	equ	0xFE8
  8524                           indf1	equ	0xFE7
  8525                           fsr1h	equ	0xFE2
  8526                           fsr1l	equ	0xFE1
  8527                           bsr	equ	0xFE0
  8528                           indf2	equ	0xFDF
  8529                           postinc2	equ	0xFDE
  8530                           postdec2	equ	0xFDD
  8531                           fsr2h	equ	0xFDA
  8532                           fsr2l	equ	0xFD9
  8533                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     43      99
    BANK1           256     86     248
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_ToMainHigh_sendmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _timer1_lthread->___lwmod
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   11643
                                             23 BANK1     63    63      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3094
                                             12 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2309
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                             39 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     0      8     511
                                             34 BANK0      8     0      8
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     211
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             29 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                             39 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3849
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               5     5      0    1115
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1314
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1420
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1291
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5692
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    3287
                                              9 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1276
                                             70 COMRAM     1     1      0
                                              5 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             61 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2309
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1707
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     998
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     384
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     56      F8       6       96.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2B      63       4       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7      11        0.0%
DATA                 0      0     1A7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Feb 24 08:57:32 2015

               main@uthread_data 01C9         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1662  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 18AA  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0041  
              i2recv_msg@tlength 00B7             ?_FromMainLow_recvmsg 0019  
                            l109 0742                              l421 185A  
                            l422 185C                              l445 1746  
                            l447 175C                              l448 175E  
                            l493 1144                              l494 1146  
                            l495 1152                              l496 1154  
                            l489 112A                              l737 1932  
           ?_FromMainLow_sendmsg 00DE  __size_of_uart_trans_int_handler 0056  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D3  
               ??_init_uart_recv 00D5                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 0040                             l1043 1382  
                           l3032 08F6                             l2240 12A0  
                           l2074 15E2                             l2066 15C4  
                           l2228 161E                             l3048 09B4  
                           l2352 1374                             l2344 133E  
                           l3240 0F76                             l3312 06FE  
                           l3304 06C8                             l2346 134A  
                           l3314 0748                             l3322 0774  
                           l3330 07C0                             l2348 1350  
                           l3244 0F9A                             l3316 075C  
                           l3324 078A                             l3342 0878  
                           l3318 0766                             l2640 1748  
                           l3336 07F2                             l3328 07A4  
                           l3338 0836                             l2732 13C0  
                           l2726 13A0                             l2752 0A50  
                           l2666 112C                             l2658 111A  
                           l2922 14AE                             l2738 13E0  
                           l2748 09D4                             l2928 14CE  
                           l2952 0C00                             _LATB 000F8A  
                           u2437 1934                             i1l52 007A  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0CA2  
                           _main 0626                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 01DA  
                     i1_send_msg 0FC0                             pclat 000FFA  
                    i2_check_msg 18CE                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0034  
                           start 00C0                       i2_recv_msg 0ABC  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 0E3A  
      ToMainHigh_recvmsg@msgtype 01AE                   send_msg@length 01A4  
    __size_of_timer0_int_handler 0064                      _Delay1KTCYx 192E  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00E1  
                          ?_main 0001                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D3  
                          i1l340 1490                            i1l343 1468  
                __end_of___lwmod 138C                       i1memcpy@d1 0001  
                          i1l507 191E                            i2l301 048E  
                          i2l257 0DEE                            i2l273 0176  
                          i2l267 0480                            i2l269 0144  
                          i2l295 0410                            i2l287 02EE  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 00BB  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 162C       ToMainLow_recvmsg@maxlength 00DF  
        timer0_lthread@msgbuffer 00D9          i2c_configure_slave@addr 00D3  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 143E                 __end_ofi1_memcpy 1572  
               __end_ofi2_memcpy 15B2                  __initialization 1814  
     uart_trans_int_handler@data 001E                     __end_of_main 0896  
   uart_trans_int_handler@length 0022                       _ReadTimer1 1966  
    __size_of_timer1_int_handler 002C       __size_of_ToMainLow_recvmsg 0036  
     __size_of_ToMainLow_sendmsg 0024    __size_of_FromMainHigh_recvmsg 0030  
          __size_ofi2_in_low_int 002E                           ??_main 00E1  
                send_msg@msgtype 01A5                    __activetblptr 000002  
                send_msg@tlength 01A8       FromMainLow_sendmsg@msgtype 00DE  
           __end_of_handle_start 0E3A          ??_uart_recv_int_handler 001B  
                         i1l2040 1544                           i1l2046 1560  
                         i1l2118 0FF8                           i1l2166 0CE8  
                         i1l2182 0D70                           i1l2572 10E2  
                         i1l2812 0066                           i2l3000 0B10  
                         i1l2594 1482                           i1l2818 0070  
                         i2l3102 01A2                           i2l2320 0E22  
                         i2l3200 0600                           i2l3120 0220  
                         i2l3104 01CE                           i2l3016 0BAE  
                         i2l3122 0260                           i2l3114 0208  
                         i2l2318 0E0A                           i2l3150 03A6  
                         i2l3144 035C                       _OpenTimer0 183A  
                         i2l3146 039E                       _OpenTimer1 1730  
                         i2l2372 17B6                           i2l2364 17A0  
                         i2l3172 0454                           i2l3084 013C  
                         i2l3260 11C0                           i2l3078 012E  
                         i2l3254 11B6                   __CFG_WDTEN$OFF 000000  
                         i2l2536 14EA                           i2l3192 0574  
                         i2l3184 04F0                           i2l3178 0492  
                         i2l2932 1584                           i2l2938 15A0  
                         i2l2976 0E7E      __end_of_i2c_configure_slave 1814  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0ABC  
             timer0_lthread@tptr 00D3          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 003E                     i2_in_low_int 1792  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00C4  
               OpenTimer0@config 00D3                           _ic_ptr 00E1  
                      ??___lwmod 00D7                    main@msgbuffer 01B9  
               __end_of_init_i2c 1264                 OpenTimer1@config 00D3  
                         _memcpy 1494                           clear_0 181A  
                         clear_1 1826                           _uc_ptr 0049  
                         main@ic 01DC                           main@uc 01D5  
               __end_of_recv_msg 09B8      start_i2c_slave_reply@length 00D7  
                      ??_in_main 00D9                 __end_of_send_msg 0CA2  
          timer0_int_handler@val 00C3          i2c_int_handler@i2c_data 00C1  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 00D5  
       ToMainLow_recvmsg@msgtype 01AE             __size_of_in_high_int 0010  
        FromMainLow_sendmsg@data 00DF                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 19C2                       __accesstop 0080  
        __end_of__initialization 1830       __end_of_ToMainHigh_recvmsg 1698  
     __end_of_ToMainHigh_sendmsg 18CE               ?_init_uart_lthread 00D3  
    __end_of_init_timer1_lthread 1954              __end_of_SleepIfOkay 1532  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D5                      ?_ReadTimer1 0001  
             __size_of_check_msg 0032                __end_of_ReadUSART 192E  
      timer0_int_handler@msgtype 00C1              __size_ofi1_recv_msg 00D2  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 11F6      __end_of_InterruptHandlerLow 00C0  
                      ?i2_memcpy 0034                    _ToMainHigh_MQ 016C  
            __size_ofi2_recv_msg 00F6                 _enter_sleep_mode 19BC  
            __size_ofi2_send_msg 00C6             timer1_lthread@length 00DC  
                  ReadUSART@data 0001                __end_of_OpenUSART 1180  
                  check_msg@qptr 00D3        __end_of_init_uart_lthread 19C4  
        ??_block_on_To_msgqueues 00D9             __size_of_init_queues 0056  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0020                       __pnvCOMRAM 0049  
        __end_of_i2c_int_handler 0626                     ?i2_check_msg 0034  
             timer1_lthread@tptr 00D8                recv_msg@maxlength 01A4  
                recv_msg@msgtype 01A5                  recv_msg@tlength 01AA  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0036                          ?_memcpy 00D3  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0036  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 000E  
        __size_of_timer1_lthread 0034                       ??i1_memcpy 0007  
                     ??i2_memcpy 003A                 i1send_msg@length 000D  
                  i2_in_high_int 19A8                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001              __size_of_ReadTimer1 0012  
              __end_of_check_msg 1730                        ?_init_i2c 00D3  
                    _SleepIfOkay 14E4                        ?_recv_msg 01A2  
                     _in_low_int 15B2                     _handle_start 0D74  
                        __Hparam 0000                        ?_send_msg 01A2  
                        __Lparam 0000       __end_of_timer0_int_handler 132C  
    __end_of_FromMainLow_recvmsg 1886      __end_of_FromMainLow_sendmsg 16FE  
               init_uart_recv@uc 00D3                          ___lwmod 132C  
                __CFG_STVREN$OFF 000000                          __pcinit 1814  
                __size_of_memcpy 0050                       _init_queue 1264  
                        __ramtop 0400              __size_of_OpenTimer0 0026  
            __size_of_OpenTimer1 0032                          __ptext0 0626  
                        __ptext1 0F00                          __ptext2 16CC  
                        __ptext3 0BB2                          __ptext4 1698  
                        __ptext5 132C                          __ptext6 199A  
                        __ptext7 09B8                          __ptext8 18F2  
                        __ptext9 19C2                uart_lthread@index 01B7  
                      _T0CONbits 000FD5                          _in_main 15F0  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 198A  
            __end_of_WriteTimer1 1966                   ?i2_in_high_int 0034  
 __end_of_uart_trans_int_handler 1494       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1180     __end_of_FromMainHigh_recvmsg 1792  
           end_of_initialization 1830          timer1_lthread@msgbuffer 00DE  
 __size_of_uart_recv_int_handler 0094                          memcpy@d 00D9  
                        memcpy@n 00D7                          memcpy@s 00DB  
  __end_of_uart_recv_int_handler 10FE                       ??_init_i2c 00D5  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00BF  
                  __Lmediumconst 0000                          int_func 1180  
                   ??i1_send_msg 0011                    ?_uart_lthread 01AE  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 0045                       ??_recv_msg 00DD  
                   ??i2_send_msg 0044                       ??_send_msg 00DD  
     __end_of_timer1_int_handler 17EC                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
             __end_ofi1_recv_msg 0D74               __end_ofi1_send_msg 106A  
                      _TRISCbits 000F94               __end_ofi2_recv_msg 0BB2  
             __end_ofi2_send_msg 0F00    FromMainHigh_recvmsg@maxlength 0047  
       timer1_int_handler@result 001B                   ??_uart_lthread 00E1  
                      _TXSTAbits 000FAC                       main@length 01DB  
                    ?_in_low_int 00D5            timer0_lthread@msgtype 00D5  
          _start_i2c_slave_reply 09B8     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 19C2  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 1662  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 18AA  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 199A                      ?_init_queue 00D3  
                      i2memcpy@d 003A                      _WriteTimer0 1978  
                    _WriteTimer1 1954                        i2memcpy@n 0038  
                      i2memcpy@s 003C                   _timer1_lthread 1698  
                 __end_of_memcpy 14E4                _enable_interrupts 19B4  
           __size_of_Delay1KTCYx 0014              ?_ToMainHigh_recvmsg 01AE  
                ??i2_in_high_int 0036         i2c_int_handler@data_read 00C4  
            ?_ToMainHigh_sendmsg 0045               ?_enable_interrupts 0001  
            start_initialization 1814                    ??_in_high_int 00D5  
                      _ReadUSART 1910                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 01AD  
            ??_enable_interrupts 00D3                     ??_OpenTimer0 00D3  
                   ??_OpenTimer1 00D3   __size_of_block_on_To_msgqueues 005C  
             __end_of_ReadTimer1 1978    __end_of_block_on_To_msgqueues 13E8  
                      _OpenUSART 10FE     __end_of_InterruptHandlerHigh 11FE  
                     init_i2c@ic 00D3             ??_ToMainHigh_recvmsg 00DF  
           ??_ToMainHigh_sendmsg 0048           __end_of_timer0_lthread 19A8  
       i2c_int_handler@error_buf 00BC           __end_of_timer1_lthread 16CC  
      __end_of_enable_interrupts 19BC                         ??_memcpy 00D9  
          timer1_lthread@msgtype 00DA             _FromMainHigh_recvmsg 1762  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1860  
             __end_of_OpenTimer1 1762         i2c_int_handler@msg_ready 00C3  
                    __pbssCOMRAM 004B                       ?_ReadUSART 0001  
                  ??_init_queues 00D6                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 00D3              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00D3         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00A8              __end_of_in_high_int 199A  
                     ?_OpenUSART 00D3                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01B0                     _ToMainLow_MQ 0080  
            __size_of_init_queue 0064                   _init_uart_recv 18F2  
                      _check_msg 16FE                        __pnvBANK0 00E1  
         ?_start_i2c_slave_reply 00D3                __size_of_init_i2c 0066  
                   recv_msg@data 01A7                     recv_msg@qmsg 01AC  
                   recv_msg@slot 01A9                     recv_msg@qptr 01A2  
              __size_of_recv_msg 0122                        __pintcode 0008  
              __size_of_send_msg 00F0                  ?_timer0_lthread 00D3  
                       ?___lwmod 00D3            ?_FromMainHigh_recvmsg 00BB  
                ?_timer1_lthread 00D8                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B0             __end_of_uart_lthread 0FC0  
     i2c_int_handler@msg_to_send 00C2                         ?_in_main 00D7  
              WriteTimer0@timer0 0034               _timer0_int_handler 12C8  
              WriteTimer1@timer1 0001              uart_lthread@msgtype 01B0  
          ToMainLow_sendmsg@data 0018              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 01AE  
         __end_of_init_uart_recv 1910              __end_of_init_queues 143E  
                i2check_msg@qptr 0034                       ?_check_msg 00D3  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0036                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 0049                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0026  
   __size_of_FromMainLow_sendmsg 0032             timer0_lthread@length 00D7  
             _timer1_int_handler 17C0                         i1_memcpy 1532  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1572             timer0_lthread@msgval 00DB  
       FromMainHigh_recvmsg@data 00BD                      _in_high_int 198A  
                   send_msg@data 01A6              _i2c_configure_slave 17EC  
                   send_msg@qmsg 01AB                     send_msg@slot 01AA  
                   send_msg@qptr 01A2            uart_lthread@msgbuffer 01B4  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D3  
                    ??_OpenUSART 00D5                  OpenUSART@config 00D8  
                 ??i2_in_low_int 0038            _uart_recv_int_handler 106A  
                   ??_in_low_int 00D7                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0047  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 0562  
             ??_enter_sleep_mode 0034                 __size_of___lwmod 0060  
                   ??_init_queue 00D5                     ?_WriteTimer0 0034  
                   ?_WriteTimer1 0001          ToMainLow_sendmsg@length 001A  
              main@t0thread_data 01C4            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 0041  
    ToMainHigh_recvmsg@maxlength 00DF                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D3                      _init_queues 13E8  
             __end_of_in_low_int 15F0                         __ptext10 1942  
                       __ptext11 13E8                         __ptext20 16FE  
                       __ptext12 1264                         __ptext21 192E  
                       __ptext13 11FE                         __ptext30 143E  
                       __ptext22 162C                         __ptext14 17EC  
                       __ptext31 1860                         __ptext23 1662  
                       __ptext15 19B4                         __ptext40 1966  
                       __ptext32 0CA2                         __ptext24 0896  
                       __ptext16 138C                         __ptext33 106A  
                       __ptext25 1494                         __ptext17 15F0  
                       __ptext50 1572                         __ptext42 12C8  
                       __ptext34 1910                         __ptext26 10FE  
                       __ptext18 15B2                         __ptext51 14E4  
                       __ptext43 1978                         __ptext35 17C0  
                       __ptext27 1730                         __ptext19 198A  
                       __ptext52 1792                         __ptext44 1762  
                       __ptext36 1954                         __ptext28 183A  
                       __ptext53 19A8                         __ptext45 0ABC  
                       __ptext37 1886                         __ptext54 18CE  
                       __ptext46 00C4                         __ptext38 0FC0  
                       __ptext55 19BC                         __ptext47 0D74  
                       __ptext39 1532                         __ptext48 18AA  
                       __ptext49 0E3A                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01B2  
       timer0_int_handler@length 00BF               uart_lthread@status 01B6  
                       _init_i2c 11FE              _init_timer1_lthread 1942  
                  __size_of_main 0270                    ??i2_check_msg 0036  
              main@t1thread_data 01D3                      ??_check_msg 00D5  
             __end_of_init_queue 12C8             __size_of_SleepIfOkay 004E  
                       _recv_msg 0896            ??_i2c_configure_slave 00D3  
                       _send_msg 0BB2                   init_queue@qptr 00D3  
          __size_of_uart_lthread 00C0                   i2recv_msg@data 0043  
  uart_trans_int_handler@msgtype 0021                   i2recv_msg@qmsg 00B9  
                  ??_Delay1KTCYx 00D3                   i2recv_msg@slot 00B6  
                 i2recv_msg@qptr 003E                         main@baud 01C7  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00D3  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00D3  
                       memcpy@d1 00D3                         memcpy@s1 00D5  
          __end_ofi2_in_high_int 19B4     i2c_int_handler@overrun_error 00C0  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 00D5                 ___lwmod@dividend 00D3  
         ?_uart_recv_int_handler 0001                     _uart_lthread 0F00  
                 main@UARTConfig 01C8            _block_on_To_msgqueues 138C  
                  ?_handle_start 0001                 ??_timer0_lthread 00DB  
    __size_of_ToMainHigh_recvmsg 0036      __size_of_ToMainHigh_sendmsg 0024  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00E0  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0048              __end_ofi2_check_msg 18F2  
          ??_init_timer1_lthread 00D5           ??_InterruptHandlerHigh 00C5  
              _ToMainLow_recvmsg 162C                _ToMainLow_sendmsg 1886  
             main@last_reg_recvd 01C6                  ___lwmod@divisor 00D5  
           __end_ofi2_in_low_int 17C0               ?_ToMainLow_recvmsg 01AE  
            __end_of_Delay1KTCYx 1942                ??_i2c_int_handler 00BB  
                ___lwmod@counter 00D7               ?_ToMainLow_sendmsg 0017  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0042            ??_InterruptHandlerLow 0023  
            ??_ToMainLow_recvmsg 00DF                   i2send_msg@qmsg 00B9  
                 i2send_msg@slot 00B8                   i2send_msg@qptr 003E  
            ??_ToMainLow_sendmsg 001A              _FromMainLow_recvmsg 1860  
                 ??_handle_start 0034              _FromMainLow_sendmsg 16CC  
                   _USART_Status 004C  
