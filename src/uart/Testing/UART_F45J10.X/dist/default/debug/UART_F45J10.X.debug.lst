

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Feb 24 09:04:40 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     _INTCONbits	set	4082
    77  0000                     _IPR1bits	set	3999
    78  0000                     _LATB	set	3978
    79  0000                     _OSCCON	set	4051
    80  0000                     _OSCCONbits	set	4051
    81  0000                     _OSCTUNEbits	set	3995
    82  0000                     _PIE1bits	set	3997
    83  0000                     _PIR1bits	set	3998
    84  0000                     _RCONbits	set	4048
    85  0000                     _RCREG	set	4014
    86  0000                     _RCSTA	set	4011
    87  0000                     _RCSTAbits	set	4011
    88  0000                     _SPBRG	set	4015
    89  0000                     _SPBRGH	set	4016
    90  0000                     _SSPADD	set	4040
    91  0000                     _SSPBUF	set	4041
    92  0000                     _SSPCON1	set	4038
    93  0000                     _SSPCON1bits	set	4038
    94  0000                     _SSPCON2	set	4037
    95  0000                     _SSPCON2bits	set	4037
    96  0000                     _SSPSTAT	set	4039
    97  0000                     _SSPSTATbits	set	4039
    98  0000                     _T0CON	set	4053
    99  0000                     _T0CONbits	set	4053
   100  0000                     _T1CON	set	4045
   101  0000                     _T1CONbits	set	4045
   102  0000                     _TMR0H	set	4055
   103  0000                     _TMR0L	set	4054
   104  0000                     _TMR1H	set	4047
   105  0000                     _TMR1L	set	4046
   106  0000                     _TRISB	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _TXREG	set	4013
   109  0000                     _TXSTA	set	4012
   110  0000                     _TXSTAbits	set	4012
   111                           
   112                           	psect	nvCOMRAM
   113  000049                     __pnvCOMRAM:
   114                           	opt stack 0
   115  000049                     _uc_ptr:
   116                           	opt stack 0
   117  000049                     	ds	2
   118                           
   119                           	psect	nvBANK0
   120  0000E1                     __pnvBANK0:
   121                           	opt stack 0
   122  0000E1                     _ic_ptr:
   123                           	opt stack 0
   124  0000E1                     	ds	2
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  001988                     __pcinit:
   130                           	opt stack 0
   131  001988                     start_initialization:
   132                           	opt stack 0
   133  001988                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to BANK1 (162 bytes)
   137  001988  EE01  F000         	lfsr	0,__pbssBANK1
   138  00198C  0EA2               	movlw	162
   139  00198E                     clear_0:
   140  00198E  6AEE               	clrf	postinc0,c
   141  001990  06E8               	decf	wreg,f,c
   142  001992  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to BANK0 (54 bytes)
   145  001994  EE00  F080         	lfsr	0,__pbssBANK0
   146  001998  0E36               	movlw	54
   147  00199A                     clear_1:
   148  00199A  6AEE               	clrf	postinc0,c
   149  00199C  06E8               	decf	wreg,f,c
   150  00199E  E1FD               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to COMRAM (2 bytes)
   153  0019A0  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   154  0019A2  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   155  0019A4                     end_of_initialization:
   156                           	opt stack 0
   157  0019A4                     __end_of__initialization:
   158                           	opt stack 0
   159  0019A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  0019A6  6EF8               	movwf	tblptru,c
   161  0019A8  0100               	movlb	0
   162  0019AA  EF13  F003         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  00004B                     __pbssCOMRAM:
   169                           	opt stack 0
   170  00004B                     _MQ_Main_Willing_to_block:
   171                           	opt stack 0
   172  00004B                     	ds	1
   173  00004C                     _USART_Status:
   174                           	opt stack 0
   175  00004C                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssBANK0
   181  000080                     __pbssBANK0:
   182                           	opt stack 0
   183  000080                     _ToMainLow_MQ:
   184                           	opt stack 0
   185  000080                     	ds	54
   186                           tblptru	equ	0xFF8
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           
   190                           	psect	bssBANK1
   191  000100                     __pbssBANK1:
   192                           	opt stack 0
   193  000100                     _FromMainHigh_MQ:
   194                           	opt stack 0
   195  000100                     	ds	54
   196  000136                     _FromMainLow_MQ:
   197                           	opt stack 0
   198  000136                     	ds	54
   199  00016C                     _ToMainHigh_MQ:
   200                           	opt stack 0
   201  00016C                     	ds	54
   202                           tblptru	equ	0xFF8
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           
   206                           	psect	cstackBANK2
   207  000200                     __pcstackBANK2:
   208                           	opt stack 0
   209  000200                     main@msgbuffer:
   210                           	opt stack 0
   211                           
   212                           ; 11 bytes @ 0x0
   213  000200                     	ds	11
   214  00020B                     main@t0thread_data:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0xB
   218  00020B                     	ds	2
   219  00020D                     main@last_reg_recvd:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xD
   223  00020D                     	ds	1
   224  00020E                     main@baud:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xE
   228  00020E                     	ds	1
   229  00020F                     main@UARTConfig:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  00020F                     	ds	1
   234  000210                     main@uthread_data:
   235                           	opt stack 0
   236                           
   237                           ; 10 bytes @ 0x10
   238  000210                     	ds	10
   239  00021A                     main@uc:
   240                           	opt stack 0
   241                           
   242                           ; 5 bytes @ 0x1A
   243  00021A                     	ds	5
   244  00021F                     main@msgtype:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x1F
   248  00021F                     	ds	1
   249  000220                     main@t1thread_data:
   250                           	opt stack 0
   251                           
   252                           ; 13 bytes @ 0x20
   253  000220                     	ds	13
   254  00022D                     main@length:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x2D
   258  00022D                     	ds	1
   259  00022E                     main@ic:
   260                           	opt stack 0
   261                           
   262                           ; 28 bytes @ 0x2E
   263  00022E                     	ds	28
   264                           tblptru	equ	0xFF8
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	cstackBANK1
   269  0001A2                     __pcstackBANK1:
   270                           	opt stack 0
   271  0001A2                     send_msg@qptr:
   272                           	opt stack 0
   273  0001A2                     recv_msg@qptr:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  0001A2                     	ds	2
   278  0001A4                     send_msg@length:
   279                           	opt stack 0
   280  0001A4                     recv_msg@maxlength:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x2
   284  0001A4                     	ds	1
   285  0001A5                     send_msg@msgtype:
   286                           	opt stack 0
   287  0001A5                     recv_msg@msgtype:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x3
   291  0001A5                     	ds	1
   292  0001A6                     send_msg@data:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x4
   296  0001A6                     	ds	1
   297  0001A7                     recv_msg@data:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x5
   301  0001A7                     	ds	1
   302  0001A8                     send_msg@tlength:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x6
   306  0001A8                     	ds	1
   307  0001A9                     recv_msg@slot:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x7
   311  0001A9                     	ds	1
   312  0001AA                     send_msg@slot:
   313                           	opt stack 0
   314  0001AA                     recv_msg@tlength:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x8
   318  0001AA                     	ds	1
   319  0001AB                     send_msg@qmsg:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x9
   323  0001AB                     	ds	1
   324  0001AC                     recv_msg@qmsg:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0xA
   328  0001AC                     	ds	1
   329  0001AD                     ToMainLow_sendmsg@length:
   330                           	opt stack 0
   331  0001AD                     FromMainLow_sendmsg@length:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xB
   335  0001AD                     	ds	1
   336  0001AE                     ToMainLow_recvmsg@msgtype:
   337                           	opt stack 0
   338  0001AE                     ToMainHigh_recvmsg@msgtype:
   339                           	opt stack 0
   340  0001AE                     sendUART@data:
   341                           	opt stack 0
   342  0001AE                     uart_lthread@uptr:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0xC
   346  0001AE                     	ds	2
   347  0001B0                     sendUART@retval:
   348                           	opt stack 0
   349  0001B0                     ToMainLow_recvmsg@data:
   350                           	opt stack 0
   351  0001B0                     ToMainHigh_recvmsg@data:
   352                           	opt stack 0
   353  0001B0                     uart_lthread@msgtype:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0xE
   357  0001B0                     	ds	1
   358  0001B1                     sendUART@length:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0xF
   362  0001B1                     	ds	1
   363  0001B2                     timer1_lthread@tptr:
   364                           	opt stack 0
   365  0001B2                     uart_lthread@length:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x10
   369  0001B2                     	ds	2
   370  0001B4                     timer1_lthread@msgtype:
   371                           	opt stack 0
   372  0001B4                     uart_lthread@msgbuffer:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x12
   376  0001B4                     	ds	2
   377  0001B6                     uart_lthread@status:
   378                           	opt stack 0
   379  0001B6                     timer1_lthread@length:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x14
   383  0001B6                     	ds	1
   384  0001B7                     uart_lthread@index:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x15
   388  0001B7                     	ds	1
   389  0001B8                     timer1_lthread@msgbuffer:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x16
   393  0001B8                     	ds	2
   394                           tblptru	equ	0xFF8
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	cstackBANK0
   399  0000B6                     __pcstackBANK0:
   400                           	opt stack 0
   401  0000B6                     i2recv_msg@slot:
   402                           	opt stack 0
   403  0000B6                     i2send_msg@tlength:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x0
   407  0000B6                     	ds	1
   408  0000B7                     i2recv_msg@tlength:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1
   412  0000B7                     	ds	1
   413  0000B8                     i2send_msg@slot:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x2
   417  0000B8                     	ds	1
   418  0000B9                     i2send_msg@qmsg:
   419                           	opt stack 0
   420  0000B9                     i2recv_msg@qmsg:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x3
   424  0000B9                     	ds	2
   425  0000BB                     ??_i2c_int_handler:
   426  0000BB                     FromMainHigh_recvmsg@msgtype:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x5
   430  0000BB                     	ds	1
   431  0000BC                     i2c_int_handler@error_buf:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x6
   435  0000BC                     	ds	1
   436  0000BD                     FromMainHigh_recvmsg@data:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x7
   440  0000BD                     	ds	2
   441  0000BF                     i2c_int_handler@data_written:
   442                           	opt stack 0
   443  0000BF                     timer0_int_handler@length:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x9
   447  0000BF                     	ds	1
   448  0000C0                     i2c_int_handler@overrun_error:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xA
   452  0000C0                     	ds	1
   453  0000C1                     i2c_int_handler@i2c_data:
   454                           	opt stack 0
   455  0000C1                     timer0_int_handler@msgtype:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0xB
   459  0000C1                     	ds	1
   460  0000C2                     i2c_int_handler@msg_to_send:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0xC
   464  0000C2                     	ds	1
   465  0000C3                     i2c_int_handler@msg_ready:
   466                           	opt stack 0
   467  0000C3                     timer0_int_handler@val:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0xD
   471  0000C3                     	ds	1
   472  0000C4                     i2c_int_handler@data_read:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0xE
   476  0000C4                     	ds	1
   477  0000C5                     ??_InterruptHandlerHigh:
   478                           
   479                           ; 0 bytes @ 0xF
   480  0000C5                     	ds	14
   481  0000D3                     ?_in_high_int:
   482                           	opt stack 0
   483  0000D3                     ?___lwmod:
   484                           	opt stack 0
   485  0000D3                     i2c_configure_slave@addr:
   486                           	opt stack 0
   487  0000D3                     OpenTimer0@config:
   488                           	opt stack 0
   489  0000D3                     OpenTimer1@config:
   490                           	opt stack 0
   491  0000D3                     Delay1KTCYx@unit:
   492                           	opt stack 0
   493  0000D3                     init_queue@qptr:
   494                           	opt stack 0
   495  0000D3                     check_msg@qptr:
   496                           	opt stack 0
   497  0000D3                     start_i2c_slave_reply@msg:
   498                           	opt stack 0
   499  0000D3                     init_i2c@ic:
   500                           	opt stack 0
   501  0000D3                     init_uart_recv@uc:
   502                           	opt stack 0
   503  0000D3                     timer0_lthread@tptr:
   504                           	opt stack 0
   505  0000D3                     init_timer1_lthread@tptr:
   506                           	opt stack 0
   507  0000D3                     init_uart_lthread@uptr:
   508                           	opt stack 0
   509  0000D3                     OpenUSART@spbrg:
   510                           	opt stack 0
   511  0000D3                     ___lwmod@dividend:
   512                           	opt stack 0
   513  0000D3                     memcpy@d1:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x1D
   517  0000D3                     	ds	2
   518  0000D5                     ??_OpenUSART:
   519  0000D5                     ??_start_i2c_slave_reply:
   520  0000D5                     ??_check_msg:
   521  0000D5                     ?_in_low_int:
   522                           	opt stack 0
   523  0000D5                     init_queue@i:
   524                           	opt stack 0
   525  0000D5                     timer0_lthread@msgtype:
   526                           	opt stack 0
   527  0000D5                     ___lwmod@divisor:
   528                           	opt stack 0
   529  0000D5                     memcpy@s1:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x1F
   533  0000D5                     	ds	1
   534  0000D6                     
   535                           ; 0 bytes @ 0x20
   536  0000D6                     	ds	1
   537  0000D7                     ?_in_main:
   538                           	opt stack 0
   539  0000D7                     start_i2c_slave_reply@length:
   540                           	opt stack 0
   541  0000D7                     ___lwmod@counter:
   542                           	opt stack 0
   543  0000D7                     timer0_lthread@length:
   544                           	opt stack 0
   545  0000D7                     memcpy@n:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x21
   549  0000D7                     	ds	1
   550  0000D8                     OpenUSART@config:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x22
   554  0000D8                     	ds	1
   555  0000D9                     timer0_lthread@msgbuffer:
   556                           	opt stack 0
   557  0000D9                     memcpy@d:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x23
   561  0000D9                     	ds	2
   562  0000DB                     timer0_lthread@msgval:
   563                           	opt stack 0
   564  0000DB                     memcpy@s:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x25
   568  0000DB                     	ds	2
   569  0000DD                     ??_send_msg:
   570  0000DD                     ??_recv_msg:
   571                           
   572                           ; 0 bytes @ 0x27
   573  0000DD                     	ds	1
   574  0000DE                     ToMainLow_sendmsg@msgtype:
   575                           	opt stack 0
   576  0000DE                     FromMainLow_sendmsg@msgtype:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x28
   580  0000DE                     	ds	1
   581  0000DF                     ToMainLow_recvmsg@maxlength:
   582                           	opt stack 0
   583  0000DF                     ToMainHigh_recvmsg@maxlength:
   584                           	opt stack 0
   585  0000DF                     ToMainLow_sendmsg@data:
   586                           	opt stack 0
   587  0000DF                     FromMainLow_sendmsg@data:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x29
   591  0000DF                     	ds	2
   592  0000E1                     tblptru	equ	0xFF8
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           
   596                           ; 0 bytes @ 0x2B
   597                           
   598                           	psect	cstackCOMRAM
   599  000001                     __pcstackCOMRAM:
   600                           	opt stack 0
   601  000001                     ?_ReadTimer1:
   602                           	opt stack 0
   603  000001                     ReadUSART@data:
   604                           	opt stack 0
   605  000001                     WriteTimer1@timer1:
   606                           	opt stack 0
   607  000001                     i1memcpy@d1:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611  000001                     	ds	2
   612  000003                     ReadTimer1@timer:
   613                           	opt stack 0
   614  000003                     WriteTimer1@timer:
   615                           	opt stack 0
   616  000003                     i1memcpy@s1:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x2
   620  000003                     	ds	2
   621  000005                     i1memcpy@n:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x4
   625  000005                     	ds	2
   626  000007                     i1memcpy@d:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x6
   630  000007                     	ds	2
   631  000009                     i1memcpy@s:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x8
   635  000009                     	ds	2
   636  00000B                     i1send_msg@qptr:
   637                           	opt stack 0
   638  00000B                     i1recv_msg@qptr:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xA
   642  00000B                     	ds	2
   643  00000D                     i1send_msg@length:
   644                           	opt stack 0
   645  00000D                     i1recv_msg@maxlength:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0xC
   649  00000D                     	ds	1
   650  00000E                     i1send_msg@msgtype:
   651                           	opt stack 0
   652  00000E                     i1recv_msg@msgtype:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xD
   656  00000E                     	ds	1
   657  00000F                     i1send_msg@data:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0xE
   661  00000F                     	ds	1
   662  000010                     i1recv_msg@data:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xF
   666  000010                     	ds	1
   667  000011                     ??i1_send_msg:
   668                           
   669                           ; 0 bytes @ 0x10
   670  000011                     	ds	1
   671  000012                     ??i1_recv_msg:
   672  000012                     i1send_msg@tlength:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x11
   676  000012                     	ds	2
   677  000014                     i1send_msg@slot:
   678                           	opt stack 0
   679  000014                     i1recv_msg@slot:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x13
   683  000014                     	ds	1
   684  000015                     i1send_msg@qmsg:
   685                           	opt stack 0
   686  000015                     i1recv_msg@tlength:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x14
   690  000015                     	ds	2
   691  000017                     i1ToMainLow_sendmsg@msgtype:
   692                           	opt stack 0
   693  000017                     i1recv_msg@qmsg:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x16
   697  000017                     	ds	1
   698  000018                     i1ToMainLow_sendmsg@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x17
   702  000018                     	ds	1
   703  000019                     FromMainLow_recvmsg@msgtype:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x18
   707  000019                     	ds	1
   708  00001A                     i1ToMainLow_sendmsg@length:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x19
   712  00001A                     	ds	1
   713  00001B                     ??_uart_recv_int_handler:
   714  00001B                     FromMainLow_recvmsg@data:
   715                           	opt stack 0
   716  00001B                     timer1_int_handler@result:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x1A
   720  00001B                     	ds	2
   721  00001D                     FromMainLow_recvmsg@maxlength:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x1C
   725  00001D                     	ds	1
   726  00001E                     uart_trans_int_handler@data:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x1D
   730  00001E                     	ds	2
   731  000020                     uart_trans_int_handler@curIndex:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x1F
   735  000020                     	ds	1
   736  000021                     uart_trans_int_handler@msgtype:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x20
   740  000021                     	ds	1
   741  000022                     uart_trans_int_handler@length:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x21
   745  000022                     	ds	1
   746  000023                     ??_InterruptHandlerLow:
   747                           
   748                           ; 0 bytes @ 0x22
   749  000023                     	ds	17
   750  000034                     ?i2_in_high_int:
   751                           	opt stack 0
   752  000034                     handle_start@data_read:
   753                           	opt stack 0
   754  000034                     WriteTimer0@timer0:
   755                           	opt stack 0
   756  000034                     i2check_msg@qptr:
   757                           	opt stack 0
   758  000034                     i2memcpy@d1:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x33
   762  000034                     	ds	2
   763  000036                     ??i2_check_msg:
   764  000036                     ?i2_in_low_int:
   765                           	opt stack 0
   766  000036                     WriteTimer0@timer:
   767                           	opt stack 0
   768  000036                     i2memcpy@s1:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x35
   772  000036                     	ds	2
   773  000038                     i2memcpy@n:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x37
   777  000038                     	ds	2
   778  00003A                     i2memcpy@d:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x39
   782  00003A                     	ds	2
   783  00003C                     i2memcpy@s:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x3B
   787  00003C                     	ds	2
   788  00003E                     i2send_msg@qptr:
   789                           	opt stack 0
   790  00003E                     i2recv_msg@qptr:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x3D
   794  00003E                     	ds	2
   795  000040                     i2send_msg@length:
   796                           	opt stack 0
   797  000040                     i2recv_msg@maxlength:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x3F
   801  000040                     	ds	1
   802  000041                     i2send_msg@msgtype:
   803                           	opt stack 0
   804  000041                     i2recv_msg@msgtype:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x40
   808  000041                     	ds	1
   809  000042                     i2send_msg@data:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x41
   813  000042                     	ds	1
   814  000043                     i2recv_msg@data:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x42
   818  000043                     	ds	1
   819  000044                     ??i2_send_msg:
   820                           
   821                           ; 0 bytes @ 0x43
   822  000044                     	ds	1
   823  000045                     ??i2_recv_msg:
   824  000045                     ToMainHigh_sendmsg@msgtype:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x44
   828  000045                     	ds	1
   829  000046                     ToMainHigh_sendmsg@data:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x45
   833  000046                     	ds	1
   834  000047                     FromMainHigh_recvmsg@maxlength:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x46
   838  000047                     	ds	1
   839  000048                     ToMainHigh_sendmsg@length:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x47
   843  000048                     	ds	1
   844  000049                     tblptru	equ	0xFF8
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           
   848                           ; 0 bytes @ 0x48
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 139 in file "src/main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  ic             28   46[BANK2 ] struct __i2c_comm
   859 ;;  t1thread_dat   13   32[BANK2 ] struct __timer1_thread_s
   860 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   861 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   862 ;;  uc              5   26[BANK2 ] struct __uart_comm
   863 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   864 ;;  length          1   45[BANK2 ] char 
   865 ;;  msgtype         1   31[BANK2 ] unsigned char 
   866 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   867 ;;  baud            1   14[BANK2 ] unsigned char 
   868 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   869 ;;  i               1    0        unsigned char 
   870 ;;  c               1    0        unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0      74       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         0       0       0      74       0
   884 ;;Total ram usage:       74 bytes
   885 ;; Hardware stack levels required when called:   15
   886 ;; This function calls:
   887 ;;		_OpenTimer0
   888 ;;		_OpenTimer1
   889 ;;		_OpenUSART
   890 ;;		_ToMainHigh_recvmsg
   891 ;;		_ToMainLow_recvmsg
   892 ;;		_block_on_To_msgqueues
   893 ;;		_enable_interrupts
   894 ;;		_i2c_configure_slave
   895 ;;		_init_i2c
   896 ;;		_init_queues
   897 ;;		_init_timer1_lthread
   898 ;;		_init_uart_lthread
   899 ;;		_init_uart_recv
   900 ;;		_start_i2c_slave_reply
   901 ;;		_timer0_lthread
   902 ;;		_timer1_lthread
   903 ;;		_uart_lthread
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text0
   910  000626                     __ptext0:
   911                           	opt stack 0
   912  000626                     _main:
   913                           	opt stack 15
   914                           
   915                           ;main.c: 140: char c;
   916                           ;main.c: 141: signed char length;
   917                           ;main.c: 142: unsigned char msgtype;
   918                           ;main.c: 143: unsigned char last_reg_recvd;
   919                           ;main.c: 144: unsigned char baud, UARTConfig;
   920                           ;main.c: 145: uart_comm uc;
   921                           ;main.c: 146: i2c_comm ic;
   922                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   923                           ;main.c: 148: unsigned char i;
   924                           ;main.c: 149: uart_thread_struct uthread_data;
   925                           ;main.c: 150: timer1_thread_struct t1thread_data;
   926                           ;main.c: 151: timer0_thread_struct t0thread_data;
   927                           ;main.c: 159: OSCCON = 0x82;
   928                           
   929                           ;incstack = 0
   930  000626  0E82               	movlw	130
   931  000628  6ED3               	movwf	4051,c	;volatile
   932                           
   933                           ;main.c: 160: OSCTUNEbits.PLLEN = 0;
   934  00062A  9C9B               	bcf	3995,6,c	;volatile
   935                           
   936                           ;main.c: 173: init_uart_recv(&uc);
   937  00062C  0102               	movlb	2	; () banked
   938  00062E  0E02               	movlw	high main@uc
   939  000630  0100               	movlb	0	; () banked
   940  000632  6FD4               	movwf	(init_uart_recv@uc+1)& (0+255),b
   941  000634  0102               	movlb	2	; () banked
   942  000636  0E1A               	movlw	low main@uc
   943  000638  0100               	movlb	0	; () banked
   944  00063A  6FD3               	movwf	init_uart_recv@uc& (0+255),b
   945  00063C  EC33  F00D         	call	_init_uart_recv	;wreg free
   946                           
   947                           ;main.c: 176: init_i2c(&ic);
   948  000640  0102               	movlb	2	; () banked
   949  000642  0E02               	movlw	high main@ic
   950  000644  0100               	movlb	0	; () banked
   951  000646  6FD4               	movwf	(init_i2c@ic+1)& (0+255),b
   952  000648  0102               	movlb	2	; () banked
   953  00064A  0E2E               	movlw	low main@ic
   954  00064C  0100               	movlb	0	; () banked
   955  00064E  6FD3               	movwf	init_i2c@ic& (0+255),b
   956  000650  EC77  F009         	call	_init_i2c	;wreg free
   957                           
   958                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
   959  000654  0102               	movlb	2	; () banked
   960  000656  0E02               	movlw	high main@t1thread_data
   961  000658  0100               	movlb	0	; () banked
   962  00065A  6FD4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   963  00065C  0102               	movlb	2	; () banked
   964  00065E  0E20               	movlw	low main@t1thread_data
   965  000660  0100               	movlb	0	; () banked
   966  000662  6FD3               	movwf	init_timer1_lthread@tptr& (0+255),b
   967  000664  ECC2  F00A         	call	_init_timer1_lthread	;wreg free
   968                           
   969                           ;main.c: 182: init_uart_lthread(&uthread_data);
   970  000668  0102               	movlb	2	; () banked
   971  00066A  0E02               	movlw	high main@uthread_data
   972  00066C  0100               	movlb	0	; () banked
   973  00066E  6FD4               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   974  000670  0102               	movlb	2	; () banked
   975  000672  0E10               	movlw	low main@uthread_data
   976  000674  0100               	movlb	0	; () banked
   977  000676  6FD3               	movwf	init_uart_lthread@uptr& (0+255),b
   978  000678  EC92  F00D         	call	_init_uart_lthread	;wreg free
   979                           
   980                           ;main.c: 186: init_queues();
   981  00067C  EC6C  F00A         	call	_init_queues	;wreg free
   982                           
   983                           ;main.c: 189: TRISB = 0x0;
   984  000680  0E00               	movlw	0
   985  000682  6E93               	movwf	3987,c	;volatile
   986                           
   987                           ;main.c: 190: LATB = 0x0;
   988  000684  0E00               	movlw	0
   989  000686  6E8A               	movwf	3978,c	;volatile
   990                           
   991                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   992  000688  0E96               	movlw	150
   993  00068A  ECD7  F00C         	call	_OpenTimer0
   994                           
   995                           ;main.c: 198: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   996  00068E  0EF5               	movlw	245
   997  000690  EC52  F00C         	call	_OpenTimer1
   998                           
   999                           ;main.c: 207: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1000  000694  0EFC               	movlw	252
  1001  000696  0102               	movlb	2	; () banked
  1002  000698  6F0F               	movwf	main@UARTConfig& (0+255),b
  1003                           
  1004                           ; BSR set to: 2
  1005                           ;main.c: 208: baud = 77;
  1006  00069A  0E4D               	movlw	77
  1007  00069C  0102               	movlb	2	; () banked
  1008  00069E  6F0E               	movwf	main@baud& (0+255),b
  1009                           
  1010                           ; BSR set to: 2
  1011                           ;main.c: 209: OpenUSART(UARTConfig,baud);
  1012  0006A0  0102               	movlb	2	; () banked
  1013  0006A2  0100               	movlb	0	; () banked
  1014  0006A4  C20E  F0D3         	movff	main@baud,OpenUSART@spbrg
  1015  0006A8  0100               	movlb	0	; () banked
  1016  0006AA  6BD4               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1017  0006AC  0102               	movlb	2	; () banked
  1018  0006AE  510F               	movf	main@UARTConfig& (0+255),w,b
  1019  0006B0  ECF7  F008         	call	_OpenUSART
  1020                           
  1021                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1022  0006B4  909F               	bcf	3999,0,c	;volatile
  1023                           
  1024                           ;main.c: 217: IPR1bits.RCIP = 0;
  1025  0006B6  9A9F               	bcf	3999,5,c	;volatile
  1026                           
  1027                           ;main.c: 219: IPR1bits.TXIP = 0;
  1028  0006B8  989F               	bcf	3999,4,c	;volatile
  1029                           
  1030                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1031  0006BA  869F               	bsf	3999,3,c	;volatile
  1032                           
  1033                           ;main.c: 230: i2c_configure_slave(0x9E);
  1034  0006BC  0E9E               	movlw	158
  1035  0006BE  ECB0  F00C         	call	_i2c_configure_slave
  1036                           
  1037                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1038  0006C2  869D               	bsf	3997,3,c	;volatile
  1039                           
  1040                           ;main.c: 249: enable_interrupts();
  1041  0006C4  EC8B  F00D         	call	_enable_interrupts	;wreg free
  1042  0006C8                     l3790:
  1043                           
  1044                           ;main.c: 273: block_on_To_msgqueues();
  1045  0006C8  EC3E  F00A         	call	_block_on_To_msgqueues	;wreg free
  1046                           
  1047                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1048  0006CC  0102               	movlb	2	; () banked
  1049  0006CE  0E02               	movlw	high main@msgtype
  1050  0006D0  0101               	movlb	1	; () banked
  1051  0006D2  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1052  0006D4  0102               	movlb	2	; () banked
  1053  0006D6  0E1F               	movlw	low main@msgtype
  1054  0006D8  0101               	movlb	1	; () banked
  1055  0006DA  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1056  0006DC  0102               	movlb	2	; () banked
  1057  0006DE  0E02               	movlw	high main@msgbuffer
  1058  0006E0  0101               	movlb	1	; () banked
  1059  0006E2  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1060  0006E4  0102               	movlb	2	; () banked
  1061  0006E6  0E00               	movlw	low main@msgbuffer
  1062  0006E8  0101               	movlb	1	; () banked
  1063  0006EA  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1064  0006EC  0E0A               	movlw	10
  1065  0006EE  ECD3  F00B         	call	_ToMainHigh_recvmsg
  1066  0006F2  0102               	movlb	2	; () banked
  1067  0006F4  6F2D               	movwf	main@length& (0+255),b
  1068                           
  1069                           ; BSR set to: 2
  1070                           ;main.c: 281: if (length < 0) {
  1071  0006F6  0102               	movlb	2	; () banked
  1072  0006F8  BF2D               	btfsc	main@length& (0+255),7,b
  1073  0006FA  D062               	goto	l3816
  1074  0006FC  D053               	goto	l3814
  1075  0006FE                     l3798:
  1076                           
  1077                           ; BSR set to: 2
  1078                           ;main.c: 289: {
  1079                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1080  0006FE  0102               	movlb	2	; () banked
  1081  000700  0E02               	movlw	high main@t0thread_data
  1082  000702  0100               	movlb	0	; () banked
  1083  000704  6FD4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1084  000706  0102               	movlb	2	; () banked
  1085  000708  0E0B               	movlw	low main@t0thread_data
  1086  00070A  0100               	movlb	0	; () banked
  1087  00070C  6FD3               	movwf	timer0_lthread@tptr& (0+255),b
  1088  00070E  0102               	movlb	2	; () banked
  1089  000710  0100               	movlb	0	; () banked
  1090  000712  C21F  F0D5         	movff	main@msgtype,timer0_lthread@msgtype
  1091  000716  0100               	movlb	0	; () banked
  1092  000718  6BD6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1093  00071A  0102               	movlb	2	; () banked
  1094  00071C  512D               	movf	main@length& (0+255),w,b
  1095  00071E  0100               	movlb	0	; () banked
  1096  000720  6FD7               	movwf	timer0_lthread@length& (0+255),b
  1097  000722  0100               	movlb	0	; () banked
  1098  000724  6BD8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1099  000726  0100               	movlb	0	; () banked
  1100  000728  BFD7               	btfsc	timer0_lthread@length& (0+255),7,b
  1101  00072A  07D8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1102  00072C  0102               	movlb	2	; () banked
  1103  00072E  0E02               	movlw	high main@msgbuffer
  1104  000730  0100               	movlb	0	; () banked
  1105  000732  6FDA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1106  000734  0102               	movlb	2	; () banked
  1107  000736  0E00               	movlw	low main@msgbuffer
  1108  000738  0100               	movlb	0	; () banked
  1109  00073A  6FD9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1110  00073C  EC7E  F00D         	call	_timer0_lthread	;wreg free
  1111                           
  1112                           ;main.c: 291: break;
  1113  000740  D03F               	goto	l3816
  1114  000742                     l109:
  1115                           
  1116                           ;main.c: 294: case 41:
  1117                           ;main.c: 295: {
  1118                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1119  000742  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1120                           
  1121                           ;main.c: 299: break;
  1122  000746  D03C               	goto	l3816
  1123  000748                     l3800:
  1124                           
  1125                           ;main.c: 312: {
  1126                           ;main.c: 313: length = 2;
  1127  000748  0E02               	movlw	2
  1128  00074A  0102               	movlb	2	; () banked
  1129  00074C  6F2D               	movwf	main@length& (0+255),b
  1130                           
  1131                           ;main.c: 314: msgbuffer[0] = 0x55;
  1132  00074E  0E55               	movlw	85
  1133  000750  0102               	movlb	2	; () banked
  1134  000752  6F00               	movwf	main@msgbuffer& (0+255),b
  1135                           
  1136                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1137  000754  0EAA               	movlw	170
  1138  000756  0102               	movlb	2	; () banked
  1139  000758  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1140                           
  1141                           ;main.c: 316: break;
  1142  00075A  D017               	goto	l3810
  1143  00075C                     l3802:
  1144                           
  1145                           ; BSR set to: 2
  1146                           ;main.c: 319: {
  1147                           ;main.c: 320: length = 1;
  1148  00075C  0E01               	movlw	1
  1149  00075E  0102               	movlb	2	; () banked
  1150  000760  6F2D               	movwf	main@length& (0+255),b
  1151                           
  1152                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1153  000762  0E3A               	movlw	58
  1154  000764  D004               	goto	L1
  1155  000766                     l3804:
  1156                           
  1157                           ; BSR set to: 2
  1158                           ;main.c: 325: {
  1159                           ;main.c: 326: length = 1;
  1160  000766  0E01               	movlw	1
  1161  000768  0102               	movlb	2	; () banked
  1162  00076A  6F2D               	movwf	main@length& (0+255),b
  1163                           
  1164                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1165  00076C  0EA3               	movlw	163
  1166  00076E                     L1:
  1167  00076E  0102               	movlb	2	; () banked
  1168  000770  6F00               	movwf	main@msgbuffer& (0+255),b
  1169                           
  1170                           ;main.c: 328: break;
  1171  000772  D00B               	goto	l3810
  1172  000774                     l3808:
  1173  000774  0102               	movlb	2	; () banked
  1174  000776  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1175                           
  1176                           ; Switch size 1, requested type "space"
  1177                           ; Number of cases is 3, Range of values is 168 to 170
  1178                           ; switch strategies available:
  1179                           ; Name         Instructions Cycles
  1180                           ; simple_byte           10     6 (average)
  1181                           ;	Chosen strategy is simple_byte
  1182  000778  0AA8               	xorlw	168	; case 168
  1183  00077A  B4D8               	btfsc	status,2,c
  1184  00077C  D7EF               	goto	l3802
  1185  00077E  0A01               	xorlw	1	; case 169
  1186  000780  B4D8               	btfsc	status,2,c
  1187  000782  D7F1               	goto	l3804
  1188  000784  0A03               	xorlw	3	; case 170
  1189  000786  B4D8               	btfsc	status,2,c
  1190  000788  D7DF               	goto	l3800
  1191  00078A                     l3810:
  1192                           
  1193                           ; BSR set to: 2
  1194                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1195  00078A  0102               	movlb	2	; () banked
  1196  00078C  0E02               	movlw	high main@msgbuffer
  1197  00078E  0100               	movlb	0	; () banked
  1198  000790  6FD4               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1199  000792  0102               	movlb	2	; () banked
  1200  000794  0E00               	movlw	low main@msgbuffer
  1201  000796  0100               	movlb	0	; () banked
  1202  000798  6FD3               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1203  00079A  0102               	movlb	2	; () banked
  1204  00079C  512D               	movf	main@length& (0+255),w,b
  1205  00079E  ECDD  F004         	call	_start_i2c_slave_reply
  1206                           
  1207                           ;main.c: 332: break;
  1208  0007A2  D00E               	goto	l3816
  1209  0007A4                     l3814:
  1210  0007A4  0102               	movlb	2	; () banked
  1211  0007A6  511F               	movf	main@msgtype& (0+255),w,b
  1212                           
  1213                           ; Switch size 1, requested type "space"
  1214                           ; Number of cases is 4, Range of values is 10 to 42
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte           13     7 (average)
  1218                           ;	Chosen strategy is simple_byte
  1219  0007A8  0A0A               	xorlw	10	; case 10
  1220  0007AA  B4D8               	btfsc	status,2,c
  1221  0007AC  D7A8               	goto	l3798
  1222  0007AE  0A22               	xorlw	34	; case 40
  1223  0007B0  B4D8               	btfsc	status,2,c
  1224  0007B2  D7C7               	goto	l109
  1225  0007B4  0A01               	xorlw	1	; case 41
  1226  0007B6  B4D8               	btfsc	status,2,c
  1227  0007B8  D7C4               	goto	l109
  1228  0007BA  0A03               	xorlw	3	; case 42
  1229  0007BC  B4D8               	btfsc	status,2,c
  1230  0007BE  D7DA               	goto	l3808
  1231  0007C0                     l3816:
  1232                           
  1233                           ;main.c: 340: }
  1234                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1235  0007C0  0102               	movlb	2	; () banked
  1236  0007C2  0E02               	movlw	high main@msgtype
  1237  0007C4  0101               	movlb	1	; () banked
  1238  0007C6  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1239  0007C8  0102               	movlb	2	; () banked
  1240  0007CA  0E1F               	movlw	low main@msgtype
  1241  0007CC  0101               	movlb	1	; () banked
  1242  0007CE  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1243  0007D0  0102               	movlb	2	; () banked
  1244  0007D2  0E02               	movlw	high main@msgbuffer
  1245  0007D4  0101               	movlb	1	; () banked
  1246  0007D6  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1247  0007D8  0102               	movlb	2	; () banked
  1248  0007DA  0E00               	movlw	low main@msgbuffer
  1249  0007DC  0101               	movlb	1	; () banked
  1250  0007DE  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1251  0007E0  0E0A               	movlw	10
  1252  0007E2  ECB8  F00B         	call	_ToMainLow_recvmsg
  1253  0007E6  0102               	movlb	2	; () banked
  1254  0007E8  6F2D               	movwf	main@length& (0+255),b
  1255                           
  1256                           ; BSR set to: 2
  1257                           ;main.c: 344: if (length < 0) {
  1258  0007EA  0102               	movlb	2	; () banked
  1259  0007EC  BF2D               	btfsc	main@length& (0+255),7,b
  1260  0007EE  D76C               	goto	l3790
  1261  0007F0  D044               	goto	l3828
  1262  0007F2                     l3822:
  1263                           
  1264                           ; BSR set to: 2
  1265                           ;main.c: 352: {
  1266                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1267  0007F2  0102               	movlb	2	; () banked
  1268  0007F4  0E02               	movlw	high main@t1thread_data
  1269  0007F6  0101               	movlb	1	; () banked
  1270  0007F8  6FB3               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1271  0007FA  0102               	movlb	2	; () banked
  1272  0007FC  0E20               	movlw	low main@t1thread_data
  1273  0007FE  0101               	movlb	1	; () banked
  1274  000800  6FB2               	movwf	timer1_lthread@tptr& (0+255),b
  1275  000802  0102               	movlb	2	; () banked
  1276  000804  0101               	movlb	1	; () banked
  1277  000806  C21F  F1B4         	movff	main@msgtype,timer1_lthread@msgtype
  1278  00080A  0101               	movlb	1	; () banked
  1279  00080C  6BB5               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1280  00080E  0102               	movlb	2	; () banked
  1281  000810  512D               	movf	main@length& (0+255),w,b
  1282  000812  0101               	movlb	1	; () banked
  1283  000814  6FB6               	movwf	timer1_lthread@length& (0+255),b
  1284  000816  0101               	movlb	1	; () banked
  1285  000818  6BB7               	clrf	(timer1_lthread@length+1)& (0+255),b
  1286  00081A  0101               	movlb	1	; () banked
  1287  00081C  BFB6               	btfsc	timer1_lthread@length& (0+255),7,b
  1288  00081E  07B7               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1289  000820  0102               	movlb	2	; () banked
  1290  000822  0E02               	movlw	high main@msgbuffer
  1291  000824  0101               	movlb	1	; () banked
  1292  000826  6FB9               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1293  000828  0102               	movlb	2	; () banked
  1294  00082A  0E00               	movlw	low main@msgbuffer
  1295  00082C  0101               	movlb	1	; () banked
  1296  00082E  6FB8               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1297  000830  EC52  F006         	call	_timer1_lthread	;wreg free
  1298                           
  1299                           ;main.c: 354: break;
  1300  000834  D749               	goto	l3790
  1301  000836                     l3824:
  1302                           
  1303                           ;main.c: 357: case 31:
  1304                           ;main.c: 358: case 32:
  1305                           ;main.c: 359: {
  1306                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1307  000836  0102               	movlb	2	; () banked
  1308  000838  0E02               	movlw	high main@uthread_data
  1309  00083A  0101               	movlb	1	; () banked
  1310  00083C  6FAF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1311  00083E  0102               	movlb	2	; () banked
  1312  000840  0E10               	movlw	low main@uthread_data
  1313  000842  0101               	movlb	1	; () banked
  1314  000844  6FAE               	movwf	uart_lthread@uptr& (0+255),b
  1315  000846  0102               	movlb	2	; () banked
  1316  000848  0101               	movlb	1	; () banked
  1317  00084A  C21F  F1B0         	movff	main@msgtype,uart_lthread@msgtype
  1318  00084E  0101               	movlb	1	; () banked
  1319  000850  6BB1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1320  000852  0102               	movlb	2	; () banked
  1321  000854  512D               	movf	main@length& (0+255),w,b
  1322  000856  0101               	movlb	1	; () banked
  1323  000858  6FB2               	movwf	uart_lthread@length& (0+255),b
  1324  00085A  0101               	movlb	1	; () banked
  1325  00085C  6BB3               	clrf	(uart_lthread@length+1)& (0+255),b
  1326  00085E  0101               	movlb	1	; () banked
  1327  000860  BFB2               	btfsc	uart_lthread@length& (0+255),7,b
  1328  000862  07B3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1329  000864  0102               	movlb	2	; () banked
  1330  000866  0E02               	movlw	high main@msgbuffer
  1331  000868  0101               	movlb	1	; () banked
  1332  00086A  6FB5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1333  00086C  0102               	movlb	2	; () banked
  1334  00086E  0E00               	movlw	low main@msgbuffer
  1335  000870  0101               	movlb	1	; () banked
  1336  000872  6FB4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1337  000874  ECF8  F007         	call	_uart_lthread	;wreg free
  1338                           
  1339                           ;main.c: 361: break;
  1340  000878  D727               	goto	l3790
  1341  00087A                     l3828:
  1342  00087A  0102               	movlb	2	; () banked
  1343  00087C  511F               	movf	main@msgtype& (0+255),w,b
  1344                           
  1345                           ; Switch size 1, requested type "space"
  1346                           ; Number of cases is 4, Range of values is 11 to 32
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte           13     7 (average)
  1350                           ;	Chosen strategy is simple_byte
  1351  00087E  0A0B               	xorlw	11	; case 11
  1352  000880  B4D8               	btfsc	status,2,c
  1353  000882  D7B7               	goto	l3822
  1354  000884  0A15               	xorlw	21	; case 30
  1355  000886  B4D8               	btfsc	status,2,c
  1356  000888  D7D6               	goto	l3824
  1357  00088A  0A01               	xorlw	1	; case 31
  1358  00088C  B4D8               	btfsc	status,2,c
  1359  00088E  D7D3               	goto	l3824
  1360  000890  0A3F               	xorlw	63	; case 32
  1361  000892  B4D8               	btfsc	status,2,c
  1362  000894  D7D0               	goto	l3824
  1363  000896  D718               	goto	l3790
  1364  000898                     __end_of_main:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           status	equ	0xFD8
  1370                           
  1371 ;; *************** function _uart_lthread *****************
  1372 ;; Defined at:
  1373 ;;		line 12 in file "src/uart_thread.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  uptr            2   12[BANK1 ] PTR struct __uart_thread
  1376 ;;		 -> main@uthread_data(10), 
  1377 ;;  msgtype         2   14[BANK1 ] int 
  1378 ;;  length          2   16[BANK1 ] int 
  1379 ;;  msgbuffer       2   18[BANK1 ] PTR unsigned char 
  1380 ;;		 -> main@msgbuffer(11), 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  index           2   21[BANK1 ] int 
  1383 ;;  status          1   20[BANK1 ] char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2   12[BANK1 ] int 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1393 ;;      Params:         0       0       8       0       0
  1394 ;;      Locals:         0       0       3       0       0
  1395 ;;      Temps:          0       0       0       0       0
  1396 ;;      Totals:         0       0      11       0       0
  1397 ;;Total ram usage:       11 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:   13
  1400 ;; This function calls:
  1401 ;;		_FromMainLow_sendmsg
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408  000FF0                     __ptext1:
  1409                           	opt stack 0
  1410  000FF0                     _uart_lthread:
  1411                           	opt stack 16
  1412                           
  1413                           ;uart_thread.c: 13: if (msgtype == 30) {
  1414                           
  1415                           ; BSR set to: 2
  1416                           ;incstack = 0
  1417  000FF0  0101               	movlb	1	; () banked
  1418  000FF2  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1419  000FF4  0A1E               	xorlw	30
  1420  000FF6  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1421  000FF8  B4D8               	btfsc	status,2,c
  1422  000FFA  0012               	return	
  1423                           
  1424                           ; BSR set to: 1
  1425                           ;uart_thread.c: 16: else if(msgtype == 31){
  1426                           
  1427                           ; BSR set to: 1
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;uart_thread.c: 15: }
  1431  000FFC  0101               	movlb	1	; () banked
  1432  000FFE  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1433  001000  0A1F               	xorlw	31
  1434  001002  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1435  001004  A4D8               	btfss	status,2,c
  1436  001006  D041               	goto	l3712
  1437                           
  1438                           ; BSR set to: 1
  1439                           ;uart_thread.c: 18: int index = 0;
  1440  001008  0E00               	movlw	0
  1441  00100A  0101               	movlb	1	; () banked
  1442  00100C  6FB8               	movwf	(uart_lthread@index+1)& (0+255),b
  1443  00100E  0E00               	movlw	0
  1444  001010  0101               	movlb	1	; () banked
  1445  001012  6FB7               	movwf	uart_lthread@index& (0+255),b
  1446                           
  1447                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1448  001014  0E00               	movlw	0
  1449  001016  0101               	movlb	1	; () banked
  1450  001018  6FB8               	movwf	(uart_lthread@index+1)& (0+255),b
  1451  00101A  0E00               	movlw	0
  1452  00101C  0101               	movlb	1	; () banked
  1453  00101E  6FB7               	movwf	uart_lthread@index& (0+255),b
  1454  001020                     
  1455                           ; BSR set to: 1
  1456  001020  0101               	movlb	1	; () banked
  1457  001022  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1458  001024  0A80               	xorlw	128
  1459  001026  0F80               	addlw	-128
  1460  001028  0E0A               	movlw	10
  1461  00102A  B4D8               	btfsc	status,2,c
  1462  00102C  5DB7               	subwf	uart_lthread@index& (0+255),w,b
  1463  00102E  B0D8               	btfsc	status,0,c
  1464  001030  D01A               	goto	l3708
  1465                           
  1466                           ; BSR set to: 1
  1467                           
  1468                           ; BSR set to: 1
  1469                           
  1470                           ; BSR set to: 1
  1471  001032  0101               	movlb	1	; () banked
  1472  001034  51B7               	movf	uart_lthread@index& (0+255),w,b
  1473  001036  0101               	movlb	1	; () banked
  1474  001038  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1475  00103A  6ED9               	movwf	fsr2l,c
  1476  00103C  0101               	movlb	1	; () banked
  1477  00103E  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1478  001040  0101               	movlb	1	; () banked
  1479  001042  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1480  001044  6EDA               	movwf	fsr2h,c
  1481  001046  0101               	movlb	1	; () banked
  1482  001048  51B7               	movf	uart_lthread@index& (0+255),w,b
  1483  00104A  0101               	movlb	1	; () banked
  1484  00104C  25AE               	addwf	uart_lthread@uptr& (0+255),w,b
  1485  00104E  6EE1               	movwf	fsr1l,c
  1486  001050  0101               	movlb	1	; () banked
  1487  001052  51B8               	movf	(uart_lthread@index+1)& (0+255),w,b
  1488  001054  0101               	movlb	1	; () banked
  1489  001056  21AF               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1490  001058  6EE2               	movwf	fsr1h,c
  1491  00105A  CFDF FFE7          	movff	indf2,indf1
  1492                           
  1493                           ; BSR set to: 1
  1494  00105E  0101               	movlb	1	; () banked
  1495  001060  4BB7               	infsnz	uart_lthread@index& (0+255),f,b
  1496  001062  2BB8               	incf	(uart_lthread@index+1)& (0+255),f,b
  1497  001064  D7DD               	goto	L2
  1498  001066                     l3708:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1502  001066  C1B0  F0DE         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1503  00106A  0101               	movlb	1	; () banked
  1504  00106C  0100               	movlb	0	; () banked
  1505  00106E  C1AF  F0E0         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1506  001072  0101               	movlb	1	; () banked
  1507  001074  0100               	movlb	0	; () banked
  1508  001076  C1AE  F0DF         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1509  00107A  0101               	movlb	1	; () banked
  1510  00107C  51B2               	movf	uart_lthread@length& (0+255),w,b
  1511  00107E  ECEE  F00B         	call	_FromMainLow_sendmsg
  1512  001082  0101               	movlb	1	; () banked
  1513  001084  6FB6               	movwf	uart_lthread@status& (0+255),b
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;uart_thread.c: 25: }
  1517                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1518                           
  1519                           ; BSR set to: 1
  1520  001086  889D               	bsf	3997,4,c	;volatile
  1521                           
  1522                           ;uart_thread.c: 29: }
  1523  001088  0012               	return	
  1524  00108A                     l3712:
  1525                           
  1526                           ; BSR set to: 1
  1527                           ;uart_thread.c: 30: else if(msgtype == 32){
  1528  00108A  0101               	movlb	1	; () banked
  1529  00108C  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1530  00108E  0A20               	xorlw	32
  1531  001090  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1532  001092  A4D8               	btfss	status,2,c
  1533  001094  0012               	return	
  1534                           
  1535                           ; BSR set to: 1
  1536                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1537  001096  0101               	movlb	1	; () banked
  1538  001098  51B2               	movf	uart_lthread@length& (0+255),w,b
  1539  00109A  0101               	movlb	1	; () banked
  1540  00109C  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1541  00109E  6ED9               	movwf	fsr2l,c
  1542  0010A0  0101               	movlb	1	; () banked
  1543  0010A2  51B3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1544  0010A4  0101               	movlb	1	; () banked
  1545  0010A6  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1546  0010A8  6EDA               	movwf	fsr2h,c
  1547  0010AA  0E00               	movlw	0
  1548  0010AC  6EDF               	movwf	indf2,c
  1549  0010AE  0012               	return	
  1550  0010B0                     __end_of_uart_lthread:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           indf1	equ	0xFE7
  1556                           fsr1h	equ	0xFE2
  1557                           fsr1l	equ	0xFE1
  1558                           indf2	equ	0xFDF
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _FromMainLow_sendmsg *****************
  1564 ;; Defined at:
  1565 ;;		line 150 in file "src/messages.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  length          1    wreg     unsigned char 
  1568 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1569 ;;  data            2   41[BANK0 ] PTR void 
  1570 ;;		 -> main@uthread_data(10), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  length          1   11[BANK1 ] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      char 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1582 ;;      Params:         0       3       0       0       0
  1583 ;;      Locals:         0       0       1       0       0
  1584 ;;      Temps:          0       0       0       0       0
  1585 ;;      Totals:         0       3       1       0       0
  1586 ;;Total ram usage:        4 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:   12
  1589 ;; This function calls:
  1590 ;;		_send_msg
  1591 ;; This function is called by:
  1592 ;;		_uart_lthread
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text2
  1597  0017DC                     __ptext2:
  1598                           	opt stack 0
  1599  0017DC                     _FromMainLow_sendmsg:
  1600                           	opt stack 16
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;incstack = 0
  1604                           ;FromMainLow_sendmsg@length stored from wreg
  1605  0017DC  0101               	movlb	1	; () banked
  1606  0017DE  6FAD               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1610  0017E0  0101               	movlb	1	; () banked
  1611  0017E2  0E01               	movlw	high _FromMainLow_MQ
  1612  0017E4  0101               	movlb	1	; () banked
  1613  0017E6  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1614  0017E8  0101               	movlb	1	; () banked
  1615  0017EA  0E36               	movlw	low _FromMainLow_MQ
  1616  0017EC  0101               	movlb	1	; () banked
  1617  0017EE  6FA2               	movwf	send_msg@qptr& (0+255),b
  1618  0017F0  C1AD  F1A4         	movff	FromMainLow_sendmsg@length,send_msg@length
  1619  0017F4  C0DE  F1A5         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1620  0017F8  0100               	movlb	0	; () banked
  1621  0017FA  0101               	movlb	1	; () banked
  1622  0017FC  C0E0  F1A7         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1623  001800  0100               	movlb	0	; () banked
  1624  001802  0101               	movlb	1	; () banked
  1625  001804  C0DF  F1A6         	movff	FromMainLow_sendmsg@data,send_msg@data
  1626  001808  ECDA  F005         	call	_send_msg	;wreg free
  1627  00180C  0012               	return	
  1628  00180E                     __end_of_FromMainLow_sendmsg:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           indf1	equ	0xFE7
  1634                           fsr1h	equ	0xFE2
  1635                           fsr1l	equ	0xFE1
  1636                           indf2	equ	0xFDF
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _timer1_lthread *****************
  1642 ;; Defined at:
  1643 ;;		line 18 in file "src/timer1_thread.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  tptr            2   16[BANK1 ] PTR struct __timer1_thre
  1646 ;;		 -> main@t1thread_data(13), 
  1647 ;;  msgtype         2   18[BANK1 ] int 
  1648 ;;  length          2   20[BANK1 ] int 
  1649 ;;  msgbuffer       2   22[BANK1 ] PTR unsigned char 
  1650 ;;		 -> main@msgbuffer(11), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2   16[BANK1 ] int 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1662 ;;      Params:         0       0       8       0       0
  1663 ;;      Locals:         0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         0       0       8       0       0
  1666 ;;Total ram usage:        8 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:   14
  1669 ;; This function calls:
  1670 ;;		___lwmod
  1671 ;;		_sendUART
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text3
  1678  000CA4                     __ptext3:
  1679                           	opt stack 0
  1680  000CA4                     _timer1_lthread:
  1681                           	opt stack 15
  1682                           
  1683                           ;timer1_thread.c: 19: tptr->msgcount++;
  1684                           
  1685                           ;incstack = 0
  1686  000CA4  C1B2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1687  000CA8  C1B3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1688  000CAC  2ADE               	incf	postinc2,f,c
  1689  000CAE  0E00               	movlw	0
  1690  000CB0  22DD               	addwfc	postdec2,f,c
  1691                           
  1692                           ;timer1_thread.c: 21: if ((tptr->msgcount % 6) == 5) {
  1693  000CB2  C1B2  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1694  000CB6  C1B3  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1695  000CBA  0100               	movlb	0	; () banked
  1696  000CBC  CFDE F0D3          	movff	postinc2,___lwmod@dividend
  1697  000CC0  0100               	movlb	0	; () banked
  1698  000CC2  CFDD F0D4          	movff	postdec2,___lwmod@dividend+1
  1699  000CC6  0E00               	movlw	0
  1700  000CC8  0100               	movlb	0	; () banked
  1701  000CCA  6FD6               	movwf	(___lwmod@divisor+1)& (0+255),b
  1702  000CCC  0E06               	movlw	6
  1703  000CCE  0100               	movlb	0	; () banked
  1704  000CD0  6FD5               	movwf	___lwmod@divisor& (0+255),b
  1705  000CD2  EC0E  F00A         	call	___lwmod	;wreg free
  1706  000CD6  0100               	movlb	0	; () banked
  1707  000CD8  51D3               	movf	?___lwmod& (0+255),w,b
  1708  000CDA  0A05               	xorlw	5
  1709  000CDC  0100               	movlb	0	; () banked
  1710  000CDE  11D4               	iorwf	(?___lwmod+1)& (0+255),w,b
  1711  000CE0  A4D8               	btfss	status,2,c
  1712  000CE2  0012               	return	
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;timer1_thread.c: 22: tptr->even ^= 0x01;
  1716  000CE4  0101               	movlb	1	; () banked
  1717  000CE6  EE20 F002          	lfsr	2,2
  1718  000CEA  0101               	movlb	1	; () banked
  1719  000CEC  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1720  000CEE  26D9               	addwf	fsr2l,f,c
  1721  000CF0  0101               	movlb	1	; () banked
  1722  000CF2  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1723  000CF4  22DA               	addwfc	fsr2h,f,c
  1724  000CF6  0E01               	movlw	1
  1725  000CF8  1ADF               	xorwf	indf2,f,c
  1726                           
  1727                           ;timer1_thread.c: 23: switch(tptr->even){
  1728  000CFA  D02D               	goto	l3686
  1729  000CFC                     l3680:
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;timer1_thread.c: 25: tptr->buffer[0] = 0;
  1733  000CFC  0101               	movlb	1	; () banked
  1734  000CFE  EE20 F003          	lfsr	2,3
  1735  000D02  0101               	movlb	1	; () banked
  1736  000D04  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1737  000D06  26D9               	addwf	fsr2l,f,c
  1738  000D08  0101               	movlb	1	; () banked
  1739  000D0A  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1740  000D0C  22DA               	addwfc	fsr2h,f,c
  1741  000D0E  0E00               	movlw	0
  1742  000D10  6EDF               	movwf	indf2,c
  1743                           
  1744                           ;timer1_thread.c: 26: tptr->buffer[1] = 0;
  1745  000D12  0101               	movlb	1	; () banked
  1746  000D14  EE20 F004          	lfsr	2,4
  1747  000D18  0101               	movlb	1	; () banked
  1748  000D1A  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1749  000D1C  26D9               	addwf	fsr2l,f,c
  1750  000D1E  0101               	movlb	1	; () banked
  1751  000D20  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1752  000D22  22DA               	addwfc	fsr2h,f,c
  1753  000D24  0E00               	movlw	0
  1754  000D26  D015               	goto	L3
  1755  000D28                     l3682:
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;timer1_thread.c: 29: tptr->buffer[0] = 200;
  1759  000D28  0101               	movlb	1	; () banked
  1760  000D2A  EE20 F003          	lfsr	2,3
  1761  000D2E  0101               	movlb	1	; () banked
  1762  000D30  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1763  000D32  26D9               	addwf	fsr2l,f,c
  1764  000D34  0101               	movlb	1	; () banked
  1765  000D36  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1766  000D38  22DA               	addwfc	fsr2h,f,c
  1767  000D3A  0EC8               	movlw	200
  1768  000D3C  6EDF               	movwf	indf2,c
  1769                           
  1770                           ;timer1_thread.c: 30: tptr->buffer[1] = 72;
  1771  000D3E  0101               	movlb	1	; () banked
  1772  000D40  EE20 F004          	lfsr	2,4
  1773  000D44  0101               	movlb	1	; () banked
  1774  000D46  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1775  000D48  26D9               	addwf	fsr2l,f,c
  1776  000D4A  0101               	movlb	1	; () banked
  1777  000D4C  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1778  000D4E  22DA               	addwfc	fsr2h,f,c
  1779  000D50  0E48               	movlw	72
  1780  000D52                     L3:
  1781  000D52  6EDF               	movwf	indf2,c
  1782                           
  1783                           ;timer1_thread.c: 31: break;
  1784  000D54  D010               	goto	l3688
  1785  000D56                     l3686:
  1786                           
  1787                           ; BSR set to: 1
  1788  000D56  0101               	movlb	1	; () banked
  1789  000D58  EE20 F002          	lfsr	2,2
  1790  000D5C  0101               	movlb	1	; () banked
  1791  000D5E  51B2               	movf	timer1_lthread@tptr& (0+255),w,b
  1792  000D60  26D9               	addwf	fsr2l,f,c
  1793  000D62  0101               	movlb	1	; () banked
  1794  000D64  51B3               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1795  000D66  22DA               	addwfc	fsr2h,f,c
  1796  000D68  50DF               	movf	indf2,w,c
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 2, Range of values is 0 to 1
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            7     4 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804  000D6A  0A00               	xorlw	0	; case 0
  1805  000D6C  B4D8               	btfsc	status,2,c
  1806  000D6E  D7C6               	goto	l3680
  1807  000D70  0A01               	xorlw	1	; case 1
  1808  000D72  B4D8               	btfsc	status,2,c
  1809  000D74  D7D9               	goto	l3682
  1810  000D76                     l3688:
  1811                           
  1812                           ; BSR set to: 1
  1813                           ;timer1_thread.c: 34: sendUART(2, tptr->buffer);
  1814  000D76  0E03               	movlw	3
  1815  000D78  0101               	movlb	1	; () banked
  1816  000D7A  25B2               	addwf	timer1_lthread@tptr& (0+255),w,b
  1817  000D7C  0101               	movlb	1	; () banked
  1818  000D7E  6FAE               	movwf	sendUART@data& (0+255),b
  1819  000D80  0E00               	movlw	0
  1820  000D82  0101               	movlb	1	; () banked
  1821  000D84  21B3               	addwfc	(timer1_lthread@tptr+1)& (0+255),w,b
  1822  000D86  0101               	movlb	1	; () banked
  1823  000D88  6FAF               	movwf	(sendUART@data+1)& (0+255),b
  1824  000D8A  0E02               	movlw	2
  1825  000D8C  EC07  F00C         	call	_sendUART
  1826  000D90  0012               	return	
  1827  000D92                     __end_of_timer1_lthread:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           indf1	equ	0xFE7
  1833                           fsr1h	equ	0xFE2
  1834                           fsr1l	equ	0xFE1
  1835                           indf2	equ	0xFDF
  1836                           postinc2	equ	0xFDE
  1837                           postdec2	equ	0xFDD
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _sendUART *****************
  1843 ;; Defined at:
  1844 ;;		line 85 in file "src/my_uart.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  length          1    wreg     unsigned char 
  1847 ;;  data            2   12[BANK1 ] PTR unsigned char 
  1848 ;;		 -> main@t1thread_data(13), 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  length          1   15[BANK1 ] unsigned char 
  1851 ;;  retval          1   14[BANK1 ] char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      enum E4333
  1854 ;; Registers used:
  1855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1861 ;;      Params:         0       0       2       0       0
  1862 ;;      Locals:         0       0       2       0       0
  1863 ;;      Temps:          0       0       0       0       0
  1864 ;;      Totals:         0       0       4       0       0
  1865 ;;Total ram usage:        4 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:   13
  1868 ;; This function calls:
  1869 ;;		_ToMainLow_sendmsg
  1870 ;; This function is called by:
  1871 ;;		_timer1_lthread
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text4
  1876  00180E                     __ptext4:
  1877                           	opt stack 0
  1878  00180E                     _sendUART:
  1879                           	opt stack 15
  1880                           
  1881                           ;incstack = 0
  1882                           ;sendUART@length stored from wreg
  1883  00180E  0101               	movlb	1	; () banked
  1884  001810  6FB1               	movwf	sendUART@length& (0+255),b
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;my_uart.c: 86: if(length > 10){
  1888  001812  0E0A               	movlw	10
  1889  001814  0101               	movlb	1	; () banked
  1890  001816  65B1               	cpfsgt	sendUART@length& (0+255),b
  1891  001818  D001               	goto	l3282
  1892  00181A  0012               	return	
  1893  00181C                     l3282:
  1894                           
  1895                           ; BSR set to: 1
  1896                           ;my_uart.c: 89: }
  1897                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  1898  00181C  0E1F               	movlw	31
  1899  00181E  0100               	movlb	0	; () banked
  1900  001820  6FDE               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  1901  001822  0101               	movlb	1	; () banked
  1902  001824  0100               	movlb	0	; () banked
  1903  001826  C1AF  F0E0         	movff	sendUART@data+1,ToMainLow_sendmsg@data+1
  1904  00182A  0101               	movlb	1	; () banked
  1905  00182C  0100               	movlb	0	; () banked
  1906  00182E  C1AE  F0DF         	movff	sendUART@data,ToMainLow_sendmsg@data
  1907  001832  0101               	movlb	1	; () banked
  1908  001834  51B1               	movf	sendUART@length& (0+255),w,b
  1909  001836  EC20  F00C         	call	_ToMainLow_sendmsg
  1910  00183A  0101               	movlb	1	; () banked
  1911  00183C  6FB0               	movwf	sendUART@retval& (0+255),b
  1912  00183E  0012               	return	
  1913  001840                     __end_of_sendUART:
  1914                           	opt stack 0
  1915                           tblptru	equ	0xFF8
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           indf1	equ	0xFE7
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           postdec2	equ	0xFDD
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _ToMainLow_sendmsg *****************
  1929 ;; Defined at:
  1930 ;;		line 103 in file "src/messages.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  length          1    wreg     unsigned char 
  1933 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1934 ;;  data            2   41[BANK0 ] PTR void 
  1935 ;;		 -> NULL(0), main@t1thread_data(13), main@uc(5), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  length          1   11[BANK1 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      char 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1947 ;;      Params:         0       3       0       0       0
  1948 ;;      Locals:         0       0       1       0       0
  1949 ;;      Temps:          0       0       0       0       0
  1950 ;;      Totals:         0       3       1       0       0
  1951 ;;Total ram usage:        4 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:   12
  1954 ;; This function calls:
  1955 ;;		_send_msg
  1956 ;; This function is called by:
  1957 ;;		_sendUART
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text5
  1962  001840                     __ptext5:
  1963                           	opt stack 0
  1964  001840                     _ToMainLow_sendmsg:
  1965                           	opt stack 15
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;incstack = 0
  1969                           ;ToMainLow_sendmsg@length stored from wreg
  1970  001840  0101               	movlb	1	; () banked
  1971  001842  6FAD               	movwf	ToMainLow_sendmsg@length& (0+255),b
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  1975  001844  0100               	movlb	0	; () banked
  1976  001846  0E00               	movlw	high _ToMainLow_MQ
  1977  001848  0101               	movlb	1	; () banked
  1978  00184A  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1979  00184C  0100               	movlb	0	; () banked
  1980  00184E  0E80               	movlw	low _ToMainLow_MQ
  1981  001850  0101               	movlb	1	; () banked
  1982  001852  6FA2               	movwf	send_msg@qptr& (0+255),b
  1983  001854  C1AD  F1A4         	movff	ToMainLow_sendmsg@length,send_msg@length
  1984  001858  C0DE  F1A5         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  1985  00185C  0100               	movlb	0	; () banked
  1986  00185E  0101               	movlb	1	; () banked
  1987  001860  C0E0  F1A7         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  1988  001864  0100               	movlb	0	; () banked
  1989  001866  0101               	movlb	1	; () banked
  1990  001868  C0DF  F1A6         	movff	ToMainLow_sendmsg@data,send_msg@data
  1991  00186C  ECDA  F005         	call	_send_msg	;wreg free
  1992  001870  0012               	return	
  1993  001872                     __end_of_ToMainLow_sendmsg:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           postinc0	equ	0xFEE
  1997                           wreg	equ	0xFE8
  1998                           indf1	equ	0xFE7
  1999                           fsr1h	equ	0xFE2
  2000                           fsr1l	equ	0xFE1
  2001                           indf2	equ	0xFDF
  2002                           postinc2	equ	0xFDE
  2003                           postdec2	equ	0xFDD
  2004                           fsr2h	equ	0xFDA
  2005                           fsr2l	equ	0xFD9
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _send_msg *****************
  2009 ;; Defined at:
  2010 ;;		line 24 in file "src/messages.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2013 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2014 ;;  length          1    2[BANK1 ] unsigned char 
  2015 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2016 ;;  data            2    4[BANK1 ] PTR void 
  2017 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  2018 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2021 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2022 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2023 ;;  tlength         2    6[BANK1 ] unsigned int 
  2024 ;;  slot            1    8[BANK1 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2034 ;;      Params:         0       0       6       0       0
  2035 ;;      Locals:         0       0       5       0       0
  2036 ;;      Temps:          0       1       0       0       0
  2037 ;;      Totals:         0       1      11       0       0
  2038 ;;Total ram usage:       12 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:   11
  2041 ;; This function calls:
  2042 ;;		_memcpy
  2043 ;; This function is called by:
  2044 ;;		_ToMainLow_sendmsg
  2045 ;;		_FromMainLow_sendmsg
  2046 ;;		_FromMainHigh_sendmsg
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text6
  2051  000BB4                     __ptext6:
  2052                           	opt stack 0
  2053  000BB4                     _send_msg:
  2054                           	opt stack 16
  2055                           
  2056                           ;messages.c: 25: unsigned char slot;
  2057                           ;messages.c: 27: msg *qmsg;
  2058                           ;messages.c: 28: size_t tlength = length;
  2059                           
  2060                           ;incstack = 0
  2061  000BB4  0101               	movlb	1	; () banked
  2062  000BB6  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  2063  000BBA  0101               	movlb	1	; () banked
  2064  000BBC  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2068  000BBE  0101               	movlb	1	; () banked
  2069  000BC0  EE20 F034          	lfsr	2,52
  2070  000BC4  0101               	movlb	1	; () banked
  2071  000BC6  51A2               	movf	send_msg@qptr& (0+255),w,b
  2072  000BC8  26D9               	addwf	fsr2l,f,c
  2073  000BCA  0101               	movlb	1	; () banked
  2074  000BCC  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2075  000BCE  22DA               	addwfc	fsr2h,f,c
  2076  000BD0  50DF               	movf	indf2,w,c
  2077  000BD2  0101               	movlb	1	; () banked
  2078  000BD4  6FAA               	movwf	send_msg@slot& (0+255),b
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2082  000BD6  0101               	movlb	1	; () banked
  2083  000BD8  51AA               	movf	send_msg@slot& (0+255),w,b
  2084  000BDA  0D0D               	mullw	13
  2085  000BDC  50F3               	movf	prodl,w,c
  2086  000BDE  0101               	movlb	1	; () banked
  2087  000BE0  25A2               	addwf	send_msg@qptr& (0+255),w,b
  2088  000BE2  0101               	movlb	1	; () banked
  2089  000BE4  6FAB               	movwf	send_msg@qmsg& (0+255),b
  2090  000BE6  50F4               	movf	prodh,w,c
  2091  000BE8  0101               	movlb	1	; () banked
  2092  000BEA  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2093  000BEC  0101               	movlb	1	; () banked
  2094  000BEE  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;messages.c: 41: if (qmsg->full != 0) {
  2098  000BF0  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2099  000BF4  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2100  000BF8  50DF               	movf	indf2,w,c
  2101  000BFA  B4D8               	btfsc	status,2,c
  2102  000BFC  D002               	goto	l2996
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;messages.c: 42: return (-1);
  2106  000BFE  0EFF               	movlw	255
  2107  000C00  0012               	return	
  2108  000C02                     l2996:
  2109                           
  2110                           ; BSR set to: 1
  2111                           ;messages.c: 43: }
  2112                           ;messages.c: 46: qmsg->length = length;
  2113  000C02  0101               	movlb	1	; () banked
  2114  000C04  EE20 F001          	lfsr	2,1
  2115  000C08  0101               	movlb	1	; () banked
  2116  000C0A  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2117  000C0C  26D9               	addwf	fsr2l,f,c
  2118  000C0E  0101               	movlb	1	; () banked
  2119  000C10  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2120  000C12  22DA               	addwfc	fsr2h,f,c
  2121  000C14  0101               	movlb	1	; () banked
  2122  000C16  C1A4  FFDF         	movff	send_msg@length,indf2
  2123                           
  2124                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2125  000C1A  0101               	movlb	1	; () banked
  2126  000C1C  EE20 F002          	lfsr	2,2
  2127  000C20  0101               	movlb	1	; () banked
  2128  000C22  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2129  000C24  26D9               	addwf	fsr2l,f,c
  2130  000C26  0101               	movlb	1	; () banked
  2131  000C28  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2132  000C2A  22DA               	addwfc	fsr2h,f,c
  2133  000C2C  0101               	movlb	1	; () banked
  2134  000C2E  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2138  000C32  0E03               	movlw	3
  2139  000C34  0101               	movlb	1	; () banked
  2140  000C36  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  2141  000C38  0100               	movlb	0	; () banked
  2142  000C3A  6FD3               	movwf	memcpy@d1& (0+255),b
  2143  000C3C  0E00               	movlw	0
  2144  000C3E  0101               	movlb	1	; () banked
  2145  000C40  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2146  000C42  0100               	movlb	0	; () banked
  2147  000C44  6FD4               	movwf	(memcpy@d1+1)& (0+255),b
  2148  000C46  0101               	movlb	1	; () banked
  2149  000C48  0100               	movlb	0	; () banked
  2150  000C4A  C1A7  F0D6         	movff	send_msg@data+1,memcpy@s1+1
  2151  000C4E  0101               	movlb	1	; () banked
  2152  000C50  0100               	movlb	0	; () banked
  2153  000C52  C1A6  F0D5         	movff	send_msg@data,memcpy@s1
  2154  000C56  C1A8  F0D7         	movff	send_msg@tlength,memcpy@n
  2155  000C5A  C1A9  F0D8         	movff	send_msg@tlength+1,memcpy@n+1
  2156  000C5E  ECEC  F00A         	call	_memcpy	;wreg free
  2157                           
  2158                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2159  000C62  0101               	movlb	1	; () banked
  2160  000C64  EE20 F034          	lfsr	2,52
  2161  000C68  0101               	movlb	1	; () banked
  2162  000C6A  51A2               	movf	send_msg@qptr& (0+255),w,b
  2163  000C6C  26D9               	addwf	fsr2l,f,c
  2164  000C6E  0101               	movlb	1	; () banked
  2165  000C70  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2166  000C72  22DA               	addwfc	fsr2h,f,c
  2167  000C74  0101               	movlb	1	; () banked
  2168  000C76  EE10 F034          	lfsr	1,52
  2169  000C7A  0101               	movlb	1	; () banked
  2170  000C7C  51A2               	movf	send_msg@qptr& (0+255),w,b
  2171  000C7E  26E1               	addwf	fsr1l,f,c
  2172  000C80  0101               	movlb	1	; () banked
  2173  000C82  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2174  000C84  22E2               	addwfc	fsr1h,f,c
  2175  000C86  50E7               	movf	indf1,w,c
  2176  000C88  0100               	movlb	0	; () banked
  2177  000C8A  6FDD               	movwf	??_send_msg& (0+255),b
  2178  000C8C  0100               	movlb	0	; () banked
  2179  000C8E  29DD               	incf	??_send_msg& (0+255),w,b
  2180  000C90  0B03               	andlw	3
  2181  000C92  6EDF               	movwf	indf2,c
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;messages.c: 59: qmsg->full = 1;
  2185  000C94  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2186  000C98  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2187  000C9C  0E01               	movlw	1
  2188  000C9E  6EDF               	movwf	indf2,c
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;messages.c: 60: return (1);
  2192  000CA0  0E01               	movlw	1
  2193  000CA2  0012               	return	
  2194  000CA4                     __end_of_send_msg:
  2195                           	opt stack 0
  2196                           tblptru	equ	0xFF8
  2197                           prodh	equ	0xFF4
  2198                           prodl	equ	0xFF3
  2199                           postinc0	equ	0xFEE
  2200                           wreg	equ	0xFE8
  2201                           indf1	equ	0xFE7
  2202                           fsr1h	equ	0xFE2
  2203                           fsr1l	equ	0xFE1
  2204                           indf2	equ	0xFDF
  2205                           postinc2	equ	0xFDE
  2206                           postdec2	equ	0xFDD
  2207                           fsr2h	equ	0xFDA
  2208                           fsr2l	equ	0xFD9
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function ___lwmod *****************
  2212 ;; Defined at:
  2213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  dividend        2   29[BANK0 ] unsigned int 
  2216 ;;  divisor         2   31[BANK0 ] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  counter         1   33[BANK0 ] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2   29[BANK0 ] unsigned int 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2228 ;;      Params:         0       4       0       0       0
  2229 ;;      Locals:         0       1       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         0       5       0       0       0
  2232 ;;Total ram usage:        5 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:   10
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_timer1_lthread
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text7
  2243  00141C                     __ptext7:
  2244                           	opt stack 0
  2245  00141C                     ___lwmod:
  2246                           	opt stack 18
  2247                           
  2248                           ;incstack = 0
  2249  00141C  0100               	movlb	0	; () banked
  2250  00141E  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2251  001420  11D5               	iorwf	___lwmod@divisor& (0+255),w,b
  2252  001422  B4D8               	btfsc	status,2,c
  2253  001424  D026               	goto	l1049
  2254                           
  2255                           ; BSR set to: 0
  2256  001426  0E01               	movlw	1
  2257  001428  0100               	movlb	0	; () banked
  2258  00142A  6FD7               	movwf	___lwmod@counter& (0+255),b
  2259  00142C  D006               	goto	l3294
  2260  00142E                     l3292:
  2261                           
  2262                           ; BSR set to: 0
  2263  00142E  0100               	movlb	0	; () banked
  2264  001430  90D8               	bcf	status,0,c
  2265  001432  37D5               	rlcf	___lwmod@divisor& (0+255),f,b
  2266  001434  37D6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2267  001436  0100               	movlb	0	; () banked
  2268  001438  2BD7               	incf	___lwmod@counter& (0+255),f,b
  2269  00143A                     l3294:
  2270                           
  2271                           ; BSR set to: 0
  2272  00143A  0100               	movlb	0	; () banked
  2273  00143C  AFD6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2274  00143E  D7F7               	goto	l3292
  2275  001440                     l3296:
  2276                           
  2277                           ; BSR set to: 0
  2278  001440  0100               	movlb	0	; () banked
  2279  001442  51D5               	movf	___lwmod@divisor& (0+255),w,b
  2280  001444  0100               	movlb	0	; () banked
  2281  001446  5DD3               	subwf	___lwmod@dividend& (0+255),w,b
  2282  001448  0100               	movlb	0	; () banked
  2283  00144A  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2284  00144C  0100               	movlb	0	; () banked
  2285  00144E  59D4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2286  001450  A0D8               	btfss	status,0,c
  2287  001452  D008               	goto	l3300
  2288                           
  2289                           ; BSR set to: 0
  2290  001454  0100               	movlb	0	; () banked
  2291  001456  51D5               	movf	___lwmod@divisor& (0+255),w,b
  2292  001458  0100               	movlb	0	; () banked
  2293  00145A  5FD3               	subwf	___lwmod@dividend& (0+255),f,b
  2294  00145C  0100               	movlb	0	; () banked
  2295  00145E  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2296  001460  0100               	movlb	0	; () banked
  2297  001462  5BD4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2298  001464                     l3300:
  2299                           
  2300                           ; BSR set to: 0
  2301  001464  0100               	movlb	0	; () banked
  2302  001466  90D8               	bcf	status,0,c
  2303  001468  33D6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2304  00146A  33D5               	rrcf	___lwmod@divisor& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307  00146C  0100               	movlb	0	; () banked
  2308  00146E  2FD7               	decfsz	___lwmod@counter& (0+255),f,b
  2309  001470  D7E7               	goto	l3296
  2310  001472                     l1049:
  2311                           
  2312                           ; BSR set to: 0
  2313  001472  C0D3  F0D3         	movff	___lwmod@dividend,?___lwmod
  2314  001476  C0D4  F0D4         	movff	___lwmod@dividend+1,?___lwmod+1
  2315                           
  2316                           ; BSR set to: 0
  2317  00147A  0012               	return	
  2318  00147C                     __end_of___lwmod:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           indf1	equ	0xFE7
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           indf2	equ	0xFDF
  2329                           postinc2	equ	0xFDE
  2330                           postdec2	equ	0xFDD
  2331                           fsr2h	equ	0xFDA
  2332                           fsr2l	equ	0xFD9
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _timer0_lthread *****************
  2336 ;; Defined at:
  2337 ;;		line 9 in file "src/timer0_thread.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  2340 ;;		 -> main@t0thread_data(2), 
  2341 ;;  msgtype         2   31[BANK0 ] int 
  2342 ;;  length          2   33[BANK0 ] int 
  2343 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  2344 ;;		 -> main@msgbuffer(11), 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  msgval          2   37[BANK0 ] PTR unsigned int 
  2347 ;;		 -> main@msgbuffer(11), 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2   29[BANK0 ] int 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2357 ;;      Params:         0       8       0       0       0
  2358 ;;      Locals:         0       2       0       0       0
  2359 ;;      Temps:          0       0       0       0       0
  2360 ;;      Totals:         0      10       0       0       0
  2361 ;;Total ram usage:       10 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:   10
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text8
  2372  001AFC                     __ptext8:
  2373                           	opt stack 0
  2374  001AFC                     _timer0_lthread:
  2375                           	opt stack 19
  2376                           
  2377                           ;timer0_thread.c: 10: unsigned int *msgval;
  2378                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;incstack = 0
  2382  001AFC  0100               	movlb	0	; () banked
  2383  001AFE  C0DA  F0DC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2384  001B02  0100               	movlb	0	; () banked
  2385  001B04  C0D9  F0DB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2386                           
  2387                           ; BSR set to: 0
  2388  001B08  0012               	return	
  2389  001B0A                     __end_of_timer0_lthread:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           prodh	equ	0xFF4
  2393                           prodl	equ	0xFF3
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           indf1	equ	0xFE7
  2397                           fsr1h	equ	0xFE2
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           postdec2	equ	0xFDD
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _start_i2c_slave_reply *****************
  2407 ;; Defined at:
  2408 ;;		line 53 in file "src/my_i2c.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  length          1    wreg     unsigned char 
  2411 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2412 ;;		 -> main@msgbuffer(11), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  length          1   33[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2424 ;;      Params:         0       2       0       0       0
  2425 ;;      Locals:         0       1       0       0       0
  2426 ;;      Temps:          0       2       0       0       0
  2427 ;;      Totals:         0       5       0       0       0
  2428 ;;Total ram usage:        5 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:   10
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text9
  2439  0009BA                     __ptext9:
  2440                           	opt stack 0
  2441  0009BA                     _start_i2c_slave_reply:
  2442                           	opt stack 19
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;incstack = 0
  2446                           ;start_i2c_slave_reply@length stored from wreg
  2447  0009BA  0100               	movlb	0	; () banked
  2448  0009BC  6FD7               	movwf	start_i2c_slave_reply@length& (0+255),b
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2452  0009BE  0100               	movlb	0	; () banked
  2453  0009C0  EE20 F019          	lfsr	2,25
  2454  0009C4  0100               	movlb	0	; () banked
  2455  0009C6  51E1               	movf	_ic_ptr& (0+255),w,b
  2456  0009C8  26D9               	addwf	fsr2l,f,c
  2457  0009CA  0100               	movlb	0	; () banked
  2458  0009CC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2459  0009CE  22DA               	addwfc	fsr2h,f,c
  2460  0009D0  0E00               	movlw	0
  2461  0009D2  6EDF               	movwf	indf2,c
  2462  0009D4  D03E               	goto	l3664
  2463  0009D6                     l3660:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2467  0009D6  0100               	movlb	0	; () banked
  2468  0009D8  EE20 F019          	lfsr	2,25
  2469  0009DC  0100               	movlb	0	; () banked
  2470  0009DE  51E1               	movf	_ic_ptr& (0+255),w,b
  2471  0009E0  26D9               	addwf	fsr2l,f,c
  2472  0009E2  0100               	movlb	0	; () banked
  2473  0009E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2474  0009E6  22DA               	addwfc	fsr2h,f,c
  2475  0009E8  50DF               	movf	indf2,w,c
  2476  0009EA  0100               	movlb	0	; () banked
  2477  0009EC  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2478  0009EE  0100               	movlb	0	; () banked
  2479  0009F0  51D5               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2480  0009F2  0D01               	mullw	1
  2481  0009F4  50F3               	movf	prodl,w,c
  2482  0009F6  0100               	movlb	0	; () banked
  2483  0009F8  25D3               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2484  0009FA  6ED9               	movwf	fsr2l,c
  2485  0009FC  50F4               	movf	prodh,w,c
  2486  0009FE  0100               	movlb	0	; () banked
  2487  000A00  21D4               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2488  000A02  6EDA               	movwf	fsr2h,c
  2489  000A04  0100               	movlb	0	; () banked
  2490  000A06  EE10 F019          	lfsr	1,25
  2491  000A0A  0100               	movlb	0	; () banked
  2492  000A0C  51E1               	movf	_ic_ptr& (0+255),w,b
  2493  000A0E  26E1               	addwf	fsr1l,f,c
  2494  000A10  0100               	movlb	0	; () banked
  2495  000A12  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2496  000A14  22E2               	addwfc	fsr1h,f,c
  2497  000A16  50E7               	movf	indf1,w,c
  2498  000A18  0100               	movlb	0	; () banked
  2499  000A1A  6FD6               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2500  000A1C  0100               	movlb	0	; () banked
  2501  000A1E  51D6               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2502  000A20  0D01               	mullw	1
  2503  000A22  0E0F               	movlw	15
  2504  000A24  26F3               	addwf	prodl,f,c
  2505  000A26  0E00               	movlw	0
  2506  000A28  22F4               	addwfc	prodh,f,c
  2507  000A2A  50F3               	movf	prodl,w,c
  2508  000A2C  0100               	movlb	0	; () banked
  2509  000A2E  25E1               	addwf	_ic_ptr& (0+255),w,b
  2510  000A30  6EE1               	movwf	fsr1l,c
  2511  000A32  50F4               	movf	prodh,w,c
  2512  000A34  0100               	movlb	0	; () banked
  2513  000A36  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2514  000A38  6EE2               	movwf	fsr1h,c
  2515  000A3A  CFDF FFE7          	movff	indf2,indf1
  2516                           
  2517                           ; BSR set to: 0
  2518  000A3E  0100               	movlb	0	; () banked
  2519  000A40  EE20 F019          	lfsr	2,25
  2520  000A44  0100               	movlb	0	; () banked
  2521  000A46  51E1               	movf	_ic_ptr& (0+255),w,b
  2522  000A48  26D9               	addwf	fsr2l,f,c
  2523  000A4A  0100               	movlb	0	; () banked
  2524  000A4C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2525  000A4E  22DA               	addwfc	fsr2h,f,c
  2526  000A50  2ADF               	incf	indf2,f,c
  2527  000A52                     l3664:
  2528                           
  2529                           ; BSR set to: 0
  2530  000A52  0100               	movlb	0	; () banked
  2531  000A54  EE20 F019          	lfsr	2,25
  2532  000A58  0100               	movlb	0	; () banked
  2533  000A5A  51E1               	movf	_ic_ptr& (0+255),w,b
  2534  000A5C  26D9               	addwf	fsr2l,f,c
  2535  000A5E  0100               	movlb	0	; () banked
  2536  000A60  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2537  000A62  22DA               	addwfc	fsr2h,f,c
  2538  000A64  50DF               	movf	indf2,w,c
  2539  000A66  0100               	movlb	0	; () banked
  2540  000A68  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2541  000A6A  0100               	movlb	0	; () banked
  2542  000A6C  51D7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2543  000A6E  0100               	movlb	0	; () banked
  2544  000A70  5DD5               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2545  000A72  A0D8               	btfss	status,0,c
  2546  000A74  D7B0               	goto	l3660
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;my_i2c.c: 57: }
  2550                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2551                           
  2552                           ; BSR set to: 0
  2553  000A76  0100               	movlb	0	; () banked
  2554  000A78  EE20 F019          	lfsr	2,25
  2555  000A7C  0100               	movlb	0	; () banked
  2556  000A7E  51E1               	movf	_ic_ptr& (0+255),w,b
  2557  000A80  26D9               	addwf	fsr2l,f,c
  2558  000A82  0100               	movlb	0	; () banked
  2559  000A84  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2560  000A86  22DA               	addwfc	fsr2h,f,c
  2561  000A88  0100               	movlb	0	; () banked
  2562  000A8A  C0D7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2563                           
  2564                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2565  000A8E  0100               	movlb	0	; () banked
  2566  000A90  EE20 F01A          	lfsr	2,26
  2567  000A94  0100               	movlb	0	; () banked
  2568  000A96  51E1               	movf	_ic_ptr& (0+255),w,b
  2569  000A98  26D9               	addwf	fsr2l,f,c
  2570  000A9A  0100               	movlb	0	; () banked
  2571  000A9C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2572  000A9E  22DA               	addwfc	fsr2h,f,c
  2573  000AA0  0E01               	movlw	1
  2574  000AA2  6EDF               	movwf	indf2,c
  2575                           
  2576                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2577  000AA4  0100               	movlb	0	; () banked
  2578  000AA6  EE20 F00F          	lfsr	2,15
  2579  000AAA  0100               	movlb	0	; () banked
  2580  000AAC  51E1               	movf	_ic_ptr& (0+255),w,b
  2581  000AAE  26D9               	addwf	fsr2l,f,c
  2582  000AB0  0100               	movlb	0	; () banked
  2583  000AB2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2584  000AB4  22DA               	addwfc	fsr2h,f,c
  2585  000AB6  50DF               	movf	indf2,w,c
  2586  000AB8  6EC9               	movwf	4041,c	;volatile
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2590  000ABA  88C6               	bsf	4038,4,c	;volatile
  2591                           
  2592                           ; BSR set to: 0
  2593  000ABC  0012               	return	
  2594  000ABE                     __end_of_start_i2c_slave_reply:
  2595                           	opt stack 0
  2596                           tblptru	equ	0xFF8
  2597                           prodh	equ	0xFF4
  2598                           prodl	equ	0xFF3
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           indf1	equ	0xFE7
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           indf2	equ	0xFDF
  2605                           postinc2	equ	0xFDE
  2606                           postdec2	equ	0xFDD
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _init_uart_recv *****************
  2612 ;; Defined at:
  2613 ;;		line 80 in file "src/my_uart.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  2616 ;;		 -> main@uc(5), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;		None               void
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2628 ;;      Params:         0       2       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0
  2631 ;;      Totals:         0       2       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:   10
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text10
  2643  001A66                     __ptext10:
  2644                           	opt stack 0
  2645  001A66                     _init_uart_recv:
  2646                           	opt stack 19
  2647                           
  2648                           ;my_uart.c: 81: uc_ptr = uc;
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;incstack = 0
  2652  001A66  0100               	movlb	0	; () banked
  2653  001A68  C0D4  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2654  001A6C  0100               	movlb	0	; () banked
  2655  001A6E  C0D3  F049         	movff	init_uart_recv@uc,_uc_ptr
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2659  001A72  EE20 F004          	lfsr	2,4
  2660  001A76  5049               	movf	_uc_ptr,w,c
  2661  001A78  26D9               	addwf	fsr2l,f,c
  2662  001A7A  504A               	movf	_uc_ptr+1,w,c
  2663  001A7C  22DA               	addwfc	fsr2h,f,c
  2664  001A7E  0E00               	movlw	0
  2665  001A80  6EDF               	movwf	indf2,c
  2666                           
  2667                           ; BSR set to: 0
  2668  001A82  0012               	return	
  2669  001A84                     __end_of_init_uart_recv:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           indf1	equ	0xFE7
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _init_uart_lthread *****************
  2687 ;; Defined at:
  2688 ;;		line 7 in file "src/uart_thread.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  2691 ;;		 -> main@uthread_data(10), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		None
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2703 ;;      Params:         0       2       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0
  2706 ;;      Totals:         0       2       0       0       0
  2707 ;;Total ram usage:        2 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:   10
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text11
  2718  001B24                     __ptext11:
  2719                           	opt stack 0
  2720  001B24                     _init_uart_lthread:
  2721                           	opt stack 19
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;incstack = 0
  2725  001B24  0012               	return	
  2726  001B26                     __end_of_init_uart_lthread:
  2727                           	opt stack 0
  2728                           tblptru	equ	0xFF8
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           indf1	equ	0xFE7
  2734                           fsr1h	equ	0xFE2
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _init_timer1_lthread *****************
  2744 ;; Defined at:
  2745 ;;		line 7 in file "src/timer1_thread.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  2748 ;;		 -> main@t1thread_data(13), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2760 ;;      Params:         0       2       0       0       0
  2761 ;;      Locals:         0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0
  2763 ;;      Totals:         0       2       0       0       0
  2764 ;;Total ram usage:        2 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:   10
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text12
  2775  001584                     __ptext12:
  2776                           	opt stack 0
  2777  001584                     _init_timer1_lthread:
  2778                           	opt stack 19
  2779                           
  2780                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2781                           
  2782                           ;incstack = 0
  2783  001584  C0D3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2784  001588  C0D4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2785  00158C  0E00               	movlw	0
  2786  00158E  6EDE               	movwf	postinc2,c
  2787  001590  0E00               	movlw	0
  2788  001592  6EDD               	movwf	postdec2,c
  2789                           
  2790                           ;timer1_thread.c: 9: tptr->even = 0;
  2791  001594  0100               	movlb	0	; () banked
  2792  001596  EE20 F002          	lfsr	2,2
  2793  00159A  0100               	movlb	0	; () banked
  2794  00159C  51D3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2795  00159E  26D9               	addwf	fsr2l,f,c
  2796  0015A0  0100               	movlb	0	; () banked
  2797  0015A2  51D4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2798  0015A4  22DA               	addwfc	fsr2h,f,c
  2799  0015A6  0E00               	movlw	0
  2800  0015A8  6EDF               	movwf	indf2,c
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;timer1_thread.c: 10: tptr->buffer[0] = 200;
  2804  0015AA  0100               	movlb	0	; () banked
  2805  0015AC  EE20 F003          	lfsr	2,3
  2806  0015B0  0100               	movlb	0	; () banked
  2807  0015B2  51D3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2808  0015B4  26D9               	addwf	fsr2l,f,c
  2809  0015B6  0100               	movlb	0	; () banked
  2810  0015B8  51D4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2811  0015BA  22DA               	addwfc	fsr2h,f,c
  2812  0015BC  0EC8               	movlw	200
  2813  0015BE  6EDF               	movwf	indf2,c
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;timer1_thread.c: 11: tptr->buffer[1] = 75;
  2817  0015C0  0100               	movlb	0	; () banked
  2818  0015C2  EE20 F004          	lfsr	2,4
  2819  0015C6  0100               	movlb	0	; () banked
  2820  0015C8  51D3               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2821  0015CA  26D9               	addwf	fsr2l,f,c
  2822  0015CC  0100               	movlb	0	; () banked
  2823  0015CE  51D4               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2824  0015D0  22DA               	addwfc	fsr2h,f,c
  2825  0015D2  0E4B               	movlw	75
  2826  0015D4  6EDF               	movwf	indf2,c
  2827                           
  2828                           ; BSR set to: 0
  2829  0015D6  0012               	return	
  2830  0015D8                     __end_of_init_timer1_lthread:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           prodh	equ	0xFF4
  2834                           prodl	equ	0xFF3
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           indf1	equ	0xFE7
  2838                           fsr1h	equ	0xFE2
  2839                           fsr1l	equ	0xFE1
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           postdec2	equ	0xFDD
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _init_queues *****************
  2848 ;; Defined at:
  2849 ;;		line 194 in file "src/messages.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2863 ;;      Params:         0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:   11
  2870 ;; This function calls:
  2871 ;;		_init_queue
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text13
  2878  0014D8                     __ptext13:
  2879                           	opt stack 0
  2880  0014D8                     _init_queues:
  2881                           	opt stack 18
  2882                           
  2883                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;incstack = 0
  2887  0014D8  0E00               	movlw	0
  2888  0014DA  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2889                           
  2890                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2891  0014DC  0100               	movlb	0	; () banked
  2892  0014DE  0E00               	movlw	high _ToMainLow_MQ
  2893  0014E0  0100               	movlb	0	; () banked
  2894  0014E2  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2895  0014E4  0100               	movlb	0	; () banked
  2896  0014E6  0E80               	movlw	low _ToMainLow_MQ
  2897  0014E8  0100               	movlb	0	; () banked
  2898  0014EA  6FD3               	movwf	init_queue@qptr& (0+255),b
  2899  0014EC  ECAA  F009         	call	_init_queue	;wreg free
  2900                           
  2901                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2902  0014F0  0101               	movlb	1	; () banked
  2903  0014F2  0E01               	movlw	high _ToMainHigh_MQ
  2904  0014F4  0100               	movlb	0	; () banked
  2905  0014F6  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2906  0014F8  0101               	movlb	1	; () banked
  2907  0014FA  0E6C               	movlw	low _ToMainHigh_MQ
  2908  0014FC  0100               	movlb	0	; () banked
  2909  0014FE  6FD3               	movwf	init_queue@qptr& (0+255),b
  2910  001500  ECAA  F009         	call	_init_queue	;wreg free
  2911                           
  2912                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2913  001504  0101               	movlb	1	; () banked
  2914  001506  0E01               	movlw	high _FromMainLow_MQ
  2915  001508  0100               	movlb	0	; () banked
  2916  00150A  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2917  00150C  0101               	movlb	1	; () banked
  2918  00150E  0E36               	movlw	low _FromMainLow_MQ
  2919  001510  0100               	movlb	0	; () banked
  2920  001512  6FD3               	movwf	init_queue@qptr& (0+255),b
  2921  001514  ECAA  F009         	call	_init_queue	;wreg free
  2922                           
  2923                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2924  001518  0101               	movlb	1	; () banked
  2925  00151A  0E01               	movlw	high _FromMainHigh_MQ
  2926  00151C  0100               	movlb	0	; () banked
  2927  00151E  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2928  001520  0101               	movlb	1	; () banked
  2929  001522  0E00               	movlw	low _FromMainHigh_MQ
  2930  001524  0100               	movlb	0	; () banked
  2931  001526  6FD3               	movwf	init_queue@qptr& (0+255),b
  2932  001528  ECAA  F009         	call	_init_queue	;wreg free
  2933  00152C  0012               	return	
  2934  00152E                     __end_of_init_queues:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           prodh	equ	0xFF4
  2938                           prodl	equ	0xFF3
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           indf1	equ	0xFE7
  2942                           fsr1h	equ	0xFE2
  2943                           fsr1l	equ	0xFE1
  2944                           indf2	equ	0xFDF
  2945                           postinc2	equ	0xFDE
  2946                           postdec2	equ	0xFDD
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _init_queue *****************
  2952 ;; Defined at:
  2953 ;;		line 14 in file "src/messages.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  2956 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  i               1   31[BANK0 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2968 ;;      Params:         0       2       0       0       0
  2969 ;;      Locals:         0       1       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       3       0       0       0
  2972 ;;Total ram usage:        3 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:   10
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_init_queues
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text14
  2983  001354                     __ptext14:
  2984                           	opt stack 0
  2985  001354                     _init_queue:
  2986                           	opt stack 18
  2987                           
  2988                           ;messages.c: 15: unsigned char i;
  2989                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2990                           
  2991                           ;incstack = 0
  2992  001354  0100               	movlb	0	; () banked
  2993  001356  EE20 F034          	lfsr	2,52
  2994  00135A  0100               	movlb	0	; () banked
  2995  00135C  51D3               	movf	init_queue@qptr& (0+255),w,b
  2996  00135E  26D9               	addwf	fsr2l,f,c
  2997  001360  0100               	movlb	0	; () banked
  2998  001362  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2999  001364  22DA               	addwfc	fsr2h,f,c
  3000  001366  0E00               	movlw	0
  3001  001368  6EDF               	movwf	indf2,c
  3002                           
  3003                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3004  00136A  0100               	movlb	0	; () banked
  3005  00136C  EE20 F035          	lfsr	2,53
  3006  001370  0100               	movlb	0	; () banked
  3007  001372  51D3               	movf	init_queue@qptr& (0+255),w,b
  3008  001374  26D9               	addwf	fsr2l,f,c
  3009  001376  0100               	movlb	0	; () banked
  3010  001378  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3011  00137A  22DA               	addwfc	fsr2h,f,c
  3012  00137C  0E00               	movlw	0
  3013  00137E  6EDF               	movwf	indf2,c
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3017  001380  0E00               	movlw	0
  3018  001382  0100               	movlb	0	; () banked
  3019  001384  6FD5               	movwf	init_queue@i& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022  001386  0E03               	movlw	3
  3023  001388  0100               	movlb	0	; () banked
  3024  00138A  65D5               	cpfsgt	init_queue@i& (0+255),b
  3025  00138C  D001               	goto	l3186
  3026  00138E  0012               	return	
  3027  001390                     l3186:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;messages.c: 20: qptr->queue[i].full = 0;
  3031  001390  0100               	movlb	0	; () banked
  3032  001392  51D5               	movf	init_queue@i& (0+255),w,b
  3033  001394  0D0D               	mullw	13
  3034  001396  50F3               	movf	prodl,w,c
  3035  001398  0100               	movlb	0	; () banked
  3036  00139A  25D3               	addwf	init_queue@qptr& (0+255),w,b
  3037  00139C  6ED9               	movwf	fsr2l,c
  3038  00139E  50F4               	movf	prodh,w,c
  3039  0013A0  0100               	movlb	0	; () banked
  3040  0013A2  21D4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3041  0013A4  6EDA               	movwf	fsr2h,c
  3042  0013A6  0E00               	movlw	0
  3043  0013A8  6EDF               	movwf	indf2,c
  3044                           
  3045                           ; BSR set to: 0
  3046  0013AA  0100               	movlb	0	; () banked
  3047  0013AC  2BD5               	incf	init_queue@i& (0+255),f,b
  3048                           
  3049                           ; BSR set to: 0
  3050  0013AE  0E03               	movlw	3
  3051  0013B0  0100               	movlb	0	; () banked
  3052  0013B2  65D5               	cpfsgt	init_queue@i& (0+255),b
  3053  0013B4  D7ED               	goto	l3186
  3054  0013B6  0012               	return	
  3055  0013B8                     __end_of_init_queue:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           indf1	equ	0xFE7
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           indf2	equ	0xFDF
  3066                           postinc2	equ	0xFDE
  3067                           postdec2	equ	0xFDD
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _init_i2c *****************
  3073 ;; Defined at:
  3074 ;;		line 268 in file "src/my_i2c.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  3077 ;;		 -> main@ic(28), 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3089 ;;      Params:         0       2       0       0       0
  3090 ;;      Locals:         0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0
  3092 ;;      Totals:         0       2       0       0       0
  3093 ;;Total ram usage:        2 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:   10
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text15
  3104  0012EE                     __ptext15:
  3105                           	opt stack 0
  3106  0012EE                     _init_i2c:
  3107                           	opt stack 19
  3108                           
  3109                           ;my_i2c.c: 269: ic_ptr = ic;
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;incstack = 0
  3113  0012EE  0100               	movlb	0	; () banked
  3114  0012F0  C0D4  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  3115  0012F4  0100               	movlb	0	; () banked
  3116  0012F6  C0D3  F0E1         	movff	init_i2c@ic,_ic_ptr
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3120  0012FA  0100               	movlb	0	; () banked
  3121  0012FC  EE20 F00A          	lfsr	2,10
  3122  001300  0100               	movlb	0	; () banked
  3123  001302  51E1               	movf	_ic_ptr& (0+255),w,b
  3124  001304  26D9               	addwf	fsr2l,f,c
  3125  001306  0100               	movlb	0	; () banked
  3126  001308  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3127  00130A  22DA               	addwfc	fsr2h,f,c
  3128  00130C  0E00               	movlw	0
  3129  00130E  6EDF               	movwf	indf2,c
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3133  001310  0100               	movlb	0	; () banked
  3134  001312  EE20 F00B          	lfsr	2,11
  3135  001316  0100               	movlb	0	; () banked
  3136  001318  51E1               	movf	_ic_ptr& (0+255),w,b
  3137  00131A  26D9               	addwf	fsr2l,f,c
  3138  00131C  0100               	movlb	0	; () banked
  3139  00131E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3140  001320  22DA               	addwfc	fsr2h,f,c
  3141  001322  0E00               	movlw	0
  3142  001324  6EDF               	movwf	indf2,c
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3146  001326  0100               	movlb	0	; () banked
  3147  001328  EE20 F00C          	lfsr	2,12
  3148  00132C  0100               	movlb	0	; () banked
  3149  00132E  51E1               	movf	_ic_ptr& (0+255),w,b
  3150  001330  26D9               	addwf	fsr2l,f,c
  3151  001332  0100               	movlb	0	; () banked
  3152  001334  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3153  001336  22DA               	addwfc	fsr2h,f,c
  3154  001338  0E05               	movlw	5
  3155  00133A  6EDF               	movwf	indf2,c
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3159  00133C  0100               	movlb	0	; () banked
  3160  00133E  EE20 F00E          	lfsr	2,14
  3161  001342  0100               	movlb	0	; () banked
  3162  001344  51E1               	movf	_ic_ptr& (0+255),w,b
  3163  001346  26D9               	addwf	fsr2l,f,c
  3164  001348  0100               	movlb	0	; () banked
  3165  00134A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3166  00134C  22DA               	addwfc	fsr2h,f,c
  3167  00134E  0E00               	movlw	0
  3168  001350  6EDF               	movwf	indf2,c
  3169                           
  3170                           ; BSR set to: 0
  3171  001352  0012               	return	
  3172  001354                     __end_of_init_i2c:
  3173                           	opt stack 0
  3174                           tblptru	equ	0xFF8
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           indf1	equ	0xFE7
  3180                           fsr1h	equ	0xFE2
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _i2c_configure_slave *****************
  3190 ;; Defined at:
  3191 ;;		line 279 in file "src/my_i2c.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  addr            1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  addr            1   29[BANK0 ] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;		None               void
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       1       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       1       0       0       0
  3209 ;;Total ram usage:        1 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:   10
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text16
  3220  001960                     __ptext16:
  3221                           	opt stack 0
  3222  001960                     _i2c_configure_slave:
  3223                           	opt stack 19
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;incstack = 0
  3227                           ;i2c_configure_slave@addr stored from wreg
  3228  001960  0100               	movlb	0	; () banked
  3229  001962  6FD3               	movwf	i2c_configure_slave@addr& (0+255),b
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3233  001964  8694               	bsf	3988,3,c	;volatile
  3234                           
  3235                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3236  001966  8894               	bsf	3988,4,c	;volatile
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;my_i2c.c: 297: SSPADD = addr;
  3240  001968  C0D3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3244  00196C  0E00               	movlw	0
  3245  00196E  6EC7               	movwf	4039,c	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3249  001970  0E00               	movlw	0
  3250  001972  6EC6               	movwf	4038,c	;volatile
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3254  001974  0E00               	movlw	0
  3255  001976  6EC5               	movwf	4037,c	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3259  001978  0E0E               	movlw	14
  3260  00197A  12C6               	iorwf	4038,f,c	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3264  00197C  8EC7               	bsf	4039,7,c	;volatile
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3268  00197E  8694               	bsf	3988,3,c	;volatile
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3272  001980  8894               	bsf	3988,4,c	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3276  001982  80C5               	bsf	4037,0,c	;volatile
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3280  001984  8AC6               	bsf	4038,5,c	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283  001986  0012               	return	
  3284  001988                     __end_of_i2c_configure_slave:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           prodh	equ	0xFF4
  3288                           prodl	equ	0xFF3
  3289                           postinc0	equ	0xFEE
  3290                           wreg	equ	0xFE8
  3291                           indf1	equ	0xFE7
  3292                           fsr1h	equ	0xFE2
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function _enable_interrupts *****************
  3302 ;; Defined at:
  3303 ;;		line 14 in file "src/interrupts.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;		None               void
  3310 ;; Registers used:
  3311 ;;		None
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:   10
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text17
  3332  001B16                     __ptext17:
  3333                           	opt stack 0
  3334  001B16                     _enable_interrupts:
  3335                           	opt stack 19
  3336                           
  3337                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;incstack = 0
  3341  001B16  8ED0               	bsf	4048,7,c	;volatile
  3342                           
  3343                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3344  001B18  8EF2               	bsf	intcon,7,c	;volatile
  3345                           
  3346                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3347  001B1A  8CF2               	bsf	intcon,6,c	;volatile
  3348  001B1C  0012               	return	
  3349  001B1E                     __end_of_enable_interrupts:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           intcon	equ	0xFF2
  3355                           postinc0	equ	0xFEE
  3356                           wreg	equ	0xFE8
  3357                           indf1	equ	0xFE7
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           postinc2	equ	0xFDE
  3362                           postdec2	equ	0xFDD
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _block_on_To_msgqueues *****************
  3368 ;; Defined at:
  3369 ;;		line 256 in file "src/messages.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;		None               void
  3376 ;; Registers used:
  3377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3383 ;;      Params:         0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:   13
  3390 ;; This function calls:
  3391 ;;		_Delay1KTCYx
  3392 ;;		_check_msg
  3393 ;;		_in_main
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text18
  3400  00147C                     __ptext18:
  3401                           	opt stack 0
  3402  00147C                     _block_on_To_msgqueues:
  3403                           	opt stack 16
  3404                           
  3405                           ;messages.c: 257: if (!in_main()) {
  3406                           
  3407                           ;incstack = 0
  3408  00147C  EC9A  F00B         	call	_in_main	;wreg free
  3409  001480  0100               	movlb	0	; () banked
  3410  001482  51D8               	movf	(?_in_main+1)& (0+255),w,b
  3411  001484  0100               	movlb	0	; () banked
  3412  001486  11D7               	iorwf	?_in_main& (0+255),w,b
  3413  001488  B4D8               	btfsc	status,2,c
  3414  00148A  0012               	return	
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;messages.c: 259: }
  3418                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3419                           
  3420                           ; BSR set to: 0
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;messages.c: 258: return;
  3424  00148C  0E01               	movlw	1
  3425  00148E  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3426  001490                     l3638:
  3427                           
  3428                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3429  001490  0101               	movlb	1	; () banked
  3430  001492  0E01               	movlw	high _ToMainHigh_MQ
  3431  001494  0100               	movlb	0	; () banked
  3432  001496  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3433  001498  0101               	movlb	1	; () banked
  3434  00149A  0E6C               	movlw	low _ToMainHigh_MQ
  3435  00149C  0100               	movlb	0	; () banked
  3436  00149E  6FD3               	movwf	check_msg@qptr& (0+255),b
  3437  0014A0  EC39  F00C         	call	_check_msg	;wreg free
  3438  0014A4  0900               	iorlw	0
  3439  0014A6  B4D8               	btfsc	status,2,c
  3440  0014A8  D003               	goto	l3644
  3441                           
  3442                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3443  0014AA  0E00               	movlw	0
  3444  0014AC  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3445  0014AE  0012               	return	
  3446  0014B0                     l3644:
  3447                           
  3448                           ;messages.c: 271: }
  3449                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3450  0014B0  0100               	movlb	0	; () banked
  3451  0014B2  0E00               	movlw	high _ToMainLow_MQ
  3452  0014B4  0100               	movlb	0	; () banked
  3453  0014B6  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3454  0014B8  0100               	movlb	0	; () banked
  3455  0014BA  0E80               	movlw	low _ToMainLow_MQ
  3456  0014BC  0100               	movlb	0	; () banked
  3457  0014BE  6FD3               	movwf	check_msg@qptr& (0+255),b
  3458  0014C0  EC39  F00C         	call	_check_msg	;wreg free
  3459  0014C4  0900               	iorlw	0
  3460  0014C6  B4D8               	btfsc	status,2,c
  3461  0014C8  D003               	goto	l3650
  3462                           
  3463                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3464  0014CA  0E00               	movlw	0
  3465  0014CC  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3466  0014CE  0012               	return	
  3467  0014D0                     l3650:
  3468                           
  3469                           ;messages.c: 278: }
  3470                           ;messages.c: 279: Delay1KTCYx(10);
  3471  0014D0  0E0A               	movlw	10
  3472  0014D2  EC51  F00D         	call	_Delay1KTCYx
  3473  0014D6  D7DC               	goto	l3638
  3474  0014D8                     __end_of_block_on_To_msgqueues:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           intcon	equ	0xFF2
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           indf1	equ	0xFE7
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _in_main *****************
  3493 ;; Defined at:
  3494 ;;		line 40 in file "src/interrupts.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  2   33[BANK0 ] int 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3508 ;;      Params:         0       2       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0
  3511 ;;      Totals:         0       2       0       0       0
  3512 ;;Total ram usage:        2 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:   12
  3515 ;; This function calls:
  3516 ;;		_in_high_int
  3517 ;;		_in_low_int
  3518 ;; This function is called by:
  3519 ;;		_block_on_To_msgqueues
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text19
  3524  001734                     __ptext19:
  3525                           	opt stack 0
  3526  001734                     _in_main:
  3527                           	opt stack 16
  3528                           
  3529                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3530                           
  3531                           ;incstack = 0
  3532  001734  EC7B  F00B         	call	_in_low_int	;wreg free
  3533  001738  0100               	movlb	0	; () banked
  3534  00173A  51D6               	movf	(?_in_low_int+1)& (0+255),w,b
  3535  00173C  0100               	movlb	0	; () banked
  3536  00173E  11D5               	iorwf	?_in_low_int& (0+255),w,b
  3537  001740  A4D8               	btfss	status,2,c
  3538  001742  D00F               	goto	l3174
  3539                           
  3540                           ; BSR set to: 0
  3541  001744  EC76  F00D         	call	_in_high_int	;wreg free
  3542  001748  0100               	movlb	0	; () banked
  3543  00174A  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3544  00174C  0100               	movlb	0	; () banked
  3545  00174E  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3546  001750  A4D8               	btfss	status,2,c
  3547  001752  D007               	goto	l3174
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;interrupts.c: 42: return (1);
  3551  001754  0E00               	movlw	0
  3552  001756  0100               	movlb	0	; () banked
  3553  001758  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3554  00175A  0E01               	movlw	1
  3555  00175C  0100               	movlb	0	; () banked
  3556  00175E  6FD7               	movwf	?_in_main& (0+255),b
  3557  001760  0012               	return	
  3558  001762                     l3174:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;interrupts.c: 44: return (0);
  3562  001762  0E00               	movlw	0
  3563  001764  0100               	movlb	0	; () banked
  3564  001766  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3565  001768  0E00               	movlw	0
  3566  00176A  0100               	movlb	0	; () banked
  3567  00176C  6FD7               	movwf	?_in_main& (0+255),b
  3568  00176E  0012               	return	
  3569  001770                     __end_of_in_main:
  3570                           	opt stack 0
  3571                           tblptru	equ	0xFF8
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           indf1	equ	0xFE7
  3578                           fsr1h	equ	0xFE2
  3579                           fsr1l	equ	0xFE1
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _in_low_int *****************
  3588 ;; Defined at:
  3589 ;;		line 30 in file "src/interrupts.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2   31[BANK0 ] int 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3603 ;;      Params:         0       2       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0
  3606 ;;      Totals:         0       2       0       0       0
  3607 ;;Total ram usage:        2 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:   11
  3610 ;; This function calls:
  3611 ;;		_in_high_int
  3612 ;; This function is called by:
  3613 ;;		_in_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text20
  3618  0016F6                     __ptext20:
  3619                           	opt stack 0
  3620  0016F6                     _in_low_int:
  3621                           	opt stack 16
  3622                           
  3623                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;incstack = 0
  3627  0016F6  ACF2               	btfss	intcon,6,c	;volatile
  3628  0016F8  D007               	goto	l3036
  3629                           
  3630                           ;interrupts.c: 32: return (0);
  3631  0016FA  0E00               	movlw	0
  3632  0016FC  0100               	movlb	0	; () banked
  3633  0016FE  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3634  001700  0E00               	movlw	0
  3635  001702  0100               	movlb	0	; () banked
  3636  001704  6FD5               	movwf	?_in_low_int& (0+255),b
  3637  001706  0012               	return	
  3638  001708                     l3036:
  3639  001708  EC76  F00D         	call	_in_high_int	;wreg free
  3640  00170C  0100               	movlb	0	; () banked
  3641  00170E  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3642  001710  0100               	movlb	0	; () banked
  3643  001712  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3644  001714  B4D8               	btfsc	status,2,c
  3645  001716  D007               	goto	l3044
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;interrupts.c: 34: return (0);
  3649  001718  0E00               	movlw	0
  3650  00171A  0100               	movlb	0	; () banked
  3651  00171C  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3652  00171E  0E00               	movlw	0
  3653  001720  0100               	movlb	0	; () banked
  3654  001722  6FD5               	movwf	?_in_low_int& (0+255),b
  3655  001724  0012               	return	
  3656  001726                     l3044:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;interrupts.c: 36: return (1);
  3660  001726  0E00               	movlw	0
  3661  001728  0100               	movlb	0	; () banked
  3662  00172A  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3663  00172C  0E01               	movlw	1
  3664  00172E  0100               	movlb	0	; () banked
  3665  001730  6FD5               	movwf	?_in_low_int& (0+255),b
  3666  001732  0012               	return	
  3667  001734                     __end_of_in_low_int:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           prodh	equ	0xFF4
  3671                           prodl	equ	0xFF3
  3672                           intcon	equ	0xFF2
  3673                           postinc0	equ	0xFEE
  3674                           wreg	equ	0xFE8
  3675                           indf1	equ	0xFE7
  3676                           fsr1h	equ	0xFE2
  3677                           fsr1l	equ	0xFE1
  3678                           indf2	equ	0xFDF
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function _in_high_int *****************
  3686 ;; Defined at:
  3687 ;;		line 22 in file "src/interrupts.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2   29[BANK0 ] int 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3701 ;;      Params:         0       2       0       0       0
  3702 ;;      Locals:         0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         0       2       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:   10
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_in_low_int
  3712 ;;		_in_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text21
  3717  001AEC                     __ptext21:
  3718                           	opt stack 0
  3719  001AEC                     _in_high_int:
  3720                           	opt stack 16
  3721                           
  3722                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;incstack = 0
  3726  001AEC  0E00               	movlw	0
  3727  001AEE  AEF2               	btfss	intcon,7,c	;volatile
  3728  001AF0  0E01               	movlw	1
  3729  001AF2  0100               	movlb	0	; () banked
  3730  001AF4  6FD3               	movwf	?_in_high_int& (0+255),b
  3731  001AF6  0100               	movlb	0	; () banked
  3732  001AF8  6BD4               	clrf	(?_in_high_int+1)& (0+255),b
  3733  001AFA  0012               	return	
  3734  001AFC                     __end_of_in_high_int:
  3735                           	opt stack 0
  3736                           tblptru	equ	0xFF8
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           postinc0	equ	0xFEE
  3741                           wreg	equ	0xFE8
  3742                           indf1	equ	0xFE7
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           postdec2	equ	0xFDD
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function _check_msg *****************
  3753 ;; Defined at:
  3754 ;;		line 220 in file "src/messages.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3757 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      unsigned char 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3769 ;;      Params:         0       2       0       0       0
  3770 ;;      Locals:         0       0       0       0       0
  3771 ;;      Temps:          0       1       0       0       0
  3772 ;;      Totals:         0       3       0       0       0
  3773 ;;Total ram usage:        3 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:   10
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_block_on_To_msgqueues
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text22
  3784  001872                     __ptext22:
  3785                           	opt stack 0
  3786  001872                     _check_msg:
  3787                           	opt stack 18
  3788                           
  3789                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;incstack = 0
  3793  001872  0100               	movlb	0	; () banked
  3794  001874  EE20 F035          	lfsr	2,53
  3795  001878  0100               	movlb	0	; () banked
  3796  00187A  51D3               	movf	check_msg@qptr& (0+255),w,b
  3797  00187C  26D9               	addwf	fsr2l,f,c
  3798  00187E  0100               	movlb	0	; () banked
  3799  001880  51D4               	movf	(check_msg@qptr+1)& (0+255),w,b
  3800  001882  22DA               	addwfc	fsr2h,f,c
  3801  001884  50DF               	movf	indf2,w,c
  3802  001886  0100               	movlb	0	; () banked
  3803  001888  6FD5               	movwf	??_check_msg& (0+255),b
  3804  00188A  0100               	movlb	0	; () banked
  3805  00188C  51D5               	movf	??_check_msg& (0+255),w,b
  3806  00188E  0D0D               	mullw	13
  3807  001890  50F3               	movf	prodl,w,c
  3808  001892  0100               	movlb	0	; () banked
  3809  001894  25D3               	addwf	check_msg@qptr& (0+255),w,b
  3810  001896  6ED9               	movwf	fsr2l,c
  3811  001898  50F4               	movf	prodh,w,c
  3812  00189A  0100               	movlb	0	; () banked
  3813  00189C  21D4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3814  00189E  6EDA               	movwf	fsr2h,c
  3815  0018A0  50DF               	movf	indf2,w,c
  3816  0018A2  0012               	return	
  3817  0018A4                     __end_of_check_msg:
  3818                           	opt stack 0
  3819                           tblptru	equ	0xFF8
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           intcon	equ	0xFF2
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           indf1	equ	0xFE7
  3826                           fsr1h	equ	0xFE2
  3827                           fsr1l	equ	0xFE1
  3828                           indf2	equ	0xFDF
  3829                           postinc2	equ	0xFDE
  3830                           postdec2	equ	0xFDD
  3831                           fsr2h	equ	0xFDA
  3832                           fsr2l	equ	0xFD9
  3833                           status	equ	0xFD8
  3834                           
  3835 ;; *************** function _Delay1KTCYx *****************
  3836 ;; Defined at:
  3837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  unit            1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  unit            1   29[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         0       1       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0       1       0       0       0
  3855 ;;Total ram usage:        1 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   10
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_block_on_To_msgqueues
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text23
  3866  001AA2                     __ptext23:
  3867                           	opt stack 0
  3868  001AA2                     _Delay1KTCYx:
  3869                           	opt stack 18
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873                           ;Delay1KTCYx@unit stored from wreg
  3874  001AA2  0100               	movlb	0	; () banked
  3875  001AA4  6FD3               	movwf	Delay1KTCYx@unit& (0+255),b
  3876  001AA6                     l743:
  3877                           
  3878                           ; BSR set to: 0
  3879                           
  3880                           ; BSR set to: 0
  3881  001AA6  0EFA               	movlw	250
  3882  001AA8                     u2947:
  3883  001AA8  F000               	nop	
  3884  001AAA  2EE8               	decfsz	wreg,f,c
  3885  001AAC  D7FD               	goto	u2947
  3886  001AAE  0100               	movlb	0	; () banked
  3887  001AB0  2FD3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3888  001AB2  D7F9               	goto	l743
  3889  001AB4  0012               	return	
  3890  001AB6                     __end_of_Delay1KTCYx:
  3891                           	opt stack 0
  3892                           tblptru	equ	0xFF8
  3893                           prodh	equ	0xFF4
  3894                           prodl	equ	0xFF3
  3895                           intcon	equ	0xFF2
  3896                           postinc0	equ	0xFEE
  3897                           wreg	equ	0xFE8
  3898                           indf1	equ	0xFE7
  3899                           fsr1h	equ	0xFE2
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _ToMainLow_recvmsg *****************
  3909 ;; Defined at:
  3910 ;;		line 112 in file "src/messages.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  maxlength       1    wreg     unsigned char 
  3913 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3914 ;;		 -> main@msgtype(1), 
  3915 ;;  data            2   14[BANK1 ] PTR void 
  3916 ;;		 -> main@msgbuffer(11), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  maxlength       1   41[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      char 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3928 ;;      Params:         0       0       4       0       0
  3929 ;;      Locals:         0       1       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         0       1       4       0       0
  3932 ;;Total ram usage:        5 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:   12
  3935 ;; This function calls:
  3936 ;;		_recv_msg
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text24
  3943  001770                     __ptext24:
  3944                           	opt stack 0
  3945  001770                     _ToMainLow_recvmsg:
  3946                           	opt stack 17
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;incstack = 0
  3950                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3951  001770  0100               	movlb	0	; () banked
  3952  001772  6FDF               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3956  001774  0100               	movlb	0	; () banked
  3957  001776  0E00               	movlw	high _ToMainLow_MQ
  3958  001778  0101               	movlb	1	; () banked
  3959  00177A  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3960  00177C  0100               	movlb	0	; () banked
  3961  00177E  0E80               	movlw	low _ToMainLow_MQ
  3962  001780  0101               	movlb	1	; () banked
  3963  001782  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3964  001784  C0DF  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3965  001788  0101               	movlb	1	; () banked
  3966  00178A  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3967  00178E  0101               	movlb	1	; () banked
  3968  001790  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3969  001794  0101               	movlb	1	; () banked
  3970  001796  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3971  00179A  0101               	movlb	1	; () banked
  3972  00179C  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3973  0017A0  EC4C  F004         	call	_recv_msg	;wreg free
  3974  0017A4  0012               	return	
  3975  0017A6                     __end_of_ToMainLow_recvmsg:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           prodh	equ	0xFF4
  3979                           prodl	equ	0xFF3
  3980                           intcon	equ	0xFF2
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           indf1	equ	0xFE7
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           indf2	equ	0xFDF
  3987                           postinc2	equ	0xFDE
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _ToMainHigh_recvmsg *****************
  3994 ;; Defined at:
  3995 ;;		line 135 in file "src/messages.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  maxlength       1    wreg     unsigned char 
  3998 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3999 ;;		 -> main@msgtype(1), 
  4000 ;;  data            2   14[BANK1 ] PTR void 
  4001 ;;		 -> main@msgbuffer(11), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  maxlength       1   41[BANK0 ] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      char 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4013 ;;      Params:         0       0       4       0       0
  4014 ;;      Locals:         0       1       0       0       0
  4015 ;;      Temps:          0       0       0       0       0
  4016 ;;      Totals:         0       1       4       0       0
  4017 ;;Total ram usage:        5 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:   12
  4020 ;; This function calls:
  4021 ;;		_recv_msg
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text25
  4028  0017A6                     __ptext25:
  4029                           	opt stack 0
  4030  0017A6                     _ToMainHigh_recvmsg:
  4031                           	opt stack 17
  4032                           
  4033                           ;incstack = 0
  4034                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4035  0017A6  0100               	movlb	0	; () banked
  4036  0017A8  6FDF               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4040  0017AA  0101               	movlb	1	; () banked
  4041  0017AC  0E01               	movlw	high _ToMainHigh_MQ
  4042  0017AE  0101               	movlb	1	; () banked
  4043  0017B0  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  4044  0017B2  0101               	movlb	1	; () banked
  4045  0017B4  0E6C               	movlw	low _ToMainHigh_MQ
  4046  0017B6  0101               	movlb	1	; () banked
  4047  0017B8  6FA2               	movwf	recv_msg@qptr& (0+255),b
  4048  0017BA  C0DF  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4049  0017BE  0101               	movlb	1	; () banked
  4050  0017C0  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4051  0017C4  0101               	movlb	1	; () banked
  4052  0017C6  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4053  0017CA  0101               	movlb	1	; () banked
  4054  0017CC  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4055  0017D0  0101               	movlb	1	; () banked
  4056  0017D2  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4057  0017D6  EC4C  F004         	call	_recv_msg	;wreg free
  4058  0017DA  0012               	return	
  4059  0017DC                     __end_of_ToMainHigh_recvmsg:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           indf1	equ	0xFE7
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _recv_msg *****************
  4078 ;; Defined at:
  4079 ;;		line 63 in file "src/messages.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4082 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4083 ;;  maxlength       1    2[BANK1 ] unsigned char 
  4084 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  4085 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4086 ;;  data            2    5[BANK1 ] PTR void 
  4087 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  4090 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4091 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4092 ;;  tlength         2    8[BANK1 ] unsigned int 
  4093 ;;  slot            1    7[BANK1 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      char 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4103 ;;      Params:         0       0       7       0       0
  4104 ;;      Locals:         0       0       5       0       0
  4105 ;;      Temps:          0       2       0       0       0
  4106 ;;      Totals:         0       2      12       0       0
  4107 ;;Total ram usage:       14 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:   11
  4110 ;; This function calls:
  4111 ;;		_memcpy
  4112 ;; This function is called by:
  4113 ;;		_ToMainLow_recvmsg
  4114 ;;		_ToMainHigh_recvmsg
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text26
  4119  000898                     __ptext26:
  4120                           	opt stack 0
  4121  000898                     _recv_msg:
  4122                           	opt stack 17
  4123                           
  4124                           ;messages.c: 64: unsigned char slot;
  4125                           ;messages.c: 68: msg *qmsg;
  4126                           ;messages.c: 69: size_t tlength;
  4127                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4128                           
  4129                           ;incstack = 0
  4130  000898  0101               	movlb	1	; () banked
  4131  00089A  EE20 F035          	lfsr	2,53
  4132  00089E  0101               	movlb	1	; () banked
  4133  0008A0  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4134  0008A2  26D9               	addwf	fsr2l,f,c
  4135  0008A4  0101               	movlb	1	; () banked
  4136  0008A6  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4137  0008A8  22DA               	addwfc	fsr2h,f,c
  4138  0008AA  50DF               	movf	indf2,w,c
  4139  0008AC  0101               	movlb	1	; () banked
  4140  0008AE  6FA9               	movwf	recv_msg@slot& (0+255),b
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4144  0008B0  0101               	movlb	1	; () banked
  4145  0008B2  51A9               	movf	recv_msg@slot& (0+255),w,b
  4146  0008B4  0D0D               	mullw	13
  4147  0008B6  50F3               	movf	prodl,w,c
  4148  0008B8  0101               	movlb	1	; () banked
  4149  0008BA  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  4150  0008BC  0101               	movlb	1	; () banked
  4151  0008BE  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  4152  0008C0  50F4               	movf	prodh,w,c
  4153  0008C2  0101               	movlb	1	; () banked
  4154  0008C4  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4155  0008C6  0101               	movlb	1	; () banked
  4156  0008C8  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;messages.c: 74: if (qmsg->full == 1) {
  4160  0008CA  0E01               	movlw	1
  4161  0008CC  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4162  0008D0  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4163  0008D4  62DF               	cpfseq	indf2,c
  4164  0008D6  D06F               	goto	l3220
  4165                           
  4166                           ; BSR set to: 1
  4167                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4168  0008D8  0101               	movlb	1	; () banked
  4169  0008DA  EE20 F001          	lfsr	2,1
  4170  0008DE  0101               	movlb	1	; () banked
  4171  0008E0  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4172  0008E2  26D9               	addwf	fsr2l,f,c
  4173  0008E4  0101               	movlb	1	; () banked
  4174  0008E6  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4175  0008E8  22DA               	addwfc	fsr2h,f,c
  4176  0008EA  50DF               	movf	indf2,w,c
  4177  0008EC  0101               	movlb	1	; () banked
  4178  0008EE  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  4179  0008F0  B0D8               	btfsc	status,0,c
  4180  0008F2  D002               	goto	l3204
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;messages.c: 77: return (-3);
  4184  0008F4  0EFD               	movlw	253
  4185  0008F6  0012               	return	
  4186  0008F8                     l3204:
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;messages.c: 78: }
  4190                           ;messages.c: 80: tlength = qmsg->length;
  4191  0008F8  0101               	movlb	1	; () banked
  4192  0008FA  EE20 F001          	lfsr	2,1
  4193  0008FE  0101               	movlb	1	; () banked
  4194  000900  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4195  000902  26D9               	addwf	fsr2l,f,c
  4196  000904  0101               	movlb	1	; () banked
  4197  000906  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4198  000908  22DA               	addwfc	fsr2h,f,c
  4199  00090A  50DF               	movf	indf2,w,c
  4200  00090C  0100               	movlb	0	; () banked
  4201  00090E  6FDD               	movwf	??_recv_msg& (0+255),b
  4202  000910  0100               	movlb	0	; () banked
  4203  000912  51DD               	movf	??_recv_msg& (0+255),w,b
  4204  000914  0101               	movlb	1	; () banked
  4205  000916  6FAA               	movwf	recv_msg@tlength& (0+255),b
  4206  000918  0101               	movlb	1	; () banked
  4207  00091A  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  4208                           
  4209                           ; BSR set to: 1
  4210                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4211  00091C  0101               	movlb	1	; () banked
  4212  00091E  0100               	movlb	0	; () banked
  4213  000920  C1A8  F0D4         	movff	recv_msg@data+1,memcpy@d1+1
  4214  000924  0101               	movlb	1	; () banked
  4215  000926  0100               	movlb	0	; () banked
  4216  000928  C1A7  F0D3         	movff	recv_msg@data,memcpy@d1
  4217  00092C  0E03               	movlw	3
  4218  00092E  0101               	movlb	1	; () banked
  4219  000930  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  4220  000932  0100               	movlb	0	; () banked
  4221  000934  6FDD               	movwf	??_recv_msg& (0+255),b
  4222  000936  0E00               	movlw	0
  4223  000938  0101               	movlb	1	; () banked
  4224  00093A  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4225  00093C  0100               	movlb	0	; () banked
  4226  00093E  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  4227  000940  C0DD  F0D5         	movff	??_recv_msg,memcpy@s1
  4228  000944  C0DE  F0D6         	movff	??_recv_msg+1,memcpy@s1+1
  4229  000948  C1AA  F0D7         	movff	recv_msg@tlength,memcpy@n
  4230  00094C  C1AB  F0D8         	movff	recv_msg@tlength+1,memcpy@n+1
  4231  000950  ECEC  F00A         	call	_memcpy	;wreg free
  4232                           
  4233                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4234  000954  0101               	movlb	1	; () banked
  4235  000956  EE20 F035          	lfsr	2,53
  4236  00095A  0101               	movlb	1	; () banked
  4237  00095C  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4238  00095E  26D9               	addwf	fsr2l,f,c
  4239  000960  0101               	movlb	1	; () banked
  4240  000962  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4241  000964  22DA               	addwfc	fsr2h,f,c
  4242  000966  0101               	movlb	1	; () banked
  4243  000968  EE10 F035          	lfsr	1,53
  4244  00096C  0101               	movlb	1	; () banked
  4245  00096E  51A2               	movf	recv_msg@qptr& (0+255),w,b
  4246  000970  26E1               	addwf	fsr1l,f,c
  4247  000972  0101               	movlb	1	; () banked
  4248  000974  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4249  000976  22E2               	addwfc	fsr1h,f,c
  4250  000978  50E7               	movf	indf1,w,c
  4251  00097A  0100               	movlb	0	; () banked
  4252  00097C  6FDD               	movwf	??_recv_msg& (0+255),b
  4253  00097E  0100               	movlb	0	; () banked
  4254  000980  29DD               	incf	??_recv_msg& (0+255),w,b
  4255  000982  0B03               	andlw	3
  4256  000984  6EDF               	movwf	indf2,c
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4260  000986  0101               	movlb	1	; () banked
  4261  000988  EE20 F002          	lfsr	2,2
  4262  00098C  0101               	movlb	1	; () banked
  4263  00098E  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4264  000990  26D9               	addwf	fsr2l,f,c
  4265  000992  0101               	movlb	1	; () banked
  4266  000994  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4267  000996  22DA               	addwfc	fsr2h,f,c
  4268  000998  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  4269  00099C  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4270  0009A0  CFDF FFE7          	movff	indf2,indf1
  4271                           
  4272                           ; BSR set to: 1
  4273                           ;messages.c: 91: qmsg->full = 0;
  4274  0009A4  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4275  0009A8  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4276  0009AC  0E00               	movlw	0
  4277  0009AE  6EDF               	movwf	indf2,c
  4278                           
  4279                           ; BSR set to: 1
  4280                           ;messages.c: 92: return (tlength);
  4281  0009B0  0101               	movlb	1	; () banked
  4282  0009B2  51AA               	movf	recv_msg@tlength& (0+255),w,b
  4283  0009B4  0012               	return	
  4284  0009B6                     l3220:
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;messages.c: 94: return (-4);
  4288  0009B6  0EFC               	movlw	252
  4289  0009B8  0012               	return	
  4290  0009BA                     __end_of_recv_msg:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           indf1	equ	0xFE7
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           postinc2	equ	0xFDE
  4303                           postdec2	equ	0xFDD
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function _memcpy *****************
  4309 ;; Defined at:
  4310 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  d1              2   29[BANK0 ] PTR void 
  4313 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4314 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4315 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4316 ;;  s1              2   31[BANK0 ] PTR const void 
  4317 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4318 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4319 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4320 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4321 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  4322 ;;  n               2   33[BANK0 ] unsigned int 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  4325 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4326 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4327 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4328 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4329 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  4330 ;;  d               2   35[BANK0 ] PTR unsigned char 
  4331 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4332 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4333 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2   29[BANK0 ] PTR void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4343 ;;      Params:         0       6       0       0       0
  4344 ;;      Locals:         0       4       0       0       0
  4345 ;;      Temps:          0       0       0       0       0
  4346 ;;      Totals:         0      10       0       0       0
  4347 ;;Total ram usage:       10 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:   10
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_send_msg
  4354 ;;		_recv_msg
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text27
  4359  0015D8                     __ptext27:
  4360                           	opt stack 0
  4361  0015D8                     _memcpy:
  4362                           	opt stack 16
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;incstack = 0
  4366  0015D8  0100               	movlb	0	; () banked
  4367  0015DA  C0D6  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  4368  0015DE  0100               	movlb	0	; () banked
  4369  0015E0  C0D5  F0DB         	movff	memcpy@s1,memcpy@s
  4370  0015E4  0100               	movlb	0	; () banked
  4371  0015E6  C0D4  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  4372  0015EA  0100               	movlb	0	; () banked
  4373  0015EC  C0D3  F0D9         	movff	memcpy@d1,memcpy@d
  4374  0015F0  D010               	goto	l2978
  4375  0015F2                     l2972:
  4376                           
  4377                           ; BSR set to: 0
  4378  0015F2  C0DB  FFD9         	movff	memcpy@s,fsr2l
  4379  0015F6  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  4380  0015FA  C0D9  FFE1         	movff	memcpy@d,fsr1l
  4381  0015FE  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  4382  001602  CFDF FFE7          	movff	indf2,indf1
  4383                           
  4384                           ; BSR set to: 0
  4385  001606  0100               	movlb	0	; () banked
  4386  001608  4BDB               	infsnz	memcpy@s& (0+255),f,b
  4387  00160A  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  4388                           
  4389                           ; BSR set to: 0
  4390  00160C  0100               	movlb	0	; () banked
  4391  00160E  4BD9               	infsnz	memcpy@d& (0+255),f,b
  4392  001610  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  4393  001612                     l2978:
  4394                           
  4395                           ; BSR set to: 0
  4396  001612  0100               	movlb	0	; () banked
  4397  001614  07D7               	decf	memcpy@n& (0+255),f,b
  4398  001616  A0D8               	btfss	status,0,c
  4399  001618  07D8               	decf	(memcpy@n+1)& (0+255),f,b
  4400  00161A  0100               	movlb	0	; () banked
  4401  00161C  29D7               	incf	memcpy@n& (0+255),w,b
  4402  00161E  B4D8               	btfsc	status,2,c
  4403  001620  29D8               	incf	(memcpy@n+1)& (0+255),w,b
  4404  001622  B4D8               	btfsc	status,2,c
  4405                           
  4406                           ; BSR set to: 0
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;	Return value of _memcpy is never used
  4410  001624  0012               	return	
  4411  001626  D7E5               	goto	l2972
  4412  001628                     __end_of_memcpy:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           postinc0	equ	0xFEE
  4419                           wreg	equ	0xFE8
  4420                           indf1	equ	0xFE7
  4421                           fsr1h	equ	0xFE2
  4422                           fsr1l	equ	0xFE1
  4423                           indf2	equ	0xFDF
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           fsr2h	equ	0xFDA
  4427                           fsr2l	equ	0xFD9
  4428                           status	equ	0xFD8
  4429                           
  4430 ;; *************** function _OpenUSART *****************
  4431 ;; Defined at:
  4432 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  config          1    wreg     unsigned char 
  4435 ;;  spbrg           2   29[BANK0 ] unsigned int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  config          1   34[BANK0 ] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;		None               void
  4440 ;; Registers used:
  4441 ;;		wreg, status,2
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4447 ;;      Params:         0       2       0       0       0
  4448 ;;      Locals:         0       1       0       0       0
  4449 ;;      Temps:          0       3       0       0       0
  4450 ;;      Totals:         0       6       0       0       0
  4451 ;;Total ram usage:        6 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:   10
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text28
  4462  0011EE                     __ptext28:
  4463                           	opt stack 0
  4464  0011EE                     _OpenUSART:
  4465                           	opt stack 19
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469                           ;OpenUSART@config stored from wreg
  4470  0011EE  0100               	movlb	0	; () banked
  4471  0011F0  6FD8               	movwf	OpenUSART@config& (0+255),b
  4472                           
  4473                           ; BSR set to: 0
  4474  0011F2  0E00               	movlw	0
  4475  0011F4  6EAC               	movwf	4012,c	;volatile
  4476  0011F6  0E00               	movlw	0
  4477  0011F8  6EAB               	movwf	4011,c	;volatile
  4478                           
  4479                           ; BSR set to: 0
  4480  0011FA  0100               	movlb	0	; () banked
  4481  0011FC  B1D8               	btfsc	OpenUSART@config& (0+255),0,b
  4482                           
  4483                           ; BSR set to: 0
  4484  0011FE  88AC               	bsf	4012,4,c	;volatile
  4485                           
  4486                           ; BSR set to: 0
  4487                           
  4488                           ; BSR set to: 0
  4489  001200  0100               	movlb	0	; () banked
  4490  001202  A3D8               	btfss	OpenUSART@config& (0+255),1,b
  4491  001204  D002               	goto	l3570
  4492                           
  4493                           ; BSR set to: 0
  4494  001206  8CAC               	bsf	4012,6,c	;volatile
  4495  001208  8CAB               	bsf	4011,6,c	;volatile
  4496  00120A                     l3570:
  4497                           
  4498                           ; BSR set to: 0
  4499  00120A  0100               	movlb	0	; () banked
  4500  00120C  B5D8               	btfsc	OpenUSART@config& (0+255),2,b
  4501                           
  4502                           ; BSR set to: 0
  4503  00120E  8EAC               	bsf	4012,7,c	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506                           
  4507                           ; BSR set to: 0
  4508  001210  0100               	movlb	0	; () banked
  4509  001212  A7D8               	btfss	OpenUSART@config& (0+255),3,b
  4510  001214  D002               	goto	l495
  4511                           
  4512                           ; BSR set to: 0
  4513  001216  88AB               	bsf	4011,4,c	;volatile
  4514  001218  D001               	goto	l3578
  4515  00121A                     l495:
  4516                           
  4517                           ; BSR set to: 0
  4518  00121A  8AAB               	bsf	4011,5,c	;volatile
  4519  00121C                     l3578:
  4520                           
  4521                           ; BSR set to: 0
  4522  00121C  0100               	movlb	0	; () banked
  4523  00121E  B9D8               	btfsc	OpenUSART@config& (0+255),4,b
  4524                           
  4525                           ; BSR set to: 0
  4526  001220  84AC               	bsf	4012,2,c	;volatile
  4527                           
  4528                           ; BSR set to: 0
  4529  001222  989E               	bcf	3998,4,c	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532  001224  0100               	movlb	0	; () banked
  4533  001226  BBD8               	btfsc	OpenUSART@config& (0+255),5,b
  4534                           
  4535                           ; BSR set to: 0
  4536  001228  86AB               	bsf	4011,3,c	;volatile
  4537                           
  4538                           ; BSR set to: 0
  4539                           
  4540                           ; BSR set to: 0
  4541  00122A  0100               	movlb	0	; () banked
  4542  00122C  ADD8               	btfss	OpenUSART@config& (0+255),6,b
  4543  00122E  D002               	goto	l499
  4544                           
  4545                           ; BSR set to: 0
  4546  001230  8A9D               	bsf	3997,5,c	;volatile
  4547  001232  D001               	goto	l500
  4548  001234                     l499:
  4549                           
  4550                           ; BSR set to: 0
  4551  001234  9A9D               	bcf	3997,5,c	;volatile
  4552  001236                     l500:
  4553                           
  4554                           ; BSR set to: 0
  4555  001236  9A9E               	bcf	3998,5,c	;volatile
  4556                           
  4557                           ; BSR set to: 0
  4558  001238  0100               	movlb	0	; () banked
  4559  00123A  AFD8               	btfss	OpenUSART@config& (0+255),7,b
  4560  00123C  D002               	goto	l501
  4561                           
  4562                           ; BSR set to: 0
  4563  00123E  889D               	bsf	3997,4,c	;volatile
  4564  001240  D001               	goto	l502
  4565  001242                     l501:
  4566                           
  4567                           ; BSR set to: 0
  4568  001242  989D               	bcf	3997,4,c	;volatile
  4569  001244                     l502:
  4570                           
  4571                           ; BSR set to: 0
  4572  001244  C0D3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4573                           
  4574                           ; BSR set to: 0
  4575  001248  0100               	movlb	0	; () banked
  4576  00124A  C0D4  F0D5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4577  00124E  C0D5  F0D6         	movff	??_OpenUSART,??_OpenUSART+1
  4578  001252  0100               	movlb	0	; () banked
  4579  001254  6BD7               	clrf	(??_OpenUSART+2)& (0+255),b
  4580  001256  0100               	movlb	0	; () banked
  4581  001258  51D6               	movf	(??_OpenUSART+1)& (0+255),w,b
  4582  00125A  6EB0               	movwf	4016,c	;volatile
  4583                           
  4584                           ; BSR set to: 0
  4585  00125C  8AAC               	bsf	4012,5,c	;volatile
  4586                           
  4587                           ; BSR set to: 0
  4588  00125E  8EAB               	bsf	4011,7,c	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591  001260  9C94               	bcf	3988,6,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594  001262  8E94               	bsf	3988,7,c	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597  001264  A8AC               	btfss	4012,4,c	;volatile
  4598  001266  0012               	return	
  4599                           
  4600                           ; BSR set to: 0
  4601  001268  BEAC               	btfsc	4012,7,c	;volatile
  4602  00126A  0012               	return	
  4603                           
  4604                           ; BSR set to: 0
  4605  00126C  8C94               	bsf	3988,6,c	;volatile
  4606  00126E  0012               	return	
  4607  001270                     __end_of_OpenUSART:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           intcon	equ	0xFF2
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           indf1	equ	0xFE7
  4616                           fsr1h	equ	0xFE2
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _OpenTimer1 *****************
  4626 ;; Defined at:
  4627 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  config          1    wreg     unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  config          1   29[BANK0 ] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;		None               void
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4641 ;;      Params:         0       0       0       0       0
  4642 ;;      Locals:         0       1       0       0       0
  4643 ;;      Temps:          0       0       0       0       0
  4644 ;;      Totals:         0       1       0       0       0
  4645 ;;Total ram usage:        1 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:   10
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text29
  4656  0018A4                     __ptext29:
  4657                           	opt stack 0
  4658  0018A4                     _OpenTimer1:
  4659                           	opt stack 19
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;incstack = 0
  4663                           ;OpenTimer1@config stored from wreg
  4664  0018A4  0100               	movlb	0	; () banked
  4665  0018A6  6FD3               	movwf	OpenTimer1@config& (0+255),b
  4666                           
  4667                           ; BSR set to: 0
  4668  0018A8  0100               	movlb	0	; () banked
  4669  0018AA  51D3               	movf	OpenTimer1@config& (0+255),w,b
  4670  0018AC  0B7E               	andlw	126
  4671  0018AE  6ECD               	movwf	4045,c	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674  0018B0  0100               	movlb	0	; () banked
  4675  0018B2  ADD3               	btfss	OpenTimer1@config& (0+255),6,b
  4676  0018B4  D002               	goto	l451
  4677                           
  4678                           ; BSR set to: 0
  4679  0018B6  8ECD               	bsf	4045,7,c	;volatile
  4680  0018B8  D001               	goto	l3552
  4681  0018BA                     l451:
  4682                           
  4683                           ; BSR set to: 0
  4684  0018BA  9ECD               	bcf	4045,7,c	;volatile
  4685  0018BC                     l3552:
  4686                           
  4687                           ; BSR set to: 0
  4688  0018BC  0E00               	movlw	0
  4689  0018BE  6ECF               	movwf	4047,c	;volatile
  4690  0018C0  0E00               	movlw	0
  4691  0018C2  6ECE               	movwf	4046,c	;volatile
  4692                           
  4693                           ; BSR set to: 0
  4694  0018C4  909E               	bcf	3998,0,c	;volatile
  4695                           
  4696                           ; BSR set to: 0
  4697  0018C6  0100               	movlb	0	; () banked
  4698  0018C8  AFD3               	btfss	OpenTimer1@config& (0+255),7,b
  4699  0018CA  D002               	goto	l453
  4700                           
  4701                           ; BSR set to: 0
  4702  0018CC  809D               	bsf	3997,0,c	;volatile
  4703  0018CE  D001               	goto	l454
  4704  0018D0                     l453:
  4705                           
  4706                           ; BSR set to: 0
  4707  0018D0  909D               	bcf	3997,0,c	;volatile
  4708  0018D2                     l454:
  4709                           
  4710                           ; BSR set to: 0
  4711  0018D2  80CD               	bsf	4045,0,c	;volatile
  4712                           
  4713                           ; BSR set to: 0
  4714  0018D4  0012               	return	
  4715  0018D6                     __end_of_OpenTimer1:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           prodh	equ	0xFF4
  4719                           prodl	equ	0xFF3
  4720                           intcon	equ	0xFF2
  4721                           postinc0	equ	0xFEE
  4722                           wreg	equ	0xFE8
  4723                           indf1	equ	0xFE7
  4724                           fsr1h	equ	0xFE2
  4725                           fsr1l	equ	0xFE1
  4726                           indf2	equ	0xFDF
  4727                           postinc2	equ	0xFDE
  4728                           postdec2	equ	0xFDD
  4729                           fsr2h	equ	0xFDA
  4730                           fsr2l	equ	0xFD9
  4731                           status	equ	0xFD8
  4732                           
  4733 ;; *************** function _OpenTimer0 *****************
  4734 ;; Defined at:
  4735 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  config          1    wreg     unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  config          1   29[BANK0 ] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;		None               void
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4749 ;;      Params:         0       0       0       0       0
  4750 ;;      Locals:         0       1       0       0       0
  4751 ;;      Temps:          0       0       0       0       0
  4752 ;;      Totals:         0       1       0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:   10
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text30
  4764  0019AE                     __ptext30:
  4765                           	opt stack 0
  4766  0019AE                     _OpenTimer0:
  4767                           	opt stack 19
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;incstack = 0
  4771                           ;OpenTimer0@config stored from wreg
  4772  0019AE  0100               	movlb	0	; () banked
  4773  0019B0  6FD3               	movwf	OpenTimer0@config& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776  0019B2  0100               	movlb	0	; () banked
  4777  0019B4  51D3               	movf	OpenTimer0@config& (0+255),w,b
  4778  0019B6  0B7F               	andlw	127
  4779  0019B8  6ED5               	movwf	4053,c	;volatile
  4780                           
  4781                           ; BSR set to: 0
  4782  0019BA  0E00               	movlw	0
  4783  0019BC  6ED7               	movwf	4055,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786  0019BE  0E00               	movlw	0
  4787  0019C0  6ED6               	movwf	4054,c	;volatile
  4788                           
  4789                           ; BSR set to: 0
  4790  0019C2  94F2               	bcf	intcon,2,c	;volatile
  4791                           
  4792                           ; BSR set to: 0
  4793  0019C4  0100               	movlb	0	; () banked
  4794  0019C6  AFD3               	btfss	OpenTimer0@config& (0+255),7,b
  4795  0019C8  D002               	goto	l427
  4796                           
  4797                           ; BSR set to: 0
  4798  0019CA  8AF2               	bsf	intcon,5,c	;volatile
  4799  0019CC  D001               	goto	l428
  4800  0019CE                     l427:
  4801                           
  4802                           ; BSR set to: 0
  4803  0019CE  9AF2               	bcf	intcon,5,c	;volatile
  4804  0019D0                     l428:
  4805                           
  4806                           ; BSR set to: 0
  4807  0019D0  8ED5               	bsf	4053,7,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810  0019D2  0012               	return	
  4811  0019D4                     __end_of_OpenTimer0:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           prodh	equ	0xFF4
  4815                           prodl	equ	0xFF3
  4816                           intcon	equ	0xFF2
  4817                           postinc0	equ	0xFEE
  4818                           wreg	equ	0xFE8
  4819                           indf1	equ	0xFE7
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           indf2	equ	0xFDF
  4823                           postinc2	equ	0xFDE
  4824                           postdec2	equ	0xFDD
  4825                           fsr2h	equ	0xFDA
  4826                           fsr2l	equ	0xFD9
  4827                           status	equ	0xFD8
  4828                           
  4829 ;; *************** function _InterruptHandlerLow *****************
  4830 ;; Defined at:
  4831 ;;		line 122 in file "src/interrupts.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;		None               void
  4838 ;; Registers used:
  4839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4845 ;;      Params:         0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0
  4847 ;;      Temps:         17       0       0       0       0
  4848 ;;      Totals:        17       0       0       0       0
  4849 ;;Total ram usage:       17 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    9
  4852 ;; This function calls:
  4853 ;;		_timer1_int_handler
  4854 ;;		_uart_recv_int_handler
  4855 ;;		_uart_trans_int_handler
  4856 ;; This function is called by:
  4857 ;;		Interrupt level 1
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	intcodelo
  4862  000018                     __pintcodelo:
  4863                           	opt stack 0
  4864  000018                     _InterruptHandlerLow:
  4865                           	opt stack 15
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;incstack = 0
  4869  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  4870  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  4871  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  4872  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  4873  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  4874  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  4875  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  4876  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  4877  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  4878  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  4879  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  4880  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  4881  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  4882  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  4883  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  4884  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  4885  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  4886                           
  4887                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4888  00005C  A09E               	btfss	3998,0,c	;volatile
  4889  00005E  D003               	goto	i1l3736
  4890                           
  4891                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4892  000060  909E               	bcf	3998,0,c	;volatile
  4893                           
  4894                           ;interrupts.c: 126: timer1_int_handler();
  4895  000062  EC9A  F00C         	call	_timer1_int_handler	;wreg free
  4896  000066                     i1l3736:
  4897                           
  4898                           ;interrupts.c: 127: }
  4899                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4900  000066  AA9E               	btfss	3998,5,c	;volatile
  4901  000068  D003               	goto	i1l3742
  4902                           
  4903                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4904  00006A  9A9E               	bcf	3998,5,c	;volatile
  4905                           
  4906                           ;interrupts.c: 132: uart_recv_int_handler();
  4907  00006C  ECAD  F008         	call	_uart_recv_int_handler	;wreg free
  4908  000070                     i1l3742:
  4909                           
  4910                           ;interrupts.c: 133: }
  4911                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4912  000070  B89E               	btfsc	3998,4,c	;volatile
  4913  000072  A89D               	btfss	3997,4,c	;volatile
  4914  000074  D002               	goto	i1l52
  4915                           
  4916                           ;interrupts.c: 137: uart_trans_int_handler();
  4917  000076  EC97  F00A         	call	_uart_trans_int_handler	;wreg free
  4918  00007A                     i1l52:
  4919  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4920  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4921  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4922  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4923  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4924  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4925  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4926  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4927  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4928  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4929  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4930  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4931  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4932  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4933  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4934  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4935  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  4936  0000BE  0010               	retfie	
  4937  0000C0                     __end_of_InterruptHandlerLow:
  4938                           	opt stack 0
  4939                           pclatu	equ	0xFFB
  4940                           pclath	equ	0xFFA
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           fsr0h	equ	0xFEA
  4950                           fsr0l	equ	0xFE9
  4951                           wreg	equ	0xFE8
  4952                           indf1	equ	0xFE7
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           bsr	equ	0xFE0
  4956                           indf2	equ	0xFDF
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _uart_trans_int_handler *****************
  4964 ;; Defined at:
  4965 ;;		line 11 in file "src/my_uart.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  data            2   29[COMRAM] PTR unsigned char 
  4970 ;;		 -> NULL(0), 
  4971 ;;  length          1   33[COMRAM] char 
  4972 ;;  msgtype         1   32[COMRAM] unsigned char 
  4973 ;;  curIndex        1   31[COMRAM] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4983 ;;      Params:         0       0       0       0       0
  4984 ;;      Locals:         5       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0
  4986 ;;      Totals:         5       0       0       0       0
  4987 ;;Total ram usage:        5 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    8
  4990 ;; This function calls:
  4991 ;;		_FromMainLow_recvmsg
  4992 ;; This function is called by:
  4993 ;;		_InterruptHandlerLow
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text32
  4998  00152E                     __ptext32:
  4999                           	opt stack 0
  5000  00152E                     _uart_trans_int_handler:
  5001                           	opt stack 15
  5002                           
  5003                           ;my_uart.c: 13: unsigned char* data = (0);
  5004                           
  5005                           ;incstack = 0
  5006  00152E  0E00               	movlw	0
  5007  001530  6E1F               	movwf	uart_trans_int_handler@data+1,c
  5008  001532  0E00               	movlw	0
  5009  001534  6E1E               	movwf	uart_trans_int_handler@data,c
  5010                           
  5011                           ;my_uart.c: 14: unsigned char msgtype;
  5012                           ;my_uart.c: 15: unsigned char curIndex;
  5013                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5014  001536  0E00               	movlw	high uart_trans_int_handler@msgtype
  5015  001538  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5016  00153A  0E21               	movlw	low uart_trans_int_handler@msgtype
  5017  00153C  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5018  00153E  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5019  001542  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5020  001546  0E0A               	movlw	10
  5021  001548  ECEA  F00C         	call	_FromMainLow_recvmsg
  5022  00154C  6E22               	movwf	uart_trans_int_handler@length,c
  5023                           
  5024                           ;my_uart.c: 17: if (length < 0) {
  5025  00154E  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5026  001550  D017               	goto	i1l340
  5027                           
  5028                           ;my_uart.c: 26: curIndex = 0;
  5029                           
  5030                           ;my_uart.c: 24: }
  5031                           ;my_uart.c: 25: } else {
  5032                           
  5033                           ;my_uart.c: 22: else{
  5034                           
  5035                           ;my_uart.c: 21: }
  5036  001552  0E00               	movlw	0
  5037  001554  6E20               	movwf	uart_trans_int_handler@curIndex,c
  5038                           
  5039                           ;my_uart.c: 27: while(curIndex < length){
  5040  001556  D00D               	goto	i1l3500
  5041  001558                     i1l343:
  5042  001558  A2AC               	btfss	4012,1,c	;volatile
  5043  00155A  D7FE               	goto	i1l343
  5044                           
  5045                           ;my_uart.c: 33: TXREG = data[curIndex];
  5046  00155C  5020               	movf	uart_trans_int_handler@curIndex,w,c
  5047  00155E  0D01               	mullw	1
  5048  001560  50F3               	movf	prodl,w,c
  5049  001562  241E               	addwf	uart_trans_int_handler@data,w,c
  5050  001564  6ED9               	movwf	fsr2l,c
  5051  001566  50F4               	movf	prodh,w,c
  5052  001568  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  5053  00156A  6EDA               	movwf	fsr2h,c
  5054  00156C  50DF               	movf	indf2,w,c
  5055  00156E  6EAD               	movwf	4013,c	;volatile
  5056                           
  5057                           ;my_uart.c: 35: curIndex++;
  5058  001570  2A20               	incf	uart_trans_int_handler@curIndex,f,c
  5059  001572                     i1l3500:
  5060  001572  5020               	movf	uart_trans_int_handler@curIndex,w,c
  5061  001574  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5062  001576  D004               	goto	i1l340
  5063  001578  0AFF               	xorlw	255
  5064  00157A  2422               	addwf	uart_trans_int_handler@length,w,c
  5065  00157C  B0D8               	btfsc	status,0,c
  5066  00157E  D7EC               	goto	i1l343
  5067  001580                     i1l340:
  5068                           
  5069                           ;my_uart.c: 36: }
  5070                           ;my_uart.c: 37: }
  5071                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5072  001580  989D               	bcf	3997,4,c	;volatile
  5073  001582  0012               	return	
  5074  001584                     __end_of_uart_trans_int_handler:
  5075                           	opt stack 0
  5076                           pclatu	equ	0xFFB
  5077                           pclath	equ	0xFFA
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           postinc0	equ	0xFEE
  5086                           fsr0h	equ	0xFEA
  5087                           fsr0l	equ	0xFE9
  5088                           wreg	equ	0xFE8
  5089                           indf1	equ	0xFE7
  5090                           fsr1h	equ	0xFE2
  5091                           fsr1l	equ	0xFE1
  5092                           bsr	equ	0xFE0
  5093                           indf2	equ	0xFDF
  5094                           postinc2	equ	0xFDE
  5095                           postdec2	equ	0xFDD
  5096                           fsr2h	equ	0xFDA
  5097                           fsr2l	equ	0xFD9
  5098                           status	equ	0xFD8
  5099                           
  5100 ;; *************** function _FromMainLow_recvmsg *****************
  5101 ;; Defined at:
  5102 ;;		line 159 in file "src/messages.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  maxlength       1    wreg     unsigned char 
  5105 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5106 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5107 ;;  data            2   26[COMRAM] PTR void 
  5108 ;;		 -> NULL(0), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  maxlength       1   28[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      char 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5120 ;;      Params:         4       0       0       0       0
  5121 ;;      Locals:         1       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0
  5123 ;;      Totals:         5       0       0       0       0
  5124 ;;Total ram usage:        5 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    7
  5127 ;; This function calls:
  5128 ;;		i1_recv_msg
  5129 ;; This function is called by:
  5130 ;;		_uart_trans_int_handler
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text33
  5135  0019D4                     __ptext33:
  5136                           	opt stack 0
  5137  0019D4                     _FromMainLow_recvmsg:
  5138                           	opt stack 15
  5139                           
  5140                           ;incstack = 0
  5141                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5142  0019D4  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5143                           
  5144                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5145  0019D6  0101               	movlb	1	; () banked
  5146  0019D8  0E01               	movlw	high _FromMainLow_MQ
  5147  0019DA  6E0C               	movwf	i1recv_msg@qptr+1,c
  5148  0019DC  0101               	movlb	1	; () banked
  5149  0019DE  0E36               	movlw	low _FromMainLow_MQ
  5150  0019E0  6E0B               	movwf	i1recv_msg@qptr,c
  5151  0019E2  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5152  0019E6  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5153  0019EA  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5154  0019EE  6A11               	clrf	i1recv_msg@data+1,c
  5155  0019F0  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5156  0019F4  ECC9  F006         	call	i1_recv_msg	;wreg free
  5157  0019F8  0012               	return	
  5158  0019FA                     __end_of_FromMainLow_recvmsg:
  5159                           	opt stack 0
  5160                           pclatu	equ	0xFFB
  5161                           pclath	equ	0xFFA
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodh	equ	0xFF4
  5167                           prodl	equ	0xFF3
  5168                           intcon	equ	0xFF2
  5169                           postinc0	equ	0xFEE
  5170                           fsr0h	equ	0xFEA
  5171                           fsr0l	equ	0xFE9
  5172                           wreg	equ	0xFE8
  5173                           indf1	equ	0xFE7
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           bsr	equ	0xFE0
  5177                           indf2	equ	0xFDF
  5178                           postinc2	equ	0xFDE
  5179                           postdec2	equ	0xFDD
  5180                           fsr2h	equ	0xFDA
  5181                           fsr2l	equ	0xFD9
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function i1_recv_msg *****************
  5185 ;; Defined at:
  5186 ;;		line 63 in file "src/messages.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5189 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5190 ;;  maxlength       1   12[COMRAM] unsigned char 
  5191 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5192 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5193 ;;  data            2   15[COMRAM] PTR void 
  5194 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5197 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5198 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5199 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5200 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      char 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5210 ;;      Params:         7       0       0       0       0
  5211 ;;      Locals:         5       0       0       0       0
  5212 ;;      Temps:          2       0       0       0       0
  5213 ;;      Totals:        14       0       0       0       0
  5214 ;;Total ram usage:       14 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    6
  5217 ;; This function calls:
  5218 ;;		i1_memcpy
  5219 ;; This function is called by:
  5220 ;;		_FromMainLow_recvmsg
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text34
  5225  000D92                     __ptext34:
  5226                           	opt stack 0
  5227  000D92                     i1_recv_msg:
  5228                           	opt stack 15
  5229                           
  5230                           ;messages.c: 64: unsigned char slot;
  5231                           ;messages.c: 68: msg *qmsg;
  5232                           ;messages.c: 69: size_t tlength;
  5233                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5234                           
  5235                           ;incstack = 0
  5236  000D92  EE20 F035          	lfsr	2,53
  5237  000D96  500B               	movf	i1recv_msg@qptr,w,c
  5238  000D98  26D9               	addwf	fsr2l,f,c
  5239  000D9A  500C               	movf	i1recv_msg@qptr+1,w,c
  5240  000D9C  22DA               	addwfc	fsr2h,f,c
  5241  000D9E  50DF               	movf	indf2,w,c
  5242  000DA0  6E14               	movwf	i1recv_msg@slot,c
  5243                           
  5244                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5245  000DA2  5014               	movf	i1recv_msg@slot,w,c
  5246  000DA4  0D0D               	mullw	13
  5247  000DA6  50F3               	movf	prodl,w,c
  5248  000DA8  240B               	addwf	i1recv_msg@qptr,w,c
  5249  000DAA  6E17               	movwf	i1recv_msg@qmsg,c
  5250  000DAC  50F4               	movf	prodh,w,c
  5251  000DAE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5252  000DB0  6E18               	movwf	i1recv_msg@qmsg+1,c
  5253                           
  5254                           ;messages.c: 74: if (qmsg->full == 1) {
  5255  000DB2  0E01               	movlw	1
  5256  000DB4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5257  000DB8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5258  000DBC  62DF               	cpfseq	indf2,c
  5259  000DBE  D050               	goto	i1l3128
  5260                           
  5261                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5262  000DC0  EE20 F001          	lfsr	2,1
  5263  000DC4  5017               	movf	i1recv_msg@qmsg,w,c
  5264  000DC6  26D9               	addwf	fsr2l,f,c
  5265  000DC8  5018               	movf	i1recv_msg@qmsg+1,w,c
  5266  000DCA  22DA               	addwfc	fsr2h,f,c
  5267  000DCC  50DF               	movf	indf2,w,c
  5268  000DCE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5269  000DD0  B0D8               	btfsc	status,0,c
  5270  000DD2  D002               	goto	i1l3112
  5271                           
  5272                           ;messages.c: 77: return (-3);
  5273  000DD4  0EFD               	movlw	253
  5274  000DD6  0012               	return	
  5275  000DD8                     i1l3112:
  5276                           
  5277                           ;messages.c: 78: }
  5278                           ;messages.c: 80: tlength = qmsg->length;
  5279  000DD8  EE20 F001          	lfsr	2,1
  5280  000DDC  5017               	movf	i1recv_msg@qmsg,w,c
  5281  000DDE  26D9               	addwf	fsr2l,f,c
  5282  000DE0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5283  000DE2  22DA               	addwfc	fsr2h,f,c
  5284  000DE4  50DF               	movf	indf2,w,c
  5285  000DE6  6E12               	movwf	??i1_recv_msg& (0+255),c
  5286  000DE8  5012               	movf	??i1_recv_msg,w,c
  5287  000DEA  6E15               	movwf	i1recv_msg@tlength,c
  5288  000DEC  6A16               	clrf	i1recv_msg@tlength+1,c
  5289                           
  5290                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5291  000DEE  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5292  000DF2  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5293  000DF6  0E03               	movlw	3
  5294  000DF8  2417               	addwf	i1recv_msg@qmsg,w,c
  5295  000DFA  6E12               	movwf	??i1_recv_msg& (0+255),c
  5296  000DFC  0E00               	movlw	0
  5297  000DFE  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5298  000E00  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5299  000E02  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5300  000E06  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5301  000E0A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5302  000E0E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5303  000E12  EC3B  F00B         	call	i1_memcpy	;wreg free
  5304                           
  5305                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5306  000E16  EE20 F035          	lfsr	2,53
  5307  000E1A  500B               	movf	i1recv_msg@qptr,w,c
  5308  000E1C  26D9               	addwf	fsr2l,f,c
  5309  000E1E  500C               	movf	i1recv_msg@qptr+1,w,c
  5310  000E20  22DA               	addwfc	fsr2h,f,c
  5311  000E22  EE10 F035          	lfsr	1,53
  5312  000E26  500B               	movf	i1recv_msg@qptr,w,c
  5313  000E28  26E1               	addwf	fsr1l,f,c
  5314  000E2A  500C               	movf	i1recv_msg@qptr+1,w,c
  5315  000E2C  22E2               	addwfc	fsr1h,f,c
  5316  000E2E  50E7               	movf	indf1,w,c
  5317  000E30  6E12               	movwf	??i1_recv_msg& (0+255),c
  5318  000E32  2812               	incf	??i1_recv_msg,w,c
  5319  000E34  0B03               	andlw	3
  5320  000E36  6EDF               	movwf	indf2,c
  5321                           
  5322                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5323  000E38  EE20 F002          	lfsr	2,2
  5324  000E3C  5017               	movf	i1recv_msg@qmsg,w,c
  5325  000E3E  26D9               	addwf	fsr2l,f,c
  5326  000E40  5018               	movf	i1recv_msg@qmsg+1,w,c
  5327  000E42  22DA               	addwfc	fsr2h,f,c
  5328  000E44  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5329  000E48  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5330  000E4C  CFDF FFE7          	movff	indf2,indf1
  5331                           
  5332                           ;messages.c: 91: qmsg->full = 0;
  5333  000E50  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5334  000E54  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5335  000E58  0E00               	movlw	0
  5336  000E5A  6EDF               	movwf	indf2,c
  5337                           
  5338                           ;messages.c: 92: return (tlength);
  5339  000E5C  5015               	movf	i1recv_msg@tlength,w,c
  5340  000E5E  0012               	return	
  5341  000E60                     i1l3128:
  5342                           
  5343                           ;messages.c: 94: return (-4);
  5344  000E60  0EFC               	movlw	252
  5345  000E62  0012               	return	
  5346  000E64                     __end_ofi1_recv_msg:
  5347                           	opt stack 0
  5348                           pclatu	equ	0xFFB
  5349                           pclath	equ	0xFFA
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           postinc0	equ	0xFEE
  5358                           fsr0h	equ	0xFEA
  5359                           fsr0l	equ	0xFE9
  5360                           wreg	equ	0xFE8
  5361                           indf1	equ	0xFE7
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           bsr	equ	0xFE0
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _uart_recv_int_handler *****************
  5373 ;; Defined at:
  5374 ;;		line 42 in file "src/my_uart.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;		None               void
  5381 ;; Registers used:
  5382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5388 ;;      Params:         0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0
  5390 ;;      Temps:          1       0       0       0       0
  5391 ;;      Totals:         1       0       0       0       0
  5392 ;;Total ram usage:        1 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    8
  5395 ;; This function calls:
  5396 ;;		_ReadUSART
  5397 ;;		i1_ToMainLow_sendmsg
  5398 ;; This function is called by:
  5399 ;;		_InterruptHandlerLow
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text35
  5404  00115A                     __ptext35:
  5405                           	opt stack 0
  5406  00115A                     _uart_recv_int_handler:
  5407                           	opt stack 15
  5408                           
  5409                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5410                           
  5411                           ;incstack = 0
  5412  00115A  AA9E               	btfss	3998,5,c	;volatile
  5413  00115C  D03A               	goto	i1l3478
  5414                           
  5415                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5416  00115E  EE20 F004          	lfsr	2,4
  5417  001162  5049               	movf	_uc_ptr,w,c
  5418  001164  26D9               	addwf	fsr2l,f,c
  5419  001166  504A               	movf	_uc_ptr+1,w,c
  5420  001168  22DA               	addwfc	fsr2h,f,c
  5421  00116A  50DF               	movf	indf2,w,c
  5422  00116C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5423  00116E  501B               	movf	??_uart_recv_int_handler,w,c
  5424  001170  0D01               	mullw	1
  5425  001172  50F3               	movf	prodl,w,c
  5426  001174  2449               	addwf	_uc_ptr,w,c
  5427  001176  6ED9               	movwf	fsr2l,c
  5428  001178  50F4               	movf	prodh,w,c
  5429  00117A  204A               	addwfc	_uc_ptr+1,w,c
  5430  00117C  6EDA               	movwf	fsr2h,c
  5431  00117E  EC42  F00D         	call	_ReadUSART	;wreg free
  5432  001182  6EDF               	movwf	indf2,c
  5433                           
  5434                           ;my_uart.c: 56: uc_ptr->buflen++;
  5435  001184  EE20 F004          	lfsr	2,4
  5436  001188  5049               	movf	_uc_ptr,w,c
  5437  00118A  26D9               	addwf	fsr2l,f,c
  5438  00118C  504A               	movf	_uc_ptr+1,w,c
  5439  00118E  22DA               	addwfc	fsr2h,f,c
  5440  001190  2ADF               	incf	indf2,f,c
  5441                           
  5442                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5443  001192  EE20 F004          	lfsr	2,4
  5444  001196  5049               	movf	_uc_ptr,w,c
  5445  001198  26D9               	addwf	fsr2l,f,c
  5446  00119A  504A               	movf	_uc_ptr+1,w,c
  5447  00119C  22DA               	addwfc	fsr2h,f,c
  5448  00119E  0E04               	movlw	4
  5449  0011A0  62DF               	cpfseq	indf2,c
  5450  0011A2  D017               	goto	i1l3478
  5451                           
  5452                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5453  0011A4  0E20               	movlw	32
  5454  0011A6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5455  0011A8  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5456  0011AC  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5457  0011B0  EE20 F004          	lfsr	2,4
  5458  0011B4  5049               	movf	_uc_ptr,w,c
  5459  0011B6  26D9               	addwf	fsr2l,f,c
  5460  0011B8  504A               	movf	_uc_ptr+1,w,c
  5461  0011BA  22DA               	addwfc	fsr2h,f,c
  5462  0011BC  50DF               	movf	indf2,w,c
  5463  0011BE  ECFD  F00C         	call	i1_ToMainLow_sendmsg
  5464                           
  5465                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5466  0011C2  EE20 F004          	lfsr	2,4
  5467  0011C6  5049               	movf	_uc_ptr,w,c
  5468  0011C8  26D9               	addwf	fsr2l,f,c
  5469  0011CA  504A               	movf	_uc_ptr+1,w,c
  5470  0011CC  22DA               	addwfc	fsr2h,f,c
  5471  0011CE  0E00               	movlw	0
  5472  0011D0  6EDF               	movwf	indf2,c
  5473  0011D2                     i1l3478:
  5474                           
  5475                           ;my_uart.c: 61: }
  5476                           ;my_uart.c: 62: }
  5477                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5478  0011D2  A64C               	btfss	_USART_Status,3,c
  5479  0011D4  0012               	return	
  5480                           
  5481                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5482  0011D6  98AB               	bcf	4011,4,c	;volatile
  5483                           
  5484                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5485  0011D8  88AB               	bsf	4011,4,c	;volatile
  5486                           
  5487                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5488  0011DA  0E1E               	movlw	30
  5489  0011DC  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5490  0011DE  0E00               	movlw	0
  5491  0011E0  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5492  0011E2  0E00               	movlw	0
  5493  0011E4  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5494  0011E6  0E00               	movlw	0
  5495  0011E8  ECFD  F00C         	call	i1_ToMainLow_sendmsg
  5496  0011EC  0012               	return	
  5497  0011EE                     __end_of_uart_recv_int_handler:
  5498                           	opt stack 0
  5499                           pclatu	equ	0xFFB
  5500                           pclath	equ	0xFFA
  5501                           tblptru	equ	0xFF8
  5502                           tblptrh	equ	0xFF7
  5503                           tblptrl	equ	0xFF6
  5504                           tablat	equ	0xFF5
  5505                           prodh	equ	0xFF4
  5506                           prodl	equ	0xFF3
  5507                           intcon	equ	0xFF2
  5508                           postinc0	equ	0xFEE
  5509                           fsr0h	equ	0xFEA
  5510                           fsr0l	equ	0xFE9
  5511                           wreg	equ	0xFE8
  5512                           indf1	equ	0xFE7
  5513                           fsr1h	equ	0xFE2
  5514                           fsr1l	equ	0xFE1
  5515                           bsr	equ	0xFE0
  5516                           indf2	equ	0xFDF
  5517                           postinc2	equ	0xFDE
  5518                           postdec2	equ	0xFDD
  5519                           fsr2h	equ	0xFDA
  5520                           fsr2l	equ	0xFD9
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _ReadUSART *****************
  5524 ;; Defined at:
  5525 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  data            1    0[COMRAM] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      unsigned char 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5539 ;;      Params:         0       0       0       0       0
  5540 ;;      Locals:         1       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0
  5542 ;;      Totals:         1       0       0       0       0
  5543 ;;Total ram usage:        1 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    5
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_uart_recv_int_handler
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text36
  5554  001A84                     __ptext36:
  5555                           	opt stack 0
  5556  001A84                     _ReadUSART:
  5557                           	opt stack 17
  5558                           
  5559                           ;incstack = 0
  5560  001A84  0EF2               	movlw	242
  5561  001A86  164C               	andwf	_USART_Status,f,c
  5562  001A88  ACAB               	btfss	4011,6,c	;volatile
  5563  001A8A  D003               	goto	i1l513
  5564  001A8C  904C               	bcf	_USART_Status,0,c
  5565  001A8E  B0AB               	btfsc	4011,0,c	;volatile
  5566  001A90  804C               	bsf	_USART_Status,0,c
  5567  001A92                     i1l513:
  5568  001A92  B4AB               	btfsc	4011,2,c	;volatile
  5569  001A94  844C               	bsf	_USART_Status,2,c
  5570  001A96  B2AB               	btfsc	4011,1,c	;volatile
  5571  001A98  864C               	bsf	_USART_Status,3,c
  5572  001A9A  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5573  001A9E  5001               	movf	ReadUSART@data,w,c
  5574  001AA0  0012               	return	
  5575  001AA2                     __end_of_ReadUSART:
  5576                           	opt stack 0
  5577                           pclatu	equ	0xFFB
  5578                           pclath	equ	0xFFA
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           intcon	equ	0xFF2
  5586                           postinc0	equ	0xFEE
  5587                           fsr0h	equ	0xFEA
  5588                           fsr0l	equ	0xFE9
  5589                           wreg	equ	0xFE8
  5590                           indf1	equ	0xFE7
  5591                           fsr1h	equ	0xFE2
  5592                           fsr1l	equ	0xFE1
  5593                           bsr	equ	0xFE0
  5594                           indf2	equ	0xFDF
  5595                           postinc2	equ	0xFDE
  5596                           postdec2	equ	0xFDD
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function _timer1_int_handler *****************
  5602 ;; Defined at:
  5603 ;;		line 36 in file "src/user_interrupts.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  result          2   26[COMRAM] unsigned int 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5617 ;;      Params:         0       0       0       0       0
  5618 ;;      Locals:         2       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0
  5620 ;;      Totals:         2       0       0       0       0
  5621 ;;Total ram usage:        2 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    8
  5624 ;; This function calls:
  5625 ;;		_ReadTimer1
  5626 ;;		_WriteTimer1
  5627 ;;		i1_ToMainLow_sendmsg
  5628 ;; This function is called by:
  5629 ;;		_InterruptHandlerLow
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text37
  5634  001934                     __ptext37:
  5635                           	opt stack 0
  5636  001934                     _timer1_int_handler:
  5637                           	opt stack 15
  5638                           
  5639                           ;user_interrupts.c: 37: unsigned int result;
  5640                           ;user_interrupts.c: 44: result = ReadTimer1();
  5641                           
  5642                           ;incstack = 0
  5643  001934  EC64  F00D         	call	_ReadTimer1	;wreg free
  5644  001938  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5645  00193C  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5646                           
  5647                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5648  001940  0E0B               	movlw	11
  5649  001942  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5650  001944  0E00               	movlw	0
  5651  001946  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5652  001948  0E00               	movlw	0
  5653  00194A  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5654  00194C  0E00               	movlw	0
  5655  00194E  ECFD  F00C         	call	i1_ToMainLow_sendmsg
  5656                           
  5657                           ;user_interrupts.c: 48: WriteTimer1(0);
  5658  001952  0E00               	movlw	0
  5659  001954  6E02               	movwf	WriteTimer1@timer1+1,c
  5660  001956  0E00               	movlw	0
  5661  001958  6E01               	movwf	WriteTimer1@timer1,c
  5662  00195A  EC5B  F00D         	call	_WriteTimer1	;wreg free
  5663  00195E  0012               	return	
  5664  001960                     __end_of_timer1_int_handler:
  5665                           	opt stack 0
  5666                           pclatu	equ	0xFFB
  5667                           pclath	equ	0xFFA
  5668                           tblptru	equ	0xFF8
  5669                           tblptrh	equ	0xFF7
  5670                           tblptrl	equ	0xFF6
  5671                           tablat	equ	0xFF5
  5672                           prodh	equ	0xFF4
  5673                           prodl	equ	0xFF3
  5674                           intcon	equ	0xFF2
  5675                           postinc0	equ	0xFEE
  5676                           fsr0h	equ	0xFEA
  5677                           fsr0l	equ	0xFE9
  5678                           wreg	equ	0xFE8
  5679                           indf1	equ	0xFE7
  5680                           fsr1h	equ	0xFE2
  5681                           fsr1l	equ	0xFE1
  5682                           bsr	equ	0xFE0
  5683                           indf2	equ	0xFDF
  5684                           postinc2	equ	0xFDE
  5685                           postdec2	equ	0xFDD
  5686                           fsr2h	equ	0xFDA
  5687                           fsr2l	equ	0xFD9
  5688                           status	equ	0xFD8
  5689                           
  5690 ;; *************** function i1_ToMainLow_sendmsg *****************
  5691 ;; Defined at:
  5692 ;;		line 103 in file "src/messages.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  length          1    wreg     unsigned char 
  5695 ;;  msgtype         1   22[COMRAM] unsigned char 
  5696 ;;  data            2   23[COMRAM] PTR void 
  5697 ;;		 -> NULL(0), main@t1thread_data(13), main@uc(5), 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  length          1   25[COMRAM] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      char 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5709 ;;      Params:         3       0       0       0       0
  5710 ;;      Locals:         1       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0
  5712 ;;      Totals:         4       0       0       0       0
  5713 ;;Total ram usage:        4 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    7
  5716 ;; This function calls:
  5717 ;;		i1_send_msg
  5718 ;; This function is called by:
  5719 ;;		_uart_recv_int_handler
  5720 ;;		_timer1_int_handler
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text38
  5725  0019FA                     __ptext38:
  5726                           	opt stack 0
  5727  0019FA                     i1_ToMainLow_sendmsg:
  5728                           	opt stack 15
  5729                           
  5730                           ;incstack = 0
  5731                           ;i1ToMainLow_sendmsg@length stored from wreg
  5732  0019FA  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  5733                           
  5734                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5735                           ;	Return value of i1_ToMainLow_sendmsg is never used
  5736  0019FC  0100               	movlb	0	; () banked
  5737  0019FE  0E00               	movlw	high _ToMainLow_MQ
  5738  001A00  6E0C               	movwf	i1send_msg@qptr+1,c
  5739  001A02  0100               	movlb	0	; () banked
  5740  001A04  0E80               	movlw	low _ToMainLow_MQ
  5741  001A06  6E0B               	movwf	i1send_msg@qptr,c
  5742  001A08  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  5743  001A0C  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5744  001A10  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5745  001A14  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  5746  001A18  EC58  F008         	call	i1_send_msg	;wreg free
  5747  001A1C  0012               	return	
  5748  001A1E                     __end_ofi1_ToMainLow_sendmsg:
  5749                           	opt stack 0
  5750                           pclatu	equ	0xFFB
  5751                           pclath	equ	0xFFA
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           postinc0	equ	0xFEE
  5760                           fsr0h	equ	0xFEA
  5761                           fsr0l	equ	0xFE9
  5762                           wreg	equ	0xFE8
  5763                           indf1	equ	0xFE7
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           bsr	equ	0xFE0
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function i1_send_msg *****************
  5775 ;; Defined at:
  5776 ;;		line 24 in file "src/messages.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5779 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5780 ;;  length          1   12[COMRAM] unsigned char 
  5781 ;;  msgtype         1   13[COMRAM] unsigned char 
  5782 ;;  data            2   14[COMRAM] PTR void 
  5783 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  5784 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5787 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5788 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5789 ;;  send_msg        2   17[COMRAM] unsigned int 
  5790 ;;  send_msg        1   19[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      char 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5800 ;;      Params:         6       0       0       0       0
  5801 ;;      Locals:         5       0       0       0       0
  5802 ;;      Temps:          1       0       0       0       0
  5803 ;;      Totals:        12       0       0       0       0
  5804 ;;Total ram usage:       12 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    6
  5807 ;; This function calls:
  5808 ;;		i1_memcpy
  5809 ;; This function is called by:
  5810 ;;		i1_ToMainLow_sendmsg
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text39
  5815  0010B0                     __ptext39:
  5816                           	opt stack 0
  5817  0010B0                     i1_send_msg:
  5818                           	opt stack 15
  5819                           
  5820                           ;messages.c: 25: unsigned char slot;
  5821                           ;messages.c: 27: msg *qmsg;
  5822                           ;messages.c: 28: size_t tlength = length;
  5823                           
  5824                           ;incstack = 0
  5825  0010B0  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5826  0010B4  6A13               	clrf	i1send_msg@tlength+1,c
  5827                           
  5828                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5829  0010B6  EE20 F034          	lfsr	2,52
  5830  0010BA  500B               	movf	i1send_msg@qptr,w,c
  5831  0010BC  26D9               	addwf	fsr2l,f,c
  5832  0010BE  500C               	movf	i1send_msg@qptr+1,w,c
  5833  0010C0  22DA               	addwfc	fsr2h,f,c
  5834  0010C2  50DF               	movf	indf2,w,c
  5835  0010C4  6E14               	movwf	i1send_msg@slot,c
  5836                           
  5837                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5838  0010C6  5014               	movf	i1send_msg@slot,w,c
  5839  0010C8  0D0D               	mullw	13
  5840  0010CA  50F3               	movf	prodl,w,c
  5841  0010CC  240B               	addwf	i1send_msg@qptr,w,c
  5842  0010CE  6E15               	movwf	i1send_msg@qmsg,c
  5843  0010D0  50F4               	movf	prodh,w,c
  5844  0010D2  200C               	addwfc	i1send_msg@qptr+1,w,c
  5845  0010D4  6E16               	movwf	i1send_msg@qmsg+1,c
  5846                           
  5847                           ;messages.c: 41: if (qmsg->full != 0) {
  5848  0010D6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5849  0010DA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5850  0010DE  50DF               	movf	indf2,w,c
  5851  0010E0  B4D8               	btfsc	status,2,c
  5852  0010E2  D002               	goto	i1l3064
  5853                           
  5854                           ;messages.c: 42: return (-1);
  5855  0010E4  0EFF               	movlw	255
  5856  0010E6  0012               	return	
  5857  0010E8                     i1l3064:
  5858                           
  5859                           ;messages.c: 43: }
  5860                           ;messages.c: 46: qmsg->length = length;
  5861  0010E8  EE20 F001          	lfsr	2,1
  5862  0010EC  5015               	movf	i1send_msg@qmsg,w,c
  5863  0010EE  26D9               	addwf	fsr2l,f,c
  5864  0010F0  5016               	movf	i1send_msg@qmsg+1,w,c
  5865  0010F2  22DA               	addwfc	fsr2h,f,c
  5866  0010F4  C00D  FFDF         	movff	i1send_msg@length,indf2
  5867                           
  5868                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5869  0010F8  EE20 F002          	lfsr	2,2
  5870  0010FC  5015               	movf	i1send_msg@qmsg,w,c
  5871  0010FE  26D9               	addwf	fsr2l,f,c
  5872  001100  5016               	movf	i1send_msg@qmsg+1,w,c
  5873  001102  22DA               	addwfc	fsr2h,f,c
  5874  001104  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5875                           
  5876                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5877  001108  0E03               	movlw	3
  5878  00110A  2415               	addwf	i1send_msg@qmsg,w,c
  5879  00110C  6E01               	movwf	i1memcpy@d1,c
  5880  00110E  0E00               	movlw	0
  5881  001110  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5882  001112  6E02               	movwf	i1memcpy@d1+1,c
  5883  001114  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5884  001118  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5885  00111C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5886  001120  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5887  001124  EC3B  F00B         	call	i1_memcpy	;wreg free
  5888                           
  5889                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5890  001128  EE20 F034          	lfsr	2,52
  5891  00112C  500B               	movf	i1send_msg@qptr,w,c
  5892  00112E  26D9               	addwf	fsr2l,f,c
  5893  001130  500C               	movf	i1send_msg@qptr+1,w,c
  5894  001132  22DA               	addwfc	fsr2h,f,c
  5895  001134  EE10 F034          	lfsr	1,52
  5896  001138  500B               	movf	i1send_msg@qptr,w,c
  5897  00113A  26E1               	addwf	fsr1l,f,c
  5898  00113C  500C               	movf	i1send_msg@qptr+1,w,c
  5899  00113E  22E2               	addwfc	fsr1h,f,c
  5900  001140  50E7               	movf	indf1,w,c
  5901  001142  6E11               	movwf	??i1_send_msg& (0+255),c
  5902  001144  2811               	incf	??i1_send_msg,w,c
  5903  001146  0B03               	andlw	3
  5904  001148  6EDF               	movwf	indf2,c
  5905                           
  5906                           ;messages.c: 59: qmsg->full = 1;
  5907  00114A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5908  00114E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5909  001152  0E01               	movlw	1
  5910  001154  6EDF               	movwf	indf2,c
  5911                           
  5912                           ;messages.c: 60: return (1);
  5913  001156  0E01               	movlw	1
  5914  001158  0012               	return	
  5915  00115A                     __end_ofi1_send_msg:
  5916                           	opt stack 0
  5917                           pclatu	equ	0xFFB
  5918                           pclath	equ	0xFFA
  5919                           tblptru	equ	0xFF8
  5920                           tblptrh	equ	0xFF7
  5921                           tblptrl	equ	0xFF6
  5922                           tablat	equ	0xFF5
  5923                           prodh	equ	0xFF4
  5924                           prodl	equ	0xFF3
  5925                           intcon	equ	0xFF2
  5926                           postinc0	equ	0xFEE
  5927                           fsr0h	equ	0xFEA
  5928                           fsr0l	equ	0xFE9
  5929                           wreg	equ	0xFE8
  5930                           indf1	equ	0xFE7
  5931                           fsr1h	equ	0xFE2
  5932                           fsr1l	equ	0xFE1
  5933                           bsr	equ	0xFE0
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function i1_memcpy *****************
  5942 ;; Defined at:
  5943 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  d1              2    0[COMRAM] PTR void 
  5946 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5947 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5948 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5949 ;;  s1              2    2[COMRAM] PTR const void 
  5950 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5951 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5952 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5953 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5954 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  5955 ;;  n               2    4[COMRAM] unsigned int 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5958 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5959 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5960 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5961 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  5962 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  5963 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5964 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5965 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5966 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  2    0[COMRAM] PTR void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5976 ;;      Params:         6       0       0       0       0
  5977 ;;      Locals:         4       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0
  5979 ;;      Totals:        10       0       0       0       0
  5980 ;;Total ram usage:       10 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    5
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		i1_send_msg
  5987 ;;		i1_recv_msg
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text40
  5992  001676                     __ptext40:
  5993                           	opt stack 0
  5994  001676                     i1_memcpy:
  5995                           	opt stack 15
  5996                           
  5997                           ;incstack = 0
  5998  001676  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5999  00167A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6000  00167E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6001  001682  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6002  001686  D00E               	goto	i1l3016
  6003  001688                     i1l3010:
  6004  001688  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6005  00168C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6006  001690  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6007  001694  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6008  001698  CFDF FFE7          	movff	indf2,indf1
  6009  00169C  4A09               	infsnz	i1memcpy@s,f,c
  6010  00169E  2A0A               	incf	i1memcpy@s+1,f,c
  6011  0016A0  4A07               	infsnz	i1memcpy@d,f,c
  6012  0016A2  2A08               	incf	i1memcpy@d+1,f,c
  6013  0016A4                     i1l3016:
  6014  0016A4  0605               	decf	i1memcpy@n,f,c
  6015  0016A6  A0D8               	btfss	status,0,c
  6016  0016A8  0606               	decf	i1memcpy@n+1,f,c
  6017  0016AA  2805               	incf	i1memcpy@n& (0+255),w,c
  6018  0016AC  B4D8               	btfsc	status,2,c
  6019  0016AE  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6020  0016B0  B4D8               	btfsc	status,2,c
  6021                           
  6022                           ;	Return value of i1_memcpy is never used
  6023  0016B2  0012               	return	
  6024  0016B4  D7E9               	goto	i1l3010
  6025  0016B6                     __end_ofi1_memcpy:
  6026                           	opt stack 0
  6027                           pclatu	equ	0xFFB
  6028                           pclath	equ	0xFFA
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodh	equ	0xFF4
  6034                           prodl	equ	0xFF3
  6035                           intcon	equ	0xFF2
  6036                           postinc0	equ	0xFEE
  6037                           fsr0h	equ	0xFEA
  6038                           fsr0l	equ	0xFE9
  6039                           wreg	equ	0xFE8
  6040                           indf1	equ	0xFE7
  6041                           fsr1h	equ	0xFE2
  6042                           fsr1l	equ	0xFE1
  6043                           bsr	equ	0xFE0
  6044                           indf2	equ	0xFDF
  6045                           postinc2	equ	0xFDE
  6046                           postdec2	equ	0xFDD
  6047                           fsr2h	equ	0xFDA
  6048                           fsr2l	equ	0xFD9
  6049                           status	equ	0xFD8
  6050                           
  6051 ;; *************** function _WriteTimer1 *****************
  6052 ;; Defined at:
  6053 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  timer1          2    0[COMRAM] unsigned int 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  timer           2    2[COMRAM] struct Timers
  6058 ;; Return value:  Size  Location     Type
  6059 ;;		None               void
  6060 ;; Registers used:
  6061 ;;		None
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6067 ;;      Params:         2       0       0       0       0
  6068 ;;      Locals:         2       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0
  6070 ;;      Totals:         4       0       0       0       0
  6071 ;;Total ram usage:        4 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    5
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_timer1_int_handler
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text41
  6082  001AB6                     __ptext41:
  6083                           	opt stack 0
  6084  001AB6                     _WriteTimer1:
  6085                           	opt stack 17
  6086                           
  6087                           ;incstack = 0
  6088  001AB6  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6089  001ABA  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6090  001ABE  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6091  001AC2  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6092  001AC6  0012               	return	
  6093  001AC8                     __end_of_WriteTimer1:
  6094                           	opt stack 0
  6095                           pclatu	equ	0xFFB
  6096                           pclath	equ	0xFFA
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           postinc0	equ	0xFEE
  6105                           fsr0h	equ	0xFEA
  6106                           fsr0l	equ	0xFE9
  6107                           wreg	equ	0xFE8
  6108                           indf1	equ	0xFE7
  6109                           fsr1h	equ	0xFE2
  6110                           fsr1l	equ	0xFE1
  6111                           bsr	equ	0xFE0
  6112                           indf2	equ	0xFDF
  6113                           postinc2	equ	0xFDE
  6114                           postdec2	equ	0xFDD
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _ReadTimer1 *****************
  6120 ;; Defined at:
  6121 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  timer           2    2[COMRAM] struct Timers
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2    0[COMRAM] unsigned int 
  6128 ;; Registers used:
  6129 ;;		None
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6135 ;;      Params:         2       0       0       0       0
  6136 ;;      Locals:         2       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0
  6138 ;;      Totals:         4       0       0       0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    5
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_timer1_int_handler
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text42
  6150  001AC8                     __ptext42:
  6151                           	opt stack 0
  6152  001AC8                     _ReadTimer1:
  6153                           	opt stack 17
  6154                           
  6155                           ;incstack = 0
  6156  001AC8  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6157  001ACC  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6158  001AD0  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6159  001AD4  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6160  001AD8  0012               	return	
  6161  001ADA                     __end_of_ReadTimer1:
  6162                           	opt stack 0
  6163                           pclatu	equ	0xFFB
  6164                           pclath	equ	0xFFA
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           postinc0	equ	0xFEE
  6173                           fsr0h	equ	0xFEA
  6174                           fsr0l	equ	0xFE9
  6175                           wreg	equ	0xFE8
  6176                           indf1	equ	0xFE7
  6177                           fsr1h	equ	0xFE2
  6178                           fsr1l	equ	0xFE1
  6179                           bsr	equ	0xFE0
  6180                           indf2	equ	0xFDF
  6181                           postinc2	equ	0xFDE
  6182                           postdec2	equ	0xFDD
  6183                           fsr2h	equ	0xFDA
  6184                           fsr2l	equ	0xFD9
  6185                           status	equ	0xFD8
  6186                           
  6187 ;; *************** function _InterruptHandlerHigh *****************
  6188 ;; Defined at:
  6189 ;;		line 83 in file "src/interrupts.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;		None               void
  6196 ;; Registers used:
  6197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6203 ;;      Params:         0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0
  6205 ;;      Temps:          0      14       0       0       0
  6206 ;;      Totals:         0      14       0       0       0
  6207 ;;Total ram usage:       14 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    4
  6210 ;; This function calls:
  6211 ;;		_SleepIfOkay
  6212 ;;		_i2c_int_handler
  6213 ;;		_timer0_int_handler
  6214 ;; This function is called by:
  6215 ;;		Interrupt level 2
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	intcode
  6220  000008                     __pintcode:
  6221                           	opt stack 0
  6222  000008                     _InterruptHandlerHigh:
  6223                           	opt stack 15
  6224                           
  6225                           ;incstack = 0
  6226  000008  CFFA F0C5          	movff	pclath,??_InterruptHandlerHigh
  6227  00000C  CFFB F0C6          	movff	pclatu,??_InterruptHandlerHigh+1
  6228  000010  CFE9 F0C7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6229  000014  EF38  F009         	goto	int_func
  6230                           pclatu	equ	0xFFB
  6231                           pclath	equ	0xFFA
  6232                           tblptru	equ	0xFF8
  6233                           tblptrh	equ	0xFF7
  6234                           tblptrl	equ	0xFF6
  6235                           tablat	equ	0xFF5
  6236                           prodh	equ	0xFF4
  6237                           prodl	equ	0xFF3
  6238                           intcon	equ	0xFF2
  6239                           postinc0	equ	0xFEE
  6240                           fsr0h	equ	0xFEA
  6241                           fsr0l	equ	0xFE9
  6242                           wreg	equ	0xFE8
  6243                           indf1	equ	0xFE7
  6244                           fsr1h	equ	0xFE2
  6245                           fsr1l	equ	0xFE1
  6246                           bsr	equ	0xFE0
  6247                           indf2	equ	0xFDF
  6248                           postinc2	equ	0xFDE
  6249                           postdec2	equ	0xFDD
  6250                           fsr2h	equ	0xFDA
  6251                           fsr2l	equ	0xFD9
  6252                           status	equ	0xFD8
  6253                           
  6254                           	psect	intcode_body
  6255  001270                     __pintcode_body:
  6256                           	opt stack 15
  6257  001270                     int_func:
  6258                           	opt stack 15
  6259  001270  CFEA F0C8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6260  001274  CFE1 F0C9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6261  001278  CFE2 F0CA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6262  00127C  CFD9 F0CB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6263  001280  CFDA F0CC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6264  001284  CFF3 F0CD          	movff	prodl,??_InterruptHandlerHigh+8
  6265  001288  CFF4 F0CE          	movff	prodh,??_InterruptHandlerHigh+9
  6266  00128C  CFF6 F0CF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6267  001290  CFF7 F0D0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6268  001294  CFF8 F0D1          	movff	tblptru,??_InterruptHandlerHigh+12
  6269  001298  CFF5 F0D2          	movff	tablat,??_InterruptHandlerHigh+13
  6270                           
  6271                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6272  00129C  A69E               	btfss	3998,3,c	;volatile
  6273  00129E  D003               	goto	i2l3722
  6274                           
  6275                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6276  0012A0  969E               	bcf	3998,3,c	;volatile
  6277                           
  6278                           ;interrupts.c: 92: i2c_int_handler();
  6279  0012A2  EC62  F000         	call	_i2c_int_handler	;wreg free
  6280  0012A6                     i2l3722:
  6281                           
  6282                           ;interrupts.c: 93: }
  6283                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6284  0012A6  A4F2               	btfss	intcon,2,c	;volatile
  6285  0012A8  D003               	goto	i2l3728
  6286                           
  6287                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6288  0012AA  94F2               	bcf	intcon,2,c	;volatile
  6289                           
  6290                           ;interrupts.c: 99: timer0_int_handler();
  6291  0012AC  ECDC  F009         	call	_timer0_int_handler	;wreg free
  6292  0012B0                     i2l3728:
  6293                           
  6294                           ;interrupts.c: 100: }
  6295                           ;interrupts.c: 109: SleepIfOkay();
  6296  0012B0  EC14  F00B         	call	_SleepIfOkay	;wreg free
  6297  0012B4  C0D2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6298  0012B8  C0D1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6299  0012BC  C0D0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6300  0012C0  C0CF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6301  0012C4  C0CE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6302  0012C8  C0CD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6303  0012CC  C0CC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6304  0012D0  C0CB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6305  0012D4  C0CA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6306  0012D8  C0C9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6307  0012DC  C0C8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6308  0012E0  C0C7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6309  0012E4  C0C6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6310  0012E8  C0C5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6311  0012EC  0011               	retfie		f
  6312  0012EE                     __end_of_InterruptHandlerHigh:
  6313                           	opt stack 0
  6314                           pclatu	equ	0xFFB
  6315                           pclath	equ	0xFFA
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           postinc0	equ	0xFEE
  6324                           fsr0h	equ	0xFEA
  6325                           fsr0l	equ	0xFE9
  6326                           wreg	equ	0xFE8
  6327                           indf1	equ	0xFE7
  6328                           fsr1h	equ	0xFE2
  6329                           fsr1l	equ	0xFE1
  6330                           bsr	equ	0xFE0
  6331                           indf2	equ	0xFDF
  6332                           postinc2	equ	0xFDE
  6333                           postdec2	equ	0xFDD
  6334                           fsr2h	equ	0xFDA
  6335                           fsr2l	equ	0xFD9
  6336                           status	equ	0xFD8
  6337                           
  6338 ;; *************** function _timer0_int_handler *****************
  6339 ;; Defined at:
  6340 ;;		line 16 in file "src/user_interrupts.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  val             2   13[BANK0 ] unsigned int 
  6345 ;;  msgtype         2   11[BANK0 ] int 
  6346 ;;  length          2    9[BANK0 ] int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;		None               void
  6349 ;; Registers used:
  6350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6356 ;;      Params:         0       0       0       0       0
  6357 ;;      Locals:         0       6       0       0       0
  6358 ;;      Temps:          0       0       0       0       0
  6359 ;;      Totals:         0       6       0       0       0
  6360 ;;Total ram usage:        6 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		_FromMainHigh_recvmsg
  6365 ;;		_ToMainHigh_sendmsg
  6366 ;;		_WriteTimer0
  6367 ;; This function is called by:
  6368 ;;		_InterruptHandlerHigh
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text44
  6373  0013B8                     __ptext44:
  6374                           	opt stack 0
  6375  0013B8                     _timer0_int_handler:
  6376                           	opt stack 15
  6377                           
  6378                           ;user_interrupts.c: 17: unsigned int val;
  6379                           ;user_interrupts.c: 18: int length, msgtype;
  6380                           ;user_interrupts.c: 25: WriteTimer0(0);
  6381                           
  6382                           ;incstack = 0
  6383  0013B8  0E00               	movlw	0
  6384  0013BA  6E35               	movwf	WriteTimer0@timer0+1,c
  6385  0013BC  0E00               	movlw	0
  6386  0013BE  6E34               	movwf	WriteTimer0@timer0,c
  6387  0013C0  EC6D  F00D         	call	_WriteTimer0	;wreg free
  6388                           
  6389                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6390  0013C4  0100               	movlb	0	; () banked
  6391  0013C6  0E00               	movlw	high timer0_int_handler@msgtype
  6392  0013C8  0100               	movlb	0	; () banked
  6393  0013CA  6FBC               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6394  0013CC  0100               	movlb	0	; () banked
  6395  0013CE  0EC1               	movlw	low timer0_int_handler@msgtype
  6396  0013D0  0100               	movlb	0	; () banked
  6397  0013D2  6FBB               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6398  0013D4  0100               	movlb	0	; () banked
  6399  0013D6  0E00               	movlw	high timer0_int_handler@val
  6400  0013D8  0100               	movlb	0	; () banked
  6401  0013DA  6FBE               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6402  0013DC  0100               	movlb	0	; () banked
  6403  0013DE  0EC3               	movlw	low timer0_int_handler@val
  6404  0013E0  0100               	movlb	0	; () banked
  6405  0013E2  6FBD               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6406  0013E4  0E02               	movlw	2
  6407  0013E6  EC6B  F00C         	call	_FromMainHigh_recvmsg
  6408  0013EA  0100               	movlb	0	; () banked
  6409  0013EC  6FBF               	movwf	timer0_int_handler@length& (0+255),b
  6410  0013EE  0100               	movlb	0	; () banked
  6411  0013F0  6BC0               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6412  0013F2  0100               	movlb	0	; () banked
  6413  0013F4  BFBF               	btfsc	timer0_int_handler@length& (0+255),7,b
  6414  0013F6  07C0               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6418  0013F8  0100               	movlb	0	; () banked
  6419  0013FA  51BF               	movf	timer0_int_handler@length& (0+255),w,b
  6420  0013FC  0A02               	xorlw	2
  6421  0013FE  11C0               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6422  001400  A4D8               	btfss	status,2,c
  6423  001402  0012               	return	
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6427  001404  0E0A               	movlw	10
  6428  001406  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6429  001408  0100               	movlb	0	; () banked
  6430  00140A  0E00               	movlw	high timer0_int_handler@val
  6431  00140C  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6432  00140E  0100               	movlb	0	; () banked
  6433  001410  0EC3               	movlw	low timer0_int_handler@val
  6434  001412  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6435  001414  0E02               	movlw	2
  6436  001416  EC0F  F00D         	call	_ToMainHigh_sendmsg
  6437  00141A  0012               	return	
  6438  00141C                     __end_of_timer0_int_handler:
  6439                           	opt stack 0
  6440                           pclatu	equ	0xFFB
  6441                           pclath	equ	0xFFA
  6442                           tblptru	equ	0xFF8
  6443                           tblptrh	equ	0xFF7
  6444                           tblptrl	equ	0xFF6
  6445                           tablat	equ	0xFF5
  6446                           prodh	equ	0xFF4
  6447                           prodl	equ	0xFF3
  6448                           intcon	equ	0xFF2
  6449                           postinc0	equ	0xFEE
  6450                           fsr0h	equ	0xFEA
  6451                           fsr0l	equ	0xFE9
  6452                           wreg	equ	0xFE8
  6453                           indf1	equ	0xFE7
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           bsr	equ	0xFE0
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _WriteTimer0 *****************
  6465 ;; Defined at:
  6466 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  timer0          2   51[COMRAM] unsigned int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  timer           2   53[COMRAM] struct Timers
  6471 ;; Return value:  Size  Location     Type
  6472 ;;		None               void
  6473 ;; Registers used:
  6474 ;;		None
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6480 ;;      Params:         2       0       0       0       0
  6481 ;;      Locals:         2       0       0       0       0
  6482 ;;      Temps:          0       0       0       0       0
  6483 ;;      Totals:         4       0       0       0       0
  6484 ;;Total ram usage:        4 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_timer0_int_handler
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text45
  6494  001ADA                     __ptext45:
  6495                           	opt stack 0
  6496  001ADA                     _WriteTimer0:
  6497                           	opt stack 17
  6498                           
  6499                           ;incstack = 0
  6500  001ADA  C034  F036         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6501  001ADE  C035  F037         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6502  001AE2  C037  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6503  001AE6  C036  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6504  001AEA  0012               	return	
  6505  001AEC                     __end_of_WriteTimer0:
  6506                           	opt stack 0
  6507                           pclatu	equ	0xFFB
  6508                           pclath	equ	0xFFA
  6509                           tblptru	equ	0xFF8
  6510                           tblptrh	equ	0xFF7
  6511                           tblptrl	equ	0xFF6
  6512                           tablat	equ	0xFF5
  6513                           prodh	equ	0xFF4
  6514                           prodl	equ	0xFF3
  6515                           intcon	equ	0xFF2
  6516                           postinc0	equ	0xFEE
  6517                           fsr0h	equ	0xFEA
  6518                           fsr0l	equ	0xFE9
  6519                           wreg	equ	0xFE8
  6520                           indf1	equ	0xFE7
  6521                           fsr1h	equ	0xFE2
  6522                           fsr1l	equ	0xFE1
  6523                           bsr	equ	0xFE0
  6524                           indf2	equ	0xFDF
  6525                           postinc2	equ	0xFDE
  6526                           postdec2	equ	0xFDD
  6527                           fsr2h	equ	0xFDA
  6528                           fsr2l	equ	0xFD9
  6529                           status	equ	0xFD8
  6530                           
  6531 ;; *************** function _FromMainHigh_recvmsg *****************
  6532 ;; Defined at:
  6533 ;;		line 183 in file "src/messages.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  maxlength       1    wreg     unsigned char 
  6536 ;;  msgtype         2    5[BANK0 ] PTR unsigned char 
  6537 ;;		 -> timer0_int_handler@msgtype(2), 
  6538 ;;  data            2    7[BANK0 ] PTR void 
  6539 ;;		 -> timer0_int_handler@val(2), 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  maxlength       1   70[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      char 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6551 ;;      Params:         0       4       0       0       0
  6552 ;;      Locals:         1       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0
  6554 ;;      Totals:         1       4       0       0       0
  6555 ;;Total ram usage:        5 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    2
  6558 ;; This function calls:
  6559 ;;		i2_recv_msg
  6560 ;; This function is called by:
  6561 ;;		_timer0_int_handler
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text46
  6566  0018D6                     __ptext46:
  6567                           	opt stack 0
  6568  0018D6                     _FromMainHigh_recvmsg:
  6569                           	opt stack 15
  6570                           
  6571                           ;incstack = 0
  6572                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6573  0018D6  6E47               	movwf	FromMainHigh_recvmsg@maxlength,c
  6574                           
  6575                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6576  0018D8  0101               	movlb	1	; () banked
  6577  0018DA  0E01               	movlw	high _FromMainHigh_MQ
  6578  0018DC  6E3F               	movwf	i2recv_msg@qptr+1,c
  6579  0018DE  0101               	movlb	1	; () banked
  6580  0018E0  0E00               	movlw	low _FromMainHigh_MQ
  6581  0018E2  6E3E               	movwf	i2recv_msg@qptr,c
  6582  0018E4  C047  F040         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6583  0018E8  0100               	movlb	0	; () banked
  6584  0018EA  C0BC  F042         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6585  0018EE  0100               	movlb	0	; () banked
  6586  0018F0  C0BB  F041         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6587  0018F4  0100               	movlb	0	; () banked
  6588  0018F6  C0BE  F044         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6589  0018FA  0100               	movlb	0	; () banked
  6590  0018FC  C0BD  F043         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6591  001900  EC5F  F005         	call	i2_recv_msg	;wreg free
  6592  001904  0012               	return	
  6593  001906                     __end_of_FromMainHigh_recvmsg:
  6594                           	opt stack 0
  6595                           pclatu	equ	0xFFB
  6596                           pclath	equ	0xFFA
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           prodh	equ	0xFF4
  6602                           prodl	equ	0xFF3
  6603                           intcon	equ	0xFF2
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           bsr	equ	0xFE0
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           postdec2	equ	0xFDD
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function i2_recv_msg *****************
  6620 ;; Defined at:
  6621 ;;		line 63 in file "src/messages.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  6624 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6625 ;;  maxlength       1   63[COMRAM] unsigned char 
  6626 ;;  msgtype         2   64[COMRAM] PTR unsigned char 
  6627 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6628 ;;  data            2   66[COMRAM] PTR void 
  6629 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
  6632 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6633 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6634 ;;  recv_msg        2    1[BANK0 ] unsigned int 
  6635 ;;  recv_msg        1    0[BANK0 ] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      char 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6645 ;;      Params:         7       0       0       0       0
  6646 ;;      Locals:         0       5       0       0       0
  6647 ;;      Temps:          2       0       0       0       0
  6648 ;;      Totals:         9       5       0       0       0
  6649 ;;Total ram usage:       14 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    1
  6652 ;; This function calls:
  6653 ;;		i2_memcpy
  6654 ;; This function is called by:
  6655 ;;		_FromMainHigh_recvmsg
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text47
  6660  000ABE                     __ptext47:
  6661                           	opt stack 0
  6662  000ABE                     i2_recv_msg:
  6663                           	opt stack 15
  6664                           
  6665                           ;messages.c: 64: unsigned char slot;
  6666                           ;messages.c: 68: msg *qmsg;
  6667                           ;messages.c: 69: size_t tlength;
  6668                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6669                           
  6670                           ;incstack = 0
  6671  000ABE  EE20 F035          	lfsr	2,53
  6672  000AC2  503E               	movf	i2recv_msg@qptr,w,c
  6673  000AC4  26D9               	addwf	fsr2l,f,c
  6674  000AC6  503F               	movf	i2recv_msg@qptr+1,w,c
  6675  000AC8  22DA               	addwfc	fsr2h,f,c
  6676  000ACA  50DF               	movf	indf2,w,c
  6677  000ACC  0100               	movlb	0	; () banked
  6678  000ACE  6FB6               	movwf	i2recv_msg@slot& (0+255),b
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6682  000AD0  0100               	movlb	0	; () banked
  6683  000AD2  51B6               	movf	i2recv_msg@slot& (0+255),w,b
  6684  000AD4  0D0D               	mullw	13
  6685  000AD6  50F3               	movf	prodl,w,c
  6686  000AD8  243E               	addwf	i2recv_msg@qptr,w,c
  6687  000ADA  0100               	movlb	0	; () banked
  6688  000ADC  6FB9               	movwf	i2recv_msg@qmsg& (0+255),b
  6689  000ADE  50F4               	movf	prodh,w,c
  6690  000AE0  203F               	addwfc	i2recv_msg@qptr+1,w,c
  6691  000AE2  0100               	movlb	0	; () banked
  6692  000AE4  6FBA               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;messages.c: 74: if (qmsg->full == 1) {
  6696  000AE6  0E01               	movlw	1
  6697  000AE8  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6698  000AEC  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6699  000AF0  62DF               	cpfseq	indf2,c
  6700  000AF2  D05E               	goto	i2l3160
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6704  000AF4  0100               	movlb	0	; () banked
  6705  000AF6  EE20 F001          	lfsr	2,1
  6706  000AFA  0100               	movlb	0	; () banked
  6707  000AFC  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6708  000AFE  26D9               	addwf	fsr2l,f,c
  6709  000B00  0100               	movlb	0	; () banked
  6710  000B02  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6711  000B04  22DA               	addwfc	fsr2h,f,c
  6712  000B06  50DF               	movf	indf2,w,c
  6713  000B08  5C40               	subwf	i2recv_msg@maxlength,w,c
  6714  000B0A  B0D8               	btfsc	status,0,c
  6715  000B0C  D002               	goto	i2l3144
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;messages.c: 77: return (-3);
  6719  000B0E  0EFD               	movlw	253
  6720  000B10  0012               	return	
  6721  000B12                     i2l3144:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;messages.c: 78: }
  6725                           ;messages.c: 80: tlength = qmsg->length;
  6726  000B12  0100               	movlb	0	; () banked
  6727  000B14  EE20 F001          	lfsr	2,1
  6728  000B18  0100               	movlb	0	; () banked
  6729  000B1A  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6730  000B1C  26D9               	addwf	fsr2l,f,c
  6731  000B1E  0100               	movlb	0	; () banked
  6732  000B20  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6733  000B22  22DA               	addwfc	fsr2h,f,c
  6734  000B24  50DF               	movf	indf2,w,c
  6735  000B26  6E45               	movwf	??i2_recv_msg& (0+255),c
  6736  000B28  5045               	movf	??i2_recv_msg,w,c
  6737  000B2A  0100               	movlb	0	; () banked
  6738  000B2C  6FB7               	movwf	i2recv_msg@tlength& (0+255),b
  6739  000B2E  0100               	movlb	0	; () banked
  6740  000B30  6BB8               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6744  000B32  C044  F035         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6745  000B36  C043  F034         	movff	i2recv_msg@data,i2memcpy@d1
  6746  000B3A  0E03               	movlw	3
  6747  000B3C  0100               	movlb	0	; () banked
  6748  000B3E  25B9               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6749  000B40  6E45               	movwf	??i2_recv_msg& (0+255),c
  6750  000B42  0E00               	movlw	0
  6751  000B44  0100               	movlb	0	; () banked
  6752  000B46  21BA               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6753  000B48  6E46               	movwf	(??i2_recv_msg+1)& (0+255),c
  6754  000B4A  C045  F036         	movff	??i2_recv_msg,i2memcpy@s1
  6755  000B4E  C046  F037         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6756  000B52  C0B7  F038         	movff	i2recv_msg@tlength,i2memcpy@n
  6757  000B56  C0B8  F039         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6758  000B5A  EC5B  F00B         	call	i2_memcpy	;wreg free
  6759                           
  6760                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6761  000B5E  EE20 F035          	lfsr	2,53
  6762  000B62  503E               	movf	i2recv_msg@qptr,w,c
  6763  000B64  26D9               	addwf	fsr2l,f,c
  6764  000B66  503F               	movf	i2recv_msg@qptr+1,w,c
  6765  000B68  22DA               	addwfc	fsr2h,f,c
  6766  000B6A  EE10 F035          	lfsr	1,53
  6767  000B6E  503E               	movf	i2recv_msg@qptr,w,c
  6768  000B70  26E1               	addwf	fsr1l,f,c
  6769  000B72  503F               	movf	i2recv_msg@qptr+1,w,c
  6770  000B74  22E2               	addwfc	fsr1h,f,c
  6771  000B76  50E7               	movf	indf1,w,c
  6772  000B78  6E45               	movwf	??i2_recv_msg& (0+255),c
  6773  000B7A  2845               	incf	??i2_recv_msg,w,c
  6774  000B7C  0B03               	andlw	3
  6775  000B7E  6EDF               	movwf	indf2,c
  6776                           
  6777                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6778  000B80  0100               	movlb	0	; () banked
  6779  000B82  EE20 F002          	lfsr	2,2
  6780  000B86  0100               	movlb	0	; () banked
  6781  000B88  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6782  000B8A  26D9               	addwf	fsr2l,f,c
  6783  000B8C  0100               	movlb	0	; () banked
  6784  000B8E  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6785  000B90  22DA               	addwfc	fsr2h,f,c
  6786  000B92  C041  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6787  000B96  C042  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6788  000B9A  CFDF FFE7          	movff	indf2,indf1
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;messages.c: 91: qmsg->full = 0;
  6792  000B9E  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6793  000BA2  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6794  000BA6  0E00               	movlw	0
  6795  000BA8  6EDF               	movwf	indf2,c
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;messages.c: 92: return (tlength);
  6799  000BAA  0100               	movlb	0	; () banked
  6800  000BAC  51B7               	movf	i2recv_msg@tlength& (0+255),w,b
  6801  000BAE  0012               	return	
  6802  000BB0                     i2l3160:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;messages.c: 94: return (-4);
  6806  000BB0  0EFC               	movlw	252
  6807  000BB2  0012               	return	
  6808  000BB4                     __end_ofi2_recv_msg:
  6809                           	opt stack 0
  6810                           pclatu	equ	0xFFB
  6811                           pclath	equ	0xFFA
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           prodh	equ	0xFF4
  6817                           prodl	equ	0xFF3
  6818                           intcon	equ	0xFF2
  6819                           postinc0	equ	0xFEE
  6820                           fsr0h	equ	0xFEA
  6821                           fsr0l	equ	0xFE9
  6822                           wreg	equ	0xFE8
  6823                           indf1	equ	0xFE7
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           bsr	equ	0xFE0
  6827                           indf2	equ	0xFDF
  6828                           postinc2	equ	0xFDE
  6829                           postdec2	equ	0xFDD
  6830                           fsr2h	equ	0xFDA
  6831                           fsr2l	equ	0xFD9
  6832                           status	equ	0xFD8
  6833                           
  6834 ;; *************** function _i2c_int_handler *****************
  6835 ;; Defined at:
  6836 ;;		line 100 in file "src/my_i2c.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6841 ;;  data_read       1   14[BANK0 ] unsigned char 
  6842 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6843 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6844 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6845 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6846 ;;  data_written    1    9[BANK0 ] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6856 ;;      Params:         0       0       0       0       0
  6857 ;;      Locals:         0       9       0       0       0
  6858 ;;      Temps:          0       1       0       0       0
  6859 ;;      Totals:         0      10       0       0       0
  6860 ;;Total ram usage:       10 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    3
  6863 ;; This function calls:
  6864 ;;		_ToMainHigh_sendmsg
  6865 ;;		_handle_start
  6866 ;; This function is called by:
  6867 ;;		_InterruptHandlerHigh
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text48
  6872  0000C4                     __ptext48:
  6873                           	opt stack 0
  6874  0000C4                     _i2c_int_handler:
  6875                           	opt stack 15
  6876                           
  6877                           ;my_i2c.c: 101: unsigned char i2c_data;
  6878                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;incstack = 0
  6882  0000C4  0E00               	movlw	0
  6883  0000C6  0100               	movlb	0	; () banked
  6884  0000C8  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6885                           
  6886                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6887  0000CA  0E00               	movlw	0
  6888  0000CC  0100               	movlb	0	; () banked
  6889  0000CE  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  6890                           
  6891                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6892  0000D0  0E00               	movlw	0
  6893  0000D2  0100               	movlb	0	; () banked
  6894  0000D4  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6895                           
  6896                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6897  0000D6  0E00               	movlw	0
  6898  0000D8  0100               	movlb	0	; () banked
  6899  0000DA  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6900                           
  6901                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6902  0000DC  0E00               	movlw	0
  6903  0000DE  0100               	movlb	0	; () banked
  6904  0000E0  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6908                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6909  0000E2  ACC6               	btfss	4038,6,c	;volatile
  6910  0000E4  D024               	goto	i2l3324
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6914  0000E6  9CC6               	bcf	4038,6,c	;volatile
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6918  0000E8  0100               	movlb	0	; () banked
  6919  0000EA  EE20 F00C          	lfsr	2,12
  6920  0000EE  0100               	movlb	0	; () banked
  6921  0000F0  51E1               	movf	_ic_ptr& (0+255),w,b
  6922  0000F2  26D9               	addwf	fsr2l,f,c
  6923  0000F4  0100               	movlb	0	; () banked
  6924  0000F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6925  0000F8  22DA               	addwfc	fsr2h,f,c
  6926  0000FA  0E05               	movlw	5
  6927  0000FC  6EDF               	movwf	indf2,c
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 116: overrun_error = 1;
  6931  0000FE  0E01               	movlw	1
  6932  000100  0100               	movlb	0	; () banked
  6933  000102  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6937  000104  0100               	movlb	0	; () banked
  6938  000106  EE20 F00E          	lfsr	2,14
  6939  00010A  0100               	movlb	0	; () banked
  6940  00010C  51E1               	movf	_ic_ptr& (0+255),w,b
  6941  00010E  26D9               	addwf	fsr2l,f,c
  6942  000110  0100               	movlb	0	; () banked
  6943  000112  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6944  000114  22DA               	addwfc	fsr2h,f,c
  6945  000116  2ADF               	incf	indf2,f,c
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6949  000118  0100               	movlb	0	; () banked
  6950  00011A  EE20 F00D          	lfsr	2,13
  6951  00011E  0100               	movlb	0	; () banked
  6952  000120  51E1               	movf	_ic_ptr& (0+255),w,b
  6953  000122  26D9               	addwf	fsr2l,f,c
  6954  000124  0100               	movlb	0	; () banked
  6955  000126  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6956  000128  22DA               	addwfc	fsr2h,f,c
  6957  00012A  0E04               	movlw	4
  6958  00012C  6EDF               	movwf	indf2,c
  6959  00012E                     i2l3324:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;my_i2c.c: 119: }
  6963                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6964  00012E  A0C7               	btfss	4039,0,c	;volatile
  6965  000130  D005               	goto	i2l3330
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6969  000132  CFC9 F0C1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;my_i2c.c: 123: data_read = 1;
  6973  000136  0E01               	movlw	1
  6974  000138  0100               	movlb	0	; () banked
  6975  00013A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6976  00013C                     i2l3330:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;my_i2c.c: 124: }
  6980                           ;my_i2c.c: 126: if (!overrun_error) {
  6981  00013C  0100               	movlb	0	; () banked
  6982  00013E  67C0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6983  000140  D19F               	goto	i2l267
  6984  000142  D188               	goto	i2l3418
  6985  000144                     i2l269:
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;my_i2c.c: 129: {
  6989                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  6990  000144  A6C7               	btfss	4039,3,c	;volatile
  6991  000146  D19C               	goto	i2l267
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;my_i2c.c: 132: handle_start(data_read);
  6995  000148  0100               	movlb	0	; () banked
  6996  00014A  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  6997  00014C  EC32  F007         	call	_handle_start
  6998                           
  6999                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7000  000150  0100               	movlb	0	; () banked
  7001  000152  EE20 F00C          	lfsr	2,12
  7002  000156  0100               	movlb	0	; () banked
  7003  000158  51E1               	movf	_ic_ptr& (0+255),w,b
  7004  00015A  26D9               	addwf	fsr2l,f,c
  7005  00015C  0100               	movlb	0	; () banked
  7006  00015E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  000160  22DA               	addwfc	fsr2h,f,c
  7008  000162  0E08               	movlw	8
  7009  000164  62DF               	cpfseq	indf2,c
  7010  000166  D18C               	goto	i2l267
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 135: data_read = 0;
  7014  000168  0E00               	movlw	0
  7015  00016A  0100               	movlb	0	; () banked
  7016  00016C  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7017                           
  7018                           ;my_i2c.c: 136: msg_to_send = 1;
  7019  00016E  0E01               	movlw	1
  7020  000170  0100               	movlb	0	; () banked
  7021  000172  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7022  000174  D185               	goto	i2l267
  7023  000176                     i2l273:
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;my_i2c.c: 142: {
  7027                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7028  000176  A8C7               	btfss	4039,4,c	;volatile
  7029  000178  D02A               	goto	i2l3350
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7033  00017A  0100               	movlb	0	; () banked
  7034  00017C  EE20 F00B          	lfsr	2,11
  7035  000180  0100               	movlb	0	; () banked
  7036  000182  51E1               	movf	_ic_ptr& (0+255),w,b
  7037  000184  26D9               	addwf	fsr2l,f,c
  7038  000186  0100               	movlb	0	; () banked
  7039  000188  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7040  00018A  22DA               	addwfc	fsr2h,f,c
  7041  00018C  2ADF               	incf	indf2,f,c
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;my_i2c.c: 148: if (data_read) {
  7045  00018E  0100               	movlb	0	; () banked
  7046  000190  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7047  000192  B4D8               	btfsc	status,2,c
  7048  000194  D154               	goto	L9
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7052  000196  BAC7               	btfsc	4039,5,c	;volatile
  7053  000198  D004               	goto	i2l3348
  7054                           
  7055                           ; BSR set to: 0
  7056                           ;my_i2c.c: 150: msg_ready = 1;
  7057  00019A  0E01               	movlw	1
  7058  00019C  0100               	movlb	0	; () banked
  7059  00019E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7060                           
  7061                           ;my_i2c.c: 151: } else {
  7062  0001A0  D14E               	goto	L9
  7063  0001A2                     i2l3348:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7067  0001A2  0100               	movlb	0	; () banked
  7068  0001A4  EE20 F00E          	lfsr	2,14
  7069  0001A8  0100               	movlb	0	; () banked
  7070  0001AA  51E1               	movf	_ic_ptr& (0+255),w,b
  7071  0001AC  26D9               	addwf	fsr2l,f,c
  7072  0001AE  0100               	movlb	0	; () banked
  7073  0001B0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7074  0001B2  22DA               	addwfc	fsr2h,f,c
  7075  0001B4  2ADF               	incf	indf2,f,c
  7076                           
  7077                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7078  0001B6  0100               	movlb	0	; () banked
  7079  0001B8  EE20 F00D          	lfsr	2,13
  7080  0001BC  0100               	movlb	0	; () banked
  7081  0001BE  51E1               	movf	_ic_ptr& (0+255),w,b
  7082  0001C0  26D9               	addwf	fsr2l,f,c
  7083  0001C2  0100               	movlb	0	; () banked
  7084  0001C4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7085  0001C6  22DA               	addwfc	fsr2h,f,c
  7086  0001C8  0E06               	movlw	6
  7087  0001CA  6EDF               	movwf	indf2,c
  7088                           
  7089                           ; BSR set to: 0
  7090  0001CC  D138               	goto	L9
  7091  0001CE                     i2l3350:
  7092                           
  7093                           ; BSR set to: 0
  7094  0001CE  0100               	movlb	0	; () banked
  7095  0001D0  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7096  0001D2  B4D8               	btfsc	status,2,c
  7097  0001D4  D155               	goto	i2l267
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7101  0001D6  0100               	movlb	0	; () banked
  7102  0001D8  EE20 F00B          	lfsr	2,11
  7103  0001DC  0100               	movlb	0	; () banked
  7104  0001DE  51E1               	movf	_ic_ptr& (0+255),w,b
  7105  0001E0  26D9               	addwf	fsr2l,f,c
  7106  0001E2  0100               	movlb	0	; () banked
  7107  0001E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7108  0001E6  22DA               	addwfc	fsr2h,f,c
  7109  0001E8  2ADF               	incf	indf2,f,c
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7113  0001EA  BAC7               	btfsc	4039,5,c	;volatile
  7114  0001EC  D019               	goto	i2l3366
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7118  0001EE  B4C7               	btfsc	4039,2,c	;volatile
  7119  0001F0  D00B               	goto	i2l3360
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7123  0001F2  0100               	movlb	0	; () banked
  7124  0001F4  EE20 F00C          	lfsr	2,12
  7125  0001F8  0100               	movlb	0	; () banked
  7126  0001FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7127  0001FC  26D9               	addwf	fsr2l,f,c
  7128  0001FE  0100               	movlb	0	; () banked
  7129  000200  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7130  000202  22DA               	addwfc	fsr2h,f,c
  7131  000204  0E07               	movlw	7
  7132  000206  D071               	goto	L7
  7133  000208                     i2l3360:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7137  000208  0100               	movlb	0	; () banked
  7138  00020A  EE20 F00C          	lfsr	2,12
  7139  00020E  0100               	movlb	0	; () banked
  7140  000210  51E1               	movf	_ic_ptr& (0+255),w,b
  7141  000212  26D9               	addwf	fsr2l,f,c
  7142  000214  0100               	movlb	0	; () banked
  7143  000216  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  000218  22DA               	addwfc	fsr2h,f,c
  7145  00021A  0E08               	movlw	8
  7146  00021C  6EDF               	movwf	indf2,c
  7147  00021E  D108               	goto	L6
  7148  000220                     i2l3366:
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7152  000220  0100               	movlb	0	; () banked
  7153  000222  EE20 F00E          	lfsr	2,14
  7154  000226  0100               	movlb	0	; () banked
  7155  000228  51E1               	movf	_ic_ptr& (0+255),w,b
  7156  00022A  26D9               	addwf	fsr2l,f,c
  7157  00022C  0100               	movlb	0	; () banked
  7158  00022E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7159  000230  22DA               	addwfc	fsr2h,f,c
  7160  000232  2ADF               	incf	indf2,f,c
  7161                           
  7162                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7163  000234  0100               	movlb	0	; () banked
  7164  000236  EE20 F00C          	lfsr	2,12
  7165  00023A  0100               	movlb	0	; () banked
  7166  00023C  51E1               	movf	_ic_ptr& (0+255),w,b
  7167  00023E  26D9               	addwf	fsr2l,f,c
  7168  000240  0100               	movlb	0	; () banked
  7169  000242  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7170  000244  22DA               	addwfc	fsr2h,f,c
  7171  000246  0E05               	movlw	5
  7172  000248  6EDF               	movwf	indf2,c
  7173                           
  7174                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7175  00024A  0100               	movlb	0	; () banked
  7176  00024C  EE20 F00D          	lfsr	2,13
  7177  000250  0100               	movlb	0	; () banked
  7178  000252  51E1               	movf	_ic_ptr& (0+255),w,b
  7179  000254  26D9               	addwf	fsr2l,f,c
  7180  000256  0100               	movlb	0	; () banked
  7181  000258  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7182  00025A  22DA               	addwfc	fsr2h,f,c
  7183  00025C  0E06               	movlw	6
  7184  00025E  D045               	goto	L7
  7185  000260                     i2l3368:
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;my_i2c.c: 177: {
  7189                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7190  000260  0100               	movlb	0	; () banked
  7191  000262  EE20 F01A          	lfsr	2,26
  7192  000266  0100               	movlb	0	; () banked
  7193  000268  51E1               	movf	_ic_ptr& (0+255),w,b
  7194  00026A  26D9               	addwf	fsr2l,f,c
  7195  00026C  0100               	movlb	0	; () banked
  7196  00026E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7197  000270  22DA               	addwfc	fsr2h,f,c
  7198  000272  50DF               	movf	indf2,w,c
  7199  000274  0100               	movlb	0	; () banked
  7200  000276  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7201  000278  0100               	movlb	0	; () banked
  7202  00027A  EE20 F019          	lfsr	2,25
  7203  00027E  0100               	movlb	0	; () banked
  7204  000280  51E1               	movf	_ic_ptr& (0+255),w,b
  7205  000282  26D9               	addwf	fsr2l,f,c
  7206  000284  0100               	movlb	0	; () banked
  7207  000286  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7208  000288  22DA               	addwfc	fsr2h,f,c
  7209  00028A  50DF               	movf	indf2,w,c
  7210  00028C  0100               	movlb	0	; () banked
  7211  00028E  5DBB               	subwf	??_i2c_int_handler& (0+255),w,b
  7212  000290  B0D8               	btfsc	status,0,c
  7213  000292  D0D5               	goto	L9
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7217  000294  0100               	movlb	0	; () banked
  7218  000296  EE20 F01A          	lfsr	2,26
  7219  00029A  0100               	movlb	0	; () banked
  7220  00029C  51E1               	movf	_ic_ptr& (0+255),w,b
  7221  00029E  26D9               	addwf	fsr2l,f,c
  7222  0002A0  0100               	movlb	0	; () banked
  7223  0002A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7224  0002A4  22DA               	addwfc	fsr2h,f,c
  7225  0002A6  50DF               	movf	indf2,w,c
  7226  0002A8  0100               	movlb	0	; () banked
  7227  0002AA  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7228  0002AC  0100               	movlb	0	; () banked
  7229  0002AE  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7230  0002B0  0D01               	mullw	1
  7231  0002B2  0E0F               	movlw	15
  7232  0002B4  26F3               	addwf	prodl,f,c
  7233  0002B6  0E00               	movlw	0
  7234  0002B8  22F4               	addwfc	prodh,f,c
  7235  0002BA  50F3               	movf	prodl,w,c
  7236  0002BC  0100               	movlb	0	; () banked
  7237  0002BE  25E1               	addwf	_ic_ptr& (0+255),w,b
  7238  0002C0  6ED9               	movwf	fsr2l,c
  7239  0002C2  50F4               	movf	prodh,w,c
  7240  0002C4  0100               	movlb	0	; () banked
  7241  0002C6  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7242  0002C8  6EDA               	movwf	fsr2h,c
  7243  0002CA  50DF               	movf	indf2,w,c
  7244  0002CC  6EC9               	movwf	4041,c	;volatile
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7248  0002CE  0100               	movlb	0	; () banked
  7249  0002D0  EE20 F01A          	lfsr	2,26
  7250  0002D4  0100               	movlb	0	; () banked
  7251  0002D6  51E1               	movf	_ic_ptr& (0+255),w,b
  7252  0002D8  26D9               	addwf	fsr2l,f,c
  7253  0002DA  0100               	movlb	0	; () banked
  7254  0002DC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7255  0002DE  22DA               	addwfc	fsr2h,f,c
  7256  0002E0  2ADF               	incf	indf2,f,c
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;my_i2c.c: 181: data_written = 1;
  7260  0002E2  0E01               	movlw	1
  7261  0002E4  0100               	movlb	0	; () banked
  7262  0002E6  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  7263                           
  7264                           ;my_i2c.c: 182: } else {
  7265  0002E8  D0CB               	goto	i2l267
  7266  0002EA                     L7:
  7267  0002EA  6EDF               	movwf	indf2,c
  7268  0002EC  D0C9               	goto	i2l267
  7269  0002EE                     i2l287:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;my_i2c.c: 189: {
  7273                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7274  0002EE  A8C7               	btfss	4039,4,c	;volatile
  7275  0002F0  D05A               	goto	i2l3396
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7279  0002F2  0100               	movlb	0	; () banked
  7280  0002F4  EE20 F00B          	lfsr	2,11
  7281  0002F8  0100               	movlb	0	; () banked
  7282  0002FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7283  0002FC  26D9               	addwf	fsr2l,f,c
  7284  0002FE  0100               	movlb	0	; () banked
  7285  000300  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  000302  22DA               	addwfc	fsr2h,f,c
  7287  000304  2ADF               	incf	indf2,f,c
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 194: if (data_read) {
  7291  000306  0100               	movlb	0	; () banked
  7292  000308  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7293  00030A  B4D8               	btfsc	status,2,c
  7294  00030C  D048               	goto	i2l3392
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7298  00030E  AAC7               	btfss	4039,5,c	;volatile
  7299  000310  D025               	goto	i2l3390
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7303  000312  0100               	movlb	0	; () banked
  7304  000314  EE20 F00A          	lfsr	2,10
  7305  000318  0100               	movlb	0	; () banked
  7306  00031A  51E1               	movf	_ic_ptr& (0+255),w,b
  7307  00031C  26D9               	addwf	fsr2l,f,c
  7308  00031E  0100               	movlb	0	; () banked
  7309  000320  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7310  000322  22DA               	addwfc	fsr2h,f,c
  7311  000324  50DF               	movf	indf2,w,c
  7312  000326  0100               	movlb	0	; () banked
  7313  000328  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7314  00032A  0100               	movlb	0	; () banked
  7315  00032C  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7316  00032E  0D01               	mullw	1
  7317  000330  50F3               	movf	prodl,w,c
  7318  000332  0100               	movlb	0	; () banked
  7319  000334  25E1               	addwf	_ic_ptr& (0+255),w,b
  7320  000336  6ED9               	movwf	fsr2l,c
  7321  000338  50F4               	movf	prodh,w,c
  7322  00033A  0100               	movlb	0	; () banked
  7323  00033C  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7324  00033E  6EDA               	movwf	fsr2h,c
  7325  000340  0100               	movlb	0	; () banked
  7326  000342  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7330  000346  0100               	movlb	0	; () banked
  7331  000348  EE20 F00A          	lfsr	2,10
  7332  00034C  0100               	movlb	0	; () banked
  7333  00034E  51E1               	movf	_ic_ptr& (0+255),w,b
  7334  000350  26D9               	addwf	fsr2l,f,c
  7335  000352  0100               	movlb	0	; () banked
  7336  000354  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7337  000356  22DA               	addwfc	fsr2h,f,c
  7338  000358  2ADF               	incf	indf2,f,c
  7339  00035A  D021               	goto	i2l3392
  7340  00035C                     i2l3390:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7344  00035C  0100               	movlb	0	; () banked
  7345  00035E  EE20 F00E          	lfsr	2,14
  7346  000362  0100               	movlb	0	; () banked
  7347  000364  51E1               	movf	_ic_ptr& (0+255),w,b
  7348  000366  26D9               	addwf	fsr2l,f,c
  7349  000368  0100               	movlb	0	; () banked
  7350  00036A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7351  00036C  22DA               	addwfc	fsr2h,f,c
  7352  00036E  2ADF               	incf	indf2,f,c
  7353                           
  7354                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7355  000370  0100               	movlb	0	; () banked
  7356  000372  EE20 F00D          	lfsr	2,13
  7357  000376  0100               	movlb	0	; () banked
  7358  000378  51E1               	movf	_ic_ptr& (0+255),w,b
  7359  00037A  26D9               	addwf	fsr2l,f,c
  7360  00037C  0100               	movlb	0	; () banked
  7361  00037E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  000380  22DA               	addwfc	fsr2h,f,c
  7363  000382  0E06               	movlw	6
  7364  000384  6EDF               	movwf	indf2,c
  7365                           
  7366                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7367  000386  0100               	movlb	0	; () banked
  7368  000388  EE20 F00C          	lfsr	2,12
  7369  00038C  0100               	movlb	0	; () banked
  7370  00038E  51E1               	movf	_ic_ptr& (0+255),w,b
  7371  000390  26D9               	addwf	fsr2l,f,c
  7372  000392  0100               	movlb	0	; () banked
  7373  000394  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7374  000396  22DA               	addwfc	fsr2h,f,c
  7375  000398  0E05               	movlw	5
  7376  00039A  6EDF               	movwf	indf2,c
  7377  00039C  D050               	goto	L9
  7378  00039E                     i2l3392:
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 205: msg_ready = 1;
  7382  00039E  0E01               	movlw	1
  7383  0003A0  0100               	movlb	0	; () banked
  7384  0003A2  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387  0003A4  D04C               	goto	L9
  7388  0003A6                     i2l3396:
  7389                           
  7390                           ; BSR set to: 0
  7391  0003A6  0100               	movlb	0	; () banked
  7392  0003A8  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7393  0003AA  B4D8               	btfsc	status,2,c
  7394  0003AC  D069               	goto	i2l267
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7398  0003AE  0100               	movlb	0	; () banked
  7399  0003B0  EE20 F00B          	lfsr	2,11
  7400  0003B4  0100               	movlb	0	; () banked
  7401  0003B6  51E1               	movf	_ic_ptr& (0+255),w,b
  7402  0003B8  26D9               	addwf	fsr2l,f,c
  7403  0003BA  0100               	movlb	0	; () banked
  7404  0003BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7405  0003BE  22DA               	addwfc	fsr2h,f,c
  7406  0003C0  2ADF               	incf	indf2,f,c
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7410  0003C2  AAC7               	btfss	4039,5,c	;volatile
  7411  0003C4  D025               	goto	i2l295
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7415  0003C6  0100               	movlb	0	; () banked
  7416  0003C8  EE20 F00A          	lfsr	2,10
  7417  0003CC  0100               	movlb	0	; () banked
  7418  0003CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7419  0003D0  26D9               	addwf	fsr2l,f,c
  7420  0003D2  0100               	movlb	0	; () banked
  7421  0003D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7422  0003D6  22DA               	addwfc	fsr2h,f,c
  7423  0003D8  50DF               	movf	indf2,w,c
  7424  0003DA  0100               	movlb	0	; () banked
  7425  0003DC  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7426  0003DE  0100               	movlb	0	; () banked
  7427  0003E0  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7428  0003E2  0D01               	mullw	1
  7429  0003E4  50F3               	movf	prodl,w,c
  7430  0003E6  0100               	movlb	0	; () banked
  7431  0003E8  25E1               	addwf	_ic_ptr& (0+255),w,b
  7432  0003EA  6ED9               	movwf	fsr2l,c
  7433  0003EC  50F4               	movf	prodh,w,c
  7434  0003EE  0100               	movlb	0	; () banked
  7435  0003F0  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7436  0003F2  6EDA               	movwf	fsr2h,c
  7437  0003F4  0100               	movlb	0	; () banked
  7438  0003F6  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7442  0003FA  0100               	movlb	0	; () banked
  7443  0003FC  EE20 F00A          	lfsr	2,10
  7444  000400  0100               	movlb	0	; () banked
  7445  000402  51E1               	movf	_ic_ptr& (0+255),w,b
  7446  000404  26D9               	addwf	fsr2l,f,c
  7447  000406  0100               	movlb	0	; () banked
  7448  000408  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7449  00040A  22DA               	addwfc	fsr2h,f,c
  7450  00040C  2ADF               	incf	indf2,f,c
  7451                           
  7452                           ;my_i2c.c: 213: } else {
  7453  00040E  D038               	goto	i2l267
  7454  000410                     i2l295:
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7458  000410  A4C7               	btfss	4039,2,c	;volatile
  7459  000412  D6C7               	goto	i2l3348
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7463  000414  0100               	movlb	0	; () banked
  7464  000416  EE20 F00C          	lfsr	2,12
  7465  00041A  0100               	movlb	0	; () banked
  7466  00041C  51E1               	movf	_ic_ptr& (0+255),w,b
  7467  00041E  26D9               	addwf	fsr2l,f,c
  7468  000420  0100               	movlb	0	; () banked
  7469  000422  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7470  000424  22DA               	addwfc	fsr2h,f,c
  7471  000426  0E08               	movlw	8
  7472  000428  6EDF               	movwf	indf2,c
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;my_i2c.c: 216: msg_ready = 1;
  7476  00042A  0E01               	movlw	1
  7477  00042C  0100               	movlb	0	; () banked
  7478  00042E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7479  000430                     L6:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 217: msg_to_send = 1;
  7483  000430  0E01               	movlw	1
  7484  000432  0100               	movlb	0	; () banked
  7485  000434  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;my_i2c.c: 219: data_read = 0;
  7489  000436  0E00               	movlw	0
  7490  000438  0100               	movlb	0	; () banked
  7491  00043A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7492                           
  7493                           ;my_i2c.c: 220: } else {
  7494  00043C  D021               	goto	i2l267
  7495  00043E                     L9:
  7496                           
  7497                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7498  00043E  0100               	movlb	0	; () banked
  7499  000440  EE20 F00C          	lfsr	2,12
  7500  000444  0100               	movlb	0	; () banked
  7501  000446  51E1               	movf	_ic_ptr& (0+255),w,b
  7502  000448  26D9               	addwf	fsr2l,f,c
  7503  00044A  0100               	movlb	0	; () banked
  7504  00044C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7505  00044E  22DA               	addwfc	fsr2h,f,c
  7506  000450  0E05               	movlw	5
  7507  000452  D74B               	goto	L7
  7508  000454                     i2l3418:
  7509                           
  7510                           ; BSR set to: 0
  7511  000454  0100               	movlb	0	; () banked
  7512  000456  EE20 F00C          	lfsr	2,12
  7513  00045A  0100               	movlb	0	; () banked
  7514  00045C  51E1               	movf	_ic_ptr& (0+255),w,b
  7515  00045E  26D9               	addwf	fsr2l,f,c
  7516  000460  0100               	movlb	0	; () banked
  7517  000462  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  000464  22DA               	addwfc	fsr2h,f,c
  7519  000466  50DF               	movf	indf2,w,c
  7520                           
  7521                           ; Switch size 1, requested type "space"
  7522                           ; Number of cases is 4, Range of values is 5 to 8
  7523                           ; switch strategies available:
  7524                           ; Name         Instructions Cycles
  7525                           ; simple_byte           13     7 (average)
  7526                           ;	Chosen strategy is simple_byte
  7527  000468  0A05               	xorlw	5	; case 5
  7528  00046A  B4D8               	btfsc	status,2,c
  7529  00046C  D66B               	goto	i2l269
  7530  00046E  0A03               	xorlw	3	; case 6
  7531  000470  B4D8               	btfsc	status,2,c
  7532  000472  D681               	goto	i2l273
  7533  000474  0A01               	xorlw	1	; case 7
  7534  000476  B4D8               	btfsc	status,2,c
  7535  000478  D73A               	goto	i2l287
  7536  00047A  0A0F               	xorlw	15	; case 8
  7537  00047C  B4D8               	btfsc	status,2,c
  7538  00047E  D6F0               	goto	i2l3368
  7539  000480                     i2l267:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 230: }
  7543                           ;my_i2c.c: 233: if (data_read || data_written) {
  7544  000480  0100               	movlb	0	; () banked
  7545  000482  67C4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7546  000484  D004               	goto	i2l301
  7547                           
  7548                           ; BSR set to: 0
  7549  000486  0100               	movlb	0	; () banked
  7550  000488  51BF               	movf	i2c_int_handler@data_written& (0+255),w,b
  7551  00048A  B4D8               	btfsc	status,2,c
  7552  00048C  D002               	goto	i2l3424
  7553  00048E                     i2l301:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7557  00048E  A8C6               	btfss	4038,4,c	;volatile
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7561  000490  88C6               	bsf	4038,4,c	;volatile
  7562  000492                     i2l3424:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;my_i2c.c: 237: }
  7566                           ;my_i2c.c: 238: }
  7567                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7568  000492  0100               	movlb	0	; () banked
  7569  000494  EE20 F00A          	lfsr	2,10
  7570  000498  0100               	movlb	0	; () banked
  7571  00049A  51E1               	movf	_ic_ptr& (0+255),w,b
  7572  00049C  26D9               	addwf	fsr2l,f,c
  7573  00049E  0100               	movlb	0	; () banked
  7574  0004A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7575  0004A2  22DA               	addwfc	fsr2h,f,c
  7576  0004A4  0E08               	movlw	8
  7577  0004A6  64DF               	cpfsgt	indf2,c
  7578  0004A8  D023               	goto	i2l3430
  7579                           
  7580                           ; BSR set to: 0
  7581  0004AA  0100               	movlb	0	; () banked
  7582  0004AC  67C3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7583  0004AE  D020               	goto	i2l3430
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7587  0004B0  0100               	movlb	0	; () banked
  7588  0004B2  EE20 F00C          	lfsr	2,12
  7589  0004B6  0100               	movlb	0	; () banked
  7590  0004B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7591  0004BA  26D9               	addwf	fsr2l,f,c
  7592  0004BC  0100               	movlb	0	; () banked
  7593  0004BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7594  0004C0  22DA               	addwfc	fsr2h,f,c
  7595  0004C2  0E05               	movlw	5
  7596  0004C4  6EDF               	movwf	indf2,c
  7597                           
  7598                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7599  0004C6  0100               	movlb	0	; () banked
  7600  0004C8  EE20 F00E          	lfsr	2,14
  7601  0004CC  0100               	movlb	0	; () banked
  7602  0004CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7603  0004D0  26D9               	addwf	fsr2l,f,c
  7604  0004D2  0100               	movlb	0	; () banked
  7605  0004D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7606  0004D6  22DA               	addwfc	fsr2h,f,c
  7607  0004D8  2ADF               	incf	indf2,f,c
  7608                           
  7609                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7610  0004DA  0100               	movlb	0	; () banked
  7611  0004DC  EE20 F00D          	lfsr	2,13
  7612  0004E0  0100               	movlb	0	; () banked
  7613  0004E2  51E1               	movf	_ic_ptr& (0+255),w,b
  7614  0004E4  26D9               	addwf	fsr2l,f,c
  7615  0004E6  0100               	movlb	0	; () banked
  7616  0004E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  0004EA  22DA               	addwfc	fsr2h,f,c
  7618  0004EC  0E07               	movlw	7
  7619  0004EE  6EDF               	movwf	indf2,c
  7620  0004F0                     i2l3430:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;my_i2c.c: 245: }
  7624                           ;my_i2c.c: 247: if (msg_ready) {
  7625  0004F0  0100               	movlb	0	; () banked
  7626  0004F2  51C3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7627  0004F4  B4D8               	btfsc	status,2,c
  7628  0004F6  D03E               	goto	i2l3438
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7632  0004F8  0100               	movlb	0	; () banked
  7633  0004FA  EE20 F00B          	lfsr	2,11
  7634  0004FE  0100               	movlb	0	; () banked
  7635  000500  51E1               	movf	_ic_ptr& (0+255),w,b
  7636  000502  26D9               	addwf	fsr2l,f,c
  7637  000504  0100               	movlb	0	; () banked
  7638  000506  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7639  000508  22DA               	addwfc	fsr2h,f,c
  7640  00050A  0100               	movlb	0	; () banked
  7641  00050C  EE10 F00A          	lfsr	1,10
  7642  000510  0100               	movlb	0	; () banked
  7643  000512  51E1               	movf	_ic_ptr& (0+255),w,b
  7644  000514  26E1               	addwf	fsr1l,f,c
  7645  000516  0100               	movlb	0	; () banked
  7646  000518  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7647  00051A  22E2               	addwfc	fsr1h,f,c
  7648  00051C  50E7               	movf	indf1,w,c
  7649  00051E  0100               	movlb	0	; () banked
  7650  000520  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7651  000522  0100               	movlb	0	; () banked
  7652  000524  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7653  000526  0D01               	mullw	1
  7654  000528  50F3               	movf	prodl,w,c
  7655  00052A  0100               	movlb	0	; () banked
  7656  00052C  25E1               	addwf	_ic_ptr& (0+255),w,b
  7657  00052E  6EE1               	movwf	fsr1l,c
  7658  000530  50F4               	movf	prodh,w,c
  7659  000532  0100               	movlb	0	; () banked
  7660  000534  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7661  000536  6EE2               	movwf	fsr1h,c
  7662  000538  CFDF FFE7          	movff	indf2,indf1
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7666  00053C  0E28               	movlw	40
  7667  00053E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7668  000540  0100               	movlb	0	; () banked
  7669  000542  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7670  000546  0100               	movlb	0	; () banked
  7671  000548  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7672  00054C  0100               	movlb	0	; () banked
  7673  00054E  EE20 F00A          	lfsr	2,10
  7674  000552  0100               	movlb	0	; () banked
  7675  000554  51E1               	movf	_ic_ptr& (0+255),w,b
  7676  000556  26D9               	addwf	fsr2l,f,c
  7677  000558  0100               	movlb	0	; () banked
  7678  00055A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7679  00055C  22DA               	addwfc	fsr2h,f,c
  7680  00055E  50DF               	movf	indf2,w,c
  7681  000560  0100               	movlb	0	; () banked
  7682  000562  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7683  000564  0100               	movlb	0	; () banked
  7684  000566  29BB               	incf	??_i2c_int_handler& (0+255),w,b
  7685  000568  EC0F  F00D         	call	_ToMainHigh_sendmsg
  7686                           
  7687                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7688  00056C  0100               	movlb	0	; () banked
  7689  00056E  EE20 F00A          	lfsr	2,10
  7690  000572  D03E               	goto	L8
  7691  000574                     i2l3438:
  7692                           
  7693                           ; BSR set to: 0
  7694  000574  0100               	movlb	0	; () banked
  7695  000576  EE20 F00E          	lfsr	2,14
  7696  00057A  0100               	movlb	0	; () banked
  7697  00057C  51E1               	movf	_ic_ptr& (0+255),w,b
  7698  00057E  26D9               	addwf	fsr2l,f,c
  7699  000580  0100               	movlb	0	; () banked
  7700  000582  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7701  000584  22DA               	addwfc	fsr2h,f,c
  7702  000586  50DF               	movf	indf2,w,c
  7703  000588  B4D8               	btfsc	status,2,c
  7704  00058A  D03A               	goto	i2l3446
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7708  00058C  0100               	movlb	0	; () banked
  7709  00058E  EE20 F00E          	lfsr	2,14
  7710  000592  0100               	movlb	0	; () banked
  7711  000594  51E1               	movf	_ic_ptr& (0+255),w,b
  7712  000596  26D9               	addwf	fsr2l,f,c
  7713  000598  0100               	movlb	0	; () banked
  7714  00059A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7715  00059C  22DA               	addwfc	fsr2h,f,c
  7716  00059E  50DF               	movf	indf2,w,c
  7717  0005A0  0100               	movlb	0	; () banked
  7718  0005A2  6FBC               	movwf	i2c_int_handler@error_buf& (0+255),b
  7719                           
  7720                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7721  0005A4  0100               	movlb	0	; () banked
  7722  0005A6  EE20 F00D          	lfsr	2,13
  7723  0005AA  0100               	movlb	0	; () banked
  7724  0005AC  51E1               	movf	_ic_ptr& (0+255),w,b
  7725  0005AE  26D9               	addwf	fsr2l,f,c
  7726  0005B0  0100               	movlb	0	; () banked
  7727  0005B2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7728  0005B4  22DA               	addwfc	fsr2h,f,c
  7729  0005B6  50DF               	movf	indf2,w,c
  7730  0005B8  0100               	movlb	0	; () banked
  7731  0005BA  6FBD               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7732                           
  7733                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7734  0005BC  0100               	movlb	0	; () banked
  7735  0005BE  EE20 F00B          	lfsr	2,11
  7736  0005C2  0100               	movlb	0	; () banked
  7737  0005C4  51E1               	movf	_ic_ptr& (0+255),w,b
  7738  0005C6  26D9               	addwf	fsr2l,f,c
  7739  0005C8  0100               	movlb	0	; () banked
  7740  0005CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7741  0005CC  22DA               	addwfc	fsr2h,f,c
  7742  0005CE  50DF               	movf	indf2,w,c
  7743  0005D0  0100               	movlb	0	; () banked
  7744  0005D2  6FBE               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7748  0005D4  0E29               	movlw	41
  7749  0005D6  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7750  0005D8  0100               	movlb	0	; () banked
  7751  0005DA  0E00               	movlw	high i2c_int_handler@error_buf
  7752  0005DC  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7753  0005DE  0100               	movlb	0	; () banked
  7754  0005E0  0EBC               	movlw	low i2c_int_handler@error_buf
  7755  0005E2  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7756  0005E4  0E03               	movlw	3
  7757  0005E6  EC0F  F00D         	call	_ToMainHigh_sendmsg
  7758                           
  7759                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7760  0005EA  0100               	movlb	0	; () banked
  7761  0005EC  EE20 F00E          	lfsr	2,14
  7762  0005F0                     L8:
  7763  0005F0  0100               	movlb	0	; () banked
  7764  0005F2  51E1               	movf	_ic_ptr& (0+255),w,b
  7765  0005F4  26D9               	addwf	fsr2l,f,c
  7766  0005F6  0100               	movlb	0	; () banked
  7767  0005F8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7768  0005FA  22DA               	addwfc	fsr2h,f,c
  7769  0005FC  0E00               	movlw	0
  7770  0005FE  6EDF               	movwf	indf2,c
  7771  000600                     i2l3446:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;my_i2c.c: 257: }
  7775                           ;my_i2c.c: 258: if (msg_to_send) {
  7776  000600  0100               	movlb	0	; () banked
  7777  000602  51C2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7778  000604  B4D8               	btfsc	status,2,c
  7779  000606  0012               	return	
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7783  000608  0E2A               	movlw	42
  7784  00060A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7785  00060C  0100               	movlb	0	; () banked
  7786  00060E  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7787  000612  0100               	movlb	0	; () banked
  7788  000614  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7789  000618  0E00               	movlw	0
  7790  00061A  EC0F  F00D         	call	_ToMainHigh_sendmsg
  7791                           
  7792                           ;my_i2c.c: 261: msg_to_send = 0;
  7793  00061E  0E00               	movlw	0
  7794  000620  0100               	movlb	0	; () banked
  7795  000622  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7796  000624  0012               	return	
  7797  000626                     __end_of_i2c_int_handler:
  7798                           	opt stack 0
  7799                           pclatu	equ	0xFFB
  7800                           pclath	equ	0xFFA
  7801                           tblptru	equ	0xFF8
  7802                           tblptrh	equ	0xFF7
  7803                           tblptrl	equ	0xFF6
  7804                           tablat	equ	0xFF5
  7805                           prodh	equ	0xFF4
  7806                           prodl	equ	0xFF3
  7807                           intcon	equ	0xFF2
  7808                           postinc0	equ	0xFEE
  7809                           fsr0h	equ	0xFEA
  7810                           fsr0l	equ	0xFE9
  7811                           wreg	equ	0xFE8
  7812                           indf1	equ	0xFE7
  7813                           fsr1h	equ	0xFE2
  7814                           fsr1l	equ	0xFE1
  7815                           bsr	equ	0xFE0
  7816                           indf2	equ	0xFDF
  7817                           postinc2	equ	0xFDE
  7818                           postdec2	equ	0xFDD
  7819                           fsr2h	equ	0xFDA
  7820                           fsr2l	equ	0xFD9
  7821                           status	equ	0xFD8
  7822                           
  7823 ;; *************** function _handle_start *****************
  7824 ;; Defined at:
  7825 ;;		line 71 in file "src/my_i2c.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  data_read       1    wreg     unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  data_read       1   51[COMRAM] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;		None               void
  7832 ;; Registers used:
  7833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7839 ;;      Params:         0       0       0       0       0
  7840 ;;      Locals:         1       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0
  7842 ;;      Totals:         1       0       0       0       0
  7843 ;;Total ram usage:        1 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_i2c_int_handler
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text49
  7853  000E64                     __ptext49:
  7854                           	opt stack 0
  7855  000E64                     _handle_start:
  7856                           	opt stack 17
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;incstack = 0
  7860                           ;handle_start@data_read stored from wreg
  7861  000E64  6E34               	movwf	handle_start@data_read,c
  7862                           
  7863                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7864  000E66  0100               	movlb	0	; () banked
  7865  000E68  EE20 F00B          	lfsr	2,11
  7866  000E6C  0100               	movlb	0	; () banked
  7867  000E6E  51E1               	movf	_ic_ptr& (0+255),w,b
  7868  000E70  26D9               	addwf	fsr2l,f,c
  7869  000E72  0100               	movlb	0	; () banked
  7870  000E74  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7871  000E76  22DA               	addwfc	fsr2h,f,c
  7872  000E78  0E01               	movlw	1
  7873  000E7A  6EDF               	movwf	indf2,c
  7874                           
  7875                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7876  000E7C  0100               	movlb	0	; () banked
  7877  000E7E  EE20 F00A          	lfsr	2,10
  7878  000E82  0100               	movlb	0	; () banked
  7879  000E84  51E1               	movf	_ic_ptr& (0+255),w,b
  7880  000E86  26D9               	addwf	fsr2l,f,c
  7881  000E88  0100               	movlb	0	; () banked
  7882  000E8A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7883  000E8C  22DA               	addwfc	fsr2h,f,c
  7884  000E8E  0E00               	movlw	0
  7885  000E90  6EDF               	movwf	indf2,c
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;my_i2c.c: 75: if (data_read) {
  7889  000E92  5034               	movf	handle_start@data_read,w,c
  7890  000E94  B4D8               	btfsc	status,2,c
  7891  000E96  D03D               	goto	i2l3260
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7895  000E98  AAC7               	btfss	4039,5,c	;volatile
  7896  000E9A  D021               	goto	i2l257
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7900  000E9C  0100               	movlb	0	; () banked
  7901  000E9E  EE20 F00C          	lfsr	2,12
  7902  000EA2  0100               	movlb	0	; () banked
  7903  000EA4  51E1               	movf	_ic_ptr& (0+255),w,b
  7904  000EA6  26D9               	addwf	fsr2l,f,c
  7905  000EA8  0100               	movlb	0	; () banked
  7906  000EAA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7907  000EAC  22DA               	addwfc	fsr2h,f,c
  7908  000EAE  0E05               	movlw	5
  7909  000EB0  6EDF               	movwf	indf2,c
  7910                           
  7911                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7912  000EB2  0100               	movlb	0	; () banked
  7913  000EB4  EE20 F00E          	lfsr	2,14
  7914  000EB8  0100               	movlb	0	; () banked
  7915  000EBA  51E1               	movf	_ic_ptr& (0+255),w,b
  7916  000EBC  26D9               	addwf	fsr2l,f,c
  7917  000EBE  0100               	movlb	0	; () banked
  7918  000EC0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7919  000EC2  22DA               	addwfc	fsr2h,f,c
  7920  000EC4  2ADF               	incf	indf2,f,c
  7921                           
  7922                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7923  000EC6  0100               	movlb	0	; () banked
  7924  000EC8  EE20 F00D          	lfsr	2,13
  7925  000ECC  0100               	movlb	0	; () banked
  7926  000ECE  51E1               	movf	_ic_ptr& (0+255),w,b
  7927  000ED0  26D9               	addwf	fsr2l,f,c
  7928  000ED2  0100               	movlb	0	; () banked
  7929  000ED4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7930  000ED6  22DA               	addwfc	fsr2h,f,c
  7931  000ED8  0E05               	movlw	5
  7932  000EDA  6EDF               	movwf	indf2,c
  7933                           
  7934                           ;my_i2c.c: 82: } else {
  7935  000EDC  0012               	return	
  7936  000EDE                     i2l257:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7940  000EDE  A4C7               	btfss	4039,2,c	;volatile
  7941  000EE0  D00C               	goto	i2l3258
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7945  000EE2  0100               	movlb	0	; () banked
  7946  000EE4  EE20 F00C          	lfsr	2,12
  7947  000EE8  0100               	movlb	0	; () banked
  7948  000EEA  51E1               	movf	_ic_ptr& (0+255),w,b
  7949  000EEC  26D9               	addwf	fsr2l,f,c
  7950  000EEE  0100               	movlb	0	; () banked
  7951  000EF0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7952  000EF2  22DA               	addwfc	fsr2h,f,c
  7953  000EF4  0E08               	movlw	8
  7954  000EF6  6EDF               	movwf	indf2,c
  7955                           
  7956                           ;my_i2c.c: 85: } else {
  7957  000EF8  0012               	return	
  7958  000EFA                     i2l3258:
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7962  000EFA  0100               	movlb	0	; () banked
  7963  000EFC  EE20 F00C          	lfsr	2,12
  7964  000F00  0100               	movlb	0	; () banked
  7965  000F02  51E1               	movf	_ic_ptr& (0+255),w,b
  7966  000F04  26D9               	addwf	fsr2l,f,c
  7967  000F06  0100               	movlb	0	; () banked
  7968  000F08  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7969  000F0A  22DA               	addwfc	fsr2h,f,c
  7970  000F0C  0E07               	movlw	7
  7971  000F0E  6EDF               	movwf	indf2,c
  7972  000F10  0012               	return	
  7973  000F12                     i2l3260:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  7977  000F12  0100               	movlb	0	; () banked
  7978  000F14  EE20 F00C          	lfsr	2,12
  7979  000F18  0100               	movlb	0	; () banked
  7980  000F1A  51E1               	movf	_ic_ptr& (0+255),w,b
  7981  000F1C  26D9               	addwf	fsr2l,f,c
  7982  000F1E  0100               	movlb	0	; () banked
  7983  000F20  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  000F22  22DA               	addwfc	fsr2h,f,c
  7985  000F24  0E06               	movlw	6
  7986  000F26  6EDF               	movwf	indf2,c
  7987  000F28  0012               	return	
  7988  000F2A                     __end_of_handle_start:
  7989                           	opt stack 0
  7990                           pclatu	equ	0xFFB
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           postinc0	equ	0xFEE
  8000                           fsr0h	equ	0xFEA
  8001                           fsr0l	equ	0xFE9
  8002                           wreg	equ	0xFE8
  8003                           indf1	equ	0xFE7
  8004                           fsr1h	equ	0xFE2
  8005                           fsr1l	equ	0xFE1
  8006                           bsr	equ	0xFE0
  8007                           indf2	equ	0xFDF
  8008                           postinc2	equ	0xFDE
  8009                           postdec2	equ	0xFDD
  8010                           fsr2h	equ	0xFDA
  8011                           fsr2l	equ	0xFD9
  8012                           status	equ	0xFD8
  8013                           
  8014 ;; *************** function _ToMainHigh_sendmsg *****************
  8015 ;; Defined at:
  8016 ;;		line 126 in file "src/messages.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  length          1    wreg     unsigned char 
  8019 ;;  msgtype         1   68[COMRAM] unsigned char 
  8020 ;;  data            2   69[COMRAM] PTR void 
  8021 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  length          1   71[COMRAM] unsigned char 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      char 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8033 ;;      Params:         3       0       0       0       0
  8034 ;;      Locals:         1       0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0
  8036 ;;      Totals:         4       0       0       0       0
  8037 ;;Total ram usage:        4 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    2
  8040 ;; This function calls:
  8041 ;;		i2_send_msg
  8042 ;; This function is called by:
  8043 ;;		_i2c_int_handler
  8044 ;;		_timer0_int_handler
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text50
  8049  001A1E                     __ptext50:
  8050                           	opt stack 0
  8051  001A1E                     _ToMainHigh_sendmsg:
  8052                           	opt stack 15
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;incstack = 0
  8056                           ;ToMainHigh_sendmsg@length stored from wreg
  8057  001A1E  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8058                           
  8059                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8060                           ;	Return value of _ToMainHigh_sendmsg is never used
  8061  001A20  0101               	movlb	1	; () banked
  8062  001A22  0E01               	movlw	high _ToMainHigh_MQ
  8063  001A24  6E3F               	movwf	i2send_msg@qptr+1,c
  8064  001A26  0101               	movlb	1	; () banked
  8065  001A28  0E6C               	movlw	low _ToMainHigh_MQ
  8066  001A2A  6E3E               	movwf	i2send_msg@qptr,c
  8067  001A2C  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8068  001A30  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8069  001A34  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8070  001A38  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8071  001A3C  EC95  F007         	call	i2_send_msg	;wreg free
  8072  001A40  0012               	return	
  8073  001A42                     __end_of_ToMainHigh_sendmsg:
  8074                           	opt stack 0
  8075                           pclatu	equ	0xFFB
  8076                           pclath	equ	0xFFA
  8077                           tblptru	equ	0xFF8
  8078                           tblptrh	equ	0xFF7
  8079                           tblptrl	equ	0xFF6
  8080                           tablat	equ	0xFF5
  8081                           prodh	equ	0xFF4
  8082                           prodl	equ	0xFF3
  8083                           intcon	equ	0xFF2
  8084                           postinc0	equ	0xFEE
  8085                           fsr0h	equ	0xFEA
  8086                           fsr0l	equ	0xFE9
  8087                           wreg	equ	0xFE8
  8088                           indf1	equ	0xFE7
  8089                           fsr1h	equ	0xFE2
  8090                           fsr1l	equ	0xFE1
  8091                           bsr	equ	0xFE0
  8092                           indf2	equ	0xFDF
  8093                           postinc2	equ	0xFDE
  8094                           postdec2	equ	0xFDD
  8095                           fsr2h	equ	0xFDA
  8096                           fsr2l	equ	0xFD9
  8097                           status	equ	0xFD8
  8098                           
  8099 ;; *************** function i2_send_msg *****************
  8100 ;; Defined at:
  8101 ;;		line 24 in file "src/messages.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8104 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8105 ;;  length          1   63[COMRAM] unsigned char 
  8106 ;;  msgtype         1   64[COMRAM] unsigned char 
  8107 ;;  data            2   65[COMRAM] PTR void 
  8108 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8109 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8112 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8113 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8114 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8115 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      char 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8125 ;;      Params:         6       0       0       0       0
  8126 ;;      Locals:         0       5       0       0       0
  8127 ;;      Temps:          1       0       0       0       0
  8128 ;;      Totals:         7       5       0       0       0
  8129 ;;Total ram usage:       12 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    1
  8132 ;; This function calls:
  8133 ;;		i2_memcpy
  8134 ;; This function is called by:
  8135 ;;		_ToMainHigh_sendmsg
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text51
  8140  000F2A                     __ptext51:
  8141                           	opt stack 0
  8142  000F2A                     i2_send_msg:
  8143                           	opt stack 15
  8144                           
  8145                           ;messages.c: 25: unsigned char slot;
  8146                           ;messages.c: 27: msg *qmsg;
  8147                           ;messages.c: 28: size_t tlength = length;
  8148                           
  8149                           ;incstack = 0
  8150  000F2A  0100               	movlb	0	; () banked
  8151  000F2C  C040  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8152  000F30  0100               	movlb	0	; () banked
  8153  000F32  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8157  000F34  EE20 F034          	lfsr	2,52
  8158  000F38  503E               	movf	i2send_msg@qptr,w,c
  8159  000F3A  26D9               	addwf	fsr2l,f,c
  8160  000F3C  503F               	movf	i2send_msg@qptr+1,w,c
  8161  000F3E  22DA               	addwfc	fsr2h,f,c
  8162  000F40  50DF               	movf	indf2,w,c
  8163  000F42  0100               	movlb	0	; () banked
  8164  000F44  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8168  000F46  0100               	movlb	0	; () banked
  8169  000F48  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8170  000F4A  0D0D               	mullw	13
  8171  000F4C  50F3               	movf	prodl,w,c
  8172  000F4E  243E               	addwf	i2send_msg@qptr,w,c
  8173  000F50  0100               	movlb	0	; () banked
  8174  000F52  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8175  000F54  50F4               	movf	prodh,w,c
  8176  000F56  203F               	addwfc	i2send_msg@qptr+1,w,c
  8177  000F58  0100               	movlb	0	; () banked
  8178  000F5A  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;messages.c: 41: if (qmsg->full != 0) {
  8182  000F5C  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8183  000F60  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8184  000F64  50DF               	movf	indf2,w,c
  8185  000F66  B4D8               	btfsc	status,2,c
  8186  000F68  D002               	goto	i2l3088
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;messages.c: 42: return (-1);
  8190  000F6A  0EFF               	movlw	255
  8191  000F6C  0012               	return	
  8192  000F6E                     i2l3088:
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;messages.c: 43: }
  8196                           ;messages.c: 46: qmsg->length = length;
  8197  000F6E  0100               	movlb	0	; () banked
  8198  000F70  EE20 F001          	lfsr	2,1
  8199  000F74  0100               	movlb	0	; () banked
  8200  000F76  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8201  000F78  26D9               	addwf	fsr2l,f,c
  8202  000F7A  0100               	movlb	0	; () banked
  8203  000F7C  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8204  000F7E  22DA               	addwfc	fsr2h,f,c
  8205  000F80  C040  FFDF         	movff	i2send_msg@length,indf2
  8206                           
  8207                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8208  000F84  0100               	movlb	0	; () banked
  8209  000F86  EE20 F002          	lfsr	2,2
  8210  000F8A  0100               	movlb	0	; () banked
  8211  000F8C  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8212  000F8E  26D9               	addwf	fsr2l,f,c
  8213  000F90  0100               	movlb	0	; () banked
  8214  000F92  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8215  000F94  22DA               	addwfc	fsr2h,f,c
  8216  000F96  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8220  000F9A  0E03               	movlw	3
  8221  000F9C  0100               	movlb	0	; () banked
  8222  000F9E  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8223  000FA0  6E34               	movwf	i2memcpy@d1,c
  8224  000FA2  0E00               	movlw	0
  8225  000FA4  0100               	movlb	0	; () banked
  8226  000FA6  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8227  000FA8  6E35               	movwf	i2memcpy@d1+1,c
  8228  000FAA  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8229  000FAE  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8230  000FB2  C0B6  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8231  000FB6  C0B7  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8232  000FBA  EC5B  F00B         	call	i2_memcpy	;wreg free
  8233                           
  8234                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8235  000FBE  EE20 F034          	lfsr	2,52
  8236  000FC2  503E               	movf	i2send_msg@qptr,w,c
  8237  000FC4  26D9               	addwf	fsr2l,f,c
  8238  000FC6  503F               	movf	i2send_msg@qptr+1,w,c
  8239  000FC8  22DA               	addwfc	fsr2h,f,c
  8240  000FCA  EE10 F034          	lfsr	1,52
  8241  000FCE  503E               	movf	i2send_msg@qptr,w,c
  8242  000FD0  26E1               	addwf	fsr1l,f,c
  8243  000FD2  503F               	movf	i2send_msg@qptr+1,w,c
  8244  000FD4  22E2               	addwfc	fsr1h,f,c
  8245  000FD6  50E7               	movf	indf1,w,c
  8246  000FD8  6E44               	movwf	??i2_send_msg& (0+255),c
  8247  000FDA  2844               	incf	??i2_send_msg,w,c
  8248  000FDC  0B03               	andlw	3
  8249  000FDE  6EDF               	movwf	indf2,c
  8250                           
  8251                           ;messages.c: 59: qmsg->full = 1;
  8252  000FE0  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8253  000FE4  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8254  000FE8  0E01               	movlw	1
  8255  000FEA  6EDF               	movwf	indf2,c
  8256                           
  8257                           ;messages.c: 60: return (1);
  8258  000FEC  0E01               	movlw	1
  8259  000FEE  0012               	return	
  8260  000FF0                     __end_ofi2_send_msg:
  8261                           	opt stack 0
  8262                           pclatu	equ	0xFFB
  8263                           pclath	equ	0xFFA
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           prodh	equ	0xFF4
  8269                           prodl	equ	0xFF3
  8270                           intcon	equ	0xFF2
  8271                           postinc0	equ	0xFEE
  8272                           fsr0h	equ	0xFEA
  8273                           fsr0l	equ	0xFE9
  8274                           wreg	equ	0xFE8
  8275                           indf1	equ	0xFE7
  8276                           fsr1h	equ	0xFE2
  8277                           fsr1l	equ	0xFE1
  8278                           bsr	equ	0xFE0
  8279                           indf2	equ	0xFDF
  8280                           postinc2	equ	0xFDE
  8281                           postdec2	equ	0xFDD
  8282                           fsr2h	equ	0xFDA
  8283                           fsr2l	equ	0xFD9
  8284                           status	equ	0xFD8
  8285                           
  8286 ;; *************** function i2_memcpy *****************
  8287 ;; Defined at:
  8288 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  d1              2   51[COMRAM] PTR void 
  8291 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8292 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8293 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8294 ;;  s1              2   53[COMRAM] PTR const void 
  8295 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8296 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8297 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8298 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8299 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  8300 ;;  n               2   55[COMRAM] unsigned int 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8303 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8304 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8305 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8306 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8307 ;;		 -> main@t1thread_data(13), main@ic(28), main@uc(5), 
  8308 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8309 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8310 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8311 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2   51[COMRAM] PTR void 
  8314 ;; Registers used:
  8315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8321 ;;      Params:         6       0       0       0       0
  8322 ;;      Locals:         4       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0
  8324 ;;      Totals:        10       0       0       0       0
  8325 ;;Total ram usage:       10 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		i2_send_msg
  8331 ;;		i2_recv_msg
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text52
  8336  0016B6                     __ptext52:
  8337                           	opt stack 0
  8338  0016B6                     i2_memcpy:
  8339                           	opt stack 15
  8340                           
  8341                           ;incstack = 0
  8342  0016B6  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8343  0016BA  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8344  0016BE  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8345  0016C2  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8346  0016C6  D00E               	goto	i2l3026
  8347  0016C8                     i2l3020:
  8348  0016C8  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8349  0016CC  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8350  0016D0  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8351  0016D4  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8352  0016D8  CFDF FFE7          	movff	indf2,indf1
  8353  0016DC  4A3C               	infsnz	i2memcpy@s,f,c
  8354  0016DE  2A3D               	incf	i2memcpy@s+1,f,c
  8355  0016E0  4A3A               	infsnz	i2memcpy@d,f,c
  8356  0016E2  2A3B               	incf	i2memcpy@d+1,f,c
  8357  0016E4                     i2l3026:
  8358  0016E4  0638               	decf	i2memcpy@n,f,c
  8359  0016E6  A0D8               	btfss	status,0,c
  8360  0016E8  0639               	decf	i2memcpy@n+1,f,c
  8361  0016EA  2838               	incf	i2memcpy@n& (0+255),w,c
  8362  0016EC  B4D8               	btfsc	status,2,c
  8363  0016EE  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8364  0016F0  B4D8               	btfsc	status,2,c
  8365                           
  8366                           ;	Return value of i2_memcpy is never used
  8367  0016F2  0012               	return	
  8368  0016F4  D7E9               	goto	i2l3020
  8369  0016F6                     __end_ofi2_memcpy:
  8370                           	opt stack 0
  8371                           pclatu	equ	0xFFB
  8372                           pclath	equ	0xFFA
  8373                           tblptru	equ	0xFF8
  8374                           tblptrh	equ	0xFF7
  8375                           tblptrl	equ	0xFF6
  8376                           tablat	equ	0xFF5
  8377                           prodh	equ	0xFF4
  8378                           prodl	equ	0xFF3
  8379                           intcon	equ	0xFF2
  8380                           postinc0	equ	0xFEE
  8381                           fsr0h	equ	0xFEA
  8382                           fsr0l	equ	0xFE9
  8383                           wreg	equ	0xFE8
  8384                           indf1	equ	0xFE7
  8385                           fsr1h	equ	0xFE2
  8386                           fsr1l	equ	0xFE1
  8387                           bsr	equ	0xFE0
  8388                           indf2	equ	0xFDF
  8389                           postinc2	equ	0xFDE
  8390                           postdec2	equ	0xFDD
  8391                           fsr2h	equ	0xFDA
  8392                           fsr2l	equ	0xFD9
  8393                           status	equ	0xFD8
  8394                           
  8395 ;; *************** function _SleepIfOkay *****************
  8396 ;; Defined at:
  8397 ;;		line 226 in file "src/messages.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;		None
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;		None               void
  8404 ;; Registers used:
  8405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8411 ;;      Params:         0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0
  8414 ;;      Totals:         0       0       0       0       0
  8415 ;;Total ram usage:        0 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    2
  8418 ;; This function calls:
  8419 ;;		_enter_sleep_mode
  8420 ;;		i2_check_msg
  8421 ;;		i2_in_high_int
  8422 ;;		i2_in_low_int
  8423 ;; This function is called by:
  8424 ;;		_InterruptHandlerHigh
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text53
  8429  001628                     __ptext53:
  8430                           	opt stack 0
  8431  001628                     _SleepIfOkay:
  8432                           	opt stack 16
  8433                           
  8434                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8435                           
  8436                           ;incstack = 0
  8437  001628  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8438  00162A  D001               	goto	i2l2578
  8439  00162C  0012               	return	
  8440  00162E                     i2l2578:
  8441                           
  8442                           ;messages.c: 230: }
  8443                           ;messages.c: 233: if (in_low_int()) {
  8444  00162E  EC83  F00C         	call	i2_in_low_int	;wreg free
  8445  001632  5037               	movf	?i2_in_low_int+1,w,c
  8446  001634  1036               	iorwf	?i2_in_low_int,w,c
  8447  001636  A4D8               	btfss	status,2,c
  8448  001638  0012               	return	
  8449                           
  8450                           ;messages.c: 235: }
  8451                           ;messages.c: 238: if (!in_high_int()) {
  8452                           
  8453                           ;messages.c: 234: return;
  8454  00163A  EC85  F00D         	call	i2_in_high_int	;wreg free
  8455  00163E  5035               	movf	?i2_in_high_int+1,w,c
  8456  001640  1034               	iorwf	?i2_in_high_int,w,c
  8457  001642  B4D8               	btfsc	status,2,c
  8458  001644  0012               	return	
  8459                           
  8460                           ;messages.c: 240: }
  8461                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8462                           
  8463                           ;messages.c: 239: return;
  8464  001646  0101               	movlb	1	; () banked
  8465  001648  0E01               	movlw	high _ToMainHigh_MQ
  8466  00164A  6E35               	movwf	i2check_msg@qptr+1,c
  8467  00164C  0101               	movlb	1	; () banked
  8468  00164E  0E6C               	movlw	low _ToMainHigh_MQ
  8469  001650  6E34               	movwf	i2check_msg@qptr,c
  8470  001652  EC21  F00D         	call	i2_check_msg	;wreg free
  8471  001656  0900               	iorlw	0
  8472  001658  A4D8               	btfss	status,2,c
  8473  00165A  0012               	return	
  8474                           
  8475                           ;messages.c: 247: }
  8476                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8477                           
  8478                           ;messages.c: 246: return;
  8479  00165C  0100               	movlb	0	; () banked
  8480  00165E  0E00               	movlw	high _ToMainLow_MQ
  8481  001660  6E35               	movwf	i2check_msg@qptr+1,c
  8482  001662  0100               	movlb	0	; () banked
  8483  001664  0E80               	movlw	low _ToMainLow_MQ
  8484  001666  6E34               	movwf	i2check_msg@qptr,c
  8485  001668  EC21  F00D         	call	i2_check_msg	;wreg free
  8486  00166C  0900               	iorlw	0
  8487  00166E  B4D8               	btfsc	status,2,c
  8488                           
  8489                           ;messages.c: 250: }
  8490                           ;messages.c: 251: enter_sleep_mode();
  8491                           
  8492                           ;messages.c: 249: return;
  8493  001670  EC8F  F00D         	call	_enter_sleep_mode	;wreg free
  8494  001674  0012               	return	
  8495  001676                     __end_of_SleepIfOkay:
  8496                           	opt stack 0
  8497                           pclatu	equ	0xFFB
  8498                           pclath	equ	0xFFA
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           postinc0	equ	0xFEE
  8507                           fsr0h	equ	0xFEA
  8508                           fsr0l	equ	0xFE9
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           bsr	equ	0xFE0
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           fsr2h	equ	0xFDA
  8518                           fsr2l	equ	0xFD9
  8519                           status	equ	0xFD8
  8520                           
  8521 ;; *************** function i2_in_low_int *****************
  8522 ;; Defined at:
  8523 ;;		line 30 in file "src/interrupts.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2   53[COMRAM] int 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8537 ;;      Params:         2       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0
  8540 ;;      Totals:         2       0       0       0       0
  8541 ;;Total ram usage:        2 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    1
  8544 ;; This function calls:
  8545 ;;		i2_in_high_int
  8546 ;; This function is called by:
  8547 ;;		_SleepIfOkay
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text54
  8552  001906                     __ptext54:
  8553                           	opt stack 0
  8554  001906                     i2_in_low_int:
  8555                           	opt stack 16
  8556                           
  8557                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8558                           
  8559                           ;incstack = 0
  8560  001906  ACF2               	btfss	intcon,6,c	;volatile
  8561  001908  D005               	goto	i2l2402
  8562                           
  8563                           ;interrupts.c: 32: return (0);
  8564  00190A  0E00               	movlw	0
  8565  00190C  6E37               	movwf	?i2_in_low_int+1,c
  8566  00190E  0E00               	movlw	0
  8567  001910  6E36               	movwf	?i2_in_low_int,c
  8568  001912  0012               	return	
  8569  001914                     i2l2402:
  8570  001914  EC85  F00D         	call	i2_in_high_int	;wreg free
  8571  001918  5035               	movf	?i2_in_high_int+1,w,c
  8572  00191A  1034               	iorwf	?i2_in_high_int,w,c
  8573  00191C  B4D8               	btfsc	status,2,c
  8574  00191E  D005               	goto	i2l2410
  8575                           
  8576                           ;interrupts.c: 34: return (0);
  8577  001920  0E00               	movlw	0
  8578  001922  6E37               	movwf	?i2_in_low_int+1,c
  8579  001924  0E00               	movlw	0
  8580  001926  6E36               	movwf	?i2_in_low_int,c
  8581  001928  0012               	return	
  8582  00192A                     i2l2410:
  8583                           
  8584                           ;interrupts.c: 36: return (1);
  8585  00192A  0E00               	movlw	0
  8586  00192C  6E37               	movwf	?i2_in_low_int+1,c
  8587  00192E  0E01               	movlw	1
  8588  001930  6E36               	movwf	?i2_in_low_int,c
  8589  001932  0012               	return	
  8590  001934                     __end_ofi2_in_low_int:
  8591                           	opt stack 0
  8592                           pclatu	equ	0xFFB
  8593                           pclath	equ	0xFFA
  8594                           tblptru	equ	0xFF8
  8595                           tblptrh	equ	0xFF7
  8596                           tblptrl	equ	0xFF6
  8597                           tablat	equ	0xFF5
  8598                           prodh	equ	0xFF4
  8599                           prodl	equ	0xFF3
  8600                           intcon	equ	0xFF2
  8601                           postinc0	equ	0xFEE
  8602                           fsr0h	equ	0xFEA
  8603                           fsr0l	equ	0xFE9
  8604                           wreg	equ	0xFE8
  8605                           indf1	equ	0xFE7
  8606                           fsr1h	equ	0xFE2
  8607                           fsr1l	equ	0xFE1
  8608                           bsr	equ	0xFE0
  8609                           indf2	equ	0xFDF
  8610                           postinc2	equ	0xFDE
  8611                           postdec2	equ	0xFDD
  8612                           fsr2h	equ	0xFDA
  8613                           fsr2l	equ	0xFD9
  8614                           status	equ	0xFD8
  8615                           
  8616 ;; *************** function i2_in_high_int *****************
  8617 ;; Defined at:
  8618 ;;		line 22 in file "src/interrupts.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  2   51[COMRAM] int 
  8625 ;; Registers used:
  8626 ;;		wreg, status,2
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8632 ;;      Params:         2       0       0       0       0
  8633 ;;      Locals:         0       0       0       0       0
  8634 ;;      Temps:          0       0       0       0       0
  8635 ;;      Totals:         2       0       0       0       0
  8636 ;;Total ram usage:        2 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_SleepIfOkay
  8642 ;;		i2_in_low_int
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text55
  8647  001B0A                     __ptext55:
  8648                           	opt stack 0
  8649  001B0A                     i2_in_high_int:
  8650                           	opt stack 16
  8651                           
  8652                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8653                           
  8654                           ;incstack = 0
  8655  001B0A  0E00               	movlw	0
  8656  001B0C  AEF2               	btfss	intcon,7,c	;volatile
  8657  001B0E  0E01               	movlw	1
  8658  001B10  6E34               	movwf	?i2_in_high_int,c
  8659  001B12  6A35               	clrf	?i2_in_high_int+1,c
  8660  001B14  0012               	return	
  8661  001B16                     __end_ofi2_in_high_int:
  8662                           	opt stack 0
  8663                           pclatu	equ	0xFFB
  8664                           pclath	equ	0xFFA
  8665                           tblptru	equ	0xFF8
  8666                           tblptrh	equ	0xFF7
  8667                           tblptrl	equ	0xFF6
  8668                           tablat	equ	0xFF5
  8669                           prodh	equ	0xFF4
  8670                           prodl	equ	0xFF3
  8671                           intcon	equ	0xFF2
  8672                           postinc0	equ	0xFEE
  8673                           fsr0h	equ	0xFEA
  8674                           fsr0l	equ	0xFE9
  8675                           wreg	equ	0xFE8
  8676                           indf1	equ	0xFE7
  8677                           fsr1h	equ	0xFE2
  8678                           fsr1l	equ	0xFE1
  8679                           bsr	equ	0xFE0
  8680                           indf2	equ	0xFDF
  8681                           postinc2	equ	0xFDE
  8682                           postdec2	equ	0xFDD
  8683                           fsr2h	equ	0xFDA
  8684                           fsr2l	equ	0xFD9
  8685                           status	equ	0xFD8
  8686                           
  8687 ;; *************** function i2_check_msg *****************
  8688 ;; Defined at:
  8689 ;;		line 220 in file "src/messages.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8692 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;		None
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      unsigned char 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8704 ;;      Params:         2       0       0       0       0
  8705 ;;      Locals:         0       0       0       0       0
  8706 ;;      Temps:          1       0       0       0       0
  8707 ;;      Totals:         3       0       0       0       0
  8708 ;;Total ram usage:        3 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_SleepIfOkay
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text56
  8718  001A42                     __ptext56:
  8719                           	opt stack 0
  8720  001A42                     i2_check_msg:
  8721                           	opt stack 17
  8722                           
  8723                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8724                           
  8725                           ;incstack = 0
  8726  001A42  EE20 F035          	lfsr	2,53
  8727  001A46  5034               	movf	i2check_msg@qptr,w,c
  8728  001A48  26D9               	addwf	fsr2l,f,c
  8729  001A4A  5035               	movf	i2check_msg@qptr+1,w,c
  8730  001A4C  22DA               	addwfc	fsr2h,f,c
  8731  001A4E  50DF               	movf	indf2,w,c
  8732  001A50  6E36               	movwf	??i2_check_msg& (0+255),c
  8733  001A52  5036               	movf	??i2_check_msg,w,c
  8734  001A54  0D0D               	mullw	13
  8735  001A56  50F3               	movf	prodl,w,c
  8736  001A58  2434               	addwf	i2check_msg@qptr,w,c
  8737  001A5A  6ED9               	movwf	fsr2l,c
  8738  001A5C  50F4               	movf	prodh,w,c
  8739  001A5E  2035               	addwfc	i2check_msg@qptr+1,w,c
  8740  001A60  6EDA               	movwf	fsr2h,c
  8741  001A62  50DF               	movf	indf2,w,c
  8742  001A64  0012               	return	
  8743  001A66                     __end_ofi2_check_msg:
  8744                           	opt stack 0
  8745                           pclatu	equ	0xFFB
  8746                           pclath	equ	0xFFA
  8747                           tblptru	equ	0xFF8
  8748                           tblptrh	equ	0xFF7
  8749                           tblptrl	equ	0xFF6
  8750                           tablat	equ	0xFF5
  8751                           prodh	equ	0xFF4
  8752                           prodl	equ	0xFF3
  8753                           intcon	equ	0xFF2
  8754                           postinc0	equ	0xFEE
  8755                           fsr0h	equ	0xFEA
  8756                           fsr0l	equ	0xFE9
  8757                           wreg	equ	0xFE8
  8758                           indf1	equ	0xFE7
  8759                           fsr1h	equ	0xFE2
  8760                           fsr1l	equ	0xFE1
  8761                           bsr	equ	0xFE0
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _enter_sleep_mode *****************
  8770 ;; Defined at:
  8771 ;;		line 202 in file "src/messages.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;		None               void
  8778 ;; Registers used:
  8779 ;;		None
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8785 ;;      Params:         0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0
  8788 ;;      Totals:         0       0       0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_SleepIfOkay
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text57
  8799  001B1E                     __ptext57:
  8800                           	opt stack 0
  8801  001B1E                     _enter_sleep_mode:
  8802                           	opt stack 17
  8803                           
  8804                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8805                           
  8806                           ;incstack = 0
  8807  001B1E  8ED3               	bsf	4051,7,c	;volatile
  8808  001B20  0003               	sleep		;# 
  8809  001B22  0012               	return	
  8810  001B24                     __end_of_enter_sleep_mode:
  8811                           	opt stack 0
  8812  0000                     pclatu	equ	0xFFB
  8813                           pclath	equ	0xFFA
  8814                           tblptru	equ	0xFF8
  8815                           tblptrh	equ	0xFF7
  8816                           tblptrl	equ	0xFF6
  8817                           tablat	equ	0xFF5
  8818                           prodh	equ	0xFF4
  8819                           prodl	equ	0xFF3
  8820                           intcon	equ	0xFF2
  8821                           postinc0	equ	0xFEE
  8822                           fsr0h	equ	0xFEA
  8823                           fsr0l	equ	0xFE9
  8824                           wreg	equ	0xFE8
  8825                           indf1	equ	0xFE7
  8826                           fsr1h	equ	0xFE2
  8827                           fsr1l	equ	0xFE1
  8828                           bsr	equ	0xFE0
  8829                           indf2	equ	0xFDF
  8830                           postinc2	equ	0xFDE
  8831                           postdec2	equ	0xFDD
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           pclatu	equ	0xFFB
  8836                           pclath	equ	0xFFA
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           postinc0	equ	0xFEE
  8845                           fsr0h	equ	0xFEA
  8846                           fsr0l	equ	0xFE9
  8847                           wreg	equ	0xFE8
  8848                           indf1	equ	0xFE7
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           bsr	equ	0xFE0
  8852                           indf2	equ	0xFDF
  8853                           postinc2	equ	0xFDE
  8854                           postdec2	equ	0xFDD
  8855                           fsr2h	equ	0xFDA
  8856                           fsr2l	equ	0xFD9
  8857                           status	equ	0xFD8
  8858                           
  8859                           	psect	rparam
  8860  0000                     pclatu	equ	0xFFB
  8861                           pclath	equ	0xFFA
  8862                           tblptru	equ	0xFF8
  8863                           tblptrh	equ	0xFF7
  8864                           tblptrl	equ	0xFF6
  8865                           tablat	equ	0xFF5
  8866                           prodh	equ	0xFF4
  8867                           prodl	equ	0xFF3
  8868                           intcon	equ	0xFF2
  8869                           postinc0	equ	0xFEE
  8870                           fsr0h	equ	0xFEA
  8871                           fsr0l	equ	0xFE9
  8872                           wreg	equ	0xFE8
  8873                           indf1	equ	0xFE7
  8874                           fsr1h	equ	0xFE2
  8875                           fsr1l	equ	0xFE1
  8876                           bsr	equ	0xFE0
  8877                           indf2	equ	0xFDF
  8878                           postinc2	equ	0xFDE
  8879                           postdec2	equ	0xFDD
  8880                           fsr2h	equ	0xFDA
  8881                           fsr2l	equ	0xFD9
  8882                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     43      99
    BANK1           256     24     186
    BANK2           256     74      74
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[13]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[13]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 13
		 -> main@t1thread_data(BANK2[13]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 13
		 -> main@t1thread_data(BANK2[13]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    sendUART@data	PTR unsigned char  size(2) Largest target is 13
		 -> main@t1thread_data(BANK2[13]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@t1thread_data(BANK2[13]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[13]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_ToMainHigh_sendmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUART
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0   15732
                                              0 BANK2     74    74      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             12 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     0      8    3794
                                             16 BANK1      8     0      8
                            ___lwmod
                           _sendUART
 ---------------------------------------------------------------------------------
 (2) _sendUART                                             4     2      2    2905
                                             12 BANK1      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2701
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             39 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             29 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     201
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     500
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     500
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     331
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                             39 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    4321
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1554
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1276
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1029
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    1335
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _timer1_int_handler                                   2     2      0    1432
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) i1_ToMainLow_sendmsg                                  4     1      3    1301
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6     998
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     384
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    5701
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0    3287
                                              9 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     132
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    1276
                                             70 COMRAM     1     1      0
                                              5 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    1029
                                             61 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2318
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1707
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     998
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     384
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     ___lwmod
     _sendUART
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     4A      4A       8       28.9%
BITBANK1           100      0       0      10        0.0%
BANK1              100     18      BA       6       72.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      63       5       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3       9        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Feb 24 09:04:40 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 17A6  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1872  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0041  
              i2recv_msg@tlength 00B7             ?_FromMainLow_recvmsg 0019  
                            l109 0742                              l500 1236  
                            l501 1242                              l502 1244  
                            l427 19CE                              l451 18BA  
                            l428 19D0                              l453 18D0  
                            l454 18D2                              l495 121A  
                            l743 1AA6                              l499 1234  
           ?_FromMainLow_sendmsg 00DE  __size_of_uart_trans_int_handler 0056  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D3  
               ??_init_uart_recv 00D5                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 0040                             l1049 1472  
                           l3204 08F8                             l3220 09B6  
                           l3044 1726                             l3036 1708  
                           l3300 1464                             l3174 1762  
                           l3186 1390                             l3282 181C  
                           l3292 142E                             l3294 143A  
                           l3552 18BC                             l3296 1440  
                           l3712 108A                             l3800 0748  
                           l3570 120A                             l3650 14D0  
                           l3802 075C                             l3810 078A  
                           l3644 14B0                             l3660 09D6  
                           l3708 1066                             l3804 0766  
                           l3638 1490                             l3822 07F2  
                           l3814 07A4                             l3664 0A52  
                           l3680 0CFC                             l3824 0836  
                           l3808 0774                             l3816 07C0  
                           l3578 121C                             l3682 0D28  
                           l2972 15F2                             l3828 087A  
                           l3686 0D56                             l3790 06C8  
                           l3688 0D76                             l2978 1612  
                           l2996 0C02                             l3798 06FE  
                           _LATB 000F8A                             u2947 1AA8  
                           i1l52 007A                  _FromMainHigh_MQ 0100  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0D92                             _main 0626  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 021F                       i1_send_msg 10B0  
                           pclat 000FFA                      i2_check_msg 1A42  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0034                             start 00C0  
                     i2_recv_msg 0ABE                    __CFG_FOSC2$ON 000000  
                     i2_send_msg 0F2A        ToMainHigh_recvmsg@msgtype 01AE  
                 send_msg@length 01A4      __size_of_timer0_int_handler 0064  
                    _Delay1KTCYx 1AA2            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00E1                            ?_main 0001  
   __size_ofi1_ToMainLow_sendmsg 0024                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D3  
                          i1l340 1580                            i1l343 1558  
                          i1l513 1A92                  __end_of___lwmod 147C  
                     i1memcpy@d1 0001                            i2l301 048E  
                          i2l257 0EDE                            i2l273 0176  
                          i2l267 0480                            i2l269 0144  
                          i2l295 0410                            i2l287 02EE  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 00BB  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1770       ToMainLow_recvmsg@maxlength 00DF  
        timer0_lthread@msgbuffer 00D9          i2c_configure_slave@addr 00D3  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 152E                 __end_ofi1_memcpy 16B6  
               __end_ofi2_memcpy 16F6                  __initialization 1988  
     uart_trans_int_handler@data 001E                     __end_of_main 0898  
   uart_trans_int_handler@length 0022                       _ReadTimer1 1AC8  
    __size_of_timer1_int_handler 002C       __size_of_ToMainLow_recvmsg 0036  
     __size_of_ToMainLow_sendmsg 0032    __size_of_FromMainHigh_recvmsg 0030  
          __size_ofi2_in_low_int 002E                           ??_main 00E1  
                send_msg@msgtype 01A5                    __activetblptr 000002  
                send_msg@tlength 01A8       FromMainLow_sendmsg@msgtype 00DE  
           __end_of_handle_start 0F2A          ??_uart_recv_int_handler 001B  
                         i1l3010 1688                           i1l3016 16A4  
                         i1l3112 0DD8                           i1l3064 10E8  
                         i1l3128 0E60                           i1l3500 1572  
                         i2l3020 16C8                           i1l3478 11D2  
                         i1l3742 0070                           i1l3736 0066  
                         i2l2410 192A                           i2l2402 1914  
                         i2l3026 16E4                           i2l3144 0B12  
                         i2l3160 0BB0                       _OpenTimer0 19AE  
                         i2l3330 013C                       _OpenTimer1 18A4  
                         i2l3260 0F12                           i2l3324 012E  
                         i2l3430 04F0                           i2l3350 01CE  
                 __CFG_WDTEN$OFF 000000                           i2l3088 0F6E  
                         i2l3424 0492                           i2l3360 0208  
                         i2l3258 0EFA                           i2l3418 0454  
                         i2l3348 01A2                           i2l3446 0600  
                         i2l3438 0574                           i2l3390 035C  
                         i2l3366 0220                           i2l3392 039E  
                         i2l3368 0260                           i2l2578 162E  
                         i2l3722 12A6                           i2l3396 03A6  
                         i2l3728 12B0      __end_of_i2c_configure_slave 1988  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0ABE  
             timer0_lthread@tptr 00D3          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 003E                     i2_in_low_int 1906  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00C4  
               OpenTimer0@config 00D3                           _ic_ptr 00E1  
                      ??___lwmod 00D7                    main@msgbuffer 0200  
               __end_of_init_i2c 1354                 OpenTimer1@config 00D3  
                         _memcpy 15D8                           clear_0 198E  
                         clear_1 199A                           _uc_ptr 0049  
               __end_of_sendUART 1840                           main@ic 022E  
                         main@uc 021A                 __end_of_recv_msg 09BA  
    start_i2c_slave_reply@length 00D7                        ??_in_main 00D9  
               __end_of_send_msg 0CA4            timer0_int_handler@val 00C3  
        i2c_int_handler@i2c_data 00C1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00D5         ToMainLow_recvmsg@msgtype 01AE  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 00DF  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1B24  
                     __accesstop 0080          __end_of__initialization 19A4  
     __end_of_ToMainHigh_recvmsg 17DC       __end_of_ToMainHigh_sendmsg 1A42  
             ?_init_uart_lthread 00D3      __end_of_init_timer1_lthread 15D8  
            __end_of_SleepIfOkay 1676                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 00D5  
                    ?_ReadTimer1 0001               __size_of_check_msg 0032  
              __end_of_ReadUSART 1AA2        timer0_int_handler@msgtype 00C1  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 12E6  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 00F6  
               _enter_sleep_mode 1B1E              __size_ofi2_send_msg 00C6  
           timer1_lthread@length 01B6                    ReadUSART@data 0001  
              __end_of_OpenUSART 1270                    check_msg@qptr 00D3  
      __end_of_init_uart_lthread 1B26          ??_block_on_To_msgqueues 00D9  
           __size_of_init_queues 0056                       __pbssBANK0 0080  
                     __pbssBANK1 0100                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001   uart_trans_int_handler@curIndex 0020  
                     __pnvCOMRAM 0049              i1_ToMainLow_sendmsg 19FA  
        __end_of_i2c_int_handler 0626                     ?i2_check_msg 0034  
             timer1_lthread@tptr 01B2                recv_msg@maxlength 01A4  
                recv_msg@msgtype 01A5                  recv_msg@tlength 01AA  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0036                          ?_memcpy 00D3  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0036  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 000E  
                 sendUART@length 01B1             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 00EE                   sendUART@retval 01B0  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1B0A  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 18A4  
                      ?_init_i2c 00D3                      _SleepIfOkay 1628  
                      ?_sendUART 01AE                        ?_recv_msg 01A2  
                     _in_low_int 16F6                     _handle_start 0E64  
                        __Hparam 0000                        ?_send_msg 01A2  
                        __Lparam 0000       __end_of_timer0_int_handler 141C  
    __end_of_FromMainLow_recvmsg 19FA      __end_of_FromMainLow_sendmsg 180E  
               init_uart_recv@uc 00D3                          ___lwmod 141C  
                __CFG_STVREN$OFF 000000                          __pcinit 1988  
                __size_of_memcpy 0050                       _init_queue 1354  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 0032  
                        __ptext0 0626                          __ptext1 0FF0  
                        __ptext2 17DC                          __ptext3 0CA4  
                        __ptext4 180E                          __ptext5 1840  
                        __ptext6 0BB4                          __ptext7 141C  
                        __ptext8 1AFC                          __ptext9 09BA  
              uart_lthread@index 01B7                        _T0CONbits 000FD5  
                        _in_main 1734                        _T1CONbits 000FCD  
            __end_of_WriteTimer0 1AEC              __end_of_WriteTimer1 1AC8  
                 ?i2_in_high_int 0034   __end_of_uart_trans_int_handler 1584  
     __size_of_init_uart_lthread 0002                   __pintcode_body 1270  
   __end_of_FromMainHigh_recvmsg 1906             end_of_initialization 19A4  
        timer1_lthread@msgbuffer 01B8   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 00D9                          memcpy@n 00D7  
                        memcpy@s 00DB    __end_of_uart_recv_int_handler 11EE  
                     ??_init_i2c 00D5                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00BF                    __Lmediumconst 0000  
                        int_func 1270                     ??i1_send_msg 0011  
                  ?_uart_lthread 01AE                       ??_sendUART 00E1  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 0045                       ??_recv_msg 00DD  
                   ??i2_send_msg 0044                       ??_send_msg 00DD  
     __end_of_timer1_int_handler 1960                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
             __end_ofi1_recv_msg 0E64               __end_ofi1_send_msg 115A  
                      _TRISCbits 000F94               __end_ofi2_recv_msg 0BB4  
             __end_ofi2_send_msg 0FF0    FromMainHigh_recvmsg@maxlength 0047  
       timer1_int_handler@result 001B                   ??_uart_lthread 00E1  
                      _TXSTAbits 000FAC                       main@length 022D  
                    ?_in_low_int 00D5            timer0_lthread@msgtype 00D5  
          _start_i2c_slave_reply 09BA     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1B24  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 17A6  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1A1E  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 1AFC                      ?_init_queue 00D3  
                      i2memcpy@d 003A                      _WriteTimer0 1ADA  
                    _WriteTimer1 1AB6                        i2memcpy@n 0038  
                      i2memcpy@s 003C                   _timer1_lthread 0CA4  
                 __end_of_memcpy 1628                _enable_interrupts 1B16  
           __size_of_Delay1KTCYx 0014              ?_ToMainHigh_recvmsg 01AE  
                ??i2_in_high_int 0036         i2c_int_handler@data_read 00C4  
            ?_ToMainHigh_sendmsg 0045          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1988  
                  ??_in_high_int 00D5                        _ReadUSART 1A84  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
      FromMainLow_sendmsg@length 01AD              ??_enable_interrupts 00D3  
                   ??_OpenTimer0 00D3                     ??_OpenTimer1 00D3  
 __size_of_block_on_To_msgqueues 005C               __end_of_ReadTimer1 1ADA  
  __end_of_block_on_To_msgqueues 14D8                        _OpenUSART 11EE  
                   sendUART@data 01AE     __end_of_InterruptHandlerHigh 12EE  
                     init_i2c@ic 00D3             ??_ToMainHigh_recvmsg 00DF  
           ??_ToMainHigh_sendmsg 0048           __end_of_timer0_lthread 1B0A  
       i2c_int_handler@error_buf 00BC           __end_of_timer1_lthread 0D92  
      __end_of_enable_interrupts 1B1E                         ??_memcpy 00D9  
          timer1_lthread@msgtype 01B4             _FromMainHigh_recvmsg 18D6  
   __size_of_init_timer1_lthread 0054               __end_of_OpenTimer0 19D4  
             __end_of_OpenTimer1 18D6         i2c_int_handler@msg_ready 00C3  
                    __pbssCOMRAM 004B                       ?_ReadUSART 0001  
                  ??_init_queues 00D6                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2                    __pcstackBANK2 0200  
            __size_of_in_low_int 003E         start_i2c_slave_reply@msg 00D3  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D3  
       ToMainLow_sendmsg@msgtype 00DE     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1AFC                       ?_OpenUSART 00D3  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B0  
                   _ToMainLow_MQ 0080              __size_of_init_queue 0064  
                 _init_uart_recv 1A66                        _check_msg 1872  
                      __pnvBANK0 00E1           ?_start_i2c_slave_reply 00D3  
              __size_of_init_i2c 0066                     recv_msg@data 01A7  
              __size_of_sendUART 0032                     recv_msg@qmsg 01AC  
                   recv_msg@slot 01A9                     recv_msg@qptr 01A2  
              __size_of_recv_msg 0122                        __pintcode 0008  
              __size_of_send_msg 00F0                  ?_timer0_lthread 00D3  
                       ?___lwmod 00D3            ?_FromMainHigh_recvmsg 00BB  
                ?_timer1_lthread 01B2                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B0             __end_of_uart_lthread 10B0  
     i2c_int_handler@msg_to_send 00C2                         ?_in_main 00D7  
              WriteTimer0@timer0 0034               _timer0_int_handler 13B8  
              WriteTimer1@timer1 0001       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 01B0            ToMainLow_sendmsg@data 00DF  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01AE           __end_of_init_uart_recv 1A84  
            __end_of_init_queues 152E                  i2check_msg@qptr 0034  
                     ?_check_msg 00D3                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0036  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0046  
    __end_ofi1_ToMainLow_sendmsg 1A1E                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 0049                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0026  
   __size_of_FromMainLow_sendmsg 0032             timer0_lthread@length 00D7  
             _timer1_int_handler 1934                         i1_memcpy 1676  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 16B6             timer0_lthread@msgval 00DB  
       FromMainHigh_recvmsg@data 00BD                      _in_high_int 1AEC  
                   send_msg@data 01A6              _i2c_configure_slave 1960  
                   send_msg@qmsg 01AB                     send_msg@slot 01AA  
                   send_msg@qptr 01A2            uart_lthread@msgbuffer 01B4  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D3  
                    ??_OpenUSART 00D5                  OpenUSART@config 00D8  
                 ??i2_in_low_int 0038            _uart_recv_int_handler 115A  
                   ??_in_low_int 00D7                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0047  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 0562  
             ??_enter_sleep_mode 0034                 __size_of___lwmod 0060  
                   ??_init_queue 00D5                     ?_WriteTimer0 0034  
                   ?_WriteTimer1 0001          ToMainLow_sendmsg@length 01AD  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 0041  
    ToMainHigh_recvmsg@maxlength 00DF                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D3                      _init_queues 14D8  
             __end_of_in_low_int 1734                         __ptext10 1A66  
                       __ptext11 1B24                         __ptext20 16F6  
                       __ptext12 1584                         __ptext21 1AEC  
                       __ptext13 14D8                         __ptext30 19AE  
                       __ptext22 1872                         __ptext14 1354  
                       __ptext23 1AA2                         __ptext15 12EE  
                       __ptext40 1676                         __ptext32 152E  
                       __ptext24 1770                         __ptext16 1960  
                       __ptext41 1AB6                         __ptext33 19D4  
                       __ptext25 17A6                         __ptext17 1B16  
                       __ptext50 1A1E                         __ptext42 1AC8  
                       __ptext34 0D92                         __ptext26 0898  
                       __ptext18 147C                         __ptext51 0F2A  
                       __ptext35 115A                         __ptext27 15D8  
                       __ptext19 1734                         __ptext52 16B6  
                       __ptext44 13B8                         __ptext36 1A84  
                       __ptext28 11EE                         __ptext53 1628  
                       __ptext45 1ADA                         __ptext37 1934  
                       __ptext29 18A4                         __ptext54 1906  
                       __ptext46 18D6                         __ptext38 19FA  
                       __ptext55 1B0A                         __ptext47 0ABE  
                       __ptext39 10B0                         __ptext56 1A42  
                       __ptext48 00C4                         __ptext57 1B1E  
                       __ptext49 0E64                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 01B2         timer0_int_handler@length 00BF  
             uart_lthread@status 01B6                         _init_i2c 12EE  
            _init_timer1_lthread 1584                    __size_of_main 0272  
                  ??i2_check_msg 0036                main@t1thread_data 0220  
                    ??_check_msg 00D5               __end_of_init_queue 13B8  
                       _sendUART 180E             __size_of_SleepIfOkay 004E  
                       _recv_msg 0898            ??_i2c_configure_slave 00D3  
                       _send_msg 0BB4                   init_queue@qptr 00D3  
          __size_of_uart_lthread 00C0                   i2recv_msg@data 0043  
  uart_trans_int_handler@msgtype 0021                   i2recv_msg@qmsg 00B9  
                  ??_Delay1KTCYx 00D3                   i2recv_msg@slot 00B6  
                 i2recv_msg@qptr 003E                         main@baud 020E  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00D3  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00D3  
                       memcpy@d1 00D3                         memcpy@s1 00D5  
          __end_ofi2_in_high_int 1B16     i2c_int_handler@overrun_error 00C0  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 00D5                 ___lwmod@dividend 00D3  
         ?_uart_recv_int_handler 0001                     _uart_lthread 0FF0  
                 main@UARTConfig 020F            _block_on_To_msgqueues 147C  
                  ?_handle_start 0001                 ??_timer0_lthread 00DB  
    __size_of_ToMainHigh_recvmsg 0036      __size_of_ToMainHigh_sendmsg 0024  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00E1  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0048              __end_ofi2_check_msg 1A66  
          ??_init_timer1_lthread 00D5           ??_InterruptHandlerHigh 00C5  
              _ToMainLow_recvmsg 1770                _ToMainLow_sendmsg 1840  
             main@last_reg_recvd 020D                  ___lwmod@divisor 00D5  
           __end_ofi2_in_low_int 1934               ?_ToMainLow_recvmsg 01AE  
            __end_of_Delay1KTCYx 1AB6                ??_i2c_int_handler 00BB  
                ___lwmod@counter 00D7               ?_ToMainLow_sendmsg 00DE  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0042            ??_InterruptHandlerLow 0023  
            ??_ToMainLow_recvmsg 00DF                   i2send_msg@qmsg 00B9  
                 i2send_msg@slot 00B8                   i2send_msg@qptr 003E  
            ??_ToMainLow_sendmsg 00E1              _FromMainLow_recvmsg 19D4  
                 ??_handle_start 0034              _FromMainLow_sendmsg 17DC  
                   _USART_Status 004C  
