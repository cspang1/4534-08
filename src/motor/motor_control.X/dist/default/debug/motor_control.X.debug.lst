

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Feb 25 20:16:36 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataBANK1
    76  001CC6                     __pidataBANK1:
    77                           	opt stack 0
    78                           
    79                           ;initializer for main@F5220
    80  001CC6  C7                 	db	199
    81  001CC7  48                 	db	72
    82  0000                     _ADCON1	set	4033
    83  0000                     _CMCON	set	4020
    84  0000                     _INTCONbits	set	4082
    85  0000                     _IPR1bits	set	3999
    86  0000                     _LATA	set	3977
    87  0000                     _LATB	set	3978
    88  0000                     _OSCCON	set	4051
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCTUNEbits	set	3995
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PORTA	set	3968
    94  0000                     _PORTAbits	set	3968
    95  0000                     _PORTB	set	3969
    96  0000                     _RCONbits	set	4048
    97  0000                     _RCREG	set	4014
    98  0000                     _RCSTA	set	4011
    99  0000                     _RCSTAbits	set	4011
   100  0000                     _SPBRG	set	4015
   101  0000                     _SPBRGH	set	4016
   102  0000                     _SSPADD	set	4040
   103  0000                     _SSPBUF	set	4041
   104  0000                     _SSPCON1	set	4038
   105  0000                     _SSPCON1bits	set	4038
   106  0000                     _SSPCON2	set	4037
   107  0000                     _SSPCON2bits	set	4037
   108  0000                     _SSPSTAT	set	4039
   109  0000                     _SSPSTATbits	set	4039
   110  0000                     _T1CON	set	4045
   111  0000                     _T1CONbits	set	4045
   112  0000                     _TMR1H	set	4047
   113  0000                     _TMR1L	set	4046
   114  0000                     _TRISA	set	3986
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISCbits	set	3988
   117  0000                     _TXREG	set	4013
   118  0000                     _TXSTA	set	4012
   119  0000                     _TXSTAbits	set	4012
   120                           
   121                           	psect	nvCOMRAM
   122  000049                     __pnvCOMRAM:
   123                           	opt stack 0
   124  000049                     _uc_ptr:
   125                           	opt stack 0
   126  000049                     	ds	2
   127                           
   128                           	psect	nvBANK0
   129  0000E1                     __pnvBANK0:
   130                           	opt stack 0
   131  0000E1                     _ic_ptr:
   132                           	opt stack 0
   133  0000E1                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001858                     __pcinit:
   139                           	opt stack 0
   140  001858                     start_initialization:
   141                           	opt stack 0
   142  001858                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK2 (54 bytes)
   146  001858  EE02  F000         	lfsr	0,__pbssBANK2
   147  00185C  0E36               	movlw	54
   148  00185E                     clear_0:
   149  00185E  6AEE               	clrf	postinc0,c
   150  001860  06E8               	decf	wreg,f,c
   151  001862  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK1 (108 bytes)
   154  001864  EE01  F080         	lfsr	0,__pbssBANK1
   155  001868  0E6C               	movlw	108
   156  00186A                     clear_1:
   157  00186A  6AEE               	clrf	postinc0,c
   158  00186C  06E8               	decf	wreg,f,c
   159  00186E  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK0 (54 bytes)
   162  001870  EE00  F080         	lfsr	0,__pbssBANK0
   163  001874  0E36               	movlw	54
   164  001876                     clear_2:
   165  001876  6AEE               	clrf	postinc0,c
   166  001878  06E8               	decf	wreg,f,c
   167  00187A  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to COMRAM (2 bytes)
   170  00187C  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   171  00187E  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   172                           
   173                           ; Initialize objects allocated to BANK1 (2 bytes)
   174                           ; load TBLPTR registers with __pidataBANK1
   175  001880  0EC6               	movlw	low __pidataBANK1
   176  001882  6EF6               	movwf	tblptrl,c
   177  001884  0E1C               	movlw	high __pidataBANK1
   178  001886  6EF7               	movwf	tblptrh,c
   179  001888  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   180  00188A  6EF8               	movwf	tblptru,c
   181  00188C  0009               	tblrd		*+	;fetch initializer
   182  00188E  CFF5 F1EC          	movff	tablat,__pdataBANK1
   183  001892  0009               	tblrd		*+	;fetch initializer
   184  001894  CFF5 F1ED          	movff	tablat,__pdataBANK1+1
   185  001898                     end_of_initialization:
   186                           	opt stack 0
   187  001898                     __end_of__initialization:
   188                           	opt stack 0
   189  001898  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  00189A  6EF8               	movwf	tblptru,c
   191  00189C  0100               	movlb	0
   192  00189E  EF13  F003         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssCOMRAM
   201  00004B                     __pbssCOMRAM:
   202                           	opt stack 0
   203  00004B                     _MQ_Main_Willing_to_block:
   204                           	opt stack 0
   205  00004B                     	ds	1
   206  00004C                     _USART_Status:
   207                           	opt stack 0
   208  00004C                     	ds	1
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	bssBANK0
   217  000080                     __pbssBANK0:
   218                           	opt stack 0
   219  000080                     _ToMainLow_MQ:
   220                           	opt stack 0
   221  000080                     	ds	54
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           
   229                           	psect	bssBANK1
   230  000180                     __pbssBANK1:
   231                           	opt stack 0
   232  000180                     _FromMainLow_MQ:
   233                           	opt stack 0
   234  000180                     	ds	54
   235  0001B6                     _ToMainHigh_MQ:
   236                           	opt stack 0
   237  0001B6                     	ds	54
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	dataBANK1
   246  0001EC                     __pdataBANK1:
   247                           	opt stack 0
   248  0001EC                     main@F5220:
   249                           	opt stack 0
   250  0001EC                     	ds	2
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	bssBANK2
   259  000200                     __pbssBANK2:
   260                           	opt stack 0
   261  000200                     _FromMainHigh_MQ:
   262                           	opt stack 0
   263  000200                     	ds	54
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271                           	psect	cstackBANK1
   272  000100                     __pcstackBANK1:
   273                           	opt stack 0
   274  000100                     send_msg@qptr:
   275                           	opt stack 0
   276  000100                     recv_msg@qptr:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x0
   280  000100                     	ds	2
   281  000102                     send_msg@length:
   282                           	opt stack 0
   283  000102                     recv_msg@maxlength:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x2
   287  000102                     	ds	1
   288  000103                     send_msg@msgtype:
   289                           	opt stack 0
   290  000103                     recv_msg@msgtype:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x3
   294  000103                     	ds	1
   295  000104                     send_msg@data:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x4
   299  000104                     	ds	1
   300  000105                     recv_msg@data:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x5
   304  000105                     	ds	1
   305  000106                     send_msg@tlength:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x6
   309  000106                     	ds	1
   310  000107                     recv_msg@slot:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x7
   314  000107                     	ds	1
   315  000108                     send_msg@slot:
   316                           	opt stack 0
   317  000108                     recv_msg@tlength:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x8
   321  000108                     	ds	1
   322  000109                     send_msg@qmsg:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x9
   326  000109                     	ds	1
   327  00010A                     recv_msg@qmsg:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xA
   331  00010A                     	ds	1
   332  00010B                     ToMainLow_sendmsg@length:
   333                           	opt stack 0
   334  00010B                     FromMainLow_sendmsg@length:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0xB
   338  00010B                     	ds	1
   339  00010C                     ToMainLow_recvmsg@msgtype:
   340                           	opt stack 0
   341  00010C                     ToMainHigh_recvmsg@msgtype:
   342                           	opt stack 0
   343  00010C                     sendUARTarr@data:
   344                           	opt stack 0
   345  00010C                     uart_lthread@uptr:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0xC
   349  00010C                     	ds	2
   350  00010E                     sendUARTarr@retval:
   351                           	opt stack 0
   352  00010E                     ToMainLow_recvmsg@data:
   353                           	opt stack 0
   354  00010E                     ToMainHigh_recvmsg@data:
   355                           	opt stack 0
   356  00010E                     uart_lthread@msgtype:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0xE
   360  00010E                     	ds	1
   361  00010F                     sendUARTarr@length:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0xF
   365  00010F                     	ds	1
   366  000110                     uart_lthread@length:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x10
   370  000110                     	ds	2
   371  000112                     uart_lthread@msgbuffer:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x12
   375  000112                     	ds	2
   376  000114                     uart_lthread@status:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x14
   380  000114                     	ds	1
   381  000115                     uart_lthread@index:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x15
   385  000115                     	ds	2
   386  000117                     main@t0thread_data:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x17
   390  000117                     	ds	2
   391  000119                     main@test:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x19
   395  000119                     	ds	2
   396  00011B                     main@msgbuffer:
   397                           	opt stack 0
   398                           
   399                           ; 11 bytes @ 0x1B
   400  00011B                     	ds	11
   401  000126                     main@baud:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x26
   405  000126                     	ds	1
   406  000127                     main@UARTConfig:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x27
   410  000127                     	ds	1
   411  000128                     main@last_reg_recvd:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x28
   415  000128                     	ds	1
   416  000129                     main@uthread_data:
   417                           	opt stack 0
   418                           
   419                           ; 10 bytes @ 0x29
   420  000129                     	ds	10
   421  000133                     main@uc:
   422                           	opt stack 0
   423                           
   424                           ; 5 bytes @ 0x33
   425  000133                     	ds	5
   426  000138                     main@ctrl:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x38
   430  000138                     	ds	2
   431  00013A                     main@msgtype:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x3A
   435  00013A                     	ds	1
   436  00013B                     main@length:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x3B
   440  00013B                     	ds	1
   441  00013C                     main@t1thread_data:
   442                           	opt stack 0
   443                           
   444                           ; 40 bytes @ 0x3C
   445  00013C                     	ds	40
   446  000164                     main@ic:
   447                           	opt stack 0
   448                           
   449                           ; 28 bytes @ 0x64
   450  000164                     	ds	28
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           
   458                           	psect	cstackBANK0
   459  0000B6                     __pcstackBANK0:
   460                           	opt stack 0
   461  0000B6                     i2send_msg@tlength:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x0
   465  0000B6                     	ds	2
   466  0000B8                     i2send_msg@slot:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x2
   470  0000B8                     	ds	1
   471  0000B9                     i2send_msg@qmsg:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x3
   475  0000B9                     	ds	2
   476  0000BB                     ??_i2c_int_handler:
   477                           
   478                           ; 0 bytes @ 0x5
   479  0000BB                     	ds	1
   480  0000BC                     i2c_int_handler@error_buf:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x6
   484  0000BC                     	ds	3
   485  0000BF                     i2c_int_handler@data_written:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x9
   489  0000BF                     	ds	1
   490  0000C0                     i2c_int_handler@overrun_error:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0xA
   494  0000C0                     	ds	1
   495  0000C1                     i2c_int_handler@i2c_data:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0xB
   499  0000C1                     	ds	1
   500  0000C2                     i2c_int_handler@msg_to_send:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0xC
   504  0000C2                     	ds	1
   505  0000C3                     i2c_int_handler@msg_ready:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0xD
   509  0000C3                     	ds	1
   510  0000C4                     i2c_int_handler@data_read:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0xE
   514  0000C4                     	ds	1
   515  0000C5                     ??_InterruptHandlerHigh:
   516                           
   517                           ; 0 bytes @ 0xF
   518  0000C5                     	ds	14
   519  0000D3                     ?_in_high_int:
   520                           	opt stack 0
   521  0000D3                     i2c_configure_slave@addr:
   522                           	opt stack 0
   523  0000D3                     OpenTimer1@config:
   524                           	opt stack 0
   525  0000D3                     Delay1KTCYx@unit:
   526                           	opt stack 0
   527  0000D3                     init_queue@qptr:
   528                           	opt stack 0
   529  0000D3                     check_msg@qptr:
   530                           	opt stack 0
   531  0000D3                     start_i2c_slave_reply@msg:
   532                           	opt stack 0
   533  0000D3                     init_i2c@ic:
   534                           	opt stack 0
   535  0000D3                     init_uart_recv@uc:
   536                           	opt stack 0
   537  0000D3                     timer0_lthread@tptr:
   538                           	opt stack 0
   539  0000D3                     timer1_lthread@tptr:
   540                           	opt stack 0
   541  0000D3                     quad_lookup_init@table:
   542                           	opt stack 0
   543  0000D3                     init_uart_lthread@uptr:
   544                           	opt stack 0
   545  0000D3                     WriteTimer1@timer1:
   546                           	opt stack 0
   547  0000D3                     OpenUSART@spbrg:
   548                           	opt stack 0
   549  0000D3                     memcpy@d1:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x1D
   553  0000D3                     	ds	2
   554  0000D5                     ??_OpenUSART:
   555  0000D5                     ??_start_i2c_slave_reply:
   556  0000D5                     ??_check_msg:
   557  0000D5                     ?_in_low_int:
   558                           	opt stack 0
   559  0000D5                     init_queue@i:
   560                           	opt stack 0
   561  0000D5                     timer0_lthread@msgtype:
   562                           	opt stack 0
   563  0000D5                     init_timer1_lthread@tptr:
   564                           	opt stack 0
   565  0000D5                     timer1_lthread@msgtype:
   566                           	opt stack 0
   567  0000D5                     WriteTimer1@timer:
   568                           	opt stack 0
   569  0000D5                     memcpy@s1:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x1F
   573  0000D5                     	ds	1
   574  0000D6                     
   575                           ; 0 bytes @ 0x20
   576  0000D6                     	ds	1
   577  0000D7                     ?_in_main:
   578                           	opt stack 0
   579  0000D7                     start_i2c_slave_reply@length:
   580                           	opt stack 0
   581  0000D7                     timer0_lthread@length:
   582                           	opt stack 0
   583  0000D7                     timer1_lthread@length:
   584                           	opt stack 0
   585  0000D7                     memcpy@n:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x21
   589  0000D7                     	ds	1
   590  0000D8                     OpenUSART@config:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x22
   594  0000D8                     	ds	1
   595  0000D9                     timer0_lthread@msgbuffer:
   596                           	opt stack 0
   597  0000D9                     timer1_lthread@msgbuffer:
   598                           	opt stack 0
   599  0000D9                     memcpy@d:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x23
   603  0000D9                     	ds	2
   604  0000DB                     ??_timer1_lthread:
   605  0000DB                     timer0_lthread@msgval:
   606                           	opt stack 0
   607  0000DB                     memcpy@s:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x25
   611  0000DB                     	ds	2
   612  0000DD                     ??_send_msg:
   613  0000DD                     ??_recv_msg:
   614                           
   615                           ; 0 bytes @ 0x27
   616  0000DD                     	ds	1
   617  0000DE                     ToMainLow_sendmsg@msgtype:
   618                           	opt stack 0
   619  0000DE                     FromMainLow_sendmsg@msgtype:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x28
   623  0000DE                     	ds	1
   624  0000DF                     ToMainLow_recvmsg@maxlength:
   625                           	opt stack 0
   626  0000DF                     ToMainHigh_recvmsg@maxlength:
   627                           	opt stack 0
   628  0000DF                     timer1_lthread@index:
   629                           	opt stack 0
   630  0000DF                     ToMainLow_sendmsg@data:
   631                           	opt stack 0
   632  0000DF                     FromMainLow_sendmsg@data:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x29
   636  0000DF                     	ds	2
   637  0000E1                     tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           
   644                           ; 0 bytes @ 0x2B
   645                           
   646                           	psect	cstackCOMRAM
   647  000001                     __pcstackCOMRAM:
   648                           	opt stack 0
   649  000001                     ReadUSART@data:
   650                           	opt stack 0
   651  000001                     i1WriteTimer1@timer1:
   652                           	opt stack 0
   653  000001                     i1memcpy@d1:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x0
   657  000001                     	ds	2
   658  000003                     i1WriteTimer1@timer:
   659                           	opt stack 0
   660  000003                     i1memcpy@s1:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x2
   664  000003                     	ds	2
   665  000005                     i1memcpy@n:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x4
   669  000005                     	ds	2
   670  000007                     i1memcpy@d:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x6
   674  000007                     	ds	2
   675  000009                     i1memcpy@s:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x8
   679  000009                     	ds	2
   680  00000B                     i1send_msg@qptr:
   681                           	opt stack 0
   682  00000B                     i1recv_msg@qptr:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0xA
   686  00000B                     	ds	2
   687  00000D                     i1send_msg@length:
   688                           	opt stack 0
   689  00000D                     i1recv_msg@maxlength:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0xC
   693  00000D                     	ds	1
   694  00000E                     i1send_msg@msgtype:
   695                           	opt stack 0
   696  00000E                     i1recv_msg@msgtype:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0xD
   700  00000E                     	ds	1
   701  00000F                     i1send_msg@data:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0xE
   705  00000F                     	ds	1
   706  000010                     i1recv_msg@data:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xF
   710  000010                     	ds	1
   711  000011                     ??i1_send_msg:
   712                           
   713                           ; 0 bytes @ 0x10
   714  000011                     	ds	1
   715  000012                     ??i1_recv_msg:
   716  000012                     i1send_msg@tlength:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x11
   720  000012                     	ds	2
   721  000014                     i1send_msg@slot:
   722                           	opt stack 0
   723  000014                     i1recv_msg@slot:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x13
   727  000014                     	ds	1
   728  000015                     i1send_msg@qmsg:
   729                           	opt stack 0
   730  000015                     i1recv_msg@tlength:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x14
   734  000015                     	ds	2
   735  000017                     i1ToMainLow_sendmsg@msgtype:
   736                           	opt stack 0
   737  000017                     i1recv_msg@qmsg:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x16
   741  000017                     	ds	1
   742  000018                     i1ToMainLow_sendmsg@data:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x17
   746  000018                     	ds	1
   747  000019                     FromMainLow_recvmsg@msgtype:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x18
   751  000019                     	ds	1
   752  00001A                     i1ToMainLow_sendmsg@length:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x19
   756  00001A                     	ds	1
   757  00001B                     ??_uart_recv_int_handler:
   758  00001B                     FromMainLow_recvmsg@data:
   759                           	opt stack 0
   760  00001B                     timer1_int_handler@curPos:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x1A
   764  00001B                     	ds	2
   765  00001D                     FromMainLow_recvmsg@maxlength:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x1C
   769  00001D                     	ds	1
   770  00001E                     uart_trans_int_handler@data:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x1D
   774  00001E                     	ds	2
   775  000020                     uart_trans_int_handler@msgtype:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x1F
   779  000020                     	ds	1
   780  000021                     uart_trans_int_handler@curIndex:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x20
   784  000021                     	ds	1
   785  000022                     uart_trans_int_handler@length:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x21
   789  000022                     	ds	1
   790  000023                     ??_InterruptHandlerLow:
   791                           
   792                           ; 0 bytes @ 0x22
   793  000023                     	ds	17
   794  000034                     ?i2_in_high_int:
   795                           	opt stack 0
   796  000034                     handle_start@data_read:
   797                           	opt stack 0
   798  000034                     i2check_msg@qptr:
   799                           	opt stack 0
   800  000034                     i2memcpy@d1:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x33
   804  000034                     	ds	2
   805  000036                     ??i2_check_msg:
   806  000036                     ?i2_in_low_int:
   807                           	opt stack 0
   808  000036                     i2memcpy@s1:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x35
   812  000036                     	ds	2
   813  000038                     i2memcpy@n:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x37
   817  000038                     	ds	2
   818  00003A                     i2memcpy@d:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x39
   822  00003A                     	ds	2
   823  00003C                     i2memcpy@s:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x3B
   827  00003C                     	ds	2
   828  00003E                     i2send_msg@qptr:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x3D
   832  00003E                     	ds	2
   833  000040                     i2send_msg@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x3F
   837  000040                     	ds	1
   838  000041                     i2send_msg@msgtype:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x40
   842  000041                     	ds	1
   843  000042                     i2send_msg@data:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x41
   847  000042                     	ds	2
   848  000044                     ??i2_send_msg:
   849                           
   850                           ; 0 bytes @ 0x43
   851  000044                     	ds	1
   852  000045                     ToMainHigh_sendmsg@msgtype:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x44
   856  000045                     	ds	1
   857  000046                     ToMainHigh_sendmsg@data:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x45
   861  000046                     	ds	2
   862  000048                     ToMainHigh_sendmsg@length:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x47
   866  000048                     	ds	1
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           
   874 ;;
   875 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   876 ;;
   877 ;; *************** function _main *****************
   878 ;; Defined at:
   879 ;;		line 139 in file "src/main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  ctrl            2   56[BANK1 ] unsigned char [2]
   884 ;;  t1thread_dat   40   60[BANK1 ] struct __timer1_thread_s
   885 ;;  ic             28  100[BANK1 ] struct __i2c_comm
   886 ;;  msgbuffer      11   27[BANK1 ] unsigned char [11]
   887 ;;  uthread_data   10   41[BANK1 ] struct __uart_thread_str
   888 ;;  uc              5   51[BANK1 ] struct __uart_comm
   889 ;;  test            2   25[BANK1 ] unsigned char [2]
   890 ;;  t0thread_dat    2   23[BANK1 ] struct __timer0_thread_s
   891 ;;  length          1   59[BANK1 ] char 
   892 ;;  msgtype         1   58[BANK1 ] unsigned char 
   893 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
   894 ;;  UARTConfig      1   39[BANK1 ] unsigned char 
   895 ;;  baud            1   38[BANK1 ] unsigned char 
   896 ;;  i               1    0        unsigned char 
   897 ;;  c               1    0        unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;		None               void
   900 ;; Registers used:
   901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0     105       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         0       0     105       0       0
   911 ;;Total ram usage:      105 bytes
   912 ;; Hardware stack levels required when called:   14
   913 ;; This function calls:
   914 ;;		_OpenTimer1
   915 ;;		_OpenUSART
   916 ;;		_ToMainHigh_recvmsg
   917 ;;		_ToMainLow_recvmsg
   918 ;;		_WriteTimer1
   919 ;;		_block_on_To_msgqueues
   920 ;;		_enable_interrupts
   921 ;;		_i2c_configure_slave
   922 ;;		_init_i2c
   923 ;;		_init_queues
   924 ;;		_init_timer1_lthread
   925 ;;		_init_uart_lthread
   926 ;;		_init_uart_recv
   927 ;;		_sendUARTarr
   928 ;;		_start_i2c_slave_reply
   929 ;;		_timer0_lthread
   930 ;;		_timer1_lthread
   931 ;;		_uart_lthread
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938  000626                     __ptext0:
   939                           	opt stack 0
   940  000626                     _main:
   941                           	opt stack 16
   942                           
   943                           ;main.c: 140: char c;
   944                           ;main.c: 141: signed char length;
   945                           ;main.c: 142: unsigned char msgtype;
   946                           ;main.c: 143: unsigned char last_reg_recvd;
   947                           ;main.c: 144: unsigned char baud, UARTConfig;
   948                           ;main.c: 145: uart_comm uc;
   949                           ;main.c: 146: i2c_comm ic;
   950                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   951                           ;main.c: 148: unsigned char i;
   952                           ;main.c: 149: uart_thread_struct uthread_data;
   953                           ;main.c: 150: timer1_thread_struct t1thread_data;
   954                           ;main.c: 151: timer0_thread_struct t0thread_data;
   955                           ;main.c: 154: PORTA = 0x0;
   956                           
   957                           ;incstack = 0
   958  000626  0E00               	movlw	0
   959  000628  6E80               	movwf	3968,c	;volatile
   960                           
   961                           ;main.c: 155: LATA = 0x0;
   962  00062A  0E00               	movlw	0
   963  00062C  6E89               	movwf	3977,c	;volatile
   964                           
   965                           ;main.c: 156: ADCON1 = 0x0F;
   966  00062E  0E0F               	movlw	15
   967  000630  6EC1               	movwf	4033,c	;volatile
   968                           
   969                           ;main.c: 157: CMCON = 0x07;
   970  000632  0E07               	movlw	7
   971  000634  6EB4               	movwf	4020,c	;volatile
   972                           
   973                           ;main.c: 158: TRISA = 0xFF;
   974  000636  6892               	setf	3986,c	;volatile
   975                           
   976                           ;main.c: 161: PORTB = 0x0;
   977  000638  0E00               	movlw	0
   978  00063A  6E81               	movwf	3969,c	;volatile
   979                           
   980                           ;main.c: 162: LATB = 0x0;
   981  00063C  0E00               	movlw	0
   982  00063E  6E8A               	movwf	3978,c	;volatile
   983                           
   984                           ;main.c: 163: TRISB = 0xFF;
   985  000640  6893               	setf	3987,c	;volatile
   986                           
   987                           ;main.c: 171: OSCCON = 0x82;
   988  000642  0E82               	movlw	130
   989  000644  6ED3               	movwf	4051,c	;volatile
   990                           
   991                           ;main.c: 172: OSCTUNEbits.PLLEN = 0;
   992  000646  9C9B               	bcf	3995,6,c	;volatile
   993                           
   994                           ;main.c: 185: init_uart_recv(&uc);
   995  000648  0101               	movlb	1	; () banked
   996  00064A  0E01               	movlw	high main@uc
   997  00064C  0100               	movlb	0	; () banked
   998  00064E  6FD4               	movwf	(init_uart_recv@uc+1)& (0+255),b
   999  000650  0101               	movlb	1	; () banked
  1000  000652  0E33               	movlw	low main@uc
  1001  000654  0100               	movlb	0	; () banked
  1002  000656  6FD3               	movwf	init_uart_recv@uc& (0+255),b
  1003  000658  EC0D  F00E         	call	_init_uart_recv	;wreg free
  1004                           
  1005                           ;main.c: 188: init_i2c(&ic);
  1006  00065C  0101               	movlb	1	; () banked
  1007  00065E  0E01               	movlw	high main@ic
  1008  000660  0100               	movlb	0	; () banked
  1009  000662  6FD4               	movwf	(init_i2c@ic+1)& (0+255),b
  1010  000664  0101               	movlb	1	; () banked
  1011  000666  0E64               	movlw	low main@ic
  1012  000668  0100               	movlb	0	; () banked
  1013  00066A  6FD3               	movwf	init_i2c@ic& (0+255),b
  1014  00066C  ECF4  F00A         	call	_init_i2c	;wreg free
  1015                           
  1016                           ;main.c: 191: init_timer1_lthread(&t1thread_data);
  1017  000670  0101               	movlb	1	; () banked
  1018  000672  0E01               	movlw	high main@t1thread_data
  1019  000674  0100               	movlb	0	; () banked
  1020  000676  6FD6               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1021  000678  0101               	movlb	1	; () banked
  1022  00067A  0E3C               	movlw	low main@t1thread_data
  1023  00067C  0100               	movlb	0	; () banked
  1024  00067E  6FD5               	movwf	init_timer1_lthread@tptr& (0+255),b
  1025  000680  EC7E  F009         	call	_init_timer1_lthread	;wreg free
  1026                           
  1027                           ;main.c: 194: init_uart_lthread(&uthread_data);
  1028  000684  0101               	movlb	1	; () banked
  1029  000686  0E01               	movlw	high main@uthread_data
  1030  000688  0100               	movlb	0	; () banked
  1031  00068A  6FD4               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1032  00068C  0101               	movlb	1	; () banked
  1033  00068E  0E29               	movlw	low main@uthread_data
  1034  000690  0100               	movlb	0	; () banked
  1035  000692  6FD3               	movwf	init_uart_lthread@uptr& (0+255),b
  1036  000694  EC64  F00E         	call	_init_uart_lthread	;wreg free
  1037                           
  1038                           ;main.c: 198: init_queues();
  1039  000698  EC87  F00B         	call	_init_queues	;wreg free
  1040                           
  1041                           ;main.c: 201: TRISB = 0x0;
  1042  00069C  0E00               	movlw	0
  1043  00069E  6E93               	movwf	3987,c	;volatile
  1044                           
  1045                           ;main.c: 202: LATB = 0x0;
  1046  0006A0  0E00               	movlw	0
  1047  0006A2  6E8A               	movwf	3978,c	;volatile
  1048                           
  1049                           ;main.c: 212: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111)
      +                          ;
  1050  0006A4  0EF5               	movlw	245
  1051  0006A6  EC68  F00D         	call	_OpenTimer1
  1052                           
  1053                           ;main.c: 213: WriteTimer1(64936);
  1054  0006AA  0EFD               	movlw	253
  1055  0006AC  0100               	movlb	0	; () banked
  1056  0006AE  6FD4               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  1057  0006B0  0EA8               	movlw	168
  1058  0006B2  0100               	movlb	0	; () banked
  1059  0006B4  6FD3               	movwf	WriteTimer1@timer1& (0+255),b
  1060  0006B6  EC35  F00E         	call	_WriteTimer1	;wreg free
  1061                           
  1062                           ;main.c: 222: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1063  0006BA  0EFC               	movlw	252
  1064  0006BC  0101               	movlb	1	; () banked
  1065  0006BE  6F27               	movwf	main@UARTConfig& (0+255),b
  1066                           
  1067                           ; BSR set to: 1
  1068                           ;main.c: 223: baud = 77;
  1069  0006C0  0E4D               	movlw	77
  1070  0006C2  0101               	movlb	1	; () banked
  1071  0006C4  6F26               	movwf	main@baud& (0+255),b
  1072                           
  1073                           ; BSR set to: 1
  1074                           ;main.c: 224: OpenUSART(UARTConfig,baud);
  1075  0006C6  0101               	movlb	1	; () banked
  1076  0006C8  0100               	movlb	0	; () banked
  1077  0006CA  C126  F0D3         	movff	main@baud,OpenUSART@spbrg
  1078  0006CE  0100               	movlb	0	; () banked
  1079  0006D0  6BD4               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1080  0006D2  0101               	movlb	1	; () banked
  1081  0006D4  5127               	movf	main@UARTConfig& (0+255),w,b
  1082  0006D6  EC74  F00A         	call	_OpenUSART
  1083                           
  1084                           ;main.c: 230: IPR1bits.TMR1IP = 0;
  1085  0006DA  909F               	bcf	3999,0,c	;volatile
  1086                           
  1087                           ;main.c: 232: IPR1bits.RCIP = 0;
  1088  0006DC  9A9F               	bcf	3999,5,c	;volatile
  1089                           
  1090                           ;main.c: 234: IPR1bits.TXIP = 0;
  1091  0006DE  989F               	bcf	3999,4,c	;volatile
  1092                           
  1093                           ;main.c: 236: IPR1bits.SSPIP = 1;
  1094  0006E0  869F               	bsf	3999,3,c	;volatile
  1095                           
  1096                           ;main.c: 245: i2c_configure_slave(0x9A);
  1097  0006E2  0E9A               	movlw	154
  1098  0006E4  ECB0  F00D         	call	_i2c_configure_slave
  1099                           
  1100                           ;main.c: 260: PIE1bits.SSPIE = 1;
  1101  0006E8  869D               	bsf	3997,3,c	;volatile
  1102                           
  1103                           ;main.c: 264: enable_interrupts();
  1104  0006EA  EC5C  F00E         	call	_enable_interrupts	;wreg free
  1105                           
  1106                           ;main.c: 277: unsigned char test[2] = {199,72};
  1107  0006EE  C1EC  F119         	movff	main@F5220,main@test
  1108  0006F2  C1ED  F11A         	movff	main@F5220+1,main@test+1
  1109                           
  1110                           ;main.c: 278: sendUARTarr(2,test);
  1111  0006F6  0101               	movlb	1	; () banked
  1112  0006F8  0E01               	movlw	high main@test
  1113  0006FA  0101               	movlb	1	; () banked
  1114  0006FC  6F0D               	movwf	(sendUARTarr@data+1)& (0+255),b
  1115  0006FE  0101               	movlb	1	; () banked
  1116  000700  0E19               	movlw	low main@test
  1117  000702  0101               	movlb	1	; () banked
  1118  000704  6F0C               	movwf	sendUARTarr@data& (0+255),b
  1119  000706  0E02               	movlw	2
  1120  000708  EC1D  F00D         	call	_sendUARTarr
  1121  00070C                     l3367:
  1122                           
  1123                           ;main.c: 289: block_on_To_msgqueues();
  1124  00070C  EC59  F00B         	call	_block_on_To_msgqueues	;wreg free
  1125                           
  1126                           ;main.c: 296: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1127  000710  0101               	movlb	1	; () banked
  1128  000712  0E01               	movlw	high main@msgtype
  1129  000714  0101               	movlb	1	; () banked
  1130  000716  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1131  000718  0101               	movlb	1	; () banked
  1132  00071A  0E3A               	movlw	low main@msgtype
  1133  00071C  0101               	movlb	1	; () banked
  1134  00071E  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1135  000720  0101               	movlb	1	; () banked
  1136  000722  0E01               	movlw	high main@msgbuffer
  1137  000724  0101               	movlb	1	; () banked
  1138  000726  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1139  000728  0101               	movlb	1	; () banked
  1140  00072A  0E1B               	movlw	low main@msgbuffer
  1141  00072C  0101               	movlb	1	; () banked
  1142  00072E  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1143  000730  0E0A               	movlw	10
  1144  000732  ECE9  F00C         	call	_ToMainHigh_recvmsg
  1145  000736  0101               	movlb	1	; () banked
  1146  000738  6F3B               	movwf	main@length& (0+255),b
  1147                           
  1148                           ; BSR set to: 1
  1149                           ;main.c: 297: if (length < 0) {
  1150  00073A  0101               	movlb	1	; () banked
  1151  00073C  BF3B               	btfsc	main@length& (0+255),7,b
  1152  00073E  D08D               	goto	l3405
  1153  000740  D07E               	goto	l3403
  1154  000742                     l3375:
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 305: {
  1158                           ;main.c: 306: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1159  000742  0101               	movlb	1	; () banked
  1160  000744  0E01               	movlw	high main@t0thread_data
  1161  000746  0100               	movlb	0	; () banked
  1162  000748  6FD4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1163  00074A  0101               	movlb	1	; () banked
  1164  00074C  0E17               	movlw	low main@t0thread_data
  1165  00074E  0100               	movlb	0	; () banked
  1166  000750  6FD3               	movwf	timer0_lthread@tptr& (0+255),b
  1167  000752  0101               	movlb	1	; () banked
  1168  000754  0100               	movlb	0	; () banked
  1169  000756  C13A  F0D5         	movff	main@msgtype,timer0_lthread@msgtype
  1170  00075A  0100               	movlb	0	; () banked
  1171  00075C  6BD6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1172  00075E  0101               	movlb	1	; () banked
  1173  000760  513B               	movf	main@length& (0+255),w,b
  1174  000762  0100               	movlb	0	; () banked
  1175  000764  6FD7               	movwf	timer0_lthread@length& (0+255),b
  1176  000766  0100               	movlb	0	; () banked
  1177  000768  6BD8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1178  00076A  0100               	movlb	0	; () banked
  1179  00076C  BFD7               	btfsc	timer0_lthread@length& (0+255),7,b
  1180  00076E  07D8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1181  000770  0101               	movlb	1	; () banked
  1182  000772  0E01               	movlw	high main@msgbuffer
  1183  000774  0100               	movlb	0	; () banked
  1184  000776  6FDA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1185  000778  0101               	movlb	1	; () banked
  1186  00077A  0E1B               	movlw	low main@msgbuffer
  1187  00077C  0100               	movlb	0	; () banked
  1188  00077E  6FD9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1189  000780  EC4F  F00E         	call	_timer0_lthread	;wreg free
  1190                           
  1191                           ;main.c: 307: break;
  1192  000784  D06A               	goto	l3405
  1193  000786                     l124:
  1194                           
  1195                           ; BSR set to: 1
  1196                           ;main.c: 310: {
  1197                           ;main.c: 311: last_reg_recvd = msgbuffer[0];
  1198  000786  C11B  F128         	movff	main@msgbuffer,main@last_reg_recvd
  1199                           
  1200                           ;main.c: 312: unsigned char ctrl[2];
  1201                           ;main.c: 313: switch(last_reg_recvd){
  1202  00078A  D011               	goto	l3385
  1203  00078C                     l3377:
  1204                           
  1205                           ; BSR set to: 1
  1206                           ;main.c: 315: {
  1207                           ;main.c: 316: ctrl[0] = 0;
  1208  00078C  0E00               	movlw	0
  1209  00078E  0101               	movlb	1	; () banked
  1210  000790  6F38               	movwf	main@ctrl& (0+255),b
  1211                           
  1212                           ;main.c: 317: ctrl[1] = 0;
  1213  000792  0E00               	movlw	0
  1214  000794  D009               	goto	L2
  1215  000796                     l3379:
  1216                           
  1217                           ; BSR set to: 1
  1218                           ;main.c: 321: {
  1219                           ;main.c: 322: ctrl[0] = 199;
  1220  000796  0EC7               	movlw	199
  1221  000798  0101               	movlb	1	; () banked
  1222  00079A  6F38               	movwf	main@ctrl& (0+255),b
  1223                           
  1224                           ;main.c: 323: ctrl[1] = 73;
  1225  00079C  0E49               	movlw	73
  1226  00079E  D004               	goto	L2
  1227  0007A0                     l3381:
  1228                           
  1229                           ; BSR set to: 1
  1230                           ;main.c: 327: {
  1231                           ;main.c: 328: ctrl[0] = 182;
  1232  0007A0  0EB6               	movlw	182
  1233  0007A2  0101               	movlb	1	; () banked
  1234  0007A4  6F38               	movwf	main@ctrl& (0+255),b
  1235                           
  1236                           ;main.c: 329: ctrl[1] = 54;
  1237  0007A6  0E36               	movlw	54
  1238  0007A8                     L2:
  1239  0007A8  0101               	movlb	1	; () banked
  1240  0007AA  6F39               	movwf	(main@ctrl+1)& (0+255),b
  1241                           
  1242                           ;main.c: 330: break;
  1243  0007AC  D00B               	goto	l3387
  1244  0007AE                     l3385:
  1245                           
  1246                           ; BSR set to: 1
  1247  0007AE  0101               	movlb	1	; () banked
  1248  0007B0  5128               	movf	main@last_reg_recvd& (0+255),w,b
  1249                           
  1250                           ; Switch size 1, requested type "space"
  1251                           ; Number of cases is 3, Range of values is 0 to 2
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte           10     6 (average)
  1255                           ;	Chosen strategy is simple_byte
  1256  0007B2  0A00               	xorlw	0	; case 0
  1257  0007B4  B4D8               	btfsc	status,2,c
  1258  0007B6  D7EA               	goto	l3377
  1259  0007B8  0A01               	xorlw	1	; case 1
  1260  0007BA  B4D8               	btfsc	status,2,c
  1261  0007BC  D7EC               	goto	l3379
  1262  0007BE  0A03               	xorlw	3	; case 2
  1263  0007C0  B4D8               	btfsc	status,2,c
  1264  0007C2  D7EE               	goto	l3381
  1265  0007C4                     l3387:
  1266                           
  1267                           ; BSR set to: 1
  1268                           ;main.c: 333: sendUARTarr(2,ctrl);
  1269  0007C4  0101               	movlb	1	; () banked
  1270  0007C6  0E01               	movlw	high main@ctrl
  1271  0007C8  0101               	movlb	1	; () banked
  1272  0007CA  6F0D               	movwf	(sendUARTarr@data+1)& (0+255),b
  1273  0007CC  0101               	movlb	1	; () banked
  1274  0007CE  0E38               	movlw	low main@ctrl
  1275  0007D0  0101               	movlb	1	; () banked
  1276  0007D2  6F0C               	movwf	sendUARTarr@data& (0+255),b
  1277  0007D4  0E02               	movlw	2
  1278  0007D6  EC1D  F00D         	call	_sendUARTarr
  1279                           
  1280                           ;main.c: 334: break;
  1281  0007DA  D03F               	goto	l3405
  1282  0007DC                     l130:
  1283                           
  1284                           ; BSR set to: 1
  1285                           ;main.c: 337: {
  1286                           ;main.c: 340: last_reg_recvd = msgbuffer[0];
  1287  0007DC  C11B  F128         	movff	main@msgbuffer,main@last_reg_recvd
  1288                           
  1289                           ;main.c: 341: break;
  1290  0007E0  D03C               	goto	l3405
  1291  0007E2                     l3389:
  1292                           
  1293                           ; BSR set to: 1
  1294                           ;main.c: 354: {
  1295                           ;main.c: 355: length = 2;
  1296  0007E2  0E02               	movlw	2
  1297  0007E4  0101               	movlb	1	; () banked
  1298  0007E6  6F3B               	movwf	main@length& (0+255),b
  1299                           
  1300                           ;main.c: 356: msgbuffer[0] = 0x55;
  1301  0007E8  0E55               	movlw	85
  1302  0007EA  0101               	movlb	1	; () banked
  1303  0007EC  6F1B               	movwf	main@msgbuffer& (0+255),b
  1304                           
  1305                           ;main.c: 357: msgbuffer[1] = 0xAA;
  1306  0007EE  0EAA               	movlw	170
  1307  0007F0  0101               	movlb	1	; () banked
  1308  0007F2  6F1C               	movwf	(main@msgbuffer+1)& (0+255),b
  1309                           
  1310                           ;main.c: 358: break;
  1311  0007F4  D017               	goto	l3399
  1312  0007F6                     l3391:
  1313                           
  1314                           ; BSR set to: 1
  1315                           ;main.c: 361: {
  1316                           ;main.c: 362: length = 1;
  1317  0007F6  0E01               	movlw	1
  1318  0007F8  0101               	movlb	1	; () banked
  1319  0007FA  6F3B               	movwf	main@length& (0+255),b
  1320                           
  1321                           ;main.c: 363: msgbuffer[0] = 0x3A;
  1322  0007FC  0E3A               	movlw	58
  1323  0007FE  D004               	goto	L3
  1324  000800                     l3393:
  1325                           
  1326                           ; BSR set to: 1
  1327                           ;main.c: 367: {
  1328                           ;main.c: 368: length = 1;
  1329  000800  0E01               	movlw	1
  1330  000802  0101               	movlb	1	; () banked
  1331  000804  6F3B               	movwf	main@length& (0+255),b
  1332                           
  1333                           ;main.c: 369: msgbuffer[0] = 0xA3;
  1334  000806  0EA3               	movlw	163
  1335  000808                     L3:
  1336  000808  0101               	movlb	1	; () banked
  1337  00080A  6F1B               	movwf	main@msgbuffer& (0+255),b
  1338                           
  1339                           ;main.c: 370: break;
  1340  00080C  D00B               	goto	l3399
  1341  00080E                     l3397:
  1342                           
  1343                           ; BSR set to: 1
  1344  00080E  0101               	movlb	1	; () banked
  1345  000810  5128               	movf	main@last_reg_recvd& (0+255),w,b
  1346                           
  1347                           ; Switch size 1, requested type "space"
  1348                           ; Number of cases is 3, Range of values is 168 to 170
  1349                           ; switch strategies available:
  1350                           ; Name         Instructions Cycles
  1351                           ; simple_byte           10     6 (average)
  1352                           ;	Chosen strategy is simple_byte
  1353  000812  0AA8               	xorlw	168	; case 168
  1354  000814  B4D8               	btfsc	status,2,c
  1355  000816  D7EF               	goto	l3391
  1356  000818  0A01               	xorlw	1	; case 169
  1357  00081A  B4D8               	btfsc	status,2,c
  1358  00081C  D7F1               	goto	l3393
  1359  00081E  0A03               	xorlw	3	; case 170
  1360  000820  B4D8               	btfsc	status,2,c
  1361  000822  D7DF               	goto	l3389
  1362  000824                     l3399:
  1363                           
  1364                           ; BSR set to: 1
  1365                           ;main.c: 373: start_i2c_slave_reply(length, msgbuffer);
  1366  000824  0101               	movlb	1	; () banked
  1367  000826  0E01               	movlw	high main@msgbuffer
  1368  000828  0100               	movlb	0	; () banked
  1369  00082A  6FD4               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1370  00082C  0101               	movlb	1	; () banked
  1371  00082E  0E1B               	movlw	low main@msgbuffer
  1372  000830  0100               	movlb	0	; () banked
  1373  000832  6FD3               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1374  000834  0101               	movlb	1	; () banked
  1375  000836  513B               	movf	main@length& (0+255),w,b
  1376  000838  EC85  F006         	call	_start_i2c_slave_reply
  1377                           
  1378                           ;main.c: 374: break;
  1379  00083C  D00E               	goto	l3405
  1380  00083E                     l3403:
  1381  00083E  0101               	movlb	1	; () banked
  1382  000840  513A               	movf	main@msgtype& (0+255),w,b
  1383                           
  1384                           ; Switch size 1, requested type "space"
  1385                           ; Number of cases is 4, Range of values is 10 to 42
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte           13     7 (average)
  1389                           ;	Chosen strategy is simple_byte
  1390  000842  0A0A               	xorlw	10	; case 10
  1391  000844  B4D8               	btfsc	status,2,c
  1392  000846  D77D               	goto	l3375
  1393  000848  0A22               	xorlw	34	; case 40
  1394  00084A  B4D8               	btfsc	status,2,c
  1395  00084C  D79C               	goto	l124
  1396  00084E  0A01               	xorlw	1	; case 41
  1397  000850  B4D8               	btfsc	status,2,c
  1398  000852  D7C4               	goto	l130
  1399  000854  0A03               	xorlw	3	; case 42
  1400  000856  B4D8               	btfsc	status,2,c
  1401  000858  D7DA               	goto	l3397
  1402  00085A                     l3405:
  1403                           
  1404                           ;main.c: 382: }
  1405                           ;main.c: 385: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1406  00085A  0101               	movlb	1	; () banked
  1407  00085C  0E01               	movlw	high main@msgtype
  1408  00085E  0101               	movlb	1	; () banked
  1409  000860  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1410  000862  0101               	movlb	1	; () banked
  1411  000864  0E3A               	movlw	low main@msgtype
  1412  000866  0101               	movlb	1	; () banked
  1413  000868  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1414  00086A  0101               	movlb	1	; () banked
  1415  00086C  0E01               	movlw	high main@msgbuffer
  1416  00086E  0101               	movlb	1	; () banked
  1417  000870  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1418  000872  0101               	movlb	1	; () banked
  1419  000874  0E1B               	movlw	low main@msgbuffer
  1420  000876  0101               	movlb	1	; () banked
  1421  000878  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1422  00087A  0E0A               	movlw	10
  1423  00087C  ECCE  F00C         	call	_ToMainLow_recvmsg
  1424  000880  0101               	movlb	1	; () banked
  1425  000882  6F3B               	movwf	main@length& (0+255),b
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;main.c: 386: if (length < 0) {
  1429  000884  0101               	movlb	1	; () banked
  1430  000886  BF3B               	btfsc	main@length& (0+255),7,b
  1431  000888  D741               	goto	l3367
  1432  00088A  D043               	goto	l3417
  1433  00088C                     l3411:
  1434                           
  1435                           ; BSR set to: 1
  1436                           ;main.c: 394: {
  1437                           ;main.c: 395: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1438  00088C  0101               	movlb	1	; () banked
  1439  00088E  0E01               	movlw	high main@t1thread_data
  1440  000890  0100               	movlb	0	; () banked
  1441  000892  6FD4               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1442  000894  0101               	movlb	1	; () banked
  1443  000896  0E3C               	movlw	low main@t1thread_data
  1444  000898  0100               	movlb	0	; () banked
  1445  00089A  6FD3               	movwf	timer1_lthread@tptr& (0+255),b
  1446  00089C  0101               	movlb	1	; () banked
  1447  00089E  0100               	movlb	0	; () banked
  1448  0008A0  C13A  F0D5         	movff	main@msgtype,timer1_lthread@msgtype
  1449  0008A4  0100               	movlb	0	; () banked
  1450  0008A6  6BD6               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1451  0008A8  0101               	movlb	1	; () banked
  1452  0008AA  513B               	movf	main@length& (0+255),w,b
  1453  0008AC  0100               	movlb	0	; () banked
  1454  0008AE  6FD7               	movwf	timer1_lthread@length& (0+255),b
  1455  0008B0  0100               	movlb	0	; () banked
  1456  0008B2  6BD8               	clrf	(timer1_lthread@length+1)& (0+255),b
  1457  0008B4  0100               	movlb	0	; () banked
  1458  0008B6  BFD7               	btfsc	timer1_lthread@length& (0+255),7,b
  1459  0008B8  07D8               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1460  0008BA  0101               	movlb	1	; () banked
  1461  0008BC  0E01               	movlw	high main@msgbuffer
  1462  0008BE  0100               	movlb	0	; () banked
  1463  0008C0  6FDA               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1464  0008C2  0101               	movlb	1	; () banked
  1465  0008C4  0E1B               	movlw	low main@msgbuffer
  1466  0008C6  0100               	movlb	0	; () banked
  1467  0008C8  6FD9               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1468  0008CA  EC7F  F007         	call	_timer1_lthread	;wreg free
  1469                           
  1470                           ;main.c: 396: break;
  1471  0008CE  D71E               	goto	l3367
  1472  0008D0                     l3413:
  1473                           
  1474                           ;main.c: 399: case 31:
  1475                           ;main.c: 400: case 32:
  1476                           ;main.c: 401: {
  1477                           ;main.c: 402: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1478  0008D0  0101               	movlb	1	; () banked
  1479  0008D2  0E01               	movlw	high main@uthread_data
  1480  0008D4  0101               	movlb	1	; () banked
  1481  0008D6  6F0D               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1482  0008D8  0101               	movlb	1	; () banked
  1483  0008DA  0E29               	movlw	low main@uthread_data
  1484  0008DC  0101               	movlb	1	; () banked
  1485  0008DE  6F0C               	movwf	uart_lthread@uptr& (0+255),b
  1486  0008E0  0101               	movlb	1	; () banked
  1487  0008E2  C13A  F10E         	movff	main@msgtype,uart_lthread@msgtype
  1488  0008E6  0101               	movlb	1	; () banked
  1489  0008E8  6B0F               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1490  0008EA  0101               	movlb	1	; () banked
  1491  0008EC  513B               	movf	main@length& (0+255),w,b
  1492  0008EE  0101               	movlb	1	; () banked
  1493  0008F0  6F10               	movwf	uart_lthread@length& (0+255),b
  1494  0008F2  0101               	movlb	1	; () banked
  1495  0008F4  6B11               	clrf	(uart_lthread@length+1)& (0+255),b
  1496  0008F6  0101               	movlb	1	; () banked
  1497  0008F8  BF10               	btfsc	uart_lthread@length& (0+255),7,b
  1498  0008FA  0711               	decf	(uart_lthread@length+1)& (0+255),f,b
  1499  0008FC  0101               	movlb	1	; () banked
  1500  0008FE  0E01               	movlw	high main@msgbuffer
  1501  000900  0101               	movlb	1	; () banked
  1502  000902  6F13               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1503  000904  0101               	movlb	1	; () banked
  1504  000906  0E1B               	movlw	low main@msgbuffer
  1505  000908  0101               	movlb	1	; () banked
  1506  00090A  6F12               	movwf	uart_lthread@msgbuffer& (0+255),b
  1507  00090C  EC1E  F009         	call	_uart_lthread	;wreg free
  1508                           
  1509                           ;main.c: 403: break;
  1510  000910  D6FD               	goto	l3367
  1511  000912                     l3417:
  1512  000912  0101               	movlb	1	; () banked
  1513  000914  513A               	movf	main@msgtype& (0+255),w,b
  1514                           
  1515                           ; Switch size 1, requested type "space"
  1516                           ; Number of cases is 4, Range of values is 11 to 32
  1517                           ; switch strategies available:
  1518                           ; Name         Instructions Cycles
  1519                           ; simple_byte           13     7 (average)
  1520                           ;	Chosen strategy is simple_byte
  1521  000916  0A0B               	xorlw	11	; case 11
  1522  000918  B4D8               	btfsc	status,2,c
  1523  00091A  D7B8               	goto	l3411
  1524  00091C  0A15               	xorlw	21	; case 30
  1525  00091E  B4D8               	btfsc	status,2,c
  1526  000920  D7D7               	goto	l3413
  1527  000922  0A01               	xorlw	1	; case 31
  1528  000924  B4D8               	btfsc	status,2,c
  1529  000926  D7D4               	goto	l3413
  1530  000928  0A3F               	xorlw	63	; case 32
  1531  00092A  B4D8               	btfsc	status,2,c
  1532  00092C  D7D1               	goto	l3413
  1533  00092E  D6EE               	goto	l3367
  1534  000930                     __end_of_main:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _uart_lthread *****************
  1545 ;; Defined at:
  1546 ;;		line 12 in file "src/uart_thread.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  uptr            2   12[BANK1 ] PTR struct __uart_thread
  1549 ;;		 -> main@uthread_data(10), 
  1550 ;;  msgtype         2   14[BANK1 ] int 
  1551 ;;  length          2   16[BANK1 ] int 
  1552 ;;  msgbuffer       2   18[BANK1 ] PTR unsigned char 
  1553 ;;		 -> main@msgbuffer(11), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  index           2   21[BANK1 ] int 
  1556 ;;  status          1   20[BANK1 ] char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   12[BANK1 ] int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1566 ;;      Params:         0       0       8       0       0
  1567 ;;      Locals:         0       0       3       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         0       0      11       0       0
  1570 ;;Total ram usage:       11 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:   13
  1573 ;; This function calls:
  1574 ;;		_FromMainLow_sendmsg
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text1
  1581  00123C                     __ptext1:
  1582                           	opt stack 0
  1583  00123C                     _uart_lthread:
  1584                           	opt stack 16
  1585                           
  1586                           ;uart_thread.c: 13: if (msgtype == 30) {
  1587                           
  1588                           ; BSR set to: 1
  1589                           ;incstack = 0
  1590  00123C  0101               	movlb	1	; () banked
  1591  00123E  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1592  001240  0A1E               	xorlw	30
  1593  001242  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1594  001244  B4D8               	btfsc	status,2,c
  1595  001246  0012               	return	
  1596                           
  1597                           ; BSR set to: 1
  1598                           ;uart_thread.c: 16: else if(msgtype == 31){
  1599                           
  1600                           ; BSR set to: 1
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;uart_thread.c: 15: }
  1604  001248  0101               	movlb	1	; () banked
  1605  00124A  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1606  00124C  0A1F               	xorlw	31
  1607  00124E  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1608  001250  A4D8               	btfss	status,2,c
  1609  001252  D041               	goto	l3299
  1610                           
  1611                           ; BSR set to: 1
  1612                           ;uart_thread.c: 18: int index = 0;
  1613  001254  0E00               	movlw	0
  1614  001256  0101               	movlb	1	; () banked
  1615  001258  6F16               	movwf	(uart_lthread@index+1)& (0+255),b
  1616  00125A  0E00               	movlw	0
  1617  00125C  0101               	movlb	1	; () banked
  1618  00125E  6F15               	movwf	uart_lthread@index& (0+255),b
  1619                           
  1620                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1621  001260  0E00               	movlw	0
  1622  001262  0101               	movlb	1	; () banked
  1623  001264  6F16               	movwf	(uart_lthread@index+1)& (0+255),b
  1624  001266  0E00               	movlw	0
  1625  001268  0101               	movlb	1	; () banked
  1626  00126A  6F15               	movwf	uart_lthread@index& (0+255),b
  1627  00126C                     
  1628                           ; BSR set to: 1
  1629  00126C  0101               	movlb	1	; () banked
  1630  00126E  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1631  001270  0A80               	xorlw	128
  1632  001272  0F80               	addlw	-128
  1633  001274  0E0A               	movlw	10
  1634  001276  B4D8               	btfsc	status,2,c
  1635  001278  5D15               	subwf	uart_lthread@index& (0+255),w,b
  1636  00127A  B0D8               	btfsc	status,0,c
  1637  00127C  D01A               	goto	l3295
  1638                           
  1639                           ; BSR set to: 1
  1640                           
  1641                           ; BSR set to: 1
  1642                           
  1643                           ; BSR set to: 1
  1644  00127E  0101               	movlb	1	; () banked
  1645  001280  5115               	movf	uart_lthread@index& (0+255),w,b
  1646  001282  0101               	movlb	1	; () banked
  1647  001284  2512               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1648  001286  6ED9               	movwf	fsr2l,c
  1649  001288  0101               	movlb	1	; () banked
  1650  00128A  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1651  00128C  0101               	movlb	1	; () banked
  1652  00128E  2113               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1653  001290  6EDA               	movwf	fsr2h,c
  1654  001292  0101               	movlb	1	; () banked
  1655  001294  5115               	movf	uart_lthread@index& (0+255),w,b
  1656  001296  0101               	movlb	1	; () banked
  1657  001298  250C               	addwf	uart_lthread@uptr& (0+255),w,b
  1658  00129A  6EE1               	movwf	fsr1l,c
  1659  00129C  0101               	movlb	1	; () banked
  1660  00129E  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1661  0012A0  0101               	movlb	1	; () banked
  1662  0012A2  210D               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1663  0012A4  6EE2               	movwf	fsr1h,c
  1664  0012A6  CFDF FFE7          	movff	indf2,indf1
  1665                           
  1666                           ; BSR set to: 1
  1667  0012AA  0101               	movlb	1	; () banked
  1668  0012AC  4B15               	infsnz	uart_lthread@index& (0+255),f,b
  1669  0012AE  2B16               	incf	(uart_lthread@index+1)& (0+255),f,b
  1670  0012B0  D7DD               	goto	L4
  1671  0012B2                     l3295:
  1672                           
  1673                           ; BSR set to: 1
  1674                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1675  0012B2  C10E  F0DE         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1676  0012B6  0101               	movlb	1	; () banked
  1677  0012B8  0100               	movlb	0	; () banked
  1678  0012BA  C10D  F0E0         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1679  0012BE  0101               	movlb	1	; () banked
  1680  0012C0  0100               	movlb	0	; () banked
  1681  0012C2  C10C  F0DF         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1682  0012C6  0101               	movlb	1	; () banked
  1683  0012C8  5110               	movf	uart_lthread@length& (0+255),w,b
  1684  0012CA  EC04  F00D         	call	_FromMainLow_sendmsg
  1685  0012CE  0101               	movlb	1	; () banked
  1686  0012D0  6F14               	movwf	uart_lthread@status& (0+255),b
  1687                           
  1688                           ; BSR set to: 1
  1689                           ;uart_thread.c: 25: }
  1690                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1691                           
  1692                           ; BSR set to: 1
  1693  0012D2  889D               	bsf	3997,4,c	;volatile
  1694                           
  1695                           ;uart_thread.c: 29: }
  1696  0012D4  0012               	return	
  1697  0012D6                     l3299:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;uart_thread.c: 30: else if(msgtype == 32){
  1701  0012D6  0101               	movlb	1	; () banked
  1702  0012D8  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1703  0012DA  0A20               	xorlw	32
  1704  0012DC  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1705  0012DE  A4D8               	btfss	status,2,c
  1706  0012E0  0012               	return	
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1710  0012E2  0101               	movlb	1	; () banked
  1711  0012E4  5110               	movf	uart_lthread@length& (0+255),w,b
  1712  0012E6  0101               	movlb	1	; () banked
  1713  0012E8  2512               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1714  0012EA  6ED9               	movwf	fsr2l,c
  1715  0012EC  0101               	movlb	1	; () banked
  1716  0012EE  5111               	movf	(uart_lthread@length+1)& (0+255),w,b
  1717  0012F0  0101               	movlb	1	; () banked
  1718  0012F2  2113               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1719  0012F4  6EDA               	movwf	fsr2h,c
  1720  0012F6  0E00               	movlw	0
  1721  0012F8  6EDF               	movwf	indf2,c
  1722  0012FA  0012               	return	
  1723  0012FC                     __end_of_uart_lthread:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           indf1	equ	0xFE7
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _FromMainLow_sendmsg *****************
  1740 ;; Defined at:
  1741 ;;		line 150 in file "src/messages.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  length          1    wreg     unsigned char 
  1744 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1745 ;;  data            2   41[BANK0 ] PTR void 
  1746 ;;		 -> main@uthread_data(10), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  length          1   11[BANK1 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      char 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1758 ;;      Params:         0       3       0       0       0
  1759 ;;      Locals:         0       0       1       0       0
  1760 ;;      Temps:          0       0       0       0       0
  1761 ;;      Totals:         0       3       1       0       0
  1762 ;;Total ram usage:        4 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:   12
  1765 ;; This function calls:
  1766 ;;		_send_msg
  1767 ;; This function is called by:
  1768 ;;		_uart_lthread
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text2
  1773  001A08                     __ptext2:
  1774                           	opt stack 0
  1775  001A08                     _FromMainLow_sendmsg:
  1776                           	opt stack 16
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;incstack = 0
  1780                           ;FromMainLow_sendmsg@length stored from wreg
  1781  001A08  0101               	movlb	1	; () banked
  1782  001A0A  6F0B               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1786  001A0C  0101               	movlb	1	; () banked
  1787  001A0E  0E01               	movlw	high _FromMainLow_MQ
  1788  001A10  0101               	movlb	1	; () banked
  1789  001A12  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  1790  001A14  0101               	movlb	1	; () banked
  1791  001A16  0E80               	movlw	low _FromMainLow_MQ
  1792  001A18  0101               	movlb	1	; () banked
  1793  001A1A  6F00               	movwf	send_msg@qptr& (0+255),b
  1794  001A1C  C10B  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  1795  001A20  C0DE  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1796  001A24  0100               	movlb	0	; () banked
  1797  001A26  0101               	movlb	1	; () banked
  1798  001A28  C0E0  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1799  001A2C  0100               	movlb	0	; () banked
  1800  001A2E  0101               	movlb	1	; () banked
  1801  001A30  C0DF  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  1802  001A34  EC07  F007         	call	_send_msg	;wreg free
  1803  001A38  0012               	return	
  1804  001A3A                     __end_of_FromMainLow_sendmsg:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           indf1	equ	0xFE7
  1813                           fsr1h	equ	0xFE2
  1814                           fsr1l	equ	0xFE1
  1815                           indf2	equ	0xFDF
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _timer1_lthread *****************
  1821 ;; Defined at:
  1822 ;;		line 22 in file "src/timer1_thread.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  1825 ;;		 -> main@t1thread_data(40), 
  1826 ;;  msgtype         2   31[BANK0 ] int 
  1827 ;;  length          2   33[BANK0 ] int 
  1828 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  1829 ;;		 -> main@msgbuffer(11), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  index           1   41[BANK0 ] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2   29[BANK0 ] int 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1841 ;;      Params:         0       8       0       0       0
  1842 ;;      Locals:         0       1       0       0       0
  1843 ;;      Temps:          0       4       0       0       0
  1844 ;;      Totals:         0      13       0       0       0
  1845 ;;Total ram usage:       13 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:   10
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text3
  1856  000EFE                     __ptext3:
  1857                           	opt stack 0
  1858  000EFE                     _timer1_lthread:
  1859                           	opt stack 19
  1860                           
  1861                           ;timer1_thread.c: 23: tptr->msgcount++;
  1862                           
  1863                           ;incstack = 0
  1864  000EFE  C0D3  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1865  000F02  C0D4  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1866  000F06  2ADE               	incf	postinc2,f,c
  1867  000F08  0E00               	movlw	0
  1868  000F0A  22DD               	addwfc	postdec2,f,c
  1869                           
  1870                           ;timer1_thread.c: 24: char index = msgbuffer[0] + (msgbuffer[1]<<1) + (tptr->prevPos[0]<
      +                          <3) + (tptr->prevPos[1]<<2);
  1871  000F0C  C0D9  FFD9         	movff	timer1_lthread@msgbuffer,fsr2l
  1872  000F10  C0DA  FFDA         	movff	timer1_lthread@msgbuffer+1,fsr2h
  1873  000F14  50DF               	movf	indf2,w,c
  1874  000F16  0100               	movlb	0	; () banked
  1875  000F18  6FDB               	movwf	??_timer1_lthread& (0+255),b
  1876  000F1A  0100               	movlb	0	; () banked
  1877  000F1C  EE20 F025          	lfsr	2,37
  1878  000F20  0100               	movlb	0	; () banked
  1879  000F22  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1880  000F24  26D9               	addwf	fsr2l,f,c
  1881  000F26  0100               	movlb	0	; () banked
  1882  000F28  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1883  000F2A  22DA               	addwfc	fsr2h,f,c
  1884  000F2C  50DF               	movf	indf2,w,c
  1885  000F2E  0100               	movlb	0	; () banked
  1886  000F30  6FDC               	movwf	(??_timer1_lthread+1)& (0+255),b
  1887  000F32  0100               	movlb	0	; () banked
  1888  000F34  90D8               	bcf	status,0,c
  1889  000F36  37DC               	rlcf	(??_timer1_lthread+1)& (0+255),f,b
  1890  000F38  0100               	movlb	0	; () banked
  1891  000F3A  90D8               	bcf	status,0,c
  1892  000F3C  37DC               	rlcf	(??_timer1_lthread+1)& (0+255),f,b
  1893  000F3E  0100               	movlb	0	; () banked
  1894  000F40  EE20 F024          	lfsr	2,36
  1895  000F44  0100               	movlb	0	; () banked
  1896  000F46  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1897  000F48  26D9               	addwf	fsr2l,f,c
  1898  000F4A  0100               	movlb	0	; () banked
  1899  000F4C  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1900  000F4E  22DA               	addwfc	fsr2h,f,c
  1901  000F50  50DF               	movf	indf2,w,c
  1902  000F52  0100               	movlb	0	; () banked
  1903  000F54  6FDD               	movwf	(??_timer1_lthread+2)& (0+255),b
  1904  000F56  0100               	movlb	0	; () banked
  1905  000F58  90D8               	bcf	status,0,c
  1906  000F5A  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1907  000F5C  0100               	movlb	0	; () banked
  1908  000F5E  90D8               	bcf	status,0,c
  1909  000F60  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1910  000F62  0100               	movlb	0	; () banked
  1911  000F64  90D8               	bcf	status,0,c
  1912  000F66  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1913  000F68  0100               	movlb	0	; () banked
  1914  000F6A  EE20 F001          	lfsr	2,1
  1915  000F6E  0100               	movlb	0	; () banked
  1916  000F70  51D9               	movf	timer1_lthread@msgbuffer& (0+255),w,b
  1917  000F72  26D9               	addwf	fsr2l,f,c
  1918  000F74  0100               	movlb	0	; () banked
  1919  000F76  51DA               	movf	(timer1_lthread@msgbuffer+1)& (0+255),w,b
  1920  000F78  22DA               	addwfc	fsr2h,f,c
  1921  000F7A  50DF               	movf	indf2,w,c
  1922  000F7C  0100               	movlb	0	; () banked
  1923  000F7E  6FDE               	movwf	(??_timer1_lthread+3)& (0+255),b
  1924  000F80  0100               	movlb	0	; () banked
  1925  000F82  90D8               	bcf	status,0,c
  1926  000F84  35DE               	rlcf	(??_timer1_lthread+3)& (0+255),w,b
  1927  000F86  0100               	movlb	0	; () banked
  1928  000F88  25DD               	addwf	(??_timer1_lthread+2)& (0+255),w,b
  1929  000F8A  0100               	movlb	0	; () banked
  1930  000F8C  25DC               	addwf	(??_timer1_lthread+1)& (0+255),w,b
  1931  000F8E  0100               	movlb	0	; () banked
  1932  000F90  25DB               	addwf	??_timer1_lthread& (0+255),w,b
  1933  000F92  0100               	movlb	0	; () banked
  1934  000F94  6FDF               	movwf	timer1_lthread@index& (0+255),b
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;timer1_thread.c: 26: tptr->prevPos[0] = msgbuffer[0];
  1938  000F96  C0D9  FFD9         	movff	timer1_lthread@msgbuffer,fsr2l
  1939  000F9A  C0DA  FFDA         	movff	timer1_lthread@msgbuffer+1,fsr2h
  1940  000F9E  0100               	movlb	0	; () banked
  1941  000FA0  EE10 F024          	lfsr	1,36
  1942  000FA4  0100               	movlb	0	; () banked
  1943  000FA6  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1944  000FA8  26E1               	addwf	fsr1l,f,c
  1945  000FAA  0100               	movlb	0	; () banked
  1946  000FAC  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1947  000FAE  22E2               	addwfc	fsr1h,f,c
  1948  000FB0  CFDF FFE7          	movff	indf2,indf1
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;timer1_thread.c: 27: tptr->prevPos[1] = msgbuffer[1];
  1952  000FB4  0100               	movlb	0	; () banked
  1953  000FB6  EE20 F001          	lfsr	2,1
  1954  000FBA  0100               	movlb	0	; () banked
  1955  000FBC  51D9               	movf	timer1_lthread@msgbuffer& (0+255),w,b
  1956  000FBE  26D9               	addwf	fsr2l,f,c
  1957  000FC0  0100               	movlb	0	; () banked
  1958  000FC2  51DA               	movf	(timer1_lthread@msgbuffer+1)& (0+255),w,b
  1959  000FC4  22DA               	addwfc	fsr2h,f,c
  1960  000FC6  0100               	movlb	0	; () banked
  1961  000FC8  EE10 F025          	lfsr	1,37
  1962  000FCC  0100               	movlb	0	; () banked
  1963  000FCE  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1964  000FD0  26E1               	addwf	fsr1l,f,c
  1965  000FD2  0100               	movlb	0	; () banked
  1966  000FD4  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1967  000FD6  22E2               	addwfc	fsr1h,f,c
  1968  000FD8  CFDF FFE7          	movff	indf2,indf1
  1969                           
  1970                           ; BSR set to: 0
  1971  000FDC  0012               	return	
  1972  000FDE                     __end_of_timer1_lthread:
  1973                           	opt stack 0
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           indf1	equ	0xFE7
  1981                           fsr1h	equ	0xFE2
  1982                           fsr1l	equ	0xFE1
  1983                           indf2	equ	0xFDF
  1984                           postinc2	equ	0xFDE
  1985                           postdec2	equ	0xFDD
  1986                           fsr2h	equ	0xFDA
  1987                           fsr2l	equ	0xFD9
  1988                           status	equ	0xFD8
  1989                           
  1990 ;; *************** function _timer0_lthread *****************
  1991 ;; Defined at:
  1992 ;;		line 9 in file "src/timer0_thread.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  1995 ;;		 -> main@t0thread_data(2), 
  1996 ;;  msgtype         2   31[BANK0 ] int 
  1997 ;;  length          2   33[BANK0 ] int 
  1998 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  1999 ;;		 -> main@msgbuffer(11), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  msgval          2   37[BANK0 ] PTR unsigned int 
  2002 ;;		 -> main@msgbuffer(11), 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2   29[BANK0 ] int 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2012 ;;      Params:         0       8       0       0       0
  2013 ;;      Locals:         0       2       0       0       0
  2014 ;;      Temps:          0       0       0       0       0
  2015 ;;      Totals:         0      10       0       0       0
  2016 ;;Total ram usage:       10 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:   10
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text4
  2027  001C9E                     __ptext4:
  2028                           	opt stack 0
  2029  001C9E                     _timer0_lthread:
  2030                           	opt stack 19
  2031                           
  2032                           ;timer0_thread.c: 10: unsigned int *msgval;
  2033                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;incstack = 0
  2037  001C9E  0100               	movlb	0	; () banked
  2038  001CA0  C0DA  F0DC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2039  001CA4  0100               	movlb	0	; () banked
  2040  001CA6  C0D9  F0DB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2041                           
  2042                           ; BSR set to: 0
  2043  001CAA  0012               	return	
  2044  001CAC                     __end_of_timer0_lthread:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           indf1	equ	0xFE7
  2053                           fsr1h	equ	0xFE2
  2054                           fsr1l	equ	0xFE1
  2055                           indf2	equ	0xFDF
  2056                           postinc2	equ	0xFDE
  2057                           postdec2	equ	0xFDD
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _start_i2c_slave_reply *****************
  2063 ;; Defined at:
  2064 ;;		line 53 in file "src/my_i2c.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  length          1    wreg     unsigned char 
  2067 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2068 ;;		 -> main@msgbuffer(11), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  length          1   33[BANK0 ] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2080 ;;      Params:         0       2       0       0       0
  2081 ;;      Locals:         0       1       0       0       0
  2082 ;;      Temps:          0       2       0       0       0
  2083 ;;      Totals:         0       5       0       0       0
  2084 ;;Total ram usage:        5 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:   10
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text5
  2095  000D0A                     __ptext5:
  2096                           	opt stack 0
  2097  000D0A                     _start_i2c_slave_reply:
  2098                           	opt stack 19
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;incstack = 0
  2102                           ;start_i2c_slave_reply@length stored from wreg
  2103  000D0A  0100               	movlb	0	; () banked
  2104  000D0C  6FD7               	movwf	start_i2c_slave_reply@length& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2108  000D0E  0100               	movlb	0	; () banked
  2109  000D10  EE20 F019          	lfsr	2,25
  2110  000D14  0100               	movlb	0	; () banked
  2111  000D16  51E1               	movf	_ic_ptr& (0+255),w,b
  2112  000D18  26D9               	addwf	fsr2l,f,c
  2113  000D1A  0100               	movlb	0	; () banked
  2114  000D1C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2115  000D1E  22DA               	addwfc	fsr2h,f,c
  2116  000D20  0E00               	movlw	0
  2117  000D22  6EDF               	movwf	indf2,c
  2118  000D24  D03E               	goto	l2813
  2119  000D26                     l2809:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2123  000D26  0100               	movlb	0	; () banked
  2124  000D28  EE20 F019          	lfsr	2,25
  2125  000D2C  0100               	movlb	0	; () banked
  2126  000D2E  51E1               	movf	_ic_ptr& (0+255),w,b
  2127  000D30  26D9               	addwf	fsr2l,f,c
  2128  000D32  0100               	movlb	0	; () banked
  2129  000D34  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2130  000D36  22DA               	addwfc	fsr2h,f,c
  2131  000D38  50DF               	movf	indf2,w,c
  2132  000D3A  0100               	movlb	0	; () banked
  2133  000D3C  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2134  000D3E  0100               	movlb	0	; () banked
  2135  000D40  51D5               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2136  000D42  0D01               	mullw	1
  2137  000D44  50F3               	movf	prodl,w,c
  2138  000D46  0100               	movlb	0	; () banked
  2139  000D48  25D3               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2140  000D4A  6ED9               	movwf	fsr2l,c
  2141  000D4C  50F4               	movf	prodh,w,c
  2142  000D4E  0100               	movlb	0	; () banked
  2143  000D50  21D4               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2144  000D52  6EDA               	movwf	fsr2h,c
  2145  000D54  0100               	movlb	0	; () banked
  2146  000D56  EE10 F019          	lfsr	1,25
  2147  000D5A  0100               	movlb	0	; () banked
  2148  000D5C  51E1               	movf	_ic_ptr& (0+255),w,b
  2149  000D5E  26E1               	addwf	fsr1l,f,c
  2150  000D60  0100               	movlb	0	; () banked
  2151  000D62  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2152  000D64  22E2               	addwfc	fsr1h,f,c
  2153  000D66  50E7               	movf	indf1,w,c
  2154  000D68  0100               	movlb	0	; () banked
  2155  000D6A  6FD6               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2156  000D6C  0100               	movlb	0	; () banked
  2157  000D6E  51D6               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2158  000D70  0D01               	mullw	1
  2159  000D72  0E0F               	movlw	15
  2160  000D74  26F3               	addwf	prodl,f,c
  2161  000D76  0E00               	movlw	0
  2162  000D78  22F4               	addwfc	prodh,f,c
  2163  000D7A  50F3               	movf	prodl,w,c
  2164  000D7C  0100               	movlb	0	; () banked
  2165  000D7E  25E1               	addwf	_ic_ptr& (0+255),w,b
  2166  000D80  6EE1               	movwf	fsr1l,c
  2167  000D82  50F4               	movf	prodh,w,c
  2168  000D84  0100               	movlb	0	; () banked
  2169  000D86  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2170  000D88  6EE2               	movwf	fsr1h,c
  2171  000D8A  CFDF FFE7          	movff	indf2,indf1
  2172                           
  2173                           ; BSR set to: 0
  2174  000D8E  0100               	movlb	0	; () banked
  2175  000D90  EE20 F019          	lfsr	2,25
  2176  000D94  0100               	movlb	0	; () banked
  2177  000D96  51E1               	movf	_ic_ptr& (0+255),w,b
  2178  000D98  26D9               	addwf	fsr2l,f,c
  2179  000D9A  0100               	movlb	0	; () banked
  2180  000D9C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2181  000D9E  22DA               	addwfc	fsr2h,f,c
  2182  000DA0  2ADF               	incf	indf2,f,c
  2183  000DA2                     l2813:
  2184                           
  2185                           ; BSR set to: 0
  2186  000DA2  0100               	movlb	0	; () banked
  2187  000DA4  EE20 F019          	lfsr	2,25
  2188  000DA8  0100               	movlb	0	; () banked
  2189  000DAA  51E1               	movf	_ic_ptr& (0+255),w,b
  2190  000DAC  26D9               	addwf	fsr2l,f,c
  2191  000DAE  0100               	movlb	0	; () banked
  2192  000DB0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2193  000DB2  22DA               	addwfc	fsr2h,f,c
  2194  000DB4  50DF               	movf	indf2,w,c
  2195  000DB6  0100               	movlb	0	; () banked
  2196  000DB8  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2197  000DBA  0100               	movlb	0	; () banked
  2198  000DBC  51D7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2199  000DBE  0100               	movlb	0	; () banked
  2200  000DC0  5DD5               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2201  000DC2  A0D8               	btfss	status,0,c
  2202  000DC4  D7B0               	goto	l2809
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;my_i2c.c: 57: }
  2206                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2207                           
  2208                           ; BSR set to: 0
  2209  000DC6  0100               	movlb	0	; () banked
  2210  000DC8  EE20 F019          	lfsr	2,25
  2211  000DCC  0100               	movlb	0	; () banked
  2212  000DCE  51E1               	movf	_ic_ptr& (0+255),w,b
  2213  000DD0  26D9               	addwf	fsr2l,f,c
  2214  000DD2  0100               	movlb	0	; () banked
  2215  000DD4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2216  000DD6  22DA               	addwfc	fsr2h,f,c
  2217  000DD8  0100               	movlb	0	; () banked
  2218  000DDA  C0D7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2219                           
  2220                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2221  000DDE  0100               	movlb	0	; () banked
  2222  000DE0  EE20 F01A          	lfsr	2,26
  2223  000DE4  0100               	movlb	0	; () banked
  2224  000DE6  51E1               	movf	_ic_ptr& (0+255),w,b
  2225  000DE8  26D9               	addwf	fsr2l,f,c
  2226  000DEA  0100               	movlb	0	; () banked
  2227  000DEC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2228  000DEE  22DA               	addwfc	fsr2h,f,c
  2229  000DF0  0E01               	movlw	1
  2230  000DF2  6EDF               	movwf	indf2,c
  2231                           
  2232                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2233  000DF4  0100               	movlb	0	; () banked
  2234  000DF6  EE20 F00F          	lfsr	2,15
  2235  000DFA  0100               	movlb	0	; () banked
  2236  000DFC  51E1               	movf	_ic_ptr& (0+255),w,b
  2237  000DFE  26D9               	addwf	fsr2l,f,c
  2238  000E00  0100               	movlb	0	; () banked
  2239  000E02  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2240  000E04  22DA               	addwfc	fsr2h,f,c
  2241  000E06  50DF               	movf	indf2,w,c
  2242  000E08  6EC9               	movwf	4041,c	;volatile
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2246  000E0A  88C6               	bsf	4038,4,c	;volatile
  2247                           
  2248                           ; BSR set to: 0
  2249  000E0C  0012               	return	
  2250  000E0E                     __end_of_start_i2c_slave_reply:
  2251                           	opt stack 0
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           prodh	equ	0xFF4
  2257                           prodl	equ	0xFF3
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           indf1	equ	0xFE7
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           postdec2	equ	0xFDD
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _sendUARTarr *****************
  2271 ;; Defined at:
  2272 ;;		line 85 in file "src/my_uart.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  length          1    wreg     unsigned char 
  2275 ;;  data            2   12[BANK1 ] PTR unsigned char 
  2276 ;;		 -> main@ctrl(2), main@test(2), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  length          1   15[BANK1 ] unsigned char 
  2279 ;;  retval          1   14[BANK1 ] char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      enum E4333
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2289 ;;      Params:         0       0       2       0       0
  2290 ;;      Locals:         0       0       2       0       0
  2291 ;;      Temps:          0       0       0       0       0
  2292 ;;      Totals:         0       0       4       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:   13
  2296 ;; This function calls:
  2297 ;;		_ToMainLow_sendmsg
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text6
  2304  001A3A                     __ptext6:
  2305                           	opt stack 0
  2306  001A3A                     _sendUARTarr:
  2307                           	opt stack 16
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;incstack = 0
  2311                           ;sendUARTarr@length stored from wreg
  2312  001A3A  0101               	movlb	1	; () banked
  2313  001A3C  6F0F               	movwf	sendUARTarr@length& (0+255),b
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;my_uart.c: 86: if(length > 10){
  2317  001A3E  0E0A               	movlw	10
  2318  001A40  0101               	movlb	1	; () banked
  2319  001A42  650F               	cpfsgt	sendUARTarr@length& (0+255),b
  2320  001A44  D001               	goto	l3263
  2321  001A46  0012               	return	
  2322  001A48                     l3263:
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;my_uart.c: 89: }
  2326                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2327  001A48  0E1F               	movlw	31
  2328  001A4A  0100               	movlb	0	; () banked
  2329  001A4C  6FDE               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2330  001A4E  0101               	movlb	1	; () banked
  2331  001A50  0100               	movlb	0	; () banked
  2332  001A52  C10D  F0E0         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  2333  001A56  0101               	movlb	1	; () banked
  2334  001A58  0100               	movlb	0	; () banked
  2335  001A5A  C10C  F0DF         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  2336  001A5E  0101               	movlb	1	; () banked
  2337  001A60  510F               	movf	sendUARTarr@length& (0+255),w,b
  2338  001A62  EC36  F00D         	call	_ToMainLow_sendmsg
  2339  001A66  0101               	movlb	1	; () banked
  2340  001A68  6F0E               	movwf	sendUARTarr@retval& (0+255),b
  2341  001A6A  0012               	return	
  2342  001A6C                     __end_of_sendUARTarr:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           prodh	equ	0xFF4
  2349                           prodl	equ	0xFF3
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           indf1	equ	0xFE7
  2353                           fsr1h	equ	0xFE2
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           postinc2	equ	0xFDE
  2357                           postdec2	equ	0xFDD
  2358                           fsr2h	equ	0xFDA
  2359                           fsr2l	equ	0xFD9
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function _ToMainLow_sendmsg *****************
  2363 ;; Defined at:
  2364 ;;		line 103 in file "src/messages.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  length          1    wreg     unsigned char 
  2367 ;;  msgtype         1   40[BANK0 ] unsigned char 
  2368 ;;  data            2   41[BANK0 ] PTR void 
  2369 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), main@ctrl(2), 
  2370 ;;		 -> main@test(2), main@uc(5), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  length          1   11[BANK1 ] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      char 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2382 ;;      Params:         0       3       0       0       0
  2383 ;;      Locals:         0       0       1       0       0
  2384 ;;      Temps:          0       0       0       0       0
  2385 ;;      Totals:         0       3       1       0       0
  2386 ;;Total ram usage:        4 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:   12
  2389 ;; This function calls:
  2390 ;;		_send_msg
  2391 ;; This function is called by:
  2392 ;;		_sendUARTarr
  2393 ;;		_sendUARTbyte
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text7
  2398  001A6C                     __ptext7:
  2399                           	opt stack 0
  2400  001A6C                     _ToMainLow_sendmsg:
  2401                           	opt stack 16
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;incstack = 0
  2405                           ;ToMainLow_sendmsg@length stored from wreg
  2406  001A6C  0101               	movlb	1	; () banked
  2407  001A6E  6F0B               	movwf	ToMainLow_sendmsg@length& (0+255),b
  2408                           
  2409                           ; BSR set to: 1
  2410                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2411  001A70  0100               	movlb	0	; () banked
  2412  001A72  0E00               	movlw	high _ToMainLow_MQ
  2413  001A74  0101               	movlb	1	; () banked
  2414  001A76  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2415  001A78  0100               	movlb	0	; () banked
  2416  001A7A  0E80               	movlw	low _ToMainLow_MQ
  2417  001A7C  0101               	movlb	1	; () banked
  2418  001A7E  6F00               	movwf	send_msg@qptr& (0+255),b
  2419  001A80  C10B  F102         	movff	ToMainLow_sendmsg@length,send_msg@length
  2420  001A84  C0DE  F103         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2421  001A88  0100               	movlb	0	; () banked
  2422  001A8A  0101               	movlb	1	; () banked
  2423  001A8C  C0E0  F105         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2424  001A90  0100               	movlb	0	; () banked
  2425  001A92  0101               	movlb	1	; () banked
  2426  001A94  C0DF  F104         	movff	ToMainLow_sendmsg@data,send_msg@data
  2427  001A98  EC07  F007         	call	_send_msg	;wreg free
  2428  001A9C  0012               	return	
  2429  001A9E                     __end_of_ToMainLow_sendmsg:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           postinc0	equ	0xFEE
  2438                           wreg	equ	0xFE8
  2439                           indf1	equ	0xFE7
  2440                           fsr1h	equ	0xFE2
  2441                           fsr1l	equ	0xFE1
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           postdec2	equ	0xFDD
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _send_msg *****************
  2450 ;; Defined at:
  2451 ;;		line 24 in file "src/messages.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2454 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2455 ;;  length          1    2[BANK1 ] unsigned char 
  2456 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2457 ;;  data            2    4[BANK1 ] PTR void 
  2458 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  2459 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  2460 ;;		 -> main@uc(5), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2463 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2464 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2465 ;;  tlength         2    6[BANK1 ] unsigned int 
  2466 ;;  slot            1    8[BANK1 ] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      char 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2476 ;;      Params:         0       0       6       0       0
  2477 ;;      Locals:         0       0       5       0       0
  2478 ;;      Temps:          0       1       0       0       0
  2479 ;;      Totals:         0       1      11       0       0
  2480 ;;Total ram usage:       12 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:   11
  2483 ;; This function calls:
  2484 ;;		_memcpy
  2485 ;; This function is called by:
  2486 ;;		_ToMainLow_sendmsg
  2487 ;;		_FromMainLow_sendmsg
  2488 ;;		_FromMainHigh_sendmsg
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text8
  2493  000E0E                     __ptext8:
  2494                           	opt stack 0
  2495  000E0E                     _send_msg:
  2496                           	opt stack 16
  2497                           
  2498                           ;messages.c: 25: unsigned char slot;
  2499                           ;messages.c: 27: msg *qmsg;
  2500                           ;messages.c: 28: size_t tlength = length;
  2501                           
  2502                           ;incstack = 0
  2503  000E0E  0101               	movlb	1	; () banked
  2504  000E10  C102  F106         	movff	send_msg@length,send_msg@tlength
  2505  000E14  0101               	movlb	1	; () banked
  2506  000E16  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2510  000E18  0101               	movlb	1	; () banked
  2511  000E1A  EE20 F034          	lfsr	2,52
  2512  000E1E  0101               	movlb	1	; () banked
  2513  000E20  5100               	movf	send_msg@qptr& (0+255),w,b
  2514  000E22  26D9               	addwf	fsr2l,f,c
  2515  000E24  0101               	movlb	1	; () banked
  2516  000E26  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2517  000E28  22DA               	addwfc	fsr2h,f,c
  2518  000E2A  50DF               	movf	indf2,w,c
  2519  000E2C  0101               	movlb	1	; () banked
  2520  000E2E  6F08               	movwf	send_msg@slot& (0+255),b
  2521                           
  2522                           ; BSR set to: 1
  2523                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2524  000E30  0101               	movlb	1	; () banked
  2525  000E32  5108               	movf	send_msg@slot& (0+255),w,b
  2526  000E34  0D0D               	mullw	13
  2527  000E36  50F3               	movf	prodl,w,c
  2528  000E38  0101               	movlb	1	; () banked
  2529  000E3A  2500               	addwf	send_msg@qptr& (0+255),w,b
  2530  000E3C  0101               	movlb	1	; () banked
  2531  000E3E  6F09               	movwf	send_msg@qmsg& (0+255),b
  2532  000E40  50F4               	movf	prodh,w,c
  2533  000E42  0101               	movlb	1	; () banked
  2534  000E44  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2535  000E46  0101               	movlb	1	; () banked
  2536  000E48  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;messages.c: 41: if (qmsg->full != 0) {
  2540  000E4A  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2541  000E4E  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2542  000E52  50DF               	movf	indf2,w,c
  2543  000E54  B4D8               	btfsc	status,2,c
  2544  000E56  D002               	goto	l3037
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;messages.c: 42: return (-1);
  2548  000E58  0EFF               	movlw	255
  2549  000E5A  0012               	return	
  2550  000E5C                     l3037:
  2551                           
  2552                           ; BSR set to: 1
  2553                           ;messages.c: 43: }
  2554                           ;messages.c: 46: qmsg->length = length;
  2555  000E5C  0101               	movlb	1	; () banked
  2556  000E5E  EE20 F001          	lfsr	2,1
  2557  000E62  0101               	movlb	1	; () banked
  2558  000E64  5109               	movf	send_msg@qmsg& (0+255),w,b
  2559  000E66  26D9               	addwf	fsr2l,f,c
  2560  000E68  0101               	movlb	1	; () banked
  2561  000E6A  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2562  000E6C  22DA               	addwfc	fsr2h,f,c
  2563  000E6E  0101               	movlb	1	; () banked
  2564  000E70  C102  FFDF         	movff	send_msg@length,indf2
  2565                           
  2566                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2567  000E74  0101               	movlb	1	; () banked
  2568  000E76  EE20 F002          	lfsr	2,2
  2569  000E7A  0101               	movlb	1	; () banked
  2570  000E7C  5109               	movf	send_msg@qmsg& (0+255),w,b
  2571  000E7E  26D9               	addwf	fsr2l,f,c
  2572  000E80  0101               	movlb	1	; () banked
  2573  000E82  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2574  000E84  22DA               	addwfc	fsr2h,f,c
  2575  000E86  0101               	movlb	1	; () banked
  2576  000E88  C103  FFDF         	movff	send_msg@msgtype,indf2
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2580  000E8C  0E03               	movlw	3
  2581  000E8E  0101               	movlb	1	; () banked
  2582  000E90  2509               	addwf	send_msg@qmsg& (0+255),w,b
  2583  000E92  0100               	movlb	0	; () banked
  2584  000E94  6FD3               	movwf	memcpy@d1& (0+255),b
  2585  000E96  0E00               	movlw	0
  2586  000E98  0101               	movlb	1	; () banked
  2587  000E9A  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2588  000E9C  0100               	movlb	0	; () banked
  2589  000E9E  6FD4               	movwf	(memcpy@d1+1)& (0+255),b
  2590  000EA0  0101               	movlb	1	; () banked
  2591  000EA2  0100               	movlb	0	; () banked
  2592  000EA4  C105  F0D6         	movff	send_msg@data+1,memcpy@s1+1
  2593  000EA8  0101               	movlb	1	; () banked
  2594  000EAA  0100               	movlb	0	; () banked
  2595  000EAC  C104  F0D5         	movff	send_msg@data,memcpy@s1
  2596  000EB0  C106  F0D7         	movff	send_msg@tlength,memcpy@n
  2597  000EB4  C107  F0D8         	movff	send_msg@tlength+1,memcpy@n+1
  2598  000EB8  ECDD  F00B         	call	_memcpy	;wreg free
  2599                           
  2600                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2601  000EBC  0101               	movlb	1	; () banked
  2602  000EBE  EE20 F034          	lfsr	2,52
  2603  000EC2  0101               	movlb	1	; () banked
  2604  000EC4  5100               	movf	send_msg@qptr& (0+255),w,b
  2605  000EC6  26D9               	addwf	fsr2l,f,c
  2606  000EC8  0101               	movlb	1	; () banked
  2607  000ECA  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2608  000ECC  22DA               	addwfc	fsr2h,f,c
  2609  000ECE  0101               	movlb	1	; () banked
  2610  000ED0  EE10 F034          	lfsr	1,52
  2611  000ED4  0101               	movlb	1	; () banked
  2612  000ED6  5100               	movf	send_msg@qptr& (0+255),w,b
  2613  000ED8  26E1               	addwf	fsr1l,f,c
  2614  000EDA  0101               	movlb	1	; () banked
  2615  000EDC  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2616  000EDE  22E2               	addwfc	fsr1h,f,c
  2617  000EE0  50E7               	movf	indf1,w,c
  2618  000EE2  0100               	movlb	0	; () banked
  2619  000EE4  6FDD               	movwf	??_send_msg& (0+255),b
  2620  000EE6  0100               	movlb	0	; () banked
  2621  000EE8  29DD               	incf	??_send_msg& (0+255),w,b
  2622  000EEA  0B03               	andlw	3
  2623  000EEC  6EDF               	movwf	indf2,c
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;messages.c: 59: qmsg->full = 1;
  2627  000EEE  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2628  000EF2  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2629  000EF6  0E01               	movlw	1
  2630  000EF8  6EDF               	movwf	indf2,c
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;messages.c: 60: return (1);
  2634  000EFA  0E01               	movlw	1
  2635  000EFC  0012               	return	
  2636  000EFE                     __end_of_send_msg:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           indf1	equ	0xFE7
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           indf2	equ	0xFDF
  2650                           postinc2	equ	0xFDE
  2651                           postdec2	equ	0xFDD
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _init_uart_recv *****************
  2657 ;; Defined at:
  2658 ;;		line 80 in file "src/my_uart.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  2661 ;;		 -> main@uc(5), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2673 ;;      Params:         0       2       0       0       0
  2674 ;;      Locals:         0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0
  2676 ;;      Totals:         0       2       0       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:   10
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text9
  2688  001C1A                     __ptext9:
  2689                           	opt stack 0
  2690  001C1A                     _init_uart_recv:
  2691                           	opt stack 19
  2692                           
  2693                           ;my_uart.c: 81: uc_ptr = uc;
  2694                           
  2695                           ;incstack = 0
  2696  001C1A  0100               	movlb	0	; () banked
  2697  001C1C  C0D4  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2698  001C20  0100               	movlb	0	; () banked
  2699  001C22  C0D3  F049         	movff	init_uart_recv@uc,_uc_ptr
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2703  001C26  EE20 F004          	lfsr	2,4
  2704  001C2A  5049               	movf	_uc_ptr,w,c
  2705  001C2C  26D9               	addwf	fsr2l,f,c
  2706  001C2E  504A               	movf	_uc_ptr+1,w,c
  2707  001C30  22DA               	addwfc	fsr2h,f,c
  2708  001C32  0E00               	movlw	0
  2709  001C34  6EDF               	movwf	indf2,c
  2710                           
  2711                           ; BSR set to: 0
  2712  001C36  0012               	return	
  2713  001C38                     __end_of_init_uart_recv:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           prodh	equ	0xFF4
  2720                           prodl	equ	0xFF3
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           indf1	equ	0xFE7
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _init_uart_lthread *****************
  2734 ;; Defined at:
  2735 ;;		line 7 in file "src/uart_thread.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  2738 ;;		 -> main@uthread_data(10), 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		None
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2750 ;;      Params:         0       2       0       0       0
  2751 ;;      Locals:         0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0
  2753 ;;      Totals:         0       2       0       0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:   10
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text10
  2765  001CC8                     __ptext10:
  2766                           	opt stack 0
  2767  001CC8                     _init_uart_lthread:
  2768                           	opt stack 19
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;incstack = 0
  2772  001CC8  0012               	return	
  2773  001CCA                     __end_of_init_uart_lthread:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodh	equ	0xFF4
  2780                           prodl	equ	0xFF3
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           indf1	equ	0xFE7
  2784                           fsr1h	equ	0xFE2
  2785                           fsr1l	equ	0xFE1
  2786                           indf2	equ	0xFDF
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _init_timer1_lthread *****************
  2794 ;; Defined at:
  2795 ;;		line 7 in file "src/timer1_thread.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  tptr            2   31[BANK0 ] PTR struct __timer1_thre
  2798 ;;		 -> main@t1thread_data(40), 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2810 ;;      Params:         0       2       0       0       0
  2811 ;;      Locals:         0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0
  2813 ;;      Totals:         0       2       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:   11
  2817 ;; This function calls:
  2818 ;;		_quad_lookup_init
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text11
  2825  0012FC                     __ptext11:
  2826                           	opt stack 0
  2827  0012FC                     _init_timer1_lthread:
  2828                           	opt stack 18
  2829                           
  2830                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2831                           
  2832                           ;incstack = 0
  2833  0012FC  C0D5  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2834  001300  C0D6  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2835  001304  0E00               	movlw	0
  2836  001306  6EDE               	movwf	postinc2,c
  2837  001308  0E00               	movlw	0
  2838  00130A  6EDD               	movwf	postdec2,c
  2839                           
  2840                           ;timer1_thread.c: 9: tptr->ctrl[0] = 182;
  2841  00130C  0100               	movlb	0	; () banked
  2842  00130E  EE20 F002          	lfsr	2,2
  2843  001312  0100               	movlb	0	; () banked
  2844  001314  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2845  001316  26D9               	addwf	fsr2l,f,c
  2846  001318  0100               	movlb	0	; () banked
  2847  00131A  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2848  00131C  22DA               	addwfc	fsr2h,f,c
  2849  00131E  0EB6               	movlw	182
  2850  001320  6EDF               	movwf	indf2,c
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;timer1_thread.c: 10: tptr->ctrl[1] = 54;
  2854  001322  0100               	movlb	0	; () banked
  2855  001324  EE20 F003          	lfsr	2,3
  2856  001328  0100               	movlb	0	; () banked
  2857  00132A  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2858  00132C  26D9               	addwf	fsr2l,f,c
  2859  00132E  0100               	movlb	0	; () banked
  2860  001330  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2861  001332  22DA               	addwfc	fsr2h,f,c
  2862  001334  0E36               	movlw	54
  2863  001336  6EDF               	movwf	indf2,c
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;timer1_thread.c: 11: tptr->prevPos[0] = 0;
  2867  001338  0100               	movlb	0	; () banked
  2868  00133A  EE20 F024          	lfsr	2,36
  2869  00133E  0100               	movlb	0	; () banked
  2870  001340  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2871  001342  26D9               	addwf	fsr2l,f,c
  2872  001344  0100               	movlb	0	; () banked
  2873  001346  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2874  001348  22DA               	addwfc	fsr2h,f,c
  2875  00134A  0E00               	movlw	0
  2876  00134C  6EDF               	movwf	indf2,c
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;timer1_thread.c: 12: tptr->prevPos[1] = 0;
  2880  00134E  0100               	movlb	0	; () banked
  2881  001350  EE20 F025          	lfsr	2,37
  2882  001354  0100               	movlb	0	; () banked
  2883  001356  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2884  001358  26D9               	addwf	fsr2l,f,c
  2885  00135A  0100               	movlb	0	; () banked
  2886  00135C  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2887  00135E  22DA               	addwfc	fsr2h,f,c
  2888  001360  0E00               	movlw	0
  2889  001362  6EDF               	movwf	indf2,c
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;timer1_thread.c: 13: tptr->current_position = 0;
  2893  001364  0100               	movlb	0	; () banked
  2894  001366  EE20 F026          	lfsr	2,38
  2895  00136A  0100               	movlb	0	; () banked
  2896  00136C  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2897  00136E  26D9               	addwf	fsr2l,f,c
  2898  001370  0100               	movlb	0	; () banked
  2899  001372  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2900  001374  22DA               	addwfc	fsr2h,f,c
  2901  001376  0E00               	movlw	0
  2902  001378  6EDF               	movwf	indf2,c
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;timer1_thread.c: 14: tptr->direction = 0;
  2906  00137A  0100               	movlb	0	; () banked
  2907  00137C  EE20 F027          	lfsr	2,39
  2908  001380  0100               	movlb	0	; () banked
  2909  001382  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2910  001384  26D9               	addwf	fsr2l,f,c
  2911  001386  0100               	movlb	0	; () banked
  2912  001388  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2913  00138A  22DA               	addwfc	fsr2h,f,c
  2914  00138C  0E00               	movlw	0
  2915  00138E  6EDF               	movwf	indf2,c
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;timer1_thread.c: 15: quad_lookup_init(tptr->quadpos);
  2919  001390  0E04               	movlw	4
  2920  001392  0100               	movlb	0	; () banked
  2921  001394  25D5               	addwf	init_timer1_lthread@tptr& (0+255),w,b
  2922  001396  0100               	movlb	0	; () banked
  2923  001398  6FD3               	movwf	quad_lookup_init@table& (0+255),b
  2924  00139A  0E00               	movlw	0
  2925  00139C  0100               	movlb	0	; () banked
  2926  00139E  21D6               	addwfc	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2927  0013A0  0100               	movlb	0	; () banked
  2928  0013A2  6FD4               	movwf	(quad_lookup_init@table+1)& (0+255),b
  2929  0013A4  EC98  F004         	call	_quad_lookup_init	;wreg free
  2930  0013A8  0012               	return	
  2931  0013AA                     __end_of_init_timer1_lthread:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           prodh	equ	0xFF4
  2938                           prodl	equ	0xFF3
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           indf1	equ	0xFE7
  2942                           fsr1h	equ	0xFE2
  2943                           fsr1l	equ	0xFE1
  2944                           indf2	equ	0xFDF
  2945                           postinc2	equ	0xFDE
  2946                           postdec2	equ	0xFDD
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _quad_lookup_init *****************
  2952 ;; Defined at:
  2953 ;;		line 34 in file "src/timer1_thread.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  table           2   29[BANK0 ] PTR unsigned char 
  2956 ;;		 -> main@t1thread_data(40), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2968 ;;      Params:         0       2       0       0       0
  2969 ;;      Locals:         0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       2       0       0       0
  2972 ;;Total ram usage:        2 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:   10
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_init_timer1_lthread
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text12
  2983  000930                     __ptext12:
  2984                           	opt stack 0
  2985  000930                     _quad_lookup_init:
  2986                           	opt stack 18
  2987                           
  2988                           ;timer1_thread.c: 35: table[0] = 0;
  2989                           
  2990                           ;incstack = 0
  2991  000930  C0D3  FFD9         	movff	quad_lookup_init@table,fsr2l
  2992  000934  C0D4  FFDA         	movff	quad_lookup_init@table+1,fsr2h
  2993  000938  0E00               	movlw	0
  2994  00093A  6EDF               	movwf	indf2,c
  2995                           
  2996                           ;timer1_thread.c: 36: table[1] = -1;
  2997  00093C  0100               	movlb	0	; () banked
  2998  00093E  EE20 F001          	lfsr	2,1
  2999  000942  0100               	movlb	0	; () banked
  3000  000944  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3001  000946  26D9               	addwf	fsr2l,f,c
  3002  000948  0100               	movlb	0	; () banked
  3003  00094A  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3004  00094C  22DA               	addwfc	fsr2h,f,c
  3005  00094E  0EFF               	movlw	255
  3006  000950  6EDF               	movwf	indf2,c
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;timer1_thread.c: 37: table[2] = 1;
  3010  000952  0100               	movlb	0	; () banked
  3011  000954  EE20 F002          	lfsr	2,2
  3012  000958  0100               	movlb	0	; () banked
  3013  00095A  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3014  00095C  26D9               	addwf	fsr2l,f,c
  3015  00095E  0100               	movlb	0	; () banked
  3016  000960  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3017  000962  22DA               	addwfc	fsr2h,f,c
  3018  000964  0E01               	movlw	1
  3019  000966  6EDF               	movwf	indf2,c
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;timer1_thread.c: 38: table[3] = -2;
  3023  000968  0100               	movlb	0	; () banked
  3024  00096A  EE20 F003          	lfsr	2,3
  3025  00096E  0100               	movlb	0	; () banked
  3026  000970  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3027  000972  26D9               	addwf	fsr2l,f,c
  3028  000974  0100               	movlb	0	; () banked
  3029  000976  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3030  000978  22DA               	addwfc	fsr2h,f,c
  3031  00097A  0EFE               	movlw	254
  3032  00097C  6EDF               	movwf	indf2,c
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;timer1_thread.c: 39: table[4] = 1;
  3036  00097E  0100               	movlb	0	; () banked
  3037  000980  EE20 F004          	lfsr	2,4
  3038  000984  0100               	movlb	0	; () banked
  3039  000986  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3040  000988  26D9               	addwf	fsr2l,f,c
  3041  00098A  0100               	movlb	0	; () banked
  3042  00098C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3043  00098E  22DA               	addwfc	fsr2h,f,c
  3044  000990  0E01               	movlw	1
  3045  000992  6EDF               	movwf	indf2,c
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;timer1_thread.c: 40: table[5] = 0;
  3049  000994  0100               	movlb	0	; () banked
  3050  000996  EE20 F005          	lfsr	2,5
  3051  00099A  0100               	movlb	0	; () banked
  3052  00099C  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3053  00099E  26D9               	addwf	fsr2l,f,c
  3054  0009A0  0100               	movlb	0	; () banked
  3055  0009A2  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3056  0009A4  22DA               	addwfc	fsr2h,f,c
  3057  0009A6  0E00               	movlw	0
  3058  0009A8  6EDF               	movwf	indf2,c
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;timer1_thread.c: 41: table[6] = -2;
  3062  0009AA  0100               	movlb	0	; () banked
  3063  0009AC  EE20 F006          	lfsr	2,6
  3064  0009B0  0100               	movlb	0	; () banked
  3065  0009B2  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3066  0009B4  26D9               	addwf	fsr2l,f,c
  3067  0009B6  0100               	movlb	0	; () banked
  3068  0009B8  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3069  0009BA  22DA               	addwfc	fsr2h,f,c
  3070  0009BC  0EFE               	movlw	254
  3071  0009BE  6EDF               	movwf	indf2,c
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;timer1_thread.c: 42: table[7] = -1;
  3075  0009C0  0100               	movlb	0	; () banked
  3076  0009C2  EE20 F007          	lfsr	2,7
  3077  0009C6  0100               	movlb	0	; () banked
  3078  0009C8  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3079  0009CA  26D9               	addwf	fsr2l,f,c
  3080  0009CC  0100               	movlb	0	; () banked
  3081  0009CE  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3082  0009D0  22DA               	addwfc	fsr2h,f,c
  3083  0009D2  0EFF               	movlw	255
  3084  0009D4  6EDF               	movwf	indf2,c
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;timer1_thread.c: 43: table[8] = -1;
  3088  0009D6  0100               	movlb	0	; () banked
  3089  0009D8  EE20 F008          	lfsr	2,8
  3090  0009DC  0100               	movlb	0	; () banked
  3091  0009DE  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3092  0009E0  26D9               	addwf	fsr2l,f,c
  3093  0009E2  0100               	movlb	0	; () banked
  3094  0009E4  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3095  0009E6  22DA               	addwfc	fsr2h,f,c
  3096  0009E8  0EFF               	movlw	255
  3097  0009EA  6EDF               	movwf	indf2,c
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;timer1_thread.c: 44: table[9] = -2;
  3101  0009EC  0100               	movlb	0	; () banked
  3102  0009EE  EE20 F009          	lfsr	2,9
  3103  0009F2  0100               	movlb	0	; () banked
  3104  0009F4  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3105  0009F6  26D9               	addwf	fsr2l,f,c
  3106  0009F8  0100               	movlb	0	; () banked
  3107  0009FA  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3108  0009FC  22DA               	addwfc	fsr2h,f,c
  3109  0009FE  0EFE               	movlw	254
  3110  000A00  6EDF               	movwf	indf2,c
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;timer1_thread.c: 45: table[10] = 0;
  3114  000A02  0100               	movlb	0	; () banked
  3115  000A04  EE20 F00A          	lfsr	2,10
  3116  000A08  0100               	movlb	0	; () banked
  3117  000A0A  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3118  000A0C  26D9               	addwf	fsr2l,f,c
  3119  000A0E  0100               	movlb	0	; () banked
  3120  000A10  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3121  000A12  22DA               	addwfc	fsr2h,f,c
  3122  000A14  0E00               	movlw	0
  3123  000A16  6EDF               	movwf	indf2,c
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;timer1_thread.c: 46: table[11] = 1;
  3127  000A18  0100               	movlb	0	; () banked
  3128  000A1A  EE20 F00B          	lfsr	2,11
  3129  000A1E  0100               	movlb	0	; () banked
  3130  000A20  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3131  000A22  26D9               	addwf	fsr2l,f,c
  3132  000A24  0100               	movlb	0	; () banked
  3133  000A26  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3134  000A28  22DA               	addwfc	fsr2h,f,c
  3135  000A2A  0E01               	movlw	1
  3136  000A2C  6EDF               	movwf	indf2,c
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;timer1_thread.c: 47: table[12] = -2;
  3140  000A2E  0100               	movlb	0	; () banked
  3141  000A30  EE20 F00C          	lfsr	2,12
  3142  000A34  0100               	movlb	0	; () banked
  3143  000A36  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3144  000A38  26D9               	addwf	fsr2l,f,c
  3145  000A3A  0100               	movlb	0	; () banked
  3146  000A3C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3147  000A3E  22DA               	addwfc	fsr2h,f,c
  3148  000A40  0EFE               	movlw	254
  3149  000A42  6EDF               	movwf	indf2,c
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;timer1_thread.c: 48: table[13] = 1;
  3153  000A44  0100               	movlb	0	; () banked
  3154  000A46  EE20 F00D          	lfsr	2,13
  3155  000A4A  0100               	movlb	0	; () banked
  3156  000A4C  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3157  000A4E  26D9               	addwf	fsr2l,f,c
  3158  000A50  0100               	movlb	0	; () banked
  3159  000A52  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3160  000A54  22DA               	addwfc	fsr2h,f,c
  3161  000A56  0E01               	movlw	1
  3162  000A58  6EDF               	movwf	indf2,c
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;timer1_thread.c: 49: table[14] = -1;
  3166  000A5A  0100               	movlb	0	; () banked
  3167  000A5C  EE20 F00E          	lfsr	2,14
  3168  000A60  0100               	movlb	0	; () banked
  3169  000A62  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3170  000A64  26D9               	addwf	fsr2l,f,c
  3171  000A66  0100               	movlb	0	; () banked
  3172  000A68  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3173  000A6A  22DA               	addwfc	fsr2h,f,c
  3174  000A6C  0EFF               	movlw	255
  3175  000A6E  6EDF               	movwf	indf2,c
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;timer1_thread.c: 50: table[15] = 0;
  3179  000A70  0100               	movlb	0	; () banked
  3180  000A72  EE20 F00F          	lfsr	2,15
  3181  000A76  0100               	movlb	0	; () banked
  3182  000A78  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3183  000A7A  26D9               	addwf	fsr2l,f,c
  3184  000A7C  0100               	movlb	0	; () banked
  3185  000A7E  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3186  000A80  22DA               	addwfc	fsr2h,f,c
  3187  000A82  0E00               	movlw	0
  3188  000A84  6EDF               	movwf	indf2,c
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;timer1_thread.c: 51: table[16] = 0;
  3192  000A86  0100               	movlb	0	; () banked
  3193  000A88  EE20 F010          	lfsr	2,16
  3194  000A8C  0100               	movlb	0	; () banked
  3195  000A8E  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3196  000A90  26D9               	addwf	fsr2l,f,c
  3197  000A92  0100               	movlb	0	; () banked
  3198  000A94  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3199  000A96  22DA               	addwfc	fsr2h,f,c
  3200  000A98  0E00               	movlw	0
  3201  000A9A  6EDF               	movwf	indf2,c
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;timer1_thread.c: 52: table[17] = -1;
  3205  000A9C  0100               	movlb	0	; () banked
  3206  000A9E  EE20 F011          	lfsr	2,17
  3207  000AA2  0100               	movlb	0	; () banked
  3208  000AA4  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3209  000AA6  26D9               	addwf	fsr2l,f,c
  3210  000AA8  0100               	movlb	0	; () banked
  3211  000AAA  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3212  000AAC  22DA               	addwfc	fsr2h,f,c
  3213  000AAE  0EFF               	movlw	255
  3214  000AB0  6EDF               	movwf	indf2,c
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;timer1_thread.c: 53: table[18] = 1;
  3218  000AB2  0100               	movlb	0	; () banked
  3219  000AB4  EE20 F012          	lfsr	2,18
  3220  000AB8  0100               	movlb	0	; () banked
  3221  000ABA  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3222  000ABC  26D9               	addwf	fsr2l,f,c
  3223  000ABE  0100               	movlb	0	; () banked
  3224  000AC0  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3225  000AC2  22DA               	addwfc	fsr2h,f,c
  3226  000AC4  0E01               	movlw	1
  3227  000AC6  6EDF               	movwf	indf2,c
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;timer1_thread.c: 54: table[19] = 2;
  3231  000AC8  0100               	movlb	0	; () banked
  3232  000ACA  EE20 F013          	lfsr	2,19
  3233  000ACE  0100               	movlb	0	; () banked
  3234  000AD0  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3235  000AD2  26D9               	addwf	fsr2l,f,c
  3236  000AD4  0100               	movlb	0	; () banked
  3237  000AD6  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3238  000AD8  22DA               	addwfc	fsr2h,f,c
  3239  000ADA  0E02               	movlw	2
  3240  000ADC  6EDF               	movwf	indf2,c
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;timer1_thread.c: 55: table[20] = 1;
  3244  000ADE  0100               	movlb	0	; () banked
  3245  000AE0  EE20 F014          	lfsr	2,20
  3246  000AE4  0100               	movlb	0	; () banked
  3247  000AE6  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3248  000AE8  26D9               	addwf	fsr2l,f,c
  3249  000AEA  0100               	movlb	0	; () banked
  3250  000AEC  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3251  000AEE  22DA               	addwfc	fsr2h,f,c
  3252  000AF0  0E01               	movlw	1
  3253  000AF2  6EDF               	movwf	indf2,c
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;timer1_thread.c: 56: table[21] = 0;
  3257  000AF4  0100               	movlb	0	; () banked
  3258  000AF6  EE20 F015          	lfsr	2,21
  3259  000AFA  0100               	movlb	0	; () banked
  3260  000AFC  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3261  000AFE  26D9               	addwf	fsr2l,f,c
  3262  000B00  0100               	movlb	0	; () banked
  3263  000B02  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3264  000B04  22DA               	addwfc	fsr2h,f,c
  3265  000B06  0E00               	movlw	0
  3266  000B08  6EDF               	movwf	indf2,c
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;timer1_thread.c: 57: table[22] = 2;
  3270  000B0A  0100               	movlb	0	; () banked
  3271  000B0C  EE20 F016          	lfsr	2,22
  3272  000B10  0100               	movlb	0	; () banked
  3273  000B12  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3274  000B14  26D9               	addwf	fsr2l,f,c
  3275  000B16  0100               	movlb	0	; () banked
  3276  000B18  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3277  000B1A  22DA               	addwfc	fsr2h,f,c
  3278  000B1C  0E02               	movlw	2
  3279  000B1E  6EDF               	movwf	indf2,c
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;timer1_thread.c: 58: table[23] = -1;
  3283  000B20  0100               	movlb	0	; () banked
  3284  000B22  EE20 F017          	lfsr	2,23
  3285  000B26  0100               	movlb	0	; () banked
  3286  000B28  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3287  000B2A  26D9               	addwf	fsr2l,f,c
  3288  000B2C  0100               	movlb	0	; () banked
  3289  000B2E  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3290  000B30  22DA               	addwfc	fsr2h,f,c
  3291  000B32  0EFF               	movlw	255
  3292  000B34  6EDF               	movwf	indf2,c
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;timer1_thread.c: 59: table[24] = -1;
  3296  000B36  0100               	movlb	0	; () banked
  3297  000B38  EE20 F018          	lfsr	2,24
  3298  000B3C  0100               	movlb	0	; () banked
  3299  000B3E  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3300  000B40  26D9               	addwf	fsr2l,f,c
  3301  000B42  0100               	movlb	0	; () banked
  3302  000B44  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3303  000B46  22DA               	addwfc	fsr2h,f,c
  3304  000B48  0EFF               	movlw	255
  3305  000B4A  6EDF               	movwf	indf2,c
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;timer1_thread.c: 60: table[25] = 2;
  3309  000B4C  0100               	movlb	0	; () banked
  3310  000B4E  EE20 F019          	lfsr	2,25
  3311  000B52  0100               	movlb	0	; () banked
  3312  000B54  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3313  000B56  26D9               	addwf	fsr2l,f,c
  3314  000B58  0100               	movlb	0	; () banked
  3315  000B5A  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3316  000B5C  22DA               	addwfc	fsr2h,f,c
  3317  000B5E  0E02               	movlw	2
  3318  000B60  6EDF               	movwf	indf2,c
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;timer1_thread.c: 61: table[26] = 0;
  3322  000B62  0100               	movlb	0	; () banked
  3323  000B64  EE20 F01A          	lfsr	2,26
  3324  000B68  0100               	movlb	0	; () banked
  3325  000B6A  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3326  000B6C  26D9               	addwf	fsr2l,f,c
  3327  000B6E  0100               	movlb	0	; () banked
  3328  000B70  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3329  000B72  22DA               	addwfc	fsr2h,f,c
  3330  000B74  0E00               	movlw	0
  3331  000B76  6EDF               	movwf	indf2,c
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;timer1_thread.c: 62: table[27] = 1;
  3335  000B78  0100               	movlb	0	; () banked
  3336  000B7A  EE20 F01B          	lfsr	2,27
  3337  000B7E  0100               	movlb	0	; () banked
  3338  000B80  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3339  000B82  26D9               	addwf	fsr2l,f,c
  3340  000B84  0100               	movlb	0	; () banked
  3341  000B86  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3342  000B88  22DA               	addwfc	fsr2h,f,c
  3343  000B8A  0E01               	movlw	1
  3344  000B8C  6EDF               	movwf	indf2,c
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;timer1_thread.c: 63: table[28] = 2;
  3348  000B8E  0100               	movlb	0	; () banked
  3349  000B90  EE20 F01C          	lfsr	2,28
  3350  000B94  0100               	movlb	0	; () banked
  3351  000B96  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3352  000B98  26D9               	addwf	fsr2l,f,c
  3353  000B9A  0100               	movlb	0	; () banked
  3354  000B9C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3355  000B9E  22DA               	addwfc	fsr2h,f,c
  3356  000BA0  0E02               	movlw	2
  3357  000BA2  6EDF               	movwf	indf2,c
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;timer1_thread.c: 64: table[29] = 1;
  3361  000BA4  0100               	movlb	0	; () banked
  3362  000BA6  EE20 F01D          	lfsr	2,29
  3363  000BAA  0100               	movlb	0	; () banked
  3364  000BAC  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3365  000BAE  26D9               	addwf	fsr2l,f,c
  3366  000BB0  0100               	movlb	0	; () banked
  3367  000BB2  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3368  000BB4  22DA               	addwfc	fsr2h,f,c
  3369  000BB6  0E01               	movlw	1
  3370  000BB8  6EDF               	movwf	indf2,c
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;timer1_thread.c: 65: table[30] = -1;
  3374  000BBA  0100               	movlb	0	; () banked
  3375  000BBC  EE20 F01E          	lfsr	2,30
  3376  000BC0  0100               	movlb	0	; () banked
  3377  000BC2  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3378  000BC4  26D9               	addwf	fsr2l,f,c
  3379  000BC6  0100               	movlb	0	; () banked
  3380  000BC8  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3381  000BCA  22DA               	addwfc	fsr2h,f,c
  3382  000BCC  0EFF               	movlw	255
  3383  000BCE  6EDF               	movwf	indf2,c
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;timer1_thread.c: 66: table[31] = 0;
  3387  000BD0  0100               	movlb	0	; () banked
  3388  000BD2  EE20 F01F          	lfsr	2,31
  3389  000BD6  0100               	movlb	0	; () banked
  3390  000BD8  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3391  000BDA  26D9               	addwf	fsr2l,f,c
  3392  000BDC  0100               	movlb	0	; () banked
  3393  000BDE  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3394  000BE0  22DA               	addwfc	fsr2h,f,c
  3395  000BE2  0E00               	movlw	0
  3396  000BE4  6EDF               	movwf	indf2,c
  3397                           
  3398                           ; BSR set to: 0
  3399  000BE6  0012               	return	
  3400  000BE8                     __end_of_quad_lookup_init:
  3401                           	opt stack 0
  3402                           tblptru	equ	0xFF8
  3403                           tblptrh	equ	0xFF7
  3404                           tblptrl	equ	0xFF6
  3405                           tablat	equ	0xFF5
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           postinc0	equ	0xFEE
  3409                           wreg	equ	0xFE8
  3410                           indf1	equ	0xFE7
  3411                           fsr1h	equ	0xFE2
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _init_queues *****************
  3421 ;; Defined at:
  3422 ;;		line 194 in file "src/messages.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;		None               void
  3429 ;; Registers used:
  3430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3436 ;;      Params:         0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:   11
  3443 ;; This function calls:
  3444 ;;		_init_queue
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text13
  3451  00170E                     __ptext13:
  3452                           	opt stack 0
  3453  00170E                     _init_queues:
  3454                           	opt stack 18
  3455                           
  3456                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;incstack = 0
  3460  00170E  0E00               	movlw	0
  3461  001710  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3462                           
  3463                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3464  001712  0100               	movlb	0	; () banked
  3465  001714  0E00               	movlw	high _ToMainLow_MQ
  3466  001716  0100               	movlb	0	; () banked
  3467  001718  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3468  00171A  0100               	movlb	0	; () banked
  3469  00171C  0E80               	movlw	low _ToMainLow_MQ
  3470  00171E  0100               	movlb	0	; () banked
  3471  001720  6FD3               	movwf	init_queue@qptr& (0+255),b
  3472  001722  EC27  F00B         	call	_init_queue	;wreg free
  3473                           
  3474                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3475  001726  0101               	movlb	1	; () banked
  3476  001728  0E01               	movlw	high _ToMainHigh_MQ
  3477  00172A  0100               	movlb	0	; () banked
  3478  00172C  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3479  00172E  0101               	movlb	1	; () banked
  3480  001730  0EB6               	movlw	low _ToMainHigh_MQ
  3481  001732  0100               	movlb	0	; () banked
  3482  001734  6FD3               	movwf	init_queue@qptr& (0+255),b
  3483  001736  EC27  F00B         	call	_init_queue	;wreg free
  3484                           
  3485                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3486  00173A  0101               	movlb	1	; () banked
  3487  00173C  0E01               	movlw	high _FromMainLow_MQ
  3488  00173E  0100               	movlb	0	; () banked
  3489  001740  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3490  001742  0101               	movlb	1	; () banked
  3491  001744  0E80               	movlw	low _FromMainLow_MQ
  3492  001746  0100               	movlb	0	; () banked
  3493  001748  6FD3               	movwf	init_queue@qptr& (0+255),b
  3494  00174A  EC27  F00B         	call	_init_queue	;wreg free
  3495                           
  3496                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3497  00174E  0102               	movlb	2	; () banked
  3498  001750  0E02               	movlw	high _FromMainHigh_MQ
  3499  001752  0100               	movlb	0	; () banked
  3500  001754  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3501  001756  0102               	movlb	2	; () banked
  3502  001758  0E00               	movlw	low _FromMainHigh_MQ
  3503  00175A  0100               	movlb	0	; () banked
  3504  00175C  6FD3               	movwf	init_queue@qptr& (0+255),b
  3505  00175E  EC27  F00B         	call	_init_queue	;wreg free
  3506  001762  0012               	return	
  3507  001764                     __end_of_init_queues:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           indf1	equ	0xFE7
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _init_queue *****************
  3528 ;; Defined at:
  3529 ;;		line 14 in file "src/messages.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3532 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  i               1   31[BANK0 ] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3544 ;;      Params:         0       2       0       0       0
  3545 ;;      Locals:         0       1       0       0       0
  3546 ;;      Temps:          0       0       0       0       0
  3547 ;;      Totals:         0       3       0       0       0
  3548 ;;Total ram usage:        3 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:   10
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_init_queues
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text14
  3559  00164E                     __ptext14:
  3560                           	opt stack 0
  3561  00164E                     _init_queue:
  3562                           	opt stack 18
  3563                           
  3564                           ;messages.c: 15: unsigned char i;
  3565                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3566                           
  3567                           ;incstack = 0
  3568  00164E  0100               	movlb	0	; () banked
  3569  001650  EE20 F034          	lfsr	2,52
  3570  001654  0100               	movlb	0	; () banked
  3571  001656  51D3               	movf	init_queue@qptr& (0+255),w,b
  3572  001658  26D9               	addwf	fsr2l,f,c
  3573  00165A  0100               	movlb	0	; () banked
  3574  00165C  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3575  00165E  22DA               	addwfc	fsr2h,f,c
  3576  001660  0E00               	movlw	0
  3577  001662  6EDF               	movwf	indf2,c
  3578                           
  3579                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3580  001664  0100               	movlb	0	; () banked
  3581  001666  EE20 F035          	lfsr	2,53
  3582  00166A  0100               	movlb	0	; () banked
  3583  00166C  51D3               	movf	init_queue@qptr& (0+255),w,b
  3584  00166E  26D9               	addwf	fsr2l,f,c
  3585  001670  0100               	movlb	0	; () banked
  3586  001672  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3587  001674  22DA               	addwfc	fsr2h,f,c
  3588  001676  0E00               	movlw	0
  3589  001678  6EDF               	movwf	indf2,c
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3593  00167A  0E00               	movlw	0
  3594  00167C  0100               	movlb	0	; () banked
  3595  00167E  6FD5               	movwf	init_queue@i& (0+255),b
  3596                           
  3597                           ; BSR set to: 0
  3598  001680  0E03               	movlw	3
  3599  001682  0100               	movlb	0	; () banked
  3600  001684  65D5               	cpfsgt	init_queue@i& (0+255),b
  3601  001686  D001               	goto	l2245
  3602  001688  0012               	return	
  3603  00168A                     l2245:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;messages.c: 20: qptr->queue[i].full = 0;
  3607  00168A  0100               	movlb	0	; () banked
  3608  00168C  51D5               	movf	init_queue@i& (0+255),w,b
  3609  00168E  0D0D               	mullw	13
  3610  001690  50F3               	movf	prodl,w,c
  3611  001692  0100               	movlb	0	; () banked
  3612  001694  25D3               	addwf	init_queue@qptr& (0+255),w,b
  3613  001696  6ED9               	movwf	fsr2l,c
  3614  001698  50F4               	movf	prodh,w,c
  3615  00169A  0100               	movlb	0	; () banked
  3616  00169C  21D4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3617  00169E  6EDA               	movwf	fsr2h,c
  3618  0016A0  0E00               	movlw	0
  3619  0016A2  6EDF               	movwf	indf2,c
  3620                           
  3621                           ; BSR set to: 0
  3622  0016A4  0100               	movlb	0	; () banked
  3623  0016A6  2BD5               	incf	init_queue@i& (0+255),f,b
  3624                           
  3625                           ; BSR set to: 0
  3626  0016A8  0E03               	movlw	3
  3627  0016AA  0100               	movlb	0	; () banked
  3628  0016AC  65D5               	cpfsgt	init_queue@i& (0+255),b
  3629  0016AE  D7ED               	goto	l2245
  3630  0016B0  0012               	return	
  3631  0016B2                     __end_of_init_queue:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           prodh	equ	0xFF4
  3638                           prodl	equ	0xFF3
  3639                           postinc0	equ	0xFEE
  3640                           wreg	equ	0xFE8
  3641                           indf1	equ	0xFE7
  3642                           fsr1h	equ	0xFE2
  3643                           fsr1l	equ	0xFE1
  3644                           indf2	equ	0xFDF
  3645                           postinc2	equ	0xFDE
  3646                           postdec2	equ	0xFDD
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _init_i2c *****************
  3652 ;; Defined at:
  3653 ;;		line 268 in file "src/my_i2c.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  3656 ;;		 -> main@ic(28), 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3668 ;;      Params:         0       2       0       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       2       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:   10
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text15
  3683  0015E8                     __ptext15:
  3684                           	opt stack 0
  3685  0015E8                     _init_i2c:
  3686                           	opt stack 19
  3687                           
  3688                           ;my_i2c.c: 269: ic_ptr = ic;
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;incstack = 0
  3692  0015E8  0100               	movlb	0	; () banked
  3693  0015EA  C0D4  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  3694  0015EE  0100               	movlb	0	; () banked
  3695  0015F0  C0D3  F0E1         	movff	init_i2c@ic,_ic_ptr
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3699  0015F4  0100               	movlb	0	; () banked
  3700  0015F6  EE20 F00A          	lfsr	2,10
  3701  0015FA  0100               	movlb	0	; () banked
  3702  0015FC  51E1               	movf	_ic_ptr& (0+255),w,b
  3703  0015FE  26D9               	addwf	fsr2l,f,c
  3704  001600  0100               	movlb	0	; () banked
  3705  001602  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3706  001604  22DA               	addwfc	fsr2h,f,c
  3707  001606  0E00               	movlw	0
  3708  001608  6EDF               	movwf	indf2,c
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3712  00160A  0100               	movlb	0	; () banked
  3713  00160C  EE20 F00B          	lfsr	2,11
  3714  001610  0100               	movlb	0	; () banked
  3715  001612  51E1               	movf	_ic_ptr& (0+255),w,b
  3716  001614  26D9               	addwf	fsr2l,f,c
  3717  001616  0100               	movlb	0	; () banked
  3718  001618  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3719  00161A  22DA               	addwfc	fsr2h,f,c
  3720  00161C  0E00               	movlw	0
  3721  00161E  6EDF               	movwf	indf2,c
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3725  001620  0100               	movlb	0	; () banked
  3726  001622  EE20 F00C          	lfsr	2,12
  3727  001626  0100               	movlb	0	; () banked
  3728  001628  51E1               	movf	_ic_ptr& (0+255),w,b
  3729  00162A  26D9               	addwf	fsr2l,f,c
  3730  00162C  0100               	movlb	0	; () banked
  3731  00162E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3732  001630  22DA               	addwfc	fsr2h,f,c
  3733  001632  0E05               	movlw	5
  3734  001634  6EDF               	movwf	indf2,c
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3738  001636  0100               	movlb	0	; () banked
  3739  001638  EE20 F00E          	lfsr	2,14
  3740  00163C  0100               	movlb	0	; () banked
  3741  00163E  51E1               	movf	_ic_ptr& (0+255),w,b
  3742  001640  26D9               	addwf	fsr2l,f,c
  3743  001642  0100               	movlb	0	; () banked
  3744  001644  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3745  001646  22DA               	addwfc	fsr2h,f,c
  3746  001648  0E00               	movlw	0
  3747  00164A  6EDF               	movwf	indf2,c
  3748                           
  3749                           ; BSR set to: 0
  3750  00164C  0012               	return	
  3751  00164E                     __end_of_init_i2c:
  3752                           	opt stack 0
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           indf1	equ	0xFE7
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           postinc2	equ	0xFDE
  3766                           postdec2	equ	0xFDD
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _i2c_configure_slave *****************
  3772 ;; Defined at:
  3773 ;;		line 279 in file "src/my_i2c.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  addr            1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  addr            1   29[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3787 ;;      Params:         0       0       0       0       0
  3788 ;;      Locals:         0       1       0       0       0
  3789 ;;      Temps:          0       0       0       0       0
  3790 ;;      Totals:         0       1       0       0       0
  3791 ;;Total ram usage:        1 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:   10
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text16
  3802  001B60                     __ptext16:
  3803                           	opt stack 0
  3804  001B60                     _i2c_configure_slave:
  3805                           	opt stack 19
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;incstack = 0
  3809                           ;i2c_configure_slave@addr stored from wreg
  3810  001B60  0100               	movlb	0	; () banked
  3811  001B62  6FD3               	movwf	i2c_configure_slave@addr& (0+255),b
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3815  001B64  8694               	bsf	3988,3,c	;volatile
  3816                           
  3817                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3818  001B66  8894               	bsf	3988,4,c	;volatile
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;my_i2c.c: 297: SSPADD = addr;
  3822  001B68  C0D3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3826  001B6C  0E00               	movlw	0
  3827  001B6E  6EC7               	movwf	4039,c	;volatile
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3831  001B70  0E00               	movlw	0
  3832  001B72  6EC6               	movwf	4038,c	;volatile
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3836  001B74  0E00               	movlw	0
  3837  001B76  6EC5               	movwf	4037,c	;volatile
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3841  001B78  0E0E               	movlw	14
  3842  001B7A  12C6               	iorwf	4038,f,c	;volatile
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3846  001B7C  8EC7               	bsf	4039,7,c	;volatile
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3850  001B7E  8694               	bsf	3988,3,c	;volatile
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3854  001B80  8894               	bsf	3988,4,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3858  001B82  80C5               	bsf	4037,0,c	;volatile
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3862  001B84  8AC6               	bsf	4038,5,c	;volatile
  3863                           
  3864                           ; BSR set to: 0
  3865  001B86  0012               	return	
  3866  001B88                     __end_of_i2c_configure_slave:
  3867                           	opt stack 0
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           indf1	equ	0xFE7
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           indf2	equ	0xFDF
  3880                           postinc2	equ	0xFDE
  3881                           postdec2	equ	0xFDD
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886 ;; *************** function _enable_interrupts *****************
  3887 ;; Defined at:
  3888 ;;		line 14 in file "src/interrupts.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;		None               void
  3895 ;; Registers used:
  3896 ;;		None
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3902 ;;      Params:         0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   10
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text17
  3917  001CB8                     __ptext17:
  3918                           	opt stack 0
  3919  001CB8                     _enable_interrupts:
  3920                           	opt stack 19
  3921                           
  3922                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;incstack = 0
  3926  001CB8  8ED0               	bsf	4048,7,c	;volatile
  3927                           
  3928                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3929  001CBA  8EF2               	bsf	intcon,7,c	;volatile
  3930                           
  3931                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3932  001CBC  8CF2               	bsf	intcon,6,c	;volatile
  3933  001CBE  0012               	return	
  3934  001CC0                     __end_of_enable_interrupts:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           indf1	equ	0xFE7
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _block_on_To_msgqueues *****************
  3956 ;; Defined at:
  3957 ;;		line 256 in file "src/messages.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:   13
  3978 ;; This function calls:
  3979 ;;		_Delay1KTCYx
  3980 ;;		_check_msg
  3981 ;;		_in_main
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text18
  3988  0016B2                     __ptext18:
  3989                           	opt stack 0
  3990  0016B2                     _block_on_To_msgqueues:
  3991                           	opt stack 16
  3992                           
  3993                           ;messages.c: 257: if (!in_main()) {
  3994                           
  3995                           ;incstack = 0
  3996  0016B2  ECB0  F00C         	call	_in_main	;wreg free
  3997  0016B6  0100               	movlb	0	; () banked
  3998  0016B8  51D8               	movf	(?_in_main+1)& (0+255),w,b
  3999  0016BA  0100               	movlb	0	; () banked
  4000  0016BC  11D7               	iorwf	?_in_main& (0+255),w,b
  4001  0016BE  B4D8               	btfsc	status,2,c
  4002  0016C0  0012               	return	
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;messages.c: 259: }
  4006                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4007                           
  4008                           ; BSR set to: 0
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;messages.c: 258: return;
  4012  0016C2  0E01               	movlw	1
  4013  0016C4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4014  0016C6                     l2787:
  4015                           
  4016                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4017  0016C6  0101               	movlb	1	; () banked
  4018  0016C8  0E01               	movlw	high _ToMainHigh_MQ
  4019  0016CA  0100               	movlb	0	; () banked
  4020  0016CC  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  4021  0016CE  0101               	movlb	1	; () banked
  4022  0016D0  0EB6               	movlw	low _ToMainHigh_MQ
  4023  0016D2  0100               	movlb	0	; () banked
  4024  0016D4  6FD3               	movwf	check_msg@qptr& (0+255),b
  4025  0016D6  EC4F  F00D         	call	_check_msg	;wreg free
  4026  0016DA  0900               	iorlw	0
  4027  0016DC  B4D8               	btfsc	status,2,c
  4028  0016DE  D003               	goto	l2793
  4029                           
  4030                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4031  0016E0  0E00               	movlw	0
  4032  0016E2  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4033  0016E4  0012               	return	
  4034  0016E6                     l2793:
  4035                           
  4036                           ;messages.c: 271: }
  4037                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4038  0016E6  0100               	movlb	0	; () banked
  4039  0016E8  0E00               	movlw	high _ToMainLow_MQ
  4040  0016EA  0100               	movlb	0	; () banked
  4041  0016EC  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  4042  0016EE  0100               	movlb	0	; () banked
  4043  0016F0  0E80               	movlw	low _ToMainLow_MQ
  4044  0016F2  0100               	movlb	0	; () banked
  4045  0016F4  6FD3               	movwf	check_msg@qptr& (0+255),b
  4046  0016F6  EC4F  F00D         	call	_check_msg	;wreg free
  4047  0016FA  0900               	iorlw	0
  4048  0016FC  B4D8               	btfsc	status,2,c
  4049  0016FE  D003               	goto	l2799
  4050                           
  4051                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4052  001700  0E00               	movlw	0
  4053  001702  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4054  001704  0012               	return	
  4055  001706                     l2799:
  4056                           
  4057                           ;messages.c: 278: }
  4058                           ;messages.c: 279: Delay1KTCYx(10);
  4059  001706  0E0A               	movlw	10
  4060  001708  EC2B  F00E         	call	_Delay1KTCYx
  4061  00170C  D7DC               	goto	l2787
  4062  00170E                     __end_of_block_on_To_msgqueues:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           fsr1h	equ	0xFE2
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _in_main *****************
  4084 ;; Defined at:
  4085 ;;		line 40 in file "src/interrupts.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  2   33[BANK0 ] int 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4099 ;;      Params:         0       2       0       0       0
  4100 ;;      Locals:         0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0
  4102 ;;      Totals:         0       2       0       0       0
  4103 ;;Total ram usage:        2 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   12
  4106 ;; This function calls:
  4107 ;;		_in_high_int
  4108 ;;		_in_low_int
  4109 ;; This function is called by:
  4110 ;;		_block_on_To_msgqueues
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text19
  4115  001960                     __ptext19:
  4116                           	opt stack 0
  4117  001960                     _in_main:
  4118                           	opt stack 16
  4119                           
  4120                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  4121                           
  4122                           ;incstack = 0
  4123  001960  EC91  F00C         	call	_in_low_int	;wreg free
  4124  001964  0100               	movlb	0	; () banked
  4125  001966  51D6               	movf	(?_in_low_int+1)& (0+255),w,b
  4126  001968  0100               	movlb	0	; () banked
  4127  00196A  11D5               	iorwf	?_in_low_int& (0+255),w,b
  4128  00196C  A4D8               	btfss	status,2,c
  4129  00196E  D00F               	goto	l2233
  4130                           
  4131                           ; BSR set to: 0
  4132  001970  EC47  F00E         	call	_in_high_int	;wreg free
  4133  001974  0100               	movlb	0	; () banked
  4134  001976  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  4135  001978  0100               	movlb	0	; () banked
  4136  00197A  11D3               	iorwf	?_in_high_int& (0+255),w,b
  4137  00197C  A4D8               	btfss	status,2,c
  4138  00197E  D007               	goto	l2233
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;interrupts.c: 42: return (1);
  4142  001980  0E00               	movlw	0
  4143  001982  0100               	movlb	0	; () banked
  4144  001984  6FD8               	movwf	(?_in_main+1)& (0+255),b
  4145  001986  0E01               	movlw	1
  4146  001988  0100               	movlb	0	; () banked
  4147  00198A  6FD7               	movwf	?_in_main& (0+255),b
  4148  00198C  0012               	return	
  4149  00198E                     l2233:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;interrupts.c: 44: return (0);
  4153  00198E  0E00               	movlw	0
  4154  001990  0100               	movlb	0	; () banked
  4155  001992  6FD8               	movwf	(?_in_main+1)& (0+255),b
  4156  001994  0E00               	movlw	0
  4157  001996  0100               	movlb	0	; () banked
  4158  001998  6FD7               	movwf	?_in_main& (0+255),b
  4159  00199A  0012               	return	
  4160  00199C                     __end_of_in_main:
  4161                           	opt stack 0
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           prodh	equ	0xFF4
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           postinc0	equ	0xFEE
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           fsr1h	equ	0xFE2
  4173                           fsr1l	equ	0xFE1
  4174                           indf2	equ	0xFDF
  4175                           postinc2	equ	0xFDE
  4176                           postdec2	equ	0xFDD
  4177                           fsr2h	equ	0xFDA
  4178                           fsr2l	equ	0xFD9
  4179                           status	equ	0xFD8
  4180                           
  4181 ;; *************** function _in_low_int *****************
  4182 ;; Defined at:
  4183 ;;		line 30 in file "src/interrupts.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  2   31[BANK0 ] int 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4197 ;;      Params:         0       2       0       0       0
  4198 ;;      Locals:         0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0
  4200 ;;      Totals:         0       2       0       0       0
  4201 ;;Total ram usage:        2 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:   11
  4204 ;; This function calls:
  4205 ;;		_in_high_int
  4206 ;; This function is called by:
  4207 ;;		_in_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text20
  4212  001922                     __ptext20:
  4213                           	opt stack 0
  4214  001922                     _in_low_int:
  4215                           	opt stack 16
  4216                           
  4217                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;incstack = 0
  4221  001922  ACF2               	btfss	intcon,6,c	;volatile
  4222  001924  D007               	goto	l2103
  4223                           
  4224                           ;interrupts.c: 32: return (0);
  4225  001926  0E00               	movlw	0
  4226  001928  0100               	movlb	0	; () banked
  4227  00192A  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4228  00192C  0E00               	movlw	0
  4229  00192E  0100               	movlb	0	; () banked
  4230  001930  6FD5               	movwf	?_in_low_int& (0+255),b
  4231  001932  0012               	return	
  4232  001934                     l2103:
  4233  001934  EC47  F00E         	call	_in_high_int	;wreg free
  4234  001938  0100               	movlb	0	; () banked
  4235  00193A  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  4236  00193C  0100               	movlb	0	; () banked
  4237  00193E  11D3               	iorwf	?_in_high_int& (0+255),w,b
  4238  001940  B4D8               	btfsc	status,2,c
  4239  001942  D007               	goto	l2111
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;interrupts.c: 34: return (0);
  4243  001944  0E00               	movlw	0
  4244  001946  0100               	movlb	0	; () banked
  4245  001948  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4246  00194A  0E00               	movlw	0
  4247  00194C  0100               	movlb	0	; () banked
  4248  00194E  6FD5               	movwf	?_in_low_int& (0+255),b
  4249  001950  0012               	return	
  4250  001952                     l2111:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;interrupts.c: 36: return (1);
  4254  001952  0E00               	movlw	0
  4255  001954  0100               	movlb	0	; () banked
  4256  001956  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4257  001958  0E01               	movlw	1
  4258  00195A  0100               	movlb	0	; () banked
  4259  00195C  6FD5               	movwf	?_in_low_int& (0+255),b
  4260  00195E  0012               	return	
  4261  001960                     __end_of_in_low_int:
  4262                           	opt stack 0
  4263                           tblptru	equ	0xFF8
  4264                           tblptrh	equ	0xFF7
  4265                           tblptrl	equ	0xFF6
  4266                           tablat	equ	0xFF5
  4267                           prodh	equ	0xFF4
  4268                           prodl	equ	0xFF3
  4269                           intcon	equ	0xFF2
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           indf1	equ	0xFE7
  4273                           fsr1h	equ	0xFE2
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           status	equ	0xFD8
  4281                           
  4282 ;; *************** function _in_high_int *****************
  4283 ;; Defined at:
  4284 ;;		line 22 in file "src/interrupts.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2   29[BANK0 ] int 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4298 ;;      Params:         0       2       0       0       0
  4299 ;;      Locals:         0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0
  4301 ;;      Totals:         0       2       0       0       0
  4302 ;;Total ram usage:        2 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:   10
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_in_low_int
  4309 ;;		_in_main
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text21
  4314  001C8E                     __ptext21:
  4315                           	opt stack 0
  4316  001C8E                     _in_high_int:
  4317                           	opt stack 16
  4318                           
  4319                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;incstack = 0
  4323  001C8E  0E00               	movlw	0
  4324  001C90  AEF2               	btfss	intcon,7,c	;volatile
  4325  001C92  0E01               	movlw	1
  4326  001C94  0100               	movlb	0	; () banked
  4327  001C96  6FD3               	movwf	?_in_high_int& (0+255),b
  4328  001C98  0100               	movlb	0	; () banked
  4329  001C9A  6BD4               	clrf	(?_in_high_int+1)& (0+255),b
  4330  001C9C  0012               	return	
  4331  001C9E                     __end_of_in_high_int:
  4332                           	opt stack 0
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           indf1	equ	0xFE7
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function _check_msg *****************
  4353 ;; Defined at:
  4354 ;;		line 220 in file "src/messages.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4357 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      unsigned char 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4369 ;;      Params:         0       2       0       0       0
  4370 ;;      Locals:         0       0       0       0       0
  4371 ;;      Temps:          0       1       0       0       0
  4372 ;;      Totals:         0       3       0       0       0
  4373 ;;Total ram usage:        3 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:   10
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_block_on_To_msgqueues
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text22
  4384  001A9E                     __ptext22:
  4385                           	opt stack 0
  4386  001A9E                     _check_msg:
  4387                           	opt stack 18
  4388                           
  4389                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;incstack = 0
  4393  001A9E  0100               	movlb	0	; () banked
  4394  001AA0  EE20 F035          	lfsr	2,53
  4395  001AA4  0100               	movlb	0	; () banked
  4396  001AA6  51D3               	movf	check_msg@qptr& (0+255),w,b
  4397  001AA8  26D9               	addwf	fsr2l,f,c
  4398  001AAA  0100               	movlb	0	; () banked
  4399  001AAC  51D4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4400  001AAE  22DA               	addwfc	fsr2h,f,c
  4401  001AB0  50DF               	movf	indf2,w,c
  4402  001AB2  0100               	movlb	0	; () banked
  4403  001AB4  6FD5               	movwf	??_check_msg& (0+255),b
  4404  001AB6  0100               	movlb	0	; () banked
  4405  001AB8  51D5               	movf	??_check_msg& (0+255),w,b
  4406  001ABA  0D0D               	mullw	13
  4407  001ABC  50F3               	movf	prodl,w,c
  4408  001ABE  0100               	movlb	0	; () banked
  4409  001AC0  25D3               	addwf	check_msg@qptr& (0+255),w,b
  4410  001AC2  6ED9               	movwf	fsr2l,c
  4411  001AC4  50F4               	movf	prodh,w,c
  4412  001AC6  0100               	movlb	0	; () banked
  4413  001AC8  21D4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4414  001ACA  6EDA               	movwf	fsr2h,c
  4415  001ACC  50DF               	movf	indf2,w,c
  4416  001ACE  0012               	return	
  4417  001AD0                     __end_of_check_msg:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           postinc0	equ	0xFEE
  4427                           wreg	equ	0xFE8
  4428                           indf1	equ	0xFE7
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           postinc2	equ	0xFDE
  4433                           postdec2	equ	0xFDD
  4434                           fsr2h	equ	0xFDA
  4435                           fsr2l	equ	0xFD9
  4436                           status	equ	0xFD8
  4437                           
  4438 ;; *************** function _Delay1KTCYx *****************
  4439 ;; Defined at:
  4440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  unit            1    wreg     unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  unit            1   29[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4454 ;;      Params:         0       0       0       0       0
  4455 ;;      Locals:         0       1       0       0       0
  4456 ;;      Temps:          0       0       0       0       0
  4457 ;;      Totals:         0       1       0       0       0
  4458 ;;Total ram usage:        1 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:   10
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_block_on_To_msgqueues
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text23
  4469  001C56                     __ptext23:
  4470                           	opt stack 0
  4471  001C56                     _Delay1KTCYx:
  4472                           	opt stack 18
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;incstack = 0
  4476                           ;Delay1KTCYx@unit stored from wreg
  4477  001C56  0100               	movlb	0	; () banked
  4478  001C58  6FD3               	movwf	Delay1KTCYx@unit& (0+255),b
  4479  001C5A                     l730:
  4480                           
  4481                           ; BSR set to: 0
  4482                           
  4483                           ; BSR set to: 0
  4484  001C5A  0EFA               	movlw	250
  4485  001C5C                     u2277:
  4486  001C5C  F000               	nop	
  4487  001C5E  2EE8               	decfsz	wreg,f,c
  4488  001C60  D7FD               	goto	u2277
  4489  001C62  0100               	movlb	0	; () banked
  4490  001C64  2FD3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4491  001C66  D7F9               	goto	l730
  4492  001C68  0012               	return	
  4493  001C6A                     __end_of_Delay1KTCYx:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           indf1	equ	0xFE7
  4505                           fsr1h	equ	0xFE2
  4506                           fsr1l	equ	0xFE1
  4507                           indf2	equ	0xFDF
  4508                           postinc2	equ	0xFDE
  4509                           postdec2	equ	0xFDD
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function _WriteTimer1 *****************
  4515 ;; Defined at:
  4516 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  timer1          2   29[BANK0 ] unsigned int 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  timer           2   31[BANK0 ] struct Timers
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		None
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4530 ;;      Params:         0       2       0       0       0
  4531 ;;      Locals:         0       2       0       0       0
  4532 ;;      Temps:          0       0       0       0       0
  4533 ;;      Totals:         0       4       0       0       0
  4534 ;;Total ram usage:        4 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:   10
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text24
  4545  001C6A                     __ptext24:
  4546                           	opt stack 0
  4547  001C6A                     _WriteTimer1:
  4548                           	opt stack 19
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;incstack = 0
  4552  001C6A  C0D3  F0D5         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4553  001C6E  C0D4  F0D6         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4554  001C72  C0D6  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4555  001C76  C0D5  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4556  001C7A  0012               	return	
  4557  001C7C                     __end_of_WriteTimer1:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           indf1	equ	0xFE7
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           indf2	equ	0xFDF
  4572                           postinc2	equ	0xFDE
  4573                           postdec2	equ	0xFDD
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _ToMainLow_recvmsg *****************
  4579 ;; Defined at:
  4580 ;;		line 112 in file "src/messages.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  maxlength       1    wreg     unsigned char 
  4583 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  4584 ;;		 -> main@msgtype(1), 
  4585 ;;  data            2   14[BANK1 ] PTR void 
  4586 ;;		 -> main@msgbuffer(11), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  maxlength       1   41[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      char 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4598 ;;      Params:         0       0       4       0       0
  4599 ;;      Locals:         0       1       0       0       0
  4600 ;;      Temps:          0       0       0       0       0
  4601 ;;      Totals:         0       1       4       0       0
  4602 ;;Total ram usage:        5 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:   12
  4605 ;; This function calls:
  4606 ;;		_recv_msg
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text25
  4613  00199C                     __ptext25:
  4614                           	opt stack 0
  4615  00199C                     _ToMainLow_recvmsg:
  4616                           	opt stack 17
  4617                           
  4618                           ;incstack = 0
  4619                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4620  00199C  0100               	movlb	0	; () banked
  4621  00199E  6FDF               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4625  0019A0  0100               	movlb	0	; () banked
  4626  0019A2  0E00               	movlw	high _ToMainLow_MQ
  4627  0019A4  0101               	movlb	1	; () banked
  4628  0019A6  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  4629  0019A8  0100               	movlb	0	; () banked
  4630  0019AA  0E80               	movlw	low _ToMainLow_MQ
  4631  0019AC  0101               	movlb	1	; () banked
  4632  0019AE  6F00               	movwf	recv_msg@qptr& (0+255),b
  4633  0019B0  C0DF  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4634  0019B4  0101               	movlb	1	; () banked
  4635  0019B6  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4636  0019BA  0101               	movlb	1	; () banked
  4637  0019BC  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4638  0019C0  0101               	movlb	1	; () banked
  4639  0019C2  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4640  0019C6  0101               	movlb	1	; () banked
  4641  0019C8  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4642  0019CC  ECF4  F005         	call	_recv_msg	;wreg free
  4643  0019D0  0012               	return	
  4644  0019D2                     __end_of_ToMainLow_recvmsg:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           prodh	equ	0xFF4
  4651                           prodl	equ	0xFF3
  4652                           intcon	equ	0xFF2
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           indf1	equ	0xFE7
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           indf2	equ	0xFDF
  4659                           postinc2	equ	0xFDE
  4660                           postdec2	equ	0xFDD
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function _ToMainHigh_recvmsg *****************
  4666 ;; Defined at:
  4667 ;;		line 135 in file "src/messages.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  maxlength       1    wreg     unsigned char 
  4670 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  4671 ;;		 -> main@msgtype(1), 
  4672 ;;  data            2   14[BANK1 ] PTR void 
  4673 ;;		 -> main@msgbuffer(11), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  maxlength       1   41[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      char 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4685 ;;      Params:         0       0       4       0       0
  4686 ;;      Locals:         0       1       0       0       0
  4687 ;;      Temps:          0       0       0       0       0
  4688 ;;      Totals:         0       1       4       0       0
  4689 ;;Total ram usage:        5 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:   12
  4692 ;; This function calls:
  4693 ;;		_recv_msg
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text26
  4700  0019D2                     __ptext26:
  4701                           	opt stack 0
  4702  0019D2                     _ToMainHigh_recvmsg:
  4703                           	opt stack 17
  4704                           
  4705                           ;incstack = 0
  4706                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4707  0019D2  0100               	movlb	0	; () banked
  4708  0019D4  6FDF               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4712  0019D6  0101               	movlb	1	; () banked
  4713  0019D8  0E01               	movlw	high _ToMainHigh_MQ
  4714  0019DA  0101               	movlb	1	; () banked
  4715  0019DC  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  4716  0019DE  0101               	movlb	1	; () banked
  4717  0019E0  0EB6               	movlw	low _ToMainHigh_MQ
  4718  0019E2  0101               	movlb	1	; () banked
  4719  0019E4  6F00               	movwf	recv_msg@qptr& (0+255),b
  4720  0019E6  C0DF  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4721  0019EA  0101               	movlb	1	; () banked
  4722  0019EC  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4723  0019F0  0101               	movlb	1	; () banked
  4724  0019F2  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4725  0019F6  0101               	movlb	1	; () banked
  4726  0019F8  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4727  0019FC  0101               	movlb	1	; () banked
  4728  0019FE  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4729  001A02  ECF4  F005         	call	_recv_msg	;wreg free
  4730  001A06  0012               	return	
  4731  001A08                     __end_of_ToMainHigh_recvmsg:
  4732                           	opt stack 0
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           indf1	equ	0xFE7
  4743                           fsr1h	equ	0xFE2
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           postinc2	equ	0xFDE
  4747                           postdec2	equ	0xFDD
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _recv_msg *****************
  4753 ;; Defined at:
  4754 ;;		line 63 in file "src/messages.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4757 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4758 ;;  maxlength       1    2[BANK1 ] unsigned char 
  4759 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  4760 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4761 ;;  data            2    5[BANK1 ] PTR void 
  4762 ;;		 -> NULL(0), main@msgbuffer(11), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  4765 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4766 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4767 ;;  tlength         2    8[BANK1 ] unsigned int 
  4768 ;;  slot            1    7[BANK1 ] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      char 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4778 ;;      Params:         0       0       7       0       0
  4779 ;;      Locals:         0       0       5       0       0
  4780 ;;      Temps:          0       2       0       0       0
  4781 ;;      Totals:         0       2      12       0       0
  4782 ;;Total ram usage:       14 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:   11
  4785 ;; This function calls:
  4786 ;;		_memcpy
  4787 ;; This function is called by:
  4788 ;;		_ToMainLow_recvmsg
  4789 ;;		_ToMainHigh_recvmsg
  4790 ;;		_FromMainHigh_recvmsg
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text27
  4795  000BE8                     __ptext27:
  4796                           	opt stack 0
  4797  000BE8                     _recv_msg:
  4798                           	opt stack 17
  4799                           
  4800                           ;messages.c: 64: unsigned char slot;
  4801                           ;messages.c: 68: msg *qmsg;
  4802                           ;messages.c: 69: size_t tlength;
  4803                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4804                           
  4805                           ;incstack = 0
  4806  000BE8  0101               	movlb	1	; () banked
  4807  000BEA  EE20 F035          	lfsr	2,53
  4808  000BEE  0101               	movlb	1	; () banked
  4809  000BF0  5100               	movf	recv_msg@qptr& (0+255),w,b
  4810  000BF2  26D9               	addwf	fsr2l,f,c
  4811  000BF4  0101               	movlb	1	; () banked
  4812  000BF6  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4813  000BF8  22DA               	addwfc	fsr2h,f,c
  4814  000BFA  50DF               	movf	indf2,w,c
  4815  000BFC  0101               	movlb	1	; () banked
  4816  000BFE  6F07               	movwf	recv_msg@slot& (0+255),b
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4820  000C00  0101               	movlb	1	; () banked
  4821  000C02  5107               	movf	recv_msg@slot& (0+255),w,b
  4822  000C04  0D0D               	mullw	13
  4823  000C06  50F3               	movf	prodl,w,c
  4824  000C08  0101               	movlb	1	; () banked
  4825  000C0A  2500               	addwf	recv_msg@qptr& (0+255),w,b
  4826  000C0C  0101               	movlb	1	; () banked
  4827  000C0E  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  4828  000C10  50F4               	movf	prodh,w,c
  4829  000C12  0101               	movlb	1	; () banked
  4830  000C14  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4831  000C16  0101               	movlb	1	; () banked
  4832  000C18  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4833                           
  4834                           ; BSR set to: 1
  4835                           ;messages.c: 74: if (qmsg->full == 1) {
  4836  000C1A  0E01               	movlw	1
  4837  000C1C  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4838  000C20  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4839  000C24  62DF               	cpfseq	indf2,c
  4840  000C26  D06F               	goto	l3101
  4841                           
  4842                           ; BSR set to: 1
  4843                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4844  000C28  0101               	movlb	1	; () banked
  4845  000C2A  EE20 F001          	lfsr	2,1
  4846  000C2E  0101               	movlb	1	; () banked
  4847  000C30  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4848  000C32  26D9               	addwf	fsr2l,f,c
  4849  000C34  0101               	movlb	1	; () banked
  4850  000C36  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4851  000C38  22DA               	addwfc	fsr2h,f,c
  4852  000C3A  50DF               	movf	indf2,w,c
  4853  000C3C  0101               	movlb	1	; () banked
  4854  000C3E  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  4855  000C40  B0D8               	btfsc	status,0,c
  4856  000C42  D002               	goto	l3085
  4857                           
  4858                           ; BSR set to: 1
  4859                           ;messages.c: 77: return (-3);
  4860  000C44  0EFD               	movlw	253
  4861  000C46  0012               	return	
  4862  000C48                     l3085:
  4863                           
  4864                           ; BSR set to: 1
  4865                           ;messages.c: 78: }
  4866                           ;messages.c: 80: tlength = qmsg->length;
  4867  000C48  0101               	movlb	1	; () banked
  4868  000C4A  EE20 F001          	lfsr	2,1
  4869  000C4E  0101               	movlb	1	; () banked
  4870  000C50  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4871  000C52  26D9               	addwf	fsr2l,f,c
  4872  000C54  0101               	movlb	1	; () banked
  4873  000C56  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4874  000C58  22DA               	addwfc	fsr2h,f,c
  4875  000C5A  50DF               	movf	indf2,w,c
  4876  000C5C  0100               	movlb	0	; () banked
  4877  000C5E  6FDD               	movwf	??_recv_msg& (0+255),b
  4878  000C60  0100               	movlb	0	; () banked
  4879  000C62  51DD               	movf	??_recv_msg& (0+255),w,b
  4880  000C64  0101               	movlb	1	; () banked
  4881  000C66  6F08               	movwf	recv_msg@tlength& (0+255),b
  4882  000C68  0101               	movlb	1	; () banked
  4883  000C6A  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4887  000C6C  0101               	movlb	1	; () banked
  4888  000C6E  0100               	movlb	0	; () banked
  4889  000C70  C106  F0D4         	movff	recv_msg@data+1,memcpy@d1+1
  4890  000C74  0101               	movlb	1	; () banked
  4891  000C76  0100               	movlb	0	; () banked
  4892  000C78  C105  F0D3         	movff	recv_msg@data,memcpy@d1
  4893  000C7C  0E03               	movlw	3
  4894  000C7E  0101               	movlb	1	; () banked
  4895  000C80  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  4896  000C82  0100               	movlb	0	; () banked
  4897  000C84  6FDD               	movwf	??_recv_msg& (0+255),b
  4898  000C86  0E00               	movlw	0
  4899  000C88  0101               	movlb	1	; () banked
  4900  000C8A  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4901  000C8C  0100               	movlb	0	; () banked
  4902  000C8E  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  4903  000C90  C0DD  F0D5         	movff	??_recv_msg,memcpy@s1
  4904  000C94  C0DE  F0D6         	movff	??_recv_msg+1,memcpy@s1+1
  4905  000C98  C108  F0D7         	movff	recv_msg@tlength,memcpy@n
  4906  000C9C  C109  F0D8         	movff	recv_msg@tlength+1,memcpy@n+1
  4907  000CA0  ECDD  F00B         	call	_memcpy	;wreg free
  4908                           
  4909                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4910  000CA4  0101               	movlb	1	; () banked
  4911  000CA6  EE20 F035          	lfsr	2,53
  4912  000CAA  0101               	movlb	1	; () banked
  4913  000CAC  5100               	movf	recv_msg@qptr& (0+255),w,b
  4914  000CAE  26D9               	addwf	fsr2l,f,c
  4915  000CB0  0101               	movlb	1	; () banked
  4916  000CB2  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4917  000CB4  22DA               	addwfc	fsr2h,f,c
  4918  000CB6  0101               	movlb	1	; () banked
  4919  000CB8  EE10 F035          	lfsr	1,53
  4920  000CBC  0101               	movlb	1	; () banked
  4921  000CBE  5100               	movf	recv_msg@qptr& (0+255),w,b
  4922  000CC0  26E1               	addwf	fsr1l,f,c
  4923  000CC2  0101               	movlb	1	; () banked
  4924  000CC4  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4925  000CC6  22E2               	addwfc	fsr1h,f,c
  4926  000CC8  50E7               	movf	indf1,w,c
  4927  000CCA  0100               	movlb	0	; () banked
  4928  000CCC  6FDD               	movwf	??_recv_msg& (0+255),b
  4929  000CCE  0100               	movlb	0	; () banked
  4930  000CD0  29DD               	incf	??_recv_msg& (0+255),w,b
  4931  000CD2  0B03               	andlw	3
  4932  000CD4  6EDF               	movwf	indf2,c
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4936  000CD6  0101               	movlb	1	; () banked
  4937  000CD8  EE20 F002          	lfsr	2,2
  4938  000CDC  0101               	movlb	1	; () banked
  4939  000CDE  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4940  000CE0  26D9               	addwf	fsr2l,f,c
  4941  000CE2  0101               	movlb	1	; () banked
  4942  000CE4  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4943  000CE6  22DA               	addwfc	fsr2h,f,c
  4944  000CE8  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4945  000CEC  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4946  000CF0  CFDF FFE7          	movff	indf2,indf1
  4947                           
  4948                           ; BSR set to: 1
  4949                           ;messages.c: 91: qmsg->full = 0;
  4950  000CF4  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4951  000CF8  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4952  000CFC  0E00               	movlw	0
  4953  000CFE  6EDF               	movwf	indf2,c
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;messages.c: 92: return (tlength);
  4957  000D00  0101               	movlb	1	; () banked
  4958  000D02  5108               	movf	recv_msg@tlength& (0+255),w,b
  4959  000D04  0012               	return	
  4960  000D06                     l3101:
  4961                           
  4962                           ; BSR set to: 1
  4963                           ;messages.c: 94: return (-4);
  4964  000D06  0EFC               	movlw	252
  4965  000D08  0012               	return	
  4966  000D0A                     __end_of_recv_msg:
  4967                           	opt stack 0
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           prodh	equ	0xFF4
  4973                           prodl	equ	0xFF3
  4974                           intcon	equ	0xFF2
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           indf1	equ	0xFE7
  4978                           fsr1h	equ	0xFE2
  4979                           fsr1l	equ	0xFE1
  4980                           indf2	equ	0xFDF
  4981                           postinc2	equ	0xFDE
  4982                           postdec2	equ	0xFDD
  4983                           fsr2h	equ	0xFDA
  4984                           fsr2l	equ	0xFD9
  4985                           status	equ	0xFD8
  4986                           
  4987 ;; *************** function _memcpy *****************
  4988 ;; Defined at:
  4989 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  d1              2   29[BANK0 ] PTR void 
  4992 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4993 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4994 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4995 ;;  s1              2   31[BANK0 ] PTR const void 
  4996 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4997 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4998 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  4999 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5000 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  5001 ;;		 -> main@uc(5), 
  5002 ;;  n               2   33[BANK0 ] unsigned int 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  5005 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5006 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5007 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  5008 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5009 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  5010 ;;		 -> main@uc(5), 
  5011 ;;  d               2   35[BANK0 ] PTR unsigned char 
  5012 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5013 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5014 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2   29[BANK0 ] PTR void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5024 ;;      Params:         0       6       0       0       0
  5025 ;;      Locals:         0       4       0       0       0
  5026 ;;      Temps:          0       0       0       0       0
  5027 ;;      Totals:         0      10       0       0       0
  5028 ;;Total ram usage:       10 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:   10
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_send_msg
  5035 ;;		_recv_msg
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text28
  5040  0017BA                     __ptext28:
  5041                           	opt stack 0
  5042  0017BA                     _memcpy:
  5043                           	opt stack 16
  5044                           
  5045                           ; BSR set to: 1
  5046                           ;incstack = 0
  5047  0017BA  0100               	movlb	0	; () banked
  5048  0017BC  C0D6  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  5049  0017C0  0100               	movlb	0	; () banked
  5050  0017C2  C0D5  F0DB         	movff	memcpy@s1,memcpy@s
  5051  0017C6  0100               	movlb	0	; () banked
  5052  0017C8  C0D4  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  5053  0017CC  0100               	movlb	0	; () banked
  5054  0017CE  C0D3  F0D9         	movff	memcpy@d1,memcpy@d
  5055  0017D2  D010               	goto	l3013
  5056  0017D4                     l3007:
  5057                           
  5058                           ; BSR set to: 0
  5059  0017D4  C0DB  FFD9         	movff	memcpy@s,fsr2l
  5060  0017D8  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  5061  0017DC  C0D9  FFE1         	movff	memcpy@d,fsr1l
  5062  0017E0  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  5063  0017E4  CFDF FFE7          	movff	indf2,indf1
  5064                           
  5065                           ; BSR set to: 0
  5066  0017E8  0100               	movlb	0	; () banked
  5067  0017EA  4BDB               	infsnz	memcpy@s& (0+255),f,b
  5068  0017EC  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  5069                           
  5070                           ; BSR set to: 0
  5071  0017EE  0100               	movlb	0	; () banked
  5072  0017F0  4BD9               	infsnz	memcpy@d& (0+255),f,b
  5073  0017F2  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  5074  0017F4                     l3013:
  5075                           
  5076                           ; BSR set to: 0
  5077  0017F4  0100               	movlb	0	; () banked
  5078  0017F6  07D7               	decf	memcpy@n& (0+255),f,b
  5079  0017F8  A0D8               	btfss	status,0,c
  5080  0017FA  07D8               	decf	(memcpy@n+1)& (0+255),f,b
  5081  0017FC  0100               	movlb	0	; () banked
  5082  0017FE  29D7               	incf	memcpy@n& (0+255),w,b
  5083  001800  B4D8               	btfsc	status,2,c
  5084  001802  29D8               	incf	(memcpy@n+1)& (0+255),w,b
  5085  001804  B4D8               	btfsc	status,2,c
  5086                           
  5087                           ; BSR set to: 0
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;	Return value of _memcpy is never used
  5091  001806  0012               	return	
  5092  001808  D7E5               	goto	l3007
  5093  00180A                     __end_of_memcpy:
  5094                           	opt stack 0
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           prodh	equ	0xFF4
  5100                           prodl	equ	0xFF3
  5101                           intcon	equ	0xFF2
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           indf1	equ	0xFE7
  5105                           fsr1h	equ	0xFE2
  5106                           fsr1l	equ	0xFE1
  5107                           indf2	equ	0xFDF
  5108                           postinc2	equ	0xFDE
  5109                           postdec2	equ	0xFDD
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function _OpenUSART *****************
  5115 ;; Defined at:
  5116 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  config          1    wreg     unsigned char 
  5119 ;;  spbrg           2   29[BANK0 ] unsigned int 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  config          1   34[BANK0 ] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		wreg, status,2
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5131 ;;      Params:         0       2       0       0       0
  5132 ;;      Locals:         0       1       0       0       0
  5133 ;;      Temps:          0       3       0       0       0
  5134 ;;      Totals:         0       6       0       0       0
  5135 ;;Total ram usage:        6 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:   10
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text29
  5146  0014E8                     __ptext29:
  5147                           	opt stack 0
  5148  0014E8                     _OpenUSART:
  5149                           	opt stack 19
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;incstack = 0
  5153                           ;OpenUSART@config stored from wreg
  5154  0014E8  0100               	movlb	0	; () banked
  5155  0014EA  6FD8               	movwf	OpenUSART@config& (0+255),b
  5156                           
  5157                           ; BSR set to: 0
  5158  0014EC  0E00               	movlw	0
  5159  0014EE  6EAC               	movwf	4012,c	;volatile
  5160  0014F0  0E00               	movlw	0
  5161  0014F2  6EAB               	movwf	4011,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164  0014F4  0100               	movlb	0	; () banked
  5165  0014F6  B1D8               	btfsc	OpenUSART@config& (0+255),0,b
  5166                           
  5167                           ; BSR set to: 0
  5168  0014F8  88AC               	bsf	4012,4,c	;volatile
  5169                           
  5170                           ; BSR set to: 0
  5171                           
  5172                           ; BSR set to: 0
  5173  0014FA  0100               	movlb	0	; () banked
  5174  0014FC  A3D8               	btfss	OpenUSART@config& (0+255),1,b
  5175  0014FE  D002               	goto	l2709
  5176                           
  5177                           ; BSR set to: 0
  5178  001500  8CAC               	bsf	4012,6,c	;volatile
  5179  001502  8CAB               	bsf	4011,6,c	;volatile
  5180  001504                     l2709:
  5181                           
  5182                           ; BSR set to: 0
  5183  001504  0100               	movlb	0	; () banked
  5184  001506  B5D8               	btfsc	OpenUSART@config& (0+255),2,b
  5185                           
  5186                           ; BSR set to: 0
  5187  001508  8EAC               	bsf	4012,7,c	;volatile
  5188                           
  5189                           ; BSR set to: 0
  5190                           
  5191                           ; BSR set to: 0
  5192  00150A  0100               	movlb	0	; () banked
  5193  00150C  A7D8               	btfss	OpenUSART@config& (0+255),3,b
  5194  00150E  D002               	goto	l482
  5195                           
  5196                           ; BSR set to: 0
  5197  001510  88AB               	bsf	4011,4,c	;volatile
  5198  001512  D001               	goto	l2717
  5199  001514                     l482:
  5200                           
  5201                           ; BSR set to: 0
  5202  001514  8AAB               	bsf	4011,5,c	;volatile
  5203  001516                     l2717:
  5204                           
  5205                           ; BSR set to: 0
  5206  001516  0100               	movlb	0	; () banked
  5207  001518  B9D8               	btfsc	OpenUSART@config& (0+255),4,b
  5208                           
  5209                           ; BSR set to: 0
  5210  00151A  84AC               	bsf	4012,2,c	;volatile
  5211                           
  5212                           ; BSR set to: 0
  5213  00151C  989E               	bcf	3998,4,c	;volatile
  5214                           
  5215                           ; BSR set to: 0
  5216  00151E  0100               	movlb	0	; () banked
  5217  001520  BBD8               	btfsc	OpenUSART@config& (0+255),5,b
  5218                           
  5219                           ; BSR set to: 0
  5220  001522  86AB               	bsf	4011,3,c	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223                           
  5224                           ; BSR set to: 0
  5225  001524  0100               	movlb	0	; () banked
  5226  001526  ADD8               	btfss	OpenUSART@config& (0+255),6,b
  5227  001528  D002               	goto	l486
  5228                           
  5229                           ; BSR set to: 0
  5230  00152A  8A9D               	bsf	3997,5,c	;volatile
  5231  00152C  D001               	goto	l487
  5232  00152E                     l486:
  5233                           
  5234                           ; BSR set to: 0
  5235  00152E  9A9D               	bcf	3997,5,c	;volatile
  5236  001530                     l487:
  5237                           
  5238                           ; BSR set to: 0
  5239  001530  9A9E               	bcf	3998,5,c	;volatile
  5240                           
  5241                           ; BSR set to: 0
  5242  001532  0100               	movlb	0	; () banked
  5243  001534  AFD8               	btfss	OpenUSART@config& (0+255),7,b
  5244  001536  D002               	goto	l488
  5245                           
  5246                           ; BSR set to: 0
  5247  001538  889D               	bsf	3997,4,c	;volatile
  5248  00153A  D001               	goto	l489
  5249  00153C                     l488:
  5250                           
  5251                           ; BSR set to: 0
  5252  00153C  989D               	bcf	3997,4,c	;volatile
  5253  00153E                     l489:
  5254                           
  5255                           ; BSR set to: 0
  5256  00153E  C0D3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259  001542  0100               	movlb	0	; () banked
  5260  001544  C0D4  F0D5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5261  001548  C0D5  F0D6         	movff	??_OpenUSART,??_OpenUSART+1
  5262  00154C  0100               	movlb	0	; () banked
  5263  00154E  6BD7               	clrf	(??_OpenUSART+2)& (0+255),b
  5264  001550  0100               	movlb	0	; () banked
  5265  001552  51D6               	movf	(??_OpenUSART+1)& (0+255),w,b
  5266  001554  6EB0               	movwf	4016,c	;volatile
  5267                           
  5268                           ; BSR set to: 0
  5269  001556  8AAC               	bsf	4012,5,c	;volatile
  5270                           
  5271                           ; BSR set to: 0
  5272  001558  8EAB               	bsf	4011,7,c	;volatile
  5273                           
  5274                           ; BSR set to: 0
  5275  00155A  9C94               	bcf	3988,6,c	;volatile
  5276                           
  5277                           ; BSR set to: 0
  5278  00155C  8E94               	bsf	3988,7,c	;volatile
  5279                           
  5280                           ; BSR set to: 0
  5281  00155E  A8AC               	btfss	4012,4,c	;volatile
  5282  001560  0012               	return	
  5283                           
  5284                           ; BSR set to: 0
  5285  001562  BEAC               	btfsc	4012,7,c	;volatile
  5286  001564  0012               	return	
  5287                           
  5288                           ; BSR set to: 0
  5289  001566  8C94               	bsf	3988,6,c	;volatile
  5290  001568  0012               	return	
  5291  00156A                     __end_of_OpenUSART:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           indf1	equ	0xFE7
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _OpenTimer1 *****************
  5313 ;; Defined at:
  5314 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  config          1    wreg     unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  config          1   29[BANK0 ] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;		None               void
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5328 ;;      Params:         0       0       0       0       0
  5329 ;;      Locals:         0       1       0       0       0
  5330 ;;      Temps:          0       0       0       0       0
  5331 ;;      Totals:         0       1       0       0       0
  5332 ;;Total ram usage:        1 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:   10
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text30
  5343  001AD0                     __ptext30:
  5344                           	opt stack 0
  5345  001AD0                     _OpenTimer1:
  5346                           	opt stack 19
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;incstack = 0
  5350                           ;OpenTimer1@config stored from wreg
  5351  001AD0  0100               	movlb	0	; () banked
  5352  001AD2  6FD3               	movwf	OpenTimer1@config& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355  001AD4  0100               	movlb	0	; () banked
  5356  001AD6  51D3               	movf	OpenTimer1@config& (0+255),w,b
  5357  001AD8  0B7E               	andlw	126
  5358  001ADA  6ECD               	movwf	4045,c	;volatile
  5359                           
  5360                           ; BSR set to: 0
  5361  001ADC  0100               	movlb	0	; () banked
  5362  001ADE  ADD3               	btfss	OpenTimer1@config& (0+255),6,b
  5363  001AE0  D002               	goto	l445
  5364                           
  5365                           ; BSR set to: 0
  5366  001AE2  8ECD               	bsf	4045,7,c	;volatile
  5367  001AE4  D001               	goto	l2689
  5368  001AE6                     l445:
  5369                           
  5370                           ; BSR set to: 0
  5371  001AE6  9ECD               	bcf	4045,7,c	;volatile
  5372  001AE8                     l2689:
  5373                           
  5374                           ; BSR set to: 0
  5375  001AE8  0E00               	movlw	0
  5376  001AEA  6ECF               	movwf	4047,c	;volatile
  5377  001AEC  0E00               	movlw	0
  5378  001AEE  6ECE               	movwf	4046,c	;volatile
  5379                           
  5380                           ; BSR set to: 0
  5381  001AF0  909E               	bcf	3998,0,c	;volatile
  5382                           
  5383                           ; BSR set to: 0
  5384  001AF2  0100               	movlb	0	; () banked
  5385  001AF4  AFD3               	btfss	OpenTimer1@config& (0+255),7,b
  5386  001AF6  D002               	goto	l447
  5387                           
  5388                           ; BSR set to: 0
  5389  001AF8  809D               	bsf	3997,0,c	;volatile
  5390  001AFA  D001               	goto	l448
  5391  001AFC                     l447:
  5392                           
  5393                           ; BSR set to: 0
  5394  001AFC  909D               	bcf	3997,0,c	;volatile
  5395  001AFE                     l448:
  5396                           
  5397                           ; BSR set to: 0
  5398  001AFE  80CD               	bsf	4045,0,c	;volatile
  5399                           
  5400                           ; BSR set to: 0
  5401  001B00  0012               	return	
  5402  001B02                     __end_of_OpenTimer1:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           postinc0	equ	0xFEE
  5412                           wreg	equ	0xFE8
  5413                           indf1	equ	0xFE7
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           indf2	equ	0xFDF
  5417                           postinc2	equ	0xFDE
  5418                           postdec2	equ	0xFDD
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _InterruptHandlerLow *****************
  5424 ;; Defined at:
  5425 ;;		line 122 in file "src/interrupts.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5439 ;;      Params:         0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0
  5441 ;;      Temps:         17       0       0       0       0
  5442 ;;      Totals:        17       0       0       0       0
  5443 ;;Total ram usage:       17 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    9
  5446 ;; This function calls:
  5447 ;;		_timer1_int_handler
  5448 ;;		_uart_recv_int_handler
  5449 ;;		_uart_trans_int_handler
  5450 ;; This function is called by:
  5451 ;;		Interrupt level 1
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	intcodelo
  5456  000018                     __pintcodelo:
  5457                           	opt stack 0
  5458  000018                     _InterruptHandlerLow:
  5459                           	opt stack 16
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;incstack = 0
  5463  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5464  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5465  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5466  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5467  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5468  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5469  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5470  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5471  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5472  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5473  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5474  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5475  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5476  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5477  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5478  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5479  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5480                           
  5481                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5482  00005C  A09E               	btfss	3998,0,c	;volatile
  5483  00005E  D003               	goto	i1l2875
  5484                           
  5485                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5486  000060  909E               	bcf	3998,0,c	;volatile
  5487                           
  5488                           ;interrupts.c: 126: timer1_int_handler();
  5489  000062  EC81  F00D         	call	_timer1_int_handler	;wreg free
  5490  000066                     i1l2875:
  5491                           
  5492                           ;interrupts.c: 127: }
  5493                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5494  000066  AA9E               	btfss	3998,5,c	;volatile
  5495  000068  D003               	goto	i1l2881
  5496                           
  5497                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5498  00006A  9A9E               	bcf	3998,5,c	;volatile
  5499                           
  5500                           ;interrupts.c: 132: uart_recv_int_handler();
  5501  00006C  EC2A  F00A         	call	_uart_recv_int_handler	;wreg free
  5502  000070                     i1l2881:
  5503                           
  5504                           ;interrupts.c: 133: }
  5505                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5506  000070  B89E               	btfsc	3998,4,c	;volatile
  5507  000072  A89D               	btfss	3997,4,c	;volatile
  5508  000074  D002               	goto	i1l52
  5509                           
  5510                           ;interrupts.c: 137: uart_trans_int_handler();
  5511  000076  ECB2  F00B         	call	_uart_trans_int_handler	;wreg free
  5512  00007A                     i1l52:
  5513  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5514  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5515  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5516  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5517  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5518  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5519  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5520  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5521  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5522  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5523  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5524  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5525  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5526  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5527  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5528  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5529  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5530  0000BE  0010               	retfie	
  5531  0000C0                     __end_of_InterruptHandlerLow:
  5532                           	opt stack 0
  5533                           pclatu	equ	0xFFB
  5534                           pclath	equ	0xFFA
  5535                           tblptru	equ	0xFF8
  5536                           tblptrh	equ	0xFF7
  5537                           tblptrl	equ	0xFF6
  5538                           tablat	equ	0xFF5
  5539                           prodh	equ	0xFF4
  5540                           prodl	equ	0xFF3
  5541                           intcon	equ	0xFF2
  5542                           postinc0	equ	0xFEE
  5543                           fsr0h	equ	0xFEA
  5544                           fsr0l	equ	0xFE9
  5545                           wreg	equ	0xFE8
  5546                           indf1	equ	0xFE7
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           bsr	equ	0xFE0
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _uart_trans_int_handler *****************
  5558 ;; Defined at:
  5559 ;;		line 11 in file "src/my_uart.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  data            2   29[COMRAM] PTR unsigned char 
  5564 ;;		 -> NULL(0), 
  5565 ;;  length          1   33[COMRAM] char 
  5566 ;;  curIndex        1   32[COMRAM] unsigned char 
  5567 ;;  msgtype         1   31[COMRAM] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;		None               void
  5570 ;; Registers used:
  5571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5577 ;;      Params:         0       0       0       0       0
  5578 ;;      Locals:         5       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0
  5580 ;;      Totals:         5       0       0       0       0
  5581 ;;Total ram usage:        5 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    8
  5584 ;; This function calls:
  5585 ;;		_FromMainLow_recvmsg
  5586 ;; This function is called by:
  5587 ;;		_InterruptHandlerLow
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text32
  5592  001764                     __ptext32:
  5593                           	opt stack 0
  5594  001764                     _uart_trans_int_handler:
  5595                           	opt stack 16
  5596                           
  5597                           ;my_uart.c: 13: unsigned char* data = (0);
  5598                           
  5599                           ;incstack = 0
  5600  001764  0E00               	movlw	0
  5601  001766  6E1F               	movwf	uart_trans_int_handler@data+1,c
  5602  001768  0E00               	movlw	0
  5603  00176A  6E1E               	movwf	uart_trans_int_handler@data,c
  5604                           
  5605                           ;my_uart.c: 14: unsigned char msgtype;
  5606                           ;my_uart.c: 15: unsigned char curIndex;
  5607                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5608  00176C  0E00               	movlw	high uart_trans_int_handler@msgtype
  5609  00176E  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5610  001770  0E20               	movlw	low uart_trans_int_handler@msgtype
  5611  001772  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5612  001774  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5613  001778  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5614  00177C  0E0A               	movlw	10
  5615  00177E  ECC4  F00D         	call	_FromMainLow_recvmsg
  5616  001782  6E22               	movwf	uart_trans_int_handler@length,c
  5617                           
  5618                           ;my_uart.c: 17: if (length < 0) {
  5619  001784  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5620  001786  D017               	goto	i1l361
  5621                           
  5622                           ;my_uart.c: 26: curIndex = 0;
  5623                           
  5624                           ;my_uart.c: 24: }
  5625                           ;my_uart.c: 25: } else {
  5626                           
  5627                           ;my_uart.c: 22: else{
  5628                           
  5629                           ;my_uart.c: 21: }
  5630  001788  0E00               	movlw	0
  5631  00178A  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5632                           
  5633                           ;my_uart.c: 27: while(curIndex < length){
  5634  00178C  D00D               	goto	i1l2641
  5635  00178E                     i1l364:
  5636  00178E  A2AC               	btfss	4012,1,c	;volatile
  5637  001790  D7FE               	goto	i1l364
  5638                           
  5639                           ;my_uart.c: 33: TXREG = data[curIndex];
  5640  001792  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5641  001794  0D01               	mullw	1
  5642  001796  50F3               	movf	prodl,w,c
  5643  001798  241E               	addwf	uart_trans_int_handler@data,w,c
  5644  00179A  6ED9               	movwf	fsr2l,c
  5645  00179C  50F4               	movf	prodh,w,c
  5646  00179E  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  5647  0017A0  6EDA               	movwf	fsr2h,c
  5648  0017A2  50DF               	movf	indf2,w,c
  5649  0017A4  6EAD               	movwf	4013,c	;volatile
  5650                           
  5651                           ;my_uart.c: 35: curIndex++;
  5652  0017A6  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5653  0017A8                     i1l2641:
  5654  0017A8  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5655  0017AA  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5656  0017AC  D004               	goto	i1l361
  5657  0017AE  0AFF               	xorlw	255
  5658  0017B0  2422               	addwf	uart_trans_int_handler@length,w,c
  5659  0017B2  B0D8               	btfsc	status,0,c
  5660  0017B4  D7EC               	goto	i1l364
  5661  0017B6                     i1l361:
  5662                           
  5663                           ;my_uart.c: 36: }
  5664                           ;my_uart.c: 37: }
  5665                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5666  0017B6  989D               	bcf	3997,4,c	;volatile
  5667  0017B8  0012               	return	
  5668  0017BA                     __end_of_uart_trans_int_handler:
  5669                           	opt stack 0
  5670                           pclatu	equ	0xFFB
  5671                           pclath	equ	0xFFA
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           intcon	equ	0xFF2
  5679                           postinc0	equ	0xFEE
  5680                           fsr0h	equ	0xFEA
  5681                           fsr0l	equ	0xFE9
  5682                           wreg	equ	0xFE8
  5683                           indf1	equ	0xFE7
  5684                           fsr1h	equ	0xFE2
  5685                           fsr1l	equ	0xFE1
  5686                           bsr	equ	0xFE0
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _FromMainLow_recvmsg *****************
  5695 ;; Defined at:
  5696 ;;		line 159 in file "src/messages.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  maxlength       1    wreg     unsigned char 
  5699 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5700 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5701 ;;  data            2   26[COMRAM] PTR void 
  5702 ;;		 -> NULL(0), 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  maxlength       1   28[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      char 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5714 ;;      Params:         4       0       0       0       0
  5715 ;;      Locals:         1       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0
  5717 ;;      Totals:         5       0       0       0       0
  5718 ;;Total ram usage:        5 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    7
  5721 ;; This function calls:
  5722 ;;		i1_recv_msg
  5723 ;; This function is called by:
  5724 ;;		_uart_trans_int_handler
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text33
  5729  001B88                     __ptext33:
  5730                           	opt stack 0
  5731  001B88                     _FromMainLow_recvmsg:
  5732                           	opt stack 16
  5733                           
  5734                           ;incstack = 0
  5735                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5736  001B88  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5737                           
  5738                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5739  001B8A  0101               	movlb	1	; () banked
  5740  001B8C  0E01               	movlw	high _FromMainLow_MQ
  5741  001B8E  6E0C               	movwf	i1recv_msg@qptr+1,c
  5742  001B90  0101               	movlb	1	; () banked
  5743  001B92  0E80               	movlw	low _FromMainLow_MQ
  5744  001B94  6E0B               	movwf	i1recv_msg@qptr,c
  5745  001B96  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5746  001B9A  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5747  001B9E  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5748  001BA2  6A11               	clrf	i1recv_msg@data+1,c
  5749  001BA4  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5750  001BA8  ECEF  F007         	call	i1_recv_msg	;wreg free
  5751  001BAC  0012               	return	
  5752  001BAE                     __end_of_FromMainLow_recvmsg:
  5753                           	opt stack 0
  5754                           pclatu	equ	0xFFB
  5755                           pclath	equ	0xFFA
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           intcon	equ	0xFF2
  5763                           postinc0	equ	0xFEE
  5764                           fsr0h	equ	0xFEA
  5765                           fsr0l	equ	0xFE9
  5766                           wreg	equ	0xFE8
  5767                           indf1	equ	0xFE7
  5768                           fsr1h	equ	0xFE2
  5769                           fsr1l	equ	0xFE1
  5770                           bsr	equ	0xFE0
  5771                           indf2	equ	0xFDF
  5772                           postinc2	equ	0xFDE
  5773                           postdec2	equ	0xFDD
  5774                           fsr2h	equ	0xFDA
  5775                           fsr2l	equ	0xFD9
  5776                           status	equ	0xFD8
  5777                           
  5778 ;; *************** function i1_recv_msg *****************
  5779 ;; Defined at:
  5780 ;;		line 63 in file "src/messages.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5783 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5784 ;;  maxlength       1   12[COMRAM] unsigned char 
  5785 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5786 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5787 ;;  data            2   15[COMRAM] PTR void 
  5788 ;;		 -> NULL(0), main@msgbuffer(11), 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5791 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5792 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5793 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5794 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      char 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5804 ;;      Params:         7       0       0       0       0
  5805 ;;      Locals:         5       0       0       0       0
  5806 ;;      Temps:          2       0       0       0       0
  5807 ;;      Totals:        14       0       0       0       0
  5808 ;;Total ram usage:       14 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    6
  5811 ;; This function calls:
  5812 ;;		i1_memcpy
  5813 ;; This function is called by:
  5814 ;;		_FromMainLow_recvmsg
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text34
  5819  000FDE                     __ptext34:
  5820                           	opt stack 0
  5821  000FDE                     i1_recv_msg:
  5822                           	opt stack 16
  5823                           
  5824                           ;messages.c: 64: unsigned char slot;
  5825                           ;messages.c: 68: msg *qmsg;
  5826                           ;messages.c: 69: size_t tlength;
  5827                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5828                           
  5829                           ;incstack = 0
  5830  000FDE  EE20 F035          	lfsr	2,53
  5831  000FE2  500B               	movf	i1recv_msg@qptr,w,c
  5832  000FE4  26D9               	addwf	fsr2l,f,c
  5833  000FE6  500C               	movf	i1recv_msg@qptr+1,w,c
  5834  000FE8  22DA               	addwfc	fsr2h,f,c
  5835  000FEA  50DF               	movf	indf2,w,c
  5836  000FEC  6E14               	movwf	i1recv_msg@slot,c
  5837                           
  5838                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5839  000FEE  5014               	movf	i1recv_msg@slot,w,c
  5840  000FF0  0D0D               	mullw	13
  5841  000FF2  50F3               	movf	prodl,w,c
  5842  000FF4  240B               	addwf	i1recv_msg@qptr,w,c
  5843  000FF6  6E17               	movwf	i1recv_msg@qmsg,c
  5844  000FF8  50F4               	movf	prodh,w,c
  5845  000FFA  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5846  000FFC  6E18               	movwf	i1recv_msg@qmsg+1,c
  5847                           
  5848                           ;messages.c: 74: if (qmsg->full == 1) {
  5849  000FFE  0E01               	movlw	1
  5850  001000  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5851  001004  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5852  001008  62DF               	cpfseq	indf2,c
  5853  00100A  D050               	goto	i1l2219
  5854                           
  5855                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5856  00100C  EE20 F001          	lfsr	2,1
  5857  001010  5017               	movf	i1recv_msg@qmsg,w,c
  5858  001012  26D9               	addwf	fsr2l,f,c
  5859  001014  5018               	movf	i1recv_msg@qmsg+1,w,c
  5860  001016  22DA               	addwfc	fsr2h,f,c
  5861  001018  50DF               	movf	indf2,w,c
  5862  00101A  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5863  00101C  B0D8               	btfsc	status,0,c
  5864  00101E  D002               	goto	i1l2203
  5865                           
  5866                           ;messages.c: 77: return (-3);
  5867  001020  0EFD               	movlw	253
  5868  001022  0012               	return	
  5869  001024                     i1l2203:
  5870                           
  5871                           ;messages.c: 78: }
  5872                           ;messages.c: 80: tlength = qmsg->length;
  5873  001024  EE20 F001          	lfsr	2,1
  5874  001028  5017               	movf	i1recv_msg@qmsg,w,c
  5875  00102A  26D9               	addwf	fsr2l,f,c
  5876  00102C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5877  00102E  22DA               	addwfc	fsr2h,f,c
  5878  001030  50DF               	movf	indf2,w,c
  5879  001032  6E12               	movwf	??i1_recv_msg& (0+255),c
  5880  001034  5012               	movf	??i1_recv_msg,w,c
  5881  001036  6E15               	movwf	i1recv_msg@tlength,c
  5882  001038  6A16               	clrf	i1recv_msg@tlength+1,c
  5883                           
  5884                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5885  00103A  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5886  00103E  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5887  001042  0E03               	movlw	3
  5888  001044  2417               	addwf	i1recv_msg@qmsg,w,c
  5889  001046  6E12               	movwf	??i1_recv_msg& (0+255),c
  5890  001048  0E00               	movlw	0
  5891  00104A  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5892  00104C  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5893  00104E  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5894  001052  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5895  001056  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5896  00105A  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5897  00105E  EC51  F00C         	call	i1_memcpy	;wreg free
  5898                           
  5899                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5900  001062  EE20 F035          	lfsr	2,53
  5901  001066  500B               	movf	i1recv_msg@qptr,w,c
  5902  001068  26D9               	addwf	fsr2l,f,c
  5903  00106A  500C               	movf	i1recv_msg@qptr+1,w,c
  5904  00106C  22DA               	addwfc	fsr2h,f,c
  5905  00106E  EE10 F035          	lfsr	1,53
  5906  001072  500B               	movf	i1recv_msg@qptr,w,c
  5907  001074  26E1               	addwf	fsr1l,f,c
  5908  001076  500C               	movf	i1recv_msg@qptr+1,w,c
  5909  001078  22E2               	addwfc	fsr1h,f,c
  5910  00107A  50E7               	movf	indf1,w,c
  5911  00107C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5912  00107E  2812               	incf	??i1_recv_msg,w,c
  5913  001080  0B03               	andlw	3
  5914  001082  6EDF               	movwf	indf2,c
  5915                           
  5916                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5917  001084  EE20 F002          	lfsr	2,2
  5918  001088  5017               	movf	i1recv_msg@qmsg,w,c
  5919  00108A  26D9               	addwf	fsr2l,f,c
  5920  00108C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5921  00108E  22DA               	addwfc	fsr2h,f,c
  5922  001090  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5923  001094  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5924  001098  CFDF FFE7          	movff	indf2,indf1
  5925                           
  5926                           ;messages.c: 91: qmsg->full = 0;
  5927  00109C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5928  0010A0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5929  0010A4  0E00               	movlw	0
  5930  0010A6  6EDF               	movwf	indf2,c
  5931                           
  5932                           ;messages.c: 92: return (tlength);
  5933  0010A8  5015               	movf	i1recv_msg@tlength,w,c
  5934  0010AA  0012               	return	
  5935  0010AC                     i1l2219:
  5936                           
  5937                           ;messages.c: 94: return (-4);
  5938  0010AC  0EFC               	movlw	252
  5939  0010AE  0012               	return	
  5940  0010B0                     __end_ofi1_recv_msg:
  5941                           	opt stack 0
  5942                           pclatu	equ	0xFFB
  5943                           pclath	equ	0xFFA
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           postinc0	equ	0xFEE
  5952                           fsr0h	equ	0xFEA
  5953                           fsr0l	equ	0xFE9
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           fsr1h	equ	0xFE2
  5957                           fsr1l	equ	0xFE1
  5958                           bsr	equ	0xFE0
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _uart_recv_int_handler *****************
  5967 ;; Defined at:
  5968 ;;		line 42 in file "src/my_uart.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;		None               void
  5975 ;; Registers used:
  5976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5982 ;;      Params:         0       0       0       0       0
  5983 ;;      Locals:         0       0       0       0       0
  5984 ;;      Temps:          1       0       0       0       0
  5985 ;;      Totals:         1       0       0       0       0
  5986 ;;Total ram usage:        1 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    8
  5989 ;; This function calls:
  5990 ;;		_ReadUSART
  5991 ;;		i1_ToMainLow_sendmsg
  5992 ;; This function is called by:
  5993 ;;		_InterruptHandlerLow
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text35
  5998  001454                     __ptext35:
  5999                           	opt stack 0
  6000  001454                     _uart_recv_int_handler:
  6001                           	opt stack 16
  6002                           
  6003                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6004                           
  6005                           ;incstack = 0
  6006  001454  AA9E               	btfss	3998,5,c	;volatile
  6007  001456  D03A               	goto	i1l2619
  6008                           
  6009                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6010  001458  EE20 F004          	lfsr	2,4
  6011  00145C  5049               	movf	_uc_ptr,w,c
  6012  00145E  26D9               	addwf	fsr2l,f,c
  6013  001460  504A               	movf	_uc_ptr+1,w,c
  6014  001462  22DA               	addwfc	fsr2h,f,c
  6015  001464  50DF               	movf	indf2,w,c
  6016  001466  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6017  001468  501B               	movf	??_uart_recv_int_handler,w,c
  6018  00146A  0D01               	mullw	1
  6019  00146C  50F3               	movf	prodl,w,c
  6020  00146E  2449               	addwf	_uc_ptr,w,c
  6021  001470  6ED9               	movwf	fsr2l,c
  6022  001472  50F4               	movf	prodh,w,c
  6023  001474  204A               	addwfc	_uc_ptr+1,w,c
  6024  001476  6EDA               	movwf	fsr2h,c
  6025  001478  EC1C  F00E         	call	_ReadUSART	;wreg free
  6026  00147C  6EDF               	movwf	indf2,c
  6027                           
  6028                           ;my_uart.c: 56: uc_ptr->buflen++;
  6029  00147E  EE20 F004          	lfsr	2,4
  6030  001482  5049               	movf	_uc_ptr,w,c
  6031  001484  26D9               	addwf	fsr2l,f,c
  6032  001486  504A               	movf	_uc_ptr+1,w,c
  6033  001488  22DA               	addwfc	fsr2h,f,c
  6034  00148A  2ADF               	incf	indf2,f,c
  6035                           
  6036                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6037  00148C  EE20 F004          	lfsr	2,4
  6038  001490  5049               	movf	_uc_ptr,w,c
  6039  001492  26D9               	addwf	fsr2l,f,c
  6040  001494  504A               	movf	_uc_ptr+1,w,c
  6041  001496  22DA               	addwfc	fsr2h,f,c
  6042  001498  0E04               	movlw	4
  6043  00149A  62DF               	cpfseq	indf2,c
  6044  00149C  D017               	goto	i1l2619
  6045                           
  6046                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6047  00149E  0E20               	movlw	32
  6048  0014A0  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6049  0014A2  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6050  0014A6  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6051  0014AA  EE20 F004          	lfsr	2,4
  6052  0014AE  5049               	movf	_uc_ptr,w,c
  6053  0014B0  26D9               	addwf	fsr2l,f,c
  6054  0014B2  504A               	movf	_uc_ptr+1,w,c
  6055  0014B4  22DA               	addwfc	fsr2h,f,c
  6056  0014B6  50DF               	movf	indf2,w,c
  6057  0014B8  ECD7  F00D         	call	i1_ToMainLow_sendmsg
  6058                           
  6059                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6060  0014BC  EE20 F004          	lfsr	2,4
  6061  0014C0  5049               	movf	_uc_ptr,w,c
  6062  0014C2  26D9               	addwf	fsr2l,f,c
  6063  0014C4  504A               	movf	_uc_ptr+1,w,c
  6064  0014C6  22DA               	addwfc	fsr2h,f,c
  6065  0014C8  0E00               	movlw	0
  6066  0014CA  6EDF               	movwf	indf2,c
  6067  0014CC                     i1l2619:
  6068                           
  6069                           ;my_uart.c: 61: }
  6070                           ;my_uart.c: 62: }
  6071                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6072  0014CC  A64C               	btfss	_USART_Status,3,c
  6073  0014CE  0012               	return	
  6074                           
  6075                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6076  0014D0  98AB               	bcf	4011,4,c	;volatile
  6077                           
  6078                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6079  0014D2  88AB               	bsf	4011,4,c	;volatile
  6080                           
  6081                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6082  0014D4  0E1E               	movlw	30
  6083  0014D6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6084  0014D8  0E00               	movlw	0
  6085  0014DA  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6086  0014DC  0E00               	movlw	0
  6087  0014DE  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6088  0014E0  0E00               	movlw	0
  6089  0014E2  ECD7  F00D         	call	i1_ToMainLow_sendmsg
  6090  0014E6  0012               	return	
  6091  0014E8                     __end_of_uart_recv_int_handler:
  6092                           	opt stack 0
  6093                           pclatu	equ	0xFFB
  6094                           pclath	equ	0xFFA
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           intcon	equ	0xFF2
  6102                           postinc0	equ	0xFEE
  6103                           fsr0h	equ	0xFEA
  6104                           fsr0l	equ	0xFE9
  6105                           wreg	equ	0xFE8
  6106                           indf1	equ	0xFE7
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           bsr	equ	0xFE0
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function _ReadUSART *****************
  6118 ;; Defined at:
  6119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  data            1    0[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      unsigned char 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6133 ;;      Params:         0       0       0       0       0
  6134 ;;      Locals:         1       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0
  6136 ;;      Totals:         1       0       0       0       0
  6137 ;;Total ram usage:        1 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    5
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_uart_recv_int_handler
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text36
  6148  001C38                     __ptext36:
  6149                           	opt stack 0
  6150  001C38                     _ReadUSART:
  6151                           	opt stack 18
  6152                           
  6153                           ;incstack = 0
  6154  001C38  0EF2               	movlw	242
  6155  001C3A  164C               	andwf	_USART_Status,f,c
  6156  001C3C  ACAB               	btfss	4011,6,c	;volatile
  6157  001C3E  D003               	goto	i1l500
  6158  001C40  904C               	bcf	_USART_Status,0,c
  6159  001C42  B0AB               	btfsc	4011,0,c	;volatile
  6160  001C44  804C               	bsf	_USART_Status,0,c
  6161  001C46                     i1l500:
  6162  001C46  B4AB               	btfsc	4011,2,c	;volatile
  6163  001C48  844C               	bsf	_USART_Status,2,c
  6164  001C4A  B2AB               	btfsc	4011,1,c	;volatile
  6165  001C4C  864C               	bsf	_USART_Status,3,c
  6166  001C4E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6167  001C52  5001               	movf	ReadUSART@data,w,c
  6168  001C54  0012               	return	
  6169  001C56                     __end_of_ReadUSART:
  6170                           	opt stack 0
  6171                           pclatu	equ	0xFFB
  6172                           pclath	equ	0xFFA
  6173                           tblptru	equ	0xFF8
  6174                           tblptrh	equ	0xFF7
  6175                           tblptrl	equ	0xFF6
  6176                           tablat	equ	0xFF5
  6177                           prodh	equ	0xFF4
  6178                           prodl	equ	0xFF3
  6179                           intcon	equ	0xFF2
  6180                           postinc0	equ	0xFEE
  6181                           fsr0h	equ	0xFEA
  6182                           fsr0l	equ	0xFE9
  6183                           wreg	equ	0xFE8
  6184                           indf1	equ	0xFE7
  6185                           fsr1h	equ	0xFE2
  6186                           fsr1l	equ	0xFE1
  6187                           bsr	equ	0xFE0
  6188                           indf2	equ	0xFDF
  6189                           postinc2	equ	0xFDE
  6190                           postdec2	equ	0xFDD
  6191                           fsr2h	equ	0xFDA
  6192                           fsr2l	equ	0xFD9
  6193                           status	equ	0xFD8
  6194                           
  6195 ;; *************** function _timer1_int_handler *****************
  6196 ;; Defined at:
  6197 ;;		line 30 in file "src/user_interrupts.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  curPos          2   26[COMRAM] unsigned char [2]
  6202 ;;  result          2    0        unsigned int 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;		None               void
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6212 ;;      Params:         0       0       0       0       0
  6213 ;;      Locals:         2       0       0       0       0
  6214 ;;      Temps:          0       0       0       0       0
  6215 ;;      Totals:         2       0       0       0       0
  6216 ;;Total ram usage:        2 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    8
  6219 ;; This function calls:
  6220 ;;		i1_ToMainLow_sendmsg
  6221 ;;		i1_WriteTimer1
  6222 ;; This function is called by:
  6223 ;;		_InterruptHandlerLow
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text37
  6228  001B02                     __ptext37:
  6229                           	opt stack 0
  6230  001B02                     _timer1_int_handler:
  6231                           	opt stack 16
  6232                           
  6233                           ;user_interrupts.c: 31: unsigned int result;
  6234                           ;user_interrupts.c: 39: WriteTimer1(64936);
  6235                           
  6236                           ;incstack = 0
  6237  001B02  0EFD               	movlw	253
  6238  001B04  6E02               	movwf	i1WriteTimer1@timer1+1,c
  6239  001B06  0EA8               	movlw	168
  6240  001B08  6E01               	movwf	i1WriteTimer1@timer1,c
  6241  001B0A  EC3E  F00E         	call	i1_WriteTimer1	;wreg free
  6242                           
  6243                           ;user_interrupts.c: 41: unsigned char curPos[2];
  6244                           ;user_interrupts.c: 42: curPos[0] = PORTAbits.RA0;
  6245  001B0E  0E00               	movlw	0
  6246  001B10  B080               	btfsc	3968,0,c	;volatile
  6247  001B12  0E01               	movlw	1
  6248  001B14  6E1B               	movwf	timer1_int_handler@curPos,c
  6249                           
  6250                           ;user_interrupts.c: 43: curPos[1] = PORTAbits.RA1;
  6251  001B16  0E00               	movlw	0
  6252  001B18  B280               	btfsc	3968,1,c	;volatile
  6253  001B1A  0E01               	movlw	1
  6254  001B1C  6E1C               	movwf	timer1_int_handler@curPos+1,c
  6255                           
  6256                           ;user_interrupts.c: 46: ToMainLow_sendmsg(2, 11, (void *)curPos);
  6257  001B1E  0E0B               	movlw	11
  6258  001B20  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6259  001B22  0E00               	movlw	high timer1_int_handler@curPos
  6260  001B24  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6261  001B26  0E1B               	movlw	low timer1_int_handler@curPos
  6262  001B28  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6263  001B2A  0E02               	movlw	2
  6264  001B2C  ECD7  F00D         	call	i1_ToMainLow_sendmsg
  6265  001B30  0012               	return	
  6266  001B32                     __end_of_timer1_int_handler:
  6267                           	opt stack 0
  6268                           pclatu	equ	0xFFB
  6269                           pclath	equ	0xFFA
  6270                           tblptru	equ	0xFF8
  6271                           tblptrh	equ	0xFF7
  6272                           tblptrl	equ	0xFF6
  6273                           tablat	equ	0xFF5
  6274                           prodh	equ	0xFF4
  6275                           prodl	equ	0xFF3
  6276                           intcon	equ	0xFF2
  6277                           postinc0	equ	0xFEE
  6278                           fsr0h	equ	0xFEA
  6279                           fsr0l	equ	0xFE9
  6280                           wreg	equ	0xFE8
  6281                           indf1	equ	0xFE7
  6282                           fsr1h	equ	0xFE2
  6283                           fsr1l	equ	0xFE1
  6284                           bsr	equ	0xFE0
  6285                           indf2	equ	0xFDF
  6286                           postinc2	equ	0xFDE
  6287                           postdec2	equ	0xFDD
  6288                           fsr2h	equ	0xFDA
  6289                           fsr2l	equ	0xFD9
  6290                           status	equ	0xFD8
  6291                           
  6292 ;; *************** function i1_WriteTimer1 *****************
  6293 ;; Defined at:
  6294 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  timer1          2    0[COMRAM] unsigned int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  6299 ;; Return value:  Size  Location     Type
  6300 ;;		None               void
  6301 ;; Registers used:
  6302 ;;		None
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6308 ;;      Params:         2       0       0       0       0
  6309 ;;      Locals:         2       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0
  6311 ;;      Totals:         4       0       0       0       0
  6312 ;;Total ram usage:        4 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    5
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_timer1_int_handler
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text38
  6323  001C7C                     __ptext38:
  6324                           	opt stack 0
  6325  001C7C                     i1_WriteTimer1:
  6326                           	opt stack 18
  6327                           
  6328                           ;incstack = 0
  6329  001C7C  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  6330  001C80  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  6331  001C84  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  6332  001C88  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  6333  001C8C  0012               	return	
  6334  001C8E                     __end_ofi1_WriteTimer1:
  6335                           	opt stack 0
  6336                           pclatu	equ	0xFFB
  6337                           pclath	equ	0xFFA
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           prodh	equ	0xFF4
  6343                           prodl	equ	0xFF3
  6344                           intcon	equ	0xFF2
  6345                           postinc0	equ	0xFEE
  6346                           fsr0h	equ	0xFEA
  6347                           fsr0l	equ	0xFE9
  6348                           wreg	equ	0xFE8
  6349                           indf1	equ	0xFE7
  6350                           fsr1h	equ	0xFE2
  6351                           fsr1l	equ	0xFE1
  6352                           bsr	equ	0xFE0
  6353                           indf2	equ	0xFDF
  6354                           postinc2	equ	0xFDE
  6355                           postdec2	equ	0xFDD
  6356                           fsr2h	equ	0xFDA
  6357                           fsr2l	equ	0xFD9
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function i1_ToMainLow_sendmsg *****************
  6361 ;; Defined at:
  6362 ;;		line 103 in file "src/messages.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  length          1    wreg     unsigned char 
  6365 ;;  msgtype         1   22[COMRAM] unsigned char 
  6366 ;;  data            2   23[COMRAM] PTR void 
  6367 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), main@ctrl(2), 
  6368 ;;		 -> main@test(2), main@uc(5), 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  length          1   25[COMRAM] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      char 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6380 ;;      Params:         3       0       0       0       0
  6381 ;;      Locals:         1       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0
  6383 ;;      Totals:         4       0       0       0       0
  6384 ;;Total ram usage:        4 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    7
  6387 ;; This function calls:
  6388 ;;		i1_send_msg
  6389 ;; This function is called by:
  6390 ;;		_uart_recv_int_handler
  6391 ;;		_timer1_int_handler
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text39
  6396  001BAE                     __ptext39:
  6397                           	opt stack 0
  6398  001BAE                     i1_ToMainLow_sendmsg:
  6399                           	opt stack 16
  6400                           
  6401                           ;incstack = 0
  6402                           ;i1ToMainLow_sendmsg@length stored from wreg
  6403  001BAE  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  6404                           
  6405                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6406                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6407  001BB0  0100               	movlb	0	; () banked
  6408  001BB2  0E00               	movlw	high _ToMainLow_MQ
  6409  001BB4  6E0C               	movwf	i1send_msg@qptr+1,c
  6410  001BB6  0100               	movlb	0	; () banked
  6411  001BB8  0E80               	movlw	low _ToMainLow_MQ
  6412  001BBA  6E0B               	movwf	i1send_msg@qptr,c
  6413  001BBC  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6414  001BC0  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6415  001BC4  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6416  001BC8  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6417  001BCC  ECD5  F009         	call	i1_send_msg	;wreg free
  6418  001BD0  0012               	return	
  6419  001BD2                     __end_ofi1_ToMainLow_sendmsg:
  6420                           	opt stack 0
  6421                           pclatu	equ	0xFFB
  6422                           pclath	equ	0xFFA
  6423                           tblptru	equ	0xFF8
  6424                           tblptrh	equ	0xFF7
  6425                           tblptrl	equ	0xFF6
  6426                           tablat	equ	0xFF5
  6427                           prodh	equ	0xFF4
  6428                           prodl	equ	0xFF3
  6429                           intcon	equ	0xFF2
  6430                           postinc0	equ	0xFEE
  6431                           fsr0h	equ	0xFEA
  6432                           fsr0l	equ	0xFE9
  6433                           wreg	equ	0xFE8
  6434                           indf1	equ	0xFE7
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           bsr	equ	0xFE0
  6438                           indf2	equ	0xFDF
  6439                           postinc2	equ	0xFDE
  6440                           postdec2	equ	0xFDD
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function i1_send_msg *****************
  6446 ;; Defined at:
  6447 ;;		line 24 in file "src/messages.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6450 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6451 ;;  length          1   12[COMRAM] unsigned char 
  6452 ;;  msgtype         1   13[COMRAM] unsigned char 
  6453 ;;  data            2   14[COMRAM] PTR void 
  6454 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6455 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  6456 ;;		 -> main@uc(5), 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6459 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6460 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6461 ;;  send_msg        2   17[COMRAM] unsigned int 
  6462 ;;  send_msg        1   19[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      char 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6472 ;;      Params:         6       0       0       0       0
  6473 ;;      Locals:         5       0       0       0       0
  6474 ;;      Temps:          1       0       0       0       0
  6475 ;;      Totals:        12       0       0       0       0
  6476 ;;Total ram usage:       12 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		i1_memcpy
  6481 ;; This function is called by:
  6482 ;;		i1_ToMainLow_sendmsg
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text40
  6487  0013AA                     __ptext40:
  6488                           	opt stack 0
  6489  0013AA                     i1_send_msg:
  6490                           	opt stack 16
  6491                           
  6492                           ;messages.c: 25: unsigned char slot;
  6493                           ;messages.c: 27: msg *qmsg;
  6494                           ;messages.c: 28: size_t tlength = length;
  6495                           
  6496                           ;incstack = 0
  6497  0013AA  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6498  0013AE  6A13               	clrf	i1send_msg@tlength+1,c
  6499                           
  6500                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6501  0013B0  EE20 F034          	lfsr	2,52
  6502  0013B4  500B               	movf	i1send_msg@qptr,w,c
  6503  0013B6  26D9               	addwf	fsr2l,f,c
  6504  0013B8  500C               	movf	i1send_msg@qptr+1,w,c
  6505  0013BA  22DA               	addwfc	fsr2h,f,c
  6506  0013BC  50DF               	movf	indf2,w,c
  6507  0013BE  6E14               	movwf	i1send_msg@slot,c
  6508                           
  6509                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6510  0013C0  5014               	movf	i1send_msg@slot,w,c
  6511  0013C2  0D0D               	mullw	13
  6512  0013C4  50F3               	movf	prodl,w,c
  6513  0013C6  240B               	addwf	i1send_msg@qptr,w,c
  6514  0013C8  6E15               	movwf	i1send_msg@qmsg,c
  6515  0013CA  50F4               	movf	prodh,w,c
  6516  0013CC  200C               	addwfc	i1send_msg@qptr+1,w,c
  6517  0013CE  6E16               	movwf	i1send_msg@qmsg+1,c
  6518                           
  6519                           ;messages.c: 41: if (qmsg->full != 0) {
  6520  0013D0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6521  0013D4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6522  0013D8  50DF               	movf	indf2,w,c
  6523  0013DA  B4D8               	btfsc	status,2,c
  6524  0013DC  D002               	goto	i1l2155
  6525                           
  6526                           ;messages.c: 42: return (-1);
  6527  0013DE  0EFF               	movlw	255
  6528  0013E0  0012               	return	
  6529  0013E2                     i1l2155:
  6530                           
  6531                           ;messages.c: 43: }
  6532                           ;messages.c: 46: qmsg->length = length;
  6533  0013E2  EE20 F001          	lfsr	2,1
  6534  0013E6  5015               	movf	i1send_msg@qmsg,w,c
  6535  0013E8  26D9               	addwf	fsr2l,f,c
  6536  0013EA  5016               	movf	i1send_msg@qmsg+1,w,c
  6537  0013EC  22DA               	addwfc	fsr2h,f,c
  6538  0013EE  C00D  FFDF         	movff	i1send_msg@length,indf2
  6539                           
  6540                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6541  0013F2  EE20 F002          	lfsr	2,2
  6542  0013F6  5015               	movf	i1send_msg@qmsg,w,c
  6543  0013F8  26D9               	addwf	fsr2l,f,c
  6544  0013FA  5016               	movf	i1send_msg@qmsg+1,w,c
  6545  0013FC  22DA               	addwfc	fsr2h,f,c
  6546  0013FE  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6547                           
  6548                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6549  001402  0E03               	movlw	3
  6550  001404  2415               	addwf	i1send_msg@qmsg,w,c
  6551  001406  6E01               	movwf	i1memcpy@d1,c
  6552  001408  0E00               	movlw	0
  6553  00140A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6554  00140C  6E02               	movwf	i1memcpy@d1+1,c
  6555  00140E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6556  001412  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6557  001416  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6558  00141A  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6559  00141E  EC51  F00C         	call	i1_memcpy	;wreg free
  6560                           
  6561                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6562  001422  EE20 F034          	lfsr	2,52
  6563  001426  500B               	movf	i1send_msg@qptr,w,c
  6564  001428  26D9               	addwf	fsr2l,f,c
  6565  00142A  500C               	movf	i1send_msg@qptr+1,w,c
  6566  00142C  22DA               	addwfc	fsr2h,f,c
  6567  00142E  EE10 F034          	lfsr	1,52
  6568  001432  500B               	movf	i1send_msg@qptr,w,c
  6569  001434  26E1               	addwf	fsr1l,f,c
  6570  001436  500C               	movf	i1send_msg@qptr+1,w,c
  6571  001438  22E2               	addwfc	fsr1h,f,c
  6572  00143A  50E7               	movf	indf1,w,c
  6573  00143C  6E11               	movwf	??i1_send_msg& (0+255),c
  6574  00143E  2811               	incf	??i1_send_msg,w,c
  6575  001440  0B03               	andlw	3
  6576  001442  6EDF               	movwf	indf2,c
  6577                           
  6578                           ;messages.c: 59: qmsg->full = 1;
  6579  001444  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6580  001448  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6581  00144C  0E01               	movlw	1
  6582  00144E  6EDF               	movwf	indf2,c
  6583                           
  6584                           ;messages.c: 60: return (1);
  6585  001450  0E01               	movlw	1
  6586  001452  0012               	return	
  6587  001454                     __end_ofi1_send_msg:
  6588                           	opt stack 0
  6589                           pclatu	equ	0xFFB
  6590                           pclath	equ	0xFFA
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           intcon	equ	0xFF2
  6598                           postinc0	equ	0xFEE
  6599                           fsr0h	equ	0xFEA
  6600                           fsr0l	equ	0xFE9
  6601                           wreg	equ	0xFE8
  6602                           indf1	equ	0xFE7
  6603                           fsr1h	equ	0xFE2
  6604                           fsr1l	equ	0xFE1
  6605                           bsr	equ	0xFE0
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function i1_memcpy *****************
  6614 ;; Defined at:
  6615 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  d1              2    0[COMRAM] PTR void 
  6618 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6619 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6620 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6621 ;;  s1              2    2[COMRAM] PTR const void 
  6622 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6623 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6624 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6625 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6626 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  6627 ;;		 -> main@uc(5), 
  6628 ;;  n               2    4[COMRAM] unsigned int 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6631 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6632 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6633 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6634 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6635 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  6636 ;;		 -> main@uc(5), 
  6637 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6638 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6639 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6640 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  2    0[COMRAM] PTR void 
  6643 ;; Registers used:
  6644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6650 ;;      Params:         6       0       0       0       0
  6651 ;;      Locals:         4       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0
  6653 ;;      Totals:        10       0       0       0       0
  6654 ;;Total ram usage:       10 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    5
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		i1_send_msg
  6661 ;;		i1_recv_msg
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text41
  6666  0018A2                     __ptext41:
  6667                           	opt stack 0
  6668  0018A2                     i1_memcpy:
  6669                           	opt stack 16
  6670                           
  6671                           ;incstack = 0
  6672  0018A2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6673  0018A6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6674  0018AA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6675  0018AE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6676  0018B2  D00E               	goto	i1l2083
  6677  0018B4                     i1l2077:
  6678  0018B4  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6679  0018B8  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6680  0018BC  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6681  0018C0  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6682  0018C4  CFDF FFE7          	movff	indf2,indf1
  6683  0018C8  4A09               	infsnz	i1memcpy@s,f,c
  6684  0018CA  2A0A               	incf	i1memcpy@s+1,f,c
  6685  0018CC  4A07               	infsnz	i1memcpy@d,f,c
  6686  0018CE  2A08               	incf	i1memcpy@d+1,f,c
  6687  0018D0                     i1l2083:
  6688  0018D0  0605               	decf	i1memcpy@n,f,c
  6689  0018D2  A0D8               	btfss	status,0,c
  6690  0018D4  0606               	decf	i1memcpy@n+1,f,c
  6691  0018D6  2805               	incf	i1memcpy@n& (0+255),w,c
  6692  0018D8  B4D8               	btfsc	status,2,c
  6693  0018DA  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6694  0018DC  B4D8               	btfsc	status,2,c
  6695                           
  6696                           ;	Return value of i1_memcpy is never used
  6697  0018DE  0012               	return	
  6698  0018E0  D7E9               	goto	i1l2077
  6699  0018E2                     __end_ofi1_memcpy:
  6700                           	opt stack 0
  6701                           pclatu	equ	0xFFB
  6702                           pclath	equ	0xFFA
  6703                           tblptru	equ	0xFF8
  6704                           tblptrh	equ	0xFF7
  6705                           tblptrl	equ	0xFF6
  6706                           tablat	equ	0xFF5
  6707                           prodh	equ	0xFF4
  6708                           prodl	equ	0xFF3
  6709                           intcon	equ	0xFF2
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           indf1	equ	0xFE7
  6715                           fsr1h	equ	0xFE2
  6716                           fsr1l	equ	0xFE1
  6717                           bsr	equ	0xFE0
  6718                           indf2	equ	0xFDF
  6719                           postinc2	equ	0xFDE
  6720                           postdec2	equ	0xFDD
  6721                           fsr2h	equ	0xFDA
  6722                           fsr2l	equ	0xFD9
  6723                           status	equ	0xFD8
  6724                           
  6725 ;; *************** function _InterruptHandlerHigh *****************
  6726 ;; Defined at:
  6727 ;;		line 83 in file "src/interrupts.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;		None
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;		None               void
  6734 ;; Registers used:
  6735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6741 ;;      Params:         0       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0
  6743 ;;      Temps:          0      14       0       0       0
  6744 ;;      Totals:         0      14       0       0       0
  6745 ;;Total ram usage:       14 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    4
  6748 ;; This function calls:
  6749 ;;		_SleepIfOkay
  6750 ;;		_i2c_int_handler
  6751 ;;		_timer0_int_handler
  6752 ;; This function is called by:
  6753 ;;		Interrupt level 2
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	intcode
  6758  000008                     __pintcode:
  6759                           	opt stack 0
  6760  000008                     _InterruptHandlerHigh:
  6761                           	opt stack 16
  6762                           
  6763                           ;incstack = 0
  6764  000008  CFFA F0C5          	movff	pclath,??_InterruptHandlerHigh
  6765  00000C  CFFB F0C6          	movff	pclatu,??_InterruptHandlerHigh+1
  6766  000010  CFE9 F0C7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6767  000014  EFB5  F00A         	goto	int_func
  6768                           pclatu	equ	0xFFB
  6769                           pclath	equ	0xFFA
  6770                           tblptru	equ	0xFF8
  6771                           tblptrh	equ	0xFF7
  6772                           tblptrl	equ	0xFF6
  6773                           tablat	equ	0xFF5
  6774                           prodh	equ	0xFF4
  6775                           prodl	equ	0xFF3
  6776                           intcon	equ	0xFF2
  6777                           postinc0	equ	0xFEE
  6778                           fsr0h	equ	0xFEA
  6779                           fsr0l	equ	0xFE9
  6780                           wreg	equ	0xFE8
  6781                           indf1	equ	0xFE7
  6782                           fsr1h	equ	0xFE2
  6783                           fsr1l	equ	0xFE1
  6784                           bsr	equ	0xFE0
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792                           	psect	intcode_body
  6793  00156A                     __pintcode_body:
  6794                           	opt stack 16
  6795  00156A                     int_func:
  6796                           	opt stack 16
  6797  00156A  CFEA F0C8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6798  00156E  CFE1 F0C9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6799  001572  CFE2 F0CA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6800  001576  CFD9 F0CB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6801  00157A  CFDA F0CC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6802  00157E  CFF3 F0CD          	movff	prodl,??_InterruptHandlerHigh+8
  6803  001582  CFF4 F0CE          	movff	prodh,??_InterruptHandlerHigh+9
  6804  001586  CFF6 F0CF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6805  00158A  CFF7 F0D0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6806  00158E  CFF8 F0D1          	movff	tblptru,??_InterruptHandlerHigh+12
  6807  001592  CFF5 F0D2          	movff	tablat,??_InterruptHandlerHigh+13
  6808                           
  6809                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6810  001596  A69E               	btfss	3998,3,c	;volatile
  6811  001598  D003               	goto	i2l3309
  6812                           
  6813                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6814  00159A  969E               	bcf	3998,3,c	;volatile
  6815                           
  6816                           ;interrupts.c: 92: i2c_int_handler();
  6817  00159C  EC62  F000         	call	_i2c_int_handler	;wreg free
  6818  0015A0                     i2l3309:
  6819                           
  6820                           ;interrupts.c: 93: }
  6821                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6822  0015A0  A4F2               	btfss	intcon,2,c	;volatile
  6823  0015A2  D003               	goto	i2l3315
  6824                           
  6825                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6826  0015A4  94F2               	bcf	intcon,2,c	;volatile
  6827                           
  6828                           ;interrupts.c: 99: timer0_int_handler();
  6829  0015A6  EC65  F00E         	call	_timer0_int_handler	;wreg free
  6830  0015AA                     i2l3315:
  6831                           
  6832                           ;interrupts.c: 100: }
  6833                           ;interrupts.c: 109: SleepIfOkay();
  6834  0015AA  EC05  F00C         	call	_SleepIfOkay	;wreg free
  6835  0015AE  C0D2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6836  0015B2  C0D1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6837  0015B6  C0D0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6838  0015BA  C0CF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6839  0015BE  C0CE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6840  0015C2  C0CD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6841  0015C6  C0CC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6842  0015CA  C0CB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6843  0015CE  C0CA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6844  0015D2  C0C9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6845  0015D6  C0C8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6846  0015DA  C0C7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6847  0015DE  C0C6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6848  0015E2  C0C5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6849  0015E6  0011               	retfie		f
  6850  0015E8                     __end_of_InterruptHandlerHigh:
  6851                           	opt stack 0
  6852                           pclatu	equ	0xFFB
  6853                           pclath	equ	0xFFA
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           postinc0	equ	0xFEE
  6862                           fsr0h	equ	0xFEA
  6863                           fsr0l	equ	0xFE9
  6864                           wreg	equ	0xFE8
  6865                           indf1	equ	0xFE7
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           bsr	equ	0xFE0
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _timer0_int_handler *****************
  6877 ;; Defined at:
  6878 ;;		line 17 in file "src/user_interrupts.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  msgtype         2    0        int 
  6883 ;;  length          2    0        int 
  6884 ;;  val             2    0        unsigned int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;		None               void
  6887 ;; Registers used:
  6888 ;;		None
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6894 ;;      Params:         0       0       0       0       0
  6895 ;;      Locals:         0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0
  6897 ;;      Totals:         0       0       0       0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_InterruptHandlerHigh
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text43
  6908  001CCA                     __ptext43:
  6909                           	opt stack 0
  6910  001CCA                     _timer0_int_handler:
  6911                           	opt stack 19
  6912                           
  6913                           ;incstack = 0
  6914  001CCA  0012               	return	
  6915  001CCC                     __end_of_timer0_int_handler:
  6916                           	opt stack 0
  6917                           pclatu	equ	0xFFB
  6918                           pclath	equ	0xFFA
  6919                           tblptru	equ	0xFF8
  6920                           tblptrh	equ	0xFF7
  6921                           tblptrl	equ	0xFF6
  6922                           tablat	equ	0xFF5
  6923                           prodh	equ	0xFF4
  6924                           prodl	equ	0xFF3
  6925                           intcon	equ	0xFF2
  6926                           postinc0	equ	0xFEE
  6927                           fsr0h	equ	0xFEA
  6928                           fsr0l	equ	0xFE9
  6929                           wreg	equ	0xFE8
  6930                           indf1	equ	0xFE7
  6931                           fsr1h	equ	0xFE2
  6932                           fsr1l	equ	0xFE1
  6933                           bsr	equ	0xFE0
  6934                           indf2	equ	0xFDF
  6935                           postinc2	equ	0xFDE
  6936                           postdec2	equ	0xFDD
  6937                           fsr2h	equ	0xFDA
  6938                           fsr2l	equ	0xFD9
  6939                           status	equ	0xFD8
  6940                           
  6941 ;; *************** function _i2c_int_handler *****************
  6942 ;; Defined at:
  6943 ;;		line 100 in file "src/my_i2c.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6948 ;;  data_read       1   14[BANK0 ] unsigned char 
  6949 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6950 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6951 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6952 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6953 ;;  data_written    1    9[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6963 ;;      Params:         0       0       0       0       0
  6964 ;;      Locals:         0       9       0       0       0
  6965 ;;      Temps:          0       1       0       0       0
  6966 ;;      Totals:         0      10       0       0       0
  6967 ;;Total ram usage:       10 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    3
  6970 ;; This function calls:
  6971 ;;		_ToMainHigh_sendmsg
  6972 ;;		_handle_start
  6973 ;; This function is called by:
  6974 ;;		_InterruptHandlerHigh
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text44
  6979  0000C4                     __ptext44:
  6980                           	opt stack 0
  6981  0000C4                     _i2c_int_handler:
  6982                           	opt stack 16
  6983                           
  6984                           ;my_i2c.c: 101: unsigned char i2c_data;
  6985                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6986                           
  6987                           ;incstack = 0
  6988  0000C4  0E00               	movlw	0
  6989  0000C6  0100               	movlb	0	; () banked
  6990  0000C8  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6991                           
  6992                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6993  0000CA  0E00               	movlw	0
  6994  0000CC  0100               	movlb	0	; () banked
  6995  0000CE  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  6996                           
  6997                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6998  0000D0  0E00               	movlw	0
  6999  0000D2  0100               	movlb	0	; () banked
  7000  0000D4  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7001                           
  7002                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7003  0000D6  0E00               	movlw	0
  7004  0000D8  0100               	movlb	0	; () banked
  7005  0000DA  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7006                           
  7007                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7008  0000DC  0E00               	movlw	0
  7009  0000DE  0100               	movlb	0	; () banked
  7010  0000E0  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7014                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7015  0000E2  ACC6               	btfss	4038,6,c	;volatile
  7016  0000E4  D024               	goto	i2l3131
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7020  0000E6  9CC6               	bcf	4038,6,c	;volatile
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7024  0000E8  0100               	movlb	0	; () banked
  7025  0000EA  EE20 F00C          	lfsr	2,12
  7026  0000EE  0100               	movlb	0	; () banked
  7027  0000F0  51E1               	movf	_ic_ptr& (0+255),w,b
  7028  0000F2  26D9               	addwf	fsr2l,f,c
  7029  0000F4  0100               	movlb	0	; () banked
  7030  0000F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7031  0000F8  22DA               	addwfc	fsr2h,f,c
  7032  0000FA  0E05               	movlw	5
  7033  0000FC  6EDF               	movwf	indf2,c
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;my_i2c.c: 116: overrun_error = 1;
  7037  0000FE  0E01               	movlw	1
  7038  000100  0100               	movlb	0	; () banked
  7039  000102  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7043  000104  0100               	movlb	0	; () banked
  7044  000106  EE20 F00E          	lfsr	2,14
  7045  00010A  0100               	movlb	0	; () banked
  7046  00010C  51E1               	movf	_ic_ptr& (0+255),w,b
  7047  00010E  26D9               	addwf	fsr2l,f,c
  7048  000110  0100               	movlb	0	; () banked
  7049  000112  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7050  000114  22DA               	addwfc	fsr2h,f,c
  7051  000116  2ADF               	incf	indf2,f,c
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7055  000118  0100               	movlb	0	; () banked
  7056  00011A  EE20 F00D          	lfsr	2,13
  7057  00011E  0100               	movlb	0	; () banked
  7058  000120  51E1               	movf	_ic_ptr& (0+255),w,b
  7059  000122  26D9               	addwf	fsr2l,f,c
  7060  000124  0100               	movlb	0	; () banked
  7061  000126  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7062  000128  22DA               	addwfc	fsr2h,f,c
  7063  00012A  0E04               	movlw	4
  7064  00012C  6EDF               	movwf	indf2,c
  7065  00012E                     i2l3131:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;my_i2c.c: 119: }
  7069                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7070  00012E  A0C7               	btfss	4039,0,c	;volatile
  7071  000130  D005               	goto	i2l3137
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7075  000132  CFC9 F0C1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;my_i2c.c: 123: data_read = 1;
  7079  000136  0E01               	movlw	1
  7080  000138  0100               	movlb	0	; () banked
  7081  00013A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7082  00013C                     i2l3137:
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;my_i2c.c: 124: }
  7086                           ;my_i2c.c: 126: if (!overrun_error) {
  7087  00013C  0100               	movlb	0	; () banked
  7088  00013E  67C0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7089  000140  D19F               	goto	i2l288
  7090  000142  D188               	goto	i2l3225
  7091  000144                     i2l290:
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;my_i2c.c: 129: {
  7095                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7096  000144  A6C7               	btfss	4039,3,c	;volatile
  7097  000146  D19C               	goto	i2l288
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;my_i2c.c: 132: handle_start(data_read);
  7101  000148  0100               	movlb	0	; () banked
  7102  00014A  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7103  00014C  EC58  F008         	call	_handle_start
  7104                           
  7105                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7106  000150  0100               	movlb	0	; () banked
  7107  000152  EE20 F00C          	lfsr	2,12
  7108  000156  0100               	movlb	0	; () banked
  7109  000158  51E1               	movf	_ic_ptr& (0+255),w,b
  7110  00015A  26D9               	addwf	fsr2l,f,c
  7111  00015C  0100               	movlb	0	; () banked
  7112  00015E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  000160  22DA               	addwfc	fsr2h,f,c
  7114  000162  0E08               	movlw	8
  7115  000164  62DF               	cpfseq	indf2,c
  7116  000166  D18C               	goto	i2l288
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 135: data_read = 0;
  7120  000168  0E00               	movlw	0
  7121  00016A  0100               	movlb	0	; () banked
  7122  00016C  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7123                           
  7124                           ;my_i2c.c: 136: msg_to_send = 1;
  7125  00016E  0E01               	movlw	1
  7126  000170  0100               	movlb	0	; () banked
  7127  000172  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7128  000174  D185               	goto	i2l288
  7129  000176                     i2l294:
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;my_i2c.c: 142: {
  7133                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7134  000176  A8C7               	btfss	4039,4,c	;volatile
  7135  000178  D02A               	goto	i2l3157
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7139  00017A  0100               	movlb	0	; () banked
  7140  00017C  EE20 F00B          	lfsr	2,11
  7141  000180  0100               	movlb	0	; () banked
  7142  000182  51E1               	movf	_ic_ptr& (0+255),w,b
  7143  000184  26D9               	addwf	fsr2l,f,c
  7144  000186  0100               	movlb	0	; () banked
  7145  000188  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7146  00018A  22DA               	addwfc	fsr2h,f,c
  7147  00018C  2ADF               	incf	indf2,f,c
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 148: if (data_read) {
  7151  00018E  0100               	movlb	0	; () banked
  7152  000190  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7153  000192  B4D8               	btfsc	status,2,c
  7154  000194  D154               	goto	L10
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7158  000196  BAC7               	btfsc	4039,5,c	;volatile
  7159  000198  D004               	goto	i2l3155
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 150: msg_ready = 1;
  7163  00019A  0E01               	movlw	1
  7164  00019C  0100               	movlb	0	; () banked
  7165  00019E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7166                           
  7167                           ;my_i2c.c: 151: } else {
  7168  0001A0  D14E               	goto	L10
  7169  0001A2                     i2l3155:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7173  0001A2  0100               	movlb	0	; () banked
  7174  0001A4  EE20 F00E          	lfsr	2,14
  7175  0001A8  0100               	movlb	0	; () banked
  7176  0001AA  51E1               	movf	_ic_ptr& (0+255),w,b
  7177  0001AC  26D9               	addwf	fsr2l,f,c
  7178  0001AE  0100               	movlb	0	; () banked
  7179  0001B0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  0001B2  22DA               	addwfc	fsr2h,f,c
  7181  0001B4  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7184  0001B6  0100               	movlb	0	; () banked
  7185  0001B8  EE20 F00D          	lfsr	2,13
  7186  0001BC  0100               	movlb	0	; () banked
  7187  0001BE  51E1               	movf	_ic_ptr& (0+255),w,b
  7188  0001C0  26D9               	addwf	fsr2l,f,c
  7189  0001C2  0100               	movlb	0	; () banked
  7190  0001C4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7191  0001C6  22DA               	addwfc	fsr2h,f,c
  7192  0001C8  0E06               	movlw	6
  7193  0001CA  6EDF               	movwf	indf2,c
  7194                           
  7195                           ; BSR set to: 0
  7196  0001CC  D138               	goto	L10
  7197  0001CE                     i2l3157:
  7198                           
  7199                           ; BSR set to: 0
  7200  0001CE  0100               	movlb	0	; () banked
  7201  0001D0  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7202  0001D2  B4D8               	btfsc	status,2,c
  7203  0001D4  D155               	goto	i2l288
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7207  0001D6  0100               	movlb	0	; () banked
  7208  0001D8  EE20 F00B          	lfsr	2,11
  7209  0001DC  0100               	movlb	0	; () banked
  7210  0001DE  51E1               	movf	_ic_ptr& (0+255),w,b
  7211  0001E0  26D9               	addwf	fsr2l,f,c
  7212  0001E2  0100               	movlb	0	; () banked
  7213  0001E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7214  0001E6  22DA               	addwfc	fsr2h,f,c
  7215  0001E8  2ADF               	incf	indf2,f,c
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7219  0001EA  BAC7               	btfsc	4039,5,c	;volatile
  7220  0001EC  D019               	goto	i2l3173
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7224  0001EE  B4C7               	btfsc	4039,2,c	;volatile
  7225  0001F0  D00B               	goto	i2l3167
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7229  0001F2  0100               	movlb	0	; () banked
  7230  0001F4  EE20 F00C          	lfsr	2,12
  7231  0001F8  0100               	movlb	0	; () banked
  7232  0001FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7233  0001FC  26D9               	addwf	fsr2l,f,c
  7234  0001FE  0100               	movlb	0	; () banked
  7235  000200  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  000202  22DA               	addwfc	fsr2h,f,c
  7237  000204  0E07               	movlw	7
  7238  000206  D071               	goto	L8
  7239  000208                     i2l3167:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7243  000208  0100               	movlb	0	; () banked
  7244  00020A  EE20 F00C          	lfsr	2,12
  7245  00020E  0100               	movlb	0	; () banked
  7246  000210  51E1               	movf	_ic_ptr& (0+255),w,b
  7247  000212  26D9               	addwf	fsr2l,f,c
  7248  000214  0100               	movlb	0	; () banked
  7249  000216  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7250  000218  22DA               	addwfc	fsr2h,f,c
  7251  00021A  0E08               	movlw	8
  7252  00021C  6EDF               	movwf	indf2,c
  7253  00021E  D108               	goto	L7
  7254  000220                     i2l3173:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7258  000220  0100               	movlb	0	; () banked
  7259  000222  EE20 F00E          	lfsr	2,14
  7260  000226  0100               	movlb	0	; () banked
  7261  000228  51E1               	movf	_ic_ptr& (0+255),w,b
  7262  00022A  26D9               	addwf	fsr2l,f,c
  7263  00022C  0100               	movlb	0	; () banked
  7264  00022E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7265  000230  22DA               	addwfc	fsr2h,f,c
  7266  000232  2ADF               	incf	indf2,f,c
  7267                           
  7268                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7269  000234  0100               	movlb	0	; () banked
  7270  000236  EE20 F00C          	lfsr	2,12
  7271  00023A  0100               	movlb	0	; () banked
  7272  00023C  51E1               	movf	_ic_ptr& (0+255),w,b
  7273  00023E  26D9               	addwf	fsr2l,f,c
  7274  000240  0100               	movlb	0	; () banked
  7275  000242  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7276  000244  22DA               	addwfc	fsr2h,f,c
  7277  000246  0E05               	movlw	5
  7278  000248  6EDF               	movwf	indf2,c
  7279                           
  7280                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7281  00024A  0100               	movlb	0	; () banked
  7282  00024C  EE20 F00D          	lfsr	2,13
  7283  000250  0100               	movlb	0	; () banked
  7284  000252  51E1               	movf	_ic_ptr& (0+255),w,b
  7285  000254  26D9               	addwf	fsr2l,f,c
  7286  000256  0100               	movlb	0	; () banked
  7287  000258  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7288  00025A  22DA               	addwfc	fsr2h,f,c
  7289  00025C  0E06               	movlw	6
  7290  00025E  D045               	goto	L8
  7291  000260                     i2l3175:
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;my_i2c.c: 177: {
  7295                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7296  000260  0100               	movlb	0	; () banked
  7297  000262  EE20 F01A          	lfsr	2,26
  7298  000266  0100               	movlb	0	; () banked
  7299  000268  51E1               	movf	_ic_ptr& (0+255),w,b
  7300  00026A  26D9               	addwf	fsr2l,f,c
  7301  00026C  0100               	movlb	0	; () banked
  7302  00026E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7303  000270  22DA               	addwfc	fsr2h,f,c
  7304  000272  50DF               	movf	indf2,w,c
  7305  000274  0100               	movlb	0	; () banked
  7306  000276  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7307  000278  0100               	movlb	0	; () banked
  7308  00027A  EE20 F019          	lfsr	2,25
  7309  00027E  0100               	movlb	0	; () banked
  7310  000280  51E1               	movf	_ic_ptr& (0+255),w,b
  7311  000282  26D9               	addwf	fsr2l,f,c
  7312  000284  0100               	movlb	0	; () banked
  7313  000286  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7314  000288  22DA               	addwfc	fsr2h,f,c
  7315  00028A  50DF               	movf	indf2,w,c
  7316  00028C  0100               	movlb	0	; () banked
  7317  00028E  5DBB               	subwf	??_i2c_int_handler& (0+255),w,b
  7318  000290  B0D8               	btfsc	status,0,c
  7319  000292  D0D5               	goto	L10
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7323  000294  0100               	movlb	0	; () banked
  7324  000296  EE20 F01A          	lfsr	2,26
  7325  00029A  0100               	movlb	0	; () banked
  7326  00029C  51E1               	movf	_ic_ptr& (0+255),w,b
  7327  00029E  26D9               	addwf	fsr2l,f,c
  7328  0002A0  0100               	movlb	0	; () banked
  7329  0002A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7330  0002A4  22DA               	addwfc	fsr2h,f,c
  7331  0002A6  50DF               	movf	indf2,w,c
  7332  0002A8  0100               	movlb	0	; () banked
  7333  0002AA  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7334  0002AC  0100               	movlb	0	; () banked
  7335  0002AE  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7336  0002B0  0D01               	mullw	1
  7337  0002B2  0E0F               	movlw	15
  7338  0002B4  26F3               	addwf	prodl,f,c
  7339  0002B6  0E00               	movlw	0
  7340  0002B8  22F4               	addwfc	prodh,f,c
  7341  0002BA  50F3               	movf	prodl,w,c
  7342  0002BC  0100               	movlb	0	; () banked
  7343  0002BE  25E1               	addwf	_ic_ptr& (0+255),w,b
  7344  0002C0  6ED9               	movwf	fsr2l,c
  7345  0002C2  50F4               	movf	prodh,w,c
  7346  0002C4  0100               	movlb	0	; () banked
  7347  0002C6  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7348  0002C8  6EDA               	movwf	fsr2h,c
  7349  0002CA  50DF               	movf	indf2,w,c
  7350  0002CC  6EC9               	movwf	4041,c	;volatile
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7354  0002CE  0100               	movlb	0	; () banked
  7355  0002D0  EE20 F01A          	lfsr	2,26
  7356  0002D4  0100               	movlb	0	; () banked
  7357  0002D6  51E1               	movf	_ic_ptr& (0+255),w,b
  7358  0002D8  26D9               	addwf	fsr2l,f,c
  7359  0002DA  0100               	movlb	0	; () banked
  7360  0002DC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7361  0002DE  22DA               	addwfc	fsr2h,f,c
  7362  0002E0  2ADF               	incf	indf2,f,c
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;my_i2c.c: 181: data_written = 1;
  7366  0002E2  0E01               	movlw	1
  7367  0002E4  0100               	movlb	0	; () banked
  7368  0002E6  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  7369                           
  7370                           ;my_i2c.c: 182: } else {
  7371  0002E8  D0CB               	goto	i2l288
  7372  0002EA                     L8:
  7373  0002EA  6EDF               	movwf	indf2,c
  7374  0002EC  D0C9               	goto	i2l288
  7375  0002EE                     i2l308:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;my_i2c.c: 189: {
  7379                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7380  0002EE  A8C7               	btfss	4039,4,c	;volatile
  7381  0002F0  D05A               	goto	i2l3203
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7385  0002F2  0100               	movlb	0	; () banked
  7386  0002F4  EE20 F00B          	lfsr	2,11
  7387  0002F8  0100               	movlb	0	; () banked
  7388  0002FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7389  0002FC  26D9               	addwf	fsr2l,f,c
  7390  0002FE  0100               	movlb	0	; () banked
  7391  000300  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  000302  22DA               	addwfc	fsr2h,f,c
  7393  000304  2ADF               	incf	indf2,f,c
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;my_i2c.c: 194: if (data_read) {
  7397  000306  0100               	movlb	0	; () banked
  7398  000308  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7399  00030A  B4D8               	btfsc	status,2,c
  7400  00030C  D048               	goto	i2l3199
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7404  00030E  AAC7               	btfss	4039,5,c	;volatile
  7405  000310  D025               	goto	i2l3197
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7409  000312  0100               	movlb	0	; () banked
  7410  000314  EE20 F00A          	lfsr	2,10
  7411  000318  0100               	movlb	0	; () banked
  7412  00031A  51E1               	movf	_ic_ptr& (0+255),w,b
  7413  00031C  26D9               	addwf	fsr2l,f,c
  7414  00031E  0100               	movlb	0	; () banked
  7415  000320  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  000322  22DA               	addwfc	fsr2h,f,c
  7417  000324  50DF               	movf	indf2,w,c
  7418  000326  0100               	movlb	0	; () banked
  7419  000328  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7420  00032A  0100               	movlb	0	; () banked
  7421  00032C  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7422  00032E  0D01               	mullw	1
  7423  000330  50F3               	movf	prodl,w,c
  7424  000332  0100               	movlb	0	; () banked
  7425  000334  25E1               	addwf	_ic_ptr& (0+255),w,b
  7426  000336  6ED9               	movwf	fsr2l,c
  7427  000338  50F4               	movf	prodh,w,c
  7428  00033A  0100               	movlb	0	; () banked
  7429  00033C  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7430  00033E  6EDA               	movwf	fsr2h,c
  7431  000340  0100               	movlb	0	; () banked
  7432  000342  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7436  000346  0100               	movlb	0	; () banked
  7437  000348  EE20 F00A          	lfsr	2,10
  7438  00034C  0100               	movlb	0	; () banked
  7439  00034E  51E1               	movf	_ic_ptr& (0+255),w,b
  7440  000350  26D9               	addwf	fsr2l,f,c
  7441  000352  0100               	movlb	0	; () banked
  7442  000354  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7443  000356  22DA               	addwfc	fsr2h,f,c
  7444  000358  2ADF               	incf	indf2,f,c
  7445  00035A  D021               	goto	i2l3199
  7446  00035C                     i2l3197:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7450  00035C  0100               	movlb	0	; () banked
  7451  00035E  EE20 F00E          	lfsr	2,14
  7452  000362  0100               	movlb	0	; () banked
  7453  000364  51E1               	movf	_ic_ptr& (0+255),w,b
  7454  000366  26D9               	addwf	fsr2l,f,c
  7455  000368  0100               	movlb	0	; () banked
  7456  00036A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  00036C  22DA               	addwfc	fsr2h,f,c
  7458  00036E  2ADF               	incf	indf2,f,c
  7459                           
  7460                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7461  000370  0100               	movlb	0	; () banked
  7462  000372  EE20 F00D          	lfsr	2,13
  7463  000376  0100               	movlb	0	; () banked
  7464  000378  51E1               	movf	_ic_ptr& (0+255),w,b
  7465  00037A  26D9               	addwf	fsr2l,f,c
  7466  00037C  0100               	movlb	0	; () banked
  7467  00037E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7468  000380  22DA               	addwfc	fsr2h,f,c
  7469  000382  0E06               	movlw	6
  7470  000384  6EDF               	movwf	indf2,c
  7471                           
  7472                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7473  000386  0100               	movlb	0	; () banked
  7474  000388  EE20 F00C          	lfsr	2,12
  7475  00038C  0100               	movlb	0	; () banked
  7476  00038E  51E1               	movf	_ic_ptr& (0+255),w,b
  7477  000390  26D9               	addwf	fsr2l,f,c
  7478  000392  0100               	movlb	0	; () banked
  7479  000394  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7480  000396  22DA               	addwfc	fsr2h,f,c
  7481  000398  0E05               	movlw	5
  7482  00039A  6EDF               	movwf	indf2,c
  7483  00039C  D050               	goto	L10
  7484  00039E                     i2l3199:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 205: msg_ready = 1;
  7488  00039E  0E01               	movlw	1
  7489  0003A0  0100               	movlb	0	; () banked
  7490  0003A2  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493  0003A4  D04C               	goto	L10
  7494  0003A6                     i2l3203:
  7495                           
  7496                           ; BSR set to: 0
  7497  0003A6  0100               	movlb	0	; () banked
  7498  0003A8  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7499  0003AA  B4D8               	btfsc	status,2,c
  7500  0003AC  D069               	goto	i2l288
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7504  0003AE  0100               	movlb	0	; () banked
  7505  0003B0  EE20 F00B          	lfsr	2,11
  7506  0003B4  0100               	movlb	0	; () banked
  7507  0003B6  51E1               	movf	_ic_ptr& (0+255),w,b
  7508  0003B8  26D9               	addwf	fsr2l,f,c
  7509  0003BA  0100               	movlb	0	; () banked
  7510  0003BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7511  0003BE  22DA               	addwfc	fsr2h,f,c
  7512  0003C0  2ADF               	incf	indf2,f,c
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7516  0003C2  AAC7               	btfss	4039,5,c	;volatile
  7517  0003C4  D025               	goto	i2l316
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7521  0003C6  0100               	movlb	0	; () banked
  7522  0003C8  EE20 F00A          	lfsr	2,10
  7523  0003CC  0100               	movlb	0	; () banked
  7524  0003CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7525  0003D0  26D9               	addwf	fsr2l,f,c
  7526  0003D2  0100               	movlb	0	; () banked
  7527  0003D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7528  0003D6  22DA               	addwfc	fsr2h,f,c
  7529  0003D8  50DF               	movf	indf2,w,c
  7530  0003DA  0100               	movlb	0	; () banked
  7531  0003DC  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7532  0003DE  0100               	movlb	0	; () banked
  7533  0003E0  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7534  0003E2  0D01               	mullw	1
  7535  0003E4  50F3               	movf	prodl,w,c
  7536  0003E6  0100               	movlb	0	; () banked
  7537  0003E8  25E1               	addwf	_ic_ptr& (0+255),w,b
  7538  0003EA  6ED9               	movwf	fsr2l,c
  7539  0003EC  50F4               	movf	prodh,w,c
  7540  0003EE  0100               	movlb	0	; () banked
  7541  0003F0  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7542  0003F2  6EDA               	movwf	fsr2h,c
  7543  0003F4  0100               	movlb	0	; () banked
  7544  0003F6  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7548  0003FA  0100               	movlb	0	; () banked
  7549  0003FC  EE20 F00A          	lfsr	2,10
  7550  000400  0100               	movlb	0	; () banked
  7551  000402  51E1               	movf	_ic_ptr& (0+255),w,b
  7552  000404  26D9               	addwf	fsr2l,f,c
  7553  000406  0100               	movlb	0	; () banked
  7554  000408  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7555  00040A  22DA               	addwfc	fsr2h,f,c
  7556  00040C  2ADF               	incf	indf2,f,c
  7557                           
  7558                           ;my_i2c.c: 213: } else {
  7559  00040E  D038               	goto	i2l288
  7560  000410                     i2l316:
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7564  000410  A4C7               	btfss	4039,2,c	;volatile
  7565  000412  D6C7               	goto	i2l3155
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7569  000414  0100               	movlb	0	; () banked
  7570  000416  EE20 F00C          	lfsr	2,12
  7571  00041A  0100               	movlb	0	; () banked
  7572  00041C  51E1               	movf	_ic_ptr& (0+255),w,b
  7573  00041E  26D9               	addwf	fsr2l,f,c
  7574  000420  0100               	movlb	0	; () banked
  7575  000422  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7576  000424  22DA               	addwfc	fsr2h,f,c
  7577  000426  0E08               	movlw	8
  7578  000428  6EDF               	movwf	indf2,c
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;my_i2c.c: 216: msg_ready = 1;
  7582  00042A  0E01               	movlw	1
  7583  00042C  0100               	movlb	0	; () banked
  7584  00042E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7585  000430                     L7:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 217: msg_to_send = 1;
  7589  000430  0E01               	movlw	1
  7590  000432  0100               	movlb	0	; () banked
  7591  000434  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;my_i2c.c: 219: data_read = 0;
  7595  000436  0E00               	movlw	0
  7596  000438  0100               	movlb	0	; () banked
  7597  00043A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7598                           
  7599                           ;my_i2c.c: 220: } else {
  7600  00043C  D021               	goto	i2l288
  7601  00043E                     L10:
  7602                           
  7603                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7604  00043E  0100               	movlb	0	; () banked
  7605  000440  EE20 F00C          	lfsr	2,12
  7606  000444  0100               	movlb	0	; () banked
  7607  000446  51E1               	movf	_ic_ptr& (0+255),w,b
  7608  000448  26D9               	addwf	fsr2l,f,c
  7609  00044A  0100               	movlb	0	; () banked
  7610  00044C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7611  00044E  22DA               	addwfc	fsr2h,f,c
  7612  000450  0E05               	movlw	5
  7613  000452  D74B               	goto	L8
  7614  000454                     i2l3225:
  7615                           
  7616                           ; BSR set to: 0
  7617  000454  0100               	movlb	0	; () banked
  7618  000456  EE20 F00C          	lfsr	2,12
  7619  00045A  0100               	movlb	0	; () banked
  7620  00045C  51E1               	movf	_ic_ptr& (0+255),w,b
  7621  00045E  26D9               	addwf	fsr2l,f,c
  7622  000460  0100               	movlb	0	; () banked
  7623  000462  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  000464  22DA               	addwfc	fsr2h,f,c
  7625  000466  50DF               	movf	indf2,w,c
  7626                           
  7627                           ; Switch size 1, requested type "space"
  7628                           ; Number of cases is 4, Range of values is 5 to 8
  7629                           ; switch strategies available:
  7630                           ; Name         Instructions Cycles
  7631                           ; simple_byte           13     7 (average)
  7632                           ;	Chosen strategy is simple_byte
  7633  000468  0A05               	xorlw	5	; case 5
  7634  00046A  B4D8               	btfsc	status,2,c
  7635  00046C  D66B               	goto	i2l290
  7636  00046E  0A03               	xorlw	3	; case 6
  7637  000470  B4D8               	btfsc	status,2,c
  7638  000472  D681               	goto	i2l294
  7639  000474  0A01               	xorlw	1	; case 7
  7640  000476  B4D8               	btfsc	status,2,c
  7641  000478  D73A               	goto	i2l308
  7642  00047A  0A0F               	xorlw	15	; case 8
  7643  00047C  B4D8               	btfsc	status,2,c
  7644  00047E  D6F0               	goto	i2l3175
  7645  000480                     i2l288:
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;my_i2c.c: 230: }
  7649                           ;my_i2c.c: 233: if (data_read || data_written) {
  7650  000480  0100               	movlb	0	; () banked
  7651  000482  67C4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7652  000484  D004               	goto	i2l322
  7653                           
  7654                           ; BSR set to: 0
  7655  000486  0100               	movlb	0	; () banked
  7656  000488  51BF               	movf	i2c_int_handler@data_written& (0+255),w,b
  7657  00048A  B4D8               	btfsc	status,2,c
  7658  00048C  D002               	goto	i2l3231
  7659  00048E                     i2l322:
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7663  00048E  A8C6               	btfss	4038,4,c	;volatile
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7667  000490  88C6               	bsf	4038,4,c	;volatile
  7668  000492                     i2l3231:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;my_i2c.c: 237: }
  7672                           ;my_i2c.c: 238: }
  7673                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7674  000492  0100               	movlb	0	; () banked
  7675  000494  EE20 F00A          	lfsr	2,10
  7676  000498  0100               	movlb	0	; () banked
  7677  00049A  51E1               	movf	_ic_ptr& (0+255),w,b
  7678  00049C  26D9               	addwf	fsr2l,f,c
  7679  00049E  0100               	movlb	0	; () banked
  7680  0004A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7681  0004A2  22DA               	addwfc	fsr2h,f,c
  7682  0004A4  0E08               	movlw	8
  7683  0004A6  64DF               	cpfsgt	indf2,c
  7684  0004A8  D023               	goto	i2l3237
  7685                           
  7686                           ; BSR set to: 0
  7687  0004AA  0100               	movlb	0	; () banked
  7688  0004AC  67C3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7689  0004AE  D020               	goto	i2l3237
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7693  0004B0  0100               	movlb	0	; () banked
  7694  0004B2  EE20 F00C          	lfsr	2,12
  7695  0004B6  0100               	movlb	0	; () banked
  7696  0004B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7697  0004BA  26D9               	addwf	fsr2l,f,c
  7698  0004BC  0100               	movlb	0	; () banked
  7699  0004BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7700  0004C0  22DA               	addwfc	fsr2h,f,c
  7701  0004C2  0E05               	movlw	5
  7702  0004C4  6EDF               	movwf	indf2,c
  7703                           
  7704                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7705  0004C6  0100               	movlb	0	; () banked
  7706  0004C8  EE20 F00E          	lfsr	2,14
  7707  0004CC  0100               	movlb	0	; () banked
  7708  0004CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7709  0004D0  26D9               	addwf	fsr2l,f,c
  7710  0004D2  0100               	movlb	0	; () banked
  7711  0004D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7712  0004D6  22DA               	addwfc	fsr2h,f,c
  7713  0004D8  2ADF               	incf	indf2,f,c
  7714                           
  7715                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7716  0004DA  0100               	movlb	0	; () banked
  7717  0004DC  EE20 F00D          	lfsr	2,13
  7718  0004E0  0100               	movlb	0	; () banked
  7719  0004E2  51E1               	movf	_ic_ptr& (0+255),w,b
  7720  0004E4  26D9               	addwf	fsr2l,f,c
  7721  0004E6  0100               	movlb	0	; () banked
  7722  0004E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7723  0004EA  22DA               	addwfc	fsr2h,f,c
  7724  0004EC  0E07               	movlw	7
  7725  0004EE  6EDF               	movwf	indf2,c
  7726  0004F0                     i2l3237:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;my_i2c.c: 245: }
  7730                           ;my_i2c.c: 247: if (msg_ready) {
  7731  0004F0  0100               	movlb	0	; () banked
  7732  0004F2  51C3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7733  0004F4  B4D8               	btfsc	status,2,c
  7734  0004F6  D03E               	goto	i2l3245
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7738  0004F8  0100               	movlb	0	; () banked
  7739  0004FA  EE20 F00B          	lfsr	2,11
  7740  0004FE  0100               	movlb	0	; () banked
  7741  000500  51E1               	movf	_ic_ptr& (0+255),w,b
  7742  000502  26D9               	addwf	fsr2l,f,c
  7743  000504  0100               	movlb	0	; () banked
  7744  000506  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7745  000508  22DA               	addwfc	fsr2h,f,c
  7746  00050A  0100               	movlb	0	; () banked
  7747  00050C  EE10 F00A          	lfsr	1,10
  7748  000510  0100               	movlb	0	; () banked
  7749  000512  51E1               	movf	_ic_ptr& (0+255),w,b
  7750  000514  26E1               	addwf	fsr1l,f,c
  7751  000516  0100               	movlb	0	; () banked
  7752  000518  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7753  00051A  22E2               	addwfc	fsr1h,f,c
  7754  00051C  50E7               	movf	indf1,w,c
  7755  00051E  0100               	movlb	0	; () banked
  7756  000520  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7757  000522  0100               	movlb	0	; () banked
  7758  000524  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7759  000526  0D01               	mullw	1
  7760  000528  50F3               	movf	prodl,w,c
  7761  00052A  0100               	movlb	0	; () banked
  7762  00052C  25E1               	addwf	_ic_ptr& (0+255),w,b
  7763  00052E  6EE1               	movwf	fsr1l,c
  7764  000530  50F4               	movf	prodh,w,c
  7765  000532  0100               	movlb	0	; () banked
  7766  000534  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7767  000536  6EE2               	movwf	fsr1h,c
  7768  000538  CFDF FFE7          	movff	indf2,indf1
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7772  00053C  0E28               	movlw	40
  7773  00053E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7774  000540  0100               	movlb	0	; () banked
  7775  000542  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7776  000546  0100               	movlb	0	; () banked
  7777  000548  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7778  00054C  0100               	movlb	0	; () banked
  7779  00054E  EE20 F00A          	lfsr	2,10
  7780  000552  0100               	movlb	0	; () banked
  7781  000554  51E1               	movf	_ic_ptr& (0+255),w,b
  7782  000556  26D9               	addwf	fsr2l,f,c
  7783  000558  0100               	movlb	0	; () banked
  7784  00055A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7785  00055C  22DA               	addwfc	fsr2h,f,c
  7786  00055E  50DF               	movf	indf2,w,c
  7787  000560  0100               	movlb	0	; () banked
  7788  000562  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7789  000564  0100               	movlb	0	; () banked
  7790  000566  29BB               	incf	??_i2c_int_handler& (0+255),w,b
  7791  000568  ECE9  F00D         	call	_ToMainHigh_sendmsg
  7792                           
  7793                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7794  00056C  0100               	movlb	0	; () banked
  7795  00056E  EE20 F00A          	lfsr	2,10
  7796  000572  D03E               	goto	L9
  7797  000574                     i2l3245:
  7798                           
  7799                           ; BSR set to: 0
  7800  000574  0100               	movlb	0	; () banked
  7801  000576  EE20 F00E          	lfsr	2,14
  7802  00057A  0100               	movlb	0	; () banked
  7803  00057C  51E1               	movf	_ic_ptr& (0+255),w,b
  7804  00057E  26D9               	addwf	fsr2l,f,c
  7805  000580  0100               	movlb	0	; () banked
  7806  000582  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7807  000584  22DA               	addwfc	fsr2h,f,c
  7808  000586  50DF               	movf	indf2,w,c
  7809  000588  B4D8               	btfsc	status,2,c
  7810  00058A  D03A               	goto	i2l3253
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7814  00058C  0100               	movlb	0	; () banked
  7815  00058E  EE20 F00E          	lfsr	2,14
  7816  000592  0100               	movlb	0	; () banked
  7817  000594  51E1               	movf	_ic_ptr& (0+255),w,b
  7818  000596  26D9               	addwf	fsr2l,f,c
  7819  000598  0100               	movlb	0	; () banked
  7820  00059A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7821  00059C  22DA               	addwfc	fsr2h,f,c
  7822  00059E  50DF               	movf	indf2,w,c
  7823  0005A0  0100               	movlb	0	; () banked
  7824  0005A2  6FBC               	movwf	i2c_int_handler@error_buf& (0+255),b
  7825                           
  7826                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7827  0005A4  0100               	movlb	0	; () banked
  7828  0005A6  EE20 F00D          	lfsr	2,13
  7829  0005AA  0100               	movlb	0	; () banked
  7830  0005AC  51E1               	movf	_ic_ptr& (0+255),w,b
  7831  0005AE  26D9               	addwf	fsr2l,f,c
  7832  0005B0  0100               	movlb	0	; () banked
  7833  0005B2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  0005B4  22DA               	addwfc	fsr2h,f,c
  7835  0005B6  50DF               	movf	indf2,w,c
  7836  0005B8  0100               	movlb	0	; () banked
  7837  0005BA  6FBD               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7838                           
  7839                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7840  0005BC  0100               	movlb	0	; () banked
  7841  0005BE  EE20 F00B          	lfsr	2,11
  7842  0005C2  0100               	movlb	0	; () banked
  7843  0005C4  51E1               	movf	_ic_ptr& (0+255),w,b
  7844  0005C6  26D9               	addwf	fsr2l,f,c
  7845  0005C8  0100               	movlb	0	; () banked
  7846  0005CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7847  0005CC  22DA               	addwfc	fsr2h,f,c
  7848  0005CE  50DF               	movf	indf2,w,c
  7849  0005D0  0100               	movlb	0	; () banked
  7850  0005D2  6FBE               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7854  0005D4  0E29               	movlw	41
  7855  0005D6  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7856  0005D8  0100               	movlb	0	; () banked
  7857  0005DA  0E00               	movlw	high i2c_int_handler@error_buf
  7858  0005DC  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7859  0005DE  0100               	movlb	0	; () banked
  7860  0005E0  0EBC               	movlw	low i2c_int_handler@error_buf
  7861  0005E2  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7862  0005E4  0E03               	movlw	3
  7863  0005E6  ECE9  F00D         	call	_ToMainHigh_sendmsg
  7864                           
  7865                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7866  0005EA  0100               	movlb	0	; () banked
  7867  0005EC  EE20 F00E          	lfsr	2,14
  7868  0005F0                     L9:
  7869  0005F0  0100               	movlb	0	; () banked
  7870  0005F2  51E1               	movf	_ic_ptr& (0+255),w,b
  7871  0005F4  26D9               	addwf	fsr2l,f,c
  7872  0005F6  0100               	movlb	0	; () banked
  7873  0005F8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7874  0005FA  22DA               	addwfc	fsr2h,f,c
  7875  0005FC  0E00               	movlw	0
  7876  0005FE  6EDF               	movwf	indf2,c
  7877  000600                     i2l3253:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;my_i2c.c: 257: }
  7881                           ;my_i2c.c: 258: if (msg_to_send) {
  7882  000600  0100               	movlb	0	; () banked
  7883  000602  51C2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7884  000604  B4D8               	btfsc	status,2,c
  7885  000606  0012               	return	
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7889  000608  0E2A               	movlw	42
  7890  00060A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7891  00060C  0100               	movlb	0	; () banked
  7892  00060E  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7893  000612  0100               	movlb	0	; () banked
  7894  000614  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7895  000618  0E00               	movlw	0
  7896  00061A  ECE9  F00D         	call	_ToMainHigh_sendmsg
  7897                           
  7898                           ;my_i2c.c: 261: msg_to_send = 0;
  7899  00061E  0E00               	movlw	0
  7900  000620  0100               	movlb	0	; () banked
  7901  000622  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7902  000624  0012               	return	
  7903  000626                     __end_of_i2c_int_handler:
  7904                           	opt stack 0
  7905                           pclatu	equ	0xFFB
  7906                           pclath	equ	0xFFA
  7907                           tblptru	equ	0xFF8
  7908                           tblptrh	equ	0xFF7
  7909                           tblptrl	equ	0xFF6
  7910                           tablat	equ	0xFF5
  7911                           prodh	equ	0xFF4
  7912                           prodl	equ	0xFF3
  7913                           intcon	equ	0xFF2
  7914                           postinc0	equ	0xFEE
  7915                           fsr0h	equ	0xFEA
  7916                           fsr0l	equ	0xFE9
  7917                           wreg	equ	0xFE8
  7918                           indf1	equ	0xFE7
  7919                           fsr1h	equ	0xFE2
  7920                           fsr1l	equ	0xFE1
  7921                           bsr	equ	0xFE0
  7922                           indf2	equ	0xFDF
  7923                           postinc2	equ	0xFDE
  7924                           postdec2	equ	0xFDD
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function _handle_start *****************
  7930 ;; Defined at:
  7931 ;;		line 71 in file "src/my_i2c.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  data_read       1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  data_read       1   51[COMRAM] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;		None               void
  7938 ;; Registers used:
  7939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7945 ;;      Params:         0       0       0       0       0
  7946 ;;      Locals:         1       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0
  7948 ;;      Totals:         1       0       0       0       0
  7949 ;;Total ram usage:        1 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; This function calls:
  7952 ;;		Nothing
  7953 ;; This function is called by:
  7954 ;;		_i2c_int_handler
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text45
  7959  0010B0                     __ptext45:
  7960                           	opt stack 0
  7961  0010B0                     _handle_start:
  7962                           	opt stack 18
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;incstack = 0
  7966                           ;handle_start@data_read stored from wreg
  7967  0010B0  6E34               	movwf	handle_start@data_read,c
  7968                           
  7969                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7970  0010B2  0100               	movlb	0	; () banked
  7971  0010B4  EE20 F00B          	lfsr	2,11
  7972  0010B8  0100               	movlb	0	; () banked
  7973  0010BA  51E1               	movf	_ic_ptr& (0+255),w,b
  7974  0010BC  26D9               	addwf	fsr2l,f,c
  7975  0010BE  0100               	movlb	0	; () banked
  7976  0010C0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  0010C2  22DA               	addwfc	fsr2h,f,c
  7978  0010C4  0E01               	movlw	1
  7979  0010C6  6EDF               	movwf	indf2,c
  7980                           
  7981                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7982  0010C8  0100               	movlb	0	; () banked
  7983  0010CA  EE20 F00A          	lfsr	2,10
  7984  0010CE  0100               	movlb	0	; () banked
  7985  0010D0  51E1               	movf	_ic_ptr& (0+255),w,b
  7986  0010D2  26D9               	addwf	fsr2l,f,c
  7987  0010D4  0100               	movlb	0	; () banked
  7988  0010D6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7989  0010D8  22DA               	addwfc	fsr2h,f,c
  7990  0010DA  0E00               	movlw	0
  7991  0010DC  6EDF               	movwf	indf2,c
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;my_i2c.c: 75: if (data_read) {
  7995  0010DE  5034               	movf	handle_start@data_read,w,c
  7996  0010E0  B4D8               	btfsc	status,2,c
  7997  0010E2  D03D               	goto	i2l2321
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8001  0010E4  AAC7               	btfss	4039,5,c	;volatile
  8002  0010E6  D021               	goto	i2l278
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8006  0010E8  0100               	movlb	0	; () banked
  8007  0010EA  EE20 F00C          	lfsr	2,12
  8008  0010EE  0100               	movlb	0	; () banked
  8009  0010F0  51E1               	movf	_ic_ptr& (0+255),w,b
  8010  0010F2  26D9               	addwf	fsr2l,f,c
  8011  0010F4  0100               	movlb	0	; () banked
  8012  0010F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8013  0010F8  22DA               	addwfc	fsr2h,f,c
  8014  0010FA  0E05               	movlw	5
  8015  0010FC  6EDF               	movwf	indf2,c
  8016                           
  8017                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8018  0010FE  0100               	movlb	0	; () banked
  8019  001100  EE20 F00E          	lfsr	2,14
  8020  001104  0100               	movlb	0	; () banked
  8021  001106  51E1               	movf	_ic_ptr& (0+255),w,b
  8022  001108  26D9               	addwf	fsr2l,f,c
  8023  00110A  0100               	movlb	0	; () banked
  8024  00110C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8025  00110E  22DA               	addwfc	fsr2h,f,c
  8026  001110  2ADF               	incf	indf2,f,c
  8027                           
  8028                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8029  001112  0100               	movlb	0	; () banked
  8030  001114  EE20 F00D          	lfsr	2,13
  8031  001118  0100               	movlb	0	; () banked
  8032  00111A  51E1               	movf	_ic_ptr& (0+255),w,b
  8033  00111C  26D9               	addwf	fsr2l,f,c
  8034  00111E  0100               	movlb	0	; () banked
  8035  001120  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8036  001122  22DA               	addwfc	fsr2h,f,c
  8037  001124  0E05               	movlw	5
  8038  001126  6EDF               	movwf	indf2,c
  8039                           
  8040                           ;my_i2c.c: 82: } else {
  8041  001128  0012               	return	
  8042  00112A                     i2l278:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8046  00112A  A4C7               	btfss	4039,2,c	;volatile
  8047  00112C  D00C               	goto	i2l2319
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8051  00112E  0100               	movlb	0	; () banked
  8052  001130  EE20 F00C          	lfsr	2,12
  8053  001134  0100               	movlb	0	; () banked
  8054  001136  51E1               	movf	_ic_ptr& (0+255),w,b
  8055  001138  26D9               	addwf	fsr2l,f,c
  8056  00113A  0100               	movlb	0	; () banked
  8057  00113C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8058  00113E  22DA               	addwfc	fsr2h,f,c
  8059  001140  0E08               	movlw	8
  8060  001142  6EDF               	movwf	indf2,c
  8061                           
  8062                           ;my_i2c.c: 85: } else {
  8063  001144  0012               	return	
  8064  001146                     i2l2319:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8068  001146  0100               	movlb	0	; () banked
  8069  001148  EE20 F00C          	lfsr	2,12
  8070  00114C  0100               	movlb	0	; () banked
  8071  00114E  51E1               	movf	_ic_ptr& (0+255),w,b
  8072  001150  26D9               	addwf	fsr2l,f,c
  8073  001152  0100               	movlb	0	; () banked
  8074  001154  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8075  001156  22DA               	addwfc	fsr2h,f,c
  8076  001158  0E07               	movlw	7
  8077  00115A  6EDF               	movwf	indf2,c
  8078  00115C  0012               	return	
  8079  00115E                     i2l2321:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8083  00115E  0100               	movlb	0	; () banked
  8084  001160  EE20 F00C          	lfsr	2,12
  8085  001164  0100               	movlb	0	; () banked
  8086  001166  51E1               	movf	_ic_ptr& (0+255),w,b
  8087  001168  26D9               	addwf	fsr2l,f,c
  8088  00116A  0100               	movlb	0	; () banked
  8089  00116C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8090  00116E  22DA               	addwfc	fsr2h,f,c
  8091  001170  0E06               	movlw	6
  8092  001172  6EDF               	movwf	indf2,c
  8093  001174  0012               	return	
  8094  001176                     __end_of_handle_start:
  8095                           	opt stack 0
  8096                           pclatu	equ	0xFFB
  8097                           pclath	equ	0xFFA
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           postinc0	equ	0xFEE
  8106                           fsr0h	equ	0xFEA
  8107                           fsr0l	equ	0xFE9
  8108                           wreg	equ	0xFE8
  8109                           indf1	equ	0xFE7
  8110                           fsr1h	equ	0xFE2
  8111                           fsr1l	equ	0xFE1
  8112                           bsr	equ	0xFE0
  8113                           indf2	equ	0xFDF
  8114                           postinc2	equ	0xFDE
  8115                           postdec2	equ	0xFDD
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function _ToMainHigh_sendmsg *****************
  8121 ;; Defined at:
  8122 ;;		line 126 in file "src/messages.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  length          1    wreg     unsigned char 
  8125 ;;  msgtype         1   68[COMRAM] unsigned char 
  8126 ;;  data            2   69[COMRAM] PTR void 
  8127 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  length          1   71[COMRAM] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      char 
  8132 ;; Registers used:
  8133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8139 ;;      Params:         3       0       0       0       0
  8140 ;;      Locals:         1       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0
  8142 ;;      Totals:         4       0       0       0       0
  8143 ;;Total ram usage:        4 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    2
  8146 ;; This function calls:
  8147 ;;		i2_send_msg
  8148 ;; This function is called by:
  8149 ;;		_i2c_int_handler
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text46
  8154  001BD2                     __ptext46:
  8155                           	opt stack 0
  8156  001BD2                     _ToMainHigh_sendmsg:
  8157                           	opt stack 16
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;incstack = 0
  8161                           ;ToMainHigh_sendmsg@length stored from wreg
  8162  001BD2  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8163                           
  8164                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8165                           ;	Return value of _ToMainHigh_sendmsg is never used
  8166  001BD4  0101               	movlb	1	; () banked
  8167  001BD6  0E01               	movlw	high _ToMainHigh_MQ
  8168  001BD8  6E3F               	movwf	i2send_msg@qptr+1,c
  8169  001BDA  0101               	movlb	1	; () banked
  8170  001BDC  0EB6               	movlw	low _ToMainHigh_MQ
  8171  001BDE  6E3E               	movwf	i2send_msg@qptr,c
  8172  001BE0  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8173  001BE4  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8174  001BE8  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8175  001BEC  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8176  001BF0  ECBB  F008         	call	i2_send_msg	;wreg free
  8177  001BF4  0012               	return	
  8178  001BF6                     __end_of_ToMainHigh_sendmsg:
  8179                           	opt stack 0
  8180                           pclatu	equ	0xFFB
  8181                           pclath	equ	0xFFA
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           postinc0	equ	0xFEE
  8190                           fsr0h	equ	0xFEA
  8191                           fsr0l	equ	0xFE9
  8192                           wreg	equ	0xFE8
  8193                           indf1	equ	0xFE7
  8194                           fsr1h	equ	0xFE2
  8195                           fsr1l	equ	0xFE1
  8196                           bsr	equ	0xFE0
  8197                           indf2	equ	0xFDF
  8198                           postinc2	equ	0xFDE
  8199                           postdec2	equ	0xFDD
  8200                           fsr2h	equ	0xFDA
  8201                           fsr2l	equ	0xFD9
  8202                           status	equ	0xFD8
  8203                           
  8204 ;; *************** function i2_send_msg *****************
  8205 ;; Defined at:
  8206 ;;		line 24 in file "src/messages.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8209 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8210 ;;  length          1   63[COMRAM] unsigned char 
  8211 ;;  msgtype         1   64[COMRAM] unsigned char 
  8212 ;;  data            2   65[COMRAM] PTR void 
  8213 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8214 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  8215 ;;		 -> main@uc(5), 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8218 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8219 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8220 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8221 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      char 
  8224 ;; Registers used:
  8225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8231 ;;      Params:         6       0       0       0       0
  8232 ;;      Locals:         0       5       0       0       0
  8233 ;;      Temps:          1       0       0       0       0
  8234 ;;      Totals:         7       5       0       0       0
  8235 ;;Total ram usage:       12 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    1
  8238 ;; This function calls:
  8239 ;;		i2_memcpy
  8240 ;; This function is called by:
  8241 ;;		_ToMainHigh_sendmsg
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text47
  8246  001176                     __ptext47:
  8247                           	opt stack 0
  8248  001176                     i2_send_msg:
  8249                           	opt stack 16
  8250                           
  8251                           ;messages.c: 25: unsigned char slot;
  8252                           ;messages.c: 27: msg *qmsg;
  8253                           ;messages.c: 28: size_t tlength = length;
  8254                           
  8255                           ;incstack = 0
  8256  001176  0100               	movlb	0	; () banked
  8257  001178  C040  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8258  00117C  0100               	movlb	0	; () banked
  8259  00117E  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8263  001180  EE20 F034          	lfsr	2,52
  8264  001184  503E               	movf	i2send_msg@qptr,w,c
  8265  001186  26D9               	addwf	fsr2l,f,c
  8266  001188  503F               	movf	i2send_msg@qptr+1,w,c
  8267  00118A  22DA               	addwfc	fsr2h,f,c
  8268  00118C  50DF               	movf	indf2,w,c
  8269  00118E  0100               	movlb	0	; () banked
  8270  001190  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8274  001192  0100               	movlb	0	; () banked
  8275  001194  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8276  001196  0D0D               	mullw	13
  8277  001198  50F3               	movf	prodl,w,c
  8278  00119A  243E               	addwf	i2send_msg@qptr,w,c
  8279  00119C  0100               	movlb	0	; () banked
  8280  00119E  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8281  0011A0  50F4               	movf	prodh,w,c
  8282  0011A2  203F               	addwfc	i2send_msg@qptr+1,w,c
  8283  0011A4  0100               	movlb	0	; () banked
  8284  0011A6  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;messages.c: 41: if (qmsg->full != 0) {
  8288  0011A8  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8289  0011AC  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8290  0011B0  50DF               	movf	indf2,w,c
  8291  0011B2  B4D8               	btfsc	status,2,c
  8292  0011B4  D002               	goto	i2l3061
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;messages.c: 42: return (-1);
  8296  0011B6  0EFF               	movlw	255
  8297  0011B8  0012               	return	
  8298  0011BA                     i2l3061:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;messages.c: 43: }
  8302                           ;messages.c: 46: qmsg->length = length;
  8303  0011BA  0100               	movlb	0	; () banked
  8304  0011BC  EE20 F001          	lfsr	2,1
  8305  0011C0  0100               	movlb	0	; () banked
  8306  0011C2  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8307  0011C4  26D9               	addwf	fsr2l,f,c
  8308  0011C6  0100               	movlb	0	; () banked
  8309  0011C8  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8310  0011CA  22DA               	addwfc	fsr2h,f,c
  8311  0011CC  C040  FFDF         	movff	i2send_msg@length,indf2
  8312                           
  8313                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8314  0011D0  0100               	movlb	0	; () banked
  8315  0011D2  EE20 F002          	lfsr	2,2
  8316  0011D6  0100               	movlb	0	; () banked
  8317  0011D8  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8318  0011DA  26D9               	addwf	fsr2l,f,c
  8319  0011DC  0100               	movlb	0	; () banked
  8320  0011DE  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8321  0011E0  22DA               	addwfc	fsr2h,f,c
  8322  0011E2  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8326  0011E6  0E03               	movlw	3
  8327  0011E8  0100               	movlb	0	; () banked
  8328  0011EA  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8329  0011EC  6E34               	movwf	i2memcpy@d1,c
  8330  0011EE  0E00               	movlw	0
  8331  0011F0  0100               	movlb	0	; () banked
  8332  0011F2  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8333  0011F4  6E35               	movwf	i2memcpy@d1+1,c
  8334  0011F6  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8335  0011FA  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8336  0011FE  C0B6  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8337  001202  C0B7  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8338  001206  EC71  F00C         	call	i2_memcpy	;wreg free
  8339                           
  8340                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8341  00120A  EE20 F034          	lfsr	2,52
  8342  00120E  503E               	movf	i2send_msg@qptr,w,c
  8343  001210  26D9               	addwf	fsr2l,f,c
  8344  001212  503F               	movf	i2send_msg@qptr+1,w,c
  8345  001214  22DA               	addwfc	fsr2h,f,c
  8346  001216  EE10 F034          	lfsr	1,52
  8347  00121A  503E               	movf	i2send_msg@qptr,w,c
  8348  00121C  26E1               	addwf	fsr1l,f,c
  8349  00121E  503F               	movf	i2send_msg@qptr+1,w,c
  8350  001220  22E2               	addwfc	fsr1h,f,c
  8351  001222  50E7               	movf	indf1,w,c
  8352  001224  6E44               	movwf	??i2_send_msg& (0+255),c
  8353  001226  2844               	incf	??i2_send_msg,w,c
  8354  001228  0B03               	andlw	3
  8355  00122A  6EDF               	movwf	indf2,c
  8356                           
  8357                           ;messages.c: 59: qmsg->full = 1;
  8358  00122C  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8359  001230  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8360  001234  0E01               	movlw	1
  8361  001236  6EDF               	movwf	indf2,c
  8362                           
  8363                           ;messages.c: 60: return (1);
  8364  001238  0E01               	movlw	1
  8365  00123A  0012               	return	
  8366  00123C                     __end_ofi2_send_msg:
  8367                           	opt stack 0
  8368                           pclatu	equ	0xFFB
  8369                           pclath	equ	0xFFA
  8370                           tblptru	equ	0xFF8
  8371                           tblptrh	equ	0xFF7
  8372                           tblptrl	equ	0xFF6
  8373                           tablat	equ	0xFF5
  8374                           prodh	equ	0xFF4
  8375                           prodl	equ	0xFF3
  8376                           intcon	equ	0xFF2
  8377                           postinc0	equ	0xFEE
  8378                           fsr0h	equ	0xFEA
  8379                           fsr0l	equ	0xFE9
  8380                           wreg	equ	0xFE8
  8381                           indf1	equ	0xFE7
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           bsr	equ	0xFE0
  8385                           indf2	equ	0xFDF
  8386                           postinc2	equ	0xFDE
  8387                           postdec2	equ	0xFDD
  8388                           fsr2h	equ	0xFDA
  8389                           fsr2l	equ	0xFD9
  8390                           status	equ	0xFD8
  8391                           
  8392 ;; *************** function i2_memcpy *****************
  8393 ;; Defined at:
  8394 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  d1              2   51[COMRAM] PTR void 
  8397 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8398 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8399 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8400 ;;  s1              2   53[COMRAM] PTR const void 
  8401 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8402 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8403 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8404 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8405 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  8406 ;;		 -> main@uc(5), 
  8407 ;;  n               2   55[COMRAM] unsigned int 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8410 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8411 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8412 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8413 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8414 ;;		 -> main@ctrl(2), main@test(2), main@uthread_data(10), main@ic(28), 
  8415 ;;		 -> main@uc(5), 
  8416 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8417 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8418 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8419 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  2   51[COMRAM] PTR void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8429 ;;      Params:         6       0       0       0       0
  8430 ;;      Locals:         4       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0
  8432 ;;      Totals:        10       0       0       0       0
  8433 ;;Total ram usage:       10 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		i2_send_msg
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text48
  8443  0018E2                     __ptext48:
  8444                           	opt stack 0
  8445  0018E2                     i2_memcpy:
  8446                           	opt stack 16
  8447                           
  8448                           ;incstack = 0
  8449  0018E2  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8450  0018E6  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8451  0018EA  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8452  0018EE  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8453  0018F2  D00E               	goto	i2l3023
  8454  0018F4                     i2l3017:
  8455  0018F4  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8456  0018F8  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8457  0018FC  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8458  001900  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8459  001904  CFDF FFE7          	movff	indf2,indf1
  8460  001908  4A3C               	infsnz	i2memcpy@s,f,c
  8461  00190A  2A3D               	incf	i2memcpy@s+1,f,c
  8462  00190C  4A3A               	infsnz	i2memcpy@d,f,c
  8463  00190E  2A3B               	incf	i2memcpy@d+1,f,c
  8464  001910                     i2l3023:
  8465  001910  0638               	decf	i2memcpy@n,f,c
  8466  001912  A0D8               	btfss	status,0,c
  8467  001914  0639               	decf	i2memcpy@n+1,f,c
  8468  001916  2838               	incf	i2memcpy@n& (0+255),w,c
  8469  001918  B4D8               	btfsc	status,2,c
  8470  00191A  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8471  00191C  B4D8               	btfsc	status,2,c
  8472                           
  8473                           ;	Return value of i2_memcpy is never used
  8474  00191E  0012               	return	
  8475  001920  D7E9               	goto	i2l3017
  8476  001922                     __end_ofi2_memcpy:
  8477                           	opt stack 0
  8478                           pclatu	equ	0xFFB
  8479                           pclath	equ	0xFFA
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           indf1	equ	0xFE7
  8492                           fsr1h	equ	0xFE2
  8493                           fsr1l	equ	0xFE1
  8494                           bsr	equ	0xFE0
  8495                           indf2	equ	0xFDF
  8496                           postinc2	equ	0xFDE
  8497                           postdec2	equ	0xFDD
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function _SleepIfOkay *****************
  8503 ;; Defined at:
  8504 ;;		line 226 in file "src/messages.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;		None               void
  8511 ;; Registers used:
  8512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8518 ;;      Params:         0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0
  8521 ;;      Totals:         0       0       0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    2
  8525 ;; This function calls:
  8526 ;;		_enter_sleep_mode
  8527 ;;		i2_check_msg
  8528 ;;		i2_in_high_int
  8529 ;;		i2_in_low_int
  8530 ;; This function is called by:
  8531 ;;		_InterruptHandlerHigh
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text49
  8536  00180A                     __ptext49:
  8537                           	opt stack 0
  8538  00180A                     _SleepIfOkay:
  8539                           	opt stack 17
  8540                           
  8541                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8542                           
  8543                           ;incstack = 0
  8544  00180A  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8545  00180C  D001               	goto	i2l2581
  8546  00180E  0012               	return	
  8547  001810                     i2l2581:
  8548                           
  8549                           ;messages.c: 230: }
  8550                           ;messages.c: 233: if (in_low_int()) {
  8551  001810  EC99  F00D         	call	i2_in_low_int	;wreg free
  8552  001814  5037               	movf	?i2_in_low_int+1,w,c
  8553  001816  1036               	iorwf	?i2_in_low_int,w,c
  8554  001818  A4D8               	btfss	status,2,c
  8555  00181A  0012               	return	
  8556                           
  8557                           ;messages.c: 235: }
  8558                           ;messages.c: 238: if (!in_high_int()) {
  8559                           
  8560                           ;messages.c: 234: return;
  8561  00181C  EC56  F00E         	call	i2_in_high_int	;wreg free
  8562  001820  5035               	movf	?i2_in_high_int+1,w,c
  8563  001822  1034               	iorwf	?i2_in_high_int,w,c
  8564  001824  B4D8               	btfsc	status,2,c
  8565  001826  0012               	return	
  8566                           
  8567                           ;messages.c: 240: }
  8568                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8569                           
  8570                           ;messages.c: 239: return;
  8571  001828  0101               	movlb	1	; () banked
  8572  00182A  0E01               	movlw	high _ToMainHigh_MQ
  8573  00182C  6E35               	movwf	i2check_msg@qptr+1,c
  8574  00182E  0101               	movlb	1	; () banked
  8575  001830  0EB6               	movlw	low _ToMainHigh_MQ
  8576  001832  6E34               	movwf	i2check_msg@qptr,c
  8577  001834  ECFB  F00D         	call	i2_check_msg	;wreg free
  8578  001838  0900               	iorlw	0
  8579  00183A  A4D8               	btfss	status,2,c
  8580  00183C  0012               	return	
  8581                           
  8582                           ;messages.c: 247: }
  8583                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8584                           
  8585                           ;messages.c: 246: return;
  8586  00183E  0100               	movlb	0	; () banked
  8587  001840  0E00               	movlw	high _ToMainLow_MQ
  8588  001842  6E35               	movwf	i2check_msg@qptr+1,c
  8589  001844  0100               	movlb	0	; () banked
  8590  001846  0E80               	movlw	low _ToMainLow_MQ
  8591  001848  6E34               	movwf	i2check_msg@qptr,c
  8592  00184A  ECFB  F00D         	call	i2_check_msg	;wreg free
  8593  00184E  0900               	iorlw	0
  8594  001850  B4D8               	btfsc	status,2,c
  8595                           
  8596                           ;messages.c: 250: }
  8597                           ;messages.c: 251: enter_sleep_mode();
  8598                           
  8599                           ;messages.c: 249: return;
  8600  001852  EC60  F00E         	call	_enter_sleep_mode	;wreg free
  8601  001856  0012               	return	
  8602  001858                     __end_of_SleepIfOkay:
  8603                           	opt stack 0
  8604                           pclatu	equ	0xFFB
  8605                           pclath	equ	0xFFA
  8606                           tblptru	equ	0xFF8
  8607                           tblptrh	equ	0xFF7
  8608                           tblptrl	equ	0xFF6
  8609                           tablat	equ	0xFF5
  8610                           prodh	equ	0xFF4
  8611                           prodl	equ	0xFF3
  8612                           intcon	equ	0xFF2
  8613                           postinc0	equ	0xFEE
  8614                           fsr0h	equ	0xFEA
  8615                           fsr0l	equ	0xFE9
  8616                           wreg	equ	0xFE8
  8617                           indf1	equ	0xFE7
  8618                           fsr1h	equ	0xFE2
  8619                           fsr1l	equ	0xFE1
  8620                           bsr	equ	0xFE0
  8621                           indf2	equ	0xFDF
  8622                           postinc2	equ	0xFDE
  8623                           postdec2	equ	0xFDD
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function i2_in_low_int *****************
  8629 ;; Defined at:
  8630 ;;		line 30 in file "src/interrupts.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  2   53[COMRAM] int 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, status,0, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8644 ;;      Params:         2       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0
  8647 ;;      Totals:         2       0       0       0       0
  8648 ;;Total ram usage:        2 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    1
  8651 ;; This function calls:
  8652 ;;		i2_in_high_int
  8653 ;; This function is called by:
  8654 ;;		_SleepIfOkay
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text50
  8659  001B32                     __ptext50:
  8660                           	opt stack 0
  8661  001B32                     i2_in_low_int:
  8662                           	opt stack 17
  8663                           
  8664                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8665                           
  8666                           ;incstack = 0
  8667  001B32  ACF2               	btfss	intcon,6,c	;volatile
  8668  001B34  D005               	goto	i2l2411
  8669                           
  8670                           ;interrupts.c: 32: return (0);
  8671  001B36  0E00               	movlw	0
  8672  001B38  6E37               	movwf	?i2_in_low_int+1,c
  8673  001B3A  0E00               	movlw	0
  8674  001B3C  6E36               	movwf	?i2_in_low_int,c
  8675  001B3E  0012               	return	
  8676  001B40                     i2l2411:
  8677  001B40  EC56  F00E         	call	i2_in_high_int	;wreg free
  8678  001B44  5035               	movf	?i2_in_high_int+1,w,c
  8679  001B46  1034               	iorwf	?i2_in_high_int,w,c
  8680  001B48  B4D8               	btfsc	status,2,c
  8681  001B4A  D005               	goto	i2l2419
  8682                           
  8683                           ;interrupts.c: 34: return (0);
  8684  001B4C  0E00               	movlw	0
  8685  001B4E  6E37               	movwf	?i2_in_low_int+1,c
  8686  001B50  0E00               	movlw	0
  8687  001B52  6E36               	movwf	?i2_in_low_int,c
  8688  001B54  0012               	return	
  8689  001B56                     i2l2419:
  8690                           
  8691                           ;interrupts.c: 36: return (1);
  8692  001B56  0E00               	movlw	0
  8693  001B58  6E37               	movwf	?i2_in_low_int+1,c
  8694  001B5A  0E01               	movlw	1
  8695  001B5C  6E36               	movwf	?i2_in_low_int,c
  8696  001B5E  0012               	return	
  8697  001B60                     __end_ofi2_in_low_int:
  8698                           	opt stack 0
  8699                           pclatu	equ	0xFFB
  8700                           pclath	equ	0xFFA
  8701                           tblptru	equ	0xFF8
  8702                           tblptrh	equ	0xFF7
  8703                           tblptrl	equ	0xFF6
  8704                           tablat	equ	0xFF5
  8705                           prodh	equ	0xFF4
  8706                           prodl	equ	0xFF3
  8707                           intcon	equ	0xFF2
  8708                           postinc0	equ	0xFEE
  8709                           fsr0h	equ	0xFEA
  8710                           fsr0l	equ	0xFE9
  8711                           wreg	equ	0xFE8
  8712                           indf1	equ	0xFE7
  8713                           fsr1h	equ	0xFE2
  8714                           fsr1l	equ	0xFE1
  8715                           bsr	equ	0xFE0
  8716                           indf2	equ	0xFDF
  8717                           postinc2	equ	0xFDE
  8718                           postdec2	equ	0xFDD
  8719                           fsr2h	equ	0xFDA
  8720                           fsr2l	equ	0xFD9
  8721                           status	equ	0xFD8
  8722                           
  8723 ;; *************** function i2_in_high_int *****************
  8724 ;; Defined at:
  8725 ;;		line 22 in file "src/interrupts.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  2   51[COMRAM] int 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8739 ;;      Params:         2       0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0
  8742 ;;      Totals:         2       0       0       0       0
  8743 ;;Total ram usage:        2 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_SleepIfOkay
  8749 ;;		i2_in_low_int
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text51
  8754  001CAC                     __ptext51:
  8755                           	opt stack 0
  8756  001CAC                     i2_in_high_int:
  8757                           	opt stack 17
  8758                           
  8759                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8760                           
  8761                           ;incstack = 0
  8762  001CAC  0E00               	movlw	0
  8763  001CAE  AEF2               	btfss	intcon,7,c	;volatile
  8764  001CB0  0E01               	movlw	1
  8765  001CB2  6E34               	movwf	?i2_in_high_int,c
  8766  001CB4  6A35               	clrf	?i2_in_high_int+1,c
  8767  001CB6  0012               	return	
  8768  001CB8                     __end_ofi2_in_high_int:
  8769                           	opt stack 0
  8770                           pclatu	equ	0xFFB
  8771                           pclath	equ	0xFFA
  8772                           tblptru	equ	0xFF8
  8773                           tblptrh	equ	0xFF7
  8774                           tblptrl	equ	0xFF6
  8775                           tablat	equ	0xFF5
  8776                           prodh	equ	0xFF4
  8777                           prodl	equ	0xFF3
  8778                           intcon	equ	0xFF2
  8779                           postinc0	equ	0xFEE
  8780                           fsr0h	equ	0xFEA
  8781                           fsr0l	equ	0xFE9
  8782                           wreg	equ	0xFE8
  8783                           indf1	equ	0xFE7
  8784                           fsr1h	equ	0xFE2
  8785                           fsr1l	equ	0xFE1
  8786                           bsr	equ	0xFE0
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           postdec2	equ	0xFDD
  8790                           fsr2h	equ	0xFDA
  8791                           fsr2l	equ	0xFD9
  8792                           status	equ	0xFD8
  8793                           
  8794 ;; *************** function i2_check_msg *****************
  8795 ;; Defined at:
  8796 ;;		line 220 in file "src/messages.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8799 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      unsigned char 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8811 ;;      Params:         2       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0
  8813 ;;      Temps:          1       0       0       0       0
  8814 ;;      Totals:         3       0       0       0       0
  8815 ;;Total ram usage:        3 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_SleepIfOkay
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text52
  8825  001BF6                     __ptext52:
  8826                           	opt stack 0
  8827  001BF6                     i2_check_msg:
  8828                           	opt stack 18
  8829                           
  8830                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8831                           
  8832                           ;incstack = 0
  8833  001BF6  EE20 F035          	lfsr	2,53
  8834  001BFA  5034               	movf	i2check_msg@qptr,w,c
  8835  001BFC  26D9               	addwf	fsr2l,f,c
  8836  001BFE  5035               	movf	i2check_msg@qptr+1,w,c
  8837  001C00  22DA               	addwfc	fsr2h,f,c
  8838  001C02  50DF               	movf	indf2,w,c
  8839  001C04  6E36               	movwf	??i2_check_msg& (0+255),c
  8840  001C06  5036               	movf	??i2_check_msg,w,c
  8841  001C08  0D0D               	mullw	13
  8842  001C0A  50F3               	movf	prodl,w,c
  8843  001C0C  2434               	addwf	i2check_msg@qptr,w,c
  8844  001C0E  6ED9               	movwf	fsr2l,c
  8845  001C10  50F4               	movf	prodh,w,c
  8846  001C12  2035               	addwfc	i2check_msg@qptr+1,w,c
  8847  001C14  6EDA               	movwf	fsr2h,c
  8848  001C16  50DF               	movf	indf2,w,c
  8849  001C18  0012               	return	
  8850  001C1A                     __end_ofi2_check_msg:
  8851                           	opt stack 0
  8852                           pclatu	equ	0xFFB
  8853                           pclath	equ	0xFFA
  8854                           tblptru	equ	0xFF8
  8855                           tblptrh	equ	0xFF7
  8856                           tblptrl	equ	0xFF6
  8857                           tablat	equ	0xFF5
  8858                           prodh	equ	0xFF4
  8859                           prodl	equ	0xFF3
  8860                           intcon	equ	0xFF2
  8861                           postinc0	equ	0xFEE
  8862                           fsr0h	equ	0xFEA
  8863                           fsr0l	equ	0xFE9
  8864                           wreg	equ	0xFE8
  8865                           indf1	equ	0xFE7
  8866                           fsr1h	equ	0xFE2
  8867                           fsr1l	equ	0xFE1
  8868                           bsr	equ	0xFE0
  8869                           indf2	equ	0xFDF
  8870                           postinc2	equ	0xFDE
  8871                           postdec2	equ	0xFDD
  8872                           fsr2h	equ	0xFDA
  8873                           fsr2l	equ	0xFD9
  8874                           status	equ	0xFD8
  8875                           
  8876 ;; *************** function _enter_sleep_mode *****************
  8877 ;; Defined at:
  8878 ;;		line 202 in file "src/messages.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;		None
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;		None
  8883 ;; Return value:  Size  Location     Type
  8884 ;;		None               void
  8885 ;; Registers used:
  8886 ;;		None
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8892 ;;      Params:         0       0       0       0       0
  8893 ;;      Locals:         0       0       0       0       0
  8894 ;;      Temps:          0       0       0       0       0
  8895 ;;      Totals:         0       0       0       0       0
  8896 ;;Total ram usage:        0 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_SleepIfOkay
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text53
  8906  001CC0                     __ptext53:
  8907                           	opt stack 0
  8908  001CC0                     _enter_sleep_mode:
  8909                           	opt stack 18
  8910                           
  8911                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8912                           
  8913                           ;incstack = 0
  8914  001CC0  8ED3               	bsf	4051,7,c	;volatile
  8915  001CC2  0003               	sleep		;# 
  8916  001CC4  0012               	return	
  8917  001CC6                     __end_of_enter_sleep_mode:
  8918                           	opt stack 0
  8919  0000                     pclatu	equ	0xFFB
  8920                           pclath	equ	0xFFA
  8921                           tblptru	equ	0xFF8
  8922                           tblptrh	equ	0xFF7
  8923                           tblptrl	equ	0xFF6
  8924                           tablat	equ	0xFF5
  8925                           prodh	equ	0xFF4
  8926                           prodl	equ	0xFF3
  8927                           intcon	equ	0xFF2
  8928                           postinc0	equ	0xFEE
  8929                           fsr0h	equ	0xFEA
  8930                           fsr0l	equ	0xFE9
  8931                           wreg	equ	0xFE8
  8932                           indf1	equ	0xFE7
  8933                           fsr1h	equ	0xFE2
  8934                           fsr1l	equ	0xFE1
  8935                           bsr	equ	0xFE0
  8936                           indf2	equ	0xFDF
  8937                           postinc2	equ	0xFDE
  8938                           postdec2	equ	0xFDD
  8939                           fsr2h	equ	0xFDA
  8940                           fsr2l	equ	0xFD9
  8941                           status	equ	0xFD8
  8942                           pclatu	equ	0xFFB
  8943                           pclath	equ	0xFFA
  8944                           tblptru	equ	0xFF8
  8945                           tblptrh	equ	0xFF7
  8946                           tblptrl	equ	0xFF6
  8947                           tablat	equ	0xFF5
  8948                           prodh	equ	0xFF4
  8949                           prodl	equ	0xFF3
  8950                           intcon	equ	0xFF2
  8951                           postinc0	equ	0xFEE
  8952                           fsr0h	equ	0xFEA
  8953                           fsr0l	equ	0xFE9
  8954                           wreg	equ	0xFE8
  8955                           indf1	equ	0xFE7
  8956                           fsr1h	equ	0xFE2
  8957                           fsr1l	equ	0xFE1
  8958                           bsr	equ	0xFE0
  8959                           indf2	equ	0xFDF
  8960                           postinc2	equ	0xFDE
  8961                           postdec2	equ	0xFDD
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966                           	psect	rparam
  8967  0000                     pclatu	equ	0xFFB
  8968                           pclath	equ	0xFFA
  8969                           tblptru	equ	0xFF8
  8970                           tblptrh	equ	0xFF7
  8971                           tblptrl	equ	0xFF6
  8972                           tablat	equ	0xFF5
  8973                           prodh	equ	0xFF4
  8974                           prodl	equ	0xFF3
  8975                           intcon	equ	0xFF2
  8976                           postinc0	equ	0xFEE
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           bsr	equ	0xFE0
  8984                           indf2	equ	0xFDF
  8985                           postinc2	equ	0xFDE
  8986                           postdec2	equ	0xFDD
  8987                           fsr2h	equ	0xFDA
  8988                           fsr2l	equ	0xFD9
  8989                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     43      99
    BANK1           256    128     238
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ctrl(BANK1[2]), main@test(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ctrl(BANK1[2]), main@test(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    quad_lookup_init@table	PTR unsigned char  size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> main@ctrl(BANK1[2]), main@test(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), main@ctrl(BANK1[2]), 
		 -> main@test(BANK1[2]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ctrl(BANK1[2]), main@test(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_timer1_lthread->_quad_lookup_init
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0   16709
                                             23 BANK1    105   105      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer1
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                        _sendUARTarr
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             12 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      13     5      8     455
                                             29 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             29 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sendUARTarr                                          4     2      2    3136
                                             12 BANK1      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2855
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             39 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2    1008
                                             31 BANK0      2     0      2
                   _quad_lookup_init
 ---------------------------------------------------------------------------------
 (2) _quad_lookup_init                                     2     0      2     768
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     171
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             39 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3149
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               5     5      0    1113
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0     958
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   4     4      0    1078
                                             26 COMRAM     2     2      0
                i1_ToMainLow_sendmsg
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3     935
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    2146
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2050
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1448
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer1
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
     _quad_lookup_init
   _init_uart_lthread
   _init_uart_recv
   _sendUARTarr
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     80      EE       6       93.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      63       5       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D3       9        0.0%
DATA                 0      0     1D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Feb 25 20:16:36 2015

               main@uthread_data 0129         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 19D2  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1A9E  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l130 07DC                              l124 0786  
                            l445 1AE6                              l447 1AFC  
                            l448 1AFE                              l482 1514  
                            l730 1C5A                              l486 152E  
                            l487 1530                              l488 153C  
                            l489 153E             ?_FromMainLow_sendmsg 00DE  
__size_of_uart_trans_int_handler 0056             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0180                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D3  
               ??_init_uart_recv 00D5                             l2111 1952  
                           l2103 1934                             l3013 17F4  
                           l3101 0D06                             l3007 17D4  
                           l2233 198E                             l2245 168A  
                           l3037 0E5C                             l3411 088C  
                           l3403 083E                             l3085 0C48  
                           l3413 08D0                             l3405 085A  
                           l3263 1A48                             l3417 0912  
                           l2717 1516                             l2709 1504  
                           l2813 0DA2                             l3381 07A0  
                           l3295 12B2                             l3391 07F6  
                           l3375 0742                             l3367 070C  
                           l2809 0D26                             l3393 0800  
                           l3377 078C                             l3385 07AE  
                           l3299 12D6                             l3379 0796  
                           l3387 07C4                             l3389 07E2  
                           l3397 080E                             l3399 0824  
                           l2689 1AE8                             l2793 16E6  
                           l2787 16C6                             l2799 1706  
                           _LATA 000F89                             _LATB 000F8A  
                           u2277 1C5C                             i1l52 007A  
                _FromMainHigh_MQ 0200                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0FDE  
                           _main 0626                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 013A  
                     i1_send_msg 13AA                             pclat 000FFA  
                    i2_check_msg 1BF6                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0034  
                           start 00C0              i1WriteTimer1@timer1 0001  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 1176  
      ToMainHigh_recvmsg@msgtype 010C                   send_msg@length 0102  
    __size_of_timer0_int_handler 0002                      _Delay1KTCYx 1C56  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00E1  
                          ?_main 0001                    i1_WriteTimer1 1C7C  
   __size_ofi1_ToMainLow_sendmsg 0024                            _CMCON 000FB4  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D3  
                          i1l500 1C46                            i1l361 17B6  
                     i1memcpy@d1 0001                            i1l364 178E  
                          i2l322 048E                            i2l316 0410  
                          i2l308 02EE                            i2l290 0144  
                          i2l278 112A                            i2l294 0176  
                          i2l288 0480                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR1H 000FCF                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                sendUARTarr@length 010F  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
              sendUARTarr@retval 010E                  __end_of_in_main 199C  
     ToMainLow_recvmsg@maxlength 00DF          timer0_lthread@msgbuffer 00D9  
        i2c_configure_slave@addr 00D3                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1764  
               __end_ofi1_memcpy 18E2                 __end_ofi2_memcpy 1922  
                   ?_sendUARTarr 010C                  __initialization 1858  
     uart_trans_int_handler@data 001E                     __end_of_main 0930  
   uart_trans_int_handler@length 0022      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_recvmsg 0036                ?_quad_lookup_init 00D3  
     __size_of_ToMainLow_sendmsg 0032            __size_ofi2_in_low_int 002E  
                 ?i1_WriteTimer1 0001                           ??_main 00E1  
             ??_quad_lookup_init 00D5                  send_msg@msgtype 0103  
                  __activetblptr 000002                  send_msg@tlength 0106  
     FromMainLow_sendmsg@msgtype 00DE             __end_of_handle_start 1176  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
          quad_lookup_init@table 00D3                           i1l2203 1024  
                         i1l2083 18D0                           i1l2155 13E2  
                         i1l2219 10AC                           i1l2077 18B4  
                         i1l2641 17A8                           i1l2619 14CC  
                         i2l3023 1910                           i2l3017 18F4  
                         i2l2321 115E                           i1l2881 0070  
                         i2l2411 1B40                           i2l3203 03A6  
                         i2l3131 012E                           i1l2875 0066  
                         i2l3061 11BA                           i2l2319 1146  
                         i2l3231 0492                           i2l3225 0454  
                         i2l3137 013C                       _OpenTimer1 1AD0  
                         i2l2419 1B56                           i2l3155 01A2  
                         i2l3315 15AA                           i2l3253 0600  
                         i2l3245 0574                           i2l3237 04F0  
                         i2l3173 0220                           i2l3157 01CE  
                         i2l3309 15A0                   __CFG_WDTEN$OFF 000000  
                         i2l3175 0260                           i2l3167 0208  
                         i2l2581 1810                           i2l3197 035C  
                         i2l3199 039E      __end_of_i2c_configure_slave 1B88  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0E0E  
             timer0_lthread@tptr 00D3          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1B32                      ?i2_send_msg 003E  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0082  
                _i2c_int_handler 00C4                           _ic_ptr 00E1  
                  main@msgbuffer 011B                 __end_of_init_i2c 164E  
               OpenTimer1@config 00D3                           _memcpy 17BA  
                         clear_0 185E                           clear_1 186A  
                         clear_2 1876                           _uc_ptr 0049  
                         main@ic 0164                           main@uc 0133  
               __end_of_recv_msg 0D0A      start_i2c_slave_reply@length 00D7  
                      ??_in_main 00D9                 __end_of_send_msg 0EFE  
        i2c_int_handler@i2c_data 00C1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00D5         ToMainLow_recvmsg@msgtype 010C  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 00DF  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1CC8  
                     __accesstop 0080          __end_of__initialization 1898  
     __end_of_ToMainHigh_recvmsg 1A08       __end_of_ToMainHigh_sendmsg 1BF6  
             ?_init_uart_lthread 00D3      __end_of_init_timer1_lthread 13AA  
            __end_of_SleepIfOkay 1858                   __pcstackCOMRAM 0001  
                   __pidataBANK1 1CC6           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D5                  ??i1_WriteTimer1 0003  
             __size_of_check_msg 0032                __end_of_ReadUSART 1C56  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 15E0  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 01B6                 _enter_sleep_mode 1CC0  
            __size_ofi2_send_msg 00C6             timer1_lthread@length 00D7  
                  ReadUSART@data 0001                __end_of_OpenUSART 156A  
                  check_msg@qptr 00D3        __end_of_init_uart_lthread 1CCA  
        ??_block_on_To_msgqueues 00D9             __size_of_init_queues 0056  
                     __pbssBANK0 0080                       __pbssBANK1 0180  
                     __pbssBANK2 0200                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0049  
            i1_ToMainLow_sendmsg 1BAE          __end_of_i2c_int_handler 0626  
                   ?i2_check_msg 0034               timer1_lthread@tptr 00D3  
           __size_of_sendUARTarr 0032                recv_msg@maxlength 0102  
                recv_msg@msgtype 0103                  recv_msg@tlength 0108  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
                        ?_memcpy 00D3                 WriteTimer1@timer 00D5  
                  ??_WriteTimer1 00D5          __size_of_timer0_lthread 000E  
           ?i1_ToMainLow_sendmsg 0017          __size_of_timer1_lthread 00E0  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1CAC  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1AD0                        ?_init_i2c 00D3  
                    _SleepIfOkay 180A                        ?_recv_msg 0100  
                     _in_low_int 1922                     _handle_start 10B0  
                        __Hparam 0000                        ?_send_msg 0100  
                        __Lparam 0000       __end_of_timer0_int_handler 1CCC  
    __end_of_FromMainLow_recvmsg 1BAE      __end_of_FromMainLow_sendmsg 1A3A  
               init_uart_recv@uc 00D3                  __CFG_STVREN$OFF 000000  
                        __pcinit 1858                  __size_of_memcpy 0050  
                     _init_queue 164E                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer1 0032  
                        __ptext0 0626                          __ptext1 123C  
                        __ptext2 1A08                          __ptext3 0EFE  
                        __ptext4 1C9E                          __ptext5 0D0A  
                        __ptext6 1A3A                          __ptext7 1A6C  
                        __ptext8 0E0E                          __ptext9 1C1A  
              uart_lthread@index 0115                          _in_main 1960  
                      _T1CONbits 000FCD              __end_of_WriteTimer1 1C7C  
                 ?i2_in_high_int 0034   __end_of_uart_trans_int_handler 17BA  
     __size_of_init_uart_lthread 0002        __size_of_quad_lookup_init 02B8  
                 __pintcode_body 156A             end_of_initialization 1898  
        timer1_lthread@msgbuffer 00D9   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 00D9                          memcpy@n 00D7  
                        memcpy@s 00DB    __end_of_uart_recv_int_handler 14E8  
                     ??_init_i2c 00D5                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00BF                    __Lmediumconst 0000  
                        int_func 156A                     ??i1_send_msg 0011  
                  ?_uart_lthread 010C          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00DD  
                   ??i2_send_msg 0044                       ??_send_msg 00DD  
     __end_of_timer1_int_handler 1B32                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
                      _PORTAbits 000F80               __end_ofi1_recv_msg 10B0  
             __end_ofi1_send_msg 1454                        _TRISCbits 000F94  
             __end_ofi2_send_msg 123C         timer1_int_handler@curPos 001B  
                 ??_uart_lthread 00E1                        _TXSTAbits 000FAC  
                     main@length 013B                      ?_in_low_int 00D5  
             i1WriteTimer1@timer 0003            timer0_lthread@msgtype 00D5  
          _start_i2c_slave_reply 0D0A     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1CC6  
             _ToMainHigh_recvmsg 19D2                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1BD2                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1C9E  
                    ?_init_queue 00D3                        i2memcpy@d 003A  
                    _WriteTimer1 1C6A                        i2memcpy@n 0038  
                      i2memcpy@s 003C                   _timer1_lthread 0EFE  
                 __end_of_memcpy 180A                _enable_interrupts 1CB8  
           __size_of_Delay1KTCYx 0014              ?_ToMainHigh_recvmsg 010C  
                ??i2_in_high_int 0036         i2c_int_handler@data_read 00C4  
            ?_ToMainHigh_sendmsg 0045          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1858  
                  ??_in_high_int 00D5                        _ReadUSART 1C38  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
      FromMainLow_sendmsg@length 010B              ??_enable_interrupts 00D3  
                   ??_OpenTimer1 00D3   __size_of_block_on_To_msgqueues 005C  
  __end_of_block_on_To_msgqueues 170E                        _OpenUSART 14E8  
   __end_of_InterruptHandlerHigh 15E8                       init_i2c@ic 00D3  
           ??_ToMainHigh_recvmsg 00DF             ??_ToMainHigh_sendmsg 0048  
         __end_of_timer0_lthread 1CAC         i2c_int_handler@error_buf 00BC  
                    __pdataBANK1 01EC           __end_of_timer1_lthread 0FDE  
      __end_of_enable_interrupts 1CC0                         ??_memcpy 00D9  
          timer1_lthread@msgtype 00D5            __end_ofi1_WriteTimer1 1C8E  
   __size_of_init_timer1_lthread 00AE               __end_of_OpenTimer1 1B02  
       i2c_int_handler@msg_ready 00C3                      __pbssCOMRAM 004B  
                     ?_ReadUSART 0001                    ??_init_queues 00D6  
                  __pcstackBANK0 00B6                    __pcstackBANK1 0100  
            __size_of_in_low_int 003E         start_i2c_slave_reply@msg 00D3  
               _quad_lookup_init 0930              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00D3         ToMainLow_sendmsg@msgtype 00DE  
   __size_of_InterruptHandlerLow 00A8              __end_of_in_high_int 1C9E  
                     ?_OpenUSART 00D3                     ?_SleepIfOkay 0001  
            timer1_lthread@index 00DF            ToMainLow_recvmsg@data 010E  
                   _ToMainLow_MQ 0080              __size_of_init_queue 0064  
                 _init_uart_recv 1C1A                        _check_msg 1A9E  
                      __pnvBANK0 00E1           ?_start_i2c_slave_reply 00D3  
              __size_of_init_i2c 0066                    ??_sendUARTarr 00E1  
                   recv_msg@data 0105                     recv_msg@qmsg 010A  
                   recv_msg@slot 0107                     recv_msg@qptr 0100  
              __size_of_recv_msg 0122                        __pintcode 0008  
              __size_of_send_msg 00F0                  ?_timer0_lthread 00D3  
                ?_timer1_lthread 00D3                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 010E             __end_of_uart_lthread 12FC  
     i2c_int_handler@msg_to_send 00C2                         ?_in_main 00D7  
             _timer0_int_handler 1CCA                WriteTimer1@timer1 00D3  
     i1ToMainLow_sendmsg@msgtype 0017              uart_lthread@msgtype 010E  
          ToMainLow_sendmsg@data 00DF              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 010C  
         __end_of_init_uart_recv 1C38              __end_of_init_queues 1764  
                i2check_msg@qptr 0034                       ?_check_msg 00D3  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0036                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1BD2  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                      main@F5220 01EC                   i1recv_msg@data 0010  
           ??_timer0_int_handler 0034                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1A6C  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0026     __size_of_FromMainLow_sendmsg 0032  
           timer0_lthread@length 00D7               _timer1_int_handler 1B02  
                       i1_memcpy 18A2             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 18E2  
           timer0_lthread@msgval 00DB                      _in_high_int 1C8E  
                   send_msg@data 0104              _i2c_configure_slave 1B60  
                   send_msg@qmsg 0109                     send_msg@slot 0108  
                   send_msg@qptr 0100                  sendUARTarr@data 010C  
          uart_lthread@msgbuffer 0112              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00D3                      ??_OpenUSART 00D5  
                OpenUSART@config 00D8                   ??i2_in_low_int 0038  
          _uart_recv_int_handler 1454                     ??_in_low_int 00D7  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 0562  
             ??_enter_sleep_mode 0034                     ??_init_queue 00D5  
                   ?_WriteTimer1 00D3          ToMainLow_sendmsg@length 010B  
              main@t0thread_data 0117            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 0041  
    ToMainHigh_recvmsg@maxlength 00DF                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D5                      _init_queues 170E  
             __end_of_in_low_int 1960                         __ptext10 1CC8  
                       __ptext11 12FC                         __ptext20 1922  
                       __ptext12 0930                         __ptext21 1C8E  
                       __ptext13 170E                         __ptext30 1AD0  
                       __ptext22 1A9E                         __ptext14 164E  
                       __ptext23 1C56                         __ptext15 15E8  
                       __ptext40 13AA                         __ptext32 1764  
                       __ptext24 1C6A                         __ptext16 1B60  
                       __ptext41 18A2                         __ptext33 1B88  
                       __ptext25 199C                         __ptext17 1CB8  
                       __ptext50 1B32                         __ptext34 0FDE  
                       __ptext26 19D2                         __ptext18 16B2  
                       __ptext51 1CAC                         __ptext43 1CCA  
                       __ptext35 1454                         __ptext27 0BE8  
                       __ptext19 1960                         __ptext52 1BF6  
                       __ptext44 00C4                         __ptext36 1C38  
                       __ptext28 17BA                         __ptext53 1CC0  
                       __ptext45 10B0                         __ptext37 1B02  
                       __ptext29 14E8                         __ptext46 1BD2  
                       __ptext38 1C7C                         __ptext47 1176  
                       __ptext39 1BAE                         __ptext48 18E2  
                       __ptext49 180A                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 0110               uart_lthread@status 0114  
                       _init_i2c 15E8              _init_timer1_lthread 12FC  
                  __size_of_main 030A                    ??i2_check_msg 0036  
              main@t1thread_data 013C                      ??_check_msg 00D5  
             __end_of_init_queue 16B2             __size_of_SleepIfOkay 004E  
                       _recv_msg 0BE8            ??_i2c_configure_slave 00D3  
                       _send_msg 0E0E                      _sendUARTarr 1A3A  
                 init_queue@qptr 00D3            __size_of_uart_lthread 00C0  
       __end_of_quad_lookup_init 0BE8    uart_trans_int_handler@msgtype 0020  
                  ??_Delay1KTCYx 00D3                         main@baud 0126  
                       main@ctrl 0138              _InterruptHandlerLow 0018  
                       main@test 0119             ?_init_timer1_lthread 00D5  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00D3  
                       memcpy@d1 00D3                         memcpy@s1 00D5  
          __end_ofi2_in_high_int 1CB8     i2c_int_handler@overrun_error 00C0  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 00D5           ?_uart_recv_int_handler 0001  
                   _uart_lthread 123C                   main@UARTConfig 0127  
          _block_on_To_msgqueues 16B2                    ?_handle_start 0001  
               ??_timer0_lthread 00DB      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 0024                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00DB                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0048  
            __end_ofi2_check_msg 1C1A            ??_init_timer1_lthread 00D7  
         ??_InterruptHandlerHigh 00C5                _ToMainLow_recvmsg 199C  
              _ToMainLow_sendmsg 1A6C               main@last_reg_recvd 0128  
           __end_ofi2_in_low_int 1B60               ?_ToMainLow_recvmsg 010C  
            __end_of_Delay1KTCYx 1C6A                ??_i2c_int_handler 00BB  
             ?_ToMainLow_sendmsg 00DE                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0042  
          ??_InterruptHandlerLow 0023              ??_ToMainLow_recvmsg 00DF  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003E              ??_ToMainLow_sendmsg 00E1  
         __size_ofi1_WriteTimer1 0012              _FromMainLow_recvmsg 1B88  
                 ??_handle_start 0034              _FromMainLow_sendmsg 1A08  
                   _USART_Status 004C  
