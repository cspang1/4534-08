

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Feb 25 10:54:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataBANK1
    79  001CA8                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for main@F5210
    83  001CA8  C3                 	db	195
    84  001CA9  46                 	db	70
    85  0000                     _ADCON1	set	4033
    86  0000                     _CMCON	set	4020
    87  0000                     _INTCONbits	set	4082
    88  0000                     _IPR1bits	set	3999
    89  0000                     _LATA	set	3977
    90  0000                     _LATAbits	set	3977
    91  0000                     _LATB	set	3978
    92  0000                     _OSCCON	set	4051
    93  0000                     _OSCCONbits	set	4051
    94  0000                     _OSCTUNEbits	set	3995
    95  0000                     _PIE1bits	set	3997
    96  0000                     _PIR1bits	set	3998
    97  0000                     _PORTA	set	3968
    98  0000                     _PORTB	set	3969
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG	set	4014
   101  0000                     _RCSTA	set	4011
   102  0000                     _RCSTAbits	set	4011
   103  0000                     _SPBRG	set	4015
   104  0000                     _SPBRGH	set	4016
   105  0000                     _SSPADD	set	4040
   106  0000                     _SSPBUF	set	4041
   107  0000                     _SSPCON1	set	4038
   108  0000                     _SSPCON1bits	set	4038
   109  0000                     _SSPCON2	set	4037
   110  0000                     _SSPCON2bits	set	4037
   111  0000                     _SSPSTAT	set	4039
   112  0000                     _SSPSTATbits	set	4039
   113  0000                     _T0CON	set	4053
   114  0000                     _T0CONbits	set	4053
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR0H	set	4055
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR1H	set	4047
   120  0000                     _TMR1L	set	4046
   121  0000                     _TRISA	set	3986
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISCbits	set	3988
   124  0000                     _TXREG	set	4013
   125  0000                     _TXSTA	set	4012
   126  0000                     _TXSTAbits	set	4012
   127                           
   128                           	psect	nvCOMRAM
   129  000047                     __pnvCOMRAM:
   130                           	opt stack 0
   131  000047                     _uc_ptr:
   132                           	opt stack 0
   133  000047                     	ds	2
   134                           
   135                           	psect	nvBANK0
   136  0000DD                     __pnvBANK0:
   137                           	opt stack 0
   138  0000DD                     _ic_ptr:
   139                           	opt stack 0
   140  0000DD                     	ds	2
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  001942                     __pcinit:
   146                           	opt stack 0
   147  001942                     start_initialization:
   148                           	opt stack 0
   149  001942                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to BANK1 (162 bytes)
   153  001942  EE01  F000         	lfsr	0,__pbssBANK1
   154  001946  0EA2               	movlw	162
   155  001948                     clear_0:
   156  001948  6AEE               	clrf	postinc0,c
   157  00194A  06E8               	decf	wreg,f,c
   158  00194C  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to BANK0 (54 bytes)
   161  00194E  EE00  F080         	lfsr	0,__pbssBANK0
   162  001952  0E36               	movlw	54
   163  001954                     clear_1:
   164  001954  6AEE               	clrf	postinc0,c
   165  001956  06E8               	decf	wreg,f,c
   166  001958  E1FD               	bnz	clear_1
   167                           
   168                           ; Clear objects allocated to COMRAM (2 bytes)
   169  00195A  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   170  00195C  6A49               	clrf	__pbssCOMRAM& (0+255),c
   171                           
   172                           ; Initialize objects allocated to BANK1 (2 bytes)
   173                           ; load TBLPTR registers with __pidataBANK1
   174  00195E  0EA8               	movlw	low __pidataBANK1
   175  001960  6EF6               	movwf	tblptrl,c
   176  001962  0E1C               	movlw	high __pidataBANK1
   177  001964  6EF7               	movwf	tblptrh,c
   178  001966  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   179  001968  6EF8               	movwf	tblptru,c
   180  00196A  0009               	tblrd		*+	;fetch initializer
   181  00196C  CFF5 F1C2          	movff	tablat,__pdataBANK1
   182  001970  0009               	tblrd		*+	;fetch initializer
   183  001972  CFF5 F1C3          	movff	tablat,__pdataBANK1+1
   184  001976                     end_of_initialization:
   185                           	opt stack 0
   186  001976                     __end_of__initialization:
   187                           	opt stack 0
   188  001976  0E00               	movlw	low (__Lmediumconst shr (0+16))
   189  001978  6EF8               	movwf	tblptru,c
   190  00197A  0100               	movlb	0
   191  00197C  EF8F  F003         	goto	_main	;jump to C main() function
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	bssCOMRAM
   200  000049                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000049                     _MQ_Main_Willing_to_block:
   203                           	opt stack 0
   204  000049                     	ds	1
   205  00004A                     _USART_Status:
   206                           	opt stack 0
   207  00004A                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssBANK0
   216  000080                     __pbssBANK0:
   217                           	opt stack 0
   218  000080                     _ToMainLow_MQ:
   219                           	opt stack 0
   220  000080                     	ds	54
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           
   228                           	psect	bssBANK1
   229  000100                     __pbssBANK1:
   230                           	opt stack 0
   231  000100                     _FromMainHigh_MQ:
   232                           	opt stack 0
   233  000100                     	ds	54
   234  000136                     _FromMainLow_MQ:
   235                           	opt stack 0
   236  000136                     	ds	54
   237  00016C                     _ToMainHigh_MQ:
   238                           	opt stack 0
   239  00016C                     	ds	54
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	dataBANK1
   248  0001C2                     __pdataBANK1:
   249                           	opt stack 0
   250  0001C2                     main@F5210:
   251                           	opt stack 0
   252  0001C2                     	ds	2
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	cstackBANK2
   261  000200                     __pcstackBANK2:
   262                           	opt stack 0
   263  000200                     main@msgbuffer:
   264                           	opt stack 0
   265                           
   266                           ; 11 bytes @ 0x0
   267  000200                     	ds	11
   268  00020B                     main@t0thread_data:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0xB
   272  00020B                     	ds	2
   273  00020D                     main@test:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xD
   277  00020D                     	ds	2
   278  00020F                     main@last_reg_recvd:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0xF
   282  00020F                     	ds	1
   283  000210                     main@baud:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x10
   287  000210                     	ds	1
   288  000211                     main@UARTConfig:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x11
   292  000211                     	ds	1
   293  000212                     main@uthread_data:
   294                           	opt stack 0
   295                           
   296                           ; 10 bytes @ 0x12
   297  000212                     	ds	10
   298  00021C                     main@t1thread_data:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x1C
   302  00021C                     	ds	2
   303  00021E                     main@uc:
   304                           	opt stack 0
   305                           
   306                           ; 5 bytes @ 0x1E
   307  00021E                     	ds	5
   308  000223                     main@msgtype:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x23
   312  000223                     	ds	1
   313  000224                     main@length:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x24
   317  000224                     	ds	1
   318  000225                     main@ic:
   319                           	opt stack 0
   320                           
   321                           ; 28 bytes @ 0x25
   322  000225                     	ds	28
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           
   330                           	psect	cstackBANK1
   331  0001A2                     __pcstackBANK1:
   332                           	opt stack 0
   333  0001A2                     ??_block_on_To_msgqueues:
   334  0001A2                     timer0_lthread@tptr:
   335                           	opt stack 0
   336  0001A2                     memcpy@d:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  0001A2                     	ds	2
   341  0001A4                     timer0_lthread@msgtype:
   342                           	opt stack 0
   343  0001A4                     memcpy@s:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x2
   347  0001A4                     	ds	2
   348  0001A6                     send_msg@qptr:
   349                           	opt stack 0
   350  0001A6                     recv_msg@qptr:
   351                           	opt stack 0
   352  0001A6                     timer0_lthread@length:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x4
   356  0001A6                     	ds	2
   357  0001A8                     send_msg@length:
   358                           	opt stack 0
   359  0001A8                     recv_msg@maxlength:
   360                           	opt stack 0
   361  0001A8                     timer0_lthread@msgbuffer:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x6
   365  0001A8                     	ds	1
   366  0001A9                     send_msg@msgtype:
   367                           	opt stack 0
   368  0001A9                     recv_msg@msgtype:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x7
   372  0001A9                     	ds	1
   373  0001AA                     send_msg@data:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x8
   377  0001AA                     	ds	1
   378  0001AB                     recv_msg@data:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x9
   382  0001AB                     	ds	1
   383  0001AC                     ??_send_msg:
   384                           
   385                           ; 0 bytes @ 0xA
   386  0001AC                     	ds	1
   387  0001AD                     ??_recv_msg:
   388  0001AD                     send_msg@tlength:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0xB
   392  0001AD                     	ds	2
   393  0001AF                     send_msg@slot:
   394                           	opt stack 0
   395  0001AF                     recv_msg@slot:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0xD
   399  0001AF                     	ds	1
   400  0001B0                     send_msg@qmsg:
   401                           	opt stack 0
   402  0001B0                     recv_msg@tlength:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0xE
   406  0001B0                     	ds	2
   407  0001B2                     ToMainLow_sendmsg@msgtype:
   408                           	opt stack 0
   409  0001B2                     FromMainLow_sendmsg@msgtype:
   410                           	opt stack 0
   411  0001B2                     FromMainHigh_sendmsg@msgtype:
   412                           	opt stack 0
   413  0001B2                     recv_msg@qmsg:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x10
   417  0001B2                     	ds	1
   418  0001B3                     ToMainLow_sendmsg@data:
   419                           	opt stack 0
   420  0001B3                     FromMainLow_sendmsg@data:
   421                           	opt stack 0
   422  0001B3                     FromMainHigh_sendmsg@data:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x11
   426  0001B3                     	ds	1
   427  0001B4                     ToMainLow_recvmsg@msgtype:
   428                           	opt stack 0
   429  0001B4                     ToMainHigh_recvmsg@msgtype:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x12
   433  0001B4                     	ds	1
   434  0001B5                     ToMainLow_sendmsg@length:
   435                           	opt stack 0
   436  0001B5                     FromMainLow_sendmsg@length:
   437                           	opt stack 0
   438  0001B5                     FromMainHigh_sendmsg@length:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x13
   442  0001B5                     	ds	1
   443  0001B6                     ToMainLow_recvmsg@data:
   444                           	opt stack 0
   445  0001B6                     ToMainHigh_recvmsg@data:
   446                           	opt stack 0
   447  0001B6                     sendUART@data:
   448                           	opt stack 0
   449  0001B6                     timer1_lthread@tptr:
   450                           	opt stack 0
   451  0001B6                     uart_lthread@uptr:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x14
   455  0001B6                     	ds	2
   456  0001B8                     ??_sendUART:
   457  0001B8                     ToMainLow_recvmsg@maxlength:
   458                           	opt stack 0
   459  0001B8                     ToMainHigh_recvmsg@maxlength:
   460                           	opt stack 0
   461  0001B8                     timer1_lthread@msgtype:
   462                           	opt stack 0
   463  0001B8                     uart_lthread@msgtype:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x16
   467  0001B8                     	ds	1
   468  0001B9                     sendUART@retval:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x17
   472  0001B9                     	ds	1
   473  0001BA                     sendUART@length:
   474                           	opt stack 0
   475  0001BA                     timer1_lthread@length:
   476                           	opt stack 0
   477  0001BA                     uart_lthread@length:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x18
   481  0001BA                     	ds	2
   482  0001BC                     timer1_lthread@msgbuffer:
   483                           	opt stack 0
   484  0001BC                     uart_lthread@msgbuffer:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  0001BC                     	ds	2
   489  0001BE                     ??_timer1_lthread:
   490  0001BE                     uart_lthread@status:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x1C
   494  0001BE                     	ds	1
   495  0001BF                     timer1_lthread@retval:
   496                           	opt stack 0
   497  0001BF                     uart_lthread@index:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x1D
   501  0001BF                     	ds	2
   502  0001C1                     ??_main:
   503                           
   504                           ; 0 bytes @ 0x1F
   505  0001C1                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513                           	psect	cstackBANK0
   514  0000B6                     __pcstackBANK0:
   515                           	opt stack 0
   516  0000B6                     i2send_msg@tlength:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  0000B6                     	ds	2
   521  0000B8                     i2send_msg@slot:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x2
   525  0000B8                     	ds	1
   526  0000B9                     i2send_msg@qmsg:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x3
   530  0000B9                     	ds	2
   531  0000BB                     ToMainHigh_sendmsg@msgtype:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x5
   535  0000BB                     	ds	1
   536  0000BC                     ToMainHigh_sendmsg@data:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540  0000BC                     	ds	2
   541  0000BE                     ??_i2c_int_handler:
   542                           
   543                           ; 0 bytes @ 0x8
   544  0000BE                     	ds	2
   545  0000C0                     i2c_int_handler@error_buf:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0xA
   549  0000C0                     	ds	3
   550  0000C3                     i2c_int_handler@data_written:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0xD
   554  0000C3                     	ds	1
   555  0000C4                     i2c_int_handler@overrun_error:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0xE
   559  0000C4                     	ds	1
   560  0000C5                     i2c_int_handler@i2c_data:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xF
   564  0000C5                     	ds	1
   565  0000C6                     i2c_int_handler@msg_to_send:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x10
   569  0000C6                     	ds	1
   570  0000C7                     i2c_int_handler@msg_ready:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x11
   574  0000C7                     	ds	1
   575  0000C8                     i2c_int_handler@data_read:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x12
   579  0000C8                     	ds	1
   580  0000C9                     ??_InterruptHandlerHigh:
   581                           
   582                           ; 0 bytes @ 0x13
   583  0000C9                     	ds	14
   584  0000D7                     ?_in_high_int:
   585                           	opt stack 0
   586  0000D7                     ?___lwmod:
   587                           	opt stack 0
   588  0000D7                     i2c_configure_slave@addr:
   589                           	opt stack 0
   590  0000D7                     OpenTimer0@config:
   591                           	opt stack 0
   592  0000D7                     OpenTimer1@config:
   593                           	opt stack 0
   594  0000D7                     Delay1KTCYx@unit:
   595                           	opt stack 0
   596  0000D7                     init_queue@qptr:
   597                           	opt stack 0
   598  0000D7                     check_msg@qptr:
   599                           	opt stack 0
   600  0000D7                     start_i2c_slave_reply@msg:
   601                           	opt stack 0
   602  0000D7                     init_i2c@ic:
   603                           	opt stack 0
   604  0000D7                     init_uart_recv@uc:
   605                           	opt stack 0
   606  0000D7                     timer0_lthread@msgval:
   607                           	opt stack 0
   608  0000D7                     init_timer1_lthread@tptr:
   609                           	opt stack 0
   610  0000D7                     init_uart_lthread@uptr:
   611                           	opt stack 0
   612  0000D7                     WriteTimer0@timer0:
   613                           	opt stack 0
   614  0000D7                     WriteTimer1@timer1:
   615                           	opt stack 0
   616  0000D7                     OpenUSART@spbrg:
   617                           	opt stack 0
   618  0000D7                     ___lwmod@dividend:
   619                           	opt stack 0
   620  0000D7                     memcpy@d1:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x21
   624  0000D7                     	ds	2
   625  0000D9                     ??_OpenUSART:
   626  0000D9                     ??_start_i2c_slave_reply:
   627  0000D9                     ??_init_queue:
   628  0000D9                     ??_check_msg:
   629  0000D9                     ?_in_low_int:
   630                           	opt stack 0
   631  0000D9                     WriteTimer0@timer:
   632                           	opt stack 0
   633  0000D9                     WriteTimer1@timer:
   634                           	opt stack 0
   635  0000D9                     ___lwmod@divisor:
   636                           	opt stack 0
   637  0000D9                     memcpy@s1:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x23
   641  0000D9                     	ds	1
   642  0000DA                     init_queue@i:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x24
   646  0000DA                     	ds	1
   647  0000DB                     ??_init_queues:
   648  0000DB                     ??___lwmod:
   649  0000DB                     ?_in_main:
   650                           	opt stack 0
   651  0000DB                     start_i2c_slave_reply@length:
   652                           	opt stack 0
   653  0000DB                     memcpy@n:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x25
   657  0000DB                     	ds	1
   658  0000DC                     OpenUSART@config:
   659                           	opt stack 0
   660  0000DC                     ___lwmod@counter:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x26
   664  0000DC                     	ds	1
   665  0000DD                     tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           ; 0 bytes @ 0x27
   673                           
   674                           	psect	cstackCOMRAM
   675  000001                     __pcstackCOMRAM:
   676                           	opt stack 0
   677  000001                     ReadUSART@data:
   678                           	opt stack 0
   679  000001                     i1WriteTimer1@timer1:
   680                           	opt stack 0
   681  000001                     i1memcpy@d1:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x0
   685  000001                     	ds	2
   686  000003                     i1WriteTimer1@timer:
   687                           	opt stack 0
   688  000003                     i1memcpy@s1:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x2
   692  000003                     	ds	2
   693  000005                     ??_timer1_int_handler:
   694  000005                     i1memcpy@n:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x4
   698  000005                     	ds	2
   699  000007                     i1memcpy@d:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x6
   703  000007                     	ds	2
   704  000009                     i1memcpy@s:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x8
   708  000009                     	ds	2
   709  00000B                     i1send_msg@qptr:
   710                           	opt stack 0
   711  00000B                     i1recv_msg@qptr:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xA
   715  00000B                     	ds	2
   716  00000D                     i1send_msg@length:
   717                           	opt stack 0
   718  00000D                     i1recv_msg@maxlength:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0xC
   722  00000D                     	ds	1
   723  00000E                     i1send_msg@msgtype:
   724                           	opt stack 0
   725  00000E                     i1recv_msg@msgtype:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0xD
   729  00000E                     	ds	1
   730  00000F                     i1send_msg@data:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xE
   734  00000F                     	ds	1
   735  000010                     i1recv_msg@data:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0xF
   739  000010                     	ds	1
   740  000011                     ??i1_send_msg:
   741                           
   742                           ; 0 bytes @ 0x10
   743  000011                     	ds	1
   744  000012                     ??i1_recv_msg:
   745  000012                     i1send_msg@tlength:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x11
   749  000012                     	ds	2
   750  000014                     i1send_msg@slot:
   751                           	opt stack 0
   752  000014                     i1recv_msg@slot:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x13
   756  000014                     	ds	1
   757  000015                     i1send_msg@qmsg:
   758                           	opt stack 0
   759  000015                     i1recv_msg@tlength:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x14
   763  000015                     	ds	2
   764  000017                     i1ToMainLow_sendmsg@msgtype:
   765                           	opt stack 0
   766  000017                     i1recv_msg@qmsg:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x16
   770  000017                     	ds	1
   771  000018                     i1ToMainLow_sendmsg@data:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000018                     	ds	1
   776  000019                     FromMainLow_recvmsg@msgtype:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x18
   780  000019                     	ds	1
   781  00001A                     i1ToMainLow_sendmsg@length:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x19
   785  00001A                     	ds	1
   786  00001B                     ??_uart_recv_int_handler:
   787  00001B                     FromMainLow_recvmsg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x1A
   791  00001B                     	ds	2
   792  00001D                     FromMainLow_recvmsg@maxlength:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x1C
   796  00001D                     	ds	1
   797  00001E                     ??_uart_trans_int_handler:
   798                           
   799                           ; 0 bytes @ 0x1D
   800  00001E                     	ds	1
   801  00001F                     uart_trans_int_handler@data:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x1E
   805  00001F                     	ds	2
   806  000021                     uart_trans_int_handler@msgtype:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x20
   810  000021                     	ds	1
   811  000022                     uart_trans_int_handler@curIndex:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x21
   815  000022                     	ds	1
   816  000023                     uart_trans_int_handler@length:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x22
   820  000023                     	ds	1
   821  000024                     ??_InterruptHandlerLow:
   822                           
   823                           ; 0 bytes @ 0x23
   824  000024                     	ds	17
   825  000035                     ?i2_in_high_int:
   826                           	opt stack 0
   827  000035                     handle_start@data_read:
   828                           	opt stack 0
   829  000035                     i2check_msg@qptr:
   830                           	opt stack 0
   831  000035                     i2memcpy@d1:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x34
   835  000035                     	ds	2
   836  000037                     ??i2_check_msg:
   837  000037                     ?i2_in_low_int:
   838                           	opt stack 0
   839  000037                     i2memcpy@s1:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x36
   843  000037                     	ds	2
   844  000039                     i2memcpy@n:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x38
   848  000039                     	ds	2
   849  00003B                     i2memcpy@d:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x3A
   853  00003B                     	ds	2
   854  00003D                     i2memcpy@s:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x3C
   858  00003D                     	ds	2
   859  00003F                     i2send_msg@qptr:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x3E
   863  00003F                     	ds	2
   864  000041                     i2send_msg@length:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x40
   868  000041                     	ds	1
   869  000042                     i2send_msg@msgtype:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x41
   873  000042                     	ds	1
   874  000043                     i2send_msg@data:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x42
   878  000043                     	ds	2
   879  000045                     ??i2_send_msg:
   880                           
   881                           ; 0 bytes @ 0x44
   882  000045                     	ds	1
   883  000046                     ToMainHigh_sendmsg@length:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x45
   887  000046                     	ds	1
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 139 in file "src/main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  ic             28   37[BANK2 ] struct __i2c_comm
   905 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   906 ;;  uthread_data   10   18[BANK2 ] struct __uart_thread_str
   907 ;;  uc              5   30[BANK2 ] struct __uart_comm
   908 ;;  t1thread_dat    2   28[BANK2 ] struct __timer1_thread_s
   909 ;;  test            2   13[BANK2 ] unsigned char [2]
   910 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   911 ;;  length          1   36[BANK2 ] char 
   912 ;;  msgtype         1   35[BANK2 ] unsigned char 
   913 ;;  UARTConfig      1   17[BANK2 ] unsigned char 
   914 ;;  baud            1   16[BANK2 ] unsigned char 
   915 ;;  last_reg_rec    1   15[BANK2 ] unsigned char 
   916 ;;  i               1    0        unsigned char 
   917 ;;  c               1    0        unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;		None               void
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         0       0       0      65       0
   929 ;;      Temps:          0       0       1       0       0
   930 ;;      Totals:         0       0       1      65       0
   931 ;;Total ram usage:       66 bytes
   932 ;; Hardware stack levels required when called:   14
   933 ;; This function calls:
   934 ;;		_OpenTimer0
   935 ;;		_OpenTimer1
   936 ;;		_OpenUSART
   937 ;;		_ToMainHigh_recvmsg
   938 ;;		_ToMainLow_recvmsg
   939 ;;		_WriteTimer0
   940 ;;		_WriteTimer1
   941 ;;		_block_on_To_msgqueues
   942 ;;		_enable_interrupts
   943 ;;		_i2c_configure_slave
   944 ;;		_init_i2c
   945 ;;		_init_queues
   946 ;;		_init_timer1_lthread
   947 ;;		_init_uart_lthread
   948 ;;		_init_uart_recv
   949 ;;		_sendUART
   950 ;;		_start_i2c_slave_reply
   951 ;;		_timer0_lthread
   952 ;;		_timer1_lthread
   953 ;;		_uart_lthread
   954 ;; This function is called by:
   955 ;;		Startup code after reset
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text0
   960  00071E                     __ptext0:
   961                           	opt stack 0
   962  00071E                     _main:
   963                           	opt stack 16
   964                           
   965                           ;main.c: 140: char c;
   966                           ;main.c: 141: signed char length;
   967                           ;main.c: 142: unsigned char msgtype;
   968                           ;main.c: 143: unsigned char last_reg_recvd;
   969                           ;main.c: 144: unsigned char baud, UARTConfig;
   970                           ;main.c: 145: uart_comm uc;
   971                           ;main.c: 146: i2c_comm ic;
   972                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   973                           ;main.c: 148: unsigned char i;
   974                           ;main.c: 149: uart_thread_struct uthread_data;
   975                           ;main.c: 150: timer1_thread_struct t1thread_data;
   976                           ;main.c: 151: timer0_thread_struct t0thread_data;
   977                           ;main.c: 154: PORTA = 0x0;
   978                           
   979                           ;incstack = 0
   980  00071E  0E00               	movlw	0
   981  000720  6E80               	movwf	3968,c	;volatile
   982                           
   983                           ;main.c: 155: LATA = 0x0;
   984  000722  0E00               	movlw	0
   985  000724  6E89               	movwf	3977,c	;volatile
   986                           
   987                           ;main.c: 156: ADCON1 = 0x0F;
   988  000726  0E0F               	movlw	15
   989  000728  6EC1               	movwf	4033,c	;volatile
   990                           
   991                           ;main.c: 157: CMCON = 0x07;
   992  00072A  0E07               	movlw	7
   993  00072C  6EB4               	movwf	4020,c	;volatile
   994                           
   995                           ;main.c: 158: TRISA = 0x00;
   996  00072E  0E00               	movlw	0
   997  000730  6E92               	movwf	3986,c	;volatile
   998                           
   999                           ;main.c: 161: PORTB = 0x0;
  1000  000732  0E00               	movlw	0
  1001  000734  6E81               	movwf	3969,c	;volatile
  1002                           
  1003                           ;main.c: 162: LATB = 0x0;
  1004  000736  0E00               	movlw	0
  1005  000738  6E8A               	movwf	3978,c	;volatile
  1006                           
  1007                           ;main.c: 163: TRISB = 0xFF;
  1008  00073A  6893               	setf	3987,c	;volatile
  1009                           
  1010                           ;main.c: 171: OSCCON = 0x82;
  1011  00073C  0E82               	movlw	130
  1012  00073E  6ED3               	movwf	4051,c	;volatile
  1013                           
  1014                           ;main.c: 172: OSCTUNEbits.PLLEN = 0;
  1015  000740  9C9B               	bcf	3995,6,c	;volatile
  1016                           
  1017                           ;main.c: 185: init_uart_recv(&uc);
  1018  000742  0102               	movlb	2	; () banked
  1019  000744  0E02               	movlw	high main@uc
  1020  000746  0100               	movlb	0	; () banked
  1021  000748  0100               	movlb	0	; () banked
  1022  00074A  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1023  00074C  0102               	movlb	2	; () banked
  1024  00074E  0E1E               	movlw	low main@uc
  1025  000750  0100               	movlb	0	; () banked
  1026  000752  0100               	movlb	0	; () banked
  1027  000754  6FD7               	movwf	init_uart_recv@uc& (0+255),b
  1028  000756  ECE8  F00D         	call	_init_uart_recv	;wreg free
  1029                           
  1030                           ;main.c: 188: init_i2c(&ic);
  1031  00075A  0102               	movlb	2	; () banked
  1032  00075C  0E02               	movlw	high main@ic
  1033  00075E  0100               	movlb	0	; () banked
  1034  000760  0100               	movlb	0	; () banked
  1035  000762  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
  1036  000764  0102               	movlb	2	; () banked
  1037  000766  0E25               	movlw	low main@ic
  1038  000768  0100               	movlb	0	; () banked
  1039  00076A  0100               	movlb	0	; () banked
  1040  00076C  6FD7               	movwf	init_i2c@ic& (0+255),b
  1041  00076E  EC01  F00B         	call	_init_i2c	;wreg free
  1042                           
  1043                           ;main.c: 191: init_timer1_lthread(&t1thread_data);
  1044  000772  0102               	movlb	2	; () banked
  1045  000774  0E02               	movlw	high main@t1thread_data
  1046  000776  0100               	movlb	0	; () banked
  1047  000778  0100               	movlb	0	; () banked
  1048  00077A  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1049  00077C  0102               	movlb	2	; () banked
  1050  00077E  0E1C               	movlw	low main@t1thread_data
  1051  000780  0100               	movlb	0	; () banked
  1052  000782  0100               	movlb	0	; () banked
  1053  000784  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
  1054  000786  EC1A  F00E         	call	_init_timer1_lthread	;wreg free
  1055                           
  1056                           ;main.c: 194: init_uart_lthread(&uthread_data);
  1057  00078A  0102               	movlb	2	; () banked
  1058  00078C  0E02               	movlw	high main@uthread_data
  1059  00078E  0100               	movlb	0	; () banked
  1060  000790  0100               	movlb	0	; () banked
  1061  000792  6FD8               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1062  000794  0102               	movlb	2	; () banked
  1063  000796  0E12               	movlw	low main@uthread_data
  1064  000798  0100               	movlb	0	; () banked
  1065  00079A  0100               	movlb	0	; () banked
  1066  00079C  6FD7               	movwf	init_uart_lthread@uptr& (0+255),b
  1067  00079E  EC55  F00E         	call	_init_uart_lthread	;wreg free
  1068                           
  1069                           ;main.c: 198: init_queues();
  1070  0007A2  ECCA  F00A         	call	_init_queues	;wreg free
  1071                           
  1072                           ;main.c: 201: TRISB = 0x0;
  1073  0007A6  0E00               	movlw	0
  1074  0007A8  6E93               	movwf	3987,c	;volatile
  1075                           
  1076                           ;main.c: 202: LATB = 0x0;
  1077  0007AA  0E00               	movlw	0
  1078  0007AC  6E8A               	movwf	3978,c	;volatile
  1079                           
  1080                           ;main.c: 206: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1081  0007AE  0EAF               	movlw	175
  1082  0007B0  EC5F  F00D         	call	_OpenTimer0
  1083                           
  1084                           ;main.c: 207: WriteTimer0(65500);
  1085  0007B4  0EFF               	movlw	255
  1086  0007B6  0100               	movlb	0	; () banked
  1087  0007B8  0100               	movlb	0	; () banked
  1088  0007BA  6FD8               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  1089  0007BC  0EDC               	movlw	220
  1090  0007BE  0100               	movlb	0	; () banked
  1091  0007C0  6FD7               	movwf	WriteTimer0@timer0& (0+255),b
  1092  0007C2  EC35  F00E         	call	_WriteTimer0	;wreg free
  1093                           
  1094                           ;main.c: 213: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1095  0007C6  0EC7               	movlw	199
  1096  0007C8  ECC0  F00C         	call	_OpenTimer1
  1097                           
  1098                           ;main.c: 214: WriteTimer1(65000);
  1099  0007CC  0EFD               	movlw	253
  1100  0007CE  0100               	movlb	0	; () banked
  1101  0007D0  0100               	movlb	0	; () banked
  1102  0007D2  6FD8               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  1103  0007D4  0EE8               	movlw	232
  1104  0007D6  0100               	movlb	0	; () banked
  1105  0007D8  6FD7               	movwf	WriteTimer1@timer1& (0+255),b
  1106  0007DA  EC2C  F00E         	call	_WriteTimer1	;wreg free
  1107                           
  1108                           ;main.c: 223: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1109  0007DE  0101               	movlb	1	; () banked
  1110  0007E0  6FC1               	movwf	??_main& (0+255),b
  1111  0007E2  0EFC               	movlw	252
  1112  0007E4  0102               	movlb	2	; () banked
  1113  0007E6  0102               	movlb	2	; () banked
  1114  0007E8  6F11               	movwf	main@UARTConfig& (0+255),b
  1115  0007EA  0101               	movlb	1	; () banked
  1116  0007EC  51C1               	movf	??_main& (0+255),w,b
  1117                           
  1118                           ; BSR set to: 1
  1119                           ;main.c: 224: baud = 77;
  1120  0007EE  0101               	movlb	1	; () banked
  1121  0007F0  6FC1               	movwf	??_main& (0+255),b
  1122  0007F2  0E4D               	movlw	77
  1123  0007F4  0102               	movlb	2	; () banked
  1124  0007F6  0102               	movlb	2	; () banked
  1125  0007F8  6F10               	movwf	main@baud& (0+255),b
  1126  0007FA  0101               	movlb	1	; () banked
  1127  0007FC  51C1               	movf	??_main& (0+255),w,b
  1128                           
  1129                           ; BSR set to: 1
  1130                           ;main.c: 225: OpenUSART(UARTConfig,baud);
  1131  0007FE  0102               	movlb	2	; () banked
  1132  000800  0100               	movlb	0	; () banked
  1133  000802  C210  F0D7         	movff	main@baud,OpenUSART@spbrg
  1134  000806  0100               	movlb	0	; () banked
  1135  000808  0100               	movlb	0	; () banked
  1136  00080A  6BD8               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1137  00080C  0102               	movlb	2	; () banked
  1138  00080E  0102               	movlb	2	; () banked
  1139  000810  5111               	movf	main@UARTConfig& (0+255),w,b
  1140  000812  EC46  F009         	call	_OpenUSART
  1141                           
  1142                           ;main.c: 231: IPR1bits.TMR1IP = 0;
  1143  000816  909F               	bcf	3999,0,c	;volatile
  1144                           
  1145                           ;main.c: 233: IPR1bits.RCIP = 0;
  1146  000818  9A9F               	bcf	3999,5,c	;volatile
  1147                           
  1148                           ;main.c: 235: IPR1bits.TXIP = 0;
  1149  00081A  989F               	bcf	3999,4,c	;volatile
  1150                           
  1151                           ;main.c: 237: IPR1bits.SSPIP = 1;
  1152  00081C  869F               	bsf	3999,3,c	;volatile
  1153                           
  1154                           ;main.c: 246: i2c_configure_slave(0x9E);
  1155  00081E  0E9E               	movlw	158
  1156  000820  EC89  F00D         	call	_i2c_configure_slave
  1157                           
  1158                           ;main.c: 261: PIE1bits.SSPIE = 1;
  1159  000824  869D               	bsf	3997,3,c	;volatile
  1160                           
  1161                           ;main.c: 265: enable_interrupts();
  1162  000826  EC4D  F00E         	call	_enable_interrupts	;wreg free
  1163                           
  1164                           ;main.c: 279: unsigned char test[2] = {195,70};
  1165  00082A  C1C2  F20D         	movff	main@F5210,main@test
  1166  00082E  C1C3  F20E         	movff	main@F5210+1,main@test+1
  1167                           
  1168                           ;main.c: 280: sendUART(2,test);
  1169  000832  0102               	movlb	2	; () banked
  1170  000834  0E02               	movlw	high main@test
  1171  000836  0101               	movlb	1	; () banked
  1172  000838  0101               	movlb	1	; () banked
  1173  00083A  6FB7               	movwf	(sendUART@data+1)& (0+255),b
  1174  00083C  0102               	movlb	2	; () banked
  1175  00083E  0E0D               	movlw	low main@test
  1176  000840  0101               	movlb	1	; () banked
  1177  000842  0101               	movlb	1	; () banked
  1178  000844  6FB6               	movwf	sendUART@data& (0+255),b
  1179  000846  0E02               	movlw	2
  1180  000848  ECFE  F00B         	call	_sendUART
  1181  00084C                     l3277:
  1182                           
  1183                           ;main.c: 291: block_on_To_msgqueues();
  1184  00084C  EC15  F00A         	call	_block_on_To_msgqueues	;wreg free
  1185                           
  1186                           ;main.c: 298: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1187  000850  0102               	movlb	2	; () banked
  1188  000852  0E02               	movlw	high main@msgtype
  1189  000854  0101               	movlb	1	; () banked
  1190  000856  0101               	movlb	1	; () banked
  1191  000858  6FB5               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1192  00085A  0102               	movlb	2	; () banked
  1193  00085C  0E23               	movlw	low main@msgtype
  1194  00085E  0101               	movlb	1	; () banked
  1195  000860  0101               	movlb	1	; () banked
  1196  000862  6FB4               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1197  000864  0102               	movlb	2	; () banked
  1198  000866  0E02               	movlw	high main@msgbuffer
  1199  000868  0101               	movlb	1	; () banked
  1200  00086A  0101               	movlb	1	; () banked
  1201  00086C  6FB7               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1202  00086E  0102               	movlb	2	; () banked
  1203  000870  0E00               	movlw	low main@msgbuffer
  1204  000872  0101               	movlb	1	; () banked
  1205  000874  0101               	movlb	1	; () banked
  1206  000876  6FB6               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1207  000878  0E0A               	movlw	10
  1208  00087A  EC40  F00C         	call	_ToMainHigh_recvmsg
  1209  00087E  0102               	movlb	2	; () banked
  1210  000880  0102               	movlb	2	; () banked
  1211  000882  6F24               	movwf	main@length& (0+255),b
  1212                           
  1213                           ; BSR set to: 2
  1214                           ;main.c: 299: if (length < 0) {
  1215  000884  0102               	movlb	2	; () banked
  1216  000886  0102               	movlb	2	; () banked
  1217  000888  BF24               	btfsc	main@length& (0+255),7,b
  1218  00088A  D08D               	goto	l3303
  1219  00088C  D07D               	goto	l3301
  1220  00088E                     l3285:
  1221                           
  1222                           ; BSR set to: 2
  1223                           ;main.c: 307: {
  1224                           ;main.c: 308: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1225  00088E  0102               	movlb	2	; () banked
  1226  000890  0E02               	movlw	high main@t0thread_data
  1227  000892  0101               	movlb	1	; () banked
  1228  000894  0101               	movlb	1	; () banked
  1229  000896  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1230  000898  0102               	movlb	2	; () banked
  1231  00089A  0E0B               	movlw	low main@t0thread_data
  1232  00089C  0101               	movlb	1	; () banked
  1233  00089E  0101               	movlb	1	; () banked
  1234  0008A0  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1235  0008A2  0102               	movlb	2	; () banked
  1236  0008A4  0101               	movlb	1	; () banked
  1237  0008A6  C223  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1238  0008AA  0101               	movlb	1	; () banked
  1239  0008AC  0101               	movlb	1	; () banked
  1240  0008AE  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1241  0008B0  0102               	movlb	2	; () banked
  1242  0008B2  0102               	movlb	2	; () banked
  1243  0008B4  5124               	movf	main@length& (0+255),w,b
  1244  0008B6  0101               	movlb	1	; () banked
  1245  0008B8  0101               	movlb	1	; () banked
  1246  0008BA  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1247  0008BC  0101               	movlb	1	; () banked
  1248  0008BE  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1249  0008C0  0101               	movlb	1	; () banked
  1250  0008C2  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1251  0008C4  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1252  0008C6  0102               	movlb	2	; () banked
  1253  0008C8  0E02               	movlw	high main@msgbuffer
  1254  0008CA  0101               	movlb	1	; () banked
  1255  0008CC  0101               	movlb	1	; () banked
  1256  0008CE  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1257  0008D0  0102               	movlb	2	; () banked
  1258  0008D2  0E00               	movlw	low main@msgbuffer
  1259  0008D4  0101               	movlb	1	; () banked
  1260  0008D6  0101               	movlb	1	; () banked
  1261  0008D8  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1262  0008DA  EC11  F00E         	call	_timer0_lthread	;wreg free
  1263                           
  1264                           ;main.c: 309: break;
  1265  0008DE  D063               	goto	l3303
  1266  0008E0                     l129:
  1267                           
  1268                           ;main.c: 312: case 41:
  1269                           ;main.c: 313: {
  1270                           ;main.c: 316: last_reg_recvd = msgbuffer[0];
  1271  0008E0  C200  F20F         	movff	main@msgbuffer,main@last_reg_recvd
  1272                           
  1273                           ;main.c: 317: break;
  1274  0008E4  D060               	goto	l3303
  1275  0008E6                     l3287:
  1276                           
  1277                           ;main.c: 330: {
  1278                           ;main.c: 331: length = 2;
  1279  0008E6  0101               	movlb	1	; () banked
  1280  0008E8  6FC1               	movwf	??_main& (0+255),b
  1281  0008EA  0E02               	movlw	2
  1282  0008EC  0102               	movlb	2	; () banked
  1283  0008EE  0102               	movlb	2	; () banked
  1284  0008F0  6F24               	movwf	main@length& (0+255),b
  1285  0008F2  0101               	movlb	1	; () banked
  1286  0008F4  51C1               	movf	??_main& (0+255),w,b
  1287                           
  1288                           ;main.c: 332: msgbuffer[0] = 0x55;
  1289  0008F6  0101               	movlb	1	; () banked
  1290  0008F8  6FC1               	movwf	??_main& (0+255),b
  1291  0008FA  0E55               	movlw	85
  1292  0008FC  0102               	movlb	2	; () banked
  1293  0008FE  0102               	movlb	2	; () banked
  1294  000900  6F00               	movwf	main@msgbuffer& (0+255),b
  1295  000902  0101               	movlb	1	; () banked
  1296  000904  51C1               	movf	??_main& (0+255),w,b
  1297                           
  1298                           ;main.c: 333: msgbuffer[1] = 0xAA;
  1299  000906  0101               	movlb	1	; () banked
  1300  000908  6FC1               	movwf	??_main& (0+255),b
  1301  00090A  0EAA               	movlw	170
  1302  00090C  0102               	movlb	2	; () banked
  1303  00090E  0102               	movlb	2	; () banked
  1304  000910  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1305  000912  D00C               	goto	L1
  1306  000914                     l3289:
  1307                           
  1308                           ;main.c: 337: {
  1309                           ;main.c: 338: length = 1;
  1310  000914  0101               	movlb	1	; () banked
  1311  000916  6FC1               	movwf	??_main& (0+255),b
  1312  000918  0E01               	movlw	1
  1313  00091A  0102               	movlb	2	; () banked
  1314  00091C  0102               	movlb	2	; () banked
  1315  00091E  6F24               	movwf	main@length& (0+255),b
  1316  000920  0101               	movlb	1	; () banked
  1317  000922  51C1               	movf	??_main& (0+255),w,b
  1318                           
  1319                           ;main.c: 339: msgbuffer[0] = 0x3A;
  1320  000924  0101               	movlb	1	; () banked
  1321  000926  6FC1               	movwf	??_main& (0+255),b
  1322  000928  0E3A               	movlw	58
  1323  00092A  D00E               	goto	L2
  1324  00092C                     L1:
  1325  00092C  0101               	movlb	1	; () banked
  1326  00092E  51C1               	movf	??_main& (0+255),w,b
  1327                           
  1328                           ;main.c: 340: break;
  1329  000930  D01B               	goto	l3297
  1330  000932                     l3291:
  1331                           
  1332                           ;main.c: 343: {
  1333                           ;main.c: 344: length = 1;
  1334  000932  0101               	movlb	1	; () banked
  1335  000934  6FC1               	movwf	??_main& (0+255),b
  1336  000936  0E01               	movlw	1
  1337  000938  0102               	movlb	2	; () banked
  1338  00093A  0102               	movlb	2	; () banked
  1339  00093C  6F24               	movwf	main@length& (0+255),b
  1340  00093E  0101               	movlb	1	; () banked
  1341  000940  51C1               	movf	??_main& (0+255),w,b
  1342                           
  1343                           ;main.c: 345: msgbuffer[0] = 0xA3;
  1344  000942  0101               	movlb	1	; () banked
  1345  000944  6FC1               	movwf	??_main& (0+255),b
  1346  000946  0EA3               	movlw	163
  1347  000948                     L2:
  1348  000948  0102               	movlb	2	; () banked
  1349  00094A  0102               	movlb	2	; () banked
  1350  00094C  6F00               	movwf	main@msgbuffer& (0+255),b
  1351  00094E  D7EE               	goto	L1
  1352  000950                     l3295:
  1353  000950  0102               	movlb	2	; () banked
  1354  000952  0102               	movlb	2	; () banked
  1355  000954  510F               	movf	main@last_reg_recvd& (0+255),w,b
  1356                           
  1357                           ; Switch size 1, requested type "space"
  1358                           ; Number of cases is 3, Range of values is 168 to 170
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte           10     6 (average)
  1362                           ;	Chosen strategy is simple_byte
  1363  000956  0AA8               	xorlw	168	; case 168
  1364  000958  B4D8               	btfsc	status,2,c
  1365  00095A  D7DC               	goto	l3289
  1366  00095C  0A01               	xorlw	1	; case 169
  1367  00095E  B4D8               	btfsc	status,2,c
  1368  000960  D7E8               	goto	l3291
  1369  000962  0A03               	xorlw	3	; case 170
  1370  000964  B4D8               	btfsc	status,2,c
  1371  000966  D7BF               	goto	l3287
  1372  000968                     l3297:
  1373                           
  1374                           ;main.c: 349: start_i2c_slave_reply(length, msgbuffer);
  1375  000968  0102               	movlb	2	; () banked
  1376  00096A  0E02               	movlw	high main@msgbuffer
  1377  00096C  0100               	movlb	0	; () banked
  1378  00096E  0100               	movlb	0	; () banked
  1379  000970  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1380  000972  0102               	movlb	2	; () banked
  1381  000974  0E00               	movlw	low main@msgbuffer
  1382  000976  0100               	movlb	0	; () banked
  1383  000978  0100               	movlb	0	; () banked
  1384  00097A  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1385  00097C  0102               	movlb	2	; () banked
  1386  00097E  0102               	movlb	2	; () banked
  1387  000980  5124               	movf	main@length& (0+255),w,b
  1388  000982  ECEF  F005         	call	_start_i2c_slave_reply
  1389                           
  1390                           ;main.c: 350: break;
  1391  000986  D00F               	goto	l3303
  1392  000988                     l3301:
  1393  000988  0102               	movlb	2	; () banked
  1394  00098A  0102               	movlb	2	; () banked
  1395  00098C  5123               	movf	main@msgtype& (0+255),w,b
  1396                           
  1397                           ; Switch size 1, requested type "space"
  1398                           ; Number of cases is 4, Range of values is 10 to 42
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           13     7 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403  00098E  0A0A               	xorlw	10	; case 10
  1404  000990  B4D8               	btfsc	status,2,c
  1405  000992  D77D               	goto	l3285
  1406  000994  0A22               	xorlw	34	; case 40
  1407  000996  B4D8               	btfsc	status,2,c
  1408  000998  D7A3               	goto	l129
  1409  00099A  0A01               	xorlw	1	; case 41
  1410  00099C  B4D8               	btfsc	status,2,c
  1411  00099E  D7A0               	goto	l129
  1412  0009A0  0A03               	xorlw	3	; case 42
  1413  0009A2  B4D8               	btfsc	status,2,c
  1414  0009A4  D7D5               	goto	l3295
  1415  0009A6                     l3303:
  1416                           
  1417                           ;main.c: 358: }
  1418                           ;main.c: 361: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1419  0009A6  0102               	movlb	2	; () banked
  1420  0009A8  0E02               	movlw	high main@msgtype
  1421  0009AA  0101               	movlb	1	; () banked
  1422  0009AC  0101               	movlb	1	; () banked
  1423  0009AE  6FB5               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1424  0009B0  0102               	movlb	2	; () banked
  1425  0009B2  0E23               	movlw	low main@msgtype
  1426  0009B4  0101               	movlb	1	; () banked
  1427  0009B6  0101               	movlb	1	; () banked
  1428  0009B8  6FB4               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1429  0009BA  0102               	movlb	2	; () banked
  1430  0009BC  0E02               	movlw	high main@msgbuffer
  1431  0009BE  0101               	movlb	1	; () banked
  1432  0009C0  0101               	movlb	1	; () banked
  1433  0009C2  6FB7               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1434  0009C4  0102               	movlb	2	; () banked
  1435  0009C6  0E00               	movlw	low main@msgbuffer
  1436  0009C8  0101               	movlb	1	; () banked
  1437  0009CA  0101               	movlb	1	; () banked
  1438  0009CC  6FB6               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1439  0009CE  0E0A               	movlw	10
  1440  0009D0  EC1F  F00C         	call	_ToMainLow_recvmsg
  1441  0009D4  0102               	movlb	2	; () banked
  1442  0009D6  0102               	movlb	2	; () banked
  1443  0009D8  6F24               	movwf	main@length& (0+255),b
  1444                           
  1445                           ; BSR set to: 2
  1446                           ;main.c: 362: if (length < 0) {
  1447  0009DA  0102               	movlb	2	; () banked
  1448  0009DC  0102               	movlb	2	; () banked
  1449  0009DE  BF24               	btfsc	main@length& (0+255),7,b
  1450  0009E0  D735               	goto	l3277
  1451  0009E2  D052               	goto	l3315
  1452  0009E4                     l3309:
  1453                           
  1454                           ; BSR set to: 2
  1455                           ;main.c: 370: {
  1456                           ;main.c: 371: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1457  0009E4  0102               	movlb	2	; () banked
  1458  0009E6  0E02               	movlw	high main@t1thread_data
  1459  0009E8  0101               	movlb	1	; () banked
  1460  0009EA  0101               	movlb	1	; () banked
  1461  0009EC  6FB7               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1462  0009EE  0102               	movlb	2	; () banked
  1463  0009F0  0E1C               	movlw	low main@t1thread_data
  1464  0009F2  0101               	movlb	1	; () banked
  1465  0009F4  0101               	movlb	1	; () banked
  1466  0009F6  6FB6               	movwf	timer1_lthread@tptr& (0+255),b
  1467  0009F8  0102               	movlb	2	; () banked
  1468  0009FA  0101               	movlb	1	; () banked
  1469  0009FC  C223  F1B8         	movff	main@msgtype,timer1_lthread@msgtype
  1470  000A00  0101               	movlb	1	; () banked
  1471  000A02  0101               	movlb	1	; () banked
  1472  000A04  6BB9               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1473  000A06  0102               	movlb	2	; () banked
  1474  000A08  0102               	movlb	2	; () banked
  1475  000A0A  5124               	movf	main@length& (0+255),w,b
  1476  000A0C  0101               	movlb	1	; () banked
  1477  000A0E  0101               	movlb	1	; () banked
  1478  000A10  6FBA               	movwf	timer1_lthread@length& (0+255),b
  1479  000A12  0101               	movlb	1	; () banked
  1480  000A14  6BBB               	clrf	(timer1_lthread@length+1)& (0+255),b
  1481  000A16  0101               	movlb	1	; () banked
  1482  000A18  BFBA               	btfsc	timer1_lthread@length& (0+255),7,b
  1483  000A1A  07BB               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1484  000A1C  0102               	movlb	2	; () banked
  1485  000A1E  0E02               	movlw	high main@msgbuffer
  1486  000A20  0101               	movlb	1	; () banked
  1487  000A22  0101               	movlb	1	; () banked
  1488  000A24  6FBD               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1489  000A26  0102               	movlb	2	; () banked
  1490  000A28  0E00               	movlw	low main@msgbuffer
  1491  000A2A  0101               	movlb	1	; () banked
  1492  000A2C  0101               	movlb	1	; () banked
  1493  000A2E  6FBC               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1494  000A30  EC91  F00A         	call	_timer1_lthread	;wreg free
  1495                           
  1496                           ;main.c: 372: break;
  1497  000A34  D70B               	goto	l3277
  1498  000A36                     l3311:
  1499                           
  1500                           ;main.c: 375: case 31:
  1501                           ;main.c: 376: case 32:
  1502                           ;main.c: 377: {
  1503                           ;main.c: 378: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1504  000A36  0102               	movlb	2	; () banked
  1505  000A38  0E02               	movlw	high main@uthread_data
  1506  000A3A  0101               	movlb	1	; () banked
  1507  000A3C  0101               	movlb	1	; () banked
  1508  000A3E  6FB7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1509  000A40  0102               	movlb	2	; () banked
  1510  000A42  0E12               	movlw	low main@uthread_data
  1511  000A44  0101               	movlb	1	; () banked
  1512  000A46  0101               	movlb	1	; () banked
  1513  000A48  6FB6               	movwf	uart_lthread@uptr& (0+255),b
  1514  000A4A  0102               	movlb	2	; () banked
  1515  000A4C  0101               	movlb	1	; () banked
  1516  000A4E  C223  F1B8         	movff	main@msgtype,uart_lthread@msgtype
  1517  000A52  0101               	movlb	1	; () banked
  1518  000A54  0101               	movlb	1	; () banked
  1519  000A56  6BB9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1520  000A58  0102               	movlb	2	; () banked
  1521  000A5A  0102               	movlb	2	; () banked
  1522  000A5C  5124               	movf	main@length& (0+255),w,b
  1523  000A5E  0101               	movlb	1	; () banked
  1524  000A60  0101               	movlb	1	; () banked
  1525  000A62  6FBA               	movwf	uart_lthread@length& (0+255),b
  1526  000A64  0101               	movlb	1	; () banked
  1527  000A66  6BBB               	clrf	(uart_lthread@length+1)& (0+255),b
  1528  000A68  0101               	movlb	1	; () banked
  1529  000A6A  BFBA               	btfsc	uart_lthread@length& (0+255),7,b
  1530  000A6C  07BB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1531  000A6E  0102               	movlb	2	; () banked
  1532  000A70  0E02               	movlw	high main@msgbuffer
  1533  000A72  0101               	movlb	1	; () banked
  1534  000A74  0101               	movlb	1	; () banked
  1535  000A76  6FBD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1536  000A78  0102               	movlb	2	; () banked
  1537  000A7A  0E00               	movlw	low main@msgbuffer
  1538  000A7C  0101               	movlb	1	; () banked
  1539  000A7E  0101               	movlb	1	; () banked
  1540  000A80  6FBC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1541  000A82  ECF8  F006         	call	_uart_lthread	;wreg free
  1542                           
  1543                           ;main.c: 379: break;
  1544  000A86  D6E2               	goto	l3277
  1545  000A88                     l3315:
  1546  000A88  0102               	movlb	2	; () banked
  1547  000A8A  0102               	movlb	2	; () banked
  1548  000A8C  5123               	movf	main@msgtype& (0+255),w,b
  1549                           
  1550                           ; Switch size 1, requested type "space"
  1551                           ; Number of cases is 4, Range of values is 11 to 32
  1552                           ; switch strategies available:
  1553                           ; Name         Instructions Cycles
  1554                           ; simple_byte           13     7 (average)
  1555                           ;	Chosen strategy is simple_byte
  1556  000A8E  0A0B               	xorlw	11	; case 11
  1557  000A90  B4D8               	btfsc	status,2,c
  1558  000A92  D7A8               	goto	l3309
  1559  000A94  0A15               	xorlw	21	; case 30
  1560  000A96  B4D8               	btfsc	status,2,c
  1561  000A98  D7CE               	goto	l3311
  1562  000A9A  0A01               	xorlw	1	; case 31
  1563  000A9C  B4D8               	btfsc	status,2,c
  1564  000A9E  D7CB               	goto	l3311
  1565  000AA0  0A3F               	xorlw	63	; case 32
  1566  000AA2  B4D8               	btfsc	status,2,c
  1567  000AA4  D7C8               	goto	l3311
  1568  000AA6  D6D2               	goto	l3277
  1569  000AA8                     __end_of_main:
  1570                           	opt stack 0
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           postinc0	equ	0xFEE
  1576                           wreg	equ	0xFE8
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _uart_lthread *****************
  1580 ;; Defined at:
  1581 ;;		line 12 in file "src/uart_thread.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  uptr            2   20[BANK1 ] PTR struct __uart_thread
  1584 ;;		 -> main@uthread_data(10), 
  1585 ;;  msgtype         2   22[BANK1 ] int 
  1586 ;;  length          2   24[BANK1 ] int 
  1587 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1588 ;;		 -> main@msgbuffer(11), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  index           2   29[BANK1 ] int 
  1591 ;;  status          1   28[BANK1 ] char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2   20[BANK1 ] int 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1601 ;;      Params:         0       0       8       0       0
  1602 ;;      Locals:         0       0       3       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       0      11       0       0
  1605 ;;Total ram usage:       11 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:   13
  1608 ;; This function calls:
  1609 ;;		_FromMainLow_sendmsg
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text1
  1616  000DF0                     __ptext1:
  1617                           	opt stack 0
  1618  000DF0                     _uart_lthread:
  1619                           	opt stack 16
  1620                           
  1621                           ;uart_thread.c: 13: if (msgtype == 30) {
  1622                           
  1623                           ; BSR set to: 2
  1624                           ;incstack = 0
  1625  000DF0  0101               	movlb	1	; () banked
  1626  000DF2  0101               	movlb	1	; () banked
  1627  000DF4  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1628  000DF6  0A1E               	xorlw	30
  1629  000DF8  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1630  000DFA  B4D8               	btfsc	status,2,c
  1631  000DFC  0012               	return	
  1632                           
  1633                           ; BSR set to: 1
  1634                           ;uart_thread.c: 16: else if(msgtype == 31){
  1635                           
  1636                           ; BSR set to: 1
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;uart_thread.c: 15: }
  1640  000DFE  0101               	movlb	1	; () banked
  1641  000E00  0101               	movlb	1	; () banked
  1642  000E02  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1643  000E04  0A1F               	xorlw	31
  1644  000E06  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1645  000E08  A4D8               	btfss	status,2,c
  1646  000E0A  D04F               	goto	l3527
  1647                           
  1648                           ; BSR set to: 1
  1649                           ;uart_thread.c: 18: int index = 0;
  1650  000E0C  0E00               	movlw	0
  1651  000E0E  0101               	movlb	1	; () banked
  1652  000E10  0101               	movlb	1	; () banked
  1653  000E12  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1654  000E14  0E00               	movlw	0
  1655  000E16  0101               	movlb	1	; () banked
  1656  000E18  6FBF               	movwf	uart_lthread@index& (0+255),b
  1657                           
  1658                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1659  000E1A  0E00               	movlw	0
  1660  000E1C  0101               	movlb	1	; () banked
  1661  000E1E  0101               	movlb	1	; () banked
  1662  000E20  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1663  000E22  0E00               	movlw	0
  1664  000E24  0101               	movlb	1	; () banked
  1665  000E26  6FBF               	movwf	uart_lthread@index& (0+255),b
  1666  000E28                     
  1667                           ; BSR set to: 1
  1668  000E28  0101               	movlb	1	; () banked
  1669  000E2A  0101               	movlb	1	; () banked
  1670  000E2C  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1671  000E2E  0A80               	xorlw	128
  1672  000E30  0F80               	addlw	-128
  1673  000E32  0E0A               	movlw	10
  1674  000E34  B4D8               	btfsc	status,2,c
  1675  000E36  5DBF               	subwf	uart_lthread@index& (0+255),w,b
  1676  000E38  B0D8               	btfsc	status,0,c
  1677  000E3A  D023               	goto	l3523
  1678                           
  1679                           ; BSR set to: 1
  1680                           
  1681                           ; BSR set to: 1
  1682                           
  1683                           ; BSR set to: 1
  1684  000E3C  0101               	movlb	1	; () banked
  1685  000E3E  0101               	movlb	1	; () banked
  1686  000E40  51BF               	movf	uart_lthread@index& (0+255),w,b
  1687  000E42  0101               	movlb	1	; () banked
  1688  000E44  0101               	movlb	1	; () banked
  1689  000E46  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1690  000E48  6ED9               	movwf	fsr2l,c
  1691  000E4A  0101               	movlb	1	; () banked
  1692  000E4C  0101               	movlb	1	; () banked
  1693  000E4E  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1694  000E50  0101               	movlb	1	; () banked
  1695  000E52  0101               	movlb	1	; () banked
  1696  000E54  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1697  000E56  6EDA               	movwf	fsr2h,c
  1698  000E58  0101               	movlb	1	; () banked
  1699  000E5A  0101               	movlb	1	; () banked
  1700  000E5C  51BF               	movf	uart_lthread@index& (0+255),w,b
  1701  000E5E  0101               	movlb	1	; () banked
  1702  000E60  0101               	movlb	1	; () banked
  1703  000E62  25B6               	addwf	uart_lthread@uptr& (0+255),w,b
  1704  000E64  6EE1               	movwf	fsr1l,c
  1705  000E66  0101               	movlb	1	; () banked
  1706  000E68  0101               	movlb	1	; () banked
  1707  000E6A  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1708  000E6C  0101               	movlb	1	; () banked
  1709  000E6E  0101               	movlb	1	; () banked
  1710  000E70  21B7               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1711  000E72  6EE2               	movwf	fsr1h,c
  1712  000E74  CFDF FFE7          	movff	indf2,indf1
  1713                           
  1714                           ; BSR set to: 1
  1715  000E78  0101               	movlb	1	; () banked
  1716  000E7A  0101               	movlb	1	; () banked
  1717  000E7C  4BBF               	infsnz	uart_lthread@index& (0+255),f,b
  1718  000E7E  2BC0               	incf	(uart_lthread@index+1)& (0+255),f,b
  1719  000E80  D7D3               	goto	L3
  1720  000E82                     l3523:
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1724  000E82  C1B8  F1B2         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1725  000E86  0101               	movlb	1	; () banked
  1726  000E88  0101               	movlb	1	; () banked
  1727  000E8A  C1B7  F1B4         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1728  000E8E  0101               	movlb	1	; () banked
  1729  000E90  0101               	movlb	1	; () banked
  1730  000E92  C1B6  F1B3         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1731  000E96  0101               	movlb	1	; () banked
  1732  000E98  0101               	movlb	1	; () banked
  1733  000E9A  51BA               	movf	uart_lthread@length& (0+255),w,b
  1734  000E9C  ECDC  F00C         	call	_FromMainLow_sendmsg
  1735  000EA0  0101               	movlb	1	; () banked
  1736  000EA2  0101               	movlb	1	; () banked
  1737  000EA4  6FBE               	movwf	uart_lthread@status& (0+255),b
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;uart_thread.c: 25: }
  1741                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1742                           
  1743                           ; BSR set to: 1
  1744  000EA6  889D               	bsf	3997,4,c	;volatile
  1745                           
  1746                           ;uart_thread.c: 29: }
  1747  000EA8  0012               	return	
  1748  000EAA                     l3527:
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;uart_thread.c: 30: else if(msgtype == 32){
  1752  000EAA  0101               	movlb	1	; () banked
  1753  000EAC  0101               	movlb	1	; () banked
  1754  000EAE  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1755  000EB0  0A20               	xorlw	32
  1756  000EB2  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1757  000EB4  A4D8               	btfss	status,2,c
  1758  000EB6  0012               	return	
  1759                           
  1760                           ; BSR set to: 1
  1761                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1762  000EB8  0101               	movlb	1	; () banked
  1763  000EBA  0101               	movlb	1	; () banked
  1764  000EBC  51BA               	movf	uart_lthread@length& (0+255),w,b
  1765  000EBE  0101               	movlb	1	; () banked
  1766  000EC0  0101               	movlb	1	; () banked
  1767  000EC2  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1768  000EC4  6ED9               	movwf	fsr2l,c
  1769  000EC6  0101               	movlb	1	; () banked
  1770  000EC8  0101               	movlb	1	; () banked
  1771  000ECA  51BB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1772  000ECC  0101               	movlb	1	; () banked
  1773  000ECE  0101               	movlb	1	; () banked
  1774  000ED0  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1775  000ED2  6EDA               	movwf	fsr2h,c
  1776  000ED4  0E00               	movlw	0
  1777  000ED6  6EDF               	movwf	indf2,c
  1778  000ED8  0012               	return	
  1779  000EDA                     __end_of_uart_lthread:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           indf1	equ	0xFE7
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _FromMainLow_sendmsg *****************
  1796 ;; Defined at:
  1797 ;;		line 150 in file "src/messages.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  length          1    wreg     unsigned char 
  1800 ;;  msgtype         1   16[BANK1 ] unsigned char 
  1801 ;;  data            2   17[BANK1 ] PTR void 
  1802 ;;		 -> main@uthread_data(10), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  length          1   19[BANK1 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      char 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1814 ;;      Params:         0       0       3       0       0
  1815 ;;      Locals:         0       0       1       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       0       4       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:   12
  1821 ;; This function calls:
  1822 ;;		_send_msg
  1823 ;; This function is called by:
  1824 ;;		_uart_lthread
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text2
  1829  0019B8                     __ptext2:
  1830                           	opt stack 0
  1831  0019B8                     _FromMainLow_sendmsg:
  1832                           	opt stack 16
  1833                           
  1834                           ; BSR set to: 1
  1835                           ;incstack = 0
  1836                           ;FromMainLow_sendmsg@length stored from wreg
  1837  0019B8  CFE8 F1B5          	movff	wreg,FromMainLow_sendmsg@length
  1838                           
  1839                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1840  0019BC  0101               	movlb	1	; () banked
  1841  0019BE  0E01               	movlw	high _FromMainLow_MQ
  1842  0019C0  0101               	movlb	1	; () banked
  1843  0019C2  0101               	movlb	1	; () banked
  1844  0019C4  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1845  0019C6  0101               	movlb	1	; () banked
  1846  0019C8  0E36               	movlw	low _FromMainLow_MQ
  1847  0019CA  0101               	movlb	1	; () banked
  1848  0019CC  0101               	movlb	1	; () banked
  1849  0019CE  6FA6               	movwf	send_msg@qptr& (0+255),b
  1850  0019D0  C1B5  F1A8         	movff	FromMainLow_sendmsg@length,send_msg@length
  1851  0019D4  C1B2  F1A9         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1852  0019D8  0101               	movlb	1	; () banked
  1853  0019DA  0101               	movlb	1	; () banked
  1854  0019DC  C1B4  F1AB         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1855  0019E0  0101               	movlb	1	; () banked
  1856  0019E2  0101               	movlb	1	; () banked
  1857  0019E4  C1B3  F1AA         	movff	FromMainLow_sendmsg@data,send_msg@data
  1858  0019E8  EC76  F006         	call	_send_msg	;wreg free
  1859  0019EC  0012               	return	
  1860  0019EE                     __end_of_FromMainLow_sendmsg:
  1861                           	opt stack 0
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           indf1	equ	0xFE7
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           indf2	equ	0xFDF
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _timer1_lthread *****************
  1877 ;; Defined at:
  1878 ;;		line 14 in file "src/timer1_thread.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  tptr            2   20[BANK1 ] PTR struct __timer1_thre
  1881 ;;		 -> main@t1thread_data(2), 
  1882 ;;  msgtype         2   22[BANK1 ] int 
  1883 ;;  length          2   24[BANK1 ] int 
  1884 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1885 ;;		 -> main@msgbuffer(11), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  retval          1   29[BANK1 ] char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   20[BANK1 ] int 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1897 ;;      Params:         0       0       8       0       0
  1898 ;;      Locals:         0       0       1       0       0
  1899 ;;      Temps:          0       0       1       0       0
  1900 ;;      Totals:         0       0      10       0       0
  1901 ;;Total ram usage:       10 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   13
  1904 ;; This function calls:
  1905 ;;		_FromMainHigh_sendmsg
  1906 ;;		___lwmod
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text3
  1913  001522                     __ptext3:
  1914                           	opt stack 0
  1915  001522                     _timer1_lthread:
  1916                           	opt stack 16
  1917                           
  1918                           ;timer1_thread.c: 15: signed char retval;
  1919                           ;timer1_thread.c: 17: tptr->msgcount++;
  1920                           
  1921                           ;incstack = 0
  1922  001522  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1923  001526  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1924  00152A  2ADE               	incf	postinc2,f,c
  1925  00152C  0E00               	movlw	0
  1926  00152E  22DD               	addwfc	postdec2,f,c
  1927                           
  1928                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1929  001530  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1930  001534  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1931  001538  0100               	movlb	0	; () banked
  1932  00153A  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  1933  00153E  0100               	movlb	0	; () banked
  1934  001540  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  1935  001544  0E00               	movlw	0
  1936  001546  0100               	movlb	0	; () banked
  1937  001548  0100               	movlb	0	; () banked
  1938  00154A  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1939  00154C  0E0A               	movlw	10
  1940  00154E  0100               	movlb	0	; () banked
  1941  001550  6FD9               	movwf	___lwmod@divisor& (0+255),b
  1942  001552  EC8F  F009         	call	___lwmod	;wreg free
  1943  001556  0100               	movlb	0	; () banked
  1944  001558  0100               	movlb	0	; () banked
  1945  00155A  51D7               	movf	?___lwmod& (0+255),w,b
  1946  00155C  0A09               	xorlw	9
  1947  00155E  0100               	movlb	0	; () banked
  1948  001560  11D8               	iorwf	(?___lwmod+1)& (0+255),w,b
  1949  001562  A4D8               	btfss	status,2,c
  1950  001564  0012               	return	
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1954  001566  0101               	movlb	1	; () banked
  1955  001568  6FBE               	movwf	??_timer1_lthread& (0+255),b
  1956  00156A  0E14               	movlw	20
  1957  00156C  0101               	movlb	1	; () banked
  1958  00156E  0101               	movlb	1	; () banked
  1959  001570  6FB2               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1960  001572  0101               	movlb	1	; () banked
  1961  001574  51BE               	movf	??_timer1_lthread& (0+255),w,b
  1962  001576  0101               	movlb	1	; () banked
  1963  001578  0101               	movlb	1	; () banked
  1964  00157A  C1B7  F1B4         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1965  00157E  0101               	movlb	1	; () banked
  1966  001580  0101               	movlb	1	; () banked
  1967  001582  C1B6  F1B3         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1968  001586  0E02               	movlw	2
  1969  001588  ECF7  F00C         	call	_FromMainHigh_sendmsg
  1970  00158C  0101               	movlb	1	; () banked
  1971  00158E  0101               	movlb	1	; () banked
  1972  001590  6FBF               	movwf	timer1_lthread@retval& (0+255),b
  1973  001592  0012               	return	
  1974  001594                     __end_of_timer1_lthread:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           indf1	equ	0xFE7
  1983                           fsr1h	equ	0xFE2
  1984                           fsr1l	equ	0xFE1
  1985                           indf2	equ	0xFDF
  1986                           postinc2	equ	0xFDE
  1987                           postdec2	equ	0xFDD
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8
  1991                           
  1992 ;; *************** function ___lwmod *****************
  1993 ;; Defined at:
  1994 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  dividend        2   33[BANK0 ] unsigned int 
  1997 ;;  divisor         2   35[BANK0 ] unsigned int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  counter         1   38[BANK0 ] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  2   33[BANK0 ] unsigned int 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2009 ;;      Params:         0       4       0       0       0
  2010 ;;      Locals:         0       1       0       0       0
  2011 ;;      Temps:          0       1       0       0       0
  2012 ;;      Totals:         0       6       0       0       0
  2013 ;;Total ram usage:        6 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:   10
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_timer1_lthread
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text4
  2024  00131E                     __ptext4:
  2025                           	opt stack 0
  2026  00131E                     ___lwmod:
  2027                           	opt stack 18
  2028                           
  2029                           ;incstack = 0
  2030  00131E  0100               	movlb	0	; () banked
  2031  001320  0100               	movlb	0	; () banked
  2032  001322  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2033  001324  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  2034  001326  B4D8               	btfsc	status,2,c
  2035  001328  D03A               	goto	l1041
  2036                           
  2037                           ; BSR set to: 0
  2038  00132A  0100               	movlb	0	; () banked
  2039  00132C  6FDB               	movwf	??___lwmod& (0+255),b
  2040  00132E  0E01               	movlw	1
  2041  001330  0100               	movlb	0	; () banked
  2042  001332  0100               	movlb	0	; () banked
  2043  001334  6FDC               	movwf	___lwmod@counter& (0+255),b
  2044  001336  0100               	movlb	0	; () banked
  2045  001338  51DB               	movf	??___lwmod& (0+255),w,b
  2046  00133A  D009               	goto	l3675
  2047  00133C                     l3673:
  2048                           
  2049                           ; BSR set to: 0
  2050  00133C  0100               	movlb	0	; () banked
  2051  00133E  0100               	movlb	0	; () banked
  2052  001340  0100               	movlb	0	; () banked
  2053  001342  90D8               	bcf	status,0,c
  2054  001344  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  2055  001346  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2056  001348  0100               	movlb	0	; () banked
  2057  00134A  0100               	movlb	0	; () banked
  2058  00134C  2BDC               	incf	___lwmod@counter& (0+255),f,b
  2059  00134E                     l3675:
  2060                           
  2061                           ; BSR set to: 0
  2062  00134E  0100               	movlb	0	; () banked
  2063  001350  0100               	movlb	0	; () banked
  2064  001352  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2065  001354  D7F3               	goto	l3673
  2066  001356                     l3677:
  2067                           
  2068                           ; BSR set to: 0
  2069  001356  0100               	movlb	0	; () banked
  2070  001358  0100               	movlb	0	; () banked
  2071  00135A  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2072  00135C  0100               	movlb	0	; () banked
  2073  00135E  0100               	movlb	0	; () banked
  2074  001360  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  2075  001362  0100               	movlb	0	; () banked
  2076  001364  0100               	movlb	0	; () banked
  2077  001366  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2078  001368  0100               	movlb	0	; () banked
  2079  00136A  0100               	movlb	0	; () banked
  2080  00136C  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2081  00136E  A0D8               	btfss	status,0,c
  2082  001370  D00C               	goto	l3681
  2083                           
  2084                           ; BSR set to: 0
  2085  001372  0100               	movlb	0	; () banked
  2086  001374  0100               	movlb	0	; () banked
  2087  001376  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2088  001378  0100               	movlb	0	; () banked
  2089  00137A  0100               	movlb	0	; () banked
  2090  00137C  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  2091  00137E  0100               	movlb	0	; () banked
  2092  001380  0100               	movlb	0	; () banked
  2093  001382  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2094  001384  0100               	movlb	0	; () banked
  2095  001386  0100               	movlb	0	; () banked
  2096  001388  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2097  00138A                     l3681:
  2098                           
  2099                           ; BSR set to: 0
  2100  00138A  0100               	movlb	0	; () banked
  2101  00138C  0100               	movlb	0	; () banked
  2102  00138E  0100               	movlb	0	; () banked
  2103  001390  90D8               	bcf	status,0,c
  2104  001392  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2105  001394  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  2106                           
  2107                           ; BSR set to: 0
  2108  001396  0100               	movlb	0	; () banked
  2109  001398  0100               	movlb	0	; () banked
  2110  00139A  2FDC               	decfsz	___lwmod@counter& (0+255),f,b
  2111  00139C  D7DC               	goto	l3677
  2112  00139E                     l1041:
  2113                           
  2114                           ; BSR set to: 0
  2115  00139E  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  2116  0013A2  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  2117                           
  2118                           ; BSR set to: 0
  2119  0013A6  0012               	return	
  2120  0013A8                     __end_of___lwmod:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           postinc0	equ	0xFEE
  2127                           wreg	equ	0xFE8
  2128                           indf1	equ	0xFE7
  2129                           fsr1h	equ	0xFE2
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           postinc2	equ	0xFDE
  2133                           postdec2	equ	0xFDD
  2134                           fsr2h	equ	0xFDA
  2135                           fsr2l	equ	0xFD9
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function _FromMainHigh_sendmsg *****************
  2139 ;; Defined at:
  2140 ;;		line 174 in file "src/messages.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  length          1    wreg     unsigned char 
  2143 ;;  msgtype         1   16[BANK1 ] unsigned char 
  2144 ;;  data            2   17[BANK1 ] PTR void 
  2145 ;;		 -> main@t1thread_data(2), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  length          1   19[BANK1 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      char 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2157 ;;      Params:         0       0       3       0       0
  2158 ;;      Locals:         0       0       1       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       4       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:   12
  2164 ;; This function calls:
  2165 ;;		_send_msg
  2166 ;; This function is called by:
  2167 ;;		_timer1_lthread
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text5
  2172  0019EE                     __ptext5:
  2173                           	opt stack 0
  2174  0019EE                     _FromMainHigh_sendmsg:
  2175                           	opt stack 16
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;incstack = 0
  2179                           ;FromMainHigh_sendmsg@length stored from wreg
  2180  0019EE  CFE8 F1B5          	movff	wreg,FromMainHigh_sendmsg@length
  2181                           
  2182                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2183  0019F2  0101               	movlb	1	; () banked
  2184  0019F4  0E01               	movlw	high _FromMainHigh_MQ
  2185  0019F6  0101               	movlb	1	; () banked
  2186  0019F8  0101               	movlb	1	; () banked
  2187  0019FA  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  2188  0019FC  0101               	movlb	1	; () banked
  2189  0019FE  0E00               	movlw	low _FromMainHigh_MQ
  2190  001A00  0101               	movlb	1	; () banked
  2191  001A02  0101               	movlb	1	; () banked
  2192  001A04  6FA6               	movwf	send_msg@qptr& (0+255),b
  2193  001A06  C1B5  F1A8         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2194  001A0A  C1B2  F1A9         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2195  001A0E  0101               	movlb	1	; () banked
  2196  001A10  0101               	movlb	1	; () banked
  2197  001A12  C1B4  F1AB         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2198  001A16  0101               	movlb	1	; () banked
  2199  001A18  0101               	movlb	1	; () banked
  2200  001A1A  C1B3  F1AA         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2201  001A1E  EC76  F006         	call	_send_msg	;wreg free
  2202  001A22  0012               	return	
  2203  001A24                     __end_of_FromMainHigh_sendmsg:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           indf1	equ	0xFE7
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           indf2	equ	0xFDF
  2215                           postinc2	equ	0xFDE
  2216                           postdec2	equ	0xFDD
  2217                           fsr2h	equ	0xFDA
  2218                           fsr2l	equ	0xFD9
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function _timer0_lthread *****************
  2222 ;; Defined at:
  2223 ;;		line 9 in file "src/timer0_thread.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2226 ;;		 -> main@t0thread_data(2), 
  2227 ;;  msgtype         2    2[BANK1 ] int 
  2228 ;;  length          2    4[BANK1 ] int 
  2229 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2230 ;;		 -> main@msgbuffer(11), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2233 ;;		 -> main@msgbuffer(11), 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[BANK1 ] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2243 ;;      Params:         0       0       8       0       0
  2244 ;;      Locals:         0       2       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         0       2       8       0       0
  2247 ;;Total ram usage:       10 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:   10
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text6
  2258  001C22                     __ptext6:
  2259                           	opt stack 0
  2260  001C22                     _timer0_lthread:
  2261                           	opt stack 19
  2262                           
  2263                           ;timer0_thread.c: 10: unsigned int *msgval;
  2264                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2265                           
  2266                           ;incstack = 0
  2267  001C22  0101               	movlb	1	; () banked
  2268  001C24  0100               	movlb	0	; () banked
  2269  001C26  C1A9  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2270  001C2A  0101               	movlb	1	; () banked
  2271  001C2C  0100               	movlb	0	; () banked
  2272  001C2E  C1A8  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2273                           
  2274                           ; BSR set to: 0
  2275  001C32  0012               	return	
  2276  001C34                     __end_of_timer0_lthread:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           indf1	equ	0xFE7
  2285                           fsr1h	equ	0xFE2
  2286                           fsr1l	equ	0xFE1
  2287                           indf2	equ	0xFDF
  2288                           postinc2	equ	0xFDE
  2289                           postdec2	equ	0xFDD
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294 ;; *************** function _start_i2c_slave_reply *****************
  2295 ;; Defined at:
  2296 ;;		line 53 in file "src/my_i2c.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  length          1    wreg     unsigned char 
  2299 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  2300 ;;		 -> main@msgbuffer(11), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  length          1   37[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2312 ;;      Params:         0       2       0       0       0
  2313 ;;      Locals:         0       1       0       0       0
  2314 ;;      Temps:          0       2       0       0       0
  2315 ;;      Totals:         0       5       0       0       0
  2316 ;;Total ram usage:        5 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:   10
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text7
  2327  000BDE                     __ptext7:
  2328                           	opt stack 0
  2329  000BDE                     _start_i2c_slave_reply:
  2330                           	opt stack 19
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;incstack = 0
  2334                           ;start_i2c_slave_reply@length stored from wreg
  2335  000BDE  CFE8 F0DB          	movff	wreg,start_i2c_slave_reply@length
  2336                           
  2337                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2338  000BE2  0100               	movlb	0	; () banked
  2339  000BE4  EE20 F019          	lfsr	2,25
  2340  000BE8  0100               	movlb	0	; () banked
  2341  000BEA  51DD               	movf	_ic_ptr& (0+255),w,b
  2342  000BEC  26D9               	addwf	fsr2l,f,c
  2343  000BEE  0100               	movlb	0	; () banked
  2344  000BF0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2345  000BF2  22DA               	addwfc	fsr2h,f,c
  2346  000BF4  0E00               	movlw	0
  2347  000BF6  6EDF               	movwf	indf2,c
  2348  000BF8  D042               	goto	l3487
  2349  000BFA                     l3483:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2353  000BFA  0100               	movlb	0	; () banked
  2354  000BFC  EE20 F019          	lfsr	2,25
  2355  000C00  0100               	movlb	0	; () banked
  2356  000C02  51DD               	movf	_ic_ptr& (0+255),w,b
  2357  000C04  26D9               	addwf	fsr2l,f,c
  2358  000C06  0100               	movlb	0	; () banked
  2359  000C08  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2360  000C0A  22DA               	addwfc	fsr2h,f,c
  2361  000C0C  50DF               	movf	indf2,w,c
  2362  000C0E  0100               	movlb	0	; () banked
  2363  000C10  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2364  000C12  0100               	movlb	0	; () banked
  2365  000C14  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2366  000C16  0D01               	mullw	1
  2367  000C18  50F3               	movf	prodl,w,c
  2368  000C1A  0100               	movlb	0	; () banked
  2369  000C1C  0100               	movlb	0	; () banked
  2370  000C1E  25D7               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2371  000C20  6ED9               	movwf	fsr2l,c
  2372  000C22  50F4               	movf	prodh,w,c
  2373  000C24  0100               	movlb	0	; () banked
  2374  000C26  0100               	movlb	0	; () banked
  2375  000C28  21D8               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2376  000C2A  6EDA               	movwf	fsr2h,c
  2377  000C2C  0100               	movlb	0	; () banked
  2378  000C2E  EE10 F019          	lfsr	1,25
  2379  000C32  0100               	movlb	0	; () banked
  2380  000C34  51DD               	movf	_ic_ptr& (0+255),w,b
  2381  000C36  26E1               	addwf	fsr1l,f,c
  2382  000C38  0100               	movlb	0	; () banked
  2383  000C3A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2384  000C3C  22E2               	addwfc	fsr1h,f,c
  2385  000C3E  50E7               	movf	indf1,w,c
  2386  000C40  0100               	movlb	0	; () banked
  2387  000C42  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2388  000C44  0100               	movlb	0	; () banked
  2389  000C46  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2390  000C48  0D01               	mullw	1
  2391  000C4A  0E0F               	movlw	15
  2392  000C4C  26F3               	addwf	prodl,f,c
  2393  000C4E  0E00               	movlw	0
  2394  000C50  22F4               	addwfc	prodh,f,c
  2395  000C52  50F3               	movf	prodl,w,c
  2396  000C54  0100               	movlb	0	; () banked
  2397  000C56  0100               	movlb	0	; () banked
  2398  000C58  25DD               	addwf	_ic_ptr& (0+255),w,b
  2399  000C5A  6EE1               	movwf	fsr1l,c
  2400  000C5C  50F4               	movf	prodh,w,c
  2401  000C5E  0100               	movlb	0	; () banked
  2402  000C60  0100               	movlb	0	; () banked
  2403  000C62  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2404  000C64  6EE2               	movwf	fsr1h,c
  2405  000C66  CFDF FFE7          	movff	indf2,indf1
  2406                           
  2407                           ; BSR set to: 0
  2408  000C6A  0100               	movlb	0	; () banked
  2409  000C6C  EE20 F019          	lfsr	2,25
  2410  000C70  0100               	movlb	0	; () banked
  2411  000C72  51DD               	movf	_ic_ptr& (0+255),w,b
  2412  000C74  26D9               	addwf	fsr2l,f,c
  2413  000C76  0100               	movlb	0	; () banked
  2414  000C78  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2415  000C7A  22DA               	addwfc	fsr2h,f,c
  2416  000C7C  2ADF               	incf	indf2,f,c
  2417  000C7E                     l3487:
  2418                           
  2419                           ; BSR set to: 0
  2420  000C7E  0100               	movlb	0	; () banked
  2421  000C80  EE20 F019          	lfsr	2,25
  2422  000C84  0100               	movlb	0	; () banked
  2423  000C86  51DD               	movf	_ic_ptr& (0+255),w,b
  2424  000C88  26D9               	addwf	fsr2l,f,c
  2425  000C8A  0100               	movlb	0	; () banked
  2426  000C8C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2427  000C8E  22DA               	addwfc	fsr2h,f,c
  2428  000C90  50DF               	movf	indf2,w,c
  2429  000C92  0100               	movlb	0	; () banked
  2430  000C94  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2431  000C96  0100               	movlb	0	; () banked
  2432  000C98  0100               	movlb	0	; () banked
  2433  000C9A  51DB               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2434  000C9C  0100               	movlb	0	; () banked
  2435  000C9E  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2436  000CA0  A0D8               	btfss	status,0,c
  2437  000CA2  D7AB               	goto	l3483
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;my_i2c.c: 57: }
  2441                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2442                           
  2443                           ; BSR set to: 0
  2444  000CA4  0100               	movlb	0	; () banked
  2445  000CA6  EE20 F019          	lfsr	2,25
  2446  000CAA  0100               	movlb	0	; () banked
  2447  000CAC  51DD               	movf	_ic_ptr& (0+255),w,b
  2448  000CAE  26D9               	addwf	fsr2l,f,c
  2449  000CB0  0100               	movlb	0	; () banked
  2450  000CB2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2451  000CB4  22DA               	addwfc	fsr2h,f,c
  2452  000CB6  0100               	movlb	0	; () banked
  2453  000CB8  C0DB  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2454                           
  2455                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2456  000CBC  0100               	movlb	0	; () banked
  2457  000CBE  EE20 F01A          	lfsr	2,26
  2458  000CC2  0100               	movlb	0	; () banked
  2459  000CC4  51DD               	movf	_ic_ptr& (0+255),w,b
  2460  000CC6  26D9               	addwf	fsr2l,f,c
  2461  000CC8  0100               	movlb	0	; () banked
  2462  000CCA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2463  000CCC  22DA               	addwfc	fsr2h,f,c
  2464  000CCE  0E01               	movlw	1
  2465  000CD0  6EDF               	movwf	indf2,c
  2466                           
  2467                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2468  000CD2  0100               	movlb	0	; () banked
  2469  000CD4  EE20 F00F          	lfsr	2,15
  2470  000CD8  0100               	movlb	0	; () banked
  2471  000CDA  51DD               	movf	_ic_ptr& (0+255),w,b
  2472  000CDC  26D9               	addwf	fsr2l,f,c
  2473  000CDE  0100               	movlb	0	; () banked
  2474  000CE0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2475  000CE2  22DA               	addwfc	fsr2h,f,c
  2476  000CE4  50DF               	movf	indf2,w,c
  2477  000CE6  6EC9               	movwf	4041,c	;volatile
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2481  000CE8  88C6               	bsf	4038,4,c	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484  000CEA  0012               	return	
  2485  000CEC                     __end_of_start_i2c_slave_reply:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           indf1	equ	0xFE7
  2496                           fsr1h	equ	0xFE2
  2497                           fsr1l	equ	0xFE1
  2498                           indf2	equ	0xFDF
  2499                           postinc2	equ	0xFDE
  2500                           postdec2	equ	0xFDD
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _sendUART *****************
  2506 ;; Defined at:
  2507 ;;		line 85 in file "src/my_uart.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  length          1    wreg     unsigned char 
  2510 ;;  data            2   20[BANK1 ] PTR unsigned char 
  2511 ;;		 -> main@test(2), 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  length          1   24[BANK1 ] unsigned char 
  2514 ;;  retval          1   23[BANK1 ] char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      enum E4332
  2517 ;; Registers used:
  2518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2524 ;;      Params:         0       0       2       0       0
  2525 ;;      Locals:         0       0       2       0       0
  2526 ;;      Temps:          0       0       1       0       0
  2527 ;;      Totals:         0       0       5       0       0
  2528 ;;Total ram usage:        5 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:   13
  2531 ;; This function calls:
  2532 ;;		_ToMainLow_sendmsg
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text8
  2539  0017FC                     __ptext8:
  2540                           	opt stack 0
  2541  0017FC                     _sendUART:
  2542                           	opt stack 16
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;incstack = 0
  2546                           ;sendUART@length stored from wreg
  2547  0017FC  CFE8 F1BA          	movff	wreg,sendUART@length
  2548                           
  2549                           ;my_uart.c: 86: if(length > 10){
  2550  001800  0E0A               	movlw	10
  2551  001802  0101               	movlb	1	; () banked
  2552  001804  0101               	movlb	1	; () banked
  2553  001806  65BA               	cpfsgt	sendUART@length& (0+255),b
  2554  001808  D001               	goto	l3449
  2555  00180A  0012               	return	
  2556  00180C                     l3449:
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;my_uart.c: 89: }
  2560                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2561  00180C  0101               	movlb	1	; () banked
  2562  00180E  6FB8               	movwf	??_sendUART& (0+255),b
  2563  001810  0E1F               	movlw	31
  2564  001812  0101               	movlb	1	; () banked
  2565  001814  0101               	movlb	1	; () banked
  2566  001816  6FB2               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2567  001818  0101               	movlb	1	; () banked
  2568  00181A  51B8               	movf	??_sendUART& (0+255),w,b
  2569  00181C  0101               	movlb	1	; () banked
  2570  00181E  0101               	movlb	1	; () banked
  2571  001820  C1B7  F1B4         	movff	sendUART@data+1,ToMainLow_sendmsg@data+1
  2572  001824  0101               	movlb	1	; () banked
  2573  001826  0101               	movlb	1	; () banked
  2574  001828  C1B6  F1B3         	movff	sendUART@data,ToMainLow_sendmsg@data
  2575  00182C  0101               	movlb	1	; () banked
  2576  00182E  0101               	movlb	1	; () banked
  2577  001830  51BA               	movf	sendUART@length& (0+255),w,b
  2578  001832  EC12  F00D         	call	_ToMainLow_sendmsg
  2579  001836  0101               	movlb	1	; () banked
  2580  001838  0101               	movlb	1	; () banked
  2581  00183A  6FB9               	movwf	sendUART@retval& (0+255),b
  2582  00183C  0012               	return	
  2583  00183E                     __end_of_sendUART:
  2584                           	opt stack 0
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           prodh	equ	0xFF4
  2590                           prodl	equ	0xFF3
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           indf1	equ	0xFE7
  2594                           fsr1h	equ	0xFE2
  2595                           fsr1l	equ	0xFE1
  2596                           indf2	equ	0xFDF
  2597                           postinc2	equ	0xFDE
  2598                           postdec2	equ	0xFDD
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _ToMainLow_sendmsg *****************
  2604 ;; Defined at:
  2605 ;;		line 103 in file "src/messages.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  length          1    wreg     unsigned char 
  2608 ;;  msgtype         1   16[BANK1 ] unsigned char 
  2609 ;;  data            2   17[BANK1 ] PTR void 
  2610 ;;		 -> NULL(0), main@test(2), main@uc(5), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  length          1   19[BANK1 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      char 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2622 ;;      Params:         0       0       3       0       0
  2623 ;;      Locals:         0       0       1       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         0       0       4       0       0
  2626 ;;Total ram usage:        4 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   12
  2629 ;; This function calls:
  2630 ;;		_send_msg
  2631 ;; This function is called by:
  2632 ;;		_sendUART
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text9
  2637  001A24                     __ptext9:
  2638                           	opt stack 0
  2639  001A24                     _ToMainLow_sendmsg:
  2640                           	opt stack 16
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;incstack = 0
  2644                           ;ToMainLow_sendmsg@length stored from wreg
  2645  001A24  CFE8 F1B5          	movff	wreg,ToMainLow_sendmsg@length
  2646                           
  2647                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2648  001A28  0100               	movlb	0	; () banked
  2649  001A2A  0E00               	movlw	high _ToMainLow_MQ
  2650  001A2C  0101               	movlb	1	; () banked
  2651  001A2E  0101               	movlb	1	; () banked
  2652  001A30  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  2653  001A32  0100               	movlb	0	; () banked
  2654  001A34  0E80               	movlw	low _ToMainLow_MQ
  2655  001A36  0101               	movlb	1	; () banked
  2656  001A38  0101               	movlb	1	; () banked
  2657  001A3A  6FA6               	movwf	send_msg@qptr& (0+255),b
  2658  001A3C  C1B5  F1A8         	movff	ToMainLow_sendmsg@length,send_msg@length
  2659  001A40  C1B2  F1A9         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2660  001A44  0101               	movlb	1	; () banked
  2661  001A46  0101               	movlb	1	; () banked
  2662  001A48  C1B4  F1AB         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2663  001A4C  0101               	movlb	1	; () banked
  2664  001A4E  0101               	movlb	1	; () banked
  2665  001A50  C1B3  F1AA         	movff	ToMainLow_sendmsg@data,send_msg@data
  2666  001A54  EC76  F006         	call	_send_msg	;wreg free
  2667  001A58  0012               	return	
  2668  001A5A                     __end_of_ToMainLow_sendmsg:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           indf1	equ	0xFE7
  2679                           fsr1h	equ	0xFE2
  2680                           fsr1l	equ	0xFE1
  2681                           indf2	equ	0xFDF
  2682                           postinc2	equ	0xFDE
  2683                           postdec2	equ	0xFDD
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function _send_msg *****************
  2689 ;; Defined at:
  2690 ;;		line 24 in file "src/messages.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  2693 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2694 ;;  length          1    6[BANK1 ] unsigned char 
  2695 ;;  msgtype         1    7[BANK1 ] unsigned char 
  2696 ;;  data            2    8[BANK1 ] PTR void 
  2697 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@test(2), main@uthread_data(10), 
  2698 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  2701 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2702 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2703 ;;  tlength         2   11[BANK1 ] unsigned int 
  2704 ;;  slot            1   13[BANK1 ] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      char 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2714 ;;      Params:         0       0       6       0       0
  2715 ;;      Locals:         0       0       5       0       0
  2716 ;;      Temps:          0       0       1       0       0
  2717 ;;      Totals:         0       0      12       0       0
  2718 ;;Total ram usage:       12 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:   11
  2721 ;; This function calls:
  2722 ;;		_memcpy
  2723 ;; This function is called by:
  2724 ;;		_ToMainLow_sendmsg
  2725 ;;		_FromMainLow_sendmsg
  2726 ;;		_FromMainHigh_sendmsg
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text10
  2731  000CEC                     __ptext10:
  2732                           	opt stack 0
  2733  000CEC                     _send_msg:
  2734                           	opt stack 16
  2735                           
  2736                           ;messages.c: 25: unsigned char slot;
  2737                           ;messages.c: 27: msg *qmsg;
  2738                           ;messages.c: 28: size_t tlength = length;
  2739                           
  2740                           ;incstack = 0
  2741  000CEC  0101               	movlb	1	; () banked
  2742  000CEE  0101               	movlb	1	; () banked
  2743  000CF0  C1A8  F1AD         	movff	send_msg@length,send_msg@tlength
  2744  000CF4  0101               	movlb	1	; () banked
  2745  000CF6  0101               	movlb	1	; () banked
  2746  000CF8  6BAE               	clrf	(send_msg@tlength+1)& (0+255),b
  2747                           
  2748                           ; BSR set to: 1
  2749                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2750  000CFA  0101               	movlb	1	; () banked
  2751  000CFC  EE20 F034          	lfsr	2,52
  2752  000D00  0101               	movlb	1	; () banked
  2753  000D02  51A6               	movf	send_msg@qptr& (0+255),w,b
  2754  000D04  26D9               	addwf	fsr2l,f,c
  2755  000D06  0101               	movlb	1	; () banked
  2756  000D08  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2757  000D0A  22DA               	addwfc	fsr2h,f,c
  2758  000D0C  50DF               	movf	indf2,w,c
  2759  000D0E  0101               	movlb	1	; () banked
  2760  000D10  0101               	movlb	1	; () banked
  2761  000D12  6FAF               	movwf	send_msg@slot& (0+255),b
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2765  000D14  0101               	movlb	1	; () banked
  2766  000D16  0101               	movlb	1	; () banked
  2767  000D18  51AF               	movf	send_msg@slot& (0+255),w,b
  2768  000D1A  0D0D               	mullw	13
  2769  000D1C  50F3               	movf	prodl,w,c
  2770  000D1E  0101               	movlb	1	; () banked
  2771  000D20  0101               	movlb	1	; () banked
  2772  000D22  25A6               	addwf	send_msg@qptr& (0+255),w,b
  2773  000D24  0101               	movlb	1	; () banked
  2774  000D26  0101               	movlb	1	; () banked
  2775  000D28  6FB0               	movwf	send_msg@qmsg& (0+255),b
  2776  000D2A  50F4               	movf	prodh,w,c
  2777  000D2C  0101               	movlb	1	; () banked
  2778  000D2E  0101               	movlb	1	; () banked
  2779  000D30  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2780  000D32  0101               	movlb	1	; () banked
  2781  000D34  6FB1               	movwf	(send_msg@qmsg+1)& (0+255),b
  2782                           
  2783                           ; BSR set to: 1
  2784                           ;messages.c: 41: if (qmsg->full != 0) {
  2785  000D36  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2786  000D3A  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2787  000D3E  50DF               	movf	indf2,w,c
  2788  000D40  B4D8               	btfsc	status,2,c
  2789  000D42  D002               	goto	l3557
  2790                           
  2791                           ; BSR set to: 1
  2792                           ;messages.c: 42: return (-1);
  2793  000D44  0EFF               	movlw	255
  2794  000D46  0012               	return	
  2795  000D48                     l3557:
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;messages.c: 43: }
  2799                           ;messages.c: 46: qmsg->length = length;
  2800  000D48  0101               	movlb	1	; () banked
  2801  000D4A  EE20 F001          	lfsr	2,1
  2802  000D4E  0101               	movlb	1	; () banked
  2803  000D50  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2804  000D52  26D9               	addwf	fsr2l,f,c
  2805  000D54  0101               	movlb	1	; () banked
  2806  000D56  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2807  000D58  22DA               	addwfc	fsr2h,f,c
  2808  000D5A  0101               	movlb	1	; () banked
  2809  000D5C  C1A8  FFDF         	movff	send_msg@length,indf2
  2810                           
  2811                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2812  000D60  0101               	movlb	1	; () banked
  2813  000D62  EE20 F002          	lfsr	2,2
  2814  000D66  0101               	movlb	1	; () banked
  2815  000D68  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2816  000D6A  26D9               	addwf	fsr2l,f,c
  2817  000D6C  0101               	movlb	1	; () banked
  2818  000D6E  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2819  000D70  22DA               	addwfc	fsr2h,f,c
  2820  000D72  0101               	movlb	1	; () banked
  2821  000D74  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  2822                           
  2823                           ; BSR set to: 1
  2824                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2825  000D78  0E03               	movlw	3
  2826  000D7A  0101               	movlb	1	; () banked
  2827  000D7C  0101               	movlb	1	; () banked
  2828  000D7E  25B0               	addwf	send_msg@qmsg& (0+255),w,b
  2829  000D80  0100               	movlb	0	; () banked
  2830  000D82  0100               	movlb	0	; () banked
  2831  000D84  6FD7               	movwf	memcpy@d1& (0+255),b
  2832  000D86  0E00               	movlw	0
  2833  000D88  0101               	movlb	1	; () banked
  2834  000D8A  0101               	movlb	1	; () banked
  2835  000D8C  21B1               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2836  000D8E  0100               	movlb	0	; () banked
  2837  000D90  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  2838  000D92  0101               	movlb	1	; () banked
  2839  000D94  0100               	movlb	0	; () banked
  2840  000D96  C1AB  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  2841  000D9A  0101               	movlb	1	; () banked
  2842  000D9C  0100               	movlb	0	; () banked
  2843  000D9E  C1AA  F0D9         	movff	send_msg@data,memcpy@s1
  2844  000DA2  C1AD  F0DB         	movff	send_msg@tlength,memcpy@n
  2845  000DA6  C1AE  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  2846  000DAA  EC36  F00B         	call	_memcpy	;wreg free
  2847                           
  2848                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2849  000DAE  0101               	movlb	1	; () banked
  2850  000DB0  EE20 F034          	lfsr	2,52
  2851  000DB4  0101               	movlb	1	; () banked
  2852  000DB6  51A6               	movf	send_msg@qptr& (0+255),w,b
  2853  000DB8  26D9               	addwf	fsr2l,f,c
  2854  000DBA  0101               	movlb	1	; () banked
  2855  000DBC  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2856  000DBE  22DA               	addwfc	fsr2h,f,c
  2857  000DC0  0101               	movlb	1	; () banked
  2858  000DC2  EE10 F034          	lfsr	1,52
  2859  000DC6  0101               	movlb	1	; () banked
  2860  000DC8  51A6               	movf	send_msg@qptr& (0+255),w,b
  2861  000DCA  26E1               	addwf	fsr1l,f,c
  2862  000DCC  0101               	movlb	1	; () banked
  2863  000DCE  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2864  000DD0  22E2               	addwfc	fsr1h,f,c
  2865  000DD2  50E7               	movf	indf1,w,c
  2866  000DD4  0101               	movlb	1	; () banked
  2867  000DD6  6FAC               	movwf	??_send_msg& (0+255),b
  2868  000DD8  0101               	movlb	1	; () banked
  2869  000DDA  29AC               	incf	??_send_msg& (0+255),w,b
  2870  000DDC  0B03               	andlw	3
  2871  000DDE  6EDF               	movwf	indf2,c
  2872                           
  2873                           ; BSR set to: 1
  2874                           ;messages.c: 59: qmsg->full = 1;
  2875  000DE0  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2876  000DE4  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2877  000DE8  0E01               	movlw	1
  2878  000DEA  6EDF               	movwf	indf2,c
  2879                           
  2880                           ; BSR set to: 1
  2881                           ;messages.c: 60: return (1);
  2882  000DEC  0E01               	movlw	1
  2883  000DEE  0012               	return	
  2884  000DF0                     __end_of_send_msg:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           indf1	equ	0xFE7
  2895                           fsr1h	equ	0xFE2
  2896                           fsr1l	equ	0xFE1
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           postdec2	equ	0xFDD
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _init_uart_recv *****************
  2905 ;; Defined at:
  2906 ;;		line 80 in file "src/my_uart.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  uc              2   33[BANK0 ] PTR struct __uart_comm
  2909 ;;		 -> main@uc(5), 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2921 ;;      Params:         0       2       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         0       2       0       0       0
  2925 ;;Total ram usage:        2 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:   10
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text11
  2936  001BD0                     __ptext11:
  2937                           	opt stack 0
  2938  001BD0                     _init_uart_recv:
  2939                           	opt stack 19
  2940                           
  2941                           ;my_uart.c: 81: uc_ptr = uc;
  2942                           
  2943                           ; BSR set to: 1
  2944                           ;incstack = 0
  2945  001BD0  0100               	movlb	0	; () banked
  2946  001BD2  C0D8  F048         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2947  001BD6  0100               	movlb	0	; () banked
  2948  001BD8  C0D7  F047         	movff	init_uart_recv@uc,_uc_ptr
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2952  001BDC  EE20 F004          	lfsr	2,4
  2953  001BE0  5047               	movf	_uc_ptr,w,c
  2954  001BE2  26D9               	addwf	fsr2l,f,c
  2955  001BE4  5048               	movf	_uc_ptr+1,w,c
  2956  001BE6  22DA               	addwfc	fsr2h,f,c
  2957  001BE8  0E00               	movlw	0
  2958  001BEA  6EDF               	movwf	indf2,c
  2959                           
  2960                           ; BSR set to: 0
  2961  001BEC  0012               	return	
  2962  001BEE                     __end_of_init_uart_recv:
  2963                           	opt stack 0
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           indf1	equ	0xFE7
  2973                           fsr1h	equ	0xFE2
  2974                           fsr1l	equ	0xFE1
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           status	equ	0xFD8
  2981                           
  2982 ;; *************** function _init_uart_lthread *****************
  2983 ;; Defined at:
  2984 ;;		line 7 in file "src/uart_thread.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  uptr            2   33[BANK0 ] PTR struct __uart_thread
  2987 ;;		 -> main@uthread_data(10), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		None
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2999 ;;      Params:         0       2       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         0       2       0       0       0
  3003 ;;Total ram usage:        2 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:   10
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text12
  3014  001CAA                     __ptext12:
  3015                           	opt stack 0
  3016  001CAA                     _init_uart_lthread:
  3017                           	opt stack 19
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;incstack = 0
  3021  001CAA  0012               	return	
  3022  001CAC                     __end_of_init_uart_lthread:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           indf1	equ	0xFE7
  3033                           fsr1h	equ	0xFE2
  3034                           fsr1l	equ	0xFE1
  3035                           indf2	equ	0xFDF
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function _init_timer1_lthread *****************
  3043 ;; Defined at:
  3044 ;;		line 6 in file "src/timer1_thread.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  tptr            2   33[BANK0 ] PTR struct __timer1_thre
  3047 ;;		 -> main@t1thread_data(2), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;		None               void
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3059 ;;      Params:         0       2       0       0       0
  3060 ;;      Locals:         0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0
  3062 ;;      Totals:         0       2       0       0       0
  3063 ;;Total ram usage:        2 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:   10
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text13
  3074  001C34                     __ptext13:
  3075                           	opt stack 0
  3076  001C34                     _init_timer1_lthread:
  3077                           	opt stack 19
  3078                           
  3079                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3080                           
  3081                           ;incstack = 0
  3082  001C34  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3083  001C38  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3084  001C3C  0E00               	movlw	0
  3085  001C3E  6EDE               	movwf	postinc2,c
  3086  001C40  0E00               	movlw	0
  3087  001C42  6EDD               	movwf	postdec2,c
  3088  001C44  0012               	return	
  3089  001C46                     __end_of_init_timer1_lthread:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           indf1	equ	0xFE7
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           postdec2	equ	0xFDD
  3105                           fsr2h	equ	0xFDA
  3106                           fsr2l	equ	0xFD9
  3107                           status	equ	0xFD8
  3108                           
  3109 ;; *************** function _init_queues *****************
  3110 ;; Defined at:
  3111 ;;		line 194 in file "src/messages.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3125 ;;      Params:         0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       1       0       0       0
  3128 ;;      Totals:         0       1       0       0       0
  3129 ;;Total ram usage:        1 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:   11
  3132 ;; This function calls:
  3133 ;;		_init_queue
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text14
  3140  001594                     __ptext14:
  3141                           	opt stack 0
  3142  001594                     _init_queues:
  3143                           	opt stack 18
  3144                           
  3145                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3146                           
  3147                           ;incstack = 0
  3148  001594  0100               	movlb	0	; () banked
  3149  001596  6FDB               	movwf	??_init_queues& (0+255),b
  3150  001598  0E00               	movlw	0
  3151  00159A  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3152  00159C  0100               	movlb	0	; () banked
  3153  00159E  51DB               	movf	??_init_queues& (0+255),w,b
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3157  0015A0  0100               	movlb	0	; () banked
  3158  0015A2  0E00               	movlw	high _ToMainLow_MQ
  3159  0015A4  0100               	movlb	0	; () banked
  3160  0015A6  0100               	movlb	0	; () banked
  3161  0015A8  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3162  0015AA  0100               	movlb	0	; () banked
  3163  0015AC  0E80               	movlw	low _ToMainLow_MQ
  3164  0015AE  0100               	movlb	0	; () banked
  3165  0015B0  0100               	movlb	0	; () banked
  3166  0015B2  6FD7               	movwf	init_queue@qptr& (0+255),b
  3167  0015B4  EC54  F00A         	call	_init_queue	;wreg free
  3168                           
  3169                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3170  0015B8  0101               	movlb	1	; () banked
  3171  0015BA  0E01               	movlw	high _ToMainHigh_MQ
  3172  0015BC  0100               	movlb	0	; () banked
  3173  0015BE  0100               	movlb	0	; () banked
  3174  0015C0  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3175  0015C2  0101               	movlb	1	; () banked
  3176  0015C4  0E6C               	movlw	low _ToMainHigh_MQ
  3177  0015C6  0100               	movlb	0	; () banked
  3178  0015C8  0100               	movlb	0	; () banked
  3179  0015CA  6FD7               	movwf	init_queue@qptr& (0+255),b
  3180  0015CC  EC54  F00A         	call	_init_queue	;wreg free
  3181                           
  3182                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3183  0015D0  0101               	movlb	1	; () banked
  3184  0015D2  0E01               	movlw	high _FromMainLow_MQ
  3185  0015D4  0100               	movlb	0	; () banked
  3186  0015D6  0100               	movlb	0	; () banked
  3187  0015D8  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3188  0015DA  0101               	movlb	1	; () banked
  3189  0015DC  0E36               	movlw	low _FromMainLow_MQ
  3190  0015DE  0100               	movlb	0	; () banked
  3191  0015E0  0100               	movlb	0	; () banked
  3192  0015E2  6FD7               	movwf	init_queue@qptr& (0+255),b
  3193  0015E4  EC54  F00A         	call	_init_queue	;wreg free
  3194                           
  3195                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3196  0015E8  0101               	movlb	1	; () banked
  3197  0015EA  0E01               	movlw	high _FromMainHigh_MQ
  3198  0015EC  0100               	movlb	0	; () banked
  3199  0015EE  0100               	movlb	0	; () banked
  3200  0015F0  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3201  0015F2  0101               	movlb	1	; () banked
  3202  0015F4  0E00               	movlw	low _FromMainHigh_MQ
  3203  0015F6  0100               	movlb	0	; () banked
  3204  0015F8  0100               	movlb	0	; () banked
  3205  0015FA  6FD7               	movwf	init_queue@qptr& (0+255),b
  3206  0015FC  EC54  F00A         	call	_init_queue	;wreg free
  3207  001600  0012               	return	
  3208  001602                     __end_of_init_queues:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf1	equ	0xFE7
  3219                           fsr1h	equ	0xFE2
  3220                           fsr1l	equ	0xFE1
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _init_queue *****************
  3229 ;; Defined at:
  3230 ;;		line 14 in file "src/messages.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3233 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  i               1   36[BANK0 ] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;		None               void
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3245 ;;      Params:         0       2       0       0       0
  3246 ;;      Locals:         0       1       0       0       0
  3247 ;;      Temps:          0       1       0       0       0
  3248 ;;      Totals:         0       4       0       0       0
  3249 ;;Total ram usage:        4 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:   10
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_init_queues
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text15
  3260  0014A8                     __ptext15:
  3261                           	opt stack 0
  3262  0014A8                     _init_queue:
  3263                           	opt stack 18
  3264                           
  3265                           ;messages.c: 15: unsigned char i;
  3266                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3267                           
  3268                           ;incstack = 0
  3269  0014A8  0100               	movlb	0	; () banked
  3270  0014AA  EE20 F034          	lfsr	2,52
  3271  0014AE  0100               	movlb	0	; () banked
  3272  0014B0  51D7               	movf	init_queue@qptr& (0+255),w,b
  3273  0014B2  26D9               	addwf	fsr2l,f,c
  3274  0014B4  0100               	movlb	0	; () banked
  3275  0014B6  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3276  0014B8  22DA               	addwfc	fsr2h,f,c
  3277  0014BA  0E00               	movlw	0
  3278  0014BC  6EDF               	movwf	indf2,c
  3279                           
  3280                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3281  0014BE  0100               	movlb	0	; () banked
  3282  0014C0  EE20 F035          	lfsr	2,53
  3283  0014C4  0100               	movlb	0	; () banked
  3284  0014C6  51D7               	movf	init_queue@qptr& (0+255),w,b
  3285  0014C8  26D9               	addwf	fsr2l,f,c
  3286  0014CA  0100               	movlb	0	; () banked
  3287  0014CC  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3288  0014CE  22DA               	addwfc	fsr2h,f,c
  3289  0014D0  0E00               	movlw	0
  3290  0014D2  6EDF               	movwf	indf2,c
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3294  0014D4  0100               	movlb	0	; () banked
  3295  0014D6  6FD9               	movwf	??_init_queue& (0+255),b
  3296  0014D8  0E00               	movlw	0
  3297  0014DA  0100               	movlb	0	; () banked
  3298  0014DC  0100               	movlb	0	; () banked
  3299  0014DE  6FDA               	movwf	init_queue@i& (0+255),b
  3300  0014E0  0100               	movlb	0	; () banked
  3301  0014E2  51D9               	movf	??_init_queue& (0+255),w,b
  3302                           
  3303                           ; BSR set to: 0
  3304  0014E4  0E03               	movlw	3
  3305  0014E6  0100               	movlb	0	; () banked
  3306  0014E8  0100               	movlb	0	; () banked
  3307  0014EA  65DA               	cpfsgt	init_queue@i& (0+255),b
  3308  0014EC  D001               	goto	l3539
  3309  0014EE  0012               	return	
  3310  0014F0                     l3539:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;messages.c: 20: qptr->queue[i].full = 0;
  3314  0014F0  0100               	movlb	0	; () banked
  3315  0014F2  0100               	movlb	0	; () banked
  3316  0014F4  51DA               	movf	init_queue@i& (0+255),w,b
  3317  0014F6  0D0D               	mullw	13
  3318  0014F8  50F3               	movf	prodl,w,c
  3319  0014FA  0100               	movlb	0	; () banked
  3320  0014FC  0100               	movlb	0	; () banked
  3321  0014FE  25D7               	addwf	init_queue@qptr& (0+255),w,b
  3322  001500  6ED9               	movwf	fsr2l,c
  3323  001502  50F4               	movf	prodh,w,c
  3324  001504  0100               	movlb	0	; () banked
  3325  001506  0100               	movlb	0	; () banked
  3326  001508  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3327  00150A  6EDA               	movwf	fsr2h,c
  3328  00150C  0E00               	movlw	0
  3329  00150E  6EDF               	movwf	indf2,c
  3330                           
  3331                           ; BSR set to: 0
  3332  001510  0100               	movlb	0	; () banked
  3333  001512  0100               	movlb	0	; () banked
  3334  001514  2BDA               	incf	init_queue@i& (0+255),f,b
  3335                           
  3336                           ; BSR set to: 0
  3337  001516  0E03               	movlw	3
  3338  001518  0100               	movlb	0	; () banked
  3339  00151A  0100               	movlb	0	; () banked
  3340  00151C  65DA               	cpfsgt	init_queue@i& (0+255),b
  3341  00151E  D7E8               	goto	l3539
  3342  001520  0012               	return	
  3343  001522                     __end_of_init_queue:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           indf1	equ	0xFE7
  3354                           fsr1h	equ	0xFE2
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           postdec2	equ	0xFDD
  3359                           fsr2h	equ	0xFDA
  3360                           fsr2l	equ	0xFD9
  3361                           status	equ	0xFD8
  3362                           
  3363 ;; *************** function _init_i2c *****************
  3364 ;; Defined at:
  3365 ;;		line 268 in file "src/my_i2c.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  ic              2   33[BANK0 ] PTR struct __i2c_comm
  3368 ;;		 -> main@ic(28), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3380 ;;      Params:         0       2       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       2       0       0       0
  3384 ;;Total ram usage:        2 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:   10
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text16
  3395  001602                     __ptext16:
  3396                           	opt stack 0
  3397  001602                     _init_i2c:
  3398                           	opt stack 19
  3399                           
  3400                           ;my_i2c.c: 269: ic_ptr = ic;
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;incstack = 0
  3404  001602  0100               	movlb	0	; () banked
  3405  001604  0100               	movlb	0	; () banked
  3406  001606  C0D8  F0DE         	movff	init_i2c@ic+1,_ic_ptr+1
  3407  00160A  0100               	movlb	0	; () banked
  3408  00160C  0100               	movlb	0	; () banked
  3409  00160E  C0D7  F0DD         	movff	init_i2c@ic,_ic_ptr
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3413  001612  0100               	movlb	0	; () banked
  3414  001614  EE20 F00A          	lfsr	2,10
  3415  001618  0100               	movlb	0	; () banked
  3416  00161A  51DD               	movf	_ic_ptr& (0+255),w,b
  3417  00161C  26D9               	addwf	fsr2l,f,c
  3418  00161E  0100               	movlb	0	; () banked
  3419  001620  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3420  001622  22DA               	addwfc	fsr2h,f,c
  3421  001624  0E00               	movlw	0
  3422  001626  6EDF               	movwf	indf2,c
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3426  001628  0100               	movlb	0	; () banked
  3427  00162A  EE20 F00B          	lfsr	2,11
  3428  00162E  0100               	movlb	0	; () banked
  3429  001630  51DD               	movf	_ic_ptr& (0+255),w,b
  3430  001632  26D9               	addwf	fsr2l,f,c
  3431  001634  0100               	movlb	0	; () banked
  3432  001636  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3433  001638  22DA               	addwfc	fsr2h,f,c
  3434  00163A  0E00               	movlw	0
  3435  00163C  6EDF               	movwf	indf2,c
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3439  00163E  0100               	movlb	0	; () banked
  3440  001640  EE20 F00C          	lfsr	2,12
  3441  001644  0100               	movlb	0	; () banked
  3442  001646  51DD               	movf	_ic_ptr& (0+255),w,b
  3443  001648  26D9               	addwf	fsr2l,f,c
  3444  00164A  0100               	movlb	0	; () banked
  3445  00164C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3446  00164E  22DA               	addwfc	fsr2h,f,c
  3447  001650  0E05               	movlw	5
  3448  001652  6EDF               	movwf	indf2,c
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3452  001654  0100               	movlb	0	; () banked
  3453  001656  EE20 F00E          	lfsr	2,14
  3454  00165A  0100               	movlb	0	; () banked
  3455  00165C  51DD               	movf	_ic_ptr& (0+255),w,b
  3456  00165E  26D9               	addwf	fsr2l,f,c
  3457  001660  0100               	movlb	0	; () banked
  3458  001662  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3459  001664  22DA               	addwfc	fsr2h,f,c
  3460  001666  0E00               	movlw	0
  3461  001668  6EDF               	movwf	indf2,c
  3462                           
  3463                           ; BSR set to: 0
  3464  00166A  0012               	return	
  3465  00166C                     __end_of_init_i2c:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           indf1	equ	0xFE7
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _i2c_configure_slave *****************
  3486 ;; Defined at:
  3487 ;;		line 279 in file "src/my_i2c.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  addr            1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  addr            1   33[BANK0 ] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3501 ;;      Params:         0       0       0       0       0
  3502 ;;      Locals:         0       1       0       0       0
  3503 ;;      Temps:          0       0       0       0       0
  3504 ;;      Totals:         0       1       0       0       0
  3505 ;;Total ram usage:        1 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:   10
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text17
  3516  001B12                     __ptext17:
  3517                           	opt stack 0
  3518  001B12                     _i2c_configure_slave:
  3519                           	opt stack 19
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;incstack = 0
  3523                           ;i2c_configure_slave@addr stored from wreg
  3524  001B12  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3525                           
  3526                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3527  001B16  8694               	bsf	3988,3,c	;volatile
  3528                           
  3529                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3530  001B18  8894               	bsf	3988,4,c	;volatile
  3531                           
  3532                           ;my_i2c.c: 297: SSPADD = addr;
  3533  001B1A  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3534                           
  3535                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3536  001B1E  0E00               	movlw	0
  3537  001B20  6EC7               	movwf	4039,c	;volatile
  3538                           
  3539                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3540  001B22  0E00               	movlw	0
  3541  001B24  6EC6               	movwf	4038,c	;volatile
  3542                           
  3543                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3544  001B26  0E00               	movlw	0
  3545  001B28  6EC5               	movwf	4037,c	;volatile
  3546                           
  3547                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3548  001B2A  0E0E               	movlw	14
  3549  001B2C  12C6               	iorwf	4038,f,c	;volatile
  3550                           
  3551                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3552  001B2E  8EC7               	bsf	4039,7,c	;volatile
  3553                           
  3554                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3555  001B30  8694               	bsf	3988,3,c	;volatile
  3556                           
  3557                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3558  001B32  8894               	bsf	3988,4,c	;volatile
  3559                           
  3560                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3561  001B34  80C5               	bsf	4037,0,c	;volatile
  3562                           
  3563                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3564  001B36  8AC6               	bsf	4038,5,c	;volatile
  3565  001B38  0012               	return	
  3566  001B3A                     __end_of_i2c_configure_slave:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           indf1	equ	0xFE7
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           postdec2	equ	0xFDD
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _enable_interrupts *****************
  3587 ;; Defined at:
  3588 ;;		line 14 in file "src/interrupts.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		None
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   10
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text18
  3617  001C9A                     __ptext18:
  3618                           	opt stack 0
  3619  001C9A                     _enable_interrupts:
  3620                           	opt stack 19
  3621                           
  3622                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3623                           
  3624                           ;incstack = 0
  3625  001C9A  8ED0               	bsf	4048,7,c	;volatile
  3626                           
  3627                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3628  001C9C  8EF2               	bsf	intcon,7,c	;volatile
  3629                           
  3630                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3631  001C9E  8CF2               	bsf	intcon,6,c	;volatile
  3632  001CA0  0012               	return	
  3633  001CA2                     __end_of_enable_interrupts:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           postinc0	equ	0xFEE
  3643                           wreg	equ	0xFE8
  3644                           indf1	equ	0xFE7
  3645                           fsr1h	equ	0xFE2
  3646                           fsr1l	equ	0xFE1
  3647                           indf2	equ	0xFDF
  3648                           postinc2	equ	0xFDE
  3649                           postdec2	equ	0xFDD
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _block_on_To_msgqueues *****************
  3655 ;; Defined at:
  3656 ;;		line 258 in file "src/messages.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;		None               void
  3663 ;; Registers used:
  3664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3670 ;;      Params:         0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       0       1       0       0
  3673 ;;      Totals:         0       0       1       0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:   13
  3677 ;; This function calls:
  3678 ;;		_Delay1KTCYx
  3679 ;;		_check_msg
  3680 ;;		_in_main
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text19
  3687  00142A                     __ptext19:
  3688                           	opt stack 0
  3689  00142A                     _block_on_To_msgqueues:
  3690                           	opt stack 16
  3691                           
  3692                           ;messages.c: 259: if (!in_main()) {
  3693                           
  3694                           ;incstack = 0
  3695  00142A  ECDC  F00B         	call	_in_main	;wreg free
  3696  00142E  0100               	movlb	0	; () banked
  3697  001430  0100               	movlb	0	; () banked
  3698  001432  51DC               	movf	(?_in_main+1)& (0+255),w,b
  3699  001434  0100               	movlb	0	; () banked
  3700  001436  11DB               	iorwf	?_in_main& (0+255),w,b
  3701  001438  B4D8               	btfsc	status,2,c
  3702  00143A  0012               	return	
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;messages.c: 261: }
  3706                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3707                           
  3708                           ; BSR set to: 0
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;messages.c: 260: return;
  3712  00143C  0101               	movlb	1	; () banked
  3713  00143E  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3714  001440  0E01               	movlw	1
  3715  001442  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3716  001444  0101               	movlb	1	; () banked
  3717  001446  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3718  001448                     l3461:
  3719                           
  3720                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3721  001448  0101               	movlb	1	; () banked
  3722  00144A  0E01               	movlw	high _ToMainHigh_MQ
  3723  00144C  0100               	movlb	0	; () banked
  3724  00144E  0100               	movlb	0	; () banked
  3725  001450  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3726  001452  0101               	movlb	1	; () banked
  3727  001454  0E6C               	movlw	low _ToMainHigh_MQ
  3728  001456  0100               	movlb	0	; () banked
  3729  001458  0100               	movlb	0	; () banked
  3730  00145A  6FD7               	movwf	check_msg@qptr& (0+255),b
  3731  00145C  EC2D  F00D         	call	_check_msg	;wreg free
  3732  001460  0900               	iorlw	0
  3733  001462  B4D8               	btfsc	status,2,c
  3734  001464  D007               	goto	l3467
  3735                           
  3736                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3737  001466  0101               	movlb	1	; () banked
  3738  001468  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3739  00146A  0E00               	movlw	0
  3740  00146C  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3741  00146E  0101               	movlb	1	; () banked
  3742  001470  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3743  001472  0012               	return	
  3744  001474                     l3467:
  3745                           
  3746                           ;messages.c: 271: }
  3747                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3748  001474  0100               	movlb	0	; () banked
  3749  001476  0E00               	movlw	high _ToMainLow_MQ
  3750  001478  0100               	movlb	0	; () banked
  3751  00147A  0100               	movlb	0	; () banked
  3752  00147C  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3753  00147E  0100               	movlb	0	; () banked
  3754  001480  0E80               	movlw	low _ToMainLow_MQ
  3755  001482  0100               	movlb	0	; () banked
  3756  001484  0100               	movlb	0	; () banked
  3757  001486  6FD7               	movwf	check_msg@qptr& (0+255),b
  3758  001488  EC2D  F00D         	call	_check_msg	;wreg free
  3759  00148C  0900               	iorlw	0
  3760  00148E  B4D8               	btfsc	status,2,c
  3761  001490  D007               	goto	l3473
  3762                           
  3763                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3764  001492  0101               	movlb	1	; () banked
  3765  001494  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3766  001496  0E00               	movlw	0
  3767  001498  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3768  00149A  0101               	movlb	1	; () banked
  3769  00149C  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3770  00149E  0012               	return	
  3771  0014A0                     l3473:
  3772                           
  3773                           ;messages.c: 278: }
  3774                           ;messages.c: 279: Delay1KTCYx(10);
  3775  0014A0  0E0A               	movlw	10
  3776  0014A2  EC06  F00E         	call	_Delay1KTCYx
  3777  0014A6  D7D0               	goto	l3461
  3778  0014A8                     __end_of_block_on_To_msgqueues:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           intcon	equ	0xFF2
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           indf2	equ	0xFDF
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function _in_main *****************
  3800 ;; Defined at:
  3801 ;;		line 40 in file "src/interrupts.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  2   37[BANK0 ] int 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3815 ;;      Params:         0       2       0       0       0
  3816 ;;      Locals:         0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0
  3818 ;;      Totals:         0       2       0       0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:   12
  3822 ;; This function calls:
  3823 ;;		_in_high_int
  3824 ;;		_in_low_int
  3825 ;; This function is called by:
  3826 ;;		_block_on_To_msgqueues
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text20
  3831  0017B8                     __ptext20:
  3832                           	opt stack 0
  3833  0017B8                     _in_main:
  3834                           	opt stack 16
  3835                           
  3836                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3837                           
  3838                           ;incstack = 0
  3839  0017B8  ECB9  F00B         	call	_in_low_int	;wreg free
  3840  0017BC  0100               	movlb	0	; () banked
  3841  0017BE  0100               	movlb	0	; () banked
  3842  0017C0  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3843  0017C2  0100               	movlb	0	; () banked
  3844  0017C4  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3845  0017C6  A4D8               	btfss	status,2,c
  3846  0017C8  D011               	goto	l3065
  3847                           
  3848                           ; BSR set to: 0
  3849  0017CA  EC23  F00E         	call	_in_high_int	;wreg free
  3850  0017CE  0100               	movlb	0	; () banked
  3851  0017D0  0100               	movlb	0	; () banked
  3852  0017D2  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3853  0017D4  0100               	movlb	0	; () banked
  3854  0017D6  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3855  0017D8  A4D8               	btfss	status,2,c
  3856  0017DA  D008               	goto	l3065
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;interrupts.c: 42: return (1);
  3860  0017DC  0E00               	movlw	0
  3861  0017DE  0100               	movlb	0	; () banked
  3862  0017E0  0100               	movlb	0	; () banked
  3863  0017E2  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3864  0017E4  0E01               	movlw	1
  3865  0017E6  0100               	movlb	0	; () banked
  3866  0017E8  6FDB               	movwf	?_in_main& (0+255),b
  3867  0017EA  0012               	return	
  3868  0017EC                     l3065:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;interrupts.c: 44: return (0);
  3872  0017EC  0E00               	movlw	0
  3873  0017EE  0100               	movlb	0	; () banked
  3874  0017F0  0100               	movlb	0	; () banked
  3875  0017F2  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3876  0017F4  0E00               	movlw	0
  3877  0017F6  0100               	movlb	0	; () banked
  3878  0017F8  6FDB               	movwf	?_in_main& (0+255),b
  3879  0017FA  0012               	return	
  3880  0017FC                     __end_of_in_main:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           indf2	equ	0xFDF
  3895                           postinc2	equ	0xFDE
  3896                           postdec2	equ	0xFDD
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _in_low_int *****************
  3902 ;; Defined at:
  3903 ;;		line 30 in file "src/interrupts.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  2   35[BANK0 ] int 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3917 ;;      Params:         0       2       0       0       0
  3918 ;;      Locals:         0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0
  3920 ;;      Totals:         0       2       0       0       0
  3921 ;;Total ram usage:        2 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:   11
  3924 ;; This function calls:
  3925 ;;		_in_high_int
  3926 ;; This function is called by:
  3927 ;;		_in_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text21
  3932  001772                     __ptext21:
  3933                           	opt stack 0
  3934  001772                     _in_low_int:
  3935                           	opt stack 16
  3936                           
  3937                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;incstack = 0
  3941  001772  ACF2               	btfss	intcon,6,c	;volatile
  3942  001774  D008               	goto	l3043
  3943                           
  3944                           ;interrupts.c: 32: return (0);
  3945  001776  0E00               	movlw	0
  3946  001778  0100               	movlb	0	; () banked
  3947  00177A  0100               	movlb	0	; () banked
  3948  00177C  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3949  00177E  0E00               	movlw	0
  3950  001780  0100               	movlb	0	; () banked
  3951  001782  6FD9               	movwf	?_in_low_int& (0+255),b
  3952  001784  0012               	return	
  3953  001786                     l3043:
  3954  001786  EC23  F00E         	call	_in_high_int	;wreg free
  3955  00178A  0100               	movlb	0	; () banked
  3956  00178C  0100               	movlb	0	; () banked
  3957  00178E  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3958  001790  0100               	movlb	0	; () banked
  3959  001792  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3960  001794  B4D8               	btfsc	status,2,c
  3961  001796  D008               	goto	l3051
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;interrupts.c: 34: return (0);
  3965  001798  0E00               	movlw	0
  3966  00179A  0100               	movlb	0	; () banked
  3967  00179C  0100               	movlb	0	; () banked
  3968  00179E  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3969  0017A0  0E00               	movlw	0
  3970  0017A2  0100               	movlb	0	; () banked
  3971  0017A4  6FD9               	movwf	?_in_low_int& (0+255),b
  3972  0017A6  0012               	return	
  3973  0017A8                     l3051:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;interrupts.c: 36: return (1);
  3977  0017A8  0E00               	movlw	0
  3978  0017AA  0100               	movlb	0	; () banked
  3979  0017AC  0100               	movlb	0	; () banked
  3980  0017AE  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3981  0017B0  0E01               	movlw	1
  3982  0017B2  0100               	movlb	0	; () banked
  3983  0017B4  6FD9               	movwf	?_in_low_int& (0+255),b
  3984  0017B6  0012               	return	
  3985  0017B8                     __end_of_in_low_int:
  3986                           	opt stack 0
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           intcon	equ	0xFF2
  3994                           postinc0	equ	0xFEE
  3995                           wreg	equ	0xFE8
  3996                           indf1	equ	0xFE7
  3997                           fsr1h	equ	0xFE2
  3998                           fsr1l	equ	0xFE1
  3999                           indf2	equ	0xFDF
  4000                           postinc2	equ	0xFDE
  4001                           postdec2	equ	0xFDD
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _in_high_int *****************
  4007 ;; Defined at:
  4008 ;;		line 22 in file "src/interrupts.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2   33[BANK0 ] int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4022 ;;      Params:         0       2       0       0       0
  4023 ;;      Locals:         0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0
  4025 ;;      Totals:         0       2       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:   10
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_in_low_int
  4033 ;;		_in_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text22
  4038  001C46                     __ptext22:
  4039                           	opt stack 0
  4040  001C46                     _in_high_int:
  4041                           	opt stack 16
  4042                           
  4043                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;incstack = 0
  4047  001C46  0E00               	movlw	0
  4048  001C48  AEF2               	btfss	intcon,7,c	;volatile
  4049  001C4A  0E01               	movlw	1
  4050  001C4C  0100               	movlb	0	; () banked
  4051  001C4E  0100               	movlb	0	; () banked
  4052  001C50  6FD7               	movwf	?_in_high_int& (0+255),b
  4053  001C52  0100               	movlb	0	; () banked
  4054  001C54  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  4055  001C56  0012               	return	
  4056  001C58                     __end_of_in_high_int:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           indf1	equ	0xFE7
  4068                           fsr1h	equ	0xFE2
  4069                           fsr1l	equ	0xFE1
  4070                           indf2	equ	0xFDF
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function _check_msg *****************
  4078 ;; Defined at:
  4079 ;;		line 222 in file "src/messages.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4082 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      unsigned char 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4094 ;;      Params:         0       2       0       0       0
  4095 ;;      Locals:         0       0       0       0       0
  4096 ;;      Temps:          0       1       0       0       0
  4097 ;;      Totals:         0       3       0       0       0
  4098 ;;Total ram usage:        3 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:   10
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_block_on_To_msgqueues
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text23
  4109  001A5A                     __ptext23:
  4110                           	opt stack 0
  4111  001A5A                     _check_msg:
  4112                           	opt stack 18
  4113                           
  4114                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;incstack = 0
  4118  001A5A  0100               	movlb	0	; () banked
  4119  001A5C  EE20 F035          	lfsr	2,53
  4120  001A60  0100               	movlb	0	; () banked
  4121  001A62  51D7               	movf	check_msg@qptr& (0+255),w,b
  4122  001A64  26D9               	addwf	fsr2l,f,c
  4123  001A66  0100               	movlb	0	; () banked
  4124  001A68  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  4125  001A6A  22DA               	addwfc	fsr2h,f,c
  4126  001A6C  50DF               	movf	indf2,w,c
  4127  001A6E  0100               	movlb	0	; () banked
  4128  001A70  6FD9               	movwf	??_check_msg& (0+255),b
  4129  001A72  0100               	movlb	0	; () banked
  4130  001A74  51D9               	movf	??_check_msg& (0+255),w,b
  4131  001A76  0D0D               	mullw	13
  4132  001A78  50F3               	movf	prodl,w,c
  4133  001A7A  0100               	movlb	0	; () banked
  4134  001A7C  0100               	movlb	0	; () banked
  4135  001A7E  25D7               	addwf	check_msg@qptr& (0+255),w,b
  4136  001A80  6ED9               	movwf	fsr2l,c
  4137  001A82  50F4               	movf	prodh,w,c
  4138  001A84  0100               	movlb	0	; () banked
  4139  001A86  0100               	movlb	0	; () banked
  4140  001A88  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4141  001A8A  6EDA               	movwf	fsr2h,c
  4142  001A8C  50DF               	movf	indf2,w,c
  4143  001A8E  0012               	return	
  4144  001A90                     __end_of_check_msg:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           intcon	equ	0xFF2
  4153                           postinc0	equ	0xFEE
  4154                           wreg	equ	0xFE8
  4155                           indf1	equ	0xFE7
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _Delay1KTCYx *****************
  4166 ;; Defined at:
  4167 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  unit            1    wreg     unsigned char 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  unit            1   33[BANK0 ] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;		None               void
  4174 ;; Registers used:
  4175 ;;		wreg
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4181 ;;      Params:         0       0       0       0       0
  4182 ;;      Locals:         0       1       0       0       0
  4183 ;;      Temps:          0       0       0       0       0
  4184 ;;      Totals:         0       1       0       0       0
  4185 ;;Total ram usage:        1 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:   10
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_block_on_To_msgqueues
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text24
  4196  001C0C                     __ptext24:
  4197                           	opt stack 0
  4198  001C0C                     _Delay1KTCYx:
  4199                           	opt stack 18
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;incstack = 0
  4203                           ;Delay1KTCYx@unit stored from wreg
  4204  001C0C  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  4205  001C10                     l729:
  4206  001C10  0EFA               	movlw	250
  4207  001C12                     u2957:
  4208  001C12  F000               	nop	
  4209  001C14  2EE8               	decfsz	wreg,f,c
  4210  001C16  D7FD               	goto	u2957
  4211  001C18  0100               	movlb	0	; () banked
  4212  001C1A  0100               	movlb	0	; () banked
  4213  001C1C  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4214  001C1E  D7F8               	goto	l729
  4215  001C20  0012               	return	
  4216  001C22                     __end_of_Delay1KTCYx:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           indf1	equ	0xFE7
  4228                           fsr1h	equ	0xFE2
  4229                           fsr1l	equ	0xFE1
  4230                           indf2	equ	0xFDF
  4231                           postinc2	equ	0xFDE
  4232                           postdec2	equ	0xFDD
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _WriteTimer1 *****************
  4238 ;; Defined at:
  4239 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  timer1          2   33[BANK0 ] unsigned int 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  timer           2   35[BANK0 ] struct Timers
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		None
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4253 ;;      Params:         0       2       0       0       0
  4254 ;;      Locals:         0       2       0       0       0
  4255 ;;      Temps:          0       0       0       0       0
  4256 ;;      Totals:         0       4       0       0       0
  4257 ;;Total ram usage:        4 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:   10
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text25
  4268  001C58                     __ptext25:
  4269                           	opt stack 0
  4270  001C58                     _WriteTimer1:
  4271                           	opt stack 19
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;incstack = 0
  4275  001C58  C0D7  F0D9         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4276  001C5C  C0D8  F0DA         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4277  001C60  C0DA  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4278  001C64  C0D9  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4279  001C68  0012               	return	
  4280  001C6A                     __end_of_WriteTimer1:
  4281                           	opt stack 0
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           prodh	equ	0xFF4
  4287                           prodl	equ	0xFF3
  4288                           intcon	equ	0xFF2
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           indf1	equ	0xFE7
  4292                           fsr1h	equ	0xFE2
  4293                           fsr1l	equ	0xFE1
  4294                           indf2	equ	0xFDF
  4295                           postinc2	equ	0xFDE
  4296                           postdec2	equ	0xFDD
  4297                           fsr2h	equ	0xFDA
  4298                           fsr2l	equ	0xFD9
  4299                           status	equ	0xFD8
  4300                           
  4301 ;; *************** function _WriteTimer0 *****************
  4302 ;; Defined at:
  4303 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  timer0          2   33[BANK0 ] unsigned int 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  timer           2   35[BANK0 ] struct Timers
  4308 ;; Return value:  Size  Location     Type
  4309 ;;		None               void
  4310 ;; Registers used:
  4311 ;;		None
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4317 ;;      Params:         0       2       0       0       0
  4318 ;;      Locals:         0       2       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         0       4       0       0       0
  4321 ;;Total ram usage:        4 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:   10
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text26
  4332  001C6A                     __ptext26:
  4333                           	opt stack 0
  4334  001C6A                     _WriteTimer0:
  4335                           	opt stack 19
  4336                           
  4337                           ;incstack = 0
  4338  001C6A  C0D7  F0D9         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4339  001C6E  C0D8  F0DA         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4340  001C72  C0DA  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4341  001C76  C0D9  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4342  001C7A  0012               	return	
  4343  001C7C                     __end_of_WriteTimer0:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           prodh	equ	0xFF4
  4350                           prodl	equ	0xFF3
  4351                           intcon	equ	0xFF2
  4352                           postinc0	equ	0xFEE
  4353                           wreg	equ	0xFE8
  4354                           indf1	equ	0xFE7
  4355                           fsr1h	equ	0xFE2
  4356                           fsr1l	equ	0xFE1
  4357                           indf2	equ	0xFDF
  4358                           postinc2	equ	0xFDE
  4359                           postdec2	equ	0xFDD
  4360                           fsr2h	equ	0xFDA
  4361                           fsr2l	equ	0xFD9
  4362                           status	equ	0xFD8
  4363                           
  4364 ;; *************** function _ToMainLow_recvmsg *****************
  4365 ;; Defined at:
  4366 ;;		line 112 in file "src/messages.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  maxlength       1    wreg     unsigned char 
  4369 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  4370 ;;		 -> main@msgtype(1), 
  4371 ;;  data            2   20[BANK1 ] PTR void 
  4372 ;;		 -> main@msgbuffer(11), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  maxlength       1   22[BANK1 ] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      char 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4384 ;;      Params:         0       0       4       0       0
  4385 ;;      Locals:         0       0       1       0       0
  4386 ;;      Temps:          0       0       0       0       0
  4387 ;;      Totals:         0       0       5       0       0
  4388 ;;Total ram usage:        5 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:   12
  4391 ;; This function calls:
  4392 ;;		_recv_msg
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text27
  4399  00183E                     __ptext27:
  4400                           	opt stack 0
  4401  00183E                     _ToMainLow_recvmsg:
  4402                           	opt stack 17
  4403                           
  4404                           ;incstack = 0
  4405                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4406  00183E  CFE8 F1B8          	movff	wreg,ToMainLow_recvmsg@maxlength
  4407                           
  4408                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4409  001842  0100               	movlb	0	; () banked
  4410  001844  0E00               	movlw	high _ToMainLow_MQ
  4411  001846  0101               	movlb	1	; () banked
  4412  001848  0101               	movlb	1	; () banked
  4413  00184A  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4414  00184C  0100               	movlb	0	; () banked
  4415  00184E  0E80               	movlw	low _ToMainLow_MQ
  4416  001850  0101               	movlb	1	; () banked
  4417  001852  0101               	movlb	1	; () banked
  4418  001854  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4419  001856  C1B8  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4420  00185A  0101               	movlb	1	; () banked
  4421  00185C  0101               	movlb	1	; () banked
  4422  00185E  C1B5  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4423  001862  0101               	movlb	1	; () banked
  4424  001864  0101               	movlb	1	; () banked
  4425  001866  C1B4  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4426  00186A  0101               	movlb	1	; () banked
  4427  00186C  0101               	movlb	1	; () banked
  4428  00186E  C1B7  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4429  001872  0101               	movlb	1	; () banked
  4430  001874  0101               	movlb	1	; () banked
  4431  001876  C1B6  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4432  00187A  EC54  F005         	call	_recv_msg	;wreg free
  4433  00187E  0012               	return	
  4434  001880                     __end_of_ToMainLow_recvmsg:
  4435                           	opt stack 0
  4436                           tblptru	equ	0xFF8
  4437                           tblptrh	equ	0xFF7
  4438                           tblptrl	equ	0xFF6
  4439                           tablat	equ	0xFF5
  4440                           prodh	equ	0xFF4
  4441                           prodl	equ	0xFF3
  4442                           intcon	equ	0xFF2
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           indf1	equ	0xFE7
  4446                           fsr1h	equ	0xFE2
  4447                           fsr1l	equ	0xFE1
  4448                           indf2	equ	0xFDF
  4449                           postinc2	equ	0xFDE
  4450                           postdec2	equ	0xFDD
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _ToMainHigh_recvmsg *****************
  4456 ;; Defined at:
  4457 ;;		line 135 in file "src/messages.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  maxlength       1    wreg     unsigned char 
  4460 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  4461 ;;		 -> main@msgtype(1), 
  4462 ;;  data            2   20[BANK1 ] PTR void 
  4463 ;;		 -> main@msgbuffer(11), 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  maxlength       1   22[BANK1 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      char 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4475 ;;      Params:         0       0       4       0       0
  4476 ;;      Locals:         0       0       1       0       0
  4477 ;;      Temps:          0       0       0       0       0
  4478 ;;      Totals:         0       0       5       0       0
  4479 ;;Total ram usage:        5 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   12
  4482 ;; This function calls:
  4483 ;;		_recv_msg
  4484 ;; This function is called by:
  4485 ;;		_main
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text28
  4490  001880                     __ptext28:
  4491                           	opt stack 0
  4492  001880                     _ToMainHigh_recvmsg:
  4493                           	opt stack 17
  4494                           
  4495                           ;incstack = 0
  4496                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4497  001880  CFE8 F1B8          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4498                           
  4499                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4500  001884  0101               	movlb	1	; () banked
  4501  001886  0E01               	movlw	high _ToMainHigh_MQ
  4502  001888  0101               	movlb	1	; () banked
  4503  00188A  0101               	movlb	1	; () banked
  4504  00188C  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4505  00188E  0101               	movlb	1	; () banked
  4506  001890  0E6C               	movlw	low _ToMainHigh_MQ
  4507  001892  0101               	movlb	1	; () banked
  4508  001894  0101               	movlb	1	; () banked
  4509  001896  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4510  001898  C1B8  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4511  00189C  0101               	movlb	1	; () banked
  4512  00189E  0101               	movlb	1	; () banked
  4513  0018A0  C1B5  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4514  0018A4  0101               	movlb	1	; () banked
  4515  0018A6  0101               	movlb	1	; () banked
  4516  0018A8  C1B4  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4517  0018AC  0101               	movlb	1	; () banked
  4518  0018AE  0101               	movlb	1	; () banked
  4519  0018B0  C1B7  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4520  0018B4  0101               	movlb	1	; () banked
  4521  0018B6  0101               	movlb	1	; () banked
  4522  0018B8  C1B6  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4523  0018BC  EC54  F005         	call	_recv_msg	;wreg free
  4524  0018C0  0012               	return	
  4525  0018C2                     __end_of_ToMainHigh_recvmsg:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           postinc0	equ	0xFEE
  4535                           wreg	equ	0xFE8
  4536                           indf1	equ	0xFE7
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _recv_msg *****************
  4547 ;; Defined at:
  4548 ;;		line 63 in file "src/messages.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  4551 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4552 ;;  maxlength       1    6[BANK1 ] unsigned char 
  4553 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4554 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4555 ;;  data            2    9[BANK1 ] PTR void 
  4556 ;;		 -> NULL(0), main@msgbuffer(11), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  qmsg            2   16[BANK1 ] PTR struct __msg
  4559 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4560 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4561 ;;  tlength         2   14[BANK1 ] unsigned int 
  4562 ;;  slot            1   13[BANK1 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4572 ;;      Params:         0       0       7       0       0
  4573 ;;      Locals:         0       0       5       0       0
  4574 ;;      Temps:          0       0       2       0       0
  4575 ;;      Totals:         0       0      14       0       0
  4576 ;;Total ram usage:       14 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:   11
  4579 ;; This function calls:
  4580 ;;		_memcpy
  4581 ;; This function is called by:
  4582 ;;		_ToMainLow_recvmsg
  4583 ;;		_ToMainHigh_recvmsg
  4584 ;;		_FromMainHigh_recvmsg
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text29
  4589  000AA8                     __ptext29:
  4590                           	opt stack 0
  4591  000AA8                     _recv_msg:
  4592                           	opt stack 17
  4593                           
  4594                           ;messages.c: 64: unsigned char slot;
  4595                           ;messages.c: 68: msg *qmsg;
  4596                           ;messages.c: 69: size_t tlength;
  4597                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4598                           
  4599                           ;incstack = 0
  4600  000AA8  0101               	movlb	1	; () banked
  4601  000AAA  EE20 F035          	lfsr	2,53
  4602  000AAE  0101               	movlb	1	; () banked
  4603  000AB0  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4604  000AB2  26D9               	addwf	fsr2l,f,c
  4605  000AB4  0101               	movlb	1	; () banked
  4606  000AB6  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4607  000AB8  22DA               	addwfc	fsr2h,f,c
  4608  000ABA  50DF               	movf	indf2,w,c
  4609  000ABC  0101               	movlb	1	; () banked
  4610  000ABE  0101               	movlb	1	; () banked
  4611  000AC0  6FAF               	movwf	recv_msg@slot& (0+255),b
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4615  000AC2  0101               	movlb	1	; () banked
  4616  000AC4  0101               	movlb	1	; () banked
  4617  000AC6  51AF               	movf	recv_msg@slot& (0+255),w,b
  4618  000AC8  0D0D               	mullw	13
  4619  000ACA  50F3               	movf	prodl,w,c
  4620  000ACC  0101               	movlb	1	; () banked
  4621  000ACE  0101               	movlb	1	; () banked
  4622  000AD0  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4623  000AD2  0101               	movlb	1	; () banked
  4624  000AD4  0101               	movlb	1	; () banked
  4625  000AD6  6FB2               	movwf	recv_msg@qmsg& (0+255),b
  4626  000AD8  50F4               	movf	prodh,w,c
  4627  000ADA  0101               	movlb	1	; () banked
  4628  000ADC  0101               	movlb	1	; () banked
  4629  000ADE  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4630  000AE0  0101               	movlb	1	; () banked
  4631  000AE2  6FB3               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;messages.c: 74: if (qmsg->full == 1) {
  4635  000AE4  0E01               	movlw	1
  4636  000AE6  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4637  000AEA  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4638  000AEE  62DF               	cpfseq	indf2,c
  4639  000AF0  D074               	goto	l3607
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4643  000AF2  0101               	movlb	1	; () banked
  4644  000AF4  EE20 F001          	lfsr	2,1
  4645  000AF8  0101               	movlb	1	; () banked
  4646  000AFA  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4647  000AFC  26D9               	addwf	fsr2l,f,c
  4648  000AFE  0101               	movlb	1	; () banked
  4649  000B00  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4650  000B02  22DA               	addwfc	fsr2h,f,c
  4651  000B04  50DF               	movf	indf2,w,c
  4652  000B06  0101               	movlb	1	; () banked
  4653  000B08  0101               	movlb	1	; () banked
  4654  000B0A  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4655  000B0C  B0D8               	btfsc	status,0,c
  4656  000B0E  D002               	goto	l3591
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;messages.c: 77: return (-3);
  4660  000B10  0EFD               	movlw	253
  4661  000B12  0012               	return	
  4662  000B14                     l3591:
  4663                           
  4664                           ; BSR set to: 1
  4665                           ;messages.c: 78: }
  4666                           ;messages.c: 80: tlength = qmsg->length;
  4667  000B14  0101               	movlb	1	; () banked
  4668  000B16  EE20 F001          	lfsr	2,1
  4669  000B1A  0101               	movlb	1	; () banked
  4670  000B1C  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4671  000B1E  26D9               	addwf	fsr2l,f,c
  4672  000B20  0101               	movlb	1	; () banked
  4673  000B22  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4674  000B24  22DA               	addwfc	fsr2h,f,c
  4675  000B26  50DF               	movf	indf2,w,c
  4676  000B28  0101               	movlb	1	; () banked
  4677  000B2A  6FAD               	movwf	??_recv_msg& (0+255),b
  4678  000B2C  0101               	movlb	1	; () banked
  4679  000B2E  51AD               	movf	??_recv_msg& (0+255),w,b
  4680  000B30  0101               	movlb	1	; () banked
  4681  000B32  0101               	movlb	1	; () banked
  4682  000B34  6FB0               	movwf	recv_msg@tlength& (0+255),b
  4683  000B36  0101               	movlb	1	; () banked
  4684  000B38  6BB1               	clrf	(recv_msg@tlength+1)& (0+255),b
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4688  000B3A  0101               	movlb	1	; () banked
  4689  000B3C  0100               	movlb	0	; () banked
  4690  000B3E  C1AC  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  4691  000B42  0101               	movlb	1	; () banked
  4692  000B44  0100               	movlb	0	; () banked
  4693  000B46  C1AB  F0D7         	movff	recv_msg@data,memcpy@d1
  4694  000B4A  0E03               	movlw	3
  4695  000B4C  0101               	movlb	1	; () banked
  4696  000B4E  0101               	movlb	1	; () banked
  4697  000B50  25B2               	addwf	recv_msg@qmsg& (0+255),w,b
  4698  000B52  0101               	movlb	1	; () banked
  4699  000B54  6FAD               	movwf	??_recv_msg& (0+255),b
  4700  000B56  0E00               	movlw	0
  4701  000B58  0101               	movlb	1	; () banked
  4702  000B5A  0101               	movlb	1	; () banked
  4703  000B5C  21B3               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4704  000B5E  0101               	movlb	1	; () banked
  4705  000B60  6FAE               	movwf	(??_recv_msg+1)& (0+255),b
  4706  000B62  C1AD  F0D9         	movff	??_recv_msg,memcpy@s1
  4707  000B66  C1AE  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  4708  000B6A  C1B0  F0DB         	movff	recv_msg@tlength,memcpy@n
  4709  000B6E  C1B1  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  4710  000B72  EC36  F00B         	call	_memcpy	;wreg free
  4711                           
  4712                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4713  000B76  0101               	movlb	1	; () banked
  4714  000B78  EE20 F035          	lfsr	2,53
  4715  000B7C  0101               	movlb	1	; () banked
  4716  000B7E  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4717  000B80  26D9               	addwf	fsr2l,f,c
  4718  000B82  0101               	movlb	1	; () banked
  4719  000B84  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4720  000B86  22DA               	addwfc	fsr2h,f,c
  4721  000B88  0101               	movlb	1	; () banked
  4722  000B8A  EE10 F035          	lfsr	1,53
  4723  000B8E  0101               	movlb	1	; () banked
  4724  000B90  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4725  000B92  26E1               	addwf	fsr1l,f,c
  4726  000B94  0101               	movlb	1	; () banked
  4727  000B96  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4728  000B98  22E2               	addwfc	fsr1h,f,c
  4729  000B9A  50E7               	movf	indf1,w,c
  4730  000B9C  0101               	movlb	1	; () banked
  4731  000B9E  6FAD               	movwf	??_recv_msg& (0+255),b
  4732  000BA0  0101               	movlb	1	; () banked
  4733  000BA2  29AD               	incf	??_recv_msg& (0+255),w,b
  4734  000BA4  0B03               	andlw	3
  4735  000BA6  6EDF               	movwf	indf2,c
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4739  000BA8  0101               	movlb	1	; () banked
  4740  000BAA  EE20 F002          	lfsr	2,2
  4741  000BAE  0101               	movlb	1	; () banked
  4742  000BB0  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4743  000BB2  26D9               	addwf	fsr2l,f,c
  4744  000BB4  0101               	movlb	1	; () banked
  4745  000BB6  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4746  000BB8  22DA               	addwfc	fsr2h,f,c
  4747  000BBA  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  4748  000BBE  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4749  000BC2  CFDF FFE7          	movff	indf2,indf1
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;messages.c: 91: qmsg->full = 0;
  4753  000BC6  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4754  000BCA  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4755  000BCE  0E00               	movlw	0
  4756  000BD0  6EDF               	movwf	indf2,c
  4757                           
  4758                           ; BSR set to: 1
  4759                           ;messages.c: 92: return (tlength);
  4760  000BD2  0101               	movlb	1	; () banked
  4761  000BD4  0101               	movlb	1	; () banked
  4762  000BD6  51B0               	movf	recv_msg@tlength& (0+255),w,b
  4763  000BD8  0012               	return	
  4764  000BDA                     l3607:
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;messages.c: 94: return (-4);
  4768  000BDA  0EFC               	movlw	252
  4769  000BDC  0012               	return	
  4770  000BDE                     __end_of_recv_msg:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           prodh	equ	0xFF4
  4777                           prodl	equ	0xFF3
  4778                           intcon	equ	0xFF2
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           indf1	equ	0xFE7
  4782                           fsr1h	equ	0xFE2
  4783                           fsr1l	equ	0xFE1
  4784                           indf2	equ	0xFDF
  4785                           postinc2	equ	0xFDE
  4786                           postdec2	equ	0xFDD
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _memcpy *****************
  4792 ;; Defined at:
  4793 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  d1              2   33[BANK0 ] PTR void 
  4796 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4797 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4798 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4799 ;;  s1              2   35[BANK0 ] PTR const void 
  4800 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4801 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4802 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4803 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  4804 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  4805 ;;  n               2   37[BANK0 ] unsigned int 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4808 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4809 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4810 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4811 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  4812 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  4813 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4814 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4815 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4816 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  2   33[BANK0 ] PTR void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4826 ;;      Params:         0       6       0       0       0
  4827 ;;      Locals:         0       0       4       0       0
  4828 ;;      Temps:          0       0       0       0       0
  4829 ;;      Totals:         0       6       4       0       0
  4830 ;;Total ram usage:       10 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:   10
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_send_msg
  4837 ;;		_recv_msg
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text30
  4842  00166C                     __ptext30:
  4843                           	opt stack 0
  4844  00166C                     _memcpy:
  4845                           	opt stack 16
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;incstack = 0
  4849  00166C  0100               	movlb	0	; () banked
  4850  00166E  0101               	movlb	1	; () banked
  4851  001670  C0DA  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  4852  001674  0100               	movlb	0	; () banked
  4853  001676  0101               	movlb	1	; () banked
  4854  001678  C0D9  F1A4         	movff	memcpy@s1,memcpy@s
  4855  00167C  0100               	movlb	0	; () banked
  4856  00167E  0101               	movlb	1	; () banked
  4857  001680  C0D8  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  4858  001684  0100               	movlb	0	; () banked
  4859  001686  0101               	movlb	1	; () banked
  4860  001688  C0D7  F1A2         	movff	memcpy@d1,memcpy@d
  4861  00168C  D012               	goto	l3577
  4862  00168E                     l3571:
  4863  00168E  C1A4  FFD9         	movff	memcpy@s,fsr2l
  4864  001692  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  4865  001696  C1A2  FFE1         	movff	memcpy@d,fsr1l
  4866  00169A  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  4867  00169E  CFDF FFE7          	movff	indf2,indf1
  4868  0016A2  0101               	movlb	1	; () banked
  4869  0016A4  0101               	movlb	1	; () banked
  4870  0016A6  4BA4               	infsnz	memcpy@s& (0+255),f,b
  4871  0016A8  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  4872                           
  4873                           ; BSR set to: 1
  4874  0016AA  0101               	movlb	1	; () banked
  4875  0016AC  0101               	movlb	1	; () banked
  4876  0016AE  4BA2               	infsnz	memcpy@d& (0+255),f,b
  4877  0016B0  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  4878  0016B2                     l3577:
  4879                           
  4880                           ; BSR set to: 1
  4881  0016B2  0100               	movlb	0	; () banked
  4882  0016B4  0100               	movlb	0	; () banked
  4883  0016B6  07DB               	decf	memcpy@n& (0+255),f,b
  4884  0016B8  A0D8               	btfss	status,0,c
  4885  0016BA  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  4886  0016BC  0100               	movlb	0	; () banked
  4887  0016BE  29DB               	incf	memcpy@n& (0+255),w,b
  4888  0016C0  B4D8               	btfsc	status,2,c
  4889  0016C2  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  4890  0016C4  B4D8               	btfsc	status,2,c
  4891                           
  4892                           ; BSR set to: 0
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;	Return value of _memcpy is never used
  4896  0016C6  0012               	return	
  4897  0016C8  D7E2               	goto	l3571
  4898  0016CA                     __end_of_memcpy:
  4899                           	opt stack 0
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           prodh	equ	0xFF4
  4905                           prodl	equ	0xFF3
  4906                           intcon	equ	0xFF2
  4907                           postinc0	equ	0xFEE
  4908                           wreg	equ	0xFE8
  4909                           indf1	equ	0xFE7
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8
  4918                           
  4919 ;; *************** function _OpenUSART *****************
  4920 ;; Defined at:
  4921 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  config          1    wreg     unsigned char 
  4924 ;;  spbrg           2   33[BANK0 ] unsigned int 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  config          1   38[BANK0 ] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg, status,2
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4936 ;;      Params:         0       2       0       0       0
  4937 ;;      Locals:         0       1       0       0       0
  4938 ;;      Temps:          0       3       0       0       0
  4939 ;;      Totals:         0       6       0       0       0
  4940 ;;Total ram usage:        6 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:   10
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text31
  4951  00128C                     __ptext31:
  4952                           	opt stack 0
  4953  00128C                     _OpenUSART:
  4954                           	opt stack 19
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;incstack = 0
  4958                           ;OpenUSART@config stored from wreg
  4959  00128C  CFE8 F0DC          	movff	wreg,OpenUSART@config
  4960  001290  0E00               	movlw	0
  4961  001292  6EAC               	movwf	4012,c	;volatile
  4962  001294  0E00               	movlw	0
  4963  001296  6EAB               	movwf	4011,c	;volatile
  4964  001298  0100               	movlb	0	; () banked
  4965  00129A  0100               	movlb	0	; () banked
  4966  00129C  B1DC               	btfsc	OpenUSART@config& (0+255),0,b
  4967                           
  4968                           ; BSR set to: 0
  4969  00129E  88AC               	bsf	4012,4,c	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972                           
  4973                           ; BSR set to: 0
  4974  0012A0  0100               	movlb	0	; () banked
  4975  0012A2  0100               	movlb	0	; () banked
  4976  0012A4  A3DC               	btfss	OpenUSART@config& (0+255),1,b
  4977  0012A6  D002               	goto	l3383
  4978                           
  4979                           ; BSR set to: 0
  4980  0012A8  8CAC               	bsf	4012,6,c	;volatile
  4981  0012AA  8CAB               	bsf	4011,6,c	;volatile
  4982  0012AC                     l3383:
  4983                           
  4984                           ; BSR set to: 0
  4985  0012AC  0100               	movlb	0	; () banked
  4986  0012AE  0100               	movlb	0	; () banked
  4987  0012B0  B5DC               	btfsc	OpenUSART@config& (0+255),2,b
  4988                           
  4989                           ; BSR set to: 0
  4990  0012B2  8EAC               	bsf	4012,7,c	;volatile
  4991                           
  4992                           ; BSR set to: 0
  4993                           
  4994                           ; BSR set to: 0
  4995  0012B4  0100               	movlb	0	; () banked
  4996  0012B6  0100               	movlb	0	; () banked
  4997  0012B8  A7DC               	btfss	OpenUSART@config& (0+255),3,b
  4998  0012BA  D002               	goto	l496
  4999                           
  5000                           ; BSR set to: 0
  5001  0012BC  88AB               	bsf	4011,4,c	;volatile
  5002  0012BE  D001               	goto	l3391
  5003  0012C0                     l496:
  5004                           
  5005                           ; BSR set to: 0
  5006  0012C0  8AAB               	bsf	4011,5,c	;volatile
  5007  0012C2                     l3391:
  5008                           
  5009                           ; BSR set to: 0
  5010  0012C2  0100               	movlb	0	; () banked
  5011  0012C4  0100               	movlb	0	; () banked
  5012  0012C6  B9DC               	btfsc	OpenUSART@config& (0+255),4,b
  5013                           
  5014                           ; BSR set to: 0
  5015  0012C8  84AC               	bsf	4012,2,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018  0012CA  989E               	bcf	3998,4,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021  0012CC  0100               	movlb	0	; () banked
  5022  0012CE  0100               	movlb	0	; () banked
  5023  0012D0  BBDC               	btfsc	OpenUSART@config& (0+255),5,b
  5024                           
  5025                           ; BSR set to: 0
  5026  0012D2  86AB               	bsf	4011,3,c	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           
  5030                           ; BSR set to: 0
  5031  0012D4  0100               	movlb	0	; () banked
  5032  0012D6  0100               	movlb	0	; () banked
  5033  0012D8  ADDC               	btfss	OpenUSART@config& (0+255),6,b
  5034  0012DA  D002               	goto	l500
  5035                           
  5036                           ; BSR set to: 0
  5037  0012DC  8A9D               	bsf	3997,5,c	;volatile
  5038  0012DE  D001               	goto	l501
  5039  0012E0                     l500:
  5040                           
  5041                           ; BSR set to: 0
  5042  0012E0  9A9D               	bcf	3997,5,c	;volatile
  5043  0012E2                     l501:
  5044                           
  5045                           ; BSR set to: 0
  5046  0012E2  9A9E               	bcf	3998,5,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049  0012E4  0100               	movlb	0	; () banked
  5050  0012E6  0100               	movlb	0	; () banked
  5051  0012E8  AFDC               	btfss	OpenUSART@config& (0+255),7,b
  5052  0012EA  D002               	goto	l502
  5053                           
  5054                           ; BSR set to: 0
  5055  0012EC  889D               	bsf	3997,4,c	;volatile
  5056  0012EE  D001               	goto	l503
  5057  0012F0                     l502:
  5058                           
  5059                           ; BSR set to: 0
  5060  0012F0  989D               	bcf	3997,4,c	;volatile
  5061  0012F2                     l503:
  5062                           
  5063                           ; BSR set to: 0
  5064  0012F2  C0D7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067  0012F6  0100               	movlb	0	; () banked
  5068  0012F8  C0D8  F0D9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5069  0012FC  C0D9  F0DA         	movff	??_OpenUSART,??_OpenUSART+1
  5070  001300  0100               	movlb	0	; () banked
  5071  001302  6BDB               	clrf	(??_OpenUSART+2)& (0+255),b
  5072  001304  0100               	movlb	0	; () banked
  5073  001306  51DA               	movf	(??_OpenUSART+1)& (0+255),w,b
  5074  001308  6EB0               	movwf	4016,c	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077  00130A  8AAC               	bsf	4012,5,c	;volatile
  5078                           
  5079                           ; BSR set to: 0
  5080  00130C  8EAB               	bsf	4011,7,c	;volatile
  5081                           
  5082                           ; BSR set to: 0
  5083  00130E  9C94               	bcf	3988,6,c	;volatile
  5084                           
  5085                           ; BSR set to: 0
  5086  001310  8E94               	bsf	3988,7,c	;volatile
  5087                           
  5088                           ; BSR set to: 0
  5089  001312  A8AC               	btfss	4012,4,c	;volatile
  5090  001314  0012               	return	
  5091                           
  5092                           ; BSR set to: 0
  5093  001316  BEAC               	btfsc	4012,7,c	;volatile
  5094  001318  0012               	return	
  5095                           
  5096                           ; BSR set to: 0
  5097  00131A  8C94               	bsf	3988,6,c	;volatile
  5098  00131C  0012               	return	
  5099  00131E                     __end_of_OpenUSART:
  5100                           	opt stack 0
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           indf1	equ	0xFE7
  5111                           fsr1h	equ	0xFE2
  5112                           fsr1l	equ	0xFE1
  5113                           indf2	equ	0xFDF
  5114                           postinc2	equ	0xFDE
  5115                           postdec2	equ	0xFDD
  5116                           fsr2h	equ	0xFDA
  5117                           fsr2l	equ	0xFD9
  5118                           status	equ	0xFD8
  5119                           
  5120 ;; *************** function _OpenTimer1 *****************
  5121 ;; Defined at:
  5122 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  config          1    wreg     unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  config          1   33[BANK0 ] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5136 ;;      Params:         0       0       0       0       0
  5137 ;;      Locals:         0       1       0       0       0
  5138 ;;      Temps:          0       0       0       0       0
  5139 ;;      Totals:         0       1       0       0       0
  5140 ;;Total ram usage:        1 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:   10
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_main
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text32
  5151  001980                     __ptext32:
  5152                           	opt stack 0
  5153  001980                     _OpenTimer1:
  5154                           	opt stack 19
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;incstack = 0
  5158                           ;OpenTimer1@config stored from wreg
  5159  001980  CFE8 F0D7          	movff	wreg,OpenTimer1@config
  5160  001984  0100               	movlb	0	; () banked
  5161  001986  0100               	movlb	0	; () banked
  5162  001988  51D7               	movf	OpenTimer1@config& (0+255),w,b
  5163  00198A  0B7E               	andlw	126
  5164  00198C  6ECD               	movwf	4045,c	;volatile
  5165                           
  5166                           ; BSR set to: 0
  5167  00198E  0100               	movlb	0	; () banked
  5168  001990  0100               	movlb	0	; () banked
  5169  001992  ADD7               	btfss	OpenTimer1@config& (0+255),6,b
  5170  001994  D002               	goto	l459
  5171                           
  5172                           ; BSR set to: 0
  5173  001996  8ECD               	bsf	4045,7,c	;volatile
  5174  001998  D001               	goto	l3363
  5175  00199A                     l459:
  5176                           
  5177                           ; BSR set to: 0
  5178  00199A  9ECD               	bcf	4045,7,c	;volatile
  5179  00199C                     l3363:
  5180                           
  5181                           ; BSR set to: 0
  5182  00199C  0E00               	movlw	0
  5183  00199E  6ECF               	movwf	4047,c	;volatile
  5184  0019A0  0E00               	movlw	0
  5185  0019A2  6ECE               	movwf	4046,c	;volatile
  5186                           
  5187                           ; BSR set to: 0
  5188  0019A4  909E               	bcf	3998,0,c	;volatile
  5189                           
  5190                           ; BSR set to: 0
  5191  0019A6  0100               	movlb	0	; () banked
  5192  0019A8  0100               	movlb	0	; () banked
  5193  0019AA  AFD7               	btfss	OpenTimer1@config& (0+255),7,b
  5194  0019AC  D002               	goto	l461
  5195                           
  5196                           ; BSR set to: 0
  5197  0019AE  809D               	bsf	3997,0,c	;volatile
  5198  0019B0  D001               	goto	l462
  5199  0019B2                     l461:
  5200                           
  5201                           ; BSR set to: 0
  5202  0019B2  909D               	bcf	3997,0,c	;volatile
  5203  0019B4                     l462:
  5204                           
  5205                           ; BSR set to: 0
  5206  0019B4  80CD               	bsf	4045,0,c	;volatile
  5207                           
  5208                           ; BSR set to: 0
  5209  0019B6  0012               	return	
  5210  0019B8                     __end_of_OpenTimer1:
  5211                           	opt stack 0
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           postdec2	equ	0xFDD
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _OpenTimer0 *****************
  5232 ;; Defined at:
  5233 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  config          1    wreg     unsigned char 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  config          1   33[BANK0 ] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;		None               void
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5247 ;;      Params:         0       0       0       0       0
  5248 ;;      Locals:         0       1       0       0       0
  5249 ;;      Temps:          0       0       0       0       0
  5250 ;;      Totals:         0       1       0       0       0
  5251 ;;Total ram usage:        1 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:   10
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text33
  5262  001ABE                     __ptext33:
  5263                           	opt stack 0
  5264  001ABE                     _OpenTimer0:
  5265                           	opt stack 19
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;incstack = 0
  5269                           ;OpenTimer0@config stored from wreg
  5270  001ABE  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  5271  001AC2  0100               	movlb	0	; () banked
  5272  001AC4  0100               	movlb	0	; () banked
  5273  001AC6  51D7               	movf	OpenTimer0@config& (0+255),w,b
  5274  001AC8  0B7F               	andlw	127
  5275  001ACA  6ED5               	movwf	4053,c	;volatile
  5276                           
  5277                           ; BSR set to: 0
  5278  001ACC  0E00               	movlw	0
  5279  001ACE  6ED7               	movwf	4055,c	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282  001AD0  0E00               	movlw	0
  5283  001AD2  6ED6               	movwf	4054,c	;volatile
  5284                           
  5285                           ; BSR set to: 0
  5286  001AD4  94F2               	bcf	intcon,2,c	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289  001AD6  0100               	movlb	0	; () banked
  5290  001AD8  0100               	movlb	0	; () banked
  5291  001ADA  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  5292  001ADC  D002               	goto	l435
  5293                           
  5294                           ; BSR set to: 0
  5295  001ADE  8AF2               	bsf	intcon,5,c	;volatile
  5296  001AE0  D001               	goto	l436
  5297  001AE2                     l435:
  5298                           
  5299                           ; BSR set to: 0
  5300  001AE2  9AF2               	bcf	intcon,5,c	;volatile
  5301  001AE4                     l436:
  5302                           
  5303                           ; BSR set to: 0
  5304  001AE4  8ED5               	bsf	4053,7,c	;volatile
  5305                           
  5306                           ; BSR set to: 0
  5307  001AE6  0012               	return	
  5308  001AE8                     __end_of_OpenTimer0:
  5309                           	opt stack 0
  5310                           tblptru	equ	0xFF8
  5311                           tblptrh	equ	0xFF7
  5312                           tblptrl	equ	0xFF6
  5313                           tablat	equ	0xFF5
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           intcon	equ	0xFF2
  5317                           postinc0	equ	0xFEE
  5318                           wreg	equ	0xFE8
  5319                           indf1	equ	0xFE7
  5320                           fsr1h	equ	0xFE2
  5321                           fsr1l	equ	0xFE1
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _InterruptHandlerLow *****************
  5330 ;; Defined at:
  5331 ;;		line 122 in file "src/interrupts.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;		None               void
  5338 ;; Registers used:
  5339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5345 ;;      Params:         0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0
  5347 ;;      Temps:         17       0       0       0       0
  5348 ;;      Totals:        17       0       0       0       0
  5349 ;;Total ram usage:       17 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    9
  5352 ;; This function calls:
  5353 ;;		_timer1_int_handler
  5354 ;;		_uart_recv_int_handler
  5355 ;;		_uart_trans_int_handler
  5356 ;; This function is called by:
  5357 ;;		Interrupt level 1
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	intcodelo
  5362  000018                     __pintcodelo:
  5363                           	opt stack 0
  5364  000018                     _InterruptHandlerLow:
  5365                           	opt stack 16
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;incstack = 0
  5369  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  5370  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  5371  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  5372  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  5373  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  5374  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  5375  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  5376  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  5377  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  5378  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  5379  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  5380  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  5381  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  5382  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  5383  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  5384  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  5385  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  5386                           
  5387                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5388  00005C  A09E               	btfss	3998,0,c	;volatile
  5389  00005E  D003               	goto	i1l3835
  5390                           
  5391                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5392  000060  909E               	bcf	3998,0,c	;volatile
  5393                           
  5394                           ;interrupts.c: 126: timer1_int_handler();
  5395  000062  ECC4  F00D         	call	_timer1_int_handler	;wreg free
  5396  000066                     i1l3835:
  5397                           
  5398                           ;interrupts.c: 127: }
  5399                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5400  000066  AA9E               	btfss	3998,5,c	;volatile
  5401  000068  D003               	goto	i1l3841
  5402                           
  5403                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5404  00006A  9A9E               	bcf	3998,5,c	;volatile
  5405                           
  5406                           ;interrupts.c: 132: uart_recv_int_handler();
  5407  00006C  ECF8  F008         	call	_uart_recv_int_handler	;wreg free
  5408  000070                     i1l3841:
  5409                           
  5410                           ;interrupts.c: 133: }
  5411                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5412  000070  B89E               	btfsc	3998,4,c	;volatile
  5413  000072  A89D               	btfss	3997,4,c	;volatile
  5414  000074  D002               	goto	i1l52
  5415                           
  5416                           ;interrupts.c: 137: uart_trans_int_handler();
  5417  000076  EC65  F00B         	call	_uart_trans_int_handler	;wreg free
  5418  00007A                     i1l52:
  5419  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5420  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5421  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5422  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5423  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5424  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5425  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5426  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5427  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5428  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5429  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5430  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5431  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5432  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5433  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5434  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5435  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  5436  0000BE  0010               	retfie	
  5437  0000C0                     __end_of_InterruptHandlerLow:
  5438                           	opt stack 0
  5439                           pclatu	equ	0xFFB
  5440                           pclath	equ	0xFFA
  5441                           tblptru	equ	0xFF8
  5442                           tblptrh	equ	0xFF7
  5443                           tblptrl	equ	0xFF6
  5444                           tablat	equ	0xFF5
  5445                           prodh	equ	0xFF4
  5446                           prodl	equ	0xFF3
  5447                           intcon	equ	0xFF2
  5448                           postinc0	equ	0xFEE
  5449                           fsr0h	equ	0xFEA
  5450                           fsr0l	equ	0xFE9
  5451                           wreg	equ	0xFE8
  5452                           indf1	equ	0xFE7
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           bsr	equ	0xFE0
  5456                           indf2	equ	0xFDF
  5457                           postinc2	equ	0xFDE
  5458                           postdec2	equ	0xFDD
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _uart_trans_int_handler *****************
  5464 ;; Defined at:
  5465 ;;		line 11 in file "src/my_uart.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  data            2   30[COMRAM] PTR unsigned char 
  5470 ;;		 -> NULL(0), 
  5471 ;;  length          1   34[COMRAM] char 
  5472 ;;  curIndex        1   33[COMRAM] unsigned char 
  5473 ;;  msgtype         1   32[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;		None               void
  5476 ;; Registers used:
  5477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5483 ;;      Params:         0       0       0       0       0
  5484 ;;      Locals:         5       0       0       0       0
  5485 ;;      Temps:          1       0       0       0       0
  5486 ;;      Totals:         6       0       0       0       0
  5487 ;;Total ram usage:        6 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    8
  5490 ;; This function calls:
  5491 ;;		_FromMainLow_recvmsg
  5492 ;; This function is called by:
  5493 ;;		_InterruptHandlerLow
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text35
  5498  0016CA                     __ptext35:
  5499                           	opt stack 0
  5500  0016CA                     _uart_trans_int_handler:
  5501                           	opt stack 16
  5502                           
  5503                           ;my_uart.c: 13: unsigned char* data = (0);
  5504                           
  5505                           ;incstack = 0
  5506  0016CA  0E00               	movlw	0
  5507  0016CC  6E20               	movwf	uart_trans_int_handler@data+1,c
  5508  0016CE  0E00               	movlw	0
  5509  0016D0  6E1F               	movwf	uart_trans_int_handler@data,c
  5510                           
  5511                           ;my_uart.c: 14: unsigned char msgtype;
  5512                           ;my_uart.c: 15: unsigned char curIndex;
  5513                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5514  0016D2  0E00               	movlw	high uart_trans_int_handler@msgtype
  5515  0016D4  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5516  0016D6  0E21               	movlw	low uart_trans_int_handler@msgtype
  5517  0016D8  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5518  0016DA  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5519  0016DE  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5520  0016E2  0E0A               	movlw	10
  5521  0016E4  EC9D  F00D         	call	_FromMainLow_recvmsg
  5522  0016E8  6E23               	movwf	uart_trans_int_handler@length,c
  5523                           
  5524                           ;my_uart.c: 17: if (length < 0) {
  5525  0016EA  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5526  0016EC  D019               	goto	i1l360
  5527                           
  5528                           ;my_uart.c: 26: curIndex = 0;
  5529                           
  5530                           ;my_uart.c: 24: }
  5531                           ;my_uart.c: 25: } else {
  5532                           
  5533                           ;my_uart.c: 22: else{
  5534                           
  5535                           ;my_uart.c: 21: }
  5536  0016EE  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5537  0016F0  0E00               	movlw	0
  5538  0016F2  6E22               	movwf	uart_trans_int_handler@curIndex,c
  5539  0016F4  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5540                           
  5541                           ;my_uart.c: 27: while(curIndex < length){
  5542  0016F6  D00D               	goto	i1l3827
  5543  0016F8                     i1l363:
  5544  0016F8  A2AC               	btfss	4012,1,c	;volatile
  5545  0016FA  D7FE               	goto	i1l363
  5546                           
  5547                           ;my_uart.c: 33: TXREG = data[curIndex];
  5548  0016FC  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5549  0016FE  0D01               	mullw	1
  5550  001700  50F3               	movf	prodl,w,c
  5551  001702  241F               	addwf	uart_trans_int_handler@data,w,c
  5552  001704  6ED9               	movwf	fsr2l,c
  5553  001706  50F4               	movf	prodh,w,c
  5554  001708  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5555  00170A  6EDA               	movwf	fsr2h,c
  5556  00170C  50DF               	movf	indf2,w,c
  5557  00170E  6EAD               	movwf	4013,c	;volatile
  5558                           
  5559                           ;my_uart.c: 35: curIndex++;
  5560  001710  2A22               	incf	uart_trans_int_handler@curIndex,f,c
  5561  001712                     i1l3827:
  5562  001712  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5563  001714  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5564  001716  D004               	goto	i1l360
  5565  001718  0AFF               	xorlw	255
  5566  00171A  2423               	addwf	uart_trans_int_handler@length,w,c
  5567  00171C  B0D8               	btfsc	status,0,c
  5568  00171E  D7EC               	goto	i1l363
  5569  001720                     i1l360:
  5570                           
  5571                           ;my_uart.c: 36: }
  5572                           ;my_uart.c: 37: }
  5573                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5574  001720  989D               	bcf	3997,4,c	;volatile
  5575  001722  0012               	return	
  5576  001724                     __end_of_uart_trans_int_handler:
  5577                           	opt stack 0
  5578                           pclatu	equ	0xFFB
  5579                           pclath	equ	0xFFA
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           postinc0	equ	0xFEE
  5588                           fsr0h	equ	0xFEA
  5589                           fsr0l	equ	0xFE9
  5590                           wreg	equ	0xFE8
  5591                           indf1	equ	0xFE7
  5592                           fsr1h	equ	0xFE2
  5593                           fsr1l	equ	0xFE1
  5594                           bsr	equ	0xFE0
  5595                           indf2	equ	0xFDF
  5596                           postinc2	equ	0xFDE
  5597                           postdec2	equ	0xFDD
  5598                           fsr2h	equ	0xFDA
  5599                           fsr2l	equ	0xFD9
  5600                           status	equ	0xFD8
  5601                           
  5602 ;; *************** function _FromMainLow_recvmsg *****************
  5603 ;; Defined at:
  5604 ;;		line 159 in file "src/messages.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  maxlength       1    wreg     unsigned char 
  5607 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5608 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5609 ;;  data            2   26[COMRAM] PTR void 
  5610 ;;		 -> NULL(0), 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  maxlength       1   28[COMRAM] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      char 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5622 ;;      Params:         4       0       0       0       0
  5623 ;;      Locals:         1       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0
  5625 ;;      Totals:         5       0       0       0       0
  5626 ;;Total ram usage:        5 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    7
  5629 ;; This function calls:
  5630 ;;		i1_recv_msg
  5631 ;; This function is called by:
  5632 ;;		_uart_trans_int_handler
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text36
  5637  001B3A                     __ptext36:
  5638                           	opt stack 0
  5639  001B3A                     _FromMainLow_recvmsg:
  5640                           	opt stack 16
  5641                           
  5642                           ;incstack = 0
  5643                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5644  001B3A  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5645                           
  5646                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5647  001B3E  0101               	movlb	1	; () banked
  5648  001B40  0E01               	movlw	high _FromMainLow_MQ
  5649  001B42  6E0C               	movwf	i1recv_msg@qptr+1,c
  5650  001B44  0101               	movlb	1	; () banked
  5651  001B46  0E36               	movlw	low _FromMainLow_MQ
  5652  001B48  6E0B               	movwf	i1recv_msg@qptr,c
  5653  001B4A  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5654  001B4E  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5655  001B52  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5656  001B56  6A11               	clrf	i1recv_msg@data+1,c
  5657  001B58  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5658  001B5C  EC6D  F007         	call	i1_recv_msg	;wreg free
  5659  001B60  0012               	return	
  5660  001B62                     __end_of_FromMainLow_recvmsg:
  5661                           	opt stack 0
  5662                           pclatu	equ	0xFFB
  5663                           pclath	equ	0xFFA
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           postinc0	equ	0xFEE
  5672                           fsr0h	equ	0xFEA
  5673                           fsr0l	equ	0xFE9
  5674                           wreg	equ	0xFE8
  5675                           indf1	equ	0xFE7
  5676                           fsr1h	equ	0xFE2
  5677                           fsr1l	equ	0xFE1
  5678                           bsr	equ	0xFE0
  5679                           indf2	equ	0xFDF
  5680                           postinc2	equ	0xFDE
  5681                           postdec2	equ	0xFDD
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function i1_recv_msg *****************
  5687 ;; Defined at:
  5688 ;;		line 63 in file "src/messages.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5691 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5692 ;;  maxlength       1   12[COMRAM] unsigned char 
  5693 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5694 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5695 ;;  data            2   15[COMRAM] PTR void 
  5696 ;;		 -> NULL(0), main@msgbuffer(11), 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5699 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5700 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5701 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5702 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      char 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5712 ;;      Params:         7       0       0       0       0
  5713 ;;      Locals:         5       0       0       0       0
  5714 ;;      Temps:          2       0       0       0       0
  5715 ;;      Totals:        14       0       0       0       0
  5716 ;;Total ram usage:       14 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    6
  5719 ;; This function calls:
  5720 ;;		i1_memcpy
  5721 ;; This function is called by:
  5722 ;;		_FromMainLow_recvmsg
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text37
  5727  000EDA                     __ptext37:
  5728                           	opt stack 0
  5729  000EDA                     i1_recv_msg:
  5730                           	opt stack 16
  5731                           
  5732                           ;messages.c: 64: unsigned char slot;
  5733                           ;messages.c: 68: msg *qmsg;
  5734                           ;messages.c: 69: size_t tlength;
  5735                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5736                           
  5737                           ;incstack = 0
  5738  000EDA  EE20 F035          	lfsr	2,53
  5739  000EDE  500B               	movf	i1recv_msg@qptr,w,c
  5740  000EE0  26D9               	addwf	fsr2l,f,c
  5741  000EE2  500C               	movf	i1recv_msg@qptr+1,w,c
  5742  000EE4  22DA               	addwfc	fsr2h,f,c
  5743  000EE6  50DF               	movf	indf2,w,c
  5744  000EE8  6E14               	movwf	i1recv_msg@slot,c
  5745                           
  5746                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5747  000EEA  5014               	movf	i1recv_msg@slot,w,c
  5748  000EEC  0D0D               	mullw	13
  5749  000EEE  50F3               	movf	prodl,w,c
  5750  000EF0  240B               	addwf	i1recv_msg@qptr,w,c
  5751  000EF2  6E17               	movwf	i1recv_msg@qmsg,c
  5752  000EF4  50F4               	movf	prodh,w,c
  5753  000EF6  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5754  000EF8  6E18               	movwf	i1recv_msg@qmsg+1,c
  5755                           
  5756                           ;messages.c: 74: if (qmsg->full == 1) {
  5757  000EFA  0E01               	movlw	1
  5758  000EFC  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5759  000F00  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5760  000F04  62DF               	cpfseq	indf2,c
  5761  000F06  D050               	goto	i1l3781
  5762                           
  5763                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5764  000F08  EE20 F001          	lfsr	2,1
  5765  000F0C  5017               	movf	i1recv_msg@qmsg,w,c
  5766  000F0E  26D9               	addwf	fsr2l,f,c
  5767  000F10  5018               	movf	i1recv_msg@qmsg+1,w,c
  5768  000F12  22DA               	addwfc	fsr2h,f,c
  5769  000F14  50DF               	movf	indf2,w,c
  5770  000F16  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5771  000F18  B0D8               	btfsc	status,0,c
  5772  000F1A  D002               	goto	i1l3765
  5773                           
  5774                           ;messages.c: 77: return (-3);
  5775  000F1C  0EFD               	movlw	253
  5776  000F1E  0012               	return	
  5777  000F20                     i1l3765:
  5778                           
  5779                           ;messages.c: 78: }
  5780                           ;messages.c: 80: tlength = qmsg->length;
  5781  000F20  EE20 F001          	lfsr	2,1
  5782  000F24  5017               	movf	i1recv_msg@qmsg,w,c
  5783  000F26  26D9               	addwf	fsr2l,f,c
  5784  000F28  5018               	movf	i1recv_msg@qmsg+1,w,c
  5785  000F2A  22DA               	addwfc	fsr2h,f,c
  5786  000F2C  50DF               	movf	indf2,w,c
  5787  000F2E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5788  000F30  5012               	movf	??i1_recv_msg,w,c
  5789  000F32  6E15               	movwf	i1recv_msg@tlength,c
  5790  000F34  6A16               	clrf	i1recv_msg@tlength+1,c
  5791                           
  5792                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5793  000F36  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5794  000F3A  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5795  000F3E  0E03               	movlw	3
  5796  000F40  2417               	addwf	i1recv_msg@qmsg,w,c
  5797  000F42  6E12               	movwf	??i1_recv_msg& (0+255),c
  5798  000F44  0E00               	movlw	0
  5799  000F46  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5800  000F48  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5801  000F4A  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5802  000F4E  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5803  000F52  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5804  000F56  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5805  000F5A  EC61  F00C         	call	i1_memcpy	;wreg free
  5806                           
  5807                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5808  000F5E  EE20 F035          	lfsr	2,53
  5809  000F62  500B               	movf	i1recv_msg@qptr,w,c
  5810  000F64  26D9               	addwf	fsr2l,f,c
  5811  000F66  500C               	movf	i1recv_msg@qptr+1,w,c
  5812  000F68  22DA               	addwfc	fsr2h,f,c
  5813  000F6A  EE10 F035          	lfsr	1,53
  5814  000F6E  500B               	movf	i1recv_msg@qptr,w,c
  5815  000F70  26E1               	addwf	fsr1l,f,c
  5816  000F72  500C               	movf	i1recv_msg@qptr+1,w,c
  5817  000F74  22E2               	addwfc	fsr1h,f,c
  5818  000F76  50E7               	movf	indf1,w,c
  5819  000F78  6E12               	movwf	??i1_recv_msg& (0+255),c
  5820  000F7A  2812               	incf	??i1_recv_msg,w,c
  5821  000F7C  0B03               	andlw	3
  5822  000F7E  6EDF               	movwf	indf2,c
  5823                           
  5824                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5825  000F80  EE20 F002          	lfsr	2,2
  5826  000F84  5017               	movf	i1recv_msg@qmsg,w,c
  5827  000F86  26D9               	addwf	fsr2l,f,c
  5828  000F88  5018               	movf	i1recv_msg@qmsg+1,w,c
  5829  000F8A  22DA               	addwfc	fsr2h,f,c
  5830  000F8C  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5831  000F90  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5832  000F94  CFDF FFE7          	movff	indf2,indf1
  5833                           
  5834                           ;messages.c: 91: qmsg->full = 0;
  5835  000F98  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5836  000F9C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5837  000FA0  0E00               	movlw	0
  5838  000FA2  6EDF               	movwf	indf2,c
  5839                           
  5840                           ;messages.c: 92: return (tlength);
  5841  000FA4  5015               	movf	i1recv_msg@tlength,w,c
  5842  000FA6  0012               	return	
  5843  000FA8                     i1l3781:
  5844                           
  5845                           ;messages.c: 94: return (-4);
  5846  000FA8  0EFC               	movlw	252
  5847  000FAA  0012               	return	
  5848  000FAC                     __end_ofi1_recv_msg:
  5849                           	opt stack 0
  5850                           pclatu	equ	0xFFB
  5851                           pclath	equ	0xFFA
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           fsr0h	equ	0xFEA
  5861                           fsr0l	equ	0xFE9
  5862                           wreg	equ	0xFE8
  5863                           indf1	equ	0xFE7
  5864                           fsr1h	equ	0xFE2
  5865                           fsr1l	equ	0xFE1
  5866                           bsr	equ	0xFE0
  5867                           indf2	equ	0xFDF
  5868                           postinc2	equ	0xFDE
  5869                           postdec2	equ	0xFDD
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           
  5874 ;; *************** function _uart_recv_int_handler *****************
  5875 ;; Defined at:
  5876 ;;		line 42 in file "src/my_uart.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;		None               void
  5883 ;; Registers used:
  5884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5890 ;;      Params:         0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0
  5892 ;;      Temps:          1       0       0       0       0
  5893 ;;      Totals:         1       0       0       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    8
  5897 ;; This function calls:
  5898 ;;		_ReadUSART
  5899 ;;		i1_ToMainLow_sendmsg
  5900 ;; This function is called by:
  5901 ;;		_InterruptHandlerLow
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text38
  5906  0011F0                     __ptext38:
  5907                           	opt stack 0
  5908  0011F0                     _uart_recv_int_handler:
  5909                           	opt stack 16
  5910                           
  5911                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5912                           
  5913                           ;incstack = 0
  5914  0011F0  AA9E               	btfss	3998,5,c	;volatile
  5915  0011F2  D03C               	goto	i1l3805
  5916                           
  5917                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5918  0011F4  EE20 F004          	lfsr	2,4
  5919  0011F8  5047               	movf	_uc_ptr,w,c
  5920  0011FA  26D9               	addwf	fsr2l,f,c
  5921  0011FC  5048               	movf	_uc_ptr+1,w,c
  5922  0011FE  22DA               	addwfc	fsr2h,f,c
  5923  001200  50DF               	movf	indf2,w,c
  5924  001202  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5925  001204  501B               	movf	??_uart_recv_int_handler,w,c
  5926  001206  0D01               	mullw	1
  5927  001208  50F3               	movf	prodl,w,c
  5928  00120A  2447               	addwf	_uc_ptr,w,c
  5929  00120C  6ED9               	movwf	fsr2l,c
  5930  00120E  50F4               	movf	prodh,w,c
  5931  001210  2048               	addwfc	_uc_ptr+1,w,c
  5932  001212  6EDA               	movwf	fsr2h,c
  5933  001214  ECF7  F00D         	call	_ReadUSART	;wreg free
  5934  001218  6EDF               	movwf	indf2,c
  5935                           
  5936                           ;my_uart.c: 56: uc_ptr->buflen++;
  5937  00121A  EE20 F004          	lfsr	2,4
  5938  00121E  5047               	movf	_uc_ptr,w,c
  5939  001220  26D9               	addwf	fsr2l,f,c
  5940  001222  5048               	movf	_uc_ptr+1,w,c
  5941  001224  22DA               	addwfc	fsr2h,f,c
  5942  001226  2ADF               	incf	indf2,f,c
  5943                           
  5944                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5945  001228  EE20 F004          	lfsr	2,4
  5946  00122C  5047               	movf	_uc_ptr,w,c
  5947  00122E  26D9               	addwf	fsr2l,f,c
  5948  001230  5048               	movf	_uc_ptr+1,w,c
  5949  001232  22DA               	addwfc	fsr2h,f,c
  5950  001234  0E04               	movlw	4
  5951  001236  62DF               	cpfseq	indf2,c
  5952  001238  D019               	goto	i1l3805
  5953                           
  5954                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5955  00123A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5956  00123C  0E20               	movlw	32
  5957  00123E  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5958  001240  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5959  001242  C048  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5960  001246  C047  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5961  00124A  EE20 F004          	lfsr	2,4
  5962  00124E  5047               	movf	_uc_ptr,w,c
  5963  001250  26D9               	addwf	fsr2l,f,c
  5964  001252  5048               	movf	_uc_ptr+1,w,c
  5965  001254  22DA               	addwfc	fsr2h,f,c
  5966  001256  50DF               	movf	indf2,w,c
  5967  001258  ECB1  F00D         	call	i1_ToMainLow_sendmsg
  5968                           
  5969                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5970  00125C  EE20 F004          	lfsr	2,4
  5971  001260  5047               	movf	_uc_ptr,w,c
  5972  001262  26D9               	addwf	fsr2l,f,c
  5973  001264  5048               	movf	_uc_ptr+1,w,c
  5974  001266  22DA               	addwfc	fsr2h,f,c
  5975  001268  0E00               	movlw	0
  5976  00126A  6EDF               	movwf	indf2,c
  5977  00126C                     i1l3805:
  5978                           
  5979                           ;my_uart.c: 61: }
  5980                           ;my_uart.c: 62: }
  5981                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5982  00126C  A64A               	btfss	_USART_Status,3,c
  5983  00126E  0012               	return	
  5984                           
  5985                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5986  001270  98AB               	bcf	4011,4,c	;volatile
  5987                           
  5988                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5989  001272  88AB               	bsf	4011,4,c	;volatile
  5990                           
  5991                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5992  001274  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5993  001276  0E1E               	movlw	30
  5994  001278  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5995  00127A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5996  00127C  0E00               	movlw	0
  5997  00127E  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5998  001280  0E00               	movlw	0
  5999  001282  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6000  001284  0E00               	movlw	0
  6001  001286  ECB1  F00D         	call	i1_ToMainLow_sendmsg
  6002  00128A  0012               	return	
  6003  00128C                     __end_of_uart_recv_int_handler:
  6004                           	opt stack 0
  6005                           pclatu	equ	0xFFB
  6006                           pclath	equ	0xFFA
  6007                           tblptru	equ	0xFF8
  6008                           tblptrh	equ	0xFF7
  6009                           tblptrl	equ	0xFF6
  6010                           tablat	equ	0xFF5
  6011                           prodh	equ	0xFF4
  6012                           prodl	equ	0xFF3
  6013                           intcon	equ	0xFF2
  6014                           postinc0	equ	0xFEE
  6015                           fsr0h	equ	0xFEA
  6016                           fsr0l	equ	0xFE9
  6017                           wreg	equ	0xFE8
  6018                           indf1	equ	0xFE7
  6019                           fsr1h	equ	0xFE2
  6020                           fsr1l	equ	0xFE1
  6021                           bsr	equ	0xFE0
  6022                           indf2	equ	0xFDF
  6023                           postinc2	equ	0xFDE
  6024                           postdec2	equ	0xFDD
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function i1_ToMainLow_sendmsg *****************
  6030 ;; Defined at:
  6031 ;;		line 103 in file "src/messages.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  length          1    wreg     unsigned char 
  6034 ;;  msgtype         1   22[COMRAM] unsigned char 
  6035 ;;  data            2   23[COMRAM] PTR void 
  6036 ;;		 -> NULL(0), main@test(2), main@uc(5), 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  length          1   25[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      char 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6048 ;;      Params:         3       0       0       0       0
  6049 ;;      Locals:         1       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0
  6051 ;;      Totals:         4       0       0       0       0
  6052 ;;Total ram usage:        4 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    7
  6055 ;; This function calls:
  6056 ;;		i1_send_msg
  6057 ;; This function is called by:
  6058 ;;		_uart_recv_int_handler
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text39
  6063  001B62                     __ptext39:
  6064                           	opt stack 0
  6065  001B62                     i1_ToMainLow_sendmsg:
  6066                           	opt stack 16
  6067                           
  6068                           ;incstack = 0
  6069                           ;i1ToMainLow_sendmsg@length stored from wreg
  6070  001B62  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6071                           
  6072                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6073                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6074  001B66  0100               	movlb	0	; () banked
  6075  001B68  0E00               	movlw	high _ToMainLow_MQ
  6076  001B6A  6E0C               	movwf	i1send_msg@qptr+1,c
  6077  001B6C  0100               	movlb	0	; () banked
  6078  001B6E  0E80               	movlw	low _ToMainLow_MQ
  6079  001B70  6E0B               	movwf	i1send_msg@qptr,c
  6080  001B72  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6081  001B76  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6082  001B7A  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6083  001B7E  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6084  001B82  ECA3  F008         	call	i1_send_msg	;wreg free
  6085  001B86  0012               	return	
  6086  001B88                     __end_ofi1_ToMainLow_sendmsg:
  6087                           	opt stack 0
  6088                           pclatu	equ	0xFFB
  6089                           pclath	equ	0xFFA
  6090                           tblptru	equ	0xFF8
  6091                           tblptrh	equ	0xFF7
  6092                           tblptrl	equ	0xFF6
  6093                           tablat	equ	0xFF5
  6094                           prodh	equ	0xFF4
  6095                           prodl	equ	0xFF3
  6096                           intcon	equ	0xFF2
  6097                           postinc0	equ	0xFEE
  6098                           fsr0h	equ	0xFEA
  6099                           fsr0l	equ	0xFE9
  6100                           wreg	equ	0xFE8
  6101                           indf1	equ	0xFE7
  6102                           fsr1h	equ	0xFE2
  6103                           fsr1l	equ	0xFE1
  6104                           bsr	equ	0xFE0
  6105                           indf2	equ	0xFDF
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function i1_send_msg *****************
  6113 ;; Defined at:
  6114 ;;		line 24 in file "src/messages.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6117 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6118 ;;  length          1   12[COMRAM] unsigned char 
  6119 ;;  msgtype         1   13[COMRAM] unsigned char 
  6120 ;;  data            2   14[COMRAM] PTR void 
  6121 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@test(2), main@uthread_data(10), 
  6122 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6125 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6126 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6127 ;;  send_msg        2   17[COMRAM] unsigned int 
  6128 ;;  send_msg        1   19[COMRAM] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      char 
  6131 ;; Registers used:
  6132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6138 ;;      Params:         6       0       0       0       0
  6139 ;;      Locals:         5       0       0       0       0
  6140 ;;      Temps:          1       0       0       0       0
  6141 ;;      Totals:        12       0       0       0       0
  6142 ;;Total ram usage:       12 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    6
  6145 ;; This function calls:
  6146 ;;		i1_memcpy
  6147 ;; This function is called by:
  6148 ;;		i1_ToMainLow_sendmsg
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text40
  6153  001146                     __ptext40:
  6154                           	opt stack 0
  6155  001146                     i1_send_msg:
  6156                           	opt stack 16
  6157                           
  6158                           ;messages.c: 25: unsigned char slot;
  6159                           ;messages.c: 27: msg *qmsg;
  6160                           ;messages.c: 28: size_t tlength = length;
  6161                           
  6162                           ;incstack = 0
  6163  001146  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6164  00114A  6A13               	clrf	i1send_msg@tlength+1,c
  6165                           
  6166                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6167  00114C  EE20 F034          	lfsr	2,52
  6168  001150  500B               	movf	i1send_msg@qptr,w,c
  6169  001152  26D9               	addwf	fsr2l,f,c
  6170  001154  500C               	movf	i1send_msg@qptr+1,w,c
  6171  001156  22DA               	addwfc	fsr2h,f,c
  6172  001158  50DF               	movf	indf2,w,c
  6173  00115A  6E14               	movwf	i1send_msg@slot,c
  6174                           
  6175                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6176  00115C  5014               	movf	i1send_msg@slot,w,c
  6177  00115E  0D0D               	mullw	13
  6178  001160  50F3               	movf	prodl,w,c
  6179  001162  240B               	addwf	i1send_msg@qptr,w,c
  6180  001164  6E15               	movwf	i1send_msg@qmsg,c
  6181  001166  50F4               	movf	prodh,w,c
  6182  001168  200C               	addwfc	i1send_msg@qptr+1,w,c
  6183  00116A  6E16               	movwf	i1send_msg@qmsg+1,c
  6184                           
  6185                           ;messages.c: 41: if (qmsg->full != 0) {
  6186  00116C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6187  001170  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6188  001174  50DF               	movf	indf2,w,c
  6189  001176  B4D8               	btfsc	status,2,c
  6190  001178  D002               	goto	i1l3741
  6191                           
  6192                           ;messages.c: 42: return (-1);
  6193  00117A  0EFF               	movlw	255
  6194  00117C  0012               	return	
  6195  00117E                     i1l3741:
  6196                           
  6197                           ;messages.c: 43: }
  6198                           ;messages.c: 46: qmsg->length = length;
  6199  00117E  EE20 F001          	lfsr	2,1
  6200  001182  5015               	movf	i1send_msg@qmsg,w,c
  6201  001184  26D9               	addwf	fsr2l,f,c
  6202  001186  5016               	movf	i1send_msg@qmsg+1,w,c
  6203  001188  22DA               	addwfc	fsr2h,f,c
  6204  00118A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6205                           
  6206                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6207  00118E  EE20 F002          	lfsr	2,2
  6208  001192  5015               	movf	i1send_msg@qmsg,w,c
  6209  001194  26D9               	addwf	fsr2l,f,c
  6210  001196  5016               	movf	i1send_msg@qmsg+1,w,c
  6211  001198  22DA               	addwfc	fsr2h,f,c
  6212  00119A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6213                           
  6214                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6215  00119E  0E03               	movlw	3
  6216  0011A0  2415               	addwf	i1send_msg@qmsg,w,c
  6217  0011A2  6E01               	movwf	i1memcpy@d1,c
  6218  0011A4  0E00               	movlw	0
  6219  0011A6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6220  0011A8  6E02               	movwf	i1memcpy@d1+1,c
  6221  0011AA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6222  0011AE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6223  0011B2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6224  0011B6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6225  0011BA  EC61  F00C         	call	i1_memcpy	;wreg free
  6226                           
  6227                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6228  0011BE  EE20 F034          	lfsr	2,52
  6229  0011C2  500B               	movf	i1send_msg@qptr,w,c
  6230  0011C4  26D9               	addwf	fsr2l,f,c
  6231  0011C6  500C               	movf	i1send_msg@qptr+1,w,c
  6232  0011C8  22DA               	addwfc	fsr2h,f,c
  6233  0011CA  EE10 F034          	lfsr	1,52
  6234  0011CE  500B               	movf	i1send_msg@qptr,w,c
  6235  0011D0  26E1               	addwf	fsr1l,f,c
  6236  0011D2  500C               	movf	i1send_msg@qptr+1,w,c
  6237  0011D4  22E2               	addwfc	fsr1h,f,c
  6238  0011D6  50E7               	movf	indf1,w,c
  6239  0011D8  6E11               	movwf	??i1_send_msg& (0+255),c
  6240  0011DA  2811               	incf	??i1_send_msg,w,c
  6241  0011DC  0B03               	andlw	3
  6242  0011DE  6EDF               	movwf	indf2,c
  6243                           
  6244                           ;messages.c: 59: qmsg->full = 1;
  6245  0011E0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6246  0011E4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6247  0011E8  0E01               	movlw	1
  6248  0011EA  6EDF               	movwf	indf2,c
  6249                           
  6250                           ;messages.c: 60: return (1);
  6251  0011EC  0E01               	movlw	1
  6252  0011EE  0012               	return	
  6253  0011F0                     __end_ofi1_send_msg:
  6254                           	opt stack 0
  6255                           pclatu	equ	0xFFB
  6256                           pclath	equ	0xFFA
  6257                           tblptru	equ	0xFF8
  6258                           tblptrh	equ	0xFF7
  6259                           tblptrl	equ	0xFF6
  6260                           tablat	equ	0xFF5
  6261                           prodh	equ	0xFF4
  6262                           prodl	equ	0xFF3
  6263                           intcon	equ	0xFF2
  6264                           postinc0	equ	0xFEE
  6265                           fsr0h	equ	0xFEA
  6266                           fsr0l	equ	0xFE9
  6267                           wreg	equ	0xFE8
  6268                           indf1	equ	0xFE7
  6269                           fsr1h	equ	0xFE2
  6270                           fsr1l	equ	0xFE1
  6271                           bsr	equ	0xFE0
  6272                           indf2	equ	0xFDF
  6273                           postinc2	equ	0xFDE
  6274                           postdec2	equ	0xFDD
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function i1_memcpy *****************
  6280 ;; Defined at:
  6281 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  d1              2    0[COMRAM] PTR void 
  6284 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6285 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6286 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6287 ;;  s1              2    2[COMRAM] PTR const void 
  6288 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6289 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6290 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6291 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  6292 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  6293 ;;  n               2    4[COMRAM] unsigned int 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6296 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6297 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6298 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6299 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  6300 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  6301 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6302 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6303 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6304 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  2    0[COMRAM] PTR void 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6314 ;;      Params:         6       0       0       0       0
  6315 ;;      Locals:         4       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0
  6317 ;;      Totals:        10       0       0       0       0
  6318 ;;Total ram usage:       10 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    5
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		i1_send_msg
  6325 ;;		i1_recv_msg
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text41
  6330  0018C2                     __ptext41:
  6331                           	opt stack 0
  6332  0018C2                     i1_memcpy:
  6333                           	opt stack 16
  6334                           
  6335                           ;incstack = 0
  6336  0018C2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6337  0018C6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6338  0018CA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6339  0018CE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6340  0018D2  D00E               	goto	i1l3717
  6341  0018D4                     i1l3711:
  6342  0018D4  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6343  0018D8  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6344  0018DC  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6345  0018E0  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6346  0018E4  CFDF FFE7          	movff	indf2,indf1
  6347  0018E8  4A09               	infsnz	i1memcpy@s,f,c
  6348  0018EA  2A0A               	incf	i1memcpy@s+1,f,c
  6349  0018EC  4A07               	infsnz	i1memcpy@d,f,c
  6350  0018EE  2A08               	incf	i1memcpy@d+1,f,c
  6351  0018F0                     i1l3717:
  6352  0018F0  0605               	decf	i1memcpy@n,f,c
  6353  0018F2  A0D8               	btfss	status,0,c
  6354  0018F4  0606               	decf	i1memcpy@n+1,f,c
  6355  0018F6  2805               	incf	i1memcpy@n& (0+255),w,c
  6356  0018F8  B4D8               	btfsc	status,2,c
  6357  0018FA  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6358  0018FC  B4D8               	btfsc	status,2,c
  6359                           
  6360                           ;	Return value of i1_memcpy is never used
  6361  0018FE  0012               	return	
  6362  001900  D7E9               	goto	i1l3711
  6363  001902                     __end_ofi1_memcpy:
  6364                           	opt stack 0
  6365                           pclatu	equ	0xFFB
  6366                           pclath	equ	0xFFA
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           postinc0	equ	0xFEE
  6375                           fsr0h	equ	0xFEA
  6376                           fsr0l	equ	0xFE9
  6377                           wreg	equ	0xFE8
  6378                           indf1	equ	0xFE7
  6379                           fsr1h	equ	0xFE2
  6380                           fsr1l	equ	0xFE1
  6381                           bsr	equ	0xFE0
  6382                           indf2	equ	0xFDF
  6383                           postinc2	equ	0xFDE
  6384                           postdec2	equ	0xFDD
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8
  6388                           
  6389 ;; *************** function _ReadUSART *****************
  6390 ;; Defined at:
  6391 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  data            1    0[COMRAM] unsigned char 
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      unsigned char 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6405 ;;      Params:         0       0       0       0       0
  6406 ;;      Locals:         1       0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0
  6408 ;;      Totals:         1       0       0       0       0
  6409 ;;Total ram usage:        1 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    5
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_uart_recv_int_handler
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text42
  6420  001BEE                     __ptext42:
  6421                           	opt stack 0
  6422  001BEE                     _ReadUSART:
  6423                           	opt stack 18
  6424                           
  6425                           ;incstack = 0
  6426  001BEE  0EF2               	movlw	242
  6427  001BF0  164A               	andwf	_USART_Status,f,c
  6428  001BF2  ACAB               	btfss	4011,6,c	;volatile
  6429  001BF4  D003               	goto	i1l514
  6430  001BF6  904A               	bcf	_USART_Status,0,c
  6431  001BF8  B0AB               	btfsc	4011,0,c	;volatile
  6432  001BFA  804A               	bsf	_USART_Status,0,c
  6433  001BFC                     i1l514:
  6434  001BFC  B4AB               	btfsc	4011,2,c	;volatile
  6435  001BFE  844A               	bsf	_USART_Status,2,c
  6436  001C00  B2AB               	btfsc	4011,1,c	;volatile
  6437  001C02  864A               	bsf	_USART_Status,3,c
  6438  001C04  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6439  001C08  5001               	movf	ReadUSART@data,w,c
  6440  001C0A  0012               	return	
  6441  001C0C                     __end_of_ReadUSART:
  6442                           	opt stack 0
  6443                           pclatu	equ	0xFFB
  6444                           pclath	equ	0xFFA
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           intcon	equ	0xFF2
  6452                           postinc0	equ	0xFEE
  6453                           fsr0h	equ	0xFEA
  6454                           fsr0l	equ	0xFE9
  6455                           wreg	equ	0xFE8
  6456                           indf1	equ	0xFE7
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           bsr	equ	0xFE0
  6460                           indf2	equ	0xFDF
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _timer1_int_handler *****************
  6468 ;; Defined at:
  6469 ;;		line 30 in file "src/user_interrupts.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  result          2    0        unsigned int 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6483 ;;      Params:         0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0
  6485 ;;      Temps:          1       0       0       0       0
  6486 ;;      Totals:         1       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    6
  6490 ;; This function calls:
  6491 ;;		i1_WriteTimer1
  6492 ;; This function is called by:
  6493 ;;		_InterruptHandlerLow
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text43
  6498  001B88                     __ptext43:
  6499                           	opt stack 0
  6500  001B88                     _timer1_int_handler:
  6501                           	opt stack 18
  6502                           
  6503                           ;user_interrupts.c: 31: unsigned int result;
  6504                           ;user_interrupts.c: 39: WriteTimer1(65000);
  6505                           
  6506                           ;incstack = 0
  6507  001B88  0EFD               	movlw	253
  6508  001B8A  6E02               	movwf	i1WriteTimer1@timer1+1,c
  6509  001B8C  0EE8               	movlw	232
  6510  001B8E  6E01               	movwf	i1WriteTimer1@timer1,c
  6511  001B90  EC3E  F00E         	call	i1_WriteTimer1	;wreg free
  6512                           
  6513                           ;user_interrupts.c: 42: LATAbits.LATA0 = !LATAbits.LATA0;
  6514  001B94  B089               	btfsc	3977,0,c	;volatile
  6515  001B96  D002               	goto	i1u191_20
  6516  001B98  0E01               	movlw	1
  6517  001B9A  D001               	goto	i1u191_26
  6518  001B9C                     i1u191_20:
  6519  001B9C  0E00               	movlw	0
  6520  001B9E                     i1u191_26:
  6521  001B9E  6E05               	movwf	??_timer1_int_handler& (0+255),c
  6522  001BA0  5089               	movf	3977,w,c	;volatile
  6523  001BA2  1805               	xorwf	??_timer1_int_handler,w,c
  6524  001BA4  0BFE               	andlw	-2
  6525  001BA6  1805               	xorwf	??_timer1_int_handler,w,c
  6526  001BA8  6E89               	movwf	3977,c	;volatile
  6527  001BAA  0012               	return	
  6528  001BAC                     __end_of_timer1_int_handler:
  6529                           	opt stack 0
  6530                           pclatu	equ	0xFFB
  6531                           pclath	equ	0xFFA
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           postinc0	equ	0xFEE
  6540                           fsr0h	equ	0xFEA
  6541                           fsr0l	equ	0xFE9
  6542                           wreg	equ	0xFE8
  6543                           indf1	equ	0xFE7
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           bsr	equ	0xFE0
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function i1_WriteTimer1 *****************
  6555 ;; Defined at:
  6556 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  timer1          2    0[COMRAM] unsigned int 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		None
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6570 ;;      Params:         2       0       0       0       0
  6571 ;;      Locals:         2       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0
  6573 ;;      Totals:         4       0       0       0       0
  6574 ;;Total ram usage:        4 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    5
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_timer1_int_handler
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text44
  6585  001C7C                     __ptext44:
  6586                           	opt stack 0
  6587  001C7C                     i1_WriteTimer1:
  6588                           	opt stack 18
  6589                           
  6590                           ;incstack = 0
  6591  001C7C  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  6592  001C80  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  6593  001C84  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  6594  001C88  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  6595  001C8C  0012               	return	
  6596  001C8E                     __end_ofi1_WriteTimer1:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           indf1	equ	0xFE7
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           bsr	equ	0xFE0
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _InterruptHandlerHigh *****************
  6623 ;; Defined at:
  6624 ;;		line 83 in file "src/interrupts.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6638 ;;      Params:         0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0
  6640 ;;      Temps:          0      14       0       0       0
  6641 ;;      Totals:         0      14       0       0       0
  6642 ;;Total ram usage:       14 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    4
  6645 ;; This function calls:
  6646 ;;		_SleepIfOkay
  6647 ;;		_i2c_int_handler
  6648 ;;		_timer0_int_handler
  6649 ;; This function is called by:
  6650 ;;		Interrupt level 2
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	intcode
  6655  000008                     __pintcode:
  6656                           	opt stack 0
  6657  000008                     _InterruptHandlerHigh:
  6658                           	opt stack 16
  6659                           
  6660                           ;incstack = 0
  6661  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh
  6662  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+1
  6663  000010  EFD4  F009         	goto	int_func
  6664                           pclatu	equ	0xFFB
  6665                           pclath	equ	0xFFA
  6666                           tblptru	equ	0xFF8
  6667                           tblptrh	equ	0xFF7
  6668                           tblptrl	equ	0xFF6
  6669                           tablat	equ	0xFF5
  6670                           prodh	equ	0xFF4
  6671                           prodl	equ	0xFF3
  6672                           intcon	equ	0xFF2
  6673                           postinc0	equ	0xFEE
  6674                           fsr0h	equ	0xFEA
  6675                           fsr0l	equ	0xFE9
  6676                           wreg	equ	0xFE8
  6677                           indf1	equ	0xFE7
  6678                           fsr1h	equ	0xFE2
  6679                           fsr1l	equ	0xFE1
  6680                           bsr	equ	0xFE0
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688                           	psect	intcode_body
  6689  0013A8                     __pintcode_body:
  6690                           	opt stack 16
  6691  0013A8                     int_func:
  6692                           	opt stack 16
  6693  0013A8  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6694  0013AC  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6695  0013B0  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6696  0013B4  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6697  0013B8  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6698  0013BC  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6699  0013C0  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+8
  6700  0013C4  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+9
  6701  0013C8  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6702  0013CC  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6703  0013D0  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+12
  6704  0013D4  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+13
  6705                           
  6706                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6707  0013D8  A69E               	btfss	3998,3,c	;volatile
  6708  0013DA  D003               	goto	i2l3075
  6709                           
  6710                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6711  0013DC  969E               	bcf	3998,3,c	;volatile
  6712                           
  6713                           ;interrupts.c: 92: i2c_int_handler();
  6714  0013DE  EC62  F000         	call	_i2c_int_handler	;wreg free
  6715  0013E2                     i2l3075:
  6716                           
  6717                           ;interrupts.c: 93: }
  6718                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6719  0013E2  A4F2               	btfss	intcon,2,c	;volatile
  6720  0013E4  D003               	goto	i2l3081
  6721                           
  6722                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6723  0013E6  94F2               	bcf	intcon,2,c	;volatile
  6724                           
  6725                           ;interrupts.c: 99: timer0_int_handler();
  6726  0013E8  EC56  F00E         	call	_timer0_int_handler	;wreg free
  6727  0013EC                     i2l3081:
  6728                           
  6729                           ;interrupts.c: 100: }
  6730                           ;interrupts.c: 109: SleepIfOkay();
  6731  0013EC  EC92  F00B         	call	_SleepIfOkay	;wreg free
  6732  0013F0  C0D6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6733  0013F4  C0D5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6734  0013F8  C0D4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6735  0013FC  C0D3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6736  001400  C0D2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6737  001404  C0D1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6738  001408  C0D0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6739  00140C  C0CF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6740  001410  C0CE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6741  001414  C0CD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6742  001418  C0CC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6743  00141C  C0CB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6744  001420  C0CA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6745  001424  C0C9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6746  001428  0011               	retfie		f
  6747  00142A                     __end_of_InterruptHandlerHigh:
  6748                           	opt stack 0
  6749                           pclatu	equ	0xFFB
  6750                           pclath	equ	0xFFA
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           intcon	equ	0xFF2
  6758                           postinc0	equ	0xFEE
  6759                           fsr0h	equ	0xFEA
  6760                           fsr0l	equ	0xFE9
  6761                           wreg	equ	0xFE8
  6762                           indf1	equ	0xFE7
  6763                           fsr1h	equ	0xFE2
  6764                           fsr1l	equ	0xFE1
  6765                           bsr	equ	0xFE0
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function _timer0_int_handler *****************
  6774 ;; Defined at:
  6775 ;;		line 17 in file "src/user_interrupts.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  msgtype         2    0        int 
  6780 ;;  length          2    0        int 
  6781 ;;  val             2    0        unsigned int 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		None
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6791 ;;      Params:         0       0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0
  6794 ;;      Totals:         0       0       0       0       0
  6795 ;;Total ram usage:        0 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_InterruptHandlerHigh
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text46
  6805  001CAC                     __ptext46:
  6806                           	opt stack 0
  6807  001CAC                     _timer0_int_handler:
  6808                           	opt stack 19
  6809                           
  6810                           ;incstack = 0
  6811  001CAC  0012               	return	
  6812  001CAE                     __end_of_timer0_int_handler:
  6813                           	opt stack 0
  6814                           pclatu	equ	0xFFB
  6815                           pclath	equ	0xFFA
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           intcon	equ	0xFF2
  6823                           postinc0	equ	0xFEE
  6824                           fsr0h	equ	0xFEA
  6825                           fsr0l	equ	0xFE9
  6826                           wreg	equ	0xFE8
  6827                           indf1	equ	0xFE7
  6828                           fsr1h	equ	0xFE2
  6829                           fsr1l	equ	0xFE1
  6830                           bsr	equ	0xFE0
  6831                           indf2	equ	0xFDF
  6832                           postinc2	equ	0xFDE
  6833                           postdec2	equ	0xFDD
  6834                           fsr2h	equ	0xFDA
  6835                           fsr2l	equ	0xFD9
  6836                           status	equ	0xFD8
  6837                           
  6838 ;; *************** function _i2c_int_handler *****************
  6839 ;; Defined at:
  6840 ;;		line 100 in file "src/my_i2c.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  error_buf       3   10[BANK0 ] unsigned char [3]
  6845 ;;  data_read       1   18[BANK0 ] unsigned char 
  6846 ;;  msg_ready       1   17[BANK0 ] unsigned char 
  6847 ;;  msg_to_send     1   16[BANK0 ] unsigned char 
  6848 ;;  i2c_data        1   15[BANK0 ] unsigned char 
  6849 ;;  overrun_erro    1   14[BANK0 ] unsigned char 
  6850 ;;  data_written    1   13[BANK0 ] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;		None               void
  6853 ;; Registers used:
  6854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6860 ;;      Params:         0       0       0       0       0
  6861 ;;      Locals:         0       9       0       0       0
  6862 ;;      Temps:          0       2       0       0       0
  6863 ;;      Totals:         0      11       0       0       0
  6864 ;;Total ram usage:       11 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    3
  6867 ;; This function calls:
  6868 ;;		_ToMainHigh_sendmsg
  6869 ;;		_handle_start
  6870 ;; This function is called by:
  6871 ;;		_InterruptHandlerHigh
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text47
  6876  0000C4                     __ptext47:
  6877                           	opt stack 0
  6878  0000C4                     _i2c_int_handler:
  6879                           	opt stack 16
  6880                           
  6881                           ;my_i2c.c: 101: unsigned char i2c_data;
  6882                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6883                           
  6884                           ;incstack = 0
  6885  0000C4  0100               	movlb	0	; () banked
  6886  0000C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6887  0000C8  0E00               	movlw	0
  6888  0000CA  0100               	movlb	0	; () banked
  6889  0000CC  0100               	movlb	0	; () banked
  6890  0000CE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  6891  0000D0  0100               	movlb	0	; () banked
  6892  0000D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6893                           
  6894                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6895  0000D4  0100               	movlb	0	; () banked
  6896  0000D6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6897  0000D8  0E00               	movlw	0
  6898  0000DA  0100               	movlb	0	; () banked
  6899  0000DC  0100               	movlb	0	; () banked
  6900  0000DE  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  6901  0000E0  0100               	movlb	0	; () banked
  6902  0000E2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6903                           
  6904                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6905  0000E4  0100               	movlb	0	; () banked
  6906  0000E6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6907  0000E8  0E00               	movlw	0
  6908  0000EA  0100               	movlb	0	; () banked
  6909  0000EC  0100               	movlb	0	; () banked
  6910  0000EE  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6911  0000F0  0100               	movlb	0	; () banked
  6912  0000F2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6913                           
  6914                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6915  0000F4  0100               	movlb	0	; () banked
  6916  0000F6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6917  0000F8  0E00               	movlw	0
  6918  0000FA  0100               	movlb	0	; () banked
  6919  0000FC  0100               	movlb	0	; () banked
  6920  0000FE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6921  000100  0100               	movlb	0	; () banked
  6922  000102  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6923                           
  6924                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6925  000104  0100               	movlb	0	; () banked
  6926  000106  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6927  000108  0E00               	movlw	0
  6928  00010A  0100               	movlb	0	; () banked
  6929  00010C  0100               	movlb	0	; () banked
  6930  00010E  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6931  000110  0100               	movlb	0	; () banked
  6932  000112  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6936                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6937  000114  ACC6               	btfss	4038,6,c	;volatile
  6938  000116  D029               	goto	i2l3097
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6942  000118  9CC6               	bcf	4038,6,c	;volatile
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6946  00011A  0100               	movlb	0	; () banked
  6947  00011C  EE20 F00C          	lfsr	2,12
  6948  000120  0100               	movlb	0	; () banked
  6949  000122  51DD               	movf	_ic_ptr& (0+255),w,b
  6950  000124  26D9               	addwf	fsr2l,f,c
  6951  000126  0100               	movlb	0	; () banked
  6952  000128  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6953  00012A  22DA               	addwfc	fsr2h,f,c
  6954  00012C  0E05               	movlw	5
  6955  00012E  6EDF               	movwf	indf2,c
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;my_i2c.c: 116: overrun_error = 1;
  6959  000130  0100               	movlb	0	; () banked
  6960  000132  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6961  000134  0E01               	movlw	1
  6962  000136  0100               	movlb	0	; () banked
  6963  000138  0100               	movlb	0	; () banked
  6964  00013A  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6965  00013C  0100               	movlb	0	; () banked
  6966  00013E  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6970  000140  0100               	movlb	0	; () banked
  6971  000142  EE20 F00E          	lfsr	2,14
  6972  000146  0100               	movlb	0	; () banked
  6973  000148  51DD               	movf	_ic_ptr& (0+255),w,b
  6974  00014A  26D9               	addwf	fsr2l,f,c
  6975  00014C  0100               	movlb	0	; () banked
  6976  00014E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6977  000150  22DA               	addwfc	fsr2h,f,c
  6978  000152  2ADF               	incf	indf2,f,c
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6982  000154  0100               	movlb	0	; () banked
  6983  000156  EE20 F00D          	lfsr	2,13
  6984  00015A  0100               	movlb	0	; () banked
  6985  00015C  51DD               	movf	_ic_ptr& (0+255),w,b
  6986  00015E  26D9               	addwf	fsr2l,f,c
  6987  000160  0100               	movlb	0	; () banked
  6988  000162  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6989  000164  22DA               	addwfc	fsr2h,f,c
  6990  000166  0E04               	movlw	4
  6991  000168  6EDF               	movwf	indf2,c
  6992  00016A                     i2l3097:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;my_i2c.c: 119: }
  6996                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6997  00016A  A0C7               	btfss	4039,0,c	;volatile
  6998  00016C  D00A               	goto	i2l3103
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7002  00016E  CFC9 F0C5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;my_i2c.c: 123: data_read = 1;
  7006  000172  0100               	movlb	0	; () banked
  7007  000174  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7008  000176  0E01               	movlw	1
  7009  000178  0100               	movlb	0	; () banked
  7010  00017A  0100               	movlb	0	; () banked
  7011  00017C  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7012  00017E  0100               	movlb	0	; () banked
  7013  000180  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7014  000182                     i2l3103:
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;my_i2c.c: 124: }
  7018                           ;my_i2c.c: 126: if (!overrun_error) {
  7019  000182  0100               	movlb	0	; () banked
  7020  000184  0100               	movlb	0	; () banked
  7021  000186  67C4               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7022  000188  D1CE               	goto	i2l287
  7023  00018A  D1B7               	goto	i2l3191
  7024  00018C                     i2l289:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;my_i2c.c: 129: {
  7028                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7029  00018C  A6C7               	btfss	4039,3,c	;volatile
  7030  00018E  D1CB               	goto	i2l287
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;my_i2c.c: 132: handle_start(data_read);
  7034  000190  0100               	movlb	0	; () banked
  7035  000192  0100               	movlb	0	; () banked
  7036  000194  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7037  000196  EC3F  F008         	call	_handle_start
  7038                           
  7039                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7040  00019A  0100               	movlb	0	; () banked
  7041  00019C  EE20 F00C          	lfsr	2,12
  7042  0001A0  0100               	movlb	0	; () banked
  7043  0001A2  51DD               	movf	_ic_ptr& (0+255),w,b
  7044  0001A4  26D9               	addwf	fsr2l,f,c
  7045  0001A6  0100               	movlb	0	; () banked
  7046  0001A8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7047  0001AA  22DA               	addwfc	fsr2h,f,c
  7048  0001AC  0E08               	movlw	8
  7049  0001AE  62DF               	cpfseq	indf2,c
  7050  0001B0  D1BA               	goto	i2l287
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;my_i2c.c: 135: data_read = 0;
  7054  0001B2  0100               	movlb	0	; () banked
  7055  0001B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7056  0001B6  0E00               	movlw	0
  7057  0001B8  0100               	movlb	0	; () banked
  7058  0001BA  0100               	movlb	0	; () banked
  7059  0001BC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7060  0001BE  0100               	movlb	0	; () banked
  7061  0001C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7062                           
  7063                           ;my_i2c.c: 136: msg_to_send = 1;
  7064  0001C2  0100               	movlb	0	; () banked
  7065  0001C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7066  0001C6  0E01               	movlw	1
  7067  0001C8  0100               	movlb	0	; () banked
  7068  0001CA  0100               	movlb	0	; () banked
  7069  0001CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7070  0001CE  D187               	goto	L9
  7071  0001D0                     i2l293:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;my_i2c.c: 142: {
  7075                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7076  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7077  0001D2  D030               	goto	i2l3123
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7081  0001D4  0100               	movlb	0	; () banked
  7082  0001D6  EE20 F00B          	lfsr	2,11
  7083  0001DA  0100               	movlb	0	; () banked
  7084  0001DC  51DD               	movf	_ic_ptr& (0+255),w,b
  7085  0001DE  26D9               	addwf	fsr2l,f,c
  7086  0001E0  0100               	movlb	0	; () banked
  7087  0001E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7088  0001E4  22DA               	addwfc	fsr2h,f,c
  7089  0001E6  2ADF               	incf	indf2,f,c
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 148: if (data_read) {
  7093  0001E8  0100               	movlb	0	; () banked
  7094  0001EA  0100               	movlb	0	; () banked
  7095  0001EC  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7096  0001EE  B4D8               	btfsc	status,2,c
  7097  0001F0  D179               	goto	L11
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7101  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7102  0001F4  D009               	goto	i2l3121
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 150: msg_ready = 1;
  7106  0001F6  0100               	movlb	0	; () banked
  7107  0001F8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7108  0001FA  0E01               	movlw	1
  7109  0001FC  0100               	movlb	0	; () banked
  7110  0001FE  0100               	movlb	0	; () banked
  7111  000200  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7112  000202  0100               	movlb	0	; () banked
  7113  000204  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7114                           
  7115                           ;my_i2c.c: 151: } else {
  7116  000206  D16E               	goto	L11
  7117  000208                     i2l3121:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7121  000208  0100               	movlb	0	; () banked
  7122  00020A  EE20 F00E          	lfsr	2,14
  7123  00020E  0100               	movlb	0	; () banked
  7124  000210  51DD               	movf	_ic_ptr& (0+255),w,b
  7125  000212  26D9               	addwf	fsr2l,f,c
  7126  000214  0100               	movlb	0	; () banked
  7127  000216  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7128  000218  22DA               	addwfc	fsr2h,f,c
  7129  00021A  2ADF               	incf	indf2,f,c
  7130                           
  7131                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7132  00021C  0100               	movlb	0	; () banked
  7133  00021E  EE20 F00D          	lfsr	2,13
  7134  000222  0100               	movlb	0	; () banked
  7135  000224  51DD               	movf	_ic_ptr& (0+255),w,b
  7136  000226  26D9               	addwf	fsr2l,f,c
  7137  000228  0100               	movlb	0	; () banked
  7138  00022A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7139  00022C  22DA               	addwfc	fsr2h,f,c
  7140  00022E  0E06               	movlw	6
  7141  000230  6EDF               	movwf	indf2,c
  7142                           
  7143                           ; BSR set to: 0
  7144  000232  D158               	goto	L11
  7145  000234                     i2l3123:
  7146                           
  7147                           ; BSR set to: 0
  7148  000234  0100               	movlb	0	; () banked
  7149  000236  0100               	movlb	0	; () banked
  7150  000238  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7151  00023A  B4D8               	btfsc	status,2,c
  7152  00023C  D174               	goto	i2l287
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7156  00023E  0100               	movlb	0	; () banked
  7157  000240  EE20 F00B          	lfsr	2,11
  7158  000244  0100               	movlb	0	; () banked
  7159  000246  51DD               	movf	_ic_ptr& (0+255),w,b
  7160  000248  26D9               	addwf	fsr2l,f,c
  7161  00024A  0100               	movlb	0	; () banked
  7162  00024C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7163  00024E  22DA               	addwfc	fsr2h,f,c
  7164  000250  2ADF               	incf	indf2,f,c
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7168  000252  BAC7               	btfsc	4039,5,c	;volatile
  7169  000254  D019               	goto	i2l3139
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7173  000256  B4C7               	btfsc	4039,2,c	;volatile
  7174  000258  D00B               	goto	i2l3133
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7178  00025A  0100               	movlb	0	; () banked
  7179  00025C  EE20 F00C          	lfsr	2,12
  7180  000260  0100               	movlb	0	; () banked
  7181  000262  51DD               	movf	_ic_ptr& (0+255),w,b
  7182  000264  26D9               	addwf	fsr2l,f,c
  7183  000266  0100               	movlb	0	; () banked
  7184  000268  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7185  00026A  22DA               	addwfc	fsr2h,f,c
  7186  00026C  0E07               	movlw	7
  7187  00026E  D076               	goto	L8
  7188  000270                     i2l3133:
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7192  000270  0100               	movlb	0	; () banked
  7193  000272  EE20 F00C          	lfsr	2,12
  7194  000276  0100               	movlb	0	; () banked
  7195  000278  51DD               	movf	_ic_ptr& (0+255),w,b
  7196  00027A  26D9               	addwf	fsr2l,f,c
  7197  00027C  0100               	movlb	0	; () banked
  7198  00027E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7199  000280  22DA               	addwfc	fsr2h,f,c
  7200  000282  0E08               	movlw	8
  7201  000284  6EDF               	movwf	indf2,c
  7202  000286  D11D               	goto	L12
  7203  000288                     i2l3139:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7207  000288  0100               	movlb	0	; () banked
  7208  00028A  EE20 F00E          	lfsr	2,14
  7209  00028E  0100               	movlb	0	; () banked
  7210  000290  51DD               	movf	_ic_ptr& (0+255),w,b
  7211  000292  26D9               	addwf	fsr2l,f,c
  7212  000294  0100               	movlb	0	; () banked
  7213  000296  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7214  000298  22DA               	addwfc	fsr2h,f,c
  7215  00029A  2ADF               	incf	indf2,f,c
  7216                           
  7217                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7218  00029C  0100               	movlb	0	; () banked
  7219  00029E  EE20 F00C          	lfsr	2,12
  7220  0002A2  0100               	movlb	0	; () banked
  7221  0002A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7222  0002A6  26D9               	addwf	fsr2l,f,c
  7223  0002A8  0100               	movlb	0	; () banked
  7224  0002AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  0002AC  22DA               	addwfc	fsr2h,f,c
  7226  0002AE  0E05               	movlw	5
  7227  0002B0  6EDF               	movwf	indf2,c
  7228                           
  7229                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7230  0002B2  0100               	movlb	0	; () banked
  7231  0002B4  EE20 F00D          	lfsr	2,13
  7232  0002B8  0100               	movlb	0	; () banked
  7233  0002BA  51DD               	movf	_ic_ptr& (0+255),w,b
  7234  0002BC  26D9               	addwf	fsr2l,f,c
  7235  0002BE  0100               	movlb	0	; () banked
  7236  0002C0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  0002C2  22DA               	addwfc	fsr2h,f,c
  7238  0002C4  0E06               	movlw	6
  7239  0002C6  D04A               	goto	L8
  7240  0002C8                     i2l3141:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;my_i2c.c: 177: {
  7244                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7245  0002C8  0100               	movlb	0	; () banked
  7246  0002CA  EE20 F01A          	lfsr	2,26
  7247  0002CE  0100               	movlb	0	; () banked
  7248  0002D0  51DD               	movf	_ic_ptr& (0+255),w,b
  7249  0002D2  26D9               	addwf	fsr2l,f,c
  7250  0002D4  0100               	movlb	0	; () banked
  7251  0002D6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7252  0002D8  22DA               	addwfc	fsr2h,f,c
  7253  0002DA  50DF               	movf	indf2,w,c
  7254  0002DC  0100               	movlb	0	; () banked
  7255  0002DE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7256  0002E0  0100               	movlb	0	; () banked
  7257  0002E2  EE20 F019          	lfsr	2,25
  7258  0002E6  0100               	movlb	0	; () banked
  7259  0002E8  51DD               	movf	_ic_ptr& (0+255),w,b
  7260  0002EA  26D9               	addwf	fsr2l,f,c
  7261  0002EC  0100               	movlb	0	; () banked
  7262  0002EE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7263  0002F0  22DA               	addwfc	fsr2h,f,c
  7264  0002F2  50DF               	movf	indf2,w,c
  7265  0002F4  0100               	movlb	0	; () banked
  7266  0002F6  5DBE               	subwf	??_i2c_int_handler& (0+255),w,b
  7267  0002F8  B0D8               	btfsc	status,0,c
  7268  0002FA  D0F4               	goto	L11
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7272  0002FC  0100               	movlb	0	; () banked
  7273  0002FE  EE20 F01A          	lfsr	2,26
  7274  000302  0100               	movlb	0	; () banked
  7275  000304  51DD               	movf	_ic_ptr& (0+255),w,b
  7276  000306  26D9               	addwf	fsr2l,f,c
  7277  000308  0100               	movlb	0	; () banked
  7278  00030A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7279  00030C  22DA               	addwfc	fsr2h,f,c
  7280  00030E  50DF               	movf	indf2,w,c
  7281  000310  0100               	movlb	0	; () banked
  7282  000312  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7283  000314  0100               	movlb	0	; () banked
  7284  000316  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7285  000318  0D01               	mullw	1
  7286  00031A  0E0F               	movlw	15
  7287  00031C  26F3               	addwf	prodl,f,c
  7288  00031E  0E00               	movlw	0
  7289  000320  22F4               	addwfc	prodh,f,c
  7290  000322  50F3               	movf	prodl,w,c
  7291  000324  0100               	movlb	0	; () banked
  7292  000326  0100               	movlb	0	; () banked
  7293  000328  25DD               	addwf	_ic_ptr& (0+255),w,b
  7294  00032A  6ED9               	movwf	fsr2l,c
  7295  00032C  50F4               	movf	prodh,w,c
  7296  00032E  0100               	movlb	0	; () banked
  7297  000330  0100               	movlb	0	; () banked
  7298  000332  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7299  000334  6EDA               	movwf	fsr2h,c
  7300  000336  50DF               	movf	indf2,w,c
  7301  000338  6EC9               	movwf	4041,c	;volatile
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7305  00033A  0100               	movlb	0	; () banked
  7306  00033C  EE20 F01A          	lfsr	2,26
  7307  000340  0100               	movlb	0	; () banked
  7308  000342  51DD               	movf	_ic_ptr& (0+255),w,b
  7309  000344  26D9               	addwf	fsr2l,f,c
  7310  000346  0100               	movlb	0	; () banked
  7311  000348  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7312  00034A  22DA               	addwfc	fsr2h,f,c
  7313  00034C  2ADF               	incf	indf2,f,c
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 181: data_written = 1;
  7317  00034E  0100               	movlb	0	; () banked
  7318  000350  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7319  000352  0E01               	movlw	1
  7320  000354  0100               	movlb	0	; () banked
  7321  000356  0100               	movlb	0	; () banked
  7322  000358  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7323  00035A  D0C1               	goto	L9
  7324  00035C                     L8:
  7325  00035C  6EDF               	movwf	indf2,c
  7326  00035E  D0E3               	goto	i2l287
  7327  000360                     i2l307:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;my_i2c.c: 189: {
  7331                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7332  000360  A8C7               	btfss	4039,4,c	;volatile
  7333  000362  D062               	goto	i2l3169
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7337  000364  0100               	movlb	0	; () banked
  7338  000366  EE20 F00B          	lfsr	2,11
  7339  00036A  0100               	movlb	0	; () banked
  7340  00036C  51DD               	movf	_ic_ptr& (0+255),w,b
  7341  00036E  26D9               	addwf	fsr2l,f,c
  7342  000370  0100               	movlb	0	; () banked
  7343  000372  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7344  000374  22DA               	addwfc	fsr2h,f,c
  7345  000376  2ADF               	incf	indf2,f,c
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;my_i2c.c: 194: if (data_read) {
  7349  000378  0100               	movlb	0	; () banked
  7350  00037A  0100               	movlb	0	; () banked
  7351  00037C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7352  00037E  B4D8               	btfsc	status,2,c
  7353  000380  D04A               	goto	i2l3165
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7357  000382  AAC7               	btfss	4039,5,c	;volatile
  7358  000384  D027               	goto	i2l3163
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7362  000386  0100               	movlb	0	; () banked
  7363  000388  EE20 F00A          	lfsr	2,10
  7364  00038C  0100               	movlb	0	; () banked
  7365  00038E  51DD               	movf	_ic_ptr& (0+255),w,b
  7366  000390  26D9               	addwf	fsr2l,f,c
  7367  000392  0100               	movlb	0	; () banked
  7368  000394  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7369  000396  22DA               	addwfc	fsr2h,f,c
  7370  000398  50DF               	movf	indf2,w,c
  7371  00039A  0100               	movlb	0	; () banked
  7372  00039C  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7373  00039E  0100               	movlb	0	; () banked
  7374  0003A0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7375  0003A2  0D01               	mullw	1
  7376  0003A4  50F3               	movf	prodl,w,c
  7377  0003A6  0100               	movlb	0	; () banked
  7378  0003A8  0100               	movlb	0	; () banked
  7379  0003AA  25DD               	addwf	_ic_ptr& (0+255),w,b
  7380  0003AC  6ED9               	movwf	fsr2l,c
  7381  0003AE  50F4               	movf	prodh,w,c
  7382  0003B0  0100               	movlb	0	; () banked
  7383  0003B2  0100               	movlb	0	; () banked
  7384  0003B4  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7385  0003B6  6EDA               	movwf	fsr2h,c
  7386  0003B8  0100               	movlb	0	; () banked
  7387  0003BA  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7391  0003BE  0100               	movlb	0	; () banked
  7392  0003C0  EE20 F00A          	lfsr	2,10
  7393  0003C4  0100               	movlb	0	; () banked
  7394  0003C6  51DD               	movf	_ic_ptr& (0+255),w,b
  7395  0003C8  26D9               	addwf	fsr2l,f,c
  7396  0003CA  0100               	movlb	0	; () banked
  7397  0003CC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7398  0003CE  22DA               	addwfc	fsr2h,f,c
  7399  0003D0  2ADF               	incf	indf2,f,c
  7400  0003D2  D021               	goto	i2l3165
  7401  0003D4                     i2l3163:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7405  0003D4  0100               	movlb	0	; () banked
  7406  0003D6  EE20 F00E          	lfsr	2,14
  7407  0003DA  0100               	movlb	0	; () banked
  7408  0003DC  51DD               	movf	_ic_ptr& (0+255),w,b
  7409  0003DE  26D9               	addwf	fsr2l,f,c
  7410  0003E0  0100               	movlb	0	; () banked
  7411  0003E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7412  0003E4  22DA               	addwfc	fsr2h,f,c
  7413  0003E6  2ADF               	incf	indf2,f,c
  7414                           
  7415                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7416  0003E8  0100               	movlb	0	; () banked
  7417  0003EA  EE20 F00D          	lfsr	2,13
  7418  0003EE  0100               	movlb	0	; () banked
  7419  0003F0  51DD               	movf	_ic_ptr& (0+255),w,b
  7420  0003F2  26D9               	addwf	fsr2l,f,c
  7421  0003F4  0100               	movlb	0	; () banked
  7422  0003F6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7423  0003F8  22DA               	addwfc	fsr2h,f,c
  7424  0003FA  0E06               	movlw	6
  7425  0003FC  6EDF               	movwf	indf2,c
  7426                           
  7427                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7428  0003FE  0100               	movlb	0	; () banked
  7429  000400  EE20 F00C          	lfsr	2,12
  7430  000404  0100               	movlb	0	; () banked
  7431  000406  51DD               	movf	_ic_ptr& (0+255),w,b
  7432  000408  26D9               	addwf	fsr2l,f,c
  7433  00040A  0100               	movlb	0	; () banked
  7434  00040C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7435  00040E  22DA               	addwfc	fsr2h,f,c
  7436  000410  0E05               	movlw	5
  7437  000412  6EDF               	movwf	indf2,c
  7438  000414  D067               	goto	L11
  7439  000416                     i2l3165:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 205: msg_ready = 1;
  7443  000416  0100               	movlb	0	; () banked
  7444  000418  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7445  00041A  0E01               	movlw	1
  7446  00041C  0100               	movlb	0	; () banked
  7447  00041E  0100               	movlb	0	; () banked
  7448  000420  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7449  000422  0100               	movlb	0	; () banked
  7450  000424  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7451                           
  7452                           ; BSR set to: 0
  7453  000426  D05E               	goto	L11
  7454  000428                     i2l3169:
  7455                           
  7456                           ; BSR set to: 0
  7457  000428  0100               	movlb	0	; () banked
  7458  00042A  0100               	movlb	0	; () banked
  7459  00042C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7460  00042E  B4D8               	btfsc	status,2,c
  7461  000430  D07A               	goto	i2l287
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7465  000432  0100               	movlb	0	; () banked
  7466  000434  EE20 F00B          	lfsr	2,11
  7467  000438  0100               	movlb	0	; () banked
  7468  00043A  51DD               	movf	_ic_ptr& (0+255),w,b
  7469  00043C  26D9               	addwf	fsr2l,f,c
  7470  00043E  0100               	movlb	0	; () banked
  7471  000440  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  000442  22DA               	addwfc	fsr2h,f,c
  7473  000444  2ADF               	incf	indf2,f,c
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7477  000446  AAC7               	btfss	4039,5,c	;volatile
  7478  000448  D027               	goto	i2l315
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7482  00044A  0100               	movlb	0	; () banked
  7483  00044C  EE20 F00A          	lfsr	2,10
  7484  000450  0100               	movlb	0	; () banked
  7485  000452  51DD               	movf	_ic_ptr& (0+255),w,b
  7486  000454  26D9               	addwf	fsr2l,f,c
  7487  000456  0100               	movlb	0	; () banked
  7488  000458  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7489  00045A  22DA               	addwfc	fsr2h,f,c
  7490  00045C  50DF               	movf	indf2,w,c
  7491  00045E  0100               	movlb	0	; () banked
  7492  000460  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7493  000462  0100               	movlb	0	; () banked
  7494  000464  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7495  000466  0D01               	mullw	1
  7496  000468  50F3               	movf	prodl,w,c
  7497  00046A  0100               	movlb	0	; () banked
  7498  00046C  0100               	movlb	0	; () banked
  7499  00046E  25DD               	addwf	_ic_ptr& (0+255),w,b
  7500  000470  6ED9               	movwf	fsr2l,c
  7501  000472  50F4               	movf	prodh,w,c
  7502  000474  0100               	movlb	0	; () banked
  7503  000476  0100               	movlb	0	; () banked
  7504  000478  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7505  00047A  6EDA               	movwf	fsr2h,c
  7506  00047C  0100               	movlb	0	; () banked
  7507  00047E  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7511  000482  0100               	movlb	0	; () banked
  7512  000484  EE20 F00A          	lfsr	2,10
  7513  000488  0100               	movlb	0	; () banked
  7514  00048A  51DD               	movf	_ic_ptr& (0+255),w,b
  7515  00048C  26D9               	addwf	fsr2l,f,c
  7516  00048E  0100               	movlb	0	; () banked
  7517  000490  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  000492  22DA               	addwfc	fsr2h,f,c
  7519  000494  2ADF               	incf	indf2,f,c
  7520                           
  7521                           ;my_i2c.c: 213: } else {
  7522  000496  D047               	goto	i2l287
  7523  000498                     i2l315:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7527  000498  A4C7               	btfss	4039,2,c	;volatile
  7528  00049A  D6B6               	goto	i2l3121
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7532  00049C  0100               	movlb	0	; () banked
  7533  00049E  EE20 F00C          	lfsr	2,12
  7534  0004A2  0100               	movlb	0	; () banked
  7535  0004A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7536  0004A6  26D9               	addwf	fsr2l,f,c
  7537  0004A8  0100               	movlb	0	; () banked
  7538  0004AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7539  0004AC  22DA               	addwfc	fsr2h,f,c
  7540  0004AE  0E08               	movlw	8
  7541  0004B0  6EDF               	movwf	indf2,c
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;my_i2c.c: 216: msg_ready = 1;
  7545  0004B2  0100               	movlb	0	; () banked
  7546  0004B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7547  0004B6  0E01               	movlw	1
  7548  0004B8  0100               	movlb	0	; () banked
  7549  0004BA  0100               	movlb	0	; () banked
  7550  0004BC  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7551  0004BE  0100               	movlb	0	; () banked
  7552  0004C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7553  0004C2                     L12:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;my_i2c.c: 217: msg_to_send = 1;
  7557  0004C2  0100               	movlb	0	; () banked
  7558  0004C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7559  0004C6  0E01               	movlw	1
  7560  0004C8  0100               	movlb	0	; () banked
  7561  0004CA  0100               	movlb	0	; () banked
  7562  0004CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7563  0004CE  0100               	movlb	0	; () banked
  7564  0004D0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;my_i2c.c: 219: data_read = 0;
  7568  0004D2  0100               	movlb	0	; () banked
  7569  0004D4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7570  0004D6  0E00               	movlw	0
  7571  0004D8  0100               	movlb	0	; () banked
  7572  0004DA  0100               	movlb	0	; () banked
  7573  0004DC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7574  0004DE                     L9:
  7575  0004DE  0100               	movlb	0	; () banked
  7576  0004E0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7577                           
  7578                           ;my_i2c.c: 220: } else {
  7579  0004E2  D021               	goto	i2l287
  7580  0004E4                     L11:
  7581                           
  7582                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7583  0004E4  0100               	movlb	0	; () banked
  7584  0004E6  EE20 F00C          	lfsr	2,12
  7585  0004EA  0100               	movlb	0	; () banked
  7586  0004EC  51DD               	movf	_ic_ptr& (0+255),w,b
  7587  0004EE  26D9               	addwf	fsr2l,f,c
  7588  0004F0  0100               	movlb	0	; () banked
  7589  0004F2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7590  0004F4  22DA               	addwfc	fsr2h,f,c
  7591  0004F6  0E05               	movlw	5
  7592  0004F8  D731               	goto	L8
  7593  0004FA                     i2l3191:
  7594                           
  7595                           ; BSR set to: 0
  7596  0004FA  0100               	movlb	0	; () banked
  7597  0004FC  EE20 F00C          	lfsr	2,12
  7598  000500  0100               	movlb	0	; () banked
  7599  000502  51DD               	movf	_ic_ptr& (0+255),w,b
  7600  000504  26D9               	addwf	fsr2l,f,c
  7601  000506  0100               	movlb	0	; () banked
  7602  000508  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7603  00050A  22DA               	addwfc	fsr2h,f,c
  7604  00050C  50DF               	movf	indf2,w,c
  7605                           
  7606                           ; Switch size 1, requested type "space"
  7607                           ; Number of cases is 4, Range of values is 5 to 8
  7608                           ; switch strategies available:
  7609                           ; Name         Instructions Cycles
  7610                           ; simple_byte           13     7 (average)
  7611                           ;	Chosen strategy is simple_byte
  7612  00050E  0A05               	xorlw	5	; case 5
  7613  000510  B4D8               	btfsc	status,2,c
  7614  000512  D63C               	goto	i2l289
  7615  000514  0A03               	xorlw	3	; case 6
  7616  000516  B4D8               	btfsc	status,2,c
  7617  000518  D65B               	goto	i2l293
  7618  00051A  0A01               	xorlw	1	; case 7
  7619  00051C  B4D8               	btfsc	status,2,c
  7620  00051E  D720               	goto	i2l307
  7621  000520  0A0F               	xorlw	15	; case 8
  7622  000522  B4D8               	btfsc	status,2,c
  7623  000524  D6D1               	goto	i2l3141
  7624  000526                     i2l287:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;my_i2c.c: 230: }
  7628                           ;my_i2c.c: 233: if (data_read || data_written) {
  7629  000526  0100               	movlb	0	; () banked
  7630  000528  0100               	movlb	0	; () banked
  7631  00052A  67C8               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7632  00052C  D005               	goto	i2l321
  7633                           
  7634                           ; BSR set to: 0
  7635  00052E  0100               	movlb	0	; () banked
  7636  000530  0100               	movlb	0	; () banked
  7637  000532  51C3               	movf	i2c_int_handler@data_written& (0+255),w,b
  7638  000534  B4D8               	btfsc	status,2,c
  7639  000536  D002               	goto	i2l3197
  7640  000538                     i2l321:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7644  000538  A8C6               	btfss	4038,4,c	;volatile
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7648  00053A  88C6               	bsf	4038,4,c	;volatile
  7649  00053C                     i2l3197:
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;my_i2c.c: 237: }
  7653                           ;my_i2c.c: 238: }
  7654                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7655  00053C  0100               	movlb	0	; () banked
  7656  00053E  EE20 F00A          	lfsr	2,10
  7657  000542  0100               	movlb	0	; () banked
  7658  000544  51DD               	movf	_ic_ptr& (0+255),w,b
  7659  000546  26D9               	addwf	fsr2l,f,c
  7660  000548  0100               	movlb	0	; () banked
  7661  00054A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7662  00054C  22DA               	addwfc	fsr2h,f,c
  7663  00054E  0E08               	movlw	8
  7664  000550  64DF               	cpfsgt	indf2,c
  7665  000552  D024               	goto	i2l3203
  7666                           
  7667                           ; BSR set to: 0
  7668  000554  0100               	movlb	0	; () banked
  7669  000556  0100               	movlb	0	; () banked
  7670  000558  67C7               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7671  00055A  D020               	goto	i2l3203
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7675  00055C  0100               	movlb	0	; () banked
  7676  00055E  EE20 F00C          	lfsr	2,12
  7677  000562  0100               	movlb	0	; () banked
  7678  000564  51DD               	movf	_ic_ptr& (0+255),w,b
  7679  000566  26D9               	addwf	fsr2l,f,c
  7680  000568  0100               	movlb	0	; () banked
  7681  00056A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7682  00056C  22DA               	addwfc	fsr2h,f,c
  7683  00056E  0E05               	movlw	5
  7684  000570  6EDF               	movwf	indf2,c
  7685                           
  7686                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7687  000572  0100               	movlb	0	; () banked
  7688  000574  EE20 F00E          	lfsr	2,14
  7689  000578  0100               	movlb	0	; () banked
  7690  00057A  51DD               	movf	_ic_ptr& (0+255),w,b
  7691  00057C  26D9               	addwf	fsr2l,f,c
  7692  00057E  0100               	movlb	0	; () banked
  7693  000580  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7694  000582  22DA               	addwfc	fsr2h,f,c
  7695  000584  2ADF               	incf	indf2,f,c
  7696                           
  7697                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7698  000586  0100               	movlb	0	; () banked
  7699  000588  EE20 F00D          	lfsr	2,13
  7700  00058C  0100               	movlb	0	; () banked
  7701  00058E  51DD               	movf	_ic_ptr& (0+255),w,b
  7702  000590  26D9               	addwf	fsr2l,f,c
  7703  000592  0100               	movlb	0	; () banked
  7704  000594  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7705  000596  22DA               	addwfc	fsr2h,f,c
  7706  000598  0E07               	movlw	7
  7707  00059A  6EDF               	movwf	indf2,c
  7708  00059C                     i2l3203:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;my_i2c.c: 245: }
  7712                           ;my_i2c.c: 247: if (msg_ready) {
  7713  00059C  0100               	movlb	0	; () banked
  7714  00059E  0100               	movlb	0	; () banked
  7715  0005A0  51C7               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7716  0005A2  B4D8               	btfsc	status,2,c
  7717  0005A4  D048               	goto	i2l3211
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7721  0005A6  0100               	movlb	0	; () banked
  7722  0005A8  EE20 F00B          	lfsr	2,11
  7723  0005AC  0100               	movlb	0	; () banked
  7724  0005AE  51DD               	movf	_ic_ptr& (0+255),w,b
  7725  0005B0  26D9               	addwf	fsr2l,f,c
  7726  0005B2  0100               	movlb	0	; () banked
  7727  0005B4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7728  0005B6  22DA               	addwfc	fsr2h,f,c
  7729  0005B8  0100               	movlb	0	; () banked
  7730  0005BA  EE10 F00A          	lfsr	1,10
  7731  0005BE  0100               	movlb	0	; () banked
  7732  0005C0  51DD               	movf	_ic_ptr& (0+255),w,b
  7733  0005C2  26E1               	addwf	fsr1l,f,c
  7734  0005C4  0100               	movlb	0	; () banked
  7735  0005C6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7736  0005C8  22E2               	addwfc	fsr1h,f,c
  7737  0005CA  50E7               	movf	indf1,w,c
  7738  0005CC  0100               	movlb	0	; () banked
  7739  0005CE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7740  0005D0  0100               	movlb	0	; () banked
  7741  0005D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7742  0005D4  0D01               	mullw	1
  7743  0005D6  50F3               	movf	prodl,w,c
  7744  0005D8  0100               	movlb	0	; () banked
  7745  0005DA  0100               	movlb	0	; () banked
  7746  0005DC  25DD               	addwf	_ic_ptr& (0+255),w,b
  7747  0005DE  6EE1               	movwf	fsr1l,c
  7748  0005E0  50F4               	movf	prodh,w,c
  7749  0005E2  0100               	movlb	0	; () banked
  7750  0005E4  0100               	movlb	0	; () banked
  7751  0005E6  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7752  0005E8  6EE2               	movwf	fsr1h,c
  7753  0005EA  CFDF FFE7          	movff	indf2,indf1
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7757  0005EE  0100               	movlb	0	; () banked
  7758  0005F0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7759  0005F2  0E28               	movlw	40
  7760  0005F4  0100               	movlb	0	; () banked
  7761  0005F6  0100               	movlb	0	; () banked
  7762  0005F8  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7763  0005FA  0100               	movlb	0	; () banked
  7764  0005FC  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7765  0005FE  0100               	movlb	0	; () banked
  7766  000600  0100               	movlb	0	; () banked
  7767  000602  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7768  000606  0100               	movlb	0	; () banked
  7769  000608  0100               	movlb	0	; () banked
  7770  00060A  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7771  00060E  0100               	movlb	0	; () banked
  7772  000610  EE20 F00A          	lfsr	2,10
  7773  000614  0100               	movlb	0	; () banked
  7774  000616  51DD               	movf	_ic_ptr& (0+255),w,b
  7775  000618  26D9               	addwf	fsr2l,f,c
  7776  00061A  0100               	movlb	0	; () banked
  7777  00061C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  00061E  22DA               	addwfc	fsr2h,f,c
  7779  000620  50DF               	movf	indf2,w,c
  7780  000622  0100               	movlb	0	; () banked
  7781  000624  6FBF               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7782  000626  0100               	movlb	0	; () banked
  7783  000628  29BF               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7784  00062A  EC74  F00D         	call	_ToMainHigh_sendmsg
  7785                           
  7786                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7787  00062E  0100               	movlb	0	; () banked
  7788  000630  EE20 F00A          	lfsr	2,10
  7789  000634  D04B               	goto	L10
  7790  000636                     i2l3211:
  7791                           
  7792                           ; BSR set to: 0
  7793  000636  0100               	movlb	0	; () banked
  7794  000638  EE20 F00E          	lfsr	2,14
  7795  00063C  0100               	movlb	0	; () banked
  7796  00063E  51DD               	movf	_ic_ptr& (0+255),w,b
  7797  000640  26D9               	addwf	fsr2l,f,c
  7798  000642  0100               	movlb	0	; () banked
  7799  000644  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7800  000646  22DA               	addwfc	fsr2h,f,c
  7801  000648  50DF               	movf	indf2,w,c
  7802  00064A  B4D8               	btfsc	status,2,c
  7803  00064C  D047               	goto	i2l3219
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7807  00064E  0100               	movlb	0	; () banked
  7808  000650  EE20 F00E          	lfsr	2,14
  7809  000654  0100               	movlb	0	; () banked
  7810  000656  51DD               	movf	_ic_ptr& (0+255),w,b
  7811  000658  26D9               	addwf	fsr2l,f,c
  7812  00065A  0100               	movlb	0	; () banked
  7813  00065C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7814  00065E  22DA               	addwfc	fsr2h,f,c
  7815  000660  50DF               	movf	indf2,w,c
  7816  000662  0100               	movlb	0	; () banked
  7817  000664  0100               	movlb	0	; () banked
  7818  000666  6FC0               	movwf	i2c_int_handler@error_buf& (0+255),b
  7819                           
  7820                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7821  000668  0100               	movlb	0	; () banked
  7822  00066A  EE20 F00D          	lfsr	2,13
  7823  00066E  0100               	movlb	0	; () banked
  7824  000670  51DD               	movf	_ic_ptr& (0+255),w,b
  7825  000672  26D9               	addwf	fsr2l,f,c
  7826  000674  0100               	movlb	0	; () banked
  7827  000676  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7828  000678  22DA               	addwfc	fsr2h,f,c
  7829  00067A  50DF               	movf	indf2,w,c
  7830  00067C  0100               	movlb	0	; () banked
  7831  00067E  0100               	movlb	0	; () banked
  7832  000680  6FC1               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7833                           
  7834                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7835  000682  0100               	movlb	0	; () banked
  7836  000684  EE20 F00B          	lfsr	2,11
  7837  000688  0100               	movlb	0	; () banked
  7838  00068A  51DD               	movf	_ic_ptr& (0+255),w,b
  7839  00068C  26D9               	addwf	fsr2l,f,c
  7840  00068E  0100               	movlb	0	; () banked
  7841  000690  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7842  000692  22DA               	addwfc	fsr2h,f,c
  7843  000694  50DF               	movf	indf2,w,c
  7844  000696  0100               	movlb	0	; () banked
  7845  000698  0100               	movlb	0	; () banked
  7846  00069A  6FC2               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7850  00069C  0100               	movlb	0	; () banked
  7851  00069E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7852  0006A0  0E29               	movlw	41
  7853  0006A2  0100               	movlb	0	; () banked
  7854  0006A4  0100               	movlb	0	; () banked
  7855  0006A6  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7856  0006A8  0100               	movlb	0	; () banked
  7857  0006AA  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7858  0006AC  0100               	movlb	0	; () banked
  7859  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  7860  0006B0  0100               	movlb	0	; () banked
  7861  0006B2  0100               	movlb	0	; () banked
  7862  0006B4  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7863  0006B6  0100               	movlb	0	; () banked
  7864  0006B8  0EC0               	movlw	low i2c_int_handler@error_buf
  7865  0006BA  0100               	movlb	0	; () banked
  7866  0006BC  0100               	movlb	0	; () banked
  7867  0006BE  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7868  0006C0  0E03               	movlw	3
  7869  0006C2  EC74  F00D         	call	_ToMainHigh_sendmsg
  7870                           
  7871                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7872  0006C6  0100               	movlb	0	; () banked
  7873  0006C8  EE20 F00E          	lfsr	2,14
  7874  0006CC                     L10:
  7875  0006CC  0100               	movlb	0	; () banked
  7876  0006CE  51DD               	movf	_ic_ptr& (0+255),w,b
  7877  0006D0  26D9               	addwf	fsr2l,f,c
  7878  0006D2  0100               	movlb	0	; () banked
  7879  0006D4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7880  0006D6  22DA               	addwfc	fsr2h,f,c
  7881  0006D8  0E00               	movlw	0
  7882  0006DA  6EDF               	movwf	indf2,c
  7883  0006DC                     i2l3219:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;my_i2c.c: 257: }
  7887                           ;my_i2c.c: 258: if (msg_to_send) {
  7888  0006DC  0100               	movlb	0	; () banked
  7889  0006DE  0100               	movlb	0	; () banked
  7890  0006E0  51C6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7891  0006E2  B4D8               	btfsc	status,2,c
  7892  0006E4  0012               	return	
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7896  0006E6  0100               	movlb	0	; () banked
  7897  0006E8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7898  0006EA  0E2A               	movlw	42
  7899  0006EC  0100               	movlb	0	; () banked
  7900  0006EE  0100               	movlb	0	; () banked
  7901  0006F0  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7902  0006F2  0100               	movlb	0	; () banked
  7903  0006F4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7904  0006F6  0100               	movlb	0	; () banked
  7905  0006F8  0100               	movlb	0	; () banked
  7906  0006FA  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7907  0006FE  0100               	movlb	0	; () banked
  7908  000700  0100               	movlb	0	; () banked
  7909  000702  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7910  000706  0E00               	movlw	0
  7911  000708  EC74  F00D         	call	_ToMainHigh_sendmsg
  7912                           
  7913                           ;my_i2c.c: 261: msg_to_send = 0;
  7914  00070C  0100               	movlb	0	; () banked
  7915  00070E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7916  000710  0E00               	movlw	0
  7917  000712  0100               	movlb	0	; () banked
  7918  000714  0100               	movlb	0	; () banked
  7919  000716  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7920  000718  0100               	movlb	0	; () banked
  7921  00071A  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7922  00071C  0012               	return	
  7923  00071E                     __end_of_i2c_int_handler:
  7924                           	opt stack 0
  7925                           pclatu	equ	0xFFB
  7926                           pclath	equ	0xFFA
  7927                           tblptru	equ	0xFF8
  7928                           tblptrh	equ	0xFF7
  7929                           tblptrl	equ	0xFF6
  7930                           tablat	equ	0xFF5
  7931                           prodh	equ	0xFF4
  7932                           prodl	equ	0xFF3
  7933                           intcon	equ	0xFF2
  7934                           postinc0	equ	0xFEE
  7935                           fsr0h	equ	0xFEA
  7936                           fsr0l	equ	0xFE9
  7937                           wreg	equ	0xFE8
  7938                           indf1	equ	0xFE7
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           bsr	equ	0xFE0
  7942                           indf2	equ	0xFDF
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           fsr2h	equ	0xFDA
  7946                           fsr2l	equ	0xFD9
  7947                           status	equ	0xFD8
  7948                           
  7949 ;; *************** function _handle_start *****************
  7950 ;; Defined at:
  7951 ;;		line 71 in file "src/my_i2c.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  data_read       1    wreg     unsigned char 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  data_read       1   52[COMRAM] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;		None               void
  7958 ;; Registers used:
  7959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7965 ;;      Params:         0       0       0       0       0
  7966 ;;      Locals:         1       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0
  7968 ;;      Totals:         1       0       0       0       0
  7969 ;;Total ram usage:        1 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_i2c_int_handler
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text48
  7979  00107E                     __ptext48:
  7980                           	opt stack 0
  7981  00107E                     _handle_start:
  7982                           	opt stack 18
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;incstack = 0
  7986                           ;handle_start@data_read stored from wreg
  7987  00107E  CFE8 F035          	movff	wreg,handle_start@data_read
  7988                           
  7989                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7990  001082  0100               	movlb	0	; () banked
  7991  001084  EE20 F00B          	lfsr	2,11
  7992  001088  0100               	movlb	0	; () banked
  7993  00108A  51DD               	movf	_ic_ptr& (0+255),w,b
  7994  00108C  26D9               	addwf	fsr2l,f,c
  7995  00108E  0100               	movlb	0	; () banked
  7996  001090  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7997  001092  22DA               	addwfc	fsr2h,f,c
  7998  001094  0E01               	movlw	1
  7999  001096  6EDF               	movwf	indf2,c
  8000                           
  8001                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8002  001098  0100               	movlb	0	; () banked
  8003  00109A  EE20 F00A          	lfsr	2,10
  8004  00109E  0100               	movlb	0	; () banked
  8005  0010A0  51DD               	movf	_ic_ptr& (0+255),w,b
  8006  0010A2  26D9               	addwf	fsr2l,f,c
  8007  0010A4  0100               	movlb	0	; () banked
  8008  0010A6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8009  0010A8  22DA               	addwfc	fsr2h,f,c
  8010  0010AA  0E00               	movlw	0
  8011  0010AC  6EDF               	movwf	indf2,c
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;my_i2c.c: 75: if (data_read) {
  8015  0010AE  5035               	movf	handle_start@data_read,w,c
  8016  0010B0  B4D8               	btfsc	status,2,c
  8017  0010B2  D03D               	goto	i2l3651
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8021  0010B4  AAC7               	btfss	4039,5,c	;volatile
  8022  0010B6  D021               	goto	i2l277
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8026  0010B8  0100               	movlb	0	; () banked
  8027  0010BA  EE20 F00C          	lfsr	2,12
  8028  0010BE  0100               	movlb	0	; () banked
  8029  0010C0  51DD               	movf	_ic_ptr& (0+255),w,b
  8030  0010C2  26D9               	addwf	fsr2l,f,c
  8031  0010C4  0100               	movlb	0	; () banked
  8032  0010C6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8033  0010C8  22DA               	addwfc	fsr2h,f,c
  8034  0010CA  0E05               	movlw	5
  8035  0010CC  6EDF               	movwf	indf2,c
  8036                           
  8037                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8038  0010CE  0100               	movlb	0	; () banked
  8039  0010D0  EE20 F00E          	lfsr	2,14
  8040  0010D4  0100               	movlb	0	; () banked
  8041  0010D6  51DD               	movf	_ic_ptr& (0+255),w,b
  8042  0010D8  26D9               	addwf	fsr2l,f,c
  8043  0010DA  0100               	movlb	0	; () banked
  8044  0010DC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8045  0010DE  22DA               	addwfc	fsr2h,f,c
  8046  0010E0  2ADF               	incf	indf2,f,c
  8047                           
  8048                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8049  0010E2  0100               	movlb	0	; () banked
  8050  0010E4  EE20 F00D          	lfsr	2,13
  8051  0010E8  0100               	movlb	0	; () banked
  8052  0010EA  51DD               	movf	_ic_ptr& (0+255),w,b
  8053  0010EC  26D9               	addwf	fsr2l,f,c
  8054  0010EE  0100               	movlb	0	; () banked
  8055  0010F0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8056  0010F2  22DA               	addwfc	fsr2h,f,c
  8057  0010F4  0E05               	movlw	5
  8058  0010F6  6EDF               	movwf	indf2,c
  8059                           
  8060                           ;my_i2c.c: 82: } else {
  8061  0010F8  0012               	return	
  8062  0010FA                     i2l277:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8066  0010FA  A4C7               	btfss	4039,2,c	;volatile
  8067  0010FC  D00C               	goto	i2l3649
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8071  0010FE  0100               	movlb	0	; () banked
  8072  001100  EE20 F00C          	lfsr	2,12
  8073  001104  0100               	movlb	0	; () banked
  8074  001106  51DD               	movf	_ic_ptr& (0+255),w,b
  8075  001108  26D9               	addwf	fsr2l,f,c
  8076  00110A  0100               	movlb	0	; () banked
  8077  00110C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8078  00110E  22DA               	addwfc	fsr2h,f,c
  8079  001110  0E08               	movlw	8
  8080  001112  6EDF               	movwf	indf2,c
  8081                           
  8082                           ;my_i2c.c: 85: } else {
  8083  001114  0012               	return	
  8084  001116                     i2l3649:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8088  001116  0100               	movlb	0	; () banked
  8089  001118  EE20 F00C          	lfsr	2,12
  8090  00111C  0100               	movlb	0	; () banked
  8091  00111E  51DD               	movf	_ic_ptr& (0+255),w,b
  8092  001120  26D9               	addwf	fsr2l,f,c
  8093  001122  0100               	movlb	0	; () banked
  8094  001124  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8095  001126  22DA               	addwfc	fsr2h,f,c
  8096  001128  0E07               	movlw	7
  8097  00112A  6EDF               	movwf	indf2,c
  8098  00112C  0012               	return	
  8099  00112E                     i2l3651:
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8103  00112E  0100               	movlb	0	; () banked
  8104  001130  EE20 F00C          	lfsr	2,12
  8105  001134  0100               	movlb	0	; () banked
  8106  001136  51DD               	movf	_ic_ptr& (0+255),w,b
  8107  001138  26D9               	addwf	fsr2l,f,c
  8108  00113A  0100               	movlb	0	; () banked
  8109  00113C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8110  00113E  22DA               	addwfc	fsr2h,f,c
  8111  001140  0E06               	movlw	6
  8112  001142  6EDF               	movwf	indf2,c
  8113  001144  0012               	return	
  8114  001146                     __end_of_handle_start:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           postinc0	equ	0xFEE
  8126                           fsr0h	equ	0xFEA
  8127                           fsr0l	equ	0xFE9
  8128                           wreg	equ	0xFE8
  8129                           indf1	equ	0xFE7
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           bsr	equ	0xFE0
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           fsr2h	equ	0xFDA
  8137                           fsr2l	equ	0xFD9
  8138                           status	equ	0xFD8
  8139                           
  8140 ;; *************** function _ToMainHigh_sendmsg *****************
  8141 ;; Defined at:
  8142 ;;		line 126 in file "src/messages.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  length          1    wreg     unsigned char 
  8145 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8146 ;;  data            2    6[BANK0 ] PTR void 
  8147 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  length          1   69[COMRAM] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      char 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8159 ;;      Params:         0       3       0       0       0
  8160 ;;      Locals:         1       0       0       0       0
  8161 ;;      Temps:          0       0       0       0       0
  8162 ;;      Totals:         1       3       0       0       0
  8163 ;;Total ram usage:        4 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    2
  8166 ;; This function calls:
  8167 ;;		i2_send_msg
  8168 ;; This function is called by:
  8169 ;;		_i2c_int_handler
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text49
  8174  001AE8                     __ptext49:
  8175                           	opt stack 0
  8176  001AE8                     _ToMainHigh_sendmsg:
  8177                           	opt stack 16
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;incstack = 0
  8181                           ;ToMainHigh_sendmsg@length stored from wreg
  8182  001AE8  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  8183                           
  8184                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8185                           ;	Return value of _ToMainHigh_sendmsg is never used
  8186  001AEC  0101               	movlb	1	; () banked
  8187  001AEE  0E01               	movlw	high _ToMainHigh_MQ
  8188  001AF0  6E40               	movwf	i2send_msg@qptr+1,c
  8189  001AF2  0101               	movlb	1	; () banked
  8190  001AF4  0E6C               	movlw	low _ToMainHigh_MQ
  8191  001AF6  6E3F               	movwf	i2send_msg@qptr,c
  8192  001AF8  C046  F041         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8193  001AFC  C0BB  F042         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8194  001B00  0100               	movlb	0	; () banked
  8195  001B02  C0BD  F044         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8196  001B06  0100               	movlb	0	; () banked
  8197  001B08  C0BC  F043         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8198  001B0C  ECD6  F007         	call	i2_send_msg	;wreg free
  8199  001B10  0012               	return	
  8200  001B12                     __end_of_ToMainHigh_sendmsg:
  8201                           	opt stack 0
  8202                           pclatu	equ	0xFFB
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           postinc0	equ	0xFEE
  8212                           fsr0h	equ	0xFEA
  8213                           fsr0l	equ	0xFE9
  8214                           wreg	equ	0xFE8
  8215                           indf1	equ	0xFE7
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           bsr	equ	0xFE0
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           postdec2	equ	0xFDD
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function i2_send_msg *****************
  8227 ;; Defined at:
  8228 ;;		line 24 in file "src/messages.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  8231 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8232 ;;  length          1   64[COMRAM] unsigned char 
  8233 ;;  msgtype         1   65[COMRAM] unsigned char 
  8234 ;;  data            2   66[COMRAM] PTR void 
  8235 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@test(2), main@uthread_data(10), 
  8236 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8239 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8240 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8241 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8242 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      char 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8252 ;;      Params:         6       0       0       0       0
  8253 ;;      Locals:         0       5       0       0       0
  8254 ;;      Temps:          1       0       0       0       0
  8255 ;;      Totals:         7       5       0       0       0
  8256 ;;Total ram usage:       12 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    1
  8259 ;; This function calls:
  8260 ;;		i2_memcpy
  8261 ;; This function is called by:
  8262 ;;		_ToMainHigh_sendmsg
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text50
  8267  000FAC                     __ptext50:
  8268                           	opt stack 0
  8269  000FAC                     i2_send_msg:
  8270                           	opt stack 16
  8271                           
  8272                           ;messages.c: 25: unsigned char slot;
  8273                           ;messages.c: 27: msg *qmsg;
  8274                           ;messages.c: 28: size_t tlength = length;
  8275                           
  8276                           ;incstack = 0
  8277  000FAC  0100               	movlb	0	; () banked
  8278  000FAE  C041  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8279  000FB2  0100               	movlb	0	; () banked
  8280  000FB4  0100               	movlb	0	; () banked
  8281  000FB6  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8285  000FB8  EE20 F034          	lfsr	2,52
  8286  000FBC  503F               	movf	i2send_msg@qptr,w,c
  8287  000FBE  26D9               	addwf	fsr2l,f,c
  8288  000FC0  5040               	movf	i2send_msg@qptr+1,w,c
  8289  000FC2  22DA               	addwfc	fsr2h,f,c
  8290  000FC4  50DF               	movf	indf2,w,c
  8291  000FC6  0100               	movlb	0	; () banked
  8292  000FC8  0100               	movlb	0	; () banked
  8293  000FCA  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8297  000FCC  0100               	movlb	0	; () banked
  8298  000FCE  0100               	movlb	0	; () banked
  8299  000FD0  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8300  000FD2  0D0D               	mullw	13
  8301  000FD4  50F3               	movf	prodl,w,c
  8302  000FD6  243F               	addwf	i2send_msg@qptr,w,c
  8303  000FD8  0100               	movlb	0	; () banked
  8304  000FDA  0100               	movlb	0	; () banked
  8305  000FDC  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8306  000FDE  50F4               	movf	prodh,w,c
  8307  000FE0  2040               	addwfc	i2send_msg@qptr+1,w,c
  8308  000FE2  0100               	movlb	0	; () banked
  8309  000FE4  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;messages.c: 41: if (qmsg->full != 0) {
  8313  000FE6  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8314  000FEA  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8315  000FEE  50DF               	movf	indf2,w,c
  8316  000FF0  B4D8               	btfsc	status,2,c
  8317  000FF2  D002               	goto	i2l3697
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;messages.c: 42: return (-1);
  8321  000FF4  0EFF               	movlw	255
  8322  000FF6  0012               	return	
  8323  000FF8                     i2l3697:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;messages.c: 43: }
  8327                           ;messages.c: 46: qmsg->length = length;
  8328  000FF8  0100               	movlb	0	; () banked
  8329  000FFA  EE20 F001          	lfsr	2,1
  8330  000FFE  0100               	movlb	0	; () banked
  8331  001000  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8332  001002  26D9               	addwf	fsr2l,f,c
  8333  001004  0100               	movlb	0	; () banked
  8334  001006  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8335  001008  22DA               	addwfc	fsr2h,f,c
  8336  00100A  C041  FFDF         	movff	i2send_msg@length,indf2
  8337                           
  8338                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8339  00100E  0100               	movlb	0	; () banked
  8340  001010  EE20 F002          	lfsr	2,2
  8341  001014  0100               	movlb	0	; () banked
  8342  001016  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8343  001018  26D9               	addwf	fsr2l,f,c
  8344  00101A  0100               	movlb	0	; () banked
  8345  00101C  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8346  00101E  22DA               	addwfc	fsr2h,f,c
  8347  001020  C042  FFDF         	movff	i2send_msg@msgtype,indf2
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8351  001024  0E03               	movlw	3
  8352  001026  0100               	movlb	0	; () banked
  8353  001028  0100               	movlb	0	; () banked
  8354  00102A  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8355  00102C  6E35               	movwf	i2memcpy@d1,c
  8356  00102E  0E00               	movlw	0
  8357  001030  0100               	movlb	0	; () banked
  8358  001032  0100               	movlb	0	; () banked
  8359  001034  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8360  001036  6E36               	movwf	i2memcpy@d1+1,c
  8361  001038  C044  F038         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8362  00103C  C043  F037         	movff	i2send_msg@data,i2memcpy@s1
  8363  001040  C0B6  F039         	movff	i2send_msg@tlength,i2memcpy@n
  8364  001044  C0B7  F03A         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8365  001048  EC81  F00C         	call	i2_memcpy	;wreg free
  8366                           
  8367                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8368  00104C  EE20 F034          	lfsr	2,52
  8369  001050  503F               	movf	i2send_msg@qptr,w,c
  8370  001052  26D9               	addwf	fsr2l,f,c
  8371  001054  5040               	movf	i2send_msg@qptr+1,w,c
  8372  001056  22DA               	addwfc	fsr2h,f,c
  8373  001058  EE10 F034          	lfsr	1,52
  8374  00105C  503F               	movf	i2send_msg@qptr,w,c
  8375  00105E  26E1               	addwf	fsr1l,f,c
  8376  001060  5040               	movf	i2send_msg@qptr+1,w,c
  8377  001062  22E2               	addwfc	fsr1h,f,c
  8378  001064  50E7               	movf	indf1,w,c
  8379  001066  6E45               	movwf	??i2_send_msg& (0+255),c
  8380  001068  2845               	incf	??i2_send_msg,w,c
  8381  00106A  0B03               	andlw	3
  8382  00106C  6EDF               	movwf	indf2,c
  8383                           
  8384                           ;messages.c: 59: qmsg->full = 1;
  8385  00106E  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8386  001072  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8387  001076  0E01               	movlw	1
  8388  001078  6EDF               	movwf	indf2,c
  8389                           
  8390                           ;messages.c: 60: return (1);
  8391  00107A  0E01               	movlw	1
  8392  00107C  0012               	return	
  8393  00107E                     __end_ofi2_send_msg:
  8394                           	opt stack 0
  8395                           pclatu	equ	0xFFB
  8396                           pclath	equ	0xFFA
  8397                           tblptru	equ	0xFF8
  8398                           tblptrh	equ	0xFF7
  8399                           tblptrl	equ	0xFF6
  8400                           tablat	equ	0xFF5
  8401                           prodh	equ	0xFF4
  8402                           prodl	equ	0xFF3
  8403                           intcon	equ	0xFF2
  8404                           postinc0	equ	0xFEE
  8405                           fsr0h	equ	0xFEA
  8406                           fsr0l	equ	0xFE9
  8407                           wreg	equ	0xFE8
  8408                           indf1	equ	0xFE7
  8409                           fsr1h	equ	0xFE2
  8410                           fsr1l	equ	0xFE1
  8411                           bsr	equ	0xFE0
  8412                           indf2	equ	0xFDF
  8413                           postinc2	equ	0xFDE
  8414                           postdec2	equ	0xFDD
  8415                           fsr2h	equ	0xFDA
  8416                           fsr2l	equ	0xFD9
  8417                           status	equ	0xFD8
  8418                           
  8419 ;; *************** function i2_memcpy *****************
  8420 ;; Defined at:
  8421 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  d1              2   52[COMRAM] PTR void 
  8424 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8425 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8426 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8427 ;;  s1              2   54[COMRAM] PTR const void 
  8428 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8429 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8430 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8431 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  8432 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8433 ;;  n               2   56[COMRAM] unsigned int 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  memcpy          2   60[COMRAM] PTR const unsigned char 
  8436 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8437 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8438 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8439 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), main@uthread_data(10), 
  8440 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8441 ;;  memcpy          2   58[COMRAM] PTR unsigned char 
  8442 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8443 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8444 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  2   52[COMRAM] PTR void 
  8447 ;; Registers used:
  8448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8454 ;;      Params:         6       0       0       0       0
  8455 ;;      Locals:         4       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0
  8457 ;;      Totals:        10       0       0       0       0
  8458 ;;Total ram usage:       10 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		i2_send_msg
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text51
  8468  001902                     __ptext51:
  8469                           	opt stack 0
  8470  001902                     i2_memcpy:
  8471                           	opt stack 16
  8472                           
  8473                           ;incstack = 0
  8474  001902  C038  F03E         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8475  001906  C037  F03D         	movff	i2memcpy@s1,i2memcpy@s
  8476  00190A  C036  F03C         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8477  00190E  C035  F03B         	movff	i2memcpy@d1,i2memcpy@d
  8478  001912  D00E               	goto	i2l3727
  8479  001914                     i2l3721:
  8480  001914  C03D  FFD9         	movff	i2memcpy@s,fsr2l
  8481  001918  C03E  FFDA         	movff	i2memcpy@s+1,fsr2h
  8482  00191C  C03B  FFE1         	movff	i2memcpy@d,fsr1l
  8483  001920  C03C  FFE2         	movff	i2memcpy@d+1,fsr1h
  8484  001924  CFDF FFE7          	movff	indf2,indf1
  8485  001928  4A3D               	infsnz	i2memcpy@s,f,c
  8486  00192A  2A3E               	incf	i2memcpy@s+1,f,c
  8487  00192C  4A3B               	infsnz	i2memcpy@d,f,c
  8488  00192E  2A3C               	incf	i2memcpy@d+1,f,c
  8489  001930                     i2l3727:
  8490  001930  0639               	decf	i2memcpy@n,f,c
  8491  001932  A0D8               	btfss	status,0,c
  8492  001934  063A               	decf	i2memcpy@n+1,f,c
  8493  001936  2839               	incf	i2memcpy@n& (0+255),w,c
  8494  001938  B4D8               	btfsc	status,2,c
  8495  00193A  283A               	incf	(i2memcpy@n+1)& (0+255),w,c
  8496  00193C  B4D8               	btfsc	status,2,c
  8497                           
  8498                           ;	Return value of i2_memcpy is never used
  8499  00193E  0012               	return	
  8500  001940  D7E9               	goto	i2l3721
  8501  001942                     __end_ofi2_memcpy:
  8502                           	opt stack 0
  8503                           pclatu	equ	0xFFB
  8504                           pclath	equ	0xFFA
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           postinc0	equ	0xFEE
  8513                           fsr0h	equ	0xFEA
  8514                           fsr0l	equ	0xFE9
  8515                           wreg	equ	0xFE8
  8516                           indf1	equ	0xFE7
  8517                           fsr1h	equ	0xFE2
  8518                           fsr1l	equ	0xFE1
  8519                           bsr	equ	0xFE0
  8520                           indf2	equ	0xFDF
  8521                           postinc2	equ	0xFDE
  8522                           postdec2	equ	0xFDD
  8523                           fsr2h	equ	0xFDA
  8524                           fsr2l	equ	0xFD9
  8525                           status	equ	0xFD8
  8526                           
  8527 ;; *************** function _SleepIfOkay *****************
  8528 ;; Defined at:
  8529 ;;		line 228 in file "src/messages.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;		None               void
  8536 ;; Registers used:
  8537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8543 ;;      Params:         0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0
  8546 ;;      Totals:         0       0       0       0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    2
  8550 ;; This function calls:
  8551 ;;		_enter_sleep_mode
  8552 ;;		i2_check_msg
  8553 ;;		i2_in_high_int
  8554 ;;		i2_in_low_int
  8555 ;; This function is called by:
  8556 ;;		_InterruptHandlerHigh
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text52
  8561  001724                     __ptext52:
  8562                           	opt stack 0
  8563  001724                     _SleepIfOkay:
  8564                           	opt stack 17
  8565                           
  8566                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8567                           
  8568                           ;incstack = 0
  8569  001724  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  8570  001726  D001               	goto	i2l2351
  8571  001728  0012               	return	
  8572  00172A                     i2l2351:
  8573                           
  8574                           ;messages.c: 232: }
  8575                           ;messages.c: 235: if (in_low_int()) {
  8576  00172A  EC48  F00D         	call	i2_in_low_int	;wreg free
  8577  00172E  5038               	movf	?i2_in_low_int+1,w,c
  8578  001730  1037               	iorwf	?i2_in_low_int,w,c
  8579  001732  A4D8               	btfss	status,2,c
  8580  001734  0012               	return	
  8581                           
  8582                           ;messages.c: 237: }
  8583                           ;messages.c: 240: if (!in_high_int()) {
  8584                           
  8585                           ;messages.c: 236: return;
  8586  001736  EC47  F00E         	call	i2_in_high_int	;wreg free
  8587  00173A  5036               	movf	?i2_in_high_int+1,w,c
  8588  00173C  1035               	iorwf	?i2_in_high_int,w,c
  8589  00173E  B4D8               	btfsc	status,2,c
  8590  001740  0012               	return	
  8591                           
  8592                           ;messages.c: 242: }
  8593                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8594                           
  8595                           ;messages.c: 241: return;
  8596  001742  0101               	movlb	1	; () banked
  8597  001744  0E01               	movlw	high _ToMainHigh_MQ
  8598  001746  6E36               	movwf	i2check_msg@qptr+1,c
  8599  001748  0101               	movlb	1	; () banked
  8600  00174A  0E6C               	movlw	low _ToMainHigh_MQ
  8601  00174C  6E35               	movwf	i2check_msg@qptr,c
  8602  00174E  ECD6  F00D         	call	i2_check_msg	;wreg free
  8603  001752  0900               	iorlw	0
  8604  001754  A4D8               	btfss	status,2,c
  8605  001756  0012               	return	
  8606                           
  8607                           ;messages.c: 249: }
  8608                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8609                           
  8610                           ;messages.c: 248: return;
  8611  001758  0100               	movlb	0	; () banked
  8612  00175A  0E00               	movlw	high _ToMainLow_MQ
  8613  00175C  6E36               	movwf	i2check_msg@qptr+1,c
  8614  00175E  0100               	movlb	0	; () banked
  8615  001760  0E80               	movlw	low _ToMainLow_MQ
  8616  001762  6E35               	movwf	i2check_msg@qptr,c
  8617  001764  ECD6  F00D         	call	i2_check_msg	;wreg free
  8618  001768  0900               	iorlw	0
  8619  00176A  B4D8               	btfsc	status,2,c
  8620                           
  8621                           ;messages.c: 252: }
  8622                           ;messages.c: 253: enter_sleep_mode();
  8623                           
  8624                           ;messages.c: 251: return;
  8625  00176C  EC51  F00E         	call	_enter_sleep_mode	;wreg free
  8626  001770  0012               	return	
  8627  001772                     __end_of_SleepIfOkay:
  8628                           	opt stack 0
  8629                           pclatu	equ	0xFFB
  8630                           pclath	equ	0xFFA
  8631                           tblptru	equ	0xFF8
  8632                           tblptrh	equ	0xFF7
  8633                           tblptrl	equ	0xFF6
  8634                           tablat	equ	0xFF5
  8635                           prodh	equ	0xFF4
  8636                           prodl	equ	0xFF3
  8637                           intcon	equ	0xFF2
  8638                           postinc0	equ	0xFEE
  8639                           fsr0h	equ	0xFEA
  8640                           fsr0l	equ	0xFE9
  8641                           wreg	equ	0xFE8
  8642                           indf1	equ	0xFE7
  8643                           fsr1h	equ	0xFE2
  8644                           fsr1l	equ	0xFE1
  8645                           bsr	equ	0xFE0
  8646                           indf2	equ	0xFDF
  8647                           postinc2	equ	0xFDE
  8648                           postdec2	equ	0xFDD
  8649                           fsr2h	equ	0xFDA
  8650                           fsr2l	equ	0xFD9
  8651                           status	equ	0xFD8
  8652                           
  8653 ;; *************** function i2_in_low_int *****************
  8654 ;; Defined at:
  8655 ;;		line 30 in file "src/interrupts.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;		None
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  2   54[COMRAM] int 
  8662 ;; Registers used:
  8663 ;;		wreg, status,2, status,0, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8669 ;;      Params:         2       0       0       0       0
  8670 ;;      Locals:         0       0       0       0       0
  8671 ;;      Temps:          0       0       0       0       0
  8672 ;;      Totals:         2       0       0       0       0
  8673 ;;Total ram usage:        2 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; Hardware stack levels required when called:    1
  8676 ;; This function calls:
  8677 ;;		i2_in_high_int
  8678 ;; This function is called by:
  8679 ;;		_SleepIfOkay
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text53
  8684  001A90                     __ptext53:
  8685                           	opt stack 0
  8686  001A90                     i2_in_low_int:
  8687                           	opt stack 17
  8688                           
  8689                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8690                           
  8691                           ;incstack = 0
  8692  001A90  ACF2               	btfss	intcon,6,c	;volatile
  8693  001A92  D005               	goto	i2l2843
  8694                           
  8695                           ;interrupts.c: 32: return (0);
  8696  001A94  0E00               	movlw	0
  8697  001A96  6E38               	movwf	?i2_in_low_int+1,c
  8698  001A98  0E00               	movlw	0
  8699  001A9A  6E37               	movwf	?i2_in_low_int,c
  8700  001A9C  0012               	return	
  8701  001A9E                     i2l2843:
  8702  001A9E  EC47  F00E         	call	i2_in_high_int	;wreg free
  8703  001AA2  5036               	movf	?i2_in_high_int+1,w,c
  8704  001AA4  1035               	iorwf	?i2_in_high_int,w,c
  8705  001AA6  B4D8               	btfsc	status,2,c
  8706  001AA8  D005               	goto	i2l2851
  8707                           
  8708                           ;interrupts.c: 34: return (0);
  8709  001AAA  0E00               	movlw	0
  8710  001AAC  6E38               	movwf	?i2_in_low_int+1,c
  8711  001AAE  0E00               	movlw	0
  8712  001AB0  6E37               	movwf	?i2_in_low_int,c
  8713  001AB2  0012               	return	
  8714  001AB4                     i2l2851:
  8715                           
  8716                           ;interrupts.c: 36: return (1);
  8717  001AB4  0E00               	movlw	0
  8718  001AB6  6E38               	movwf	?i2_in_low_int+1,c
  8719  001AB8  0E01               	movlw	1
  8720  001ABA  6E37               	movwf	?i2_in_low_int,c
  8721  001ABC  0012               	return	
  8722  001ABE                     __end_ofi2_in_low_int:
  8723                           	opt stack 0
  8724                           pclatu	equ	0xFFB
  8725                           pclath	equ	0xFFA
  8726                           tblptru	equ	0xFF8
  8727                           tblptrh	equ	0xFF7
  8728                           tblptrl	equ	0xFF6
  8729                           tablat	equ	0xFF5
  8730                           prodh	equ	0xFF4
  8731                           prodl	equ	0xFF3
  8732                           intcon	equ	0xFF2
  8733                           postinc0	equ	0xFEE
  8734                           fsr0h	equ	0xFEA
  8735                           fsr0l	equ	0xFE9
  8736                           wreg	equ	0xFE8
  8737                           indf1	equ	0xFE7
  8738                           fsr1h	equ	0xFE2
  8739                           fsr1l	equ	0xFE1
  8740                           bsr	equ	0xFE0
  8741                           indf2	equ	0xFDF
  8742                           postinc2	equ	0xFDE
  8743                           postdec2	equ	0xFDD
  8744                           fsr2h	equ	0xFDA
  8745                           fsr2l	equ	0xFD9
  8746                           status	equ	0xFD8
  8747                           
  8748 ;; *************** function i2_in_high_int *****************
  8749 ;; Defined at:
  8750 ;;		line 22 in file "src/interrupts.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;		None
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  2   52[COMRAM] int 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8764 ;;      Params:         2       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0
  8767 ;;      Totals:         2       0       0       0       0
  8768 ;;Total ram usage:        2 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_SleepIfOkay
  8774 ;;		i2_in_low_int
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text54
  8779  001C8E                     __ptext54:
  8780                           	opt stack 0
  8781  001C8E                     i2_in_high_int:
  8782                           	opt stack 17
  8783                           
  8784                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8785                           
  8786                           ;incstack = 0
  8787  001C8E  0E00               	movlw	0
  8788  001C90  AEF2               	btfss	intcon,7,c	;volatile
  8789  001C92  0E01               	movlw	1
  8790  001C94  6E35               	movwf	?i2_in_high_int,c
  8791  001C96  6A36               	clrf	?i2_in_high_int+1,c
  8792  001C98  0012               	return	
  8793  001C9A                     __end_ofi2_in_high_int:
  8794                           	opt stack 0
  8795                           pclatu	equ	0xFFB
  8796                           pclath	equ	0xFFA
  8797                           tblptru	equ	0xFF8
  8798                           tblptrh	equ	0xFF7
  8799                           tblptrl	equ	0xFF6
  8800                           tablat	equ	0xFF5
  8801                           prodh	equ	0xFF4
  8802                           prodl	equ	0xFF3
  8803                           intcon	equ	0xFF2
  8804                           postinc0	equ	0xFEE
  8805                           fsr0h	equ	0xFEA
  8806                           fsr0l	equ	0xFE9
  8807                           wreg	equ	0xFE8
  8808                           indf1	equ	0xFE7
  8809                           fsr1h	equ	0xFE2
  8810                           fsr1l	equ	0xFE1
  8811                           bsr	equ	0xFE0
  8812                           indf2	equ	0xFDF
  8813                           postinc2	equ	0xFDE
  8814                           postdec2	equ	0xFDD
  8815                           fsr2h	equ	0xFDA
  8816                           fsr2l	equ	0xFD9
  8817                           status	equ	0xFD8
  8818                           
  8819 ;; *************** function i2_check_msg *****************
  8820 ;; Defined at:
  8821 ;;		line 222 in file "src/messages.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  qptr            2   52[COMRAM] PTR struct __msg_queue
  8824 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      unsigned char 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8836 ;;      Params:         2       0       0       0       0
  8837 ;;      Locals:         0       0       0       0       0
  8838 ;;      Temps:          1       0       0       0       0
  8839 ;;      Totals:         3       0       0       0       0
  8840 ;;Total ram usage:        3 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; This function calls:
  8843 ;;		Nothing
  8844 ;; This function is called by:
  8845 ;;		_SleepIfOkay
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           	psect	text55
  8850  001BAC                     __ptext55:
  8851                           	opt stack 0
  8852  001BAC                     i2_check_msg:
  8853                           	opt stack 18
  8854                           
  8855                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8856                           
  8857                           ;incstack = 0
  8858  001BAC  EE20 F035          	lfsr	2,53
  8859  001BB0  5035               	movf	i2check_msg@qptr,w,c
  8860  001BB2  26D9               	addwf	fsr2l,f,c
  8861  001BB4  5036               	movf	i2check_msg@qptr+1,w,c
  8862  001BB6  22DA               	addwfc	fsr2h,f,c
  8863  001BB8  50DF               	movf	indf2,w,c
  8864  001BBA  6E37               	movwf	??i2_check_msg& (0+255),c
  8865  001BBC  5037               	movf	??i2_check_msg,w,c
  8866  001BBE  0D0D               	mullw	13
  8867  001BC0  50F3               	movf	prodl,w,c
  8868  001BC2  2435               	addwf	i2check_msg@qptr,w,c
  8869  001BC4  6ED9               	movwf	fsr2l,c
  8870  001BC6  50F4               	movf	prodh,w,c
  8871  001BC8  2036               	addwfc	i2check_msg@qptr+1,w,c
  8872  001BCA  6EDA               	movwf	fsr2h,c
  8873  001BCC  50DF               	movf	indf2,w,c
  8874  001BCE  0012               	return	
  8875  001BD0                     __end_ofi2_check_msg:
  8876                           	opt stack 0
  8877                           pclatu	equ	0xFFB
  8878                           pclath	equ	0xFFA
  8879                           tblptru	equ	0xFF8
  8880                           tblptrh	equ	0xFF7
  8881                           tblptrl	equ	0xFF6
  8882                           tablat	equ	0xFF5
  8883                           prodh	equ	0xFF4
  8884                           prodl	equ	0xFF3
  8885                           intcon	equ	0xFF2
  8886                           postinc0	equ	0xFEE
  8887                           fsr0h	equ	0xFEA
  8888                           fsr0l	equ	0xFE9
  8889                           wreg	equ	0xFE8
  8890                           indf1	equ	0xFE7
  8891                           fsr1h	equ	0xFE2
  8892                           fsr1l	equ	0xFE1
  8893                           bsr	equ	0xFE0
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function _enter_sleep_mode *****************
  8902 ;; Defined at:
  8903 ;;		line 202 in file "src/messages.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;		None               void
  8910 ;; Registers used:
  8911 ;;		None
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8917 ;;      Params:         0       0       0       0       0
  8918 ;;      Locals:         0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0
  8920 ;;      Totals:         0       0       0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_SleepIfOkay
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text56
  8931  001CA2                     __ptext56:
  8932                           	opt stack 0
  8933  001CA2                     _enter_sleep_mode:
  8934                           	opt stack 18
  8935                           
  8936                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8937                           
  8938                           ;incstack = 0
  8939  001CA2  8ED3               	bsf	4051,7,c	;volatile
  8940  001CA4  0003               	sleep		;# 
  8941  001CA6  0012               	return	
  8942  001CA8                     __end_of_enter_sleep_mode:
  8943                           	opt stack 0
  8944  0000                     pclatu	equ	0xFFB
  8945                           pclath	equ	0xFFA
  8946                           tblptru	equ	0xFF8
  8947                           tblptrh	equ	0xFF7
  8948                           tblptrl	equ	0xFF6
  8949                           tablat	equ	0xFF5
  8950                           prodh	equ	0xFF4
  8951                           prodl	equ	0xFF3
  8952                           intcon	equ	0xFF2
  8953                           postinc0	equ	0xFEE
  8954                           fsr0h	equ	0xFEA
  8955                           fsr0l	equ	0xFE9
  8956                           wreg	equ	0xFE8
  8957                           indf1	equ	0xFE7
  8958                           fsr1h	equ	0xFE2
  8959                           fsr1l	equ	0xFE1
  8960                           bsr	equ	0xFE0
  8961                           indf2	equ	0xFDF
  8962                           postinc2	equ	0xFDE
  8963                           postdec2	equ	0xFDD
  8964                           fsr2h	equ	0xFDA
  8965                           fsr2l	equ	0xFD9
  8966                           status	equ	0xFD8
  8967                           pclatu	equ	0xFFB
  8968                           pclath	equ	0xFFA
  8969                           tblptru	equ	0xFF8
  8970                           tblptrh	equ	0xFF7
  8971                           tblptrl	equ	0xFF6
  8972                           tablat	equ	0xFF5
  8973                           prodh	equ	0xFF4
  8974                           prodl	equ	0xFF3
  8975                           intcon	equ	0xFF2
  8976                           postinc0	equ	0xFEE
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           bsr	equ	0xFE0
  8984                           indf2	equ	0xFDF
  8985                           postinc2	equ	0xFDE
  8986                           postdec2	equ	0xFDD
  8987                           fsr2h	equ	0xFDA
  8988                           fsr2l	equ	0xFD9
  8989                           status	equ	0xFD8
  8990                           
  8991                           	psect	rparam
  8992  0000                     pclatu	equ	0xFFB
  8993                           pclath	equ	0xFFA
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           postinc0	equ	0xFEE
  9002                           fsr0h	equ	0xFEA
  9003                           fsr0l	equ	0xFE9
  9004                           wreg	equ	0xFE8
  9005                           indf1	equ	0xFE7
  9006                           fsr1h	equ	0xFE2
  9007                           fsr1l	equ	0xFE1
  9008                           bsr	equ	0xFE0
  9009                           indf2	equ	0xFDF
  9010                           postinc2	equ	0xFDE
  9011                           postdec2	equ	0xFDD
  9012                           fsr2h	equ	0xFDA
  9013                           fsr2l	equ	0xFD9
  9014                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70      74
    BANK0           128     39      95
    BANK1           256     32     196
    BANK2           256     65      65
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@test(BANK2[2]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@test(BANK2[2]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    sendUART@data	PTR unsigned char  size(2) Largest target is 2
		 -> main@test(BANK2[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@test(BANK2[2]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@test(BANK2[2]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->i1_WriteTimer1

Critical Paths under _main in BANK0

    _main->_OpenUSART
    _timer1_lthread->___lwmod
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   18546
                                             31 BANK1      1     1      0
                                              0 BANK2     65    65      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer0
                        _WriteTimer1
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                           _sendUART
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             20 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3186
                                             20 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2449
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             33 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sendUART                                             5     3      2    2821
                                             20 BANK1      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2617
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                              4 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             37 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              0 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             37 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             33 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     223
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     176
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                              4 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             33 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             33 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6909
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               6     6      0    3270
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3373
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3339
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2859
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0     266
                                              4 COMRAM     1     1      0
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2     266
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    3753
                                             19 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3517
                                              8 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2902
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             62 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             52 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             54 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             52 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             52 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer0
   _WriteTimer1
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _sendUART
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     i1_WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     41      41       8       25.4%
BITBANK1           100      0       0      10        0.0%
BANK1              100     20      C4       6       76.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     27      5F       5       74.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      4A       1       58.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE       9        0.0%
DATA                 0      0     1AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Feb 25 10:54:10 2015

               main@uthread_data 0212         _MQ_Main_Willing_to_block 0049  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1880  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1A5A  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l129 08E0                              l500 12E0  
                            l501 12E2                              l502 12F0  
                            l503 12F2                              l435 1AE2  
                            l436 1AE4                              l461 19B2  
                            l462 19B4                              l459 199A  
                            l496 12C0                              l729 1C10  
           ?_FromMainLow_sendmsg 01B2  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D7  
               ??_init_uart_recv 00D9                             l1041 139E  
                           l3051 17A8                             l3043 1786  
                           l3301 0988                             l3311 0A36  
                           l3303 09A6                             l3065 17EC  
                           l3315 0A88                             l3309 09E4  
                           l3363 199C                             l3523 0E82  
                           l3291 0932                             l3461 1448  
                           l3285 088E                             l3277 084C  
                           l3391 12C2                             l3383 12AC  
                           l3607 0BDA                             l3527 0EAA  
                           l3287 08E6                             l3295 0950  
                           l3473 14A0                             l3449 180C  
                           l3289 0914                             l3297 0968  
                           l3571 168E                             l3467 1474  
                           l3539 14F0                             l3483 0BFA  
                           l3557 0D48                             l3591 0B14  
                           l3487 0C7E                             l3577 16B2  
                           l3681 138A                             l3673 133C  
                           l3675 134E                             l3677 1356  
                           _LATA 000F89                             _LATB 000F8A  
                           i1l52 007A                             u2957 1C12  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0EDA  
                           _main 071E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0223  
                     i1_send_msg 1146                             pclat 000FFA  
                    i2_check_msg 1BAC                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0035  
                           start 00C0              i1WriteTimer1@timer1 0001  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 0FAC  
      ToMainHigh_recvmsg@msgtype 01B4                   send_msg@length 01A8  
    __size_of_timer0_int_handler 0002                      _Delay1KTCYx 1C0C  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00DD  
                          ?_main 0001                    i1_WriteTimer1 1C7C  
   __size_ofi1_ToMainLow_sendmsg 0026                            _CMCON 000FB4  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 00D7                            i1l360 1720  
                __end_of___lwmod 13A8                            i1l514 1BFC  
                     i1memcpy@d1 0001                            i1l363 16F8  
                          i2l321 0538                            i2l315 0498  
                          i2l307 0360                            i2l277 10FA  
                          i2l293 01D0                            i2l287 0526  
                          i2l289 018C                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                       i2memcpy@d1 0035  
                     i2memcpy@s1 0037                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 17FC  
     ToMainLow_recvmsg@maxlength 01B8          timer0_lthread@msgbuffer 01A8  
        i2c_configure_slave@addr 00D7                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 16CA  
               __end_ofi1_memcpy 1902                 __end_ofi2_memcpy 1942  
                __initialization 1942       uart_trans_int_handler@data 001F  
                   __end_of_main 0AA8     uart_trans_int_handler@length 0023  
    __size_of_timer1_int_handler 0024       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0036            __size_ofi2_in_low_int 002E  
  __size_of_FromMainHigh_sendmsg 0036                   ?i1_WriteTimer1 0001  
                         ??_main 01C1                  send_msg@msgtype 01A9  
                  __activetblptr 000002                  send_msg@tlength 01AD  
     FromMainLow_sendmsg@msgtype 01B2             __end_of_handle_start 1146  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3711 18D4                           i1l3717 18F0  
                         i1l3741 117E                           i1l3805 126C  
                         i2l3103 0182                           i2l3121 0208  
                         i1l3841 0070                           i2l3211 0636  
                         i2l3203 059C                           i2l3123 0234  
                         i1l3827 1712                           i1l3835 0066  
                         i2l3141 02C8                           i2l3133 0270  
                         i1l3765 0F20                           i1l3781 0FA8  
                         i2l2351 172A                           i2l3081 13EC  
                     _OpenTimer0 1ABE                       _OpenTimer1 1980  
                         i2l3219 06DC                           i2l3163 03D4  
                         i2l3139 0288                           i2l3075 13E2  
                         i2l3165 0416                   __CFG_WDTEN$OFF 000000  
                         i2l3191 04FA                           i2l3169 0428  
                         i2l3097 016A                           i2l3197 053C  
                         i2l3721 1914                           i2l2851 1AB4  
                         i2l2843 1A9E                           i2l3651 112E  
                         i2l3727 1930                           i2l3649 1116  
                         i2l3697 0FF8      __end_of_i2c_configure_slave 1B3A  
                  ??_SleepIfOkay 0039               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 010E  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0CEC  
             timer0_lthread@tptr 01A2          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1A90                      ?i2_send_msg 003F  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 00C4                 OpenTimer0@config 00D7  
                         _ic_ptr 00DD                        ??___lwmod 00DB  
                  main@msgbuffer 0200                 __end_of_init_i2c 166C  
               OpenTimer1@config 00D7                           _memcpy 166C  
                         clear_0 1948                           clear_1 1954  
                         _uc_ptr 0047                 __end_of_sendUART 183E  
                         main@ic 0225                           main@uc 021E  
               __end_of_recv_msg 0BDE      start_i2c_slave_reply@length 00DB  
                      ??_in_main 00DD                 __end_of_send_msg 0DF0  
        i2c_int_handler@i2c_data 00C5                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00DA         ToMainLow_recvmsg@msgtype 01B4  
           __size_of_in_high_int 0012          FromMainLow_sendmsg@data 01B3  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1CAA  
                     __accesstop 0080          __end_of__initialization 1976  
     __end_of_ToMainHigh_recvmsg 18C2       __end_of_ToMainHigh_sendmsg 1B12  
             ?_init_uart_lthread 00D7      __end_of_init_timer1_lthread 1C46  
            __end_of_SleepIfOkay 1772                   __pcstackCOMRAM 0001  
                   __pidataBANK1 1CA8           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D9                  ??i1_WriteTimer1 0003  
             __size_of_check_msg 0036                __end_of_ReadUSART 1C0C  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1422  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0035  
                  _ToMainHigh_MQ 016C                 _enter_sleep_mode 1CA2  
            __size_ofi2_send_msg 00D2             timer1_lthread@length 01BA  
                  ReadUSART@data 0001                __end_of_OpenUSART 131E  
                  check_msg@qptr 00D7             timer1_lthread@retval 01BF  
      __end_of_init_uart_lthread 1CAC          ??_block_on_To_msgqueues 01A2  
           __size_of_init_queues 006E                       __pbssBANK0 0080  
                     __pbssBANK1 0100                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001   uart_trans_int_handler@curIndex 0022  
                     __pnvCOMRAM 0047              i1_ToMainLow_sendmsg 1B62  
        __end_of_i2c_int_handler 071E                     ?i2_check_msg 0035  
             timer1_lthread@tptr 01B6                recv_msg@maxlength 01A8  
                recv_msg@msgtype 01A9                  recv_msg@tlength 01B0  
          __size_of_handle_start 00C8                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 00D9                          ?_memcpy 00D7  
               WriteTimer1@timer 00D9                    ??_WriteTimer0 00D9  
                  ??_WriteTimer1 00D9          __size_of_timer0_lthread 0012  
                 sendUART@length 01BA             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0072                   sendUART@retval 01B9  
                     ??i1_memcpy 0007                       ??i2_memcpy 003B  
               i1send_msg@length 000D                    i2_in_high_int 1C8E  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1A90                        ?_init_i2c 00D7  
                    _SleepIfOkay 1724                        ?_sendUART 01B6  
                      ?_recv_msg 01A6                       _in_low_int 1772  
                   _handle_start 107E                          __Hparam 0000  
                      ?_send_msg 01A6                          __Lparam 0000  
     __end_of_timer0_int_handler 1CAE      __end_of_FromMainLow_recvmsg 1B62  
    __end_of_FromMainLow_sendmsg 19EE                 init_uart_recv@uc 00D7  
                        ___lwmod 131E                  __CFG_STVREN$OFF 000000  
                        __pcinit 1942                  __size_of_memcpy 005E  
                     _init_queue 14A8                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0038                          __ptext0 071E  
                        __ptext1 0DF0                          __ptext2 19B8  
                        __ptext3 1522                          __ptext4 131E  
                        __ptext5 19EE                          __ptext6 1C22  
                        __ptext7 0BDE                          __ptext8 17FC  
                        __ptext9 1A24                uart_lthread@index 01BF  
                      _T0CONbits 000FD5                          _in_main 17B8  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1C7C  
            __end_of_WriteTimer1 1C6A                   ?i2_in_high_int 0035  
 __end_of_uart_trans_int_handler 1724       __size_of_init_uart_lthread 0002  
                 __pintcode_body 13A8             end_of_initialization 1976  
        timer1_lthread@msgbuffer 01BC     __end_of_FromMainHigh_sendmsg 1A24  
 __size_of_uart_recv_int_handler 009C       FromMainHigh_sendmsg@length 01B5  
                        memcpy@d 01A2                          memcpy@n 00DB  
                        memcpy@s 01A4    __end_of_uart_recv_int_handler 128C  
                     ??_init_i2c 00D9                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00C3                    __Lmediumconst 0000  
                        int_func 13A8                     ??i1_send_msg 0011  
                  ?_uart_lthread 01B6                       ??_sendUART 01B8  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                     ??_recv_msg 01AD                     ??i2_send_msg 0045  
                     ??_send_msg 01AC       __end_of_timer1_int_handler 1BAC  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 00BB               __end_ofi1_recv_msg 0FAC  
             __end_ofi1_send_msg 11F0      FromMainHigh_sendmsg@msgtype 01B2  
                      _TRISCbits 000F94               __end_ofi2_send_msg 107E  
                 ??_uart_lthread 00DD                        _TXSTAbits 000FAC  
                     main@length 0224                      ?_in_low_int 00D9  
             i1WriteTimer1@timer 0003            timer0_lthread@msgtype 01A4  
          _start_i2c_slave_reply 0BDE     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1CA8  
             _ToMainHigh_recvmsg 1880                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1AE8                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1C22  
                    ?_init_queue 00D7                        i2memcpy@d 003B  
                    _WriteTimer0 1C6A                      _WriteTimer1 1C58  
                      i2memcpy@n 0039                        i2memcpy@s 003D  
                 _timer1_lthread 1522                   __end_of_memcpy 16CA  
              _enable_interrupts 1C9A             __size_of_Delay1KTCYx 0016  
            ?_ToMainHigh_recvmsg 01B4                  ??i2_in_high_int 0037  
       i2c_int_handler@data_read 00C8              ?_ToMainHigh_sendmsg 00BB  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1942                    ??_in_high_int 00D9  
                      _ReadUSART 1BEE                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 01B5  
            ??_enable_interrupts 00D7                     ??_OpenTimer0 00D7  
                   ??_OpenTimer1 00D7   __size_of_block_on_To_msgqueues 007E  
  __end_of_block_on_To_msgqueues 14A8                        _OpenUSART 128C  
                   sendUART@data 01B6     __end_of_InterruptHandlerHigh 142A  
                     init_i2c@ic 00D7             ??_ToMainHigh_recvmsg 00DD  
           ??_ToMainHigh_sendmsg 0046           __end_of_timer0_lthread 1C34  
       i2c_int_handler@error_buf 00C0                      __pdataBANK1 01C2  
         __end_of_timer1_lthread 1594        __end_of_enable_interrupts 1CA2  
                       ??_memcpy 00DD            timer1_lthread@msgtype 01B8  
           _FromMainHigh_sendmsg 19EE            __end_ofi1_WriteTimer1 1C8E  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1AE8  
             __end_of_OpenTimer1 19B8         i2c_int_handler@msg_ready 00C7  
                    __pbssCOMRAM 0049                       ?_ReadUSART 0001  
                  ??_init_queues 00DB                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2                    __pcstackBANK2 0200  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00D7  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D7  
       ToMainLow_sendmsg@msgtype 01B2     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1C58                       ?_OpenUSART 00D7  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B6  
                   _ToMainLow_MQ 0080              __size_of_init_queue 007A  
                 _init_uart_recv 1BD0                        _check_msg 1A5A  
                      __pnvBANK0 00DD           ?_start_i2c_slave_reply 00D7  
              __size_of_init_i2c 006A                     recv_msg@data 01AB  
              __size_of_sendUART 0042                     recv_msg@qmsg 01B2  
                   recv_msg@slot 01AF                     recv_msg@qptr 01A6  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 0104                  ?_timer0_lthread 01A2  
                       ?___lwmod 00D7                  ?_timer1_lthread 01B6  
          ?_FromMainHigh_sendmsg 01B2                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B6             __end_of_uart_lthread 0EDA  
     i2c_int_handler@msg_to_send 00C6                         ?_in_main 00DB  
              WriteTimer0@timer0 00D7               _timer0_int_handler 1CAC  
              WriteTimer1@timer1 00D7       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 01B8            ToMainLow_sendmsg@data 01B3  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 01B6           __end_of_init_uart_recv 1BEE  
            __end_of_init_queues 1602                         _LATAbits 000F89  
                i2check_msg@qptr 0035                       ?_check_msg 00D7  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0037                         i1u191_20 1B9C  
                       i1u191_26 1B9E                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 00BC      __end_ofi1_ToMainLow_sendmsg 1B88  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                      main@F5210 01C2                   i1recv_msg@data 0010  
           ??_timer0_int_handler 0035                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1B88                         i1_memcpy 18C2  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1902             timer0_lthread@msgval 00D7  
                    _in_high_int 1C46                     send_msg@data 01AA  
            _i2c_configure_slave 1B12                     send_msg@qmsg 01B0  
                   send_msg@slot 01AF                     send_msg@qptr 01A6  
          uart_lthread@msgbuffer 01BC              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00D7                      ??_OpenUSART 00D9  
                OpenUSART@config 00DC                   ??i2_in_low_int 0039  
          _uart_recv_int_handler 11F0                     ??_in_low_int 00DB  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_sendmsg 00DD             ??_timer1_int_handler 0005  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0035  
               __size_of___lwmod 008A                     ??_init_queue 00D9  
                   ?_WriteTimer0 00D7                     ?_WriteTimer1 00D7  
       FromMainHigh_sendmsg@data 01B3          ToMainLow_sendmsg@length 01B5  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 0042  
    ToMainHigh_recvmsg@maxlength 01B8                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D7                      _init_queues 1594  
             __end_of_in_low_int 17B8                         __ptext10 0CEC  
                       __ptext11 1BD0                         __ptext20 17B8  
                       __ptext12 1CAA                         __ptext21 1772  
                       __ptext13 1C34                         __ptext30 166C  
                       __ptext22 1C46                         __ptext14 1594  
                       __ptext31 128C                         __ptext23 1A5A  
                       __ptext15 14A8                         __ptext40 1146  
                       __ptext32 1980                         __ptext24 1C0C  
                       __ptext16 1602                         __ptext41 18C2  
                       __ptext33 1ABE                         __ptext25 1C58  
                       __ptext17 1B12                         __ptext50 0FAC  
                       __ptext42 1BEE                         __ptext26 1C6A  
                       __ptext18 1C9A                         __ptext51 1902  
                       __ptext43 1B88                         __ptext35 16CA  
                       __ptext27 183E                         __ptext19 142A  
                       __ptext52 1724                         __ptext44 1C7C  
                       __ptext36 1B3A                         __ptext28 1880  
                       __ptext53 1A90                         __ptext37 0EDA  
                       __ptext29 0AA8                         __ptext54 1C8E  
                       __ptext46 1CAC                         __ptext38 11F0  
                       __ptext55 1BAC                         __ptext47 00C4  
                       __ptext39 1B62                         __ptext56 1CA2  
                       __ptext48 107E                         __ptext49 1AE8  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01BA  
             uart_lthread@status 01BE                         _init_i2c 1602  
            _init_timer1_lthread 1C34                    __size_of_main 038A  
                  ??i2_check_msg 0037                main@t1thread_data 021C  
                    ??_check_msg 00D9               __end_of_init_queue 1522  
                       _sendUART 17FC             __size_of_SleepIfOkay 004E  
                       _recv_msg 0AA8            ??_i2c_configure_slave 00D7  
                       _send_msg 0CEC                   init_queue@qptr 00D7  
          __size_of_uart_lthread 00EA    uart_trans_int_handler@msgtype 0021  
                  ??_Delay1KTCYx 00D7                         main@baud 0210  
            _InterruptHandlerLow 0018                         main@test 020D  
           ?_init_timer1_lthread 00D7         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00D7                         memcpy@d1 00D7  
                       memcpy@s1 00D9            __end_ofi2_in_high_int 1C9A  
   i2c_int_handler@overrun_error 00C4                 i2send_msg@length 0041  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D9  
               ___lwmod@dividend 00D7           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0DF0                   main@UARTConfig 0211  
          _block_on_To_msgqueues 142A                    ?_handle_start 0001  
               ??_timer0_lthread 00D7      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01BE                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0046  
            __end_ofi2_check_msg 1BD0            ??_init_timer1_lthread 00D9  
         ??_InterruptHandlerHigh 00C9                _ToMainLow_recvmsg 183E  
              _ToMainLow_sendmsg 1A24               main@last_reg_recvd 020F  
                ___lwmod@divisor 00D9             __end_ofi2_in_low_int 1ABE  
             ?_ToMainLow_recvmsg 01B4              __end_of_Delay1KTCYx 1C22  
              ??_i2c_int_handler 00BE                  ___lwmod@counter 00DC  
             ?_ToMainLow_sendmsg 01B2                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0043  
          ??_InterruptHandlerLow 0024              ??_ToMainLow_recvmsg 00DD  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003F              ??_ToMainLow_sendmsg 00DD  
         __size_ofi1_WriteTimer1 0012              _FromMainLow_recvmsg 1B3A  
                 ??_handle_start 0035              _FromMainLow_sendmsg 19B8  
                   _USART_Status 004A  
