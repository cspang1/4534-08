

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Mar 19 08:56:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  001CB6                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for moveDir@F5164
    81  001CB6  50                 	db	80
    82  001CB7  CD                 	db	205
    83                           
    84                           ;initializer for timer0_lthread@F5150
    85  001CB8  C7                 	db	199
    86  001CB9  48                 	db	72
    87  0000                     _ADCON1	set	4033
    88  0000                     _CMCON	set	4020
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATA	set	3977
    93  0000                     _LATB	set	3978
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTA	set	3968
   100  0000                     _PORTB	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG	set	4014
   103  0000                     _RCSTA	set	4011
   104  0000                     _RCSTAbits	set	4011
   105  0000                     _SPBRG	set	4015
   106  0000                     _SPBRGH	set	4016
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR1H	set	4047
   118  0000                     _TMR1L	set	4046
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TXREG	set	4013
   123  0000                     _TXSTA	set	4012
   124  0000                     _TXSTAbits	set	4012
   125                           
   126                           	psect	nvCOMRAM
   127  000049                     __pnvCOMRAM:
   128                           	opt stack 0
   129  000049                     _uc_ptr:
   130                           	opt stack 0
   131  000049                     	ds	2
   132                           
   133                           	psect	nvBANK0
   134  0000D3                     __pnvBANK0:
   135                           	opt stack 0
   136  0000D3                     _ic_ptr:
   137                           	opt stack 0
   138  0000D3                     	ds	2
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  0017E4                     __pcinit:
   144                           	opt stack 0
   145  0017E4                     start_initialization:
   146                           	opt stack 0
   147  0017E4                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Clear objects allocated to BANK2 (108 bytes)
   151  0017E4  EE02  F000         	lfsr	0,__pbssBANK2
   152  0017E8  0E6C               	movlw	108
   153  0017EA                     clear_0:
   154  0017EA  6AEE               	clrf	postinc0,c
   155  0017EC  06E8               	decf	wreg,f,c
   156  0017EE  E1FD               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to BANK1 (108 bytes)
   159  0017F0  EE01  F06E         	lfsr	0,__pbssBANK1
   160  0017F4  0E6C               	movlw	108
   161  0017F6                     clear_1:
   162  0017F6  6AEE               	clrf	postinc0,c
   163  0017F8  06E8               	decf	wreg,f,c
   164  0017FA  E1FD               	bnz	clear_1
   165                           
   166                           ; Clear objects allocated to BANK0 (4 bytes)
   167  0017FC  0100               	movlb	0
   168  0017FE  6BCE               	clrf	(__pbssBANK0+3)& (0+255),b
   169  001800  6BCD               	clrf	(__pbssBANK0+2)& (0+255),b
   170  001802  6BCC               	clrf	(__pbssBANK0+1)& (0+255),b
   171  001804  6BCB               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (2 bytes)
   174  001806  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   175  001808  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   176                           
   177                           ; Initialize objects allocated to BANK0 (4 bytes)
   178                           ; load TBLPTR registers with __pidataBANK0
   179  00180A  0EB6               	movlw	low __pidataBANK0
   180  00180C  6EF6               	movwf	tblptrl,c
   181  00180E  0E1C               	movlw	high __pidataBANK0
   182  001810  6EF7               	movwf	tblptrh,c
   183  001812  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   184  001814  6EF8               	movwf	tblptru,c
   185  001816  EE00  F0CF         	lfsr	0,__pdataBANK0
   186  00181A  EE10 F004          	lfsr	1,4
   187  00181E                     copy_data0:
   188  00181E  0009               	tblrd		*+
   189  001820  CFF5 FFEE          	movff	tablat,postinc0
   190  001824  50E5               	movf	postdec1,w,c
   191  001826  50E1               	movf	fsr1l,w,c
   192  001828  E1FA               	bnz	copy_data0
   193  00182A                     end_of_initialization:
   194                           	opt stack 0
   195  00182A                     __end_of__initialization:
   196                           	opt stack 0
   197  00182A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  00182C  6EF8               	movwf	tblptru,c
   199  00182E  0100               	movlb	0
   200  001830  EF1A  F003         	goto	_main	;jump to C main() function
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           postdec1	equ	0xFE5
   208                           fsr1l	equ	0xFE1
   209                           
   210                           	psect	bssCOMRAM
   211  00004B                     __pbssCOMRAM:
   212                           	opt stack 0
   213  00004B                     _MQ_Main_Willing_to_block:
   214                           	opt stack 0
   215  00004B                     	ds	1
   216  00004C                     _USART_Status:
   217                           	opt stack 0
   218  00004C                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           postdec1	equ	0xFE5
   226                           fsr1l	equ	0xFE1
   227                           
   228                           	psect	bssBANK0
   229  0000CB                     __pbssBANK0:
   230                           	opt stack 0
   231  0000CB                     timer1_lthread@F5158:
   232                           	opt stack 0
   233  0000CB                     	ds	2
   234  0000CD                     timer1_lthread@F5160:
   235                           	opt stack 0
   236  0000CD                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           postdec1	equ	0xFE5
   244                           fsr1l	equ	0xFE1
   245                           
   246                           	psect	dataBANK0
   247  0000CF                     __pdataBANK0:
   248                           	opt stack 0
   249  0000CF                     moveDir@F5164:
   250                           	opt stack 0
   251  0000CF                     	ds	2
   252  0000D1                     timer0_lthread@F5150:
   253                           	opt stack 0
   254  0000D1                     	ds	2
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	bssBANK1
   265  00016E                     __pbssBANK1:
   266                           	opt stack 0
   267  00016E                     _ToMainHigh_MQ:
   268                           	opt stack 0
   269  00016E                     	ds	54
   270  0001A4                     _ToMainLow_MQ:
   271                           	opt stack 0
   272  0001A4                     	ds	54
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainHigh_MQ:
   286                           	opt stack 0
   287  000200                     	ds	54
   288  000236                     _FromMainLow_MQ:
   289                           	opt stack 0
   290  000236                     	ds	54
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	cstackBANK1
   301  000100                     __pcstackBANK1:
   302                           	opt stack 0
   303  000100                     main@msgbuffer:
   304                           	opt stack 0
   305                           
   306                           ; 11 bytes @ 0x0
   307  000100                     	ds	11
   308  00010B                     main@baud:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0xB
   312  00010B                     	ds	1
   313  00010C                     main@UARTConfig:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xC
   317  00010C                     	ds	1
   318  00010D                     main@last_reg_recvd:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xD
   322  00010D                     	ds	1
   323  00010E                     main@uthread_data:
   324                           	opt stack 0
   325                           
   326                           ; 10 bytes @ 0xE
   327  00010E                     	ds	10
   328  000118                     main@t0thread_data:
   329                           	opt stack 0
   330                           
   331                           ; 4 bytes @ 0x18
   332  000118                     	ds	4
   333  00011C                     main@ctrl:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x1C
   337  00011C                     	ds	2
   338  00011E                     main@uc:
   339                           	opt stack 0
   340                           
   341                           ; 5 bytes @ 0x1E
   342  00011E                     	ds	5
   343  000123                     main@msgtype:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x23
   347  000123                     	ds	1
   348  000124                     main@length:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x24
   352  000124                     	ds	1
   353  000125                     main@t1thread_data:
   354                           	opt stack 0
   355                           
   356                           ; 45 bytes @ 0x25
   357  000125                     	ds	45
   358  000152                     main@ic:
   359                           	opt stack 0
   360                           
   361                           ; 28 bytes @ 0x52
   362  000152                     	ds	28
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           	psect	cstackBANK0
   373  000080                     __pcstackBANK0:
   374                           	opt stack 0
   375  000080                     i2send_msg@tlength:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379  000080                     	ds	2
   380  000082                     i2send_msg@slot:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x2
   384  000082                     	ds	1
   385  000083                     i2send_msg@qmsg:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x3
   389  000083                     	ds	2
   390  000085                     ??_i2c_int_handler:
   391                           
   392                           ; 0 bytes @ 0x5
   393  000085                     	ds	1
   394  000086                     i2c_int_handler@error_buf:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x6
   398  000086                     	ds	3
   399  000089                     i2c_int_handler@data_written:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x9
   403  000089                     	ds	1
   404  00008A                     i2c_int_handler@overrun_error:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0xA
   408  00008A                     	ds	1
   409  00008B                     i2c_int_handler@i2c_data:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0xB
   413  00008B                     	ds	1
   414  00008C                     i2c_int_handler@msg_to_send:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xC
   418  00008C                     	ds	1
   419  00008D                     i2c_int_handler@msg_ready:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0xD
   423  00008D                     	ds	1
   424  00008E                     i2c_int_handler@data_read:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0xE
   428  00008E                     	ds	1
   429  00008F                     ??_InterruptHandlerHigh:
   430                           
   431                           ; 0 bytes @ 0xF
   432  00008F                     	ds	14
   433  00009D                     ?_in_high_int:
   434                           	opt stack 0
   435  00009D                     ?___awmod:
   436                           	opt stack 0
   437  00009D                     ?___lwmod:
   438                           	opt stack 0
   439  00009D                     i2c_configure_slave@addr:
   440                           	opt stack 0
   441  00009D                     OpenTimer1@config:
   442                           	opt stack 0
   443  00009D                     Delay1KTCYx@unit:
   444                           	opt stack 0
   445  00009D                     init_queue@qptr:
   446                           	opt stack 0
   447  00009D                     check_msg@qptr:
   448                           	opt stack 0
   449  00009D                     start_i2c_slave_reply@msg:
   450                           	opt stack 0
   451  00009D                     init_i2c@ic:
   452                           	opt stack 0
   453  00009D                     init_uart_recv@uc:
   454                           	opt stack 0
   455  00009D                     init_timer0_lthread@tptr:
   456                           	opt stack 0
   457  00009D                     init_timer1_lthread@tptr:
   458                           	opt stack 0
   459  00009D                     init_uart_lthread@uptr:
   460                           	opt stack 0
   461  00009D                     WriteTimer1@timer1:
   462                           	opt stack 0
   463  00009D                     OpenUSART@spbrg:
   464                           	opt stack 0
   465  00009D                     ___awmod@dividend:
   466                           	opt stack 0
   467  00009D                     ___lwmod@dividend:
   468                           	opt stack 0
   469  00009D                     memcpy@d1:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1D
   473  00009D                     	ds	2
   474  00009F                     ??_OpenUSART:
   475  00009F                     ??_start_i2c_slave_reply:
   476  00009F                     ??_check_msg:
   477  00009F                     ?_in_low_int:
   478                           	opt stack 0
   479  00009F                     init_queue@i:
   480                           	opt stack 0
   481  00009F                     WriteTimer1@timer:
   482                           	opt stack 0
   483  00009F                     ___awmod@divisor:
   484                           	opt stack 0
   485  00009F                     ___lwmod@divisor:
   486                           	opt stack 0
   487  00009F                     memcpy@s1:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x1F
   491  00009F                     	ds	1
   492  0000A0                     
   493                           ; 0 bytes @ 0x20
   494  0000A0                     	ds	1
   495  0000A1                     ?_in_main:
   496                           	opt stack 0
   497  0000A1                     start_i2c_slave_reply@length:
   498                           	opt stack 0
   499  0000A1                     ___awmod@counter:
   500                           	opt stack 0
   501  0000A1                     ___lwmod@counter:
   502                           	opt stack 0
   503  0000A1                     memcpy@n:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x21
   507  0000A1                     	ds	1
   508  0000A2                     OpenUSART@config:
   509                           	opt stack 0
   510  0000A2                     ___awmod@sign:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x22
   514  0000A2                     	ds	1
   515  0000A3                     memcpy@d:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x23
   519  0000A3                     	ds	2
   520  0000A5                     memcpy@s:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x25
   524  0000A5                     	ds	2
   525  0000A7                     send_msg@qptr:
   526                           	opt stack 0
   527  0000A7                     recv_msg@qptr:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x27
   531  0000A7                     	ds	2
   532  0000A9                     send_msg@length:
   533                           	opt stack 0
   534  0000A9                     recv_msg@maxlength:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x29
   538  0000A9                     	ds	1
   539  0000AA                     send_msg@msgtype:
   540                           	opt stack 0
   541  0000AA                     recv_msg@msgtype:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x2A
   545  0000AA                     	ds	1
   546  0000AB                     send_msg@data:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x2B
   550  0000AB                     	ds	1
   551  0000AC                     recv_msg@data:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x2C
   555  0000AC                     	ds	1
   556  0000AD                     ??_send_msg:
   557                           
   558                           ; 0 bytes @ 0x2D
   559  0000AD                     	ds	1
   560  0000AE                     ??_recv_msg:
   561  0000AE                     send_msg@tlength:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x2E
   565  0000AE                     	ds	2
   566  0000B0                     send_msg@slot:
   567                           	opt stack 0
   568  0000B0                     recv_msg@slot:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x30
   572  0000B0                     	ds	1
   573  0000B1                     send_msg@qmsg:
   574                           	opt stack 0
   575  0000B1                     recv_msg@tlength:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x31
   579  0000B1                     	ds	2
   580  0000B3                     ToMainLow_sendmsg@msgtype:
   581                           	opt stack 0
   582  0000B3                     FromMainLow_sendmsg@msgtype:
   583                           	opt stack 0
   584  0000B3                     recv_msg@qmsg:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x33
   588  0000B3                     	ds	1
   589  0000B4                     ToMainLow_sendmsg@data:
   590                           	opt stack 0
   591  0000B4                     FromMainLow_sendmsg@data:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x34
   595  0000B4                     	ds	1
   596  0000B5                     ToMainLow_recvmsg@msgtype:
   597                           	opt stack 0
   598  0000B5                     ToMainHigh_recvmsg@msgtype:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x35
   602  0000B5                     	ds	1
   603  0000B6                     ToMainLow_sendmsg@length:
   604                           	opt stack 0
   605  0000B6                     FromMainLow_sendmsg@length:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x36
   609  0000B6                     	ds	1
   610  0000B7                     ToMainLow_recvmsg@data:
   611                           	opt stack 0
   612  0000B7                     ToMainHigh_recvmsg@data:
   613                           	opt stack 0
   614  0000B7                     sendUARTarr@data:
   615                           	opt stack 0
   616  0000B7                     uart_lthread@uptr:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x37
   620  0000B7                     	ds	2
   621  0000B9                     ToMainLow_recvmsg@maxlength:
   622                           	opt stack 0
   623  0000B9                     ToMainHigh_recvmsg@maxlength:
   624                           	opt stack 0
   625  0000B9                     sendUARTarr@retval:
   626                           	opt stack 0
   627  0000B9                     uart_lthread@msgtype:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x39
   631  0000B9                     	ds	1
   632  0000BA                     sendUARTarr@length:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x3A
   636  0000BA                     	ds	1
   637  0000BB                     timer0_lthread@tptr:
   638                           	opt stack 0
   639  0000BB                     timer1_lthread@tptr:
   640                           	opt stack 0
   641  0000BB                     moveDir@tptr:
   642                           	opt stack 0
   643  0000BB                     uart_lthread@length:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x3B
   647  0000BB                     	ds	2
   648  0000BD                     timer0_lthread@msgtype:
   649                           	opt stack 0
   650  0000BD                     timer1_lthread@msgtype:
   651                           	opt stack 0
   652  0000BD                     moveDir@cmDist:
   653                           	opt stack 0
   654  0000BD                     uart_lthread@msgbuffer:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x3D
   658  0000BD                     	ds	2
   659  0000BF                     uart_lthread@status:
   660                           	opt stack 0
   661  0000BF                     timer0_lthread@length:
   662                           	opt stack 0
   663  0000BF                     timer1_lthread@length:
   664                           	opt stack 0
   665  0000BF                     moveDir@test:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x3F
   669  0000BF                     	ds	1
   670  0000C0                     uart_lthread@index:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x40
   674  0000C0                     	ds	1
   675  0000C1                     timer0_lthread@msgbuffer:
   676                           	opt stack 0
   677  0000C1                     timer1_lthread@msgbuffer:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x41
   681  0000C1                     	ds	2
   682  0000C3                     ??_timer1_lthread:
   683  0000C3                     timer0_lthread@msgval:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x43
   687  0000C3                     	ds	2
   688  0000C5                     timer0_lthread@temp:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x45
   692  0000C5                     	ds	2
   693  0000C7                     timer1_lthread@temp:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x47
   697  0000C7                     	ds	2
   698  0000C9                     timer1_lthread@temp_1753:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x49
   702  0000C9                     	ds	2
   703  0000CB                     tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           postdec1	equ	0xFE5
   710                           fsr1l	equ	0xFE1
   711                           
   712                           ; 0 bytes @ 0x4B
   713                           
   714                           	psect	cstackCOMRAM
   715  000001                     __pcstackCOMRAM:
   716                           	opt stack 0
   717  000001                     ReadUSART@data:
   718                           	opt stack 0
   719  000001                     i1memcpy@d1:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x0
   723  000001                     	ds	2
   724  000003                     i1memcpy@s1:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x2
   728  000003                     	ds	2
   729  000005                     i1memcpy@n:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x4
   733  000005                     	ds	2
   734  000007                     i1memcpy@d:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x6
   738  000007                     	ds	2
   739  000009                     i1memcpy@s:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x8
   743  000009                     	ds	2
   744  00000B                     i1send_msg@qptr:
   745                           	opt stack 0
   746  00000B                     i1recv_msg@qptr:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0xA
   750  00000B                     	ds	2
   751  00000D                     i1send_msg@length:
   752                           	opt stack 0
   753  00000D                     i1recv_msg@maxlength:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0xC
   757  00000D                     	ds	1
   758  00000E                     i1send_msg@msgtype:
   759                           	opt stack 0
   760  00000E                     i1recv_msg@msgtype:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0xD
   764  00000E                     	ds	1
   765  00000F                     i1send_msg@data:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0xE
   769  00000F                     	ds	1
   770  000010                     i1recv_msg@data:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0xF
   774  000010                     	ds	1
   775  000011                     ??i1_send_msg:
   776                           
   777                           ; 0 bytes @ 0x10
   778  000011                     	ds	1
   779  000012                     ??i1_recv_msg:
   780  000012                     i1send_msg@tlength:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x11
   784  000012                     	ds	2
   785  000014                     i1send_msg@slot:
   786                           	opt stack 0
   787  000014                     i1recv_msg@slot:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x13
   791  000014                     	ds	1
   792  000015                     i1send_msg@qmsg:
   793                           	opt stack 0
   794  000015                     i1recv_msg@tlength:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x14
   798  000015                     	ds	2
   799  000017                     i1ToMainLow_sendmsg@msgtype:
   800                           	opt stack 0
   801  000017                     i1recv_msg@qmsg:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x16
   805  000017                     	ds	1
   806  000018                     i1ToMainLow_sendmsg@data:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x17
   810  000018                     	ds	1
   811  000019                     FromMainLow_recvmsg@msgtype:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x18
   815  000019                     	ds	1
   816  00001A                     i1ToMainLow_sendmsg@length:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x19
   820  00001A                     	ds	1
   821  00001B                     ??_uart_recv_int_handler:
   822  00001B                     FromMainLow_recvmsg@data:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x1A
   826  00001B                     	ds	2
   827  00001D                     FromMainLow_recvmsg@maxlength:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1C
   831  00001D                     	ds	1
   832  00001E                     uart_trans_int_handler@data:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x1D
   836  00001E                     	ds	2
   837  000020                     uart_trans_int_handler@msgtype:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x1F
   841  000020                     	ds	1
   842  000021                     uart_trans_int_handler@curIndex:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x20
   846  000021                     	ds	1
   847  000022                     uart_trans_int_handler@length:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x21
   851  000022                     	ds	1
   852  000023                     ??_InterruptHandlerLow:
   853                           
   854                           ; 0 bytes @ 0x22
   855  000023                     	ds	17
   856  000034                     ?i2_in_high_int:
   857                           	opt stack 0
   858  000034                     handle_start@data_read:
   859                           	opt stack 0
   860  000034                     i2check_msg@qptr:
   861                           	opt stack 0
   862  000034                     i2memcpy@d1:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x33
   866  000034                     	ds	2
   867  000036                     ??i2_check_msg:
   868  000036                     ?i2_in_low_int:
   869                           	opt stack 0
   870  000036                     i2memcpy@s1:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x35
   874  000036                     	ds	2
   875  000038                     i2memcpy@n:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x37
   879  000038                     	ds	2
   880  00003A                     i2memcpy@d:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x39
   884  00003A                     	ds	2
   885  00003C                     i2memcpy@s:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x3B
   889  00003C                     	ds	2
   890  00003E                     i2send_msg@qptr:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x3D
   894  00003E                     	ds	2
   895  000040                     i2send_msg@length:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x3F
   899  000040                     	ds	1
   900  000041                     i2send_msg@msgtype:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x40
   904  000041                     	ds	1
   905  000042                     i2send_msg@data:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x41
   909  000042                     	ds	2
   910  000044                     ??i2_send_msg:
   911                           
   912                           ; 0 bytes @ 0x43
   913  000044                     	ds	1
   914  000045                     ToMainHigh_sendmsg@msgtype:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x44
   918  000045                     	ds	1
   919  000046                     ToMainHigh_sendmsg@data:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x45
   923  000046                     	ds	2
   924  000048                     ToMainHigh_sendmsg@length:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x47
   928  000048                     	ds	1
   929                           tblptru	equ	0xFF8
   930                           tblptrh	equ	0xFF7
   931                           tblptrl	equ	0xFF6
   932                           tablat	equ	0xFF5
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           postdec1	equ	0xFE5
   936                           fsr1l	equ	0xFE1
   937                           
   938 ;;
   939 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   940 ;;
   941 ;; *************** function _main *****************
   942 ;; Defined at:
   943 ;;		line 29 in file "src/main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  ctrl            2   28[BANK1 ] unsigned char [2]
   948 ;;  t1thread_dat   45   37[BANK1 ] struct __timer1_thread_s
   949 ;;  ic             28   82[BANK1 ] struct __i2c_comm
   950 ;;  pbthread_dat   15    0        struct __portb_thread_st
   951 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   952 ;;  uthread_data   10   14[BANK1 ] struct __uart_thread_str
   953 ;;  uc              5   30[BANK1 ] struct __uart_comm
   954 ;;  t0thread_dat    4   24[BANK1 ] struct __timer0_thread_s
   955 ;;  length          1   36[BANK1 ] char 
   956 ;;  msgtype         1   35[BANK1 ] unsigned char 
   957 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   958 ;;  UARTConfig      1   12[BANK1 ] unsigned char 
   959 ;;  baud            1   11[BANK1 ] unsigned char 
   960 ;;  i               1    0        unsigned char 
   961 ;;  c               1    0        unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;		None               void
   964 ;; Registers used:
   965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       0     110       0       0
   973 ;;      Temps:          0       0       0       0       0
   974 ;;      Totals:         0       0     110       0       0
   975 ;;Total ram usage:      110 bytes
   976 ;; Hardware stack levels required when called:   15
   977 ;; This function calls:
   978 ;;		_OpenTimer1
   979 ;;		_OpenUSART
   980 ;;		_ToMainHigh_recvmsg
   981 ;;		_ToMainLow_recvmsg
   982 ;;		_block_on_To_msgqueues
   983 ;;		_enable_interrupts
   984 ;;		_i2c_configure_slave
   985 ;;		_init_i2c
   986 ;;		_init_queues
   987 ;;		_init_timer0_lthread
   988 ;;		_init_timer1_lthread
   989 ;;		_init_uart_lthread
   990 ;;		_init_uart_recv
   991 ;;		_moveDir
   992 ;;		_sendUARTarr
   993 ;;		_start_i2c_slave_reply
   994 ;;		_timer0_lthread
   995 ;;		_timer1_lthread
   996 ;;		_uart_lthread
   997 ;; This function is called by:
   998 ;;		Startup code after reset
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text0
  1003  000634                     __ptext0:
  1004                           	opt stack 0
  1005  000634                     _main:
  1006                           	opt stack 16
  1007                           
  1008                           ;main.c: 30: char c;
  1009                           ;main.c: 31: signed char length;
  1010                           ;main.c: 32: unsigned char msgtype;
  1011                           ;main.c: 33: unsigned char last_reg_recvd;
  1012                           ;main.c: 34: unsigned char baud, UARTConfig;
  1013                           ;main.c: 35: uart_comm uc;
  1014                           ;main.c: 36: i2c_comm ic;
  1015                           ;main.c: 37: unsigned char msgbuffer[10 + 1];
  1016                           ;main.c: 38: unsigned char i;
  1017                           ;main.c: 39: uart_thread_struct uthread_data;
  1018                           ;main.c: 40: timer1_thread_struct t1thread_data;
  1019                           ;main.c: 41: timer0_thread_struct t0thread_data;
  1020                           ;main.c: 42: portb_thread_struct pbthread_data;
  1021                           ;main.c: 45: PORTA = 0x0;
  1022                           
  1023                           ;incstack = 0
  1024  000634  0E00               	movlw	0
  1025  000636  6E80               	movwf	3968,c	;volatile
  1026                           
  1027                           ;main.c: 46: LATA = 0x0;
  1028  000638  0E00               	movlw	0
  1029  00063A  6E89               	movwf	3977,c	;volatile
  1030                           
  1031                           ;main.c: 47: ADCON1 = 0x0F;
  1032  00063C  0E0F               	movlw	15
  1033  00063E  6EC1               	movwf	4033,c	;volatile
  1034                           
  1035                           ;main.c: 48: CMCON = 0x07;
  1036  000640  0E07               	movlw	7
  1037  000642  6EB4               	movwf	4020,c	;volatile
  1038                           
  1039                           ;main.c: 49: TRISA = 0x00;
  1040  000644  0E00               	movlw	0
  1041  000646  6E92               	movwf	3986,c	;volatile
  1042                           
  1043                           ;main.c: 52: PORTB = 0x0;
  1044  000648  0E00               	movlw	0
  1045  00064A  6E81               	movwf	3969,c	;volatile
  1046                           
  1047                           ;main.c: 53: LATB = 0x0;
  1048  00064C  0E00               	movlw	0
  1049  00064E  6E8A               	movwf	3978,c	;volatile
  1050                           
  1051                           ;main.c: 54: TRISB = 0xFF;
  1052  000650  6893               	setf	3987,c	;volatile
  1053                           
  1054                           ;main.c: 56: OSCCON = 0x82;
  1055  000652  0E82               	movlw	130
  1056  000654  6ED3               	movwf	4051,c	;volatile
  1057                           
  1058                           ;main.c: 57: OSCTUNEbits.PLLEN = 1;
  1059  000656  8C9B               	bsf	3995,6,c	;volatile
  1060                           
  1061                           ;main.c: 60: init_uart_recv(&uc);
  1062  000658  0101               	movlb	1	; () banked
  1063  00065A  0E01               	movlw	high main@uc
  1064  00065C  0100               	movlb	0	; () banked
  1065  00065E  6F9E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1066  000660  0101               	movlb	1	; () banked
  1067  000662  0E1E               	movlw	low main@uc
  1068  000664  0100               	movlb	0	; () banked
  1069  000666  6F9D               	movwf	init_uart_recv@uc& (0+255),b
  1070  000668  EC07  F00E         	call	_init_uart_recv	;wreg free
  1071                           
  1072                           ;main.c: 63: init_i2c(&ic);
  1073  00066C  0101               	movlb	1	; () banked
  1074  00066E  0E01               	movlw	high main@ic
  1075  000670  0100               	movlb	0	; () banked
  1076  000672  6F9E               	movwf	(init_i2c@ic+1)& (0+255),b
  1077  000674  0101               	movlb	1	; () banked
  1078  000676  0E52               	movlw	low main@ic
  1079  000678  0100               	movlb	0	; () banked
  1080  00067A  6F9D               	movwf	init_i2c@ic& (0+255),b
  1081  00067C  ECD9  F00A         	call	_init_i2c	;wreg free
  1082                           
  1083                           ;main.c: 66: init_timer1_lthread(&t1thread_data);
  1084  000680  0101               	movlb	1	; () banked
  1085  000682  0E01               	movlw	high main@t1thread_data
  1086  000684  0100               	movlb	0	; () banked
  1087  000686  6F9E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1088  000688  0101               	movlb	1	; () banked
  1089  00068A  0E25               	movlw	low main@t1thread_data
  1090  00068C  0100               	movlb	0	; () banked
  1091  00068E  6F9D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1092  000690  ECD4  F006         	call	_init_timer1_lthread	;wreg free
  1093                           
  1094                           ;main.c: 69: init_timer0_lthread(&t0thread_data);
  1095  000694  0101               	movlb	1	; () banked
  1096  000696  0E01               	movlw	high main@t0thread_data
  1097  000698  0100               	movlb	0	; () banked
  1098  00069A  6F9E               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1099  00069C  0101               	movlb	1	; () banked
  1100  00069E  0E18               	movlw	low main@t0thread_data
  1101  0006A0  0100               	movlb	0	; () banked
  1102  0006A2  6F9D               	movwf	init_timer0_lthread@tptr& (0+255),b
  1103  0006A4  EC25  F00E         	call	_init_timer0_lthread	;wreg free
  1104                           
  1105                           ;main.c: 72: init_uart_lthread(&uthread_data);
  1106  0006A8  0101               	movlb	1	; () banked
  1107  0006AA  0E01               	movlw	high main@uthread_data
  1108  0006AC  0100               	movlb	0	; () banked
  1109  0006AE  6F9E               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1110  0006B0  0101               	movlb	1	; () banked
  1111  0006B2  0E0E               	movlw	low main@uthread_data
  1112  0006B4  0100               	movlb	0	; () banked
  1113  0006B6  6F9D               	movwf	init_uart_lthread@uptr& (0+255),b
  1114  0006B8  EC5D  F00E         	call	_init_uart_lthread	;wreg free
  1115                           
  1116                           ;main.c: 75: init_queues();
  1117  0006BC  EC9C  F00B         	call	_init_queues	;wreg free
  1118                           
  1119                           ;main.c: 80: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1120  0006C0  0EC7               	movlw	199
  1121  0006C2  EC35  F00D         	call	_OpenTimer1
  1122                           
  1123                           ;main.c: 83: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111
      +                          ;
  1124  0006C6  0EEC               	movlw	236
  1125  0006C8  0101               	movlb	1	; () banked
  1126  0006CA  6F0C               	movwf	main@UARTConfig& (0+255),b
  1127                           
  1128                           ; BSR set to: 1
  1129                           ;main.c: 84: baud = 77;
  1130  0006CC  0E4D               	movlw	77
  1131  0006CE  0101               	movlb	1	; () banked
  1132  0006D0  6F0B               	movwf	main@baud& (0+255),b
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;main.c: 85: OpenUSART(UARTConfig,baud);
  1136  0006D2  0101               	movlb	1	; () banked
  1137  0006D4  0100               	movlb	0	; () banked
  1138  0006D6  C10B  F09D         	movff	main@baud,OpenUSART@spbrg
  1139  0006DA  0100               	movlb	0	; () banked
  1140  0006DC  6B9E               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1141  0006DE  0101               	movlb	1	; () banked
  1142  0006E0  510C               	movf	main@UARTConfig& (0+255),w,b
  1143  0006E2  EC1D  F00A         	call	_OpenUSART
  1144                           
  1145                           ;main.c: 90: IPR1bits.TMR1IP = 0;
  1146  0006E6  909F               	bcf	3999,0,c	;volatile
  1147                           
  1148                           ;main.c: 92: IPR1bits.RCIP = 0;
  1149  0006E8  9A9F               	bcf	3999,5,c	;volatile
  1150                           
  1151                           ;main.c: 94: IPR1bits.TXIP = 0;
  1152  0006EA  989F               	bcf	3999,4,c	;volatile
  1153                           
  1154                           ;main.c: 96: IPR1bits.SSPIP = 1;
  1155  0006EC  869F               	bsf	3999,3,c	;volatile
  1156                           
  1157                           ;main.c: 98: INTCON2bits.RBIP = 1;
  1158  0006EE  80F1               	bsf	intcon2,0,c	;volatile
  1159                           
  1160                           ;main.c: 99: INTCONbits.RBIE = 1;
  1161  0006F0  86F2               	bsf	intcon,3,c	;volatile
  1162                           
  1163                           ;main.c: 102: i2c_configure_slave(0x9A);
  1164  0006F2  0E9A               	movlw	154
  1165  0006F4  ECAA  F00D         	call	_i2c_configure_slave
  1166                           
  1167                           ;main.c: 105: PIE1bits.SSPIE = 1;
  1168  0006F8  869D               	bsf	3997,3,c	;volatile
  1169                           
  1170                           ;main.c: 109: enable_interrupts();
  1171  0006FA  EC54  F00E         	call	_enable_interrupts	;wreg free
  1172                           
  1173                           ;main.c: 112: moveDir(&t1thread_data, 168);
  1174  0006FE  0101               	movlb	1	; () banked
  1175  000700  0E01               	movlw	high main@t1thread_data
  1176  000702  0100               	movlb	0	; () banked
  1177  000704  6FBC               	movwf	(moveDir@tptr+1)& (0+255),b
  1178  000706  0101               	movlb	1	; () banked
  1179  000708  0E25               	movlw	low main@t1thread_data
  1180  00070A  0100               	movlb	0	; () banked
  1181  00070C  6FBB               	movwf	moveDir@tptr& (0+255),b
  1182  00070E  0E00               	movlw	0
  1183  000710  0100               	movlb	0	; () banked
  1184  000712  6FBE               	movwf	(moveDir@cmDist+1)& (0+255),b
  1185  000714  0EA8               	movlw	168
  1186  000716  0100               	movlb	0	; () banked
  1187  000718  6FBD               	movwf	moveDir@cmDist& (0+255),b
  1188  00071A  EC9E  F00A         	call	_moveDir	;wreg free
  1189  00071E                     l3013:
  1190                           
  1191                           ;main.c: 123: block_on_To_msgqueues();
  1192  00071E  EC6E  F00B         	call	_block_on_To_msgqueues	;wreg free
  1193                           
  1194                           ;main.c: 126: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1195  000722  0101               	movlb	1	; () banked
  1196  000724  0E01               	movlw	high main@msgtype
  1197  000726  0100               	movlb	0	; () banked
  1198  000728  6FB6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1199  00072A  0101               	movlb	1	; () banked
  1200  00072C  0E23               	movlw	low main@msgtype
  1201  00072E  0100               	movlb	0	; () banked
  1202  000730  6FB5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1203  000732  0101               	movlb	1	; () banked
  1204  000734  0E01               	movlw	high main@msgbuffer
  1205  000736  0100               	movlb	0	; () banked
  1206  000738  6FB8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1207  00073A  0101               	movlb	1	; () banked
  1208  00073C  0E00               	movlw	low main@msgbuffer
  1209  00073E  0100               	movlb	0	; () banked
  1210  000740  6FB7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1211  000742  0E0A               	movlw	10
  1212  000744  EC01  F00D         	call	_ToMainHigh_recvmsg
  1213  000748  0101               	movlb	1	; () banked
  1214  00074A  6F24               	movwf	main@length& (0+255),b
  1215                           
  1216                           ; BSR set to: 1
  1217                           ;main.c: 127: if (length < 0) {
  1218  00074C  0101               	movlb	1	; () banked
  1219  00074E  BF24               	btfsc	main@length& (0+255),7,b
  1220  000750  D08D               	goto	l3051
  1221  000752  D07E               	goto	l3049
  1222  000754                     l3021:
  1223                           
  1224                           ; BSR set to: 1
  1225                           ;main.c: 135: {
  1226                           ;main.c: 136: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1227  000754  0101               	movlb	1	; () banked
  1228  000756  0E01               	movlw	high main@t0thread_data
  1229  000758  0100               	movlb	0	; () banked
  1230  00075A  6FBC               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1231  00075C  0101               	movlb	1	; () banked
  1232  00075E  0E18               	movlw	low main@t0thread_data
  1233  000760  0100               	movlb	0	; () banked
  1234  000762  6FBB               	movwf	timer0_lthread@tptr& (0+255),b
  1235  000764  0101               	movlb	1	; () banked
  1236  000766  0100               	movlb	0	; () banked
  1237  000768  C123  F0BD         	movff	main@msgtype,timer0_lthread@msgtype
  1238  00076C  0100               	movlb	0	; () banked
  1239  00076E  6BBE               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1240  000770  0101               	movlb	1	; () banked
  1241  000772  5124               	movf	main@length& (0+255),w,b
  1242  000774  0100               	movlb	0	; () banked
  1243  000776  6FBF               	movwf	timer0_lthread@length& (0+255),b
  1244  000778  0100               	movlb	0	; () banked
  1245  00077A  6BC0               	clrf	(timer0_lthread@length+1)& (0+255),b
  1246  00077C  0100               	movlb	0	; () banked
  1247  00077E  BFBF               	btfsc	timer0_lthread@length& (0+255),7,b
  1248  000780  07C0               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1249  000782  0101               	movlb	1	; () banked
  1250  000784  0E01               	movlw	high main@msgbuffer
  1251  000786  0100               	movlb	0	; () banked
  1252  000788  6FC2               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1253  00078A  0101               	movlb	1	; () banked
  1254  00078C  0E00               	movlw	low main@msgbuffer
  1255  00078E  0100               	movlb	0	; () banked
  1256  000790  6FC1               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1257  000792  EC5E  F00A         	call	_timer0_lthread	;wreg free
  1258                           
  1259                           ;main.c: 137: break;
  1260  000796  D06A               	goto	l3051
  1261  000798                     l135:
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 140: {
  1265                           ;main.c: 141: last_reg_recvd = msgbuffer[0];
  1266  000798  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
  1267                           
  1268                           ;main.c: 142: unsigned char ctrl[2];
  1269                           ;main.c: 143: switch(last_reg_recvd){
  1270  00079C  D011               	goto	l3031
  1271  00079E                     l3023:
  1272                           
  1273                           ; BSR set to: 1
  1274                           ;main.c: 145: {
  1275                           ;main.c: 146: ctrl[0] = 0;
  1276  00079E  0E00               	movlw	0
  1277  0007A0  0101               	movlb	1	; () banked
  1278  0007A2  6F1C               	movwf	main@ctrl& (0+255),b
  1279                           
  1280                           ;main.c: 147: ctrl[1] = 0;
  1281  0007A4  0E00               	movlw	0
  1282  0007A6  D009               	goto	L2
  1283  0007A8                     l3025:
  1284                           
  1285                           ; BSR set to: 1
  1286                           ;main.c: 151: {
  1287                           ;main.c: 152: ctrl[0] = 199;
  1288  0007A8  0EC7               	movlw	199
  1289  0007AA  0101               	movlb	1	; () banked
  1290  0007AC  6F1C               	movwf	main@ctrl& (0+255),b
  1291                           
  1292                           ;main.c: 153: ctrl[1] = 73;
  1293  0007AE  0E49               	movlw	73
  1294  0007B0  D004               	goto	L2
  1295  0007B2                     l3027:
  1296                           
  1297                           ; BSR set to: 1
  1298                           ;main.c: 157: {
  1299                           ;main.c: 158: ctrl[0] = 182;
  1300  0007B2  0EB6               	movlw	182
  1301  0007B4  0101               	movlb	1	; () banked
  1302  0007B6  6F1C               	movwf	main@ctrl& (0+255),b
  1303                           
  1304                           ;main.c: 159: ctrl[1] = 54;
  1305  0007B8  0E36               	movlw	54
  1306  0007BA                     L2:
  1307  0007BA  0101               	movlb	1	; () banked
  1308  0007BC  6F1D               	movwf	(main@ctrl+1)& (0+255),b
  1309                           
  1310                           ;main.c: 160: break;
  1311  0007BE  D00B               	goto	l3033
  1312  0007C0                     l3031:
  1313                           
  1314                           ; BSR set to: 1
  1315  0007C0  0101               	movlb	1	; () banked
  1316  0007C2  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1317                           
  1318                           ; Switch size 1, requested type "space"
  1319                           ; Number of cases is 3, Range of values is 0 to 2
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           10     6 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324  0007C4  0A00               	xorlw	0	; case 0
  1325  0007C6  B4D8               	btfsc	status,2,c
  1326  0007C8  D7EA               	goto	l3023
  1327  0007CA  0A01               	xorlw	1	; case 1
  1328  0007CC  B4D8               	btfsc	status,2,c
  1329  0007CE  D7EC               	goto	l3025
  1330  0007D0  0A03               	xorlw	3	; case 2
  1331  0007D2  B4D8               	btfsc	status,2,c
  1332  0007D4  D7EE               	goto	l3027
  1333  0007D6                     l3033:
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 163: sendUARTarr(2,ctrl);
  1337  0007D6  0101               	movlb	1	; () banked
  1338  0007D8  0E01               	movlw	high main@ctrl
  1339  0007DA  0100               	movlb	0	; () banked
  1340  0007DC  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  1341  0007DE  0101               	movlb	1	; () banked
  1342  0007E0  0E1C               	movlw	low main@ctrl
  1343  0007E2  0100               	movlb	0	; () banked
  1344  0007E4  6FB7               	movwf	sendUARTarr@data& (0+255),b
  1345  0007E6  0E02               	movlw	2
  1346  0007E8  EC65  F00D         	call	_sendUARTarr
  1347                           
  1348                           ;main.c: 164: break;
  1349  0007EC  D03F               	goto	l3051
  1350  0007EE                     l141:
  1351                           
  1352                           ; BSR set to: 1
  1353                           ;main.c: 167: {
  1354                           ;main.c: 170: last_reg_recvd = msgbuffer[0];
  1355  0007EE  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
  1356                           
  1357                           ;main.c: 171: break;
  1358  0007F2  D03C               	goto	l3051
  1359  0007F4                     l3035:
  1360                           
  1361                           ; BSR set to: 1
  1362                           ;main.c: 184: {
  1363                           ;main.c: 185: length = 2;
  1364  0007F4  0E02               	movlw	2
  1365  0007F6  0101               	movlb	1	; () banked
  1366  0007F8  6F24               	movwf	main@length& (0+255),b
  1367                           
  1368                           ;main.c: 186: msgbuffer[0] = 0x55;
  1369  0007FA  0E55               	movlw	85
  1370  0007FC  0101               	movlb	1	; () banked
  1371  0007FE  6F00               	movwf	main@msgbuffer& (0+255),b
  1372                           
  1373                           ;main.c: 187: msgbuffer[1] = 0xAA;
  1374  000800  0EAA               	movlw	170
  1375  000802  0101               	movlb	1	; () banked
  1376  000804  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1377                           
  1378                           ;main.c: 188: break;
  1379  000806  D017               	goto	l3045
  1380  000808                     l3037:
  1381                           
  1382                           ; BSR set to: 1
  1383                           ;main.c: 191: {
  1384                           ;main.c: 192: length = 1;
  1385  000808  0E01               	movlw	1
  1386  00080A  0101               	movlb	1	; () banked
  1387  00080C  6F24               	movwf	main@length& (0+255),b
  1388                           
  1389                           ;main.c: 193: msgbuffer[0] = 0x3A;
  1390  00080E  0E3A               	movlw	58
  1391  000810  D004               	goto	L3
  1392  000812                     l3039:
  1393                           
  1394                           ; BSR set to: 1
  1395                           ;main.c: 197: {
  1396                           ;main.c: 198: length = 1;
  1397  000812  0E01               	movlw	1
  1398  000814  0101               	movlb	1	; () banked
  1399  000816  6F24               	movwf	main@length& (0+255),b
  1400                           
  1401                           ;main.c: 199: msgbuffer[0] = 0xA3;
  1402  000818  0EA3               	movlw	163
  1403  00081A                     L3:
  1404  00081A  0101               	movlb	1	; () banked
  1405  00081C  6F00               	movwf	main@msgbuffer& (0+255),b
  1406                           
  1407                           ;main.c: 200: break;
  1408  00081E  D00B               	goto	l3045
  1409  000820                     l3043:
  1410                           
  1411                           ; BSR set to: 1
  1412  000820  0101               	movlb	1	; () banked
  1413  000822  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1414                           
  1415                           ; Switch size 1, requested type "space"
  1416                           ; Number of cases is 3, Range of values is 168 to 170
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte           10     6 (average)
  1420                           ;	Chosen strategy is simple_byte
  1421  000824  0AA8               	xorlw	168	; case 168
  1422  000826  B4D8               	btfsc	status,2,c
  1423  000828  D7EF               	goto	l3037
  1424  00082A  0A01               	xorlw	1	; case 169
  1425  00082C  B4D8               	btfsc	status,2,c
  1426  00082E  D7F1               	goto	l3039
  1427  000830  0A03               	xorlw	3	; case 170
  1428  000832  B4D8               	btfsc	status,2,c
  1429  000834  D7DF               	goto	l3035
  1430  000836                     l3045:
  1431                           
  1432                           ; BSR set to: 1
  1433                           ;main.c: 203: start_i2c_slave_reply(length, msgbuffer);
  1434  000836  0101               	movlb	1	; () banked
  1435  000838  0E01               	movlw	high main@msgbuffer
  1436  00083A  0100               	movlb	0	; () banked
  1437  00083C  6F9E               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1438  00083E  0101               	movlb	1	; () banked
  1439  000840  0E00               	movlw	low main@msgbuffer
  1440  000842  0100               	movlb	0	; () banked
  1441  000844  6F9D               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1442  000846  0101               	movlb	1	; () banked
  1443  000848  5124               	movf	main@length& (0+255),w,b
  1444  00084A  ECDC  F005         	call	_start_i2c_slave_reply
  1445                           
  1446                           ;main.c: 204: break;
  1447  00084E  D00E               	goto	l3051
  1448  000850                     l3049:
  1449  000850  0101               	movlb	1	; () banked
  1450  000852  5123               	movf	main@msgtype& (0+255),w,b
  1451                           
  1452                           ; Switch size 1, requested type "space"
  1453                           ; Number of cases is 4, Range of values is 10 to 42
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte           13     7 (average)
  1457                           ;	Chosen strategy is simple_byte
  1458  000854  0A0A               	xorlw	10	; case 10
  1459  000856  B4D8               	btfsc	status,2,c
  1460  000858  D77D               	goto	l3021
  1461  00085A  0A22               	xorlw	34	; case 40
  1462  00085C  B4D8               	btfsc	status,2,c
  1463  00085E  D79C               	goto	l135
  1464  000860  0A01               	xorlw	1	; case 41
  1465  000862  B4D8               	btfsc	status,2,c
  1466  000864  D7C4               	goto	l141
  1467  000866  0A03               	xorlw	3	; case 42
  1468  000868  B4D8               	btfsc	status,2,c
  1469  00086A  D7DA               	goto	l3043
  1470  00086C                     l3051:
  1471                           
  1472                           ;main.c: 212: }
  1473                           ;main.c: 215: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1474  00086C  0101               	movlb	1	; () banked
  1475  00086E  0E01               	movlw	high main@msgtype
  1476  000870  0100               	movlb	0	; () banked
  1477  000872  6FB6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1478  000874  0101               	movlb	1	; () banked
  1479  000876  0E23               	movlw	low main@msgtype
  1480  000878  0100               	movlb	0	; () banked
  1481  00087A  6FB5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1482  00087C  0101               	movlb	1	; () banked
  1483  00087E  0E01               	movlw	high main@msgbuffer
  1484  000880  0100               	movlb	0	; () banked
  1485  000882  6FB8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1486  000884  0101               	movlb	1	; () banked
  1487  000886  0E00               	movlw	low main@msgbuffer
  1488  000888  0100               	movlb	0	; () banked
  1489  00088A  6FB7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1490  00088C  0E0A               	movlw	10
  1491  00088E  ECE6  F00C         	call	_ToMainLow_recvmsg
  1492  000892  0101               	movlb	1	; () banked
  1493  000894  6F24               	movwf	main@length& (0+255),b
  1494                           
  1495                           ; BSR set to: 1
  1496                           ;main.c: 216: if (length < 0) {
  1497  000896  0101               	movlb	1	; () banked
  1498  000898  BF24               	btfsc	main@length& (0+255),7,b
  1499  00089A  D741               	goto	l3013
  1500  00089C  D044               	goto	l3063
  1501  00089E                     l3057:
  1502                           
  1503                           ; BSR set to: 1
  1504                           ;main.c: 224: {
  1505                           ;main.c: 225: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1506  00089E  0101               	movlb	1	; () banked
  1507  0008A0  0E01               	movlw	high main@t1thread_data
  1508  0008A2  0100               	movlb	0	; () banked
  1509  0008A4  6FBC               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1510  0008A6  0101               	movlb	1	; () banked
  1511  0008A8  0E25               	movlw	low main@t1thread_data
  1512  0008AA  0100               	movlb	0	; () banked
  1513  0008AC  6FBB               	movwf	timer1_lthread@tptr& (0+255),b
  1514  0008AE  0101               	movlb	1	; () banked
  1515  0008B0  0100               	movlb	0	; () banked
  1516  0008B2  C123  F0BD         	movff	main@msgtype,timer1_lthread@msgtype
  1517  0008B6  0100               	movlb	0	; () banked
  1518  0008B8  6BBE               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1519  0008BA  0101               	movlb	1	; () banked
  1520  0008BC  5124               	movf	main@length& (0+255),w,b
  1521  0008BE  0100               	movlb	0	; () banked
  1522  0008C0  6FBF               	movwf	timer1_lthread@length& (0+255),b
  1523  0008C2  0100               	movlb	0	; () banked
  1524  0008C4  6BC0               	clrf	(timer1_lthread@length+1)& (0+255),b
  1525  0008C6  0100               	movlb	0	; () banked
  1526  0008C8  BFBF               	btfsc	timer1_lthread@length& (0+255),7,b
  1527  0008CA  07C0               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1528  0008CC  0101               	movlb	1	; () banked
  1529  0008CE  0E01               	movlw	high main@msgbuffer
  1530  0008D0  0100               	movlb	0	; () banked
  1531  0008D2  6FC2               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1532  0008D4  0101               	movlb	1	; () banked
  1533  0008D6  0E00               	movlw	low main@msgbuffer
  1534  0008D8  0100               	movlb	0	; () banked
  1535  0008DA  6FC1               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1536  0008DC  ECA2  F004         	call	_timer1_lthread	;wreg free
  1537                           
  1538                           ;main.c: 226: break;
  1539  0008E0  D71E               	goto	l3013
  1540  0008E2                     l3059:
  1541                           
  1542                           ;main.c: 229: case 31:
  1543                           ;main.c: 230: case 32:
  1544                           ;main.c: 231: {
  1545                           ;main.c: 232: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1546  0008E2  0101               	movlb	1	; () banked
  1547  0008E4  0E01               	movlw	high main@uthread_data
  1548  0008E6  0100               	movlb	0	; () banked
  1549  0008E8  6FB8               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1550  0008EA  0101               	movlb	1	; () banked
  1551  0008EC  0E0E               	movlw	low main@uthread_data
  1552  0008EE  0100               	movlb	0	; () banked
  1553  0008F0  6FB7               	movwf	uart_lthread@uptr& (0+255),b
  1554  0008F2  0101               	movlb	1	; () banked
  1555  0008F4  0100               	movlb	0	; () banked
  1556  0008F6  C123  F0B9         	movff	main@msgtype,uart_lthread@msgtype
  1557  0008FA  0100               	movlb	0	; () banked
  1558  0008FC  6BBA               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1559  0008FE  0101               	movlb	1	; () banked
  1560  000900  5124               	movf	main@length& (0+255),w,b
  1561  000902  0100               	movlb	0	; () banked
  1562  000904  6FBB               	movwf	uart_lthread@length& (0+255),b
  1563  000906  0100               	movlb	0	; () banked
  1564  000908  6BBC               	clrf	(uart_lthread@length+1)& (0+255),b
  1565  00090A  0100               	movlb	0	; () banked
  1566  00090C  BFBB               	btfsc	uart_lthread@length& (0+255),7,b
  1567  00090E  07BC               	decf	(uart_lthread@length+1)& (0+255),f,b
  1568  000910  0101               	movlb	1	; () banked
  1569  000912  0E01               	movlw	high main@msgbuffer
  1570  000914  0100               	movlb	0	; () banked
  1571  000916  6FBE               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1572  000918  0101               	movlb	1	; () banked
  1573  00091A  0E00               	movlw	low main@msgbuffer
  1574  00091C  0100               	movlb	0	; () banked
  1575  00091E  6FBD               	movwf	uart_lthread@msgbuffer& (0+255),b
  1576  000920  ECD5  F008         	call	_uart_lthread	;wreg free
  1577                           
  1578                           ;main.c: 233: break;
  1579  000924  D6FC               	goto	l3013
  1580  000926                     l3063:
  1581  000926  0101               	movlb	1	; () banked
  1582  000928  5123               	movf	main@msgtype& (0+255),w,b
  1583                           
  1584                           ; Switch size 1, requested type "space"
  1585                           ; Number of cases is 4, Range of values is 11 to 32
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           13     7 (average)
  1589                           ;	Chosen strategy is simple_byte
  1590  00092A  0A0B               	xorlw	11	; case 11
  1591  00092C  B4D8               	btfsc	status,2,c
  1592  00092E  D7B7               	goto	l3057
  1593  000930  0A15               	xorlw	21	; case 30
  1594  000932  B4D8               	btfsc	status,2,c
  1595  000934  D7D6               	goto	l3059
  1596  000936  0A01               	xorlw	1	; case 31
  1597  000938  B4D8               	btfsc	status,2,c
  1598  00093A  D7D3               	goto	l3059
  1599  00093C  0A3F               	xorlw	63	; case 32
  1600  00093E  B4D8               	btfsc	status,2,c
  1601  000940  D7D0               	goto	l3059
  1602  000942  D6ED               	goto	l3013
  1603  000944                     __end_of_main:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           intcon	equ	0xFF2
  1610                           intcon2	equ	0xFF1
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           status	equ	0xFD8
  1616                           
  1617 ;; *************** function _uart_lthread *****************
  1618 ;; Defined at:
  1619 ;;		line 12 in file "src/uart_thread.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  uptr            2   55[BANK0 ] PTR struct __uart_thread
  1622 ;;		 -> main@uthread_data(10), 
  1623 ;;  msgtype         2   57[BANK0 ] int 
  1624 ;;  length          2   59[BANK0 ] int 
  1625 ;;  msgbuffer       2   61[BANK0 ] PTR unsigned char 
  1626 ;;		 -> main@msgbuffer(11), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  index           2   64[BANK0 ] int 
  1629 ;;  status          1   63[BANK0 ] char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2   55[BANK0 ] int 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1639 ;;      Params:         0       8       0       0       0
  1640 ;;      Locals:         0       3       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         0      11       0       0       0
  1643 ;;Total ram usage:       11 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:   13
  1646 ;; This function calls:
  1647 ;;		_FromMainLow_sendmsg
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text1
  1654  0011AA                     __ptext1:
  1655                           	opt stack 0
  1656  0011AA                     _uart_lthread:
  1657                           	opt stack 17
  1658                           
  1659                           ;uart_thread.c: 13: if (msgtype == 30) {
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;incstack = 0
  1663  0011AA  0100               	movlb	0	; () banked
  1664  0011AC  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1665  0011AE  0A1E               	xorlw	30
  1666  0011B0  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1667  0011B2  B4D8               	btfsc	status,2,c
  1668  0011B4  0012               	return	
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;uart_thread.c: 16: else if(msgtype == 31){
  1672                           
  1673                           ; BSR set to: 0
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;uart_thread.c: 15: }
  1677  0011B6  0100               	movlb	0	; () banked
  1678  0011B8  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1679  0011BA  0A1F               	xorlw	31
  1680  0011BC  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1681  0011BE  A4D8               	btfss	status,2,c
  1682  0011C0  D03F               	goto	l2925
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;uart_thread.c: 18: int index = 0;
  1686  0011C2  0E00               	movlw	0
  1687  0011C4  0100               	movlb	0	; () banked
  1688  0011C6  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1689  0011C8  0E00               	movlw	0
  1690  0011CA  0100               	movlb	0	; () banked
  1691  0011CC  6FC0               	movwf	uart_lthread@index& (0+255),b
  1692                           
  1693                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1694  0011CE  0E00               	movlw	0
  1695  0011D0  0100               	movlb	0	; () banked
  1696  0011D2  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1697  0011D4  0E00               	movlw	0
  1698  0011D6  0100               	movlb	0	; () banked
  1699  0011D8  6FC0               	movwf	uart_lthread@index& (0+255),b
  1700  0011DA                     
  1701                           ; BSR set to: 0
  1702  0011DA  0100               	movlb	0	; () banked
  1703  0011DC  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1704  0011DE  0A80               	xorlw	128
  1705  0011E0  0F80               	addlw	-128
  1706  0011E2  0E0A               	movlw	10
  1707  0011E4  B4D8               	btfsc	status,2,c
  1708  0011E6  5DC0               	subwf	uart_lthread@index& (0+255),w,b
  1709  0011E8  B0D8               	btfsc	status,0,c
  1710  0011EA  D01A               	goto	l2921
  1711                           
  1712                           ; BSR set to: 0
  1713                           
  1714                           ; BSR set to: 0
  1715                           
  1716                           ; BSR set to: 0
  1717  0011EC  0100               	movlb	0	; () banked
  1718  0011EE  51C0               	movf	uart_lthread@index& (0+255),w,b
  1719  0011F0  0100               	movlb	0	; () banked
  1720  0011F2  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1721  0011F4  6ED9               	movwf	fsr2l,c
  1722  0011F6  0100               	movlb	0	; () banked
  1723  0011F8  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1724  0011FA  0100               	movlb	0	; () banked
  1725  0011FC  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1726  0011FE  6EDA               	movwf	fsr2h,c
  1727  001200  0100               	movlb	0	; () banked
  1728  001202  51C0               	movf	uart_lthread@index& (0+255),w,b
  1729  001204  0100               	movlb	0	; () banked
  1730  001206  25B7               	addwf	uart_lthread@uptr& (0+255),w,b
  1731  001208  6EE1               	movwf	fsr1l,c
  1732  00120A  0100               	movlb	0	; () banked
  1733  00120C  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1734  00120E  0100               	movlb	0	; () banked
  1735  001210  21B8               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1736  001212  6EE2               	movwf	fsr1h,c
  1737  001214  CFDF FFE7          	movff	indf2,indf1
  1738                           
  1739                           ; BSR set to: 0
  1740  001218  0100               	movlb	0	; () banked
  1741  00121A  4BC0               	infsnz	uart_lthread@index& (0+255),f,b
  1742  00121C  2BC1               	incf	(uart_lthread@index+1)& (0+255),f,b
  1743  00121E  D7DD               	goto	L4
  1744  001220                     l2921:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1748  001220  C0B9  F0B3         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1749  001224  0100               	movlb	0	; () banked
  1750  001226  C0B8  F0B5         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1751  00122A  0100               	movlb	0	; () banked
  1752  00122C  C0B7  F0B4         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1753  001230  0100               	movlb	0	; () banked
  1754  001232  51BB               	movf	uart_lthread@length& (0+255),w,b
  1755  001234  EC4E  F00D         	call	_FromMainLow_sendmsg
  1756  001238  0100               	movlb	0	; () banked
  1757  00123A  6FBF               	movwf	uart_lthread@status& (0+255),b
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;uart_thread.c: 25: }
  1761                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1762                           
  1763                           ; BSR set to: 0
  1764  00123C  889D               	bsf	3997,4,c	;volatile
  1765                           
  1766                           ;uart_thread.c: 29: }
  1767  00123E  0012               	return	
  1768  001240                     l2925:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;uart_thread.c: 30: else if(msgtype == 32){
  1772  001240  0100               	movlb	0	; () banked
  1773  001242  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1774  001244  0A20               	xorlw	32
  1775  001246  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1776  001248  A4D8               	btfss	status,2,c
  1777  00124A  0012               	return	
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1781  00124C  0100               	movlb	0	; () banked
  1782  00124E  51BB               	movf	uart_lthread@length& (0+255),w,b
  1783  001250  0100               	movlb	0	; () banked
  1784  001252  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1785  001254  6ED9               	movwf	fsr2l,c
  1786  001256  0100               	movlb	0	; () banked
  1787  001258  51BC               	movf	(uart_lthread@length+1)& (0+255),w,b
  1788  00125A  0100               	movlb	0	; () banked
  1789  00125C  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1790  00125E  6EDA               	movwf	fsr2h,c
  1791  001260  0E00               	movlw	0
  1792  001262  6EDF               	movwf	indf2,c
  1793  001264  0012               	return	
  1794  001266                     __end_of_uart_lthread:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           intcon	equ	0xFF2
  1801                           intcon2	equ	0xFF1
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           indf1	equ	0xFE7
  1805                           postdec1	equ	0xFE5
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           indf2	equ	0xFDF
  1809                           fsr2h	equ	0xFDA
  1810                           fsr2l	equ	0xFD9
  1811                           status	equ	0xFD8
  1812                           
  1813 ;; *************** function _FromMainLow_sendmsg *****************
  1814 ;; Defined at:
  1815 ;;		line 150 in file "src/messages.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  length          1    wreg     unsigned char 
  1818 ;;  msgtype         1   51[BANK0 ] unsigned char 
  1819 ;;  data            2   52[BANK0 ] PTR void 
  1820 ;;		 -> main@uthread_data(10), 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  length          1   54[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      char 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1832 ;;      Params:         0       3       0       0       0
  1833 ;;      Locals:         0       1       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         0       4       0       0       0
  1836 ;;Total ram usage:        4 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:   12
  1839 ;; This function calls:
  1840 ;;		_send_msg
  1841 ;; This function is called by:
  1842 ;;		_uart_lthread
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text2
  1847  001A9C                     __ptext2:
  1848                           	opt stack 0
  1849  001A9C                     _FromMainLow_sendmsg:
  1850                           	opt stack 17
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;incstack = 0
  1854                           ;FromMainLow_sendmsg@length stored from wreg
  1855  001A9C  0100               	movlb	0	; () banked
  1856  001A9E  6FB6               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1860  001AA0  0102               	movlb	2	; () banked
  1861  001AA2  0E02               	movlw	high _FromMainLow_MQ
  1862  001AA4  0100               	movlb	0	; () banked
  1863  001AA6  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  1864  001AA8  0102               	movlb	2	; () banked
  1865  001AAA  0E36               	movlw	low _FromMainLow_MQ
  1866  001AAC  0100               	movlb	0	; () banked
  1867  001AAE  6FA7               	movwf	send_msg@qptr& (0+255),b
  1868  001AB0  C0B6  F0A9         	movff	FromMainLow_sendmsg@length,send_msg@length
  1869  001AB4  C0B3  F0AA         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1870  001AB8  0100               	movlb	0	; () banked
  1871  001ABA  C0B5  F0AC         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1872  001ABE  0100               	movlb	0	; () banked
  1873  001AC0  C0B4  F0AB         	movff	FromMainLow_sendmsg@data,send_msg@data
  1874  001AC4  EC5E  F006         	call	_send_msg	;wreg free
  1875  001AC8  0012               	return	
  1876  001ACA                     __end_of_FromMainLow_sendmsg:
  1877                           	opt stack 0
  1878                           tblptru	equ	0xFF8
  1879                           tblptrh	equ	0xFF7
  1880                           tblptrl	equ	0xFF6
  1881                           tablat	equ	0xFF5
  1882                           intcon	equ	0xFF2
  1883                           intcon2	equ	0xFF1
  1884                           postinc0	equ	0xFEE
  1885                           wreg	equ	0xFE8
  1886                           indf1	equ	0xFE7
  1887                           postdec1	equ	0xFE5
  1888                           fsr1h	equ	0xFE2
  1889                           fsr1l	equ	0xFE1
  1890                           indf2	equ	0xFDF
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _timer1_lthread *****************
  1896 ;; Defined at:
  1897 ;;		line 24 in file "src/timer1_thread.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  1900 ;;		 -> main@t1thread_data(45), 
  1901 ;;  msgtype         2   61[BANK0 ] int 
  1902 ;;  length          2   63[BANK0 ] int 
  1903 ;;  msgbuffer       2   65[BANK0 ] PTR unsigned char 
  1904 ;;		 -> main@msgbuffer(11), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  temp            2   73[BANK0 ] unsigned char [2]
  1907 ;;  temp            2   71[BANK0 ] unsigned char [2]
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2   59[BANK0 ] int 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1917 ;;      Params:         0       8       0       0       0
  1918 ;;      Locals:         0       4       0       0       0
  1919 ;;      Temps:          0       4       0       0       0
  1920 ;;      Totals:         0      16       0       0       0
  1921 ;;Total ram usage:       16 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:   14
  1924 ;; This function calls:
  1925 ;;		_WriteTimer1
  1926 ;;		___lwmod
  1927 ;;		_sendUARTarr
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text3
  1934  000944                     __ptext3:
  1935                           	opt stack 0
  1936  000944                     _timer1_lthread:
  1937                           	opt stack 16
  1938                           
  1939                           ;timer1_thread.c: 25: tptr->msgcount++;
  1940                           
  1941                           ;incstack = 0
  1942  000944  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1943  000948  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1944  00094C  2ADE               	incf	postinc2,f,c
  1945  00094E  0E00               	movlw	0
  1946  000950  22DD               	addwfc	postdec2,f,c
  1947                           
  1948                           ;timer1_thread.c: 27: switch(tptr->turning){
  1949  000952  D081               	goto	l2899
  1950  000954                     l2883:
  1951                           
  1952                           ;timer1_thread.c: 29: {
  1953                           ;timer1_thread.c: 30: if ((tptr->msgcount % tptr->curMove) == tptr->curMove-1) {
  1954  000954  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1955  000958  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1956  00095C  0100               	movlb	0	; () banked
  1957  00095E  CFDE F09D          	movff	postinc2,___lwmod@dividend
  1958  000962  0100               	movlb	0	; () banked
  1959  000964  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  1960  000968  0100               	movlb	0	; () banked
  1961  00096A  EE20 F02A          	lfsr	2,42
  1962  00096E  0100               	movlb	0	; () banked
  1963  000970  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  1964  000972  26D9               	addwf	fsr2l,f,c
  1965  000974  0100               	movlb	0	; () banked
  1966  000976  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1967  000978  22DA               	addwfc	fsr2h,f,c
  1968  00097A  0100               	movlb	0	; () banked
  1969  00097C  CFDE F09F          	movff	postinc2,___lwmod@divisor
  1970  000980  0100               	movlb	0	; () banked
  1971  000982  CFDD F0A0          	movff	postdec2,___lwmod@divisor+1
  1972  000986  EC3E  F00B         	call	___lwmod	;wreg free
  1973  00098A  0EFF               	movlw	255
  1974  00098C  0100               	movlb	0	; () banked
  1975  00098E  6FC3               	movwf	??_timer1_lthread& (0+255),b
  1976  000990  0EFF               	movlw	255
  1977  000992  6FC4               	movwf	(??_timer1_lthread+1)& (0+255),b
  1978  000994  0100               	movlb	0	; () banked
  1979  000996  EE20 F02A          	lfsr	2,42
  1980  00099A  0100               	movlb	0	; () banked
  1981  00099C  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  1982  00099E  26D9               	addwf	fsr2l,f,c
  1983  0009A0  0100               	movlb	0	; () banked
  1984  0009A2  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1985  0009A4  22DA               	addwfc	fsr2h,f,c
  1986  0009A6  CFDE F0C5          	movff	postinc2,??_timer1_lthread+2
  1987  0009AA  CFDD F0C6          	movff	postdec2,??_timer1_lthread+3
  1988  0009AE  0100               	movlb	0	; () banked
  1989  0009B0  51C3               	movf	??_timer1_lthread& (0+255),w,b
  1990  0009B2  0100               	movlb	0	; () banked
  1991  0009B4  27C5               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  1992  0009B6  0100               	movlb	0	; () banked
  1993  0009B8  51C4               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1994  0009BA  0100               	movlb	0	; () banked
  1995  0009BC  23C6               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  1996  0009BE  0100               	movlb	0	; () banked
  1997  0009C0  519E               	movf	(?___lwmod+1)& (0+255),w,b
  1998  0009C2  0100               	movlb	0	; () banked
  1999  0009C4  19C6               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  2000  0009C6  E104               	bnz	u1975
  2001  0009C8  0100               	movlb	0	; () banked
  2002  0009CA  519D               	movf	?___lwmod& (0+255),w,b
  2003  0009CC  0100               	movlb	0	; () banked
  2004  0009CE  19C5               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  2005  0009D0                     u1975:
  2006  0009D0  A4D8               	btfss	status,2,c
  2007  0009D2  D051               	goto	l2901
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;timer1_thread.c: 31: unsigned char temp[2] = {0,0};
  2011  0009D4  C0CB  F0C7         	movff	timer1_lthread@F5158,timer1_lthread@temp
  2012  0009D8  C0CC  F0C8         	movff	timer1_lthread@F5158+1,timer1_lthread@temp+1
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;timer1_thread.c: 32: sendUARTarr(2,temp);
  2016  0009DC  0100               	movlb	0	; () banked
  2017  0009DE  0E00               	movlw	high timer1_lthread@temp
  2018  0009E0  0100               	movlb	0	; () banked
  2019  0009E2  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2020  0009E4  0100               	movlb	0	; () banked
  2021  0009E6  0EC7               	movlw	low timer1_lthread@temp
  2022  0009E8  0100               	movlb	0	; () banked
  2023  0009EA  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2024  0009EC  0E02               	movlw	2
  2025  0009EE  EC65  F00D         	call	_sendUARTarr
  2026  0009F2  D041               	goto	l2901
  2027  0009F4                     l2889:
  2028                           
  2029                           ;timer1_thread.c: 37: {
  2030                           ;timer1_thread.c: 40: if ((tptr->msgcount % 45) == 44) {
  2031  0009F4  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2032  0009F8  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2033  0009FC  0100               	movlb	0	; () banked
  2034  0009FE  CFDE F09D          	movff	postinc2,___lwmod@dividend
  2035  000A02  0100               	movlb	0	; () banked
  2036  000A04  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  2037  000A08  0E00               	movlw	0
  2038  000A0A  0100               	movlb	0	; () banked
  2039  000A0C  6FA0               	movwf	(___lwmod@divisor+1)& (0+255),b
  2040  000A0E  0E2D               	movlw	45
  2041  000A10  0100               	movlb	0	; () banked
  2042  000A12  6F9F               	movwf	___lwmod@divisor& (0+255),b
  2043  000A14  EC3E  F00B         	call	___lwmod	;wreg free
  2044  000A18  0100               	movlb	0	; () banked
  2045  000A1A  519D               	movf	?___lwmod& (0+255),w,b
  2046  000A1C  0A2C               	xorlw	44
  2047  000A1E  0100               	movlb	0	; () banked
  2048  000A20  119E               	iorwf	(?___lwmod+1)& (0+255),w,b
  2049  000A22  A4D8               	btfss	status,2,c
  2050  000A24  D028               	goto	l2901
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;timer1_thread.c: 41: unsigned char temp[2] = {0,0};
  2054  000A26  C0CD  F0C9         	movff	timer1_lthread@F5160,timer1_lthread@temp_1753
  2055  000A2A  C0CE  F0CA         	movff	timer1_lthread@F5160+1,timer1_lthread@temp_1753+1
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;timer1_thread.c: 42: sendUARTarr(2,temp);
  2059  000A2E  0100               	movlb	0	; () banked
  2060  000A30  0E00               	movlw	high timer1_lthread@temp_1753
  2061  000A32  0100               	movlb	0	; () banked
  2062  000A34  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2063  000A36  0100               	movlb	0	; () banked
  2064  000A38  0EC9               	movlw	low timer1_lthread@temp_1753
  2065  000A3A  0100               	movlb	0	; () banked
  2066  000A3C  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2067  000A3E  0E02               	movlw	2
  2068  000A40  EC65  F00D         	call	_sendUARTarr
  2069                           
  2070                           ;timer1_thread.c: 43: tptr->msgcount = 0;
  2071  000A44  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2072  000A48  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2073  000A4C  0E00               	movlw	0
  2074  000A4E  6EDE               	movwf	postinc2,c
  2075  000A50  0E00               	movlw	0
  2076  000A52  6EDD               	movwf	postdec2,c
  2077  000A54  D010               	goto	l2901
  2078  000A56                     l2899:
  2079  000A56  0100               	movlb	0	; () banked
  2080  000A58  EE20 F02C          	lfsr	2,44
  2081  000A5C  0100               	movlb	0	; () banked
  2082  000A5E  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2083  000A60  26D9               	addwf	fsr2l,f,c
  2084  000A62  0100               	movlb	0	; () banked
  2085  000A64  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2086  000A66  22DA               	addwfc	fsr2h,f,c
  2087  000A68  50DF               	movf	indf2,w,c
  2088                           
  2089                           ; Switch size 1, requested type "space"
  2090                           ; Number of cases is 2, Range of values is 0 to 1
  2091                           ; switch strategies available:
  2092                           ; Name         Instructions Cycles
  2093                           ; simple_byte            7     4 (average)
  2094                           ;	Chosen strategy is simple_byte
  2095  000A6A  0A00               	xorlw	0	; case 0
  2096  000A6C  B4D8               	btfsc	status,2,c
  2097  000A6E  D772               	goto	l2883
  2098  000A70  0A01               	xorlw	1	; case 1
  2099  000A72  B4D8               	btfsc	status,2,c
  2100  000A74  D7BF               	goto	l2889
  2101  000A76                     l2901:
  2102                           
  2103                           ;timer1_thread.c: 48: WriteTimer1(tptr->cmDist);
  2104  000A76  0100               	movlb	0	; () banked
  2105  000A78  EE20 F028          	lfsr	2,40
  2106  000A7C  0100               	movlb	0	; () banked
  2107  000A7E  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2108  000A80  26D9               	addwf	fsr2l,f,c
  2109  000A82  0100               	movlb	0	; () banked
  2110  000A84  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2111  000A86  22DA               	addwfc	fsr2h,f,c
  2112  000A88  0100               	movlb	0	; () banked
  2113  000A8A  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  2114  000A8E  0100               	movlb	0	; () banked
  2115  000A90  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  2116  000A94  EC3D  F00E         	call	_WriteTimer1	;wreg free
  2117  000A98  0012               	return	
  2118  000A9A                     __end_of_timer1_lthread:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           intcon	equ	0xFF2
  2125                           intcon2	equ	0xFF1
  2126                           postinc0	equ	0xFEE
  2127                           wreg	equ	0xFE8
  2128                           indf1	equ	0xFE7
  2129                           postdec1	equ	0xFE5
  2130                           fsr1h	equ	0xFE2
  2131                           fsr1l	equ	0xFE1
  2132                           indf2	equ	0xFDF
  2133                           postinc2	equ	0xFDE
  2134                           postdec2	equ	0xFDD
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function ___lwmod *****************
  2140 ;; Defined at:
  2141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  dividend        2   29[BANK0 ] unsigned int 
  2144 ;;  divisor         2   31[BANK0 ] unsigned int 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  counter         1   33[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2   29[BANK0 ] unsigned int 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2156 ;;      Params:         0       4       0       0       0
  2157 ;;      Locals:         0       1       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         0       5       0       0       0
  2160 ;;Total ram usage:        5 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:   10
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_timer1_lthread
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text4
  2171  00167C                     __ptext4:
  2172                           	opt stack 0
  2173  00167C                     ___lwmod:
  2174                           	opt stack 19
  2175                           
  2176                           ;incstack = 0
  2177  00167C  0100               	movlb	0	; () banked
  2178  00167E  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2179  001680  119F               	iorwf	___lwmod@divisor& (0+255),w,b
  2180  001682  B4D8               	btfsc	status,2,c
  2181  001684  D026               	goto	l1070
  2182                           
  2183                           ; BSR set to: 0
  2184  001686  0E01               	movlw	1
  2185  001688  0100               	movlb	0	; () banked
  2186  00168A  6FA1               	movwf	___lwmod@counter& (0+255),b
  2187  00168C  D006               	goto	l2449
  2188  00168E                     l2447:
  2189                           
  2190                           ; BSR set to: 0
  2191  00168E  0100               	movlb	0	; () banked
  2192  001690  90D8               	bcf	status,0,c
  2193  001692  379F               	rlcf	___lwmod@divisor& (0+255),f,b
  2194  001694  37A0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2195  001696  0100               	movlb	0	; () banked
  2196  001698  2BA1               	incf	___lwmod@counter& (0+255),f,b
  2197  00169A                     l2449:
  2198                           
  2199                           ; BSR set to: 0
  2200  00169A  0100               	movlb	0	; () banked
  2201  00169C  AFA0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2202  00169E  D7F7               	goto	l2447
  2203  0016A0                     l2451:
  2204                           
  2205                           ; BSR set to: 0
  2206  0016A0  0100               	movlb	0	; () banked
  2207  0016A2  519F               	movf	___lwmod@divisor& (0+255),w,b
  2208  0016A4  0100               	movlb	0	; () banked
  2209  0016A6  5D9D               	subwf	___lwmod@dividend& (0+255),w,b
  2210  0016A8  0100               	movlb	0	; () banked
  2211  0016AA  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2212  0016AC  0100               	movlb	0	; () banked
  2213  0016AE  599E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2214  0016B0  A0D8               	btfss	status,0,c
  2215  0016B2  D008               	goto	l2455
  2216                           
  2217                           ; BSR set to: 0
  2218  0016B4  0100               	movlb	0	; () banked
  2219  0016B6  519F               	movf	___lwmod@divisor& (0+255),w,b
  2220  0016B8  0100               	movlb	0	; () banked
  2221  0016BA  5F9D               	subwf	___lwmod@dividend& (0+255),f,b
  2222  0016BC  0100               	movlb	0	; () banked
  2223  0016BE  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2224  0016C0  0100               	movlb	0	; () banked
  2225  0016C2  5B9E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2226  0016C4                     l2455:
  2227                           
  2228                           ; BSR set to: 0
  2229  0016C4  0100               	movlb	0	; () banked
  2230  0016C6  90D8               	bcf	status,0,c
  2231  0016C8  33A0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2232  0016CA  339F               	rrcf	___lwmod@divisor& (0+255),f,b
  2233                           
  2234                           ; BSR set to: 0
  2235  0016CC  0100               	movlb	0	; () banked
  2236  0016CE  2FA1               	decfsz	___lwmod@counter& (0+255),f,b
  2237  0016D0  D7E7               	goto	l2451
  2238  0016D2                     l1070:
  2239                           
  2240                           ; BSR set to: 0
  2241  0016D2  C09D  F09D         	movff	___lwmod@dividend,?___lwmod
  2242  0016D6  C09E  F09E         	movff	___lwmod@dividend+1,?___lwmod+1
  2243                           
  2244                           ; BSR set to: 0
  2245  0016DA  0012               	return	
  2246  0016DC                     __end_of___lwmod:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           intcon	equ	0xFF2
  2253                           intcon2	equ	0xFF1
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           indf1	equ	0xFE7
  2257                           postdec1	equ	0xFE5
  2258                           fsr1h	equ	0xFE2
  2259                           fsr1l	equ	0xFE1
  2260                           indf2	equ	0xFDF
  2261                           postinc2	equ	0xFDE
  2262                           postdec2	equ	0xFDD
  2263                           fsr2h	equ	0xFDA
  2264                           fsr2l	equ	0xFD9
  2265                           status	equ	0xFD8
  2266                           
  2267 ;; *************** function _timer0_lthread *****************
  2268 ;; Defined at:
  2269 ;;		line 14 in file "src/timer0_thread.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  tptr            2   59[BANK0 ] PTR struct __timer0_thre
  2272 ;;		 -> main@t0thread_data(4), 
  2273 ;;  msgtype         2   61[BANK0 ] int 
  2274 ;;  length          2   63[BANK0 ] int 
  2275 ;;  msgbuffer       2   65[BANK0 ] PTR unsigned char 
  2276 ;;		 -> main@msgbuffer(11), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  temp            2   69[BANK0 ] unsigned char [2]
  2279 ;;  msgval          2   67[BANK0 ] PTR unsigned int 
  2280 ;;		 -> main@msgbuffer(11), 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2   59[BANK0 ] int 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2290 ;;      Params:         0       8       0       0       0
  2291 ;;      Locals:         0       4       0       0       0
  2292 ;;      Temps:          0       0       0       0       0
  2293 ;;      Totals:         0      12       0       0       0
  2294 ;;Total ram usage:       12 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:   14
  2297 ;; This function calls:
  2298 ;;		___awmod
  2299 ;;		_sendUARTarr
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text5
  2306  0014BC                     __ptext5:
  2307                           	opt stack 0
  2308  0014BC                     _timer0_lthread:
  2309                           	opt stack 16
  2310                           
  2311                           ;timer0_thread.c: 15: unsigned int *msgval;
  2312                           ;timer0_thread.c: 16: msgval = (unsigned int *) msgbuffer;
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;incstack = 0
  2316  0014BC  0100               	movlb	0	; () banked
  2317  0014BE  C0C2  F0C4         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2318  0014C2  0100               	movlb	0	; () banked
  2319  0014C4  C0C1  F0C3         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;timer0_thread.c: 18: tptr->msgcount++;
  2323  0014C8  0100               	movlb	0	; () banked
  2324  0014CA  EE20 F002          	lfsr	2,2
  2325  0014CE  0100               	movlb	0	; () banked
  2326  0014D0  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2327  0014D2  26D9               	addwf	fsr2l,f,c
  2328  0014D4  0100               	movlb	0	; () banked
  2329  0014D6  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2330  0014D8  22DA               	addwfc	fsr2h,f,c
  2331  0014DA  2ADE               	incf	postinc2,f,c
  2332  0014DC  0E00               	movlw	0
  2333  0014DE  22DD               	addwfc	postdec2,f,c
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;timer0_thread.c: 20: if((tptr->msgcount % 60) == 59) {
  2337  0014E0  0100               	movlb	0	; () banked
  2338  0014E2  EE20 F002          	lfsr	2,2
  2339  0014E6  0100               	movlb	0	; () banked
  2340  0014E8  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2341  0014EA  26D9               	addwf	fsr2l,f,c
  2342  0014EC  0100               	movlb	0	; () banked
  2343  0014EE  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2344  0014F0  22DA               	addwfc	fsr2h,f,c
  2345  0014F2  0100               	movlb	0	; () banked
  2346  0014F4  CFDE F09D          	movff	postinc2,___awmod@dividend
  2347  0014F8  0100               	movlb	0	; () banked
  2348  0014FA  CFDD F09E          	movff	postdec2,___awmod@dividend+1
  2349  0014FE  0E00               	movlw	0
  2350  001500  0100               	movlb	0	; () banked
  2351  001502  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  2352  001504  0E3C               	movlw	60
  2353  001506  0100               	movlb	0	; () banked
  2354  001508  6F9F               	movwf	___awmod@divisor& (0+255),b
  2355  00150A  EC73  F008         	call	___awmod	;wreg free
  2356  00150E  0100               	movlb	0	; () banked
  2357  001510  519D               	movf	?___awmod& (0+255),w,b
  2358  001512  0A3B               	xorlw	59
  2359  001514  0100               	movlb	0	; () banked
  2360  001516  119E               	iorwf	(?___awmod+1)& (0+255),w,b
  2361  001518  A4D8               	btfss	status,2,c
  2362  00151A  0012               	return	
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;timer0_thread.c: 21: unsigned char temp[2] = {199,72};
  2366  00151C  C0D1  F0C5         	movff	timer0_lthread@F5150,timer0_lthread@temp
  2367  001520  C0D2  F0C6         	movff	timer0_lthread@F5150+1,timer0_lthread@temp+1
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;timer0_thread.c: 22: sendUARTarr(2,temp);
  2371  001524  0100               	movlb	0	; () banked
  2372  001526  0E00               	movlw	high timer0_lthread@temp
  2373  001528  0100               	movlb	0	; () banked
  2374  00152A  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2375  00152C  0100               	movlb	0	; () banked
  2376  00152E  0EC5               	movlw	low timer0_lthread@temp
  2377  001530  0100               	movlb	0	; () banked
  2378  001532  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2379  001534  0E02               	movlw	2
  2380  001536  EC65  F00D         	call	_sendUARTarr
  2381  00153A  0012               	return	
  2382  00153C                     __end_of_timer0_lthread:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           intcon	equ	0xFF2
  2389                           intcon2	equ	0xFF1
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           indf1	equ	0xFE7
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           indf2	equ	0xFDF
  2397                           postinc2	equ	0xFDE
  2398                           postdec2	equ	0xFDD
  2399                           fsr2h	equ	0xFDA
  2400                           fsr2l	equ	0xFD9
  2401                           status	equ	0xFD8
  2402                           
  2403 ;; *************** function ___awmod *****************
  2404 ;; Defined at:
  2405 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  dividend        2   29[BANK0 ] int 
  2408 ;;  divisor         2   31[BANK0 ] int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  sign            1   34[BANK0 ] unsigned char 
  2411 ;;  counter         1   33[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2   29[BANK0 ] int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, prodl
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2421 ;;      Params:         0       4       0       0       0
  2422 ;;      Locals:         0       2       0       0       0
  2423 ;;      Temps:          0       0       0       0       0
  2424 ;;      Totals:         0       6       0       0       0
  2425 ;;Total ram usage:        6 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:   10
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_timer0_lthread
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text6
  2436  0010E6                     __ptext6:
  2437                           	opt stack 0
  2438  0010E6                     ___awmod:
  2439                           	opt stack 19
  2440                           
  2441                           ;incstack = 0
  2442  0010E6  0E00               	movlw	0
  2443  0010E8  0100               	movlb	0	; () banked
  2444  0010EA  6FA2               	movwf	___awmod@sign& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447  0010EC  0100               	movlb	0	; () banked
  2448  0010EE  519E               	movf	(___awmod@dividend+1)& (0+255),w,b
  2449  0010F0  0A80               	xorlw	128
  2450  0010F2  6EF3               	movwf	prodl,c
  2451  0010F4  0E80               	movlw	128
  2452  0010F6  5CF3               	subwf	prodl,w,c
  2453  0010F8  0E00               	movlw	0
  2454  0010FA  B4D8               	btfsc	status,2,c
  2455  0010FC  5D9D               	subwf	___awmod@dividend& (0+255),w,b
  2456  0010FE  B0D8               	btfsc	status,0,c
  2457  001100  D009               	goto	l2415
  2458                           
  2459                           ; BSR set to: 0
  2460  001102  0100               	movlb	0	; () banked
  2461  001104  6D9D               	negf	___awmod@dividend& (0+255),b
  2462  001106  0100               	movlb	0	; () banked
  2463  001108  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  2464  00110A  B0D8               	btfsc	status,0,c
  2465  00110C  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  2466                           
  2467                           ; BSR set to: 0
  2468  00110E  0E01               	movlw	1
  2469  001110  0100               	movlb	0	; () banked
  2470  001112  6FA2               	movwf	___awmod@sign& (0+255),b
  2471  001114                     l2415:
  2472                           
  2473                           ; BSR set to: 0
  2474  001114  0100               	movlb	0	; () banked
  2475  001116  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  2476  001118  0A80               	xorlw	128
  2477  00111A  6EF3               	movwf	prodl,c
  2478  00111C  0E80               	movlw	128
  2479  00111E  5CF3               	subwf	prodl,w,c
  2480  001120  0E00               	movlw	0
  2481  001122  B4D8               	btfsc	status,2,c
  2482  001124  5D9F               	subwf	___awmod@divisor& (0+255),w,b
  2483  001126  B0D8               	btfsc	status,0,c
  2484  001128  D006               	goto	l2419
  2485                           
  2486                           ; BSR set to: 0
  2487  00112A  0100               	movlb	0	; () banked
  2488  00112C  6D9F               	negf	___awmod@divisor& (0+255),b
  2489  00112E  0100               	movlb	0	; () banked
  2490  001130  1FA0               	comf	(___awmod@divisor+1)& (0+255),f,b
  2491  001132  B0D8               	btfsc	status,0,c
  2492  001134  2BA0               	incf	(___awmod@divisor+1)& (0+255),f,b
  2493  001136                     l2419:
  2494                           
  2495                           ; BSR set to: 0
  2496  001136  0100               	movlb	0	; () banked
  2497  001138  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  2498  00113A  119F               	iorwf	___awmod@divisor& (0+255),w,b
  2499  00113C  B4D8               	btfsc	status,2,c
  2500  00113E  D026               	goto	l2435
  2501                           
  2502                           ; BSR set to: 0
  2503  001140  0E01               	movlw	1
  2504  001142  0100               	movlb	0	; () banked
  2505  001144  6FA1               	movwf	___awmod@counter& (0+255),b
  2506  001146  D006               	goto	l2425
  2507  001148                     l2423:
  2508                           
  2509                           ; BSR set to: 0
  2510  001148  0100               	movlb	0	; () banked
  2511  00114A  90D8               	bcf	status,0,c
  2512  00114C  379F               	rlcf	___awmod@divisor& (0+255),f,b
  2513  00114E  37A0               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2514  001150  0100               	movlb	0	; () banked
  2515  001152  2BA1               	incf	___awmod@counter& (0+255),f,b
  2516  001154                     l2425:
  2517                           
  2518                           ; BSR set to: 0
  2519  001154  0100               	movlb	0	; () banked
  2520  001156  AFA0               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2521  001158  D7F7               	goto	l2423
  2522  00115A                     l2427:
  2523                           
  2524                           ; BSR set to: 0
  2525  00115A  0100               	movlb	0	; () banked
  2526  00115C  519F               	movf	___awmod@divisor& (0+255),w,b
  2527  00115E  0100               	movlb	0	; () banked
  2528  001160  5D9D               	subwf	___awmod@dividend& (0+255),w,b
  2529  001162  0100               	movlb	0	; () banked
  2530  001164  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  2531  001166  0100               	movlb	0	; () banked
  2532  001168  599E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2533  00116A  A0D8               	btfss	status,0,c
  2534  00116C  D008               	goto	l2431
  2535                           
  2536                           ; BSR set to: 0
  2537  00116E  0100               	movlb	0	; () banked
  2538  001170  519F               	movf	___awmod@divisor& (0+255),w,b
  2539  001172  0100               	movlb	0	; () banked
  2540  001174  5F9D               	subwf	___awmod@dividend& (0+255),f,b
  2541  001176  0100               	movlb	0	; () banked
  2542  001178  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  2543  00117A  0100               	movlb	0	; () banked
  2544  00117C  5B9E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2545  00117E                     l2431:
  2546                           
  2547                           ; BSR set to: 0
  2548  00117E  0100               	movlb	0	; () banked
  2549  001180  90D8               	bcf	status,0,c
  2550  001182  33A0               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2551  001184  339F               	rrcf	___awmod@divisor& (0+255),f,b
  2552                           
  2553                           ; BSR set to: 0
  2554  001186  0100               	movlb	0	; () banked
  2555  001188  2FA1               	decfsz	___awmod@counter& (0+255),f,b
  2556  00118A  D7E7               	goto	l2427
  2557  00118C                     l2435:
  2558                           
  2559                           ; BSR set to: 0
  2560  00118C  0100               	movlb	0	; () banked
  2561  00118E  51A2               	movf	___awmod@sign& (0+255),w,b
  2562  001190  B4D8               	btfsc	status,2,c
  2563  001192  D006               	goto	l2439
  2564                           
  2565                           ; BSR set to: 0
  2566  001194  0100               	movlb	0	; () banked
  2567  001196  6D9D               	negf	___awmod@dividend& (0+255),b
  2568  001198  0100               	movlb	0	; () banked
  2569  00119A  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  2570  00119C  B0D8               	btfsc	status,0,c
  2571  00119E  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  2572  0011A0                     l2439:
  2573                           
  2574                           ; BSR set to: 0
  2575  0011A0  C09D  F09D         	movff	___awmod@dividend,?___awmod
  2576  0011A4  C09E  F09E         	movff	___awmod@dividend+1,?___awmod+1
  2577  0011A8  0012               	return	
  2578  0011AA                     __end_of___awmod:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodl	equ	0xFF3
  2585                           intcon	equ	0xFF2
  2586                           intcon2	equ	0xFF1
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           indf1	equ	0xFE7
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           indf2	equ	0xFDF
  2594                           postinc2	equ	0xFDE
  2595                           postdec2	equ	0xFDD
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _start_i2c_slave_reply *****************
  2601 ;; Defined at:
  2602 ;;		line 53 in file "src/my_i2c.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  length          1    wreg     unsigned char 
  2605 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2606 ;;		 -> main@msgbuffer(11), 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  length          1   33[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2618 ;;      Params:         0       2       0       0       0
  2619 ;;      Locals:         0       1       0       0       0
  2620 ;;      Temps:          0       2       0       0       0
  2621 ;;      Totals:         0       5       0       0       0
  2622 ;;Total ram usage:        5 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:   10
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text7
  2633  000BB8                     __ptext7:
  2634                           	opt stack 0
  2635  000BB8                     _start_i2c_slave_reply:
  2636                           	opt stack 20
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;incstack = 0
  2640                           ;start_i2c_slave_reply@length stored from wreg
  2641  000BB8  0100               	movlb	0	; () banked
  2642  000BBA  6FA1               	movwf	start_i2c_slave_reply@length& (0+255),b
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2646  000BBC  0100               	movlb	0	; () banked
  2647  000BBE  EE20 F019          	lfsr	2,25
  2648  000BC2  0100               	movlb	0	; () banked
  2649  000BC4  51D3               	movf	_ic_ptr& (0+255),w,b
  2650  000BC6  26D9               	addwf	fsr2l,f,c
  2651  000BC8  0100               	movlb	0	; () banked
  2652  000BCA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2653  000BCC  22DA               	addwfc	fsr2h,f,c
  2654  000BCE  0E00               	movlw	0
  2655  000BD0  6EDF               	movwf	indf2,c
  2656  000BD2  D03E               	goto	l2871
  2657  000BD4                     l2867:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2661  000BD4  0100               	movlb	0	; () banked
  2662  000BD6  EE20 F019          	lfsr	2,25
  2663  000BDA  0100               	movlb	0	; () banked
  2664  000BDC  51D3               	movf	_ic_ptr& (0+255),w,b
  2665  000BDE  26D9               	addwf	fsr2l,f,c
  2666  000BE0  0100               	movlb	0	; () banked
  2667  000BE2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2668  000BE4  22DA               	addwfc	fsr2h,f,c
  2669  000BE6  50DF               	movf	indf2,w,c
  2670  000BE8  0100               	movlb	0	; () banked
  2671  000BEA  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  2672  000BEC  0100               	movlb	0	; () banked
  2673  000BEE  519F               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2674  000BF0  0D01               	mullw	1
  2675  000BF2  50F3               	movf	prodl,w,c
  2676  000BF4  0100               	movlb	0	; () banked
  2677  000BF6  259D               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2678  000BF8  6ED9               	movwf	fsr2l,c
  2679  000BFA  50F4               	movf	prodh,w,c
  2680  000BFC  0100               	movlb	0	; () banked
  2681  000BFE  219E               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2682  000C00  6EDA               	movwf	fsr2h,c
  2683  000C02  0100               	movlb	0	; () banked
  2684  000C04  EE10 F019          	lfsr	1,25
  2685  000C08  0100               	movlb	0	; () banked
  2686  000C0A  51D3               	movf	_ic_ptr& (0+255),w,b
  2687  000C0C  26E1               	addwf	fsr1l,f,c
  2688  000C0E  0100               	movlb	0	; () banked
  2689  000C10  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2690  000C12  22E2               	addwfc	fsr1h,f,c
  2691  000C14  50E7               	movf	indf1,w,c
  2692  000C16  0100               	movlb	0	; () banked
  2693  000C18  6FA0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2694  000C1A  0100               	movlb	0	; () banked
  2695  000C1C  51A0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2696  000C1E  0D01               	mullw	1
  2697  000C20  0E0F               	movlw	15
  2698  000C22  26F3               	addwf	prodl,f,c
  2699  000C24  0E00               	movlw	0
  2700  000C26  22F4               	addwfc	prodh,f,c
  2701  000C28  50F3               	movf	prodl,w,c
  2702  000C2A  0100               	movlb	0	; () banked
  2703  000C2C  25D3               	addwf	_ic_ptr& (0+255),w,b
  2704  000C2E  6EE1               	movwf	fsr1l,c
  2705  000C30  50F4               	movf	prodh,w,c
  2706  000C32  0100               	movlb	0	; () banked
  2707  000C34  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2708  000C36  6EE2               	movwf	fsr1h,c
  2709  000C38  CFDF FFE7          	movff	indf2,indf1
  2710                           
  2711                           ; BSR set to: 0
  2712  000C3C  0100               	movlb	0	; () banked
  2713  000C3E  EE20 F019          	lfsr	2,25
  2714  000C42  0100               	movlb	0	; () banked
  2715  000C44  51D3               	movf	_ic_ptr& (0+255),w,b
  2716  000C46  26D9               	addwf	fsr2l,f,c
  2717  000C48  0100               	movlb	0	; () banked
  2718  000C4A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2719  000C4C  22DA               	addwfc	fsr2h,f,c
  2720  000C4E  2ADF               	incf	indf2,f,c
  2721  000C50                     l2871:
  2722                           
  2723                           ; BSR set to: 0
  2724  000C50  0100               	movlb	0	; () banked
  2725  000C52  EE20 F019          	lfsr	2,25
  2726  000C56  0100               	movlb	0	; () banked
  2727  000C58  51D3               	movf	_ic_ptr& (0+255),w,b
  2728  000C5A  26D9               	addwf	fsr2l,f,c
  2729  000C5C  0100               	movlb	0	; () banked
  2730  000C5E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2731  000C60  22DA               	addwfc	fsr2h,f,c
  2732  000C62  50DF               	movf	indf2,w,c
  2733  000C64  0100               	movlb	0	; () banked
  2734  000C66  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  2735  000C68  0100               	movlb	0	; () banked
  2736  000C6A  51A1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2737  000C6C  0100               	movlb	0	; () banked
  2738  000C6E  5D9F               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2739  000C70  A0D8               	btfss	status,0,c
  2740  000C72  D7B0               	goto	l2867
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;my_i2c.c: 57: }
  2744                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2745                           
  2746                           ; BSR set to: 0
  2747  000C74  0100               	movlb	0	; () banked
  2748  000C76  EE20 F019          	lfsr	2,25
  2749  000C7A  0100               	movlb	0	; () banked
  2750  000C7C  51D3               	movf	_ic_ptr& (0+255),w,b
  2751  000C7E  26D9               	addwf	fsr2l,f,c
  2752  000C80  0100               	movlb	0	; () banked
  2753  000C82  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2754  000C84  22DA               	addwfc	fsr2h,f,c
  2755  000C86  0100               	movlb	0	; () banked
  2756  000C88  C0A1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2757                           
  2758                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2759  000C8C  0100               	movlb	0	; () banked
  2760  000C8E  EE20 F01A          	lfsr	2,26
  2761  000C92  0100               	movlb	0	; () banked
  2762  000C94  51D3               	movf	_ic_ptr& (0+255),w,b
  2763  000C96  26D9               	addwf	fsr2l,f,c
  2764  000C98  0100               	movlb	0	; () banked
  2765  000C9A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2766  000C9C  22DA               	addwfc	fsr2h,f,c
  2767  000C9E  0E01               	movlw	1
  2768  000CA0  6EDF               	movwf	indf2,c
  2769                           
  2770                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2771  000CA2  0100               	movlb	0	; () banked
  2772  000CA4  EE20 F00F          	lfsr	2,15
  2773  000CA8  0100               	movlb	0	; () banked
  2774  000CAA  51D3               	movf	_ic_ptr& (0+255),w,b
  2775  000CAC  26D9               	addwf	fsr2l,f,c
  2776  000CAE  0100               	movlb	0	; () banked
  2777  000CB0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  2778  000CB2  22DA               	addwfc	fsr2h,f,c
  2779  000CB4  50DF               	movf	indf2,w,c
  2780  000CB6  6EC9               	movwf	4041,c	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2784  000CB8  88C6               	bsf	4038,4,c	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787  000CBA  0012               	return	
  2788  000CBC                     __end_of_start_i2c_slave_reply:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           intcon2	equ	0xFF1
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           indf1	equ	0xFE7
  2801                           postdec1	equ	0xFE5
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _moveDir *****************
  2812 ;; Defined at:
  2813 ;;		line 51 in file "src/timer1_thread.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  2816 ;;		 -> main@t1thread_data(45), 
  2817 ;;  cmDist          2   61[BANK0 ] int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  test            2   63[BANK0 ] unsigned char [2]
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2829 ;;      Params:         0       4       0       0       0
  2830 ;;      Locals:         0       2       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         0       6       0       0       0
  2833 ;;Total ram usage:        6 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:   14
  2836 ;; This function calls:
  2837 ;;		_WriteTimer1
  2838 ;;		_sendUARTarr
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text8
  2845  00153C                     __ptext8:
  2846                           	opt stack 0
  2847  00153C                     _moveDir:
  2848                           	opt stack 16
  2849                           
  2850                           ;timer1_thread.c: 52: tptr->curMove = cmDist;
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;incstack = 0
  2854  00153C  0100               	movlb	0	; () banked
  2855  00153E  EE20 F02A          	lfsr	2,42
  2856  001542  0100               	movlb	0	; () banked
  2857  001544  51BB               	movf	moveDir@tptr& (0+255),w,b
  2858  001546  26D9               	addwf	fsr2l,f,c
  2859  001548  0100               	movlb	0	; () banked
  2860  00154A  51BC               	movf	(moveDir@tptr+1)& (0+255),w,b
  2861  00154C  22DA               	addwfc	fsr2h,f,c
  2862  00154E  0100               	movlb	0	; () banked
  2863  001550  C0BD  FFDE         	movff	moveDir@cmDist,postinc2
  2864  001554  0100               	movlb	0	; () banked
  2865  001556  C0BE  FFDD         	movff	moveDir@cmDist+1,postdec2
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;timer1_thread.c: 53: unsigned char test[2] = {80,205};
  2869  00155A  C0CF  F0BF         	movff	moveDir@F5164,moveDir@test
  2870  00155E  C0D0  F0C0         	movff	moveDir@F5164+1,moveDir@test+1
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;timer1_thread.c: 54: sendUARTarr(2,test);
  2874  001562  0100               	movlb	0	; () banked
  2875  001564  0E00               	movlw	high moveDir@test
  2876  001566  0100               	movlb	0	; () banked
  2877  001568  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2878  00156A  0100               	movlb	0	; () banked
  2879  00156C  0EBF               	movlw	low moveDir@test
  2880  00156E  0100               	movlb	0	; () banked
  2881  001570  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2882  001572  0E02               	movlw	2
  2883  001574  EC65  F00D         	call	_sendUARTarr
  2884                           
  2885                           ;timer1_thread.c: 55: WriteTimer1(tptr->cmDist);
  2886  001578  0100               	movlb	0	; () banked
  2887  00157A  EE20 F028          	lfsr	2,40
  2888  00157E  0100               	movlb	0	; () banked
  2889  001580  51BB               	movf	moveDir@tptr& (0+255),w,b
  2890  001582  26D9               	addwf	fsr2l,f,c
  2891  001584  0100               	movlb	0	; () banked
  2892  001586  51BC               	movf	(moveDir@tptr+1)& (0+255),w,b
  2893  001588  22DA               	addwfc	fsr2h,f,c
  2894  00158A  0100               	movlb	0	; () banked
  2895  00158C  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  2896  001590  0100               	movlb	0	; () banked
  2897  001592  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  2898  001596  EC3D  F00E         	call	_WriteTimer1	;wreg free
  2899                           
  2900                           ;timer1_thread.c: 56: tptr->turning = false;
  2901  00159A  0100               	movlb	0	; () banked
  2902  00159C  EE20 F02C          	lfsr	2,44
  2903  0015A0  0100               	movlb	0	; () banked
  2904  0015A2  51BB               	movf	moveDir@tptr& (0+255),w,b
  2905  0015A4  26D9               	addwf	fsr2l,f,c
  2906  0015A6  0100               	movlb	0	; () banked
  2907  0015A8  51BC               	movf	(moveDir@tptr+1)& (0+255),w,b
  2908  0015AA  22DA               	addwfc	fsr2h,f,c
  2909  0015AC  0E00               	movlw	0
  2910  0015AE  6EDF               	movwf	indf2,c
  2911                           
  2912                           ; BSR set to: 0
  2913  0015B0  0012               	return	
  2914  0015B2                     __end_of_moveDir:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           intcon2	equ	0xFF1
  2924                           postinc0	equ	0xFEE
  2925                           wreg	equ	0xFE8
  2926                           indf1	equ	0xFE7
  2927                           postdec1	equ	0xFE5
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _sendUARTarr *****************
  2938 ;; Defined at:
  2939 ;;		line 85 in file "src/my_uart.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  length          1    wreg     unsigned char 
  2942 ;;  data            2   55[BANK0 ] PTR unsigned char 
  2943 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  2944 ;;		 -> main@ctrl(2), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  length          1   58[BANK0 ] unsigned char 
  2947 ;;  retval          1   57[BANK0 ] char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      enum E4333
  2950 ;; Registers used:
  2951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2957 ;;      Params:         0       2       0       0       0
  2958 ;;      Locals:         0       2       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         0       4       0       0       0
  2961 ;;Total ram usage:        4 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:   13
  2964 ;; This function calls:
  2965 ;;		_ToMainLow_sendmsg
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;;		_timer0_lthread
  2969 ;;		_timer1_lthread
  2970 ;;		_moveDir
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text9
  2975  001ACA                     __ptext9:
  2976                           	opt stack 0
  2977  001ACA                     _sendUARTarr:
  2978                           	opt stack 16
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;incstack = 0
  2982                           ;sendUARTarr@length stored from wreg
  2983  001ACA  0100               	movlb	0	; () banked
  2984  001ACC  6FBA               	movwf	sendUARTarr@length& (0+255),b
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;my_uart.c: 86: if(length > 10){
  2988  001ACE  0E0A               	movlw	10
  2989  001AD0  0100               	movlb	0	; () banked
  2990  001AD2  65BA               	cpfsgt	sendUARTarr@length& (0+255),b
  2991  001AD4  D001               	goto	l2301
  2992  001AD6  0012               	return	
  2993  001AD8                     l2301:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;my_uart.c: 89: }
  2997                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2998  001AD8  0E1F               	movlw	31
  2999  001ADA  0100               	movlb	0	; () banked
  3000  001ADC  6FB3               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  3001  001ADE  0100               	movlb	0	; () banked
  3002  001AE0  C0B8  F0B5         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  3003  001AE4  0100               	movlb	0	; () banked
  3004  001AE6  C0B7  F0B4         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  3005  001AEA  0100               	movlb	0	; () banked
  3006  001AEC  51BA               	movf	sendUARTarr@length& (0+255),w,b
  3007  001AEE  EC7C  F00D         	call	_ToMainLow_sendmsg
  3008  001AF2  0100               	movlb	0	; () banked
  3009  001AF4  6FB9               	movwf	sendUARTarr@retval& (0+255),b
  3010  001AF6  0012               	return	
  3011  001AF8                     __end_of_sendUARTarr:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           intcon2	equ	0xFF1
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           indf1	equ	0xFE7
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _ToMainLow_sendmsg *****************
  3035 ;; Defined at:
  3036 ;;		line 103 in file "src/messages.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  length          1    wreg     unsigned char 
  3039 ;;  msgtype         1   51[BANK0 ] unsigned char 
  3040 ;;  data            2   52[BANK0 ] PTR void 
  3041 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  3042 ;;		 -> sendUARTbyte@temp(1), main@ctrl(2), main@uc(5), NULL(0), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  length          1   54[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3054 ;;      Params:         0       3       0       0       0
  3055 ;;      Locals:         0       1       0       0       0
  3056 ;;      Temps:          0       0       0       0       0
  3057 ;;      Totals:         0       4       0       0       0
  3058 ;;Total ram usage:        4 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:   12
  3061 ;; This function calls:
  3062 ;;		_send_msg
  3063 ;; This function is called by:
  3064 ;;		_sendUARTarr
  3065 ;;		_sendUARTbyte
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text10
  3070  001AF8                     __ptext10:
  3071                           	opt stack 0
  3072  001AF8                     _ToMainLow_sendmsg:
  3073                           	opt stack 16
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077                           ;ToMainLow_sendmsg@length stored from wreg
  3078  001AF8  0100               	movlb	0	; () banked
  3079  001AFA  6FB6               	movwf	ToMainLow_sendmsg@length& (0+255),b
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3083  001AFC  0101               	movlb	1	; () banked
  3084  001AFE  0E01               	movlw	high _ToMainLow_MQ
  3085  001B00  0100               	movlb	0	; () banked
  3086  001B02  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  3087  001B04  0101               	movlb	1	; () banked
  3088  001B06  0EA4               	movlw	low _ToMainLow_MQ
  3089  001B08  0100               	movlb	0	; () banked
  3090  001B0A  6FA7               	movwf	send_msg@qptr& (0+255),b
  3091  001B0C  C0B6  F0A9         	movff	ToMainLow_sendmsg@length,send_msg@length
  3092  001B10  C0B3  F0AA         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3093  001B14  0100               	movlb	0	; () banked
  3094  001B16  C0B5  F0AC         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3095  001B1A  0100               	movlb	0	; () banked
  3096  001B1C  C0B4  F0AB         	movff	ToMainLow_sendmsg@data,send_msg@data
  3097  001B20  EC5E  F006         	call	_send_msg	;wreg free
  3098  001B24  0012               	return	
  3099  001B26                     __end_of_ToMainLow_sendmsg:
  3100                           	opt stack 0
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           intcon2	equ	0xFF1
  3109                           postinc0	equ	0xFEE
  3110                           wreg	equ	0xFE8
  3111                           indf1	equ	0xFE7
  3112                           postdec1	equ	0xFE5
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           postinc2	equ	0xFDE
  3117                           postdec2	equ	0xFDD
  3118                           fsr2h	equ	0xFDA
  3119                           fsr2l	equ	0xFD9
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _send_msg *****************
  3123 ;; Defined at:
  3124 ;;		line 24 in file "src/messages.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3127 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3128 ;;  length          1   41[BANK0 ] unsigned char 
  3129 ;;  msgtype         1   42[BANK0 ] unsigned char 
  3130 ;;  data            2   43[BANK0 ] PTR void 
  3131 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  3132 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), 
  3133 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  qmsg            2   49[BANK0 ] PTR struct __msg
  3136 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3137 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3138 ;;  tlength         2   46[BANK0 ] unsigned int 
  3139 ;;  slot            1   48[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      char 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3149 ;;      Params:         0       6       0       0       0
  3150 ;;      Locals:         0       5       0       0       0
  3151 ;;      Temps:          0       1       0       0       0
  3152 ;;      Totals:         0      12       0       0       0
  3153 ;;Total ram usage:       12 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:   11
  3156 ;; This function calls:
  3157 ;;		_memcpy
  3158 ;; This function is called by:
  3159 ;;		_ToMainLow_sendmsg
  3160 ;;		_FromMainLow_sendmsg
  3161 ;;		_FromMainHigh_sendmsg
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text11
  3166  000CBC                     __ptext11:
  3167                           	opt stack 0
  3168  000CBC                     _send_msg:
  3169                           	opt stack 17
  3170                           
  3171                           ;messages.c: 25: unsigned char slot;
  3172                           ;messages.c: 27: msg *qmsg;
  3173                           ;messages.c: 28: size_t tlength = length;
  3174                           
  3175                           ;incstack = 0
  3176  000CBC  0100               	movlb	0	; () banked
  3177  000CBE  C0A9  F0AE         	movff	send_msg@length,send_msg@tlength
  3178  000CC2  0100               	movlb	0	; () banked
  3179  000CC4  6BAF               	clrf	(send_msg@tlength+1)& (0+255),b
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3183  000CC6  0100               	movlb	0	; () banked
  3184  000CC8  EE20 F034          	lfsr	2,52
  3185  000CCC  0100               	movlb	0	; () banked
  3186  000CCE  51A7               	movf	send_msg@qptr& (0+255),w,b
  3187  000CD0  26D9               	addwf	fsr2l,f,c
  3188  000CD2  0100               	movlb	0	; () banked
  3189  000CD4  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3190  000CD6  22DA               	addwfc	fsr2h,f,c
  3191  000CD8  50DF               	movf	indf2,w,c
  3192  000CDA  0100               	movlb	0	; () banked
  3193  000CDC  6FB0               	movwf	send_msg@slot& (0+255),b
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3197  000CDE  0100               	movlb	0	; () banked
  3198  000CE0  51B0               	movf	send_msg@slot& (0+255),w,b
  3199  000CE2  0D0D               	mullw	13
  3200  000CE4  50F3               	movf	prodl,w,c
  3201  000CE6  0100               	movlb	0	; () banked
  3202  000CE8  25A7               	addwf	send_msg@qptr& (0+255),w,b
  3203  000CEA  0100               	movlb	0	; () banked
  3204  000CEC  6FB1               	movwf	send_msg@qmsg& (0+255),b
  3205  000CEE  50F4               	movf	prodh,w,c
  3206  000CF0  0100               	movlb	0	; () banked
  3207  000CF2  21A8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3208  000CF4  0100               	movlb	0	; () banked
  3209  000CF6  6FB2               	movwf	(send_msg@qmsg+1)& (0+255),b
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;messages.c: 41: if (qmsg->full != 0) {
  3213  000CF8  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  3214  000CFC  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3215  000D00  50DF               	movf	indf2,w,c
  3216  000D02  B4D8               	btfsc	status,2,c
  3217  000D04  D002               	goto	l2143
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;messages.c: 42: return (-1);
  3221  000D06  0EFF               	movlw	255
  3222  000D08  0012               	return	
  3223  000D0A                     l2143:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;messages.c: 43: }
  3227                           ;messages.c: 46: qmsg->length = length;
  3228  000D0A  0100               	movlb	0	; () banked
  3229  000D0C  EE20 F001          	lfsr	2,1
  3230  000D10  0100               	movlb	0	; () banked
  3231  000D12  51B1               	movf	send_msg@qmsg& (0+255),w,b
  3232  000D14  26D9               	addwf	fsr2l,f,c
  3233  000D16  0100               	movlb	0	; () banked
  3234  000D18  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3235  000D1A  22DA               	addwfc	fsr2h,f,c
  3236  000D1C  0100               	movlb	0	; () banked
  3237  000D1E  C0A9  FFDF         	movff	send_msg@length,indf2
  3238                           
  3239                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3240  000D22  0100               	movlb	0	; () banked
  3241  000D24  EE20 F002          	lfsr	2,2
  3242  000D28  0100               	movlb	0	; () banked
  3243  000D2A  51B1               	movf	send_msg@qmsg& (0+255),w,b
  3244  000D2C  26D9               	addwf	fsr2l,f,c
  3245  000D2E  0100               	movlb	0	; () banked
  3246  000D30  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3247  000D32  22DA               	addwfc	fsr2h,f,c
  3248  000D34  0100               	movlb	0	; () banked
  3249  000D36  C0AA  FFDF         	movff	send_msg@msgtype,indf2
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3253  000D3A  0E03               	movlw	3
  3254  000D3C  0100               	movlb	0	; () banked
  3255  000D3E  25B1               	addwf	send_msg@qmsg& (0+255),w,b
  3256  000D40  0100               	movlb	0	; () banked
  3257  000D42  6F9D               	movwf	memcpy@d1& (0+255),b
  3258  000D44  0E00               	movlw	0
  3259  000D46  0100               	movlb	0	; () banked
  3260  000D48  21B2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3261  000D4A  0100               	movlb	0	; () banked
  3262  000D4C  6F9E               	movwf	(memcpy@d1+1)& (0+255),b
  3263  000D4E  0100               	movlb	0	; () banked
  3264  000D50  C0AC  F0A0         	movff	send_msg@data+1,memcpy@s1+1
  3265  000D54  0100               	movlb	0	; () banked
  3266  000D56  C0AB  F09F         	movff	send_msg@data,memcpy@s1
  3267  000D5A  C0AE  F0A1         	movff	send_msg@tlength,memcpy@n
  3268  000D5E  C0AF  F0A2         	movff	send_msg@tlength+1,memcpy@n+1
  3269  000D62  EC1A  F00C         	call	_memcpy	;wreg free
  3270                           
  3271                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3272  000D66  0100               	movlb	0	; () banked
  3273  000D68  EE20 F034          	lfsr	2,52
  3274  000D6C  0100               	movlb	0	; () banked
  3275  000D6E  51A7               	movf	send_msg@qptr& (0+255),w,b
  3276  000D70  26D9               	addwf	fsr2l,f,c
  3277  000D72  0100               	movlb	0	; () banked
  3278  000D74  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3279  000D76  22DA               	addwfc	fsr2h,f,c
  3280  000D78  0100               	movlb	0	; () banked
  3281  000D7A  EE10 F034          	lfsr	1,52
  3282  000D7E  0100               	movlb	0	; () banked
  3283  000D80  51A7               	movf	send_msg@qptr& (0+255),w,b
  3284  000D82  26E1               	addwf	fsr1l,f,c
  3285  000D84  0100               	movlb	0	; () banked
  3286  000D86  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3287  000D88  22E2               	addwfc	fsr1h,f,c
  3288  000D8A  50E7               	movf	indf1,w,c
  3289  000D8C  0100               	movlb	0	; () banked
  3290  000D8E  6FAD               	movwf	??_send_msg& (0+255),b
  3291  000D90  0100               	movlb	0	; () banked
  3292  000D92  29AD               	incf	??_send_msg& (0+255),w,b
  3293  000D94  0B03               	andlw	3
  3294  000D96  6EDF               	movwf	indf2,c
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;messages.c: 59: qmsg->full = 1;
  3298  000D98  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  3299  000D9C  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3300  000DA0  0E01               	movlw	1
  3301  000DA2  6EDF               	movwf	indf2,c
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;messages.c: 60: return (1);
  3305  000DA4  0E01               	movlw	1
  3306  000DA6  0012               	return	
  3307  000DA8                     __end_of_send_msg:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           intcon	equ	0xFF2
  3316                           intcon2	equ	0xFF1
  3317                           postinc0	equ	0xFEE
  3318                           wreg	equ	0xFE8
  3319                           indf1	equ	0xFE7
  3320                           postdec1	equ	0xFE5
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           indf2	equ	0xFDF
  3324                           postinc2	equ	0xFDE
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _WriteTimer1 *****************
  3331 ;; Defined at:
  3332 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  timer1          2   29[BANK0 ] unsigned int 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  timer           2   31[BANK0 ] struct Timers
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		None
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3346 ;;      Params:         0       2       0       0       0
  3347 ;;      Locals:         0       2       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       4       0       0       0
  3350 ;;Total ram usage:        4 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:   10
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_timer1_lthread
  3357 ;;		_moveDir
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text12
  3362  001C7A                     __ptext12:
  3363                           	opt stack 0
  3364  001C7A                     _WriteTimer1:
  3365                           	opt stack 19
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;incstack = 0
  3369  001C7A  C09D  F09F         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3370  001C7E  C09E  F0A0         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3371  001C82  C0A0  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3372  001C86  C09F  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3373  001C8A  0012               	return	
  3374  001C8C                     __end_of_WriteTimer1:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           prodh	equ	0xFF4
  3381                           prodl	equ	0xFF3
  3382                           intcon	equ	0xFF2
  3383                           intcon2	equ	0xFF1
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf1	equ	0xFE7
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _init_uart_recv *****************
  3398 ;; Defined at:
  3399 ;;		line 80 in file "src/my_uart.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  3402 ;;		 -> main@uc(5), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3414 ;;      Params:         0       2       0       0       0
  3415 ;;      Locals:         0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       2       0       0       0
  3418 ;;Total ram usage:        2 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:   10
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text13
  3429  001C0E                     __ptext13:
  3430                           	opt stack 0
  3431  001C0E                     _init_uart_recv:
  3432                           	opt stack 20
  3433                           
  3434                           ;my_uart.c: 81: uc_ptr = uc;
  3435                           
  3436                           ;incstack = 0
  3437  001C0E  0100               	movlb	0	; () banked
  3438  001C10  C09E  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3439  001C14  0100               	movlb	0	; () banked
  3440  001C16  C09D  F049         	movff	init_uart_recv@uc,_uc_ptr
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3444  001C1A  EE20 F004          	lfsr	2,4
  3445  001C1E  5049               	movf	_uc_ptr,w,c
  3446  001C20  26D9               	addwf	fsr2l,f,c
  3447  001C22  504A               	movf	_uc_ptr+1,w,c
  3448  001C24  22DA               	addwfc	fsr2h,f,c
  3449  001C26  0E00               	movlw	0
  3450  001C28  6EDF               	movwf	indf2,c
  3451                           
  3452                           ; BSR set to: 0
  3453  001C2A  0012               	return	
  3454  001C2C                     __end_of_init_uart_recv:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           intcon2	equ	0xFF1
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           indf1	equ	0xFE7
  3467                           postdec1	equ	0xFE5
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           postinc2	equ	0xFDE
  3472                           postdec2	equ	0xFDD
  3473                           fsr2h	equ	0xFDA
  3474                           fsr2l	equ	0xFD9
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _init_uart_lthread *****************
  3478 ;; Defined at:
  3479 ;;		line 7 in file "src/uart_thread.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  3482 ;;		 -> main@uthread_data(10), 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		None
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3494 ;;      Params:         0       2       0       0       0
  3495 ;;      Locals:         0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0
  3497 ;;      Totals:         0       2       0       0       0
  3498 ;;Total ram usage:        2 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:   10
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text14
  3509  001CBA                     __ptext14:
  3510                           	opt stack 0
  3511  001CBA                     _init_uart_lthread:
  3512                           	opt stack 20
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;incstack = 0
  3516  001CBA  0012               	return	
  3517  001CBC                     __end_of_init_uart_lthread:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           intcon2	equ	0xFF1
  3527                           postinc0	equ	0xFEE
  3528                           wreg	equ	0xFE8
  3529                           indf1	equ	0xFE7
  3530                           postdec1	equ	0xFE5
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _init_timer1_lthread *****************
  3541 ;; Defined at:
  3542 ;;		line 7 in file "src/timer1_thread.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  3545 ;;		 -> main@t1thread_data(45), 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3557 ;;      Params:         0       2       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       2       0       0       0
  3561 ;;Total ram usage:        2 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:   10
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text15
  3572  000DA8                     __ptext15:
  3573                           	opt stack 0
  3574  000DA8                     _init_timer1_lthread:
  3575                           	opt stack 20
  3576                           
  3577                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  3578                           
  3579                           ;incstack = 0
  3580  000DA8  C09D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3581  000DAC  C09E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3582  000DB0  0E00               	movlw	0
  3583  000DB2  6EDE               	movwf	postinc2,c
  3584  000DB4  0E00               	movlw	0
  3585  000DB6  6EDD               	movwf	postdec2,c
  3586                           
  3587                           ;timer1_thread.c: 9: tptr->ctrl[0] = 182;
  3588  000DB8  0100               	movlb	0	; () banked
  3589  000DBA  EE20 F002          	lfsr	2,2
  3590  000DBE  0100               	movlb	0	; () banked
  3591  000DC0  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3592  000DC2  26D9               	addwf	fsr2l,f,c
  3593  000DC4  0100               	movlb	0	; () banked
  3594  000DC6  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3595  000DC8  22DA               	addwfc	fsr2h,f,c
  3596  000DCA  0EB6               	movlw	182
  3597  000DCC  6EDF               	movwf	indf2,c
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;timer1_thread.c: 10: tptr->ctrl[1] = 54;
  3601  000DCE  0100               	movlb	0	; () banked
  3602  000DD0  EE20 F003          	lfsr	2,3
  3603  000DD4  0100               	movlb	0	; () banked
  3604  000DD6  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3605  000DD8  26D9               	addwf	fsr2l,f,c
  3606  000DDA  0100               	movlb	0	; () banked
  3607  000DDC  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3608  000DDE  22DA               	addwfc	fsr2h,f,c
  3609  000DE0  0E36               	movlw	54
  3610  000DE2  6EDF               	movwf	indf2,c
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;timer1_thread.c: 11: tptr->prevPos[0] = 0;
  3614  000DE4  0100               	movlb	0	; () banked
  3615  000DE6  EE20 F024          	lfsr	2,36
  3616  000DEA  0100               	movlb	0	; () banked
  3617  000DEC  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3618  000DEE  26D9               	addwf	fsr2l,f,c
  3619  000DF0  0100               	movlb	0	; () banked
  3620  000DF2  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3621  000DF4  22DA               	addwfc	fsr2h,f,c
  3622  000DF6  0E00               	movlw	0
  3623  000DF8  6EDF               	movwf	indf2,c
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;timer1_thread.c: 12: tptr->prevPos[1] = 0;
  3627  000DFA  0100               	movlb	0	; () banked
  3628  000DFC  EE20 F025          	lfsr	2,37
  3629  000E00  0100               	movlb	0	; () banked
  3630  000E02  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3631  000E04  26D9               	addwf	fsr2l,f,c
  3632  000E06  0100               	movlb	0	; () banked
  3633  000E08  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3634  000E0A  22DA               	addwfc	fsr2h,f,c
  3635  000E0C  0E00               	movlw	0
  3636  000E0E  6EDF               	movwf	indf2,c
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;timer1_thread.c: 13: tptr->current_position = 0;
  3640  000E10  0100               	movlb	0	; () banked
  3641  000E12  EE20 F026          	lfsr	2,38
  3642  000E16  0100               	movlb	0	; () banked
  3643  000E18  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3644  000E1A  26D9               	addwf	fsr2l,f,c
  3645  000E1C  0100               	movlb	0	; () banked
  3646  000E1E  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3647  000E20  22DA               	addwfc	fsr2h,f,c
  3648  000E22  0E00               	movlw	0
  3649  000E24  6EDF               	movwf	indf2,c
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;timer1_thread.c: 14: tptr->direction = 0;
  3653  000E26  0100               	movlb	0	; () banked
  3654  000E28  EE20 F027          	lfsr	2,39
  3655  000E2C  0100               	movlb	0	; () banked
  3656  000E2E  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3657  000E30  26D9               	addwf	fsr2l,f,c
  3658  000E32  0100               	movlb	0	; () banked
  3659  000E34  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3660  000E36  22DA               	addwfc	fsr2h,f,c
  3661  000E38  0E00               	movlw	0
  3662  000E3A  6EDF               	movwf	indf2,c
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;timer1_thread.c: 15: tptr->cmDist = 65535-78;
  3666  000E3C  0100               	movlb	0	; () banked
  3667  000E3E  EE20 F028          	lfsr	2,40
  3668  000E42  0100               	movlb	0	; () banked
  3669  000E44  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3670  000E46  26D9               	addwf	fsr2l,f,c
  3671  000E48  0100               	movlb	0	; () banked
  3672  000E4A  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3673  000E4C  22DA               	addwfc	fsr2h,f,c
  3674  000E4E  0EB1               	movlw	177
  3675  000E50  6EDE               	movwf	postinc2,c
  3676  000E52  0EFF               	movlw	255
  3677  000E54  6EDD               	movwf	postdec2,c
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;timer1_thread.c: 16: tptr->curMove = 0;
  3681  000E56  0100               	movlb	0	; () banked
  3682  000E58  EE20 F02A          	lfsr	2,42
  3683  000E5C  0100               	movlb	0	; () banked
  3684  000E5E  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3685  000E60  26D9               	addwf	fsr2l,f,c
  3686  000E62  0100               	movlb	0	; () banked
  3687  000E64  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3688  000E66  22DA               	addwfc	fsr2h,f,c
  3689  000E68  0E00               	movlw	0
  3690  000E6A  6EDE               	movwf	postinc2,c
  3691  000E6C  0E00               	movlw	0
  3692  000E6E  6EDD               	movwf	postdec2,c
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;timer1_thread.c: 17: tptr->turning = false;
  3696  000E70  0100               	movlb	0	; () banked
  3697  000E72  EE20 F02C          	lfsr	2,44
  3698  000E76  0100               	movlb	0	; () banked
  3699  000E78  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3700  000E7A  26D9               	addwf	fsr2l,f,c
  3701  000E7C  0100               	movlb	0	; () banked
  3702  000E7E  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3703  000E80  22DA               	addwfc	fsr2h,f,c
  3704  000E82  0E00               	movlw	0
  3705  000E84  6EDF               	movwf	indf2,c
  3706                           
  3707                           ; BSR set to: 0
  3708  000E86  0012               	return	
  3709  000E88                     __end_of_init_timer1_lthread:
  3710                           	opt stack 0
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           intcon2	equ	0xFF1
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8
  3731                           
  3732 ;; *************** function _init_timer0_lthread *****************
  3733 ;; Defined at:
  3734 ;;		line 10 in file "src/timer0_thread.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  3737 ;;		 -> main@t0thread_data(4), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;		None               void
  3742 ;; Registers used:
  3743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3749 ;;      Params:         0       2       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         0       2       0       0       0
  3753 ;;Total ram usage:        2 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:   10
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text16
  3764  001C4A                     __ptext16:
  3765                           	opt stack 0
  3766  001C4A                     _init_timer0_lthread:
  3767                           	opt stack 20
  3768                           
  3769                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;incstack = 0
  3773  001C4A  0100               	movlb	0	; () banked
  3774  001C4C  EE20 F002          	lfsr	2,2
  3775  001C50  0100               	movlb	0	; () banked
  3776  001C52  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3777  001C54  26D9               	addwf	fsr2l,f,c
  3778  001C56  0100               	movlb	0	; () banked
  3779  001C58  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3780  001C5A  22DA               	addwfc	fsr2h,f,c
  3781  001C5C  0E00               	movlw	0
  3782  001C5E  6EDE               	movwf	postinc2,c
  3783  001C60  0E00               	movlw	0
  3784  001C62  6EDD               	movwf	postdec2,c
  3785                           
  3786                           ; BSR set to: 0
  3787  001C64  0012               	return	
  3788  001C66                     __end_of_init_timer0_lthread:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           intcon2	equ	0xFF1
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           indf1	equ	0xFE7
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           postinc2	equ	0xFDE
  3806                           postdec2	equ	0xFDD
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _init_queues *****************
  3812 ;; Defined at:
  3813 ;;		line 194 in file "src/messages.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;		None               void
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3827 ;;      Params:         0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:   11
  3834 ;; This function calls:
  3835 ;;		_init_queue
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text17
  3842  001738                     __ptext17:
  3843                           	opt stack 0
  3844  001738                     _init_queues:
  3845                           	opt stack 19
  3846                           
  3847                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;incstack = 0
  3851  001738  0E00               	movlw	0
  3852  00173A  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3853                           
  3854                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3855  00173C  0101               	movlb	1	; () banked
  3856  00173E  0E01               	movlw	high _ToMainLow_MQ
  3857  001740  0100               	movlb	0	; () banked
  3858  001742  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  3859  001744  0101               	movlb	1	; () banked
  3860  001746  0EA4               	movlw	low _ToMainLow_MQ
  3861  001748  0100               	movlb	0	; () banked
  3862  00174A  6F9D               	movwf	init_queue@qptr& (0+255),b
  3863  00174C  EC0C  F00B         	call	_init_queue	;wreg free
  3864                           
  3865                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3866  001750  0101               	movlb	1	; () banked
  3867  001752  0E01               	movlw	high _ToMainHigh_MQ
  3868  001754  0100               	movlb	0	; () banked
  3869  001756  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  3870  001758  0101               	movlb	1	; () banked
  3871  00175A  0E6E               	movlw	low _ToMainHigh_MQ
  3872  00175C  0100               	movlb	0	; () banked
  3873  00175E  6F9D               	movwf	init_queue@qptr& (0+255),b
  3874  001760  EC0C  F00B         	call	_init_queue	;wreg free
  3875                           
  3876                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3877  001764  0102               	movlb	2	; () banked
  3878  001766  0E02               	movlw	high _FromMainLow_MQ
  3879  001768  0100               	movlb	0	; () banked
  3880  00176A  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  3881  00176C  0102               	movlb	2	; () banked
  3882  00176E  0E36               	movlw	low _FromMainLow_MQ
  3883  001770  0100               	movlb	0	; () banked
  3884  001772  6F9D               	movwf	init_queue@qptr& (0+255),b
  3885  001774  EC0C  F00B         	call	_init_queue	;wreg free
  3886                           
  3887                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3888  001778  0102               	movlb	2	; () banked
  3889  00177A  0E02               	movlw	high _FromMainHigh_MQ
  3890  00177C  0100               	movlb	0	; () banked
  3891  00177E  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  3892  001780  0102               	movlb	2	; () banked
  3893  001782  0E00               	movlw	low _FromMainHigh_MQ
  3894  001784  0100               	movlb	0	; () banked
  3895  001786  6F9D               	movwf	init_queue@qptr& (0+255),b
  3896  001788  EC0C  F00B         	call	_init_queue	;wreg free
  3897  00178C  0012               	return	
  3898  00178E                     __end_of_init_queues:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           prodh	equ	0xFF4
  3905                           prodl	equ	0xFF3
  3906                           intcon	equ	0xFF2
  3907                           intcon2	equ	0xFF1
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           indf1	equ	0xFE7
  3911                           postdec1	equ	0xFE5
  3912                           fsr1h	equ	0xFE2
  3913                           fsr1l	equ	0xFE1
  3914                           indf2	equ	0xFDF
  3915                           postinc2	equ	0xFDE
  3916                           postdec2	equ	0xFDD
  3917                           fsr2h	equ	0xFDA
  3918                           fsr2l	equ	0xFD9
  3919                           status	equ	0xFD8
  3920                           
  3921 ;; *************** function _init_queue *****************
  3922 ;; Defined at:
  3923 ;;		line 14 in file "src/messages.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3926 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  i               1   31[BANK0 ] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;		None               void
  3931 ;; Registers used:
  3932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3938 ;;      Params:         0       2       0       0       0
  3939 ;;      Locals:         0       1       0       0       0
  3940 ;;      Temps:          0       0       0       0       0
  3941 ;;      Totals:         0       3       0       0       0
  3942 ;;Total ram usage:        3 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:   10
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_init_queues
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text18
  3953  001618                     __ptext18:
  3954                           	opt stack 0
  3955  001618                     _init_queue:
  3956                           	opt stack 19
  3957                           
  3958                           ;messages.c: 15: unsigned char i;
  3959                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3960                           
  3961                           ;incstack = 0
  3962  001618  0100               	movlb	0	; () banked
  3963  00161A  EE20 F034          	lfsr	2,52
  3964  00161E  0100               	movlb	0	; () banked
  3965  001620  519D               	movf	init_queue@qptr& (0+255),w,b
  3966  001622  26D9               	addwf	fsr2l,f,c
  3967  001624  0100               	movlb	0	; () banked
  3968  001626  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  3969  001628  22DA               	addwfc	fsr2h,f,c
  3970  00162A  0E00               	movlw	0
  3971  00162C  6EDF               	movwf	indf2,c
  3972                           
  3973                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3974  00162E  0100               	movlb	0	; () banked
  3975  001630  EE20 F035          	lfsr	2,53
  3976  001634  0100               	movlb	0	; () banked
  3977  001636  519D               	movf	init_queue@qptr& (0+255),w,b
  3978  001638  26D9               	addwf	fsr2l,f,c
  3979  00163A  0100               	movlb	0	; () banked
  3980  00163C  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  3981  00163E  22DA               	addwfc	fsr2h,f,c
  3982  001640  0E00               	movlw	0
  3983  001642  6EDF               	movwf	indf2,c
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3987  001644  0E00               	movlw	0
  3988  001646  0100               	movlb	0	; () banked
  3989  001648  6F9F               	movwf	init_queue@i& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992  00164A  0E03               	movlw	3
  3993  00164C  0100               	movlb	0	; () banked
  3994  00164E  659F               	cpfsgt	init_queue@i& (0+255),b
  3995  001650  D001               	goto	l2315
  3996  001652  0012               	return	
  3997  001654                     l2315:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;messages.c: 20: qptr->queue[i].full = 0;
  4001  001654  0100               	movlb	0	; () banked
  4002  001656  519F               	movf	init_queue@i& (0+255),w,b
  4003  001658  0D0D               	mullw	13
  4004  00165A  50F3               	movf	prodl,w,c
  4005  00165C  0100               	movlb	0	; () banked
  4006  00165E  259D               	addwf	init_queue@qptr& (0+255),w,b
  4007  001660  6ED9               	movwf	fsr2l,c
  4008  001662  50F4               	movf	prodh,w,c
  4009  001664  0100               	movlb	0	; () banked
  4010  001666  219E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4011  001668  6EDA               	movwf	fsr2h,c
  4012  00166A  0E00               	movlw	0
  4013  00166C  6EDF               	movwf	indf2,c
  4014                           
  4015                           ; BSR set to: 0
  4016  00166E  0100               	movlb	0	; () banked
  4017  001670  2B9F               	incf	init_queue@i& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 0
  4020  001672  0E03               	movlw	3
  4021  001674  0100               	movlb	0	; () banked
  4022  001676  659F               	cpfsgt	init_queue@i& (0+255),b
  4023  001678  D7ED               	goto	l2315
  4024  00167A  0012               	return	
  4025  00167C                     __end_of_init_queue:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           intcon2	equ	0xFF1
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           indf1	equ	0xFE7
  4038                           postdec1	equ	0xFE5
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function _init_i2c *****************
  4049 ;; Defined at:
  4050 ;;		line 268 in file "src/my_i2c.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  4053 ;;		 -> main@ic(28), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4065 ;;      Params:         0       2       0       0       0
  4066 ;;      Locals:         0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0
  4068 ;;      Totals:         0       2       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:   10
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text19
  4080  0015B2                     __ptext19:
  4081                           	opt stack 0
  4082  0015B2                     _init_i2c:
  4083                           	opt stack 20
  4084                           
  4085                           ;my_i2c.c: 269: ic_ptr = ic;
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;incstack = 0
  4089  0015B2  0100               	movlb	0	; () banked
  4090  0015B4  C09E  F0D4         	movff	init_i2c@ic+1,_ic_ptr+1
  4091  0015B8  0100               	movlb	0	; () banked
  4092  0015BA  C09D  F0D3         	movff	init_i2c@ic,_ic_ptr
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  4096  0015BE  0100               	movlb	0	; () banked
  4097  0015C0  EE20 F00A          	lfsr	2,10
  4098  0015C4  0100               	movlb	0	; () banked
  4099  0015C6  51D3               	movf	_ic_ptr& (0+255),w,b
  4100  0015C8  26D9               	addwf	fsr2l,f,c
  4101  0015CA  0100               	movlb	0	; () banked
  4102  0015CC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4103  0015CE  22DA               	addwfc	fsr2h,f,c
  4104  0015D0  0E00               	movlw	0
  4105  0015D2  6EDF               	movwf	indf2,c
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  4109  0015D4  0100               	movlb	0	; () banked
  4110  0015D6  EE20 F00B          	lfsr	2,11
  4111  0015DA  0100               	movlb	0	; () banked
  4112  0015DC  51D3               	movf	_ic_ptr& (0+255),w,b
  4113  0015DE  26D9               	addwf	fsr2l,f,c
  4114  0015E0  0100               	movlb	0	; () banked
  4115  0015E2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4116  0015E4  22DA               	addwfc	fsr2h,f,c
  4117  0015E6  0E00               	movlw	0
  4118  0015E8  6EDF               	movwf	indf2,c
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  4122  0015EA  0100               	movlb	0	; () banked
  4123  0015EC  EE20 F00C          	lfsr	2,12
  4124  0015F0  0100               	movlb	0	; () banked
  4125  0015F2  51D3               	movf	_ic_ptr& (0+255),w,b
  4126  0015F4  26D9               	addwf	fsr2l,f,c
  4127  0015F6  0100               	movlb	0	; () banked
  4128  0015F8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4129  0015FA  22DA               	addwfc	fsr2h,f,c
  4130  0015FC  0E05               	movlw	5
  4131  0015FE  6EDF               	movwf	indf2,c
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  4135  001600  0100               	movlb	0	; () banked
  4136  001602  EE20 F00E          	lfsr	2,14
  4137  001606  0100               	movlb	0	; () banked
  4138  001608  51D3               	movf	_ic_ptr& (0+255),w,b
  4139  00160A  26D9               	addwf	fsr2l,f,c
  4140  00160C  0100               	movlb	0	; () banked
  4141  00160E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  4142  001610  22DA               	addwfc	fsr2h,f,c
  4143  001612  0E00               	movlw	0
  4144  001614  6EDF               	movwf	indf2,c
  4145                           
  4146                           ; BSR set to: 0
  4147  001616  0012               	return	
  4148  001618                     __end_of_init_i2c:
  4149                           	opt stack 0
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           prodh	equ	0xFF4
  4155                           prodl	equ	0xFF3
  4156                           intcon	equ	0xFF2
  4157                           intcon2	equ	0xFF1
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           indf1	equ	0xFE7
  4161                           postdec1	equ	0xFE5
  4162                           fsr1h	equ	0xFE2
  4163                           fsr1l	equ	0xFE1
  4164                           indf2	equ	0xFDF
  4165                           postinc2	equ	0xFDE
  4166                           postdec2	equ	0xFDD
  4167                           fsr2h	equ	0xFDA
  4168                           fsr2l	equ	0xFD9
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function _i2c_configure_slave *****************
  4172 ;; Defined at:
  4173 ;;		line 279 in file "src/my_i2c.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  addr            1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  addr            1   29[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;		None               void
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4187 ;;      Params:         0       0       0       0       0
  4188 ;;      Locals:         0       1       0       0       0
  4189 ;;      Temps:          0       0       0       0       0
  4190 ;;      Totals:         0       1       0       0       0
  4191 ;;Total ram usage:        1 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:   10
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text20
  4202  001B54                     __ptext20:
  4203                           	opt stack 0
  4204  001B54                     _i2c_configure_slave:
  4205                           	opt stack 20
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;incstack = 0
  4209                           ;i2c_configure_slave@addr stored from wreg
  4210  001B54  0100               	movlb	0	; () banked
  4211  001B56  6F9D               	movwf	i2c_configure_slave@addr& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4215  001B58  8694               	bsf	3988,3,c	;volatile
  4216                           
  4217                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4218  001B5A  8894               	bsf	3988,4,c	;volatile
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;my_i2c.c: 297: SSPADD = addr;
  4222  001B5C  C09D  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4226  001B60  0E00               	movlw	0
  4227  001B62  6EC7               	movwf	4039,c	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4231  001B64  0E00               	movlw	0
  4232  001B66  6EC6               	movwf	4038,c	;volatile
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4236  001B68  0E00               	movlw	0
  4237  001B6A  6EC5               	movwf	4037,c	;volatile
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4241  001B6C  0E0E               	movlw	14
  4242  001B6E  12C6               	iorwf	4038,f,c	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4246  001B70  8EC7               	bsf	4039,7,c	;volatile
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4250  001B72  8694               	bsf	3988,3,c	;volatile
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4254  001B74  8894               	bsf	3988,4,c	;volatile
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4258  001B76  80C5               	bsf	4037,0,c	;volatile
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4262  001B78  8AC6               	bsf	4038,5,c	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265  001B7A  0012               	return	
  4266  001B7C                     __end_of_i2c_configure_slave:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           intcon2	equ	0xFF1
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           indf1	equ	0xFE7
  4279                           postdec1	equ	0xFE5
  4280                           fsr1h	equ	0xFE2
  4281                           fsr1l	equ	0xFE1
  4282                           indf2	equ	0xFDF
  4283                           postinc2	equ	0xFDE
  4284                           postdec2	equ	0xFDD
  4285                           fsr2h	equ	0xFDA
  4286                           fsr2l	equ	0xFD9
  4287                           status	equ	0xFD8
  4288                           
  4289 ;; *************** function _enable_interrupts *****************
  4290 ;; Defined at:
  4291 ;;		line 14 in file "src/interrupts.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;		None               void
  4298 ;; Registers used:
  4299 ;;		None
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0
  4308 ;;      Totals:         0       0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:   10
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text21
  4320  001CA8                     __ptext21:
  4321                           	opt stack 0
  4322  001CA8                     _enable_interrupts:
  4323                           	opt stack 20
  4324                           
  4325                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;incstack = 0
  4329  001CA8  8ED0               	bsf	4048,7,c	;volatile
  4330                           
  4331                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  4332  001CAA  8EF2               	bsf	intcon,7,c	;volatile
  4333                           
  4334                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  4335  001CAC  8CF2               	bsf	intcon,6,c	;volatile
  4336  001CAE  0012               	return	
  4337  001CB0                     __end_of_enable_interrupts:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           intcon2	equ	0xFF1
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           indf1	equ	0xFE7
  4350                           postdec1	equ	0xFE5
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           postdec2	equ	0xFDD
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _block_on_To_msgqueues *****************
  4361 ;; Defined at:
  4362 ;;		line 256 in file "src/messages.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;		None               void
  4369 ;; Registers used:
  4370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4376 ;;      Params:         0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:   13
  4383 ;; This function calls:
  4384 ;;		_Delay1KTCYx
  4385 ;;		_check_msg
  4386 ;;		_in_main
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text22
  4393  0016DC                     __ptext22:
  4394                           	opt stack 0
  4395  0016DC                     _block_on_To_msgqueues:
  4396                           	opt stack 17
  4397                           
  4398                           ;messages.c: 257: if (!in_main()) {
  4399                           
  4400                           ;incstack = 0
  4401  0016DC  ECC8  F00C         	call	_in_main	;wreg free
  4402  0016E0  0100               	movlb	0	; () banked
  4403  0016E2  51A2               	movf	(?_in_main+1)& (0+255),w,b
  4404  0016E4  0100               	movlb	0	; () banked
  4405  0016E6  11A1               	iorwf	?_in_main& (0+255),w,b
  4406  0016E8  B4D8               	btfsc	status,2,c
  4407  0016EA  0012               	return	
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;messages.c: 259: }
  4411                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4412                           
  4413                           ; BSR set to: 0
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;messages.c: 258: return;
  4417  0016EC  0E01               	movlw	1
  4418  0016EE  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4419  0016F0                     l2837:
  4420                           
  4421                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4422  0016F0  0101               	movlb	1	; () banked
  4423  0016F2  0E01               	movlw	high _ToMainHigh_MQ
  4424  0016F4  0100               	movlb	0	; () banked
  4425  0016F6  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  4426  0016F8  0101               	movlb	1	; () banked
  4427  0016FA  0E6E               	movlw	low _ToMainHigh_MQ
  4428  0016FC  0100               	movlb	0	; () banked
  4429  0016FE  6F9D               	movwf	check_msg@qptr& (0+255),b
  4430  001700  EC1C  F00D         	call	_check_msg	;wreg free
  4431  001704  0900               	iorlw	0
  4432  001706  B4D8               	btfsc	status,2,c
  4433  001708  D003               	goto	l2843
  4434                           
  4435                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4436  00170A  0E00               	movlw	0
  4437  00170C  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4438  00170E  0012               	return	
  4439  001710                     l2843:
  4440                           
  4441                           ;messages.c: 271: }
  4442                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4443  001710  0101               	movlb	1	; () banked
  4444  001712  0E01               	movlw	high _ToMainLow_MQ
  4445  001714  0100               	movlb	0	; () banked
  4446  001716  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  4447  001718  0101               	movlb	1	; () banked
  4448  00171A  0EA4               	movlw	low _ToMainLow_MQ
  4449  00171C  0100               	movlb	0	; () banked
  4450  00171E  6F9D               	movwf	check_msg@qptr& (0+255),b
  4451  001720  EC1C  F00D         	call	_check_msg	;wreg free
  4452  001724  0900               	iorlw	0
  4453  001726  B4D8               	btfsc	status,2,c
  4454  001728  D003               	goto	l2849
  4455                           
  4456                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4457  00172A  0E00               	movlw	0
  4458  00172C  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4459  00172E  0012               	return	
  4460  001730                     l2849:
  4461                           
  4462                           ;messages.c: 278: }
  4463                           ;messages.c: 279: Delay1KTCYx(10);
  4464  001730  0E0A               	movlw	10
  4465  001732  EC33  F00E         	call	_Delay1KTCYx
  4466  001736  D7DC               	goto	l2837
  4467  001738                     __end_of_block_on_To_msgqueues:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           intcon2	equ	0xFF1
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           indf1	equ	0xFE7
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           indf2	equ	0xFDF
  4484                           postinc2	equ	0xFDE
  4485                           postdec2	equ	0xFDD
  4486                           fsr2h	equ	0xFDA
  4487                           fsr2l	equ	0xFD9
  4488                           status	equ	0xFD8
  4489                           
  4490 ;; *************** function _in_main *****************
  4491 ;; Defined at:
  4492 ;;		line 40 in file "src/interrupts.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2   33[BANK0 ] int 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4506 ;;      Params:         0       2       0       0       0
  4507 ;;      Locals:         0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0
  4509 ;;      Totals:         0       2       0       0       0
  4510 ;;Total ram usage:        2 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:   12
  4513 ;; This function calls:
  4514 ;;		_in_high_int
  4515 ;;		_in_low_int
  4516 ;; This function is called by:
  4517 ;;		_block_on_To_msgqueues
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text23
  4522  001990                     __ptext23:
  4523                           	opt stack 0
  4524  001990                     _in_main:
  4525                           	opt stack 17
  4526                           
  4527                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  4528                           
  4529                           ;incstack = 0
  4530  001990  ECA9  F00C         	call	_in_low_int	;wreg free
  4531  001994  0100               	movlb	0	; () banked
  4532  001996  51A0               	movf	(?_in_low_int+1)& (0+255),w,b
  4533  001998  0100               	movlb	0	; () banked
  4534  00199A  119F               	iorwf	?_in_low_int& (0+255),w,b
  4535  00199C  A4D8               	btfss	status,2,c
  4536  00199E  D00F               	goto	l2293
  4537                           
  4538                           ; BSR set to: 0
  4539  0019A0  EC46  F00E         	call	_in_high_int	;wreg free
  4540  0019A4  0100               	movlb	0	; () banked
  4541  0019A6  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  4542  0019A8  0100               	movlb	0	; () banked
  4543  0019AA  119D               	iorwf	?_in_high_int& (0+255),w,b
  4544  0019AC  A4D8               	btfss	status,2,c
  4545  0019AE  D007               	goto	l2293
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;interrupts.c: 42: return (1);
  4549  0019B0  0E00               	movlw	0
  4550  0019B2  0100               	movlb	0	; () banked
  4551  0019B4  6FA2               	movwf	(?_in_main+1)& (0+255),b
  4552  0019B6  0E01               	movlw	1
  4553  0019B8  0100               	movlb	0	; () banked
  4554  0019BA  6FA1               	movwf	?_in_main& (0+255),b
  4555  0019BC  0012               	return	
  4556  0019BE                     l2293:
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;interrupts.c: 44: return (0);
  4560  0019BE  0E00               	movlw	0
  4561  0019C0  0100               	movlb	0	; () banked
  4562  0019C2  6FA2               	movwf	(?_in_main+1)& (0+255),b
  4563  0019C4  0E00               	movlw	0
  4564  0019C6  0100               	movlb	0	; () banked
  4565  0019C8  6FA1               	movwf	?_in_main& (0+255),b
  4566  0019CA  0012               	return	
  4567  0019CC                     __end_of_in_main:
  4568                           	opt stack 0
  4569                           tblptru	equ	0xFF8
  4570                           tblptrh	equ	0xFF7
  4571                           tblptrl	equ	0xFF6
  4572                           tablat	equ	0xFF5
  4573                           prodh	equ	0xFF4
  4574                           prodl	equ	0xFF3
  4575                           intcon	equ	0xFF2
  4576                           intcon2	equ	0xFF1
  4577                           postinc0	equ	0xFEE
  4578                           wreg	equ	0xFE8
  4579                           indf1	equ	0xFE7
  4580                           postdec1	equ	0xFE5
  4581                           fsr1h	equ	0xFE2
  4582                           fsr1l	equ	0xFE1
  4583                           indf2	equ	0xFDF
  4584                           postinc2	equ	0xFDE
  4585                           postdec2	equ	0xFDD
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8
  4589                           
  4590 ;; *************** function _in_low_int *****************
  4591 ;; Defined at:
  4592 ;;		line 30 in file "src/interrupts.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2   31[BANK0 ] int 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4606 ;;      Params:         0       2       0       0       0
  4607 ;;      Locals:         0       0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0
  4609 ;;      Totals:         0       2       0       0       0
  4610 ;;Total ram usage:        2 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:   11
  4613 ;; This function calls:
  4614 ;;		_in_high_int
  4615 ;; This function is called by:
  4616 ;;		_in_main
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text24
  4621  001952                     __ptext24:
  4622                           	opt stack 0
  4623  001952                     _in_low_int:
  4624                           	opt stack 17
  4625                           
  4626                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;incstack = 0
  4630  001952  ACF2               	btfss	intcon,6,c	;volatile
  4631  001954  D007               	goto	l2183
  4632                           
  4633                           ;interrupts.c: 32: return (0);
  4634  001956  0E00               	movlw	0
  4635  001958  0100               	movlb	0	; () banked
  4636  00195A  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4637  00195C  0E00               	movlw	0
  4638  00195E  0100               	movlb	0	; () banked
  4639  001960  6F9F               	movwf	?_in_low_int& (0+255),b
  4640  001962  0012               	return	
  4641  001964                     l2183:
  4642  001964  EC46  F00E         	call	_in_high_int	;wreg free
  4643  001968  0100               	movlb	0	; () banked
  4644  00196A  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  4645  00196C  0100               	movlb	0	; () banked
  4646  00196E  119D               	iorwf	?_in_high_int& (0+255),w,b
  4647  001970  B4D8               	btfsc	status,2,c
  4648  001972  D007               	goto	l2191
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;interrupts.c: 34: return (0);
  4652  001974  0E00               	movlw	0
  4653  001976  0100               	movlb	0	; () banked
  4654  001978  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4655  00197A  0E00               	movlw	0
  4656  00197C  0100               	movlb	0	; () banked
  4657  00197E  6F9F               	movwf	?_in_low_int& (0+255),b
  4658  001980  0012               	return	
  4659  001982                     l2191:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;interrupts.c: 36: return (1);
  4663  001982  0E00               	movlw	0
  4664  001984  0100               	movlb	0	; () banked
  4665  001986  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4666  001988  0E01               	movlw	1
  4667  00198A  0100               	movlb	0	; () banked
  4668  00198C  6F9F               	movwf	?_in_low_int& (0+255),b
  4669  00198E  0012               	return	
  4670  001990                     __end_of_in_low_int:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           intcon2	equ	0xFF1
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           indf1	equ	0xFE7
  4683                           postdec1	equ	0xFE5
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           indf2	equ	0xFDF
  4687                           postinc2	equ	0xFDE
  4688                           postdec2	equ	0xFDD
  4689                           fsr2h	equ	0xFDA
  4690                           fsr2l	equ	0xFD9
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _in_high_int *****************
  4694 ;; Defined at:
  4695 ;;		line 22 in file "src/interrupts.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2   29[BANK0 ] int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4709 ;;      Params:         0       2       0       0       0
  4710 ;;      Locals:         0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0
  4712 ;;      Totals:         0       2       0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:   10
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_in_low_int
  4720 ;;		_in_main
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text25
  4725  001C8C                     __ptext25:
  4726                           	opt stack 0
  4727  001C8C                     _in_high_int:
  4728                           	opt stack 17
  4729                           
  4730                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;incstack = 0
  4734  001C8C  0E00               	movlw	0
  4735  001C8E  AEF2               	btfss	intcon,7,c	;volatile
  4736  001C90  0E01               	movlw	1
  4737  001C92  0100               	movlb	0	; () banked
  4738  001C94  6F9D               	movwf	?_in_high_int& (0+255),b
  4739  001C96  0100               	movlb	0	; () banked
  4740  001C98  6B9E               	clrf	(?_in_high_int+1)& (0+255),b
  4741  001C9A  0012               	return	
  4742  001C9C                     __end_of_in_high_int:
  4743                           	opt stack 0
  4744                           tblptru	equ	0xFF8
  4745                           tblptrh	equ	0xFF7
  4746                           tblptrl	equ	0xFF6
  4747                           tablat	equ	0xFF5
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           intcon	equ	0xFF2
  4751                           intcon2	equ	0xFF1
  4752                           postinc0	equ	0xFEE
  4753                           wreg	equ	0xFE8
  4754                           indf1	equ	0xFE7
  4755                           postdec1	equ	0xFE5
  4756                           fsr1h	equ	0xFE2
  4757                           fsr1l	equ	0xFE1
  4758                           indf2	equ	0xFDF
  4759                           postinc2	equ	0xFDE
  4760                           postdec2	equ	0xFDD
  4761                           fsr2h	equ	0xFDA
  4762                           fsr2l	equ	0xFD9
  4763                           status	equ	0xFD8
  4764                           
  4765 ;; *************** function _check_msg *****************
  4766 ;; Defined at:
  4767 ;;		line 220 in file "src/messages.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4770 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      unsigned char 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4782 ;;      Params:         0       2       0       0       0
  4783 ;;      Locals:         0       0       0       0       0
  4784 ;;      Temps:          0       1       0       0       0
  4785 ;;      Totals:         0       3       0       0       0
  4786 ;;Total ram usage:        3 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:   10
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_block_on_To_msgqueues
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text26
  4797  001A38                     __ptext26:
  4798                           	opt stack 0
  4799  001A38                     _check_msg:
  4800                           	opt stack 19
  4801                           
  4802                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;incstack = 0
  4806  001A38  0100               	movlb	0	; () banked
  4807  001A3A  EE20 F035          	lfsr	2,53
  4808  001A3E  0100               	movlb	0	; () banked
  4809  001A40  519D               	movf	check_msg@qptr& (0+255),w,b
  4810  001A42  26D9               	addwf	fsr2l,f,c
  4811  001A44  0100               	movlb	0	; () banked
  4812  001A46  519E               	movf	(check_msg@qptr+1)& (0+255),w,b
  4813  001A48  22DA               	addwfc	fsr2h,f,c
  4814  001A4A  50DF               	movf	indf2,w,c
  4815  001A4C  0100               	movlb	0	; () banked
  4816  001A4E  6F9F               	movwf	??_check_msg& (0+255),b
  4817  001A50  0100               	movlb	0	; () banked
  4818  001A52  519F               	movf	??_check_msg& (0+255),w,b
  4819  001A54  0D0D               	mullw	13
  4820  001A56  50F3               	movf	prodl,w,c
  4821  001A58  0100               	movlb	0	; () banked
  4822  001A5A  259D               	addwf	check_msg@qptr& (0+255),w,b
  4823  001A5C  6ED9               	movwf	fsr2l,c
  4824  001A5E  50F4               	movf	prodh,w,c
  4825  001A60  0100               	movlb	0	; () banked
  4826  001A62  219E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4827  001A64  6EDA               	movwf	fsr2h,c
  4828  001A66  50DF               	movf	indf2,w,c
  4829  001A68  0012               	return	
  4830  001A6A                     __end_of_check_msg:
  4831                           	opt stack 0
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           indf1	equ	0xFE7
  4843                           postdec1	equ	0xFE5
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           postdec2	equ	0xFDD
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _Delay1KTCYx *****************
  4854 ;; Defined at:
  4855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  unit            1    wreg     unsigned char 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  unit            1   29[BANK0 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		wreg
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4869 ;;      Params:         0       0       0       0       0
  4870 ;;      Locals:         0       1       0       0       0
  4871 ;;      Temps:          0       0       0       0       0
  4872 ;;      Totals:         0       1       0       0       0
  4873 ;;Total ram usage:        1 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:   10
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_block_on_To_msgqueues
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text27
  4884  001C66                     __ptext27:
  4885                           	opt stack 0
  4886  001C66                     _Delay1KTCYx:
  4887                           	opt stack 19
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;incstack = 0
  4891                           ;Delay1KTCYx@unit stored from wreg
  4892  001C66  0100               	movlb	0	; () banked
  4893  001C68  6F9D               	movwf	Delay1KTCYx@unit& (0+255),b
  4894  001C6A                     l764:
  4895                           
  4896                           ; BSR set to: 0
  4897                           
  4898                           ; BSR set to: 0
  4899  001C6A  0EFA               	movlw	250
  4900  001C6C                     u2467:
  4901  001C6C  F000               	nop	
  4902  001C6E  2EE8               	decfsz	wreg,f,c
  4903  001C70  D7FD               	goto	u2467
  4904  001C72  0100               	movlb	0	; () banked
  4905  001C74  2F9D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4906  001C76  D7F9               	goto	l764
  4907  001C78  0012               	return	
  4908  001C7A                     __end_of_Delay1KTCYx:
  4909                           	opt stack 0
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           intcon	equ	0xFF2
  4917                           intcon2	equ	0xFF1
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           indf1	equ	0xFE7
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           indf2	equ	0xFDF
  4925                           postinc2	equ	0xFDE
  4926                           postdec2	equ	0xFDD
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function _ToMainLow_recvmsg *****************
  4932 ;; Defined at:
  4933 ;;		line 112 in file "src/messages.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  maxlength       1    wreg     unsigned char 
  4936 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  4937 ;;		 -> main@msgtype(1), 
  4938 ;;  data            2   55[BANK0 ] PTR void 
  4939 ;;		 -> main@msgbuffer(11), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      char 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4951 ;;      Params:         0       4       0       0       0
  4952 ;;      Locals:         0       1       0       0       0
  4953 ;;      Temps:          0       0       0       0       0
  4954 ;;      Totals:         0       5       0       0       0
  4955 ;;Total ram usage:        5 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   12
  4958 ;; This function calls:
  4959 ;;		_recv_msg
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text28
  4966  0019CC                     __ptext28:
  4967                           	opt stack 0
  4968  0019CC                     _ToMainLow_recvmsg:
  4969                           	opt stack 18
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;incstack = 0
  4973                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4974  0019CC  0100               	movlb	0	; () banked
  4975  0019CE  6FB9               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4979  0019D0  0101               	movlb	1	; () banked
  4980  0019D2  0E01               	movlw	high _ToMainLow_MQ
  4981  0019D4  0100               	movlb	0	; () banked
  4982  0019D6  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4983  0019D8  0101               	movlb	1	; () banked
  4984  0019DA  0EA4               	movlw	low _ToMainLow_MQ
  4985  0019DC  0100               	movlb	0	; () banked
  4986  0019DE  6FA7               	movwf	recv_msg@qptr& (0+255),b
  4987  0019E0  C0B9  F0A9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4988  0019E4  0100               	movlb	0	; () banked
  4989  0019E6  C0B6  F0AB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4990  0019EA  0100               	movlb	0	; () banked
  4991  0019EC  C0B5  F0AA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4992  0019F0  0100               	movlb	0	; () banked
  4993  0019F2  C0B8  F0AD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4994  0019F6  0100               	movlb	0	; () banked
  4995  0019F8  C0B7  F0AC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4996  0019FC  EC4D  F005         	call	_recv_msg	;wreg free
  4997  001A00  0012               	return	
  4998  001A02                     __end_of_ToMainLow_recvmsg:
  4999                           	opt stack 0
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           intcon	equ	0xFF2
  5007                           intcon2	equ	0xFF1
  5008                           postinc0	equ	0xFEE
  5009                           wreg	equ	0xFE8
  5010                           indf1	equ	0xFE7
  5011                           postdec1	equ	0xFE5
  5012                           fsr1h	equ	0xFE2
  5013                           fsr1l	equ	0xFE1
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _ToMainHigh_recvmsg *****************
  5022 ;; Defined at:
  5023 ;;		line 135 in file "src/messages.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  maxlength       1    wreg     unsigned char 
  5026 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  5027 ;;		 -> main@msgtype(1), 
  5028 ;;  data            2   55[BANK0 ] PTR void 
  5029 ;;		 -> main@msgbuffer(11), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  maxlength       1   57[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      char 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5041 ;;      Params:         0       4       0       0       0
  5042 ;;      Locals:         0       1       0       0       0
  5043 ;;      Temps:          0       0       0       0       0
  5044 ;;      Totals:         0       5       0       0       0
  5045 ;;Total ram usage:        5 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:   12
  5048 ;; This function calls:
  5049 ;;		_recv_msg
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text29
  5056  001A02                     __ptext29:
  5057                           	opt stack 0
  5058  001A02                     _ToMainHigh_recvmsg:
  5059                           	opt stack 18
  5060                           
  5061                           ;incstack = 0
  5062                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5063  001A02  0100               	movlb	0	; () banked
  5064  001A04  6FB9               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5068  001A06  0101               	movlb	1	; () banked
  5069  001A08  0E01               	movlw	high _ToMainHigh_MQ
  5070  001A0A  0100               	movlb	0	; () banked
  5071  001A0C  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  5072  001A0E  0101               	movlb	1	; () banked
  5073  001A10  0E6E               	movlw	low _ToMainHigh_MQ
  5074  001A12  0100               	movlb	0	; () banked
  5075  001A14  6FA7               	movwf	recv_msg@qptr& (0+255),b
  5076  001A16  C0B9  F0A9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5077  001A1A  0100               	movlb	0	; () banked
  5078  001A1C  C0B6  F0AB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5079  001A20  0100               	movlb	0	; () banked
  5080  001A22  C0B5  F0AA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5081  001A26  0100               	movlb	0	; () banked
  5082  001A28  C0B8  F0AD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5083  001A2C  0100               	movlb	0	; () banked
  5084  001A2E  C0B7  F0AC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5085  001A32  EC4D  F005         	call	_recv_msg	;wreg free
  5086  001A36  0012               	return	
  5087  001A38                     __end_of_ToMainHigh_recvmsg:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           intcon	equ	0xFF2
  5096                           intcon2	equ	0xFF1
  5097                           postinc0	equ	0xFEE
  5098                           wreg	equ	0xFE8
  5099                           indf1	equ	0xFE7
  5100                           postdec1	equ	0xFE5
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _recv_msg *****************
  5111 ;; Defined at:
  5112 ;;		line 63 in file "src/messages.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  5115 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5116 ;;  maxlength       1   41[BANK0 ] unsigned char 
  5117 ;;  msgtype         2   42[BANK0 ] PTR unsigned char 
  5118 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5119 ;;  data            2   44[BANK0 ] PTR void 
  5120 ;;		 -> main@msgbuffer(11), NULL(0), 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  qmsg            2   51[BANK0 ] PTR struct __msg
  5123 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5124 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5125 ;;  tlength         2   49[BANK0 ] unsigned int 
  5126 ;;  slot            1   48[BANK0 ] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      char 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5136 ;;      Params:         0       7       0       0       0
  5137 ;;      Locals:         0       5       0       0       0
  5138 ;;      Temps:          0       2       0       0       0
  5139 ;;      Totals:         0      14       0       0       0
  5140 ;;Total ram usage:       14 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:   11
  5143 ;; This function calls:
  5144 ;;		_memcpy
  5145 ;; This function is called by:
  5146 ;;		_ToMainLow_recvmsg
  5147 ;;		_ToMainHigh_recvmsg
  5148 ;;		_FromMainHigh_recvmsg
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text30
  5153  000A9A                     __ptext30:
  5154                           	opt stack 0
  5155  000A9A                     _recv_msg:
  5156                           	opt stack 18
  5157                           
  5158                           ;messages.c: 64: unsigned char slot;
  5159                           ;messages.c: 68: msg *qmsg;
  5160                           ;messages.c: 69: size_t tlength;
  5161                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5162                           
  5163                           ;incstack = 0
  5164  000A9A  0100               	movlb	0	; () banked
  5165  000A9C  EE20 F035          	lfsr	2,53
  5166  000AA0  0100               	movlb	0	; () banked
  5167  000AA2  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5168  000AA4  26D9               	addwf	fsr2l,f,c
  5169  000AA6  0100               	movlb	0	; () banked
  5170  000AA8  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5171  000AAA  22DA               	addwfc	fsr2h,f,c
  5172  000AAC  50DF               	movf	indf2,w,c
  5173  000AAE  0100               	movlb	0	; () banked
  5174  000AB0  6FB0               	movwf	recv_msg@slot& (0+255),b
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5178  000AB2  0100               	movlb	0	; () banked
  5179  000AB4  51B0               	movf	recv_msg@slot& (0+255),w,b
  5180  000AB6  0D0D               	mullw	13
  5181  000AB8  50F3               	movf	prodl,w,c
  5182  000ABA  0100               	movlb	0	; () banked
  5183  000ABC  25A7               	addwf	recv_msg@qptr& (0+255),w,b
  5184  000ABE  0100               	movlb	0	; () banked
  5185  000AC0  6FB3               	movwf	recv_msg@qmsg& (0+255),b
  5186  000AC2  50F4               	movf	prodh,w,c
  5187  000AC4  0100               	movlb	0	; () banked
  5188  000AC6  21A8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5189  000AC8  0100               	movlb	0	; () banked
  5190  000ACA  6FB4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;messages.c: 74: if (qmsg->full == 1) {
  5194  000ACC  0E01               	movlw	1
  5195  000ACE  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  5196  000AD2  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5197  000AD6  62DF               	cpfseq	indf2,c
  5198  000AD8  D06D               	goto	l2349
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5202  000ADA  0100               	movlb	0	; () banked
  5203  000ADC  EE20 F001          	lfsr	2,1
  5204  000AE0  0100               	movlb	0	; () banked
  5205  000AE2  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5206  000AE4  26D9               	addwf	fsr2l,f,c
  5207  000AE6  0100               	movlb	0	; () banked
  5208  000AE8  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5209  000AEA  22DA               	addwfc	fsr2h,f,c
  5210  000AEC  50DF               	movf	indf2,w,c
  5211  000AEE  0100               	movlb	0	; () banked
  5212  000AF0  5DA9               	subwf	recv_msg@maxlength& (0+255),w,b
  5213  000AF2  B0D8               	btfsc	status,0,c
  5214  000AF4  D002               	goto	l2333
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;messages.c: 77: return (-3);
  5218  000AF6  0EFD               	movlw	253
  5219  000AF8  0012               	return	
  5220  000AFA                     l2333:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;messages.c: 78: }
  5224                           ;messages.c: 80: tlength = qmsg->length;
  5225  000AFA  0100               	movlb	0	; () banked
  5226  000AFC  EE20 F001          	lfsr	2,1
  5227  000B00  0100               	movlb	0	; () banked
  5228  000B02  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5229  000B04  26D9               	addwf	fsr2l,f,c
  5230  000B06  0100               	movlb	0	; () banked
  5231  000B08  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5232  000B0A  22DA               	addwfc	fsr2h,f,c
  5233  000B0C  50DF               	movf	indf2,w,c
  5234  000B0E  0100               	movlb	0	; () banked
  5235  000B10  6FAE               	movwf	??_recv_msg& (0+255),b
  5236  000B12  0100               	movlb	0	; () banked
  5237  000B14  51AE               	movf	??_recv_msg& (0+255),w,b
  5238  000B16  0100               	movlb	0	; () banked
  5239  000B18  6FB1               	movwf	recv_msg@tlength& (0+255),b
  5240  000B1A  0100               	movlb	0	; () banked
  5241  000B1C  6BB2               	clrf	(recv_msg@tlength+1)& (0+255),b
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5245  000B1E  0100               	movlb	0	; () banked
  5246  000B20  C0AD  F09E         	movff	recv_msg@data+1,memcpy@d1+1
  5247  000B24  0100               	movlb	0	; () banked
  5248  000B26  C0AC  F09D         	movff	recv_msg@data,memcpy@d1
  5249  000B2A  0E03               	movlw	3
  5250  000B2C  0100               	movlb	0	; () banked
  5251  000B2E  25B3               	addwf	recv_msg@qmsg& (0+255),w,b
  5252  000B30  0100               	movlb	0	; () banked
  5253  000B32  6FAE               	movwf	??_recv_msg& (0+255),b
  5254  000B34  0E00               	movlw	0
  5255  000B36  0100               	movlb	0	; () banked
  5256  000B38  21B4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5257  000B3A  0100               	movlb	0	; () banked
  5258  000B3C  6FAF               	movwf	(??_recv_msg+1)& (0+255),b
  5259  000B3E  C0AE  F09F         	movff	??_recv_msg,memcpy@s1
  5260  000B42  C0AF  F0A0         	movff	??_recv_msg+1,memcpy@s1+1
  5261  000B46  C0B1  F0A1         	movff	recv_msg@tlength,memcpy@n
  5262  000B4A  C0B2  F0A2         	movff	recv_msg@tlength+1,memcpy@n+1
  5263  000B4E  EC1A  F00C         	call	_memcpy	;wreg free
  5264                           
  5265                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5266  000B52  0100               	movlb	0	; () banked
  5267  000B54  EE20 F035          	lfsr	2,53
  5268  000B58  0100               	movlb	0	; () banked
  5269  000B5A  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5270  000B5C  26D9               	addwf	fsr2l,f,c
  5271  000B5E  0100               	movlb	0	; () banked
  5272  000B60  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5273  000B62  22DA               	addwfc	fsr2h,f,c
  5274  000B64  0100               	movlb	0	; () banked
  5275  000B66  EE10 F035          	lfsr	1,53
  5276  000B6A  0100               	movlb	0	; () banked
  5277  000B6C  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5278  000B6E  26E1               	addwf	fsr1l,f,c
  5279  000B70  0100               	movlb	0	; () banked
  5280  000B72  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5281  000B74  22E2               	addwfc	fsr1h,f,c
  5282  000B76  50E7               	movf	indf1,w,c
  5283  000B78  0100               	movlb	0	; () banked
  5284  000B7A  6FAE               	movwf	??_recv_msg& (0+255),b
  5285  000B7C  0100               	movlb	0	; () banked
  5286  000B7E  29AE               	incf	??_recv_msg& (0+255),w,b
  5287  000B80  0B03               	andlw	3
  5288  000B82  6EDF               	movwf	indf2,c
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5292  000B84  0100               	movlb	0	; () banked
  5293  000B86  EE20 F002          	lfsr	2,2
  5294  000B8A  0100               	movlb	0	; () banked
  5295  000B8C  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5296  000B8E  26D9               	addwf	fsr2l,f,c
  5297  000B90  0100               	movlb	0	; () banked
  5298  000B92  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5299  000B94  22DA               	addwfc	fsr2h,f,c
  5300  000B96  C0AA  FFE1         	movff	recv_msg@msgtype,fsr1l
  5301  000B9A  C0AB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5302  000B9E  CFDF FFE7          	movff	indf2,indf1
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;messages.c: 91: qmsg->full = 0;
  5306  000BA2  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  5307  000BA6  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5308  000BAA  0E00               	movlw	0
  5309  000BAC  6EDF               	movwf	indf2,c
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;messages.c: 92: return (tlength);
  5313  000BAE  0100               	movlb	0	; () banked
  5314  000BB0  51B1               	movf	recv_msg@tlength& (0+255),w,b
  5315  000BB2  0012               	return	
  5316  000BB4                     l2349:
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;messages.c: 94: return (-4);
  5320  000BB4  0EFC               	movlw	252
  5321  000BB6  0012               	return	
  5322  000BB8                     __end_of_recv_msg:
  5323                           	opt stack 0
  5324                           tblptru	equ	0xFF8
  5325                           tblptrh	equ	0xFF7
  5326                           tblptrl	equ	0xFF6
  5327                           tablat	equ	0xFF5
  5328                           prodh	equ	0xFF4
  5329                           prodl	equ	0xFF3
  5330                           intcon	equ	0xFF2
  5331                           intcon2	equ	0xFF1
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           indf1	equ	0xFE7
  5335                           postdec1	equ	0xFE5
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _memcpy *****************
  5346 ;; Defined at:
  5347 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  d1              2   29[BANK0 ] PTR void 
  5350 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5351 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5352 ;;		 -> main@msgbuffer(11), NULL(0), 
  5353 ;;  s1              2   31[BANK0 ] PTR const void 
  5354 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5355 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5356 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  5357 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5358 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  5359 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  5360 ;;  n               2   33[BANK0 ] unsigned int 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  5363 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5364 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5365 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  5366 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5367 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  5368 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  5369 ;;  d               2   35[BANK0 ] PTR unsigned char 
  5370 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5371 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5372 ;;		 -> main@msgbuffer(11), NULL(0), 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  2   29[BANK0 ] PTR void 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5382 ;;      Params:         0       6       0       0       0
  5383 ;;      Locals:         0       4       0       0       0
  5384 ;;      Temps:          0       0       0       0       0
  5385 ;;      Totals:         0      10       0       0       0
  5386 ;;Total ram usage:       10 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:   10
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_send_msg
  5393 ;;		_recv_msg
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text31
  5398  001834                     __ptext31:
  5399                           	opt stack 0
  5400  001834                     _memcpy:
  5401                           	opt stack 17
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;incstack = 0
  5405  001834  0100               	movlb	0	; () banked
  5406  001836  C0A0  F0A6         	movff	memcpy@s1+1,memcpy@s+1
  5407  00183A  0100               	movlb	0	; () banked
  5408  00183C  C09F  F0A5         	movff	memcpy@s1,memcpy@s
  5409  001840  0100               	movlb	0	; () banked
  5410  001842  C09E  F0A4         	movff	memcpy@d1+1,memcpy@d+1
  5411  001846  0100               	movlb	0	; () banked
  5412  001848  C09D  F0A3         	movff	memcpy@d1,memcpy@d
  5413  00184C  D010               	goto	l2125
  5414  00184E                     l2119:
  5415                           
  5416                           ; BSR set to: 0
  5417  00184E  C0A5  FFD9         	movff	memcpy@s,fsr2l
  5418  001852  C0A6  FFDA         	movff	memcpy@s+1,fsr2h
  5419  001856  C0A3  FFE1         	movff	memcpy@d,fsr1l
  5420  00185A  C0A4  FFE2         	movff	memcpy@d+1,fsr1h
  5421  00185E  CFDF FFE7          	movff	indf2,indf1
  5422                           
  5423                           ; BSR set to: 0
  5424  001862  0100               	movlb	0	; () banked
  5425  001864  4BA5               	infsnz	memcpy@s& (0+255),f,b
  5426  001866  2BA6               	incf	(memcpy@s+1)& (0+255),f,b
  5427                           
  5428                           ; BSR set to: 0
  5429  001868  0100               	movlb	0	; () banked
  5430  00186A  4BA3               	infsnz	memcpy@d& (0+255),f,b
  5431  00186C  2BA4               	incf	(memcpy@d+1)& (0+255),f,b
  5432  00186E                     l2125:
  5433                           
  5434                           ; BSR set to: 0
  5435  00186E  0100               	movlb	0	; () banked
  5436  001870  07A1               	decf	memcpy@n& (0+255),f,b
  5437  001872  A0D8               	btfss	status,0,c
  5438  001874  07A2               	decf	(memcpy@n+1)& (0+255),f,b
  5439  001876  0100               	movlb	0	; () banked
  5440  001878  29A1               	incf	memcpy@n& (0+255),w,b
  5441  00187A  B4D8               	btfsc	status,2,c
  5442  00187C  29A2               	incf	(memcpy@n+1)& (0+255),w,b
  5443  00187E  B4D8               	btfsc	status,2,c
  5444                           
  5445                           ; BSR set to: 0
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;	Return value of _memcpy is never used
  5449  001880  0012               	return	
  5450  001882  D7E5               	goto	l2119
  5451  001884                     __end_of_memcpy:
  5452                           	opt stack 0
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           intcon	equ	0xFF2
  5460                           intcon2	equ	0xFF1
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           postdec1	equ	0xFE5
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function _OpenUSART *****************
  5475 ;; Defined at:
  5476 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  config          1    wreg     unsigned char 
  5479 ;;  spbrg           2   29[BANK0 ] unsigned int 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  config          1   34[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, status,2
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5491 ;;      Params:         0       2       0       0       0
  5492 ;;      Locals:         0       1       0       0       0
  5493 ;;      Temps:          0       3       0       0       0
  5494 ;;      Totals:         0       6       0       0       0
  5495 ;;Total ram usage:        6 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:   10
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text32
  5506  00143A                     __ptext32:
  5507                           	opt stack 0
  5508  00143A                     _OpenUSART:
  5509                           	opt stack 20
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;incstack = 0
  5513                           ;OpenUSART@config stored from wreg
  5514  00143A  0100               	movlb	0	; () banked
  5515  00143C  6FA2               	movwf	OpenUSART@config& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518  00143E  0E00               	movlw	0
  5519  001440  6EAC               	movwf	4012,c	;volatile
  5520  001442  0E00               	movlw	0
  5521  001444  6EAB               	movwf	4011,c	;volatile
  5522                           
  5523                           ; BSR set to: 0
  5524  001446  0100               	movlb	0	; () banked
  5525  001448  B1A2               	btfsc	OpenUSART@config& (0+255),0,b
  5526                           
  5527                           ; BSR set to: 0
  5528  00144A  88AC               	bsf	4012,4,c	;volatile
  5529                           
  5530                           ; BSR set to: 0
  5531                           
  5532                           ; BSR set to: 0
  5533  00144C  0100               	movlb	0	; () banked
  5534  00144E  A3A2               	btfss	OpenUSART@config& (0+255),1,b
  5535  001450  D002               	goto	l2759
  5536                           
  5537                           ; BSR set to: 0
  5538  001452  8CAC               	bsf	4012,6,c	;volatile
  5539  001454  8CAB               	bsf	4011,6,c	;volatile
  5540  001456                     l2759:
  5541                           
  5542                           ; BSR set to: 0
  5543  001456  0100               	movlb	0	; () banked
  5544  001458  B5A2               	btfsc	OpenUSART@config& (0+255),2,b
  5545                           
  5546                           ; BSR set to: 0
  5547  00145A  8EAC               	bsf	4012,7,c	;volatile
  5548                           
  5549                           ; BSR set to: 0
  5550                           
  5551                           ; BSR set to: 0
  5552  00145C  0100               	movlb	0	; () banked
  5553  00145E  A7A2               	btfss	OpenUSART@config& (0+255),3,b
  5554  001460  D002               	goto	l516
  5555                           
  5556                           ; BSR set to: 0
  5557  001462  88AB               	bsf	4011,4,c	;volatile
  5558  001464  D001               	goto	l2767
  5559  001466                     l516:
  5560                           
  5561                           ; BSR set to: 0
  5562  001466  8AAB               	bsf	4011,5,c	;volatile
  5563  001468                     l2767:
  5564                           
  5565                           ; BSR set to: 0
  5566  001468  0100               	movlb	0	; () banked
  5567  00146A  B9A2               	btfsc	OpenUSART@config& (0+255),4,b
  5568                           
  5569                           ; BSR set to: 0
  5570  00146C  84AC               	bsf	4012,2,c	;volatile
  5571                           
  5572                           ; BSR set to: 0
  5573  00146E  989E               	bcf	3998,4,c	;volatile
  5574                           
  5575                           ; BSR set to: 0
  5576  001470  0100               	movlb	0	; () banked
  5577  001472  BBA2               	btfsc	OpenUSART@config& (0+255),5,b
  5578                           
  5579                           ; BSR set to: 0
  5580  001474  86AB               	bsf	4011,3,c	;volatile
  5581                           
  5582                           ; BSR set to: 0
  5583                           
  5584                           ; BSR set to: 0
  5585  001476  0100               	movlb	0	; () banked
  5586  001478  ADA2               	btfss	OpenUSART@config& (0+255),6,b
  5587  00147A  D002               	goto	l520
  5588                           
  5589                           ; BSR set to: 0
  5590  00147C  8A9D               	bsf	3997,5,c	;volatile
  5591  00147E  D001               	goto	l521
  5592  001480                     l520:
  5593                           
  5594                           ; BSR set to: 0
  5595  001480  9A9D               	bcf	3997,5,c	;volatile
  5596  001482                     l521:
  5597                           
  5598                           ; BSR set to: 0
  5599  001482  9A9E               	bcf	3998,5,c	;volatile
  5600                           
  5601                           ; BSR set to: 0
  5602  001484  0100               	movlb	0	; () banked
  5603  001486  AFA2               	btfss	OpenUSART@config& (0+255),7,b
  5604  001488  D002               	goto	l522
  5605                           
  5606                           ; BSR set to: 0
  5607  00148A  889D               	bsf	3997,4,c	;volatile
  5608  00148C  D001               	goto	l523
  5609  00148E                     l522:
  5610                           
  5611                           ; BSR set to: 0
  5612  00148E  989D               	bcf	3997,4,c	;volatile
  5613  001490                     l523:
  5614                           
  5615                           ; BSR set to: 0
  5616  001490  C09D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619  001494  0100               	movlb	0	; () banked
  5620  001496  C09E  F09F         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5621  00149A  C09F  F0A0         	movff	??_OpenUSART,??_OpenUSART+1
  5622  00149E  0100               	movlb	0	; () banked
  5623  0014A0  6BA1               	clrf	(??_OpenUSART+2)& (0+255),b
  5624  0014A2  0100               	movlb	0	; () banked
  5625  0014A4  51A0               	movf	(??_OpenUSART+1)& (0+255),w,b
  5626  0014A6  6EB0               	movwf	4016,c	;volatile
  5627                           
  5628                           ; BSR set to: 0
  5629  0014A8  8AAC               	bsf	4012,5,c	;volatile
  5630                           
  5631                           ; BSR set to: 0
  5632  0014AA  8EAB               	bsf	4011,7,c	;volatile
  5633                           
  5634                           ; BSR set to: 0
  5635  0014AC  9C94               	bcf	3988,6,c	;volatile
  5636                           
  5637                           ; BSR set to: 0
  5638  0014AE  8E94               	bsf	3988,7,c	;volatile
  5639                           
  5640                           ; BSR set to: 0
  5641  0014B0  A8AC               	btfss	4012,4,c	;volatile
  5642  0014B2  0012               	return	
  5643                           
  5644                           ; BSR set to: 0
  5645  0014B4  BEAC               	btfsc	4012,7,c	;volatile
  5646  0014B6  0012               	return	
  5647                           
  5648                           ; BSR set to: 0
  5649  0014B8  8C94               	bsf	3988,6,c	;volatile
  5650  0014BA  0012               	return	
  5651  0014BC                     __end_of_OpenUSART:
  5652                           	opt stack 0
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           intcon	equ	0xFF2
  5660                           intcon2	equ	0xFF1
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           postdec1	equ	0xFE5
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function _OpenTimer1 *****************
  5675 ;; Defined at:
  5676 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  config          1    wreg     unsigned char 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  config          1   29[BANK0 ] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;		None               void
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5690 ;;      Params:         0       0       0       0       0
  5691 ;;      Locals:         0       1       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         0       1       0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:   10
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_main
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text33
  5705  001A6A                     __ptext33:
  5706                           	opt stack 0
  5707  001A6A                     _OpenTimer1:
  5708                           	opt stack 20
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;incstack = 0
  5712                           ;OpenTimer1@config stored from wreg
  5713  001A6A  0100               	movlb	0	; () banked
  5714  001A6C  6F9D               	movwf	OpenTimer1@config& (0+255),b
  5715                           
  5716                           ; BSR set to: 0
  5717  001A6E  0100               	movlb	0	; () banked
  5718  001A70  519D               	movf	OpenTimer1@config& (0+255),w,b
  5719  001A72  0B7E               	andlw	126
  5720  001A74  6ECD               	movwf	4045,c	;volatile
  5721                           
  5722                           ; BSR set to: 0
  5723  001A76  0100               	movlb	0	; () banked
  5724  001A78  AD9D               	btfss	OpenTimer1@config& (0+255),6,b
  5725  001A7A  D002               	goto	l479
  5726                           
  5727                           ; BSR set to: 0
  5728  001A7C  8ECD               	bsf	4045,7,c	;volatile
  5729  001A7E  D001               	goto	l2741
  5730  001A80                     l479:
  5731                           
  5732                           ; BSR set to: 0
  5733  001A80  9ECD               	bcf	4045,7,c	;volatile
  5734  001A82                     l2741:
  5735                           
  5736                           ; BSR set to: 0
  5737  001A82  0E00               	movlw	0
  5738  001A84  6ECF               	movwf	4047,c	;volatile
  5739  001A86  0E00               	movlw	0
  5740  001A88  6ECE               	movwf	4046,c	;volatile
  5741                           
  5742                           ; BSR set to: 0
  5743  001A8A  909E               	bcf	3998,0,c	;volatile
  5744                           
  5745                           ; BSR set to: 0
  5746  001A8C  0100               	movlb	0	; () banked
  5747  001A8E  AF9D               	btfss	OpenTimer1@config& (0+255),7,b
  5748  001A90  D002               	goto	l481
  5749                           
  5750                           ; BSR set to: 0
  5751  001A92  809D               	bsf	3997,0,c	;volatile
  5752  001A94  D001               	goto	l482
  5753  001A96                     l481:
  5754                           
  5755                           ; BSR set to: 0
  5756  001A96  909D               	bcf	3997,0,c	;volatile
  5757  001A98                     l482:
  5758                           
  5759                           ; BSR set to: 0
  5760  001A98  80CD               	bsf	4045,0,c	;volatile
  5761                           
  5762                           ; BSR set to: 0
  5763  001A9A  0012               	return	
  5764  001A9C                     __end_of_OpenTimer1:
  5765                           	opt stack 0
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           prodh	equ	0xFF4
  5771                           prodl	equ	0xFF3
  5772                           intcon	equ	0xFF2
  5773                           intcon2	equ	0xFF1
  5774                           postinc0	equ	0xFEE
  5775                           wreg	equ	0xFE8
  5776                           indf1	equ	0xFE7
  5777                           postdec1	equ	0xFE5
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function _InterruptHandlerLow *****************
  5788 ;; Defined at:
  5789 ;;		line 129 in file "src/interrupts.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;		None               void
  5796 ;; Registers used:
  5797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5803 ;;      Params:         0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0
  5805 ;;      Temps:         17       0       0       0       0
  5806 ;;      Totals:        17       0       0       0       0
  5807 ;;Total ram usage:       17 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    9
  5810 ;; This function calls:
  5811 ;;		_uart_recv_int_handler
  5812 ;;		_uart_trans_int_handler
  5813 ;;		i1_ToMainLow_sendmsg
  5814 ;; This function is called by:
  5815 ;;		Interrupt level 1
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	intcodelo
  5820  000018                     __pintcodelo:
  5821                           	opt stack 0
  5822  000018                     _InterruptHandlerLow:
  5823                           	opt stack 16
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;incstack = 0
  5827  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5828  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5829  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5830  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5831  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5832  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5833  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5834  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5835  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5836  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5837  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5838  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5839  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5840  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5841  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5842  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5843  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5844                           
  5845                           ;interrupts.c: 131: if (PIR1bits.TMR1IF) {
  5846  00005C  A09E               	btfss	3998,0,c	;volatile
  5847  00005E  D00A               	goto	i1l2955
  5848                           
  5849                           ;interrupts.c: 132: PIR1bits.TMR1IF = 0;
  5850  000060  909E               	bcf	3998,0,c	;volatile
  5851                           
  5852                           ;interrupts.c: 133: ToMainLow_sendmsg(0, 11, (void *)0);
  5853  000062  0E0B               	movlw	11
  5854  000064  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5855  000066  0E00               	movlw	0
  5856  000068  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5857  00006A  0E00               	movlw	0
  5858  00006C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5859  00006E  0E00               	movlw	0
  5860  000070  ECD1  F00D         	call	i1_ToMainLow_sendmsg
  5861  000074                     i1l2955:
  5862                           
  5863                           ;interrupts.c: 134: }
  5864                           ;interrupts.c: 137: if (PIR1bits.RCIF) {
  5865  000074  AA9E               	btfss	3998,5,c	;volatile
  5866  000076  D003               	goto	i1l2961
  5867                           
  5868                           ;interrupts.c: 138: PIR1bits.RCIF = 0;
  5869  000078  9A9E               	bcf	3998,5,c	;volatile
  5870                           
  5871                           ;interrupts.c: 139: uart_recv_int_handler();
  5872  00007A  ECD3  F009         	call	_uart_recv_int_handler	;wreg free
  5873  00007E                     i1l2961:
  5874                           
  5875                           ;interrupts.c: 140: }
  5876                           ;interrupts.c: 143: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5877  00007E  B89E               	btfsc	3998,4,c	;volatile
  5878  000080  A89D               	btfss	3997,4,c	;volatile
  5879  000082  D002               	goto	i1l59
  5880                           
  5881                           ;interrupts.c: 144: uart_trans_int_handler();
  5882  000084  ECC7  F00B         	call	_uart_trans_int_handler	;wreg free
  5883  000088                     i1l59:
  5884  000088  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5885  00008C  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5886  000090  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5887  000094  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5888  000098  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5889  00009C  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5890  0000A0  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5891  0000A4  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5892  0000A8  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5893  0000AC  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5894  0000B0  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5895  0000B4  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5896  0000B8  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5897  0000BC  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5898  0000C0  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5899  0000C4  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5900  0000C8  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5901  0000CC  0010               	retfie	
  5902  0000CE                     __end_of_InterruptHandlerLow:
  5903                           	opt stack 0
  5904                           pclatu	equ	0xFFB
  5905                           pclath	equ	0xFFA
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           intcon2	equ	0xFF1
  5914                           postinc0	equ	0xFEE
  5915                           fsr0h	equ	0xFEA
  5916                           fsr0l	equ	0xFE9
  5917                           wreg	equ	0xFE8
  5918                           indf1	equ	0xFE7
  5919                           postdec1	equ	0xFE5
  5920                           fsr1h	equ	0xFE2
  5921                           fsr1l	equ	0xFE1
  5922                           bsr	equ	0xFE0
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function _uart_trans_int_handler *****************
  5931 ;; Defined at:
  5932 ;;		line 11 in file "src/my_uart.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  data            2   29[COMRAM] PTR unsigned char 
  5937 ;;		 -> NULL(0), 
  5938 ;;  length          1   33[COMRAM] char 
  5939 ;;  curIndex        1   32[COMRAM] unsigned char 
  5940 ;;  msgtype         1   31[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;		None               void
  5943 ;; Registers used:
  5944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5950 ;;      Params:         0       0       0       0       0
  5951 ;;      Locals:         5       0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0
  5953 ;;      Totals:         5       0       0       0       0
  5954 ;;Total ram usage:        5 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    8
  5957 ;; This function calls:
  5958 ;;		_FromMainLow_recvmsg
  5959 ;; This function is called by:
  5960 ;;		_InterruptHandlerLow
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text35
  5965  00178E                     __ptext35:
  5966                           	opt stack 0
  5967  00178E                     _uart_trans_int_handler:
  5968                           	opt stack 16
  5969                           
  5970                           ;my_uart.c: 13: unsigned char* data = (0);
  5971                           
  5972                           ;incstack = 0
  5973  00178E  0E00               	movlw	0
  5974  001790  6E1F               	movwf	uart_trans_int_handler@data+1,c
  5975  001792  0E00               	movlw	0
  5976  001794  6E1E               	movwf	uart_trans_int_handler@data,c
  5977                           
  5978                           ;my_uart.c: 14: unsigned char msgtype;
  5979                           ;my_uart.c: 15: unsigned char curIndex;
  5980                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5981  001796  0E00               	movlw	high uart_trans_int_handler@msgtype
  5982  001798  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5983  00179A  0E20               	movlw	low uart_trans_int_handler@msgtype
  5984  00179C  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5985  00179E  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5986  0017A2  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5987  0017A6  0E0A               	movlw	10
  5988  0017A8  ECBE  F00D         	call	_FromMainLow_recvmsg
  5989  0017AC  6E22               	movwf	uart_trans_int_handler@length,c
  5990                           
  5991                           ;my_uart.c: 17: if (length < 0) {
  5992  0017AE  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5993  0017B0  D017               	goto	i1l372
  5994                           
  5995                           ;my_uart.c: 26: curIndex = 0;
  5996                           
  5997                           ;my_uart.c: 24: }
  5998                           ;my_uart.c: 25: } else {
  5999                           
  6000                           ;my_uart.c: 22: else{
  6001                           
  6002                           ;my_uart.c: 21: }
  6003  0017B2  0E00               	movlw	0
  6004  0017B4  6E21               	movwf	uart_trans_int_handler@curIndex,c
  6005                           
  6006                           ;my_uart.c: 27: while(curIndex < length){
  6007  0017B6  D00D               	goto	i1l2687
  6008  0017B8                     i1l375:
  6009  0017B8  A2AC               	btfss	4012,1,c	;volatile
  6010  0017BA  D7FE               	goto	i1l375
  6011                           
  6012                           ;my_uart.c: 33: TXREG = data[curIndex];
  6013  0017BC  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6014  0017BE  0D01               	mullw	1
  6015  0017C0  50F3               	movf	prodl,w,c
  6016  0017C2  241E               	addwf	uart_trans_int_handler@data,w,c
  6017  0017C4  6ED9               	movwf	fsr2l,c
  6018  0017C6  50F4               	movf	prodh,w,c
  6019  0017C8  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  6020  0017CA  6EDA               	movwf	fsr2h,c
  6021  0017CC  50DF               	movf	indf2,w,c
  6022  0017CE  6EAD               	movwf	4013,c	;volatile
  6023                           
  6024                           ;my_uart.c: 35: curIndex++;
  6025  0017D0  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  6026  0017D2                     i1l2687:
  6027  0017D2  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6028  0017D4  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6029  0017D6  D004               	goto	i1l372
  6030  0017D8  0AFF               	xorlw	255
  6031  0017DA  2422               	addwf	uart_trans_int_handler@length,w,c
  6032  0017DC  B0D8               	btfsc	status,0,c
  6033  0017DE  D7EC               	goto	i1l375
  6034  0017E0                     i1l372:
  6035                           
  6036                           ;my_uart.c: 36: }
  6037                           ;my_uart.c: 37: }
  6038                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  6039  0017E0  989D               	bcf	3997,4,c	;volatile
  6040  0017E2  0012               	return	
  6041  0017E4                     __end_of_uart_trans_int_handler:
  6042                           	opt stack 0
  6043                           pclatu	equ	0xFFB
  6044                           pclath	equ	0xFFA
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           intcon2	equ	0xFF1
  6053                           postinc0	equ	0xFEE
  6054                           fsr0h	equ	0xFEA
  6055                           fsr0l	equ	0xFE9
  6056                           wreg	equ	0xFE8
  6057                           indf1	equ	0xFE7
  6058                           postdec1	equ	0xFE5
  6059                           fsr1h	equ	0xFE2
  6060                           fsr1l	equ	0xFE1
  6061                           bsr	equ	0xFE0
  6062                           indf2	equ	0xFDF
  6063                           postinc2	equ	0xFDE
  6064                           postdec2	equ	0xFDD
  6065                           fsr2h	equ	0xFDA
  6066                           fsr2l	equ	0xFD9
  6067                           status	equ	0xFD8
  6068                           
  6069 ;; *************** function _FromMainLow_recvmsg *****************
  6070 ;; Defined at:
  6071 ;;		line 159 in file "src/messages.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  maxlength       1    wreg     unsigned char 
  6074 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6075 ;;		 -> uart_trans_int_handler@msgtype(1), 
  6076 ;;  data            2   26[COMRAM] PTR void 
  6077 ;;		 -> NULL(0), 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  maxlength       1   28[COMRAM] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      char 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6089 ;;      Params:         4       0       0       0       0
  6090 ;;      Locals:         1       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0
  6092 ;;      Totals:         5       0       0       0       0
  6093 ;;Total ram usage:        5 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    7
  6096 ;; This function calls:
  6097 ;;		i1_recv_msg
  6098 ;; This function is called by:
  6099 ;;		_uart_trans_int_handler
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text36
  6104  001B7C                     __ptext36:
  6105                           	opt stack 0
  6106  001B7C                     _FromMainLow_recvmsg:
  6107                           	opt stack 16
  6108                           
  6109                           ;incstack = 0
  6110                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6111  001B7C  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  6112                           
  6113                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6114  001B7E  0102               	movlb	2	; () banked
  6115  001B80  0E02               	movlw	high _FromMainLow_MQ
  6116  001B82  6E0C               	movwf	i1recv_msg@qptr+1,c
  6117  001B84  0102               	movlb	2	; () banked
  6118  001B86  0E36               	movlw	low _FromMainLow_MQ
  6119  001B88  6E0B               	movwf	i1recv_msg@qptr,c
  6120  001B8A  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  6121  001B8E  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  6122  001B92  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  6123  001B96  6A11               	clrf	i1recv_msg@data+1,c
  6124  001B98  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  6125  001B9C  EC44  F007         	call	i1_recv_msg	;wreg free
  6126  001BA0  0012               	return	
  6127  001BA2                     __end_of_FromMainLow_recvmsg:
  6128                           	opt stack 0
  6129                           pclatu	equ	0xFFB
  6130                           pclath	equ	0xFFA
  6131                           tblptru	equ	0xFF8
  6132                           tblptrh	equ	0xFF7
  6133                           tblptrl	equ	0xFF6
  6134                           tablat	equ	0xFF5
  6135                           prodh	equ	0xFF4
  6136                           prodl	equ	0xFF3
  6137                           intcon	equ	0xFF2
  6138                           intcon2	equ	0xFF1
  6139                           postinc0	equ	0xFEE
  6140                           fsr0h	equ	0xFEA
  6141                           fsr0l	equ	0xFE9
  6142                           wreg	equ	0xFE8
  6143                           indf1	equ	0xFE7
  6144                           postdec1	equ	0xFE5
  6145                           fsr1h	equ	0xFE2
  6146                           fsr1l	equ	0xFE1
  6147                           bsr	equ	0xFE0
  6148                           indf2	equ	0xFDF
  6149                           postinc2	equ	0xFDE
  6150                           postdec2	equ	0xFDD
  6151                           fsr2h	equ	0xFDA
  6152                           fsr2l	equ	0xFD9
  6153                           status	equ	0xFD8
  6154                           
  6155 ;; *************** function i1_recv_msg *****************
  6156 ;; Defined at:
  6157 ;;		line 63 in file "src/messages.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6160 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6161 ;;  maxlength       1   12[COMRAM] unsigned char 
  6162 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  6163 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6164 ;;  data            2   15[COMRAM] PTR void 
  6165 ;;		 -> main@msgbuffer(11), NULL(0), 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  6168 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6169 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6170 ;;  recv_msg        2   20[COMRAM] unsigned int 
  6171 ;;  recv_msg        1   19[COMRAM] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      char 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6181 ;;      Params:         7       0       0       0       0
  6182 ;;      Locals:         5       0       0       0       0
  6183 ;;      Temps:          2       0       0       0       0
  6184 ;;      Totals:        14       0       0       0       0
  6185 ;;Total ram usage:       14 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    6
  6188 ;; This function calls:
  6189 ;;		i1_memcpy
  6190 ;; This function is called by:
  6191 ;;		_FromMainLow_recvmsg
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text37
  6196  000E88                     __ptext37:
  6197                           	opt stack 0
  6198  000E88                     i1_recv_msg:
  6199                           	opt stack 16
  6200                           
  6201                           ;messages.c: 64: unsigned char slot;
  6202                           ;messages.c: 68: msg *qmsg;
  6203                           ;messages.c: 69: size_t tlength;
  6204                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6205                           
  6206                           ;incstack = 0
  6207  000E88  EE20 F035          	lfsr	2,53
  6208  000E8C  500B               	movf	i1recv_msg@qptr,w,c
  6209  000E8E  26D9               	addwf	fsr2l,f,c
  6210  000E90  500C               	movf	i1recv_msg@qptr+1,w,c
  6211  000E92  22DA               	addwfc	fsr2h,f,c
  6212  000E94  50DF               	movf	indf2,w,c
  6213  000E96  6E14               	movwf	i1recv_msg@slot,c
  6214                           
  6215                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6216  000E98  5014               	movf	i1recv_msg@slot,w,c
  6217  000E9A  0D0D               	mullw	13
  6218  000E9C  50F3               	movf	prodl,w,c
  6219  000E9E  240B               	addwf	i1recv_msg@qptr,w,c
  6220  000EA0  6E17               	movwf	i1recv_msg@qmsg,c
  6221  000EA2  50F4               	movf	prodh,w,c
  6222  000EA4  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6223  000EA6  6E18               	movwf	i1recv_msg@qmsg+1,c
  6224                           
  6225                           ;messages.c: 74: if (qmsg->full == 1) {
  6226  000EA8  0E01               	movlw	1
  6227  000EAA  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6228  000EAE  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6229  000EB2  62DF               	cpfseq	indf2,c
  6230  000EB4  D050               	goto	i1l2279
  6231                           
  6232                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6233  000EB6  EE20 F001          	lfsr	2,1
  6234  000EBA  5017               	movf	i1recv_msg@qmsg,w,c
  6235  000EBC  26D9               	addwf	fsr2l,f,c
  6236  000EBE  5018               	movf	i1recv_msg@qmsg+1,w,c
  6237  000EC0  22DA               	addwfc	fsr2h,f,c
  6238  000EC2  50DF               	movf	indf2,w,c
  6239  000EC4  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6240  000EC6  B0D8               	btfsc	status,0,c
  6241  000EC8  D002               	goto	i1l2263
  6242                           
  6243                           ;messages.c: 77: return (-3);
  6244  000ECA  0EFD               	movlw	253
  6245  000ECC  0012               	return	
  6246  000ECE                     i1l2263:
  6247                           
  6248                           ;messages.c: 78: }
  6249                           ;messages.c: 80: tlength = qmsg->length;
  6250  000ECE  EE20 F001          	lfsr	2,1
  6251  000ED2  5017               	movf	i1recv_msg@qmsg,w,c
  6252  000ED4  26D9               	addwf	fsr2l,f,c
  6253  000ED6  5018               	movf	i1recv_msg@qmsg+1,w,c
  6254  000ED8  22DA               	addwfc	fsr2h,f,c
  6255  000EDA  50DF               	movf	indf2,w,c
  6256  000EDC  6E12               	movwf	??i1_recv_msg& (0+255),c
  6257  000EDE  5012               	movf	??i1_recv_msg,w,c
  6258  000EE0  6E15               	movwf	i1recv_msg@tlength,c
  6259  000EE2  6A16               	clrf	i1recv_msg@tlength+1,c
  6260                           
  6261                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6262  000EE4  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6263  000EE8  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6264  000EEC  0E03               	movlw	3
  6265  000EEE  2417               	addwf	i1recv_msg@qmsg,w,c
  6266  000EF0  6E12               	movwf	??i1_recv_msg& (0+255),c
  6267  000EF2  0E00               	movlw	0
  6268  000EF4  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6269  000EF6  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6270  000EF8  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6271  000EFC  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6272  000F00  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6273  000F04  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6274  000F08  EC69  F00C         	call	i1_memcpy	;wreg free
  6275                           
  6276                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6277  000F0C  EE20 F035          	lfsr	2,53
  6278  000F10  500B               	movf	i1recv_msg@qptr,w,c
  6279  000F12  26D9               	addwf	fsr2l,f,c
  6280  000F14  500C               	movf	i1recv_msg@qptr+1,w,c
  6281  000F16  22DA               	addwfc	fsr2h,f,c
  6282  000F18  EE10 F035          	lfsr	1,53
  6283  000F1C  500B               	movf	i1recv_msg@qptr,w,c
  6284  000F1E  26E1               	addwf	fsr1l,f,c
  6285  000F20  500C               	movf	i1recv_msg@qptr+1,w,c
  6286  000F22  22E2               	addwfc	fsr1h,f,c
  6287  000F24  50E7               	movf	indf1,w,c
  6288  000F26  6E12               	movwf	??i1_recv_msg& (0+255),c
  6289  000F28  2812               	incf	??i1_recv_msg,w,c
  6290  000F2A  0B03               	andlw	3
  6291  000F2C  6EDF               	movwf	indf2,c
  6292                           
  6293                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6294  000F2E  EE20 F002          	lfsr	2,2
  6295  000F32  5017               	movf	i1recv_msg@qmsg,w,c
  6296  000F34  26D9               	addwf	fsr2l,f,c
  6297  000F36  5018               	movf	i1recv_msg@qmsg+1,w,c
  6298  000F38  22DA               	addwfc	fsr2h,f,c
  6299  000F3A  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6300  000F3E  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6301  000F42  CFDF FFE7          	movff	indf2,indf1
  6302                           
  6303                           ;messages.c: 91: qmsg->full = 0;
  6304  000F46  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6305  000F4A  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6306  000F4E  0E00               	movlw	0
  6307  000F50  6EDF               	movwf	indf2,c
  6308                           
  6309                           ;messages.c: 92: return (tlength);
  6310  000F52  5015               	movf	i1recv_msg@tlength,w,c
  6311  000F54  0012               	return	
  6312  000F56                     i1l2279:
  6313                           
  6314                           ;messages.c: 94: return (-4);
  6315  000F56  0EFC               	movlw	252
  6316  000F58  0012               	return	
  6317  000F5A                     __end_ofi1_recv_msg:
  6318                           	opt stack 0
  6319                           pclatu	equ	0xFFB
  6320                           pclath	equ	0xFFA
  6321                           tblptru	equ	0xFF8
  6322                           tblptrh	equ	0xFF7
  6323                           tblptrl	equ	0xFF6
  6324                           tablat	equ	0xFF5
  6325                           prodh	equ	0xFF4
  6326                           prodl	equ	0xFF3
  6327                           intcon	equ	0xFF2
  6328                           intcon2	equ	0xFF1
  6329                           postinc0	equ	0xFEE
  6330                           fsr0h	equ	0xFEA
  6331                           fsr0l	equ	0xFE9
  6332                           wreg	equ	0xFE8
  6333                           indf1	equ	0xFE7
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           bsr	equ	0xFE0
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _uart_recv_int_handler *****************
  6346 ;; Defined at:
  6347 ;;		line 42 in file "src/my_uart.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6361 ;;      Params:         0       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0
  6363 ;;      Temps:          1       0       0       0       0
  6364 ;;      Totals:         1       0       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    8
  6368 ;; This function calls:
  6369 ;;		_ReadUSART
  6370 ;;		i1_ToMainLow_sendmsg
  6371 ;; This function is called by:
  6372 ;;		_InterruptHandlerLow
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text38
  6377  0013A6                     __ptext38:
  6378                           	opt stack 0
  6379  0013A6                     _uart_recv_int_handler:
  6380                           	opt stack 16
  6381                           
  6382                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6383                           
  6384                           ;incstack = 0
  6385  0013A6  AA9E               	btfss	3998,5,c	;volatile
  6386  0013A8  D03A               	goto	i1l2665
  6387                           
  6388                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6389  0013AA  EE20 F004          	lfsr	2,4
  6390  0013AE  5049               	movf	_uc_ptr,w,c
  6391  0013B0  26D9               	addwf	fsr2l,f,c
  6392  0013B2  504A               	movf	_uc_ptr+1,w,c
  6393  0013B4  22DA               	addwfc	fsr2h,f,c
  6394  0013B6  50DF               	movf	indf2,w,c
  6395  0013B8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6396  0013BA  501B               	movf	??_uart_recv_int_handler,w,c
  6397  0013BC  0D01               	mullw	1
  6398  0013BE  50F3               	movf	prodl,w,c
  6399  0013C0  2449               	addwf	_uc_ptr,w,c
  6400  0013C2  6ED9               	movwf	fsr2l,c
  6401  0013C4  50F4               	movf	prodh,w,c
  6402  0013C6  204A               	addwfc	_uc_ptr+1,w,c
  6403  0013C8  6EDA               	movwf	fsr2h,c
  6404  0013CA  EC16  F00E         	call	_ReadUSART	;wreg free
  6405  0013CE  6EDF               	movwf	indf2,c
  6406                           
  6407                           ;my_uart.c: 56: uc_ptr->buflen++;
  6408  0013D0  EE20 F004          	lfsr	2,4
  6409  0013D4  5049               	movf	_uc_ptr,w,c
  6410  0013D6  26D9               	addwf	fsr2l,f,c
  6411  0013D8  504A               	movf	_uc_ptr+1,w,c
  6412  0013DA  22DA               	addwfc	fsr2h,f,c
  6413  0013DC  2ADF               	incf	indf2,f,c
  6414                           
  6415                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6416  0013DE  EE20 F004          	lfsr	2,4
  6417  0013E2  5049               	movf	_uc_ptr,w,c
  6418  0013E4  26D9               	addwf	fsr2l,f,c
  6419  0013E6  504A               	movf	_uc_ptr+1,w,c
  6420  0013E8  22DA               	addwfc	fsr2h,f,c
  6421  0013EA  0E04               	movlw	4
  6422  0013EC  62DF               	cpfseq	indf2,c
  6423  0013EE  D017               	goto	i1l2665
  6424                           
  6425                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6426  0013F0  0E20               	movlw	32
  6427  0013F2  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6428  0013F4  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6429  0013F8  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6430  0013FC  EE20 F004          	lfsr	2,4
  6431  001400  5049               	movf	_uc_ptr,w,c
  6432  001402  26D9               	addwf	fsr2l,f,c
  6433  001404  504A               	movf	_uc_ptr+1,w,c
  6434  001406  22DA               	addwfc	fsr2h,f,c
  6435  001408  50DF               	movf	indf2,w,c
  6436  00140A  ECD1  F00D         	call	i1_ToMainLow_sendmsg
  6437                           
  6438                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6439  00140E  EE20 F004          	lfsr	2,4
  6440  001412  5049               	movf	_uc_ptr,w,c
  6441  001414  26D9               	addwf	fsr2l,f,c
  6442  001416  504A               	movf	_uc_ptr+1,w,c
  6443  001418  22DA               	addwfc	fsr2h,f,c
  6444  00141A  0E00               	movlw	0
  6445  00141C  6EDF               	movwf	indf2,c
  6446  00141E                     i1l2665:
  6447                           
  6448                           ;my_uart.c: 61: }
  6449                           ;my_uart.c: 62: }
  6450                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6451  00141E  A64C               	btfss	_USART_Status,3,c
  6452  001420  0012               	return	
  6453                           
  6454                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6455  001422  98AB               	bcf	4011,4,c	;volatile
  6456                           
  6457                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6458  001424  88AB               	bsf	4011,4,c	;volatile
  6459                           
  6460                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6461  001426  0E1E               	movlw	30
  6462  001428  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6463  00142A  0E00               	movlw	0
  6464  00142C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6465  00142E  0E00               	movlw	0
  6466  001430  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6467  001432  0E00               	movlw	0
  6468  001434  ECD1  F00D         	call	i1_ToMainLow_sendmsg
  6469  001438  0012               	return	
  6470  00143A                     __end_of_uart_recv_int_handler:
  6471                           	opt stack 0
  6472                           pclatu	equ	0xFFB
  6473                           pclath	equ	0xFFA
  6474                           tblptru	equ	0xFF8
  6475                           tblptrh	equ	0xFF7
  6476                           tblptrl	equ	0xFF6
  6477                           tablat	equ	0xFF5
  6478                           prodh	equ	0xFF4
  6479                           prodl	equ	0xFF3
  6480                           intcon	equ	0xFF2
  6481                           intcon2	equ	0xFF1
  6482                           postinc0	equ	0xFEE
  6483                           fsr0h	equ	0xFEA
  6484                           fsr0l	equ	0xFE9
  6485                           wreg	equ	0xFE8
  6486                           indf1	equ	0xFE7
  6487                           postdec1	equ	0xFE5
  6488                           fsr1h	equ	0xFE2
  6489                           fsr1l	equ	0xFE1
  6490                           bsr	equ	0xFE0
  6491                           indf2	equ	0xFDF
  6492                           postinc2	equ	0xFDE
  6493                           postdec2	equ	0xFDD
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function i1_ToMainLow_sendmsg *****************
  6499 ;; Defined at:
  6500 ;;		line 103 in file "src/messages.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  length          1    wreg     unsigned char 
  6503 ;;  msgtype         1   22[COMRAM] unsigned char 
  6504 ;;  data            2   23[COMRAM] PTR void 
  6505 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  6506 ;;		 -> sendUARTbyte@temp(1), main@ctrl(2), main@uc(5), NULL(0), 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  length          1   25[COMRAM] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      char 
  6511 ;; Registers used:
  6512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6518 ;;      Params:         3       0       0       0       0
  6519 ;;      Locals:         1       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0
  6521 ;;      Totals:         4       0       0       0       0
  6522 ;;Total ram usage:        4 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    7
  6525 ;; This function calls:
  6526 ;;		i1_send_msg
  6527 ;; This function is called by:
  6528 ;;		_InterruptHandlerLow
  6529 ;;		_uart_recv_int_handler
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text39
  6534  001BA2                     __ptext39:
  6535                           	opt stack 0
  6536  001BA2                     i1_ToMainLow_sendmsg:
  6537                           	opt stack 17
  6538                           
  6539                           ;incstack = 0
  6540                           ;i1ToMainLow_sendmsg@length stored from wreg
  6541  001BA2  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  6542                           
  6543                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6544                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6545  001BA4  0101               	movlb	1	; () banked
  6546  001BA6  0E01               	movlw	high _ToMainLow_MQ
  6547  001BA8  6E0C               	movwf	i1send_msg@qptr+1,c
  6548  001BAA  0101               	movlb	1	; () banked
  6549  001BAC  0EA4               	movlw	low _ToMainLow_MQ
  6550  001BAE  6E0B               	movwf	i1send_msg@qptr,c
  6551  001BB0  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6552  001BB4  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6553  001BB8  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6554  001BBC  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6555  001BC0  EC33  F009         	call	i1_send_msg	;wreg free
  6556  001BC4  0012               	return	
  6557  001BC6                     __end_ofi1_ToMainLow_sendmsg:
  6558                           	opt stack 0
  6559                           pclatu	equ	0xFFB
  6560                           pclath	equ	0xFFA
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           intcon	equ	0xFF2
  6568                           intcon2	equ	0xFF1
  6569                           postinc0	equ	0xFEE
  6570                           fsr0h	equ	0xFEA
  6571                           fsr0l	equ	0xFE9
  6572                           wreg	equ	0xFE8
  6573                           indf1	equ	0xFE7
  6574                           postdec1	equ	0xFE5
  6575                           fsr1h	equ	0xFE2
  6576                           fsr1l	equ	0xFE1
  6577                           bsr	equ	0xFE0
  6578                           indf2	equ	0xFDF
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           fsr2h	equ	0xFDA
  6582                           fsr2l	equ	0xFD9
  6583                           status	equ	0xFD8
  6584                           
  6585 ;; *************** function i1_send_msg *****************
  6586 ;; Defined at:
  6587 ;;		line 24 in file "src/messages.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6590 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6591 ;;  length          1   12[COMRAM] unsigned char 
  6592 ;;  msgtype         1   13[COMRAM] unsigned char 
  6593 ;;  data            2   14[COMRAM] PTR void 
  6594 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  6595 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), 
  6596 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6599 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6600 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6601 ;;  send_msg        2   17[COMRAM] unsigned int 
  6602 ;;  send_msg        1   19[COMRAM] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      char 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6612 ;;      Params:         6       0       0       0       0
  6613 ;;      Locals:         5       0       0       0       0
  6614 ;;      Temps:          1       0       0       0       0
  6615 ;;      Totals:        12       0       0       0       0
  6616 ;;Total ram usage:       12 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    6
  6619 ;; This function calls:
  6620 ;;		i1_memcpy
  6621 ;; This function is called by:
  6622 ;;		i1_ToMainLow_sendmsg
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text40
  6627  001266                     __ptext40:
  6628                           	opt stack 0
  6629  001266                     i1_send_msg:
  6630                           	opt stack 17
  6631                           
  6632                           ;messages.c: 25: unsigned char slot;
  6633                           ;messages.c: 27: msg *qmsg;
  6634                           ;messages.c: 28: size_t tlength = length;
  6635                           
  6636                           ;incstack = 0
  6637  001266  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6638  00126A  6A13               	clrf	i1send_msg@tlength+1,c
  6639                           
  6640                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6641  00126C  EE20 F034          	lfsr	2,52
  6642  001270  500B               	movf	i1send_msg@qptr,w,c
  6643  001272  26D9               	addwf	fsr2l,f,c
  6644  001274  500C               	movf	i1send_msg@qptr+1,w,c
  6645  001276  22DA               	addwfc	fsr2h,f,c
  6646  001278  50DF               	movf	indf2,w,c
  6647  00127A  6E14               	movwf	i1send_msg@slot,c
  6648                           
  6649                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6650  00127C  5014               	movf	i1send_msg@slot,w,c
  6651  00127E  0D0D               	mullw	13
  6652  001280  50F3               	movf	prodl,w,c
  6653  001282  240B               	addwf	i1send_msg@qptr,w,c
  6654  001284  6E15               	movwf	i1send_msg@qmsg,c
  6655  001286  50F4               	movf	prodh,w,c
  6656  001288  200C               	addwfc	i1send_msg@qptr+1,w,c
  6657  00128A  6E16               	movwf	i1send_msg@qmsg+1,c
  6658                           
  6659                           ;messages.c: 41: if (qmsg->full != 0) {
  6660  00128C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6661  001290  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6662  001294  50DF               	movf	indf2,w,c
  6663  001296  B4D8               	btfsc	status,2,c
  6664  001298  D002               	goto	i1l2215
  6665                           
  6666                           ;messages.c: 42: return (-1);
  6667  00129A  0EFF               	movlw	255
  6668  00129C  0012               	return	
  6669  00129E                     i1l2215:
  6670                           
  6671                           ;messages.c: 43: }
  6672                           ;messages.c: 46: qmsg->length = length;
  6673  00129E  EE20 F001          	lfsr	2,1
  6674  0012A2  5015               	movf	i1send_msg@qmsg,w,c
  6675  0012A4  26D9               	addwf	fsr2l,f,c
  6676  0012A6  5016               	movf	i1send_msg@qmsg+1,w,c
  6677  0012A8  22DA               	addwfc	fsr2h,f,c
  6678  0012AA  C00D  FFDF         	movff	i1send_msg@length,indf2
  6679                           
  6680                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6681  0012AE  EE20 F002          	lfsr	2,2
  6682  0012B2  5015               	movf	i1send_msg@qmsg,w,c
  6683  0012B4  26D9               	addwf	fsr2l,f,c
  6684  0012B6  5016               	movf	i1send_msg@qmsg+1,w,c
  6685  0012B8  22DA               	addwfc	fsr2h,f,c
  6686  0012BA  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6687                           
  6688                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6689  0012BE  0E03               	movlw	3
  6690  0012C0  2415               	addwf	i1send_msg@qmsg,w,c
  6691  0012C2  6E01               	movwf	i1memcpy@d1,c
  6692  0012C4  0E00               	movlw	0
  6693  0012C6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6694  0012C8  6E02               	movwf	i1memcpy@d1+1,c
  6695  0012CA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6696  0012CE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6697  0012D2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6698  0012D6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6699  0012DA  EC69  F00C         	call	i1_memcpy	;wreg free
  6700                           
  6701                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6702  0012DE  EE20 F034          	lfsr	2,52
  6703  0012E2  500B               	movf	i1send_msg@qptr,w,c
  6704  0012E4  26D9               	addwf	fsr2l,f,c
  6705  0012E6  500C               	movf	i1send_msg@qptr+1,w,c
  6706  0012E8  22DA               	addwfc	fsr2h,f,c
  6707  0012EA  EE10 F034          	lfsr	1,52
  6708  0012EE  500B               	movf	i1send_msg@qptr,w,c
  6709  0012F0  26E1               	addwf	fsr1l,f,c
  6710  0012F2  500C               	movf	i1send_msg@qptr+1,w,c
  6711  0012F4  22E2               	addwfc	fsr1h,f,c
  6712  0012F6  50E7               	movf	indf1,w,c
  6713  0012F8  6E11               	movwf	??i1_send_msg& (0+255),c
  6714  0012FA  2811               	incf	??i1_send_msg,w,c
  6715  0012FC  0B03               	andlw	3
  6716  0012FE  6EDF               	movwf	indf2,c
  6717                           
  6718                           ;messages.c: 59: qmsg->full = 1;
  6719  001300  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6720  001304  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6721  001308  0E01               	movlw	1
  6722  00130A  6EDF               	movwf	indf2,c
  6723                           
  6724                           ;messages.c: 60: return (1);
  6725  00130C  0E01               	movlw	1
  6726  00130E  0012               	return	
  6727  001310                     __end_ofi1_send_msg:
  6728                           	opt stack 0
  6729                           pclatu	equ	0xFFB
  6730                           pclath	equ	0xFFA
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           prodh	equ	0xFF4
  6736                           prodl	equ	0xFF3
  6737                           intcon	equ	0xFF2
  6738                           intcon2	equ	0xFF1
  6739                           postinc0	equ	0xFEE
  6740                           fsr0h	equ	0xFEA
  6741                           fsr0l	equ	0xFE9
  6742                           wreg	equ	0xFE8
  6743                           indf1	equ	0xFE7
  6744                           postdec1	equ	0xFE5
  6745                           fsr1h	equ	0xFE2
  6746                           fsr1l	equ	0xFE1
  6747                           bsr	equ	0xFE0
  6748                           indf2	equ	0xFDF
  6749                           postinc2	equ	0xFDE
  6750                           postdec2	equ	0xFDD
  6751                           fsr2h	equ	0xFDA
  6752                           fsr2l	equ	0xFD9
  6753                           status	equ	0xFD8
  6754                           
  6755 ;; *************** function i1_memcpy *****************
  6756 ;; Defined at:
  6757 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  d1              2    0[COMRAM] PTR void 
  6760 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6761 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6762 ;;		 -> main@msgbuffer(11), NULL(0), 
  6763 ;;  s1              2    2[COMRAM] PTR const void 
  6764 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6765 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6766 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  6767 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6768 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  6769 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  6770 ;;  n               2    4[COMRAM] unsigned int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6773 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6774 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6775 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  6776 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6777 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  6778 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  6779 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6780 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6781 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6782 ;;		 -> main@msgbuffer(11), NULL(0), 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  2    0[COMRAM] PTR void 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6792 ;;      Params:         6       0       0       0       0
  6793 ;;      Locals:         4       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0
  6795 ;;      Totals:        10       0       0       0       0
  6796 ;;Total ram usage:       10 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    5
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		i1_send_msg
  6803 ;;		i1_recv_msg
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text41
  6808  0018D2                     __ptext41:
  6809                           	opt stack 0
  6810  0018D2                     i1_memcpy:
  6811                           	opt stack 17
  6812                           
  6813                           ;incstack = 0
  6814  0018D2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6815  0018D6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6816  0018DA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6817  0018DE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6818  0018E2  D00E               	goto	i1l2163
  6819  0018E4                     i1l2157:
  6820  0018E4  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6821  0018E8  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6822  0018EC  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6823  0018F0  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6824  0018F4  CFDF FFE7          	movff	indf2,indf1
  6825  0018F8  4A09               	infsnz	i1memcpy@s,f,c
  6826  0018FA  2A0A               	incf	i1memcpy@s+1,f,c
  6827  0018FC  4A07               	infsnz	i1memcpy@d,f,c
  6828  0018FE  2A08               	incf	i1memcpy@d+1,f,c
  6829  001900                     i1l2163:
  6830  001900  0605               	decf	i1memcpy@n,f,c
  6831  001902  A0D8               	btfss	status,0,c
  6832  001904  0606               	decf	i1memcpy@n+1,f,c
  6833  001906  2805               	incf	i1memcpy@n& (0+255),w,c
  6834  001908  B4D8               	btfsc	status,2,c
  6835  00190A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6836  00190C  B4D8               	btfsc	status,2,c
  6837                           
  6838                           ;	Return value of i1_memcpy is never used
  6839  00190E  0012               	return	
  6840  001910  D7E9               	goto	i1l2157
  6841  001912                     __end_ofi1_memcpy:
  6842                           	opt stack 0
  6843                           pclatu	equ	0xFFB
  6844                           pclath	equ	0xFFA
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           intcon2	equ	0xFF1
  6853                           postinc0	equ	0xFEE
  6854                           fsr0h	equ	0xFEA
  6855                           fsr0l	equ	0xFE9
  6856                           wreg	equ	0xFE8
  6857                           indf1	equ	0xFE7
  6858                           postdec1	equ	0xFE5
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           bsr	equ	0xFE0
  6862                           indf2	equ	0xFDF
  6863                           postinc2	equ	0xFDE
  6864                           postdec2	equ	0xFDD
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function _ReadUSART *****************
  6870 ;; Defined at:
  6871 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  data            1    0[COMRAM] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      unsigned char 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6885 ;;      Params:         0       0       0       0       0
  6886 ;;      Locals:         1       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0
  6888 ;;      Totals:         1       0       0       0       0
  6889 ;;Total ram usage:        1 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    5
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_uart_recv_int_handler
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text42
  6900  001C2C                     __ptext42:
  6901                           	opt stack 0
  6902  001C2C                     _ReadUSART:
  6903                           	opt stack 18
  6904                           
  6905                           ;incstack = 0
  6906  001C2C  0EF2               	movlw	242
  6907  001C2E  164C               	andwf	_USART_Status,f,c
  6908  001C30  ACAB               	btfss	4011,6,c	;volatile
  6909  001C32  D003               	goto	i1l534
  6910  001C34  904C               	bcf	_USART_Status,0,c
  6911  001C36  B0AB               	btfsc	4011,0,c	;volatile
  6912  001C38  804C               	bsf	_USART_Status,0,c
  6913  001C3A                     i1l534:
  6914  001C3A  B4AB               	btfsc	4011,2,c	;volatile
  6915  001C3C  844C               	bsf	_USART_Status,2,c
  6916  001C3E  B2AB               	btfsc	4011,1,c	;volatile
  6917  001C40  864C               	bsf	_USART_Status,3,c
  6918  001C42  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6919  001C46  5001               	movf	ReadUSART@data,w,c
  6920  001C48  0012               	return	
  6921  001C4A                     __end_of_ReadUSART:
  6922                           	opt stack 0
  6923                           pclatu	equ	0xFFB
  6924                           pclath	equ	0xFFA
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           intcon2	equ	0xFF1
  6933                           postinc0	equ	0xFEE
  6934                           fsr0h	equ	0xFEA
  6935                           fsr0l	equ	0xFE9
  6936                           wreg	equ	0xFE8
  6937                           indf1	equ	0xFE7
  6938                           postdec1	equ	0xFE5
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           bsr	equ	0xFE0
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _InterruptHandlerHigh *****************
  6950 ;; Defined at:
  6951 ;;		line 83 in file "src/interrupts.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;		None               void
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6965 ;;      Params:         0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0
  6967 ;;      Temps:          0      14       0       0       0
  6968 ;;      Totals:         0      14       0       0       0
  6969 ;;Total ram usage:       14 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    4
  6972 ;; This function calls:
  6973 ;;		_SleepIfOkay
  6974 ;;		_i2c_int_handler
  6975 ;;		_timer0_int_handler
  6976 ;; This function is called by:
  6977 ;;		Interrupt level 2
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	intcode
  6982  000008                     __pintcode:
  6983                           	opt stack 0
  6984  000008                     _InterruptHandlerHigh:
  6985                           	opt stack 16
  6986                           
  6987                           ;incstack = 0
  6988  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  6989  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  6990  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  6991  000014  EF88  F009         	goto	int_func
  6992                           pclatu	equ	0xFFB
  6993                           pclath	equ	0xFFA
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodh	equ	0xFF4
  6999                           prodl	equ	0xFF3
  7000                           intcon	equ	0xFF2
  7001                           intcon2	equ	0xFF1
  7002                           postinc0	equ	0xFEE
  7003                           fsr0h	equ	0xFEA
  7004                           fsr0l	equ	0xFE9
  7005                           wreg	equ	0xFE8
  7006                           indf1	equ	0xFE7
  7007                           postdec1	equ	0xFE5
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           bsr	equ	0xFE0
  7011                           indf2	equ	0xFDF
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018                           	psect	intcode_body
  7019  001310                     __pintcode_body:
  7020                           	opt stack 16
  7021  001310                     int_func:
  7022                           	opt stack 16
  7023  001310  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  7024  001314  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  7025  001318  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  7026  00131C  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  7027  001320  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  7028  001324  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  7029  001328  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  7030  00132C  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  7031  001330  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  7032  001334  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  7033  001338  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  7034                           
  7035                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  7036  00133C  A69E               	btfss	3998,3,c	;volatile
  7037  00133E  D003               	goto	i2l3267
  7038                           
  7039                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  7040  001340  969E               	bcf	3998,3,c	;volatile
  7041                           
  7042                           ;interrupts.c: 92: i2c_int_handler();
  7043  001342  EC69  F000         	call	_i2c_int_handler	;wreg free
  7044  001346                     i2l3267:
  7045                           
  7046                           ;interrupts.c: 93: }
  7047                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  7048  001346  A4F2               	btfss	intcon,2,c	;volatile
  7049  001348  D003               	goto	i2l3273
  7050                           
  7051                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  7052  00134A  94F2               	bcf	intcon,2,c	;volatile
  7053                           
  7054                           ;interrupts.c: 99: timer0_int_handler();
  7055  00134C  EC5E  F00E         	call	_timer0_int_handler	;wreg free
  7056  001350                     i2l3273:
  7057                           
  7058                           ;interrupts.c: 100: }
  7059                           ;interrupts.c: 102: if(INTCONbits.RBIF){
  7060  001350  A0F2               	btfss	intcon,0,c	;volatile
  7061  001352  D00A               	goto	i2l3279
  7062                           
  7063                           ;interrupts.c: 103: INTCONbits.RBIF = 0;
  7064  001354  90F2               	bcf	intcon,0,c	;volatile
  7065                           
  7066                           ;interrupts.c: 104: LATB = 0;
  7067  001356  0E00               	movlw	0
  7068  001358  6E8A               	movwf	3978,c	;volatile
  7069                           
  7070                           ;interrupts.c: 105: LATA = !PORTA;
  7071  00135A  5080               	movf	3968,w,c	;volatile
  7072  00135C  A4D8               	btfss	status,2,c
  7073  00135E  D002               	goto	i2u245_40
  7074  001360  0E01               	movlw	1
  7075  001362  D001               	goto	i2u245_46
  7076  001364                     i2u245_40:
  7077  001364  0E00               	movlw	0
  7078  001366                     i2u245_46:
  7079  001366  6E89               	movwf	3977,c	;volatile
  7080  001368                     i2l3279:
  7081                           
  7082                           ;interrupts.c: 107: }
  7083                           ;interrupts.c: 116: SleepIfOkay();
  7084  001368  EC42  F00C         	call	_SleepIfOkay	;wreg free
  7085  00136C  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7086  001370  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7087  001374  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7088  001378  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7089  00137C  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7090  001380  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7091  001384  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7092  001388  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7093  00138C  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7094  001390  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7095  001394  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7096  001398  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7097  00139C  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7098  0013A0  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7099  0013A4  0011               	retfie		f
  7100  0013A6                     __end_of_InterruptHandlerHigh:
  7101                           	opt stack 0
  7102                           pclatu	equ	0xFFB
  7103                           pclath	equ	0xFFA
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           intcon2	equ	0xFF1
  7112                           postinc0	equ	0xFEE
  7113                           fsr0h	equ	0xFEA
  7114                           fsr0l	equ	0xFE9
  7115                           wreg	equ	0xFE8
  7116                           indf1	equ	0xFE7
  7117                           postdec1	equ	0xFE5
  7118                           fsr1h	equ	0xFE2
  7119                           fsr1l	equ	0xFE1
  7120                           bsr	equ	0xFE0
  7121                           indf2	equ	0xFDF
  7122                           postinc2	equ	0xFDE
  7123                           postdec2	equ	0xFDD
  7124                           fsr2h	equ	0xFDA
  7125                           fsr2l	equ	0xFD9
  7126                           status	equ	0xFD8
  7127                           
  7128 ;; *************** function _timer0_int_handler *****************
  7129 ;; Defined at:
  7130 ;;		line 17 in file "src/user_interrupts.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;		None
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  msgtype         2    0        int 
  7135 ;;  length          2    0        int 
  7136 ;;  val             2    0        unsigned int 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;		None               void
  7139 ;; Registers used:
  7140 ;;		None
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7146 ;;      Params:         0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_InterruptHandlerHigh
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text44
  7160  001CBC                     __ptext44:
  7161                           	opt stack 0
  7162  001CBC                     _timer0_int_handler:
  7163                           	opt stack 19
  7164                           
  7165                           ;incstack = 0
  7166  001CBC  0012               	return	
  7167  001CBE                     __end_of_timer0_int_handler:
  7168                           	opt stack 0
  7169                           pclatu	equ	0xFFB
  7170                           pclath	equ	0xFFA
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           intcon	equ	0xFF2
  7178                           intcon2	equ	0xFF1
  7179                           postinc0	equ	0xFEE
  7180                           fsr0h	equ	0xFEA
  7181                           fsr0l	equ	0xFE9
  7182                           wreg	equ	0xFE8
  7183                           indf1	equ	0xFE7
  7184                           postdec1	equ	0xFE5
  7185                           fsr1h	equ	0xFE2
  7186                           fsr1l	equ	0xFE1
  7187                           bsr	equ	0xFE0
  7188                           indf2	equ	0xFDF
  7189                           postinc2	equ	0xFDE
  7190                           postdec2	equ	0xFDD
  7191                           fsr2h	equ	0xFDA
  7192                           fsr2l	equ	0xFD9
  7193                           status	equ	0xFD8
  7194                           
  7195 ;; *************** function _i2c_int_handler *****************
  7196 ;; Defined at:
  7197 ;;		line 100 in file "src/my_i2c.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  7202 ;;  data_read       1   14[BANK0 ] unsigned char 
  7203 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  7204 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  7205 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  7206 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  7207 ;;  data_written    1    9[BANK0 ] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;		None               void
  7210 ;; Registers used:
  7211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7217 ;;      Params:         0       0       0       0       0
  7218 ;;      Locals:         0       9       0       0       0
  7219 ;;      Temps:          0       1       0       0       0
  7220 ;;      Totals:         0      10       0       0       0
  7221 ;;Total ram usage:       10 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    3
  7224 ;; This function calls:
  7225 ;;		_ToMainHigh_sendmsg
  7226 ;;		_handle_start
  7227 ;; This function is called by:
  7228 ;;		_InterruptHandlerHigh
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text45
  7233  0000D2                     __ptext45:
  7234                           	opt stack 0
  7235  0000D2                     _i2c_int_handler:
  7236                           	opt stack 16
  7237                           
  7238                           ;my_i2c.c: 101: unsigned char i2c_data;
  7239                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7240                           
  7241                           ;incstack = 0
  7242  0000D2  0E00               	movlw	0
  7243  0000D4  0100               	movlb	0	; () banked
  7244  0000D6  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7245                           
  7246                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7247  0000D8  0E00               	movlw	0
  7248  0000DA  0100               	movlb	0	; () banked
  7249  0000DC  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7250                           
  7251                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7252  0000DE  0E00               	movlw	0
  7253  0000E0  0100               	movlb	0	; () banked
  7254  0000E2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7255                           
  7256                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7257  0000E4  0E00               	movlw	0
  7258  0000E6  0100               	movlb	0	; () banked
  7259  0000E8  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7260                           
  7261                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7262  0000EA  0E00               	movlw	0
  7263  0000EC  0100               	movlb	0	; () banked
  7264  0000EE  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7268                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7269  0000F0  ACC6               	btfss	4038,6,c	;volatile
  7270  0000F2  D024               	goto	i2l3133
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7274  0000F4  9CC6               	bcf	4038,6,c	;volatile
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7278  0000F6  0100               	movlb	0	; () banked
  7279  0000F8  EE20 F00C          	lfsr	2,12
  7280  0000FC  0100               	movlb	0	; () banked
  7281  0000FE  51D3               	movf	_ic_ptr& (0+255),w,b
  7282  000100  26D9               	addwf	fsr2l,f,c
  7283  000102  0100               	movlb	0	; () banked
  7284  000104  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7285  000106  22DA               	addwfc	fsr2h,f,c
  7286  000108  0E05               	movlw	5
  7287  00010A  6EDF               	movwf	indf2,c
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;my_i2c.c: 116: overrun_error = 1;
  7291  00010C  0E01               	movlw	1
  7292  00010E  0100               	movlb	0	; () banked
  7293  000110  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7297  000112  0100               	movlb	0	; () banked
  7298  000114  EE20 F00E          	lfsr	2,14
  7299  000118  0100               	movlb	0	; () banked
  7300  00011A  51D3               	movf	_ic_ptr& (0+255),w,b
  7301  00011C  26D9               	addwf	fsr2l,f,c
  7302  00011E  0100               	movlb	0	; () banked
  7303  000120  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7304  000122  22DA               	addwfc	fsr2h,f,c
  7305  000124  2ADF               	incf	indf2,f,c
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7309  000126  0100               	movlb	0	; () banked
  7310  000128  EE20 F00D          	lfsr	2,13
  7311  00012C  0100               	movlb	0	; () banked
  7312  00012E  51D3               	movf	_ic_ptr& (0+255),w,b
  7313  000130  26D9               	addwf	fsr2l,f,c
  7314  000132  0100               	movlb	0	; () banked
  7315  000134  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  000136  22DA               	addwfc	fsr2h,f,c
  7317  000138  0E04               	movlw	4
  7318  00013A  6EDF               	movwf	indf2,c
  7319  00013C                     i2l3133:
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 119: }
  7323                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7324  00013C  A0C7               	btfss	4039,0,c	;volatile
  7325  00013E  D005               	goto	i2l3139
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7329  000140  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 123: data_read = 1;
  7333  000144  0E01               	movlw	1
  7334  000146  0100               	movlb	0	; () banked
  7335  000148  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7336  00014A                     i2l3139:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;my_i2c.c: 124: }
  7340                           ;my_i2c.c: 126: if (!overrun_error) {
  7341  00014A  0100               	movlb	0	; () banked
  7342  00014C  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7343  00014E  D19F               	goto	i2l299
  7344  000150  D188               	goto	i2l3227
  7345  000152                     i2l301:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;my_i2c.c: 129: {
  7349                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7350  000152  A6C7               	btfss	4039,3,c	;volatile
  7351  000154  D19C               	goto	i2l299
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;my_i2c.c: 132: handle_start(data_read);
  7355  000156  0100               	movlb	0	; () banked
  7356  000158  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7357  00015A  ECAD  F007         	call	_handle_start
  7358                           
  7359                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7360  00015E  0100               	movlb	0	; () banked
  7361  000160  EE20 F00C          	lfsr	2,12
  7362  000164  0100               	movlb	0	; () banked
  7363  000166  51D3               	movf	_ic_ptr& (0+255),w,b
  7364  000168  26D9               	addwf	fsr2l,f,c
  7365  00016A  0100               	movlb	0	; () banked
  7366  00016C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7367  00016E  22DA               	addwfc	fsr2h,f,c
  7368  000170  0E08               	movlw	8
  7369  000172  62DF               	cpfseq	indf2,c
  7370  000174  D18C               	goto	i2l299
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 135: data_read = 0;
  7374  000176  0E00               	movlw	0
  7375  000178  0100               	movlb	0	; () banked
  7376  00017A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7377                           
  7378                           ;my_i2c.c: 136: msg_to_send = 1;
  7379  00017C  0E01               	movlw	1
  7380  00017E  0100               	movlb	0	; () banked
  7381  000180  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7382  000182  D185               	goto	i2l299
  7383  000184                     i2l305:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;my_i2c.c: 142: {
  7387                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7388  000184  A8C7               	btfss	4039,4,c	;volatile
  7389  000186  D02A               	goto	i2l3159
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7393  000188  0100               	movlb	0	; () banked
  7394  00018A  EE20 F00B          	lfsr	2,11
  7395  00018E  0100               	movlb	0	; () banked
  7396  000190  51D3               	movf	_ic_ptr& (0+255),w,b
  7397  000192  26D9               	addwf	fsr2l,f,c
  7398  000194  0100               	movlb	0	; () banked
  7399  000196  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7400  000198  22DA               	addwfc	fsr2h,f,c
  7401  00019A  2ADF               	incf	indf2,f,c
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;my_i2c.c: 148: if (data_read) {
  7405  00019C  0100               	movlb	0	; () banked
  7406  00019E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7407  0001A0  B4D8               	btfsc	status,2,c
  7408  0001A2  D154               	goto	L10
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7412  0001A4  BAC7               	btfsc	4039,5,c	;volatile
  7413  0001A6  D004               	goto	i2l3157
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 150: msg_ready = 1;
  7417  0001A8  0E01               	movlw	1
  7418  0001AA  0100               	movlb	0	; () banked
  7419  0001AC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7420                           
  7421                           ;my_i2c.c: 151: } else {
  7422  0001AE  D14E               	goto	L10
  7423  0001B0                     i2l3157:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7427  0001B0  0100               	movlb	0	; () banked
  7428  0001B2  EE20 F00E          	lfsr	2,14
  7429  0001B6  0100               	movlb	0	; () banked
  7430  0001B8  51D3               	movf	_ic_ptr& (0+255),w,b
  7431  0001BA  26D9               	addwf	fsr2l,f,c
  7432  0001BC  0100               	movlb	0	; () banked
  7433  0001BE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7434  0001C0  22DA               	addwfc	fsr2h,f,c
  7435  0001C2  2ADF               	incf	indf2,f,c
  7436                           
  7437                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7438  0001C4  0100               	movlb	0	; () banked
  7439  0001C6  EE20 F00D          	lfsr	2,13
  7440  0001CA  0100               	movlb	0	; () banked
  7441  0001CC  51D3               	movf	_ic_ptr& (0+255),w,b
  7442  0001CE  26D9               	addwf	fsr2l,f,c
  7443  0001D0  0100               	movlb	0	; () banked
  7444  0001D2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  0001D4  22DA               	addwfc	fsr2h,f,c
  7446  0001D6  0E06               	movlw	6
  7447  0001D8  6EDF               	movwf	indf2,c
  7448                           
  7449                           ; BSR set to: 0
  7450  0001DA  D138               	goto	L10
  7451  0001DC                     i2l3159:
  7452                           
  7453                           ; BSR set to: 0
  7454  0001DC  0100               	movlb	0	; () banked
  7455  0001DE  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7456  0001E0  B4D8               	btfsc	status,2,c
  7457  0001E2  D155               	goto	i2l299
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7461  0001E4  0100               	movlb	0	; () banked
  7462  0001E6  EE20 F00B          	lfsr	2,11
  7463  0001EA  0100               	movlb	0	; () banked
  7464  0001EC  51D3               	movf	_ic_ptr& (0+255),w,b
  7465  0001EE  26D9               	addwf	fsr2l,f,c
  7466  0001F0  0100               	movlb	0	; () banked
  7467  0001F2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7468  0001F4  22DA               	addwfc	fsr2h,f,c
  7469  0001F6  2ADF               	incf	indf2,f,c
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7473  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7474  0001FA  D019               	goto	i2l3175
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7478  0001FC  B4C7               	btfsc	4039,2,c	;volatile
  7479  0001FE  D00B               	goto	i2l3169
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7483  000200  0100               	movlb	0	; () banked
  7484  000202  EE20 F00C          	lfsr	2,12
  7485  000206  0100               	movlb	0	; () banked
  7486  000208  51D3               	movf	_ic_ptr& (0+255),w,b
  7487  00020A  26D9               	addwf	fsr2l,f,c
  7488  00020C  0100               	movlb	0	; () banked
  7489  00020E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  000210  22DA               	addwfc	fsr2h,f,c
  7491  000212  0E07               	movlw	7
  7492  000214  D071               	goto	L8
  7493  000216                     i2l3169:
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7497  000216  0100               	movlb	0	; () banked
  7498  000218  EE20 F00C          	lfsr	2,12
  7499  00021C  0100               	movlb	0	; () banked
  7500  00021E  51D3               	movf	_ic_ptr& (0+255),w,b
  7501  000220  26D9               	addwf	fsr2l,f,c
  7502  000222  0100               	movlb	0	; () banked
  7503  000224  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  000226  22DA               	addwfc	fsr2h,f,c
  7505  000228  0E08               	movlw	8
  7506  00022A  6EDF               	movwf	indf2,c
  7507  00022C  D108               	goto	L7
  7508  00022E                     i2l3175:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7512  00022E  0100               	movlb	0	; () banked
  7513  000230  EE20 F00E          	lfsr	2,14
  7514  000234  0100               	movlb	0	; () banked
  7515  000236  51D3               	movf	_ic_ptr& (0+255),w,b
  7516  000238  26D9               	addwf	fsr2l,f,c
  7517  00023A  0100               	movlb	0	; () banked
  7518  00023C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7519  00023E  22DA               	addwfc	fsr2h,f,c
  7520  000240  2ADF               	incf	indf2,f,c
  7521                           
  7522                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7523  000242  0100               	movlb	0	; () banked
  7524  000244  EE20 F00C          	lfsr	2,12
  7525  000248  0100               	movlb	0	; () banked
  7526  00024A  51D3               	movf	_ic_ptr& (0+255),w,b
  7527  00024C  26D9               	addwf	fsr2l,f,c
  7528  00024E  0100               	movlb	0	; () banked
  7529  000250  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7530  000252  22DA               	addwfc	fsr2h,f,c
  7531  000254  0E05               	movlw	5
  7532  000256  6EDF               	movwf	indf2,c
  7533                           
  7534                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7535  000258  0100               	movlb	0	; () banked
  7536  00025A  EE20 F00D          	lfsr	2,13
  7537  00025E  0100               	movlb	0	; () banked
  7538  000260  51D3               	movf	_ic_ptr& (0+255),w,b
  7539  000262  26D9               	addwf	fsr2l,f,c
  7540  000264  0100               	movlb	0	; () banked
  7541  000266  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7542  000268  22DA               	addwfc	fsr2h,f,c
  7543  00026A  0E06               	movlw	6
  7544  00026C  D045               	goto	L8
  7545  00026E                     i2l3177:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 177: {
  7549                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7550  00026E  0100               	movlb	0	; () banked
  7551  000270  EE20 F01A          	lfsr	2,26
  7552  000274  0100               	movlb	0	; () banked
  7553  000276  51D3               	movf	_ic_ptr& (0+255),w,b
  7554  000278  26D9               	addwf	fsr2l,f,c
  7555  00027A  0100               	movlb	0	; () banked
  7556  00027C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  00027E  22DA               	addwfc	fsr2h,f,c
  7558  000280  50DF               	movf	indf2,w,c
  7559  000282  0100               	movlb	0	; () banked
  7560  000284  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7561  000286  0100               	movlb	0	; () banked
  7562  000288  EE20 F019          	lfsr	2,25
  7563  00028C  0100               	movlb	0	; () banked
  7564  00028E  51D3               	movf	_ic_ptr& (0+255),w,b
  7565  000290  26D9               	addwf	fsr2l,f,c
  7566  000292  0100               	movlb	0	; () banked
  7567  000294  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7568  000296  22DA               	addwfc	fsr2h,f,c
  7569  000298  50DF               	movf	indf2,w,c
  7570  00029A  0100               	movlb	0	; () banked
  7571  00029C  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7572  00029E  B0D8               	btfsc	status,0,c
  7573  0002A0  D0D5               	goto	L10
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7577  0002A2  0100               	movlb	0	; () banked
  7578  0002A4  EE20 F01A          	lfsr	2,26
  7579  0002A8  0100               	movlb	0	; () banked
  7580  0002AA  51D3               	movf	_ic_ptr& (0+255),w,b
  7581  0002AC  26D9               	addwf	fsr2l,f,c
  7582  0002AE  0100               	movlb	0	; () banked
  7583  0002B0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  0002B2  22DA               	addwfc	fsr2h,f,c
  7585  0002B4  50DF               	movf	indf2,w,c
  7586  0002B6  0100               	movlb	0	; () banked
  7587  0002B8  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7588  0002BA  0100               	movlb	0	; () banked
  7589  0002BC  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7590  0002BE  0D01               	mullw	1
  7591  0002C0  0E0F               	movlw	15
  7592  0002C2  26F3               	addwf	prodl,f,c
  7593  0002C4  0E00               	movlw	0
  7594  0002C6  22F4               	addwfc	prodh,f,c
  7595  0002C8  50F3               	movf	prodl,w,c
  7596  0002CA  0100               	movlb	0	; () banked
  7597  0002CC  25D3               	addwf	_ic_ptr& (0+255),w,b
  7598  0002CE  6ED9               	movwf	fsr2l,c
  7599  0002D0  50F4               	movf	prodh,w,c
  7600  0002D2  0100               	movlb	0	; () banked
  7601  0002D4  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7602  0002D6  6EDA               	movwf	fsr2h,c
  7603  0002D8  50DF               	movf	indf2,w,c
  7604  0002DA  6EC9               	movwf	4041,c	;volatile
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7608  0002DC  0100               	movlb	0	; () banked
  7609  0002DE  EE20 F01A          	lfsr	2,26
  7610  0002E2  0100               	movlb	0	; () banked
  7611  0002E4  51D3               	movf	_ic_ptr& (0+255),w,b
  7612  0002E6  26D9               	addwf	fsr2l,f,c
  7613  0002E8  0100               	movlb	0	; () banked
  7614  0002EA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7615  0002EC  22DA               	addwfc	fsr2h,f,c
  7616  0002EE  2ADF               	incf	indf2,f,c
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 181: data_written = 1;
  7620  0002F0  0E01               	movlw	1
  7621  0002F2  0100               	movlb	0	; () banked
  7622  0002F4  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7623                           
  7624                           ;my_i2c.c: 182: } else {
  7625  0002F6  D0CB               	goto	i2l299
  7626  0002F8                     L8:
  7627  0002F8  6EDF               	movwf	indf2,c
  7628  0002FA  D0C9               	goto	i2l299
  7629  0002FC                     i2l319:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;my_i2c.c: 189: {
  7633                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7634  0002FC  A8C7               	btfss	4039,4,c	;volatile
  7635  0002FE  D05A               	goto	i2l3205
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7639  000300  0100               	movlb	0	; () banked
  7640  000302  EE20 F00B          	lfsr	2,11
  7641  000306  0100               	movlb	0	; () banked
  7642  000308  51D3               	movf	_ic_ptr& (0+255),w,b
  7643  00030A  26D9               	addwf	fsr2l,f,c
  7644  00030C  0100               	movlb	0	; () banked
  7645  00030E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7646  000310  22DA               	addwfc	fsr2h,f,c
  7647  000312  2ADF               	incf	indf2,f,c
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;my_i2c.c: 194: if (data_read) {
  7651  000314  0100               	movlb	0	; () banked
  7652  000316  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7653  000318  B4D8               	btfsc	status,2,c
  7654  00031A  D048               	goto	i2l3201
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7658  00031C  AAC7               	btfss	4039,5,c	;volatile
  7659  00031E  D025               	goto	i2l3199
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7663  000320  0100               	movlb	0	; () banked
  7664  000322  EE20 F00A          	lfsr	2,10
  7665  000326  0100               	movlb	0	; () banked
  7666  000328  51D3               	movf	_ic_ptr& (0+255),w,b
  7667  00032A  26D9               	addwf	fsr2l,f,c
  7668  00032C  0100               	movlb	0	; () banked
  7669  00032E  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7670  000330  22DA               	addwfc	fsr2h,f,c
  7671  000332  50DF               	movf	indf2,w,c
  7672  000334  0100               	movlb	0	; () banked
  7673  000336  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7674  000338  0100               	movlb	0	; () banked
  7675  00033A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7676  00033C  0D01               	mullw	1
  7677  00033E  50F3               	movf	prodl,w,c
  7678  000340  0100               	movlb	0	; () banked
  7679  000342  25D3               	addwf	_ic_ptr& (0+255),w,b
  7680  000344  6ED9               	movwf	fsr2l,c
  7681  000346  50F4               	movf	prodh,w,c
  7682  000348  0100               	movlb	0	; () banked
  7683  00034A  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7684  00034C  6EDA               	movwf	fsr2h,c
  7685  00034E  0100               	movlb	0	; () banked
  7686  000350  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7690  000354  0100               	movlb	0	; () banked
  7691  000356  EE20 F00A          	lfsr	2,10
  7692  00035A  0100               	movlb	0	; () banked
  7693  00035C  51D3               	movf	_ic_ptr& (0+255),w,b
  7694  00035E  26D9               	addwf	fsr2l,f,c
  7695  000360  0100               	movlb	0	; () banked
  7696  000362  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7697  000364  22DA               	addwfc	fsr2h,f,c
  7698  000366  2ADF               	incf	indf2,f,c
  7699  000368  D021               	goto	i2l3201
  7700  00036A                     i2l3199:
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7704  00036A  0100               	movlb	0	; () banked
  7705  00036C  EE20 F00E          	lfsr	2,14
  7706  000370  0100               	movlb	0	; () banked
  7707  000372  51D3               	movf	_ic_ptr& (0+255),w,b
  7708  000374  26D9               	addwf	fsr2l,f,c
  7709  000376  0100               	movlb	0	; () banked
  7710  000378  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  00037A  22DA               	addwfc	fsr2h,f,c
  7712  00037C  2ADF               	incf	indf2,f,c
  7713                           
  7714                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7715  00037E  0100               	movlb	0	; () banked
  7716  000380  EE20 F00D          	lfsr	2,13
  7717  000384  0100               	movlb	0	; () banked
  7718  000386  51D3               	movf	_ic_ptr& (0+255),w,b
  7719  000388  26D9               	addwf	fsr2l,f,c
  7720  00038A  0100               	movlb	0	; () banked
  7721  00038C  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7722  00038E  22DA               	addwfc	fsr2h,f,c
  7723  000390  0E06               	movlw	6
  7724  000392  6EDF               	movwf	indf2,c
  7725                           
  7726                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7727  000394  0100               	movlb	0	; () banked
  7728  000396  EE20 F00C          	lfsr	2,12
  7729  00039A  0100               	movlb	0	; () banked
  7730  00039C  51D3               	movf	_ic_ptr& (0+255),w,b
  7731  00039E  26D9               	addwf	fsr2l,f,c
  7732  0003A0  0100               	movlb	0	; () banked
  7733  0003A2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7734  0003A4  22DA               	addwfc	fsr2h,f,c
  7735  0003A6  0E05               	movlw	5
  7736  0003A8  6EDF               	movwf	indf2,c
  7737  0003AA  D050               	goto	L10
  7738  0003AC                     i2l3201:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;my_i2c.c: 205: msg_ready = 1;
  7742  0003AC  0E01               	movlw	1
  7743  0003AE  0100               	movlb	0	; () banked
  7744  0003B0  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7745                           
  7746                           ; BSR set to: 0
  7747  0003B2  D04C               	goto	L10
  7748  0003B4                     i2l3205:
  7749                           
  7750                           ; BSR set to: 0
  7751  0003B4  0100               	movlb	0	; () banked
  7752  0003B6  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7753  0003B8  B4D8               	btfsc	status,2,c
  7754  0003BA  D069               	goto	i2l299
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7758  0003BC  0100               	movlb	0	; () banked
  7759  0003BE  EE20 F00B          	lfsr	2,11
  7760  0003C2  0100               	movlb	0	; () banked
  7761  0003C4  51D3               	movf	_ic_ptr& (0+255),w,b
  7762  0003C6  26D9               	addwf	fsr2l,f,c
  7763  0003C8  0100               	movlb	0	; () banked
  7764  0003CA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7765  0003CC  22DA               	addwfc	fsr2h,f,c
  7766  0003CE  2ADF               	incf	indf2,f,c
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7770  0003D0  AAC7               	btfss	4039,5,c	;volatile
  7771  0003D2  D025               	goto	i2l327
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7775  0003D4  0100               	movlb	0	; () banked
  7776  0003D6  EE20 F00A          	lfsr	2,10
  7777  0003DA  0100               	movlb	0	; () banked
  7778  0003DC  51D3               	movf	_ic_ptr& (0+255),w,b
  7779  0003DE  26D9               	addwf	fsr2l,f,c
  7780  0003E0  0100               	movlb	0	; () banked
  7781  0003E2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7782  0003E4  22DA               	addwfc	fsr2h,f,c
  7783  0003E6  50DF               	movf	indf2,w,c
  7784  0003E8  0100               	movlb	0	; () banked
  7785  0003EA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7786  0003EC  0100               	movlb	0	; () banked
  7787  0003EE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7788  0003F0  0D01               	mullw	1
  7789  0003F2  50F3               	movf	prodl,w,c
  7790  0003F4  0100               	movlb	0	; () banked
  7791  0003F6  25D3               	addwf	_ic_ptr& (0+255),w,b
  7792  0003F8  6ED9               	movwf	fsr2l,c
  7793  0003FA  50F4               	movf	prodh,w,c
  7794  0003FC  0100               	movlb	0	; () banked
  7795  0003FE  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7796  000400  6EDA               	movwf	fsr2h,c
  7797  000402  0100               	movlb	0	; () banked
  7798  000404  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7802  000408  0100               	movlb	0	; () banked
  7803  00040A  EE20 F00A          	lfsr	2,10
  7804  00040E  0100               	movlb	0	; () banked
  7805  000410  51D3               	movf	_ic_ptr& (0+255),w,b
  7806  000412  26D9               	addwf	fsr2l,f,c
  7807  000414  0100               	movlb	0	; () banked
  7808  000416  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7809  000418  22DA               	addwfc	fsr2h,f,c
  7810  00041A  2ADF               	incf	indf2,f,c
  7811                           
  7812                           ;my_i2c.c: 213: } else {
  7813  00041C  D038               	goto	i2l299
  7814  00041E                     i2l327:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7818  00041E  A4C7               	btfss	4039,2,c	;volatile
  7819  000420  D6C7               	goto	i2l3157
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7823  000422  0100               	movlb	0	; () banked
  7824  000424  EE20 F00C          	lfsr	2,12
  7825  000428  0100               	movlb	0	; () banked
  7826  00042A  51D3               	movf	_ic_ptr& (0+255),w,b
  7827  00042C  26D9               	addwf	fsr2l,f,c
  7828  00042E  0100               	movlb	0	; () banked
  7829  000430  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7830  000432  22DA               	addwfc	fsr2h,f,c
  7831  000434  0E08               	movlw	8
  7832  000436  6EDF               	movwf	indf2,c
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;my_i2c.c: 216: msg_ready = 1;
  7836  000438  0E01               	movlw	1
  7837  00043A  0100               	movlb	0	; () banked
  7838  00043C  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7839  00043E                     L7:
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;my_i2c.c: 217: msg_to_send = 1;
  7843  00043E  0E01               	movlw	1
  7844  000440  0100               	movlb	0	; () banked
  7845  000442  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;my_i2c.c: 219: data_read = 0;
  7849  000444  0E00               	movlw	0
  7850  000446  0100               	movlb	0	; () banked
  7851  000448  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7852                           
  7853                           ;my_i2c.c: 220: } else {
  7854  00044A  D021               	goto	i2l299
  7855  00044C                     L10:
  7856                           
  7857                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7858  00044C  0100               	movlb	0	; () banked
  7859  00044E  EE20 F00C          	lfsr	2,12
  7860  000452  0100               	movlb	0	; () banked
  7861  000454  51D3               	movf	_ic_ptr& (0+255),w,b
  7862  000456  26D9               	addwf	fsr2l,f,c
  7863  000458  0100               	movlb	0	; () banked
  7864  00045A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7865  00045C  22DA               	addwfc	fsr2h,f,c
  7866  00045E  0E05               	movlw	5
  7867  000460  D74B               	goto	L8
  7868  000462                     i2l3227:
  7869                           
  7870                           ; BSR set to: 0
  7871  000462  0100               	movlb	0	; () banked
  7872  000464  EE20 F00C          	lfsr	2,12
  7873  000468  0100               	movlb	0	; () banked
  7874  00046A  51D3               	movf	_ic_ptr& (0+255),w,b
  7875  00046C  26D9               	addwf	fsr2l,f,c
  7876  00046E  0100               	movlb	0	; () banked
  7877  000470  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7878  000472  22DA               	addwfc	fsr2h,f,c
  7879  000474  50DF               	movf	indf2,w,c
  7880                           
  7881                           ; Switch size 1, requested type "space"
  7882                           ; Number of cases is 4, Range of values is 5 to 8
  7883                           ; switch strategies available:
  7884                           ; Name         Instructions Cycles
  7885                           ; simple_byte           13     7 (average)
  7886                           ;	Chosen strategy is simple_byte
  7887  000476  0A05               	xorlw	5	; case 5
  7888  000478  B4D8               	btfsc	status,2,c
  7889  00047A  D66B               	goto	i2l301
  7890  00047C  0A03               	xorlw	3	; case 6
  7891  00047E  B4D8               	btfsc	status,2,c
  7892  000480  D681               	goto	i2l305
  7893  000482  0A01               	xorlw	1	; case 7
  7894  000484  B4D8               	btfsc	status,2,c
  7895  000486  D73A               	goto	i2l319
  7896  000488  0A0F               	xorlw	15	; case 8
  7897  00048A  B4D8               	btfsc	status,2,c
  7898  00048C  D6F0               	goto	i2l3177
  7899  00048E                     i2l299:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;my_i2c.c: 230: }
  7903                           ;my_i2c.c: 233: if (data_read || data_written) {
  7904  00048E  0100               	movlb	0	; () banked
  7905  000490  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7906  000492  D004               	goto	i2l333
  7907                           
  7908                           ; BSR set to: 0
  7909  000494  0100               	movlb	0	; () banked
  7910  000496  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  7911  000498  B4D8               	btfsc	status,2,c
  7912  00049A  D002               	goto	i2l3233
  7913  00049C                     i2l333:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7917  00049C  A8C6               	btfss	4038,4,c	;volatile
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7921  00049E  88C6               	bsf	4038,4,c	;volatile
  7922  0004A0                     i2l3233:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 237: }
  7926                           ;my_i2c.c: 238: }
  7927                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7928  0004A0  0100               	movlb	0	; () banked
  7929  0004A2  EE20 F00A          	lfsr	2,10
  7930  0004A6  0100               	movlb	0	; () banked
  7931  0004A8  51D3               	movf	_ic_ptr& (0+255),w,b
  7932  0004AA  26D9               	addwf	fsr2l,f,c
  7933  0004AC  0100               	movlb	0	; () banked
  7934  0004AE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7935  0004B0  22DA               	addwfc	fsr2h,f,c
  7936  0004B2  0E08               	movlw	8
  7937  0004B4  64DF               	cpfsgt	indf2,c
  7938  0004B6  D023               	goto	i2l3239
  7939                           
  7940                           ; BSR set to: 0
  7941  0004B8  0100               	movlb	0	; () banked
  7942  0004BA  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7943  0004BC  D020               	goto	i2l3239
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7947  0004BE  0100               	movlb	0	; () banked
  7948  0004C0  EE20 F00C          	lfsr	2,12
  7949  0004C4  0100               	movlb	0	; () banked
  7950  0004C6  51D3               	movf	_ic_ptr& (0+255),w,b
  7951  0004C8  26D9               	addwf	fsr2l,f,c
  7952  0004CA  0100               	movlb	0	; () banked
  7953  0004CC  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7954  0004CE  22DA               	addwfc	fsr2h,f,c
  7955  0004D0  0E05               	movlw	5
  7956  0004D2  6EDF               	movwf	indf2,c
  7957                           
  7958                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7959  0004D4  0100               	movlb	0	; () banked
  7960  0004D6  EE20 F00E          	lfsr	2,14
  7961  0004DA  0100               	movlb	0	; () banked
  7962  0004DC  51D3               	movf	_ic_ptr& (0+255),w,b
  7963  0004DE  26D9               	addwf	fsr2l,f,c
  7964  0004E0  0100               	movlb	0	; () banked
  7965  0004E2  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7966  0004E4  22DA               	addwfc	fsr2h,f,c
  7967  0004E6  2ADF               	incf	indf2,f,c
  7968                           
  7969                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7970  0004E8  0100               	movlb	0	; () banked
  7971  0004EA  EE20 F00D          	lfsr	2,13
  7972  0004EE  0100               	movlb	0	; () banked
  7973  0004F0  51D3               	movf	_ic_ptr& (0+255),w,b
  7974  0004F2  26D9               	addwf	fsr2l,f,c
  7975  0004F4  0100               	movlb	0	; () banked
  7976  0004F6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  0004F8  22DA               	addwfc	fsr2h,f,c
  7978  0004FA  0E07               	movlw	7
  7979  0004FC  6EDF               	movwf	indf2,c
  7980  0004FE                     i2l3239:
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;my_i2c.c: 245: }
  7984                           ;my_i2c.c: 247: if (msg_ready) {
  7985  0004FE  0100               	movlb	0	; () banked
  7986  000500  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7987  000502  B4D8               	btfsc	status,2,c
  7988  000504  D03E               	goto	i2l3247
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7992  000506  0100               	movlb	0	; () banked
  7993  000508  EE20 F00B          	lfsr	2,11
  7994  00050C  0100               	movlb	0	; () banked
  7995  00050E  51D3               	movf	_ic_ptr& (0+255),w,b
  7996  000510  26D9               	addwf	fsr2l,f,c
  7997  000512  0100               	movlb	0	; () banked
  7998  000514  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  7999  000516  22DA               	addwfc	fsr2h,f,c
  8000  000518  0100               	movlb	0	; () banked
  8001  00051A  EE10 F00A          	lfsr	1,10
  8002  00051E  0100               	movlb	0	; () banked
  8003  000520  51D3               	movf	_ic_ptr& (0+255),w,b
  8004  000522  26E1               	addwf	fsr1l,f,c
  8005  000524  0100               	movlb	0	; () banked
  8006  000526  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8007  000528  22E2               	addwfc	fsr1h,f,c
  8008  00052A  50E7               	movf	indf1,w,c
  8009  00052C  0100               	movlb	0	; () banked
  8010  00052E  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8011  000530  0100               	movlb	0	; () banked
  8012  000532  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8013  000534  0D01               	mullw	1
  8014  000536  50F3               	movf	prodl,w,c
  8015  000538  0100               	movlb	0	; () banked
  8016  00053A  25D3               	addwf	_ic_ptr& (0+255),w,b
  8017  00053C  6EE1               	movwf	fsr1l,c
  8018  00053E  50F4               	movf	prodh,w,c
  8019  000540  0100               	movlb	0	; () banked
  8020  000542  21D4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8021  000544  6EE2               	movwf	fsr1h,c
  8022  000546  CFDF FFE7          	movff	indf2,indf1
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8026  00054A  0E28               	movlw	40
  8027  00054C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8028  00054E  0100               	movlb	0	; () banked
  8029  000550  C0D4  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8030  000554  0100               	movlb	0	; () banked
  8031  000556  C0D3  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8032  00055A  0100               	movlb	0	; () banked
  8033  00055C  EE20 F00A          	lfsr	2,10
  8034  000560  0100               	movlb	0	; () banked
  8035  000562  51D3               	movf	_ic_ptr& (0+255),w,b
  8036  000564  26D9               	addwf	fsr2l,f,c
  8037  000566  0100               	movlb	0	; () banked
  8038  000568  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8039  00056A  22DA               	addwfc	fsr2h,f,c
  8040  00056C  50DF               	movf	indf2,w,c
  8041  00056E  0100               	movlb	0	; () banked
  8042  000570  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8043  000572  0100               	movlb	0	; () banked
  8044  000574  2985               	incf	??_i2c_int_handler& (0+255),w,b
  8045  000576  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8046                           
  8047                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8048  00057A  0100               	movlb	0	; () banked
  8049  00057C  EE20 F00A          	lfsr	2,10
  8050  000580  D03E               	goto	L9
  8051  000582                     i2l3247:
  8052                           
  8053                           ; BSR set to: 0
  8054  000582  0100               	movlb	0	; () banked
  8055  000584  EE20 F00E          	lfsr	2,14
  8056  000588  0100               	movlb	0	; () banked
  8057  00058A  51D3               	movf	_ic_ptr& (0+255),w,b
  8058  00058C  26D9               	addwf	fsr2l,f,c
  8059  00058E  0100               	movlb	0	; () banked
  8060  000590  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8061  000592  22DA               	addwfc	fsr2h,f,c
  8062  000594  50DF               	movf	indf2,w,c
  8063  000596  B4D8               	btfsc	status,2,c
  8064  000598  D03A               	goto	i2l3255
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8068  00059A  0100               	movlb	0	; () banked
  8069  00059C  EE20 F00E          	lfsr	2,14
  8070  0005A0  0100               	movlb	0	; () banked
  8071  0005A2  51D3               	movf	_ic_ptr& (0+255),w,b
  8072  0005A4  26D9               	addwf	fsr2l,f,c
  8073  0005A6  0100               	movlb	0	; () banked
  8074  0005A8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8075  0005AA  22DA               	addwfc	fsr2h,f,c
  8076  0005AC  50DF               	movf	indf2,w,c
  8077  0005AE  0100               	movlb	0	; () banked
  8078  0005B0  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  8079                           
  8080                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8081  0005B2  0100               	movlb	0	; () banked
  8082  0005B4  EE20 F00D          	lfsr	2,13
  8083  0005B8  0100               	movlb	0	; () banked
  8084  0005BA  51D3               	movf	_ic_ptr& (0+255),w,b
  8085  0005BC  26D9               	addwf	fsr2l,f,c
  8086  0005BE  0100               	movlb	0	; () banked
  8087  0005C0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8088  0005C2  22DA               	addwfc	fsr2h,f,c
  8089  0005C4  50DF               	movf	indf2,w,c
  8090  0005C6  0100               	movlb	0	; () banked
  8091  0005C8  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8092                           
  8093                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8094  0005CA  0100               	movlb	0	; () banked
  8095  0005CC  EE20 F00B          	lfsr	2,11
  8096  0005D0  0100               	movlb	0	; () banked
  8097  0005D2  51D3               	movf	_ic_ptr& (0+255),w,b
  8098  0005D4  26D9               	addwf	fsr2l,f,c
  8099  0005D6  0100               	movlb	0	; () banked
  8100  0005D8  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8101  0005DA  22DA               	addwfc	fsr2h,f,c
  8102  0005DC  50DF               	movf	indf2,w,c
  8103  0005DE  0100               	movlb	0	; () banked
  8104  0005E0  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8108  0005E2  0E29               	movlw	41
  8109  0005E4  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8110  0005E6  0100               	movlb	0	; () banked
  8111  0005E8  0E00               	movlw	high i2c_int_handler@error_buf
  8112  0005EA  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  8113  0005EC  0100               	movlb	0	; () banked
  8114  0005EE  0E86               	movlw	low i2c_int_handler@error_buf
  8115  0005F0  6E46               	movwf	ToMainHigh_sendmsg@data,c
  8116  0005F2  0E03               	movlw	3
  8117  0005F4  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8118                           
  8119                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8120  0005F8  0100               	movlb	0	; () banked
  8121  0005FA  EE20 F00E          	lfsr	2,14
  8122  0005FE                     L9:
  8123  0005FE  0100               	movlb	0	; () banked
  8124  000600  51D3               	movf	_ic_ptr& (0+255),w,b
  8125  000602  26D9               	addwf	fsr2l,f,c
  8126  000604  0100               	movlb	0	; () banked
  8127  000606  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8128  000608  22DA               	addwfc	fsr2h,f,c
  8129  00060A  0E00               	movlw	0
  8130  00060C  6EDF               	movwf	indf2,c
  8131  00060E                     i2l3255:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;my_i2c.c: 257: }
  8135                           ;my_i2c.c: 258: if (msg_to_send) {
  8136  00060E  0100               	movlb	0	; () banked
  8137  000610  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8138  000612  B4D8               	btfsc	status,2,c
  8139  000614  0012               	return	
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8143  000616  0E2A               	movlw	42
  8144  000618  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8145  00061A  0100               	movlb	0	; () banked
  8146  00061C  C0D4  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8147  000620  0100               	movlb	0	; () banked
  8148  000622  C0D3  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8149  000626  0E00               	movlw	0
  8150  000628  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8151                           
  8152                           ;my_i2c.c: 261: msg_to_send = 0;
  8153  00062C  0E00               	movlw	0
  8154  00062E  0100               	movlb	0	; () banked
  8155  000630  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8156  000632  0012               	return	
  8157  000634                     __end_of_i2c_int_handler:
  8158                           	opt stack 0
  8159                           pclatu	equ	0xFFB
  8160                           pclath	equ	0xFFA
  8161                           tblptru	equ	0xFF8
  8162                           tblptrh	equ	0xFF7
  8163                           tblptrl	equ	0xFF6
  8164                           tablat	equ	0xFF5
  8165                           prodh	equ	0xFF4
  8166                           prodl	equ	0xFF3
  8167                           intcon	equ	0xFF2
  8168                           intcon2	equ	0xFF1
  8169                           postinc0	equ	0xFEE
  8170                           fsr0h	equ	0xFEA
  8171                           fsr0l	equ	0xFE9
  8172                           wreg	equ	0xFE8
  8173                           indf1	equ	0xFE7
  8174                           postdec1	equ	0xFE5
  8175                           fsr1h	equ	0xFE2
  8176                           fsr1l	equ	0xFE1
  8177                           bsr	equ	0xFE0
  8178                           indf2	equ	0xFDF
  8179                           postinc2	equ	0xFDE
  8180                           postdec2	equ	0xFDD
  8181                           fsr2h	equ	0xFDA
  8182                           fsr2l	equ	0xFD9
  8183                           status	equ	0xFD8
  8184                           
  8185 ;; *************** function _handle_start *****************
  8186 ;; Defined at:
  8187 ;;		line 71 in file "src/my_i2c.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  data_read       1    wreg     unsigned char 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  data_read       1   51[COMRAM] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;		None               void
  8194 ;; Registers used:
  8195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8201 ;;      Params:         0       0       0       0       0
  8202 ;;      Locals:         1       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0
  8204 ;;      Totals:         1       0       0       0       0
  8205 ;;Total ram usage:        1 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_i2c_int_handler
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text46
  8215  000F5A                     __ptext46:
  8216                           	opt stack 0
  8217  000F5A                     _handle_start:
  8218                           	opt stack 18
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;incstack = 0
  8222                           ;handle_start@data_read stored from wreg
  8223  000F5A  6E34               	movwf	handle_start@data_read,c
  8224                           
  8225                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8226  000F5C  0100               	movlb	0	; () banked
  8227  000F5E  EE20 F00B          	lfsr	2,11
  8228  000F62  0100               	movlb	0	; () banked
  8229  000F64  51D3               	movf	_ic_ptr& (0+255),w,b
  8230  000F66  26D9               	addwf	fsr2l,f,c
  8231  000F68  0100               	movlb	0	; () banked
  8232  000F6A  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8233  000F6C  22DA               	addwfc	fsr2h,f,c
  8234  000F6E  0E01               	movlw	1
  8235  000F70  6EDF               	movwf	indf2,c
  8236                           
  8237                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8238  000F72  0100               	movlb	0	; () banked
  8239  000F74  EE20 F00A          	lfsr	2,10
  8240  000F78  0100               	movlb	0	; () banked
  8241  000F7A  51D3               	movf	_ic_ptr& (0+255),w,b
  8242  000F7C  26D9               	addwf	fsr2l,f,c
  8243  000F7E  0100               	movlb	0	; () banked
  8244  000F80  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8245  000F82  22DA               	addwfc	fsr2h,f,c
  8246  000F84  0E00               	movlw	0
  8247  000F86  6EDF               	movwf	indf2,c
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;my_i2c.c: 75: if (data_read) {
  8251  000F88  5034               	movf	handle_start@data_read,w,c
  8252  000F8A  B4D8               	btfsc	status,2,c
  8253  000F8C  D03D               	goto	i2l2387
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8257  000F8E  AAC7               	btfss	4039,5,c	;volatile
  8258  000F90  D021               	goto	i2l289
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8262  000F92  0100               	movlb	0	; () banked
  8263  000F94  EE20 F00C          	lfsr	2,12
  8264  000F98  0100               	movlb	0	; () banked
  8265  000F9A  51D3               	movf	_ic_ptr& (0+255),w,b
  8266  000F9C  26D9               	addwf	fsr2l,f,c
  8267  000F9E  0100               	movlb	0	; () banked
  8268  000FA0  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8269  000FA2  22DA               	addwfc	fsr2h,f,c
  8270  000FA4  0E05               	movlw	5
  8271  000FA6  6EDF               	movwf	indf2,c
  8272                           
  8273                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8274  000FA8  0100               	movlb	0	; () banked
  8275  000FAA  EE20 F00E          	lfsr	2,14
  8276  000FAE  0100               	movlb	0	; () banked
  8277  000FB0  51D3               	movf	_ic_ptr& (0+255),w,b
  8278  000FB2  26D9               	addwf	fsr2l,f,c
  8279  000FB4  0100               	movlb	0	; () banked
  8280  000FB6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8281  000FB8  22DA               	addwfc	fsr2h,f,c
  8282  000FBA  2ADF               	incf	indf2,f,c
  8283                           
  8284                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8285  000FBC  0100               	movlb	0	; () banked
  8286  000FBE  EE20 F00D          	lfsr	2,13
  8287  000FC2  0100               	movlb	0	; () banked
  8288  000FC4  51D3               	movf	_ic_ptr& (0+255),w,b
  8289  000FC6  26D9               	addwf	fsr2l,f,c
  8290  000FC8  0100               	movlb	0	; () banked
  8291  000FCA  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8292  000FCC  22DA               	addwfc	fsr2h,f,c
  8293  000FCE  0E05               	movlw	5
  8294  000FD0  6EDF               	movwf	indf2,c
  8295                           
  8296                           ;my_i2c.c: 82: } else {
  8297  000FD2  0012               	return	
  8298  000FD4                     i2l289:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8302  000FD4  A4C7               	btfss	4039,2,c	;volatile
  8303  000FD6  D00C               	goto	i2l2385
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8307  000FD8  0100               	movlb	0	; () banked
  8308  000FDA  EE20 F00C          	lfsr	2,12
  8309  000FDE  0100               	movlb	0	; () banked
  8310  000FE0  51D3               	movf	_ic_ptr& (0+255),w,b
  8311  000FE2  26D9               	addwf	fsr2l,f,c
  8312  000FE4  0100               	movlb	0	; () banked
  8313  000FE6  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8314  000FE8  22DA               	addwfc	fsr2h,f,c
  8315  000FEA  0E08               	movlw	8
  8316  000FEC  6EDF               	movwf	indf2,c
  8317                           
  8318                           ;my_i2c.c: 85: } else {
  8319  000FEE  0012               	return	
  8320  000FF0                     i2l2385:
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8324  000FF0  0100               	movlb	0	; () banked
  8325  000FF2  EE20 F00C          	lfsr	2,12
  8326  000FF6  0100               	movlb	0	; () banked
  8327  000FF8  51D3               	movf	_ic_ptr& (0+255),w,b
  8328  000FFA  26D9               	addwf	fsr2l,f,c
  8329  000FFC  0100               	movlb	0	; () banked
  8330  000FFE  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8331  001000  22DA               	addwfc	fsr2h,f,c
  8332  001002  0E07               	movlw	7
  8333  001004  6EDF               	movwf	indf2,c
  8334  001006  0012               	return	
  8335  001008                     i2l2387:
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8339  001008  0100               	movlb	0	; () banked
  8340  00100A  EE20 F00C          	lfsr	2,12
  8341  00100E  0100               	movlb	0	; () banked
  8342  001010  51D3               	movf	_ic_ptr& (0+255),w,b
  8343  001012  26D9               	addwf	fsr2l,f,c
  8344  001014  0100               	movlb	0	; () banked
  8345  001016  51D4               	movf	(_ic_ptr+1)& (0+255),w,b
  8346  001018  22DA               	addwfc	fsr2h,f,c
  8347  00101A  0E06               	movlw	6
  8348  00101C  6EDF               	movwf	indf2,c
  8349  00101E  0012               	return	
  8350  001020                     __end_of_handle_start:
  8351                           	opt stack 0
  8352                           pclatu	equ	0xFFB
  8353                           pclath	equ	0xFFA
  8354                           tblptru	equ	0xFF8
  8355                           tblptrh	equ	0xFF7
  8356                           tblptrl	equ	0xFF6
  8357                           tablat	equ	0xFF5
  8358                           prodh	equ	0xFF4
  8359                           prodl	equ	0xFF3
  8360                           intcon	equ	0xFF2
  8361                           intcon2	equ	0xFF1
  8362                           postinc0	equ	0xFEE
  8363                           fsr0h	equ	0xFEA
  8364                           fsr0l	equ	0xFE9
  8365                           wreg	equ	0xFE8
  8366                           indf1	equ	0xFE7
  8367                           postdec1	equ	0xFE5
  8368                           fsr1h	equ	0xFE2
  8369                           fsr1l	equ	0xFE1
  8370                           bsr	equ	0xFE0
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function _ToMainHigh_sendmsg *****************
  8379 ;; Defined at:
  8380 ;;		line 126 in file "src/messages.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  length          1    wreg     unsigned char 
  8383 ;;  msgtype         1   68[COMRAM] unsigned char 
  8384 ;;  data            2   69[COMRAM] PTR void 
  8385 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  length          1   71[COMRAM] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      char 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8397 ;;      Params:         3       0       0       0       0
  8398 ;;      Locals:         1       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0
  8400 ;;      Totals:         4       0       0       0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    2
  8404 ;; This function calls:
  8405 ;;		i2_send_msg
  8406 ;; This function is called by:
  8407 ;;		_i2c_int_handler
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text47
  8412  001BC6                     __ptext47:
  8413                           	opt stack 0
  8414  001BC6                     _ToMainHigh_sendmsg:
  8415                           	opt stack 16
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;incstack = 0
  8419                           ;ToMainHigh_sendmsg@length stored from wreg
  8420  001BC6  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8421                           
  8422                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8423                           ;	Return value of _ToMainHigh_sendmsg is never used
  8424  001BC8  0101               	movlb	1	; () banked
  8425  001BCA  0E01               	movlw	high _ToMainHigh_MQ
  8426  001BCC  6E3F               	movwf	i2send_msg@qptr+1,c
  8427  001BCE  0101               	movlb	1	; () banked
  8428  001BD0  0E6E               	movlw	low _ToMainHigh_MQ
  8429  001BD2  6E3E               	movwf	i2send_msg@qptr,c
  8430  001BD4  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8431  001BD8  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8432  001BDC  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8433  001BE0  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8434  001BE4  EC10  F008         	call	i2_send_msg	;wreg free
  8435  001BE8  0012               	return	
  8436  001BEA                     __end_of_ToMainHigh_sendmsg:
  8437                           	opt stack 0
  8438                           pclatu	equ	0xFFB
  8439                           pclath	equ	0xFFA
  8440                           tblptru	equ	0xFF8
  8441                           tblptrh	equ	0xFF7
  8442                           tblptrl	equ	0xFF6
  8443                           tablat	equ	0xFF5
  8444                           prodh	equ	0xFF4
  8445                           prodl	equ	0xFF3
  8446                           intcon	equ	0xFF2
  8447                           intcon2	equ	0xFF1
  8448                           postinc0	equ	0xFEE
  8449                           fsr0h	equ	0xFEA
  8450                           fsr0l	equ	0xFE9
  8451                           wreg	equ	0xFE8
  8452                           indf1	equ	0xFE7
  8453                           postdec1	equ	0xFE5
  8454                           fsr1h	equ	0xFE2
  8455                           fsr1l	equ	0xFE1
  8456                           bsr	equ	0xFE0
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           fsr2h	equ	0xFDA
  8461                           fsr2l	equ	0xFD9
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function i2_send_msg *****************
  8465 ;; Defined at:
  8466 ;;		line 24 in file "src/messages.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8469 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8470 ;;  length          1   63[COMRAM] unsigned char 
  8471 ;;  msgtype         1   64[COMRAM] unsigned char 
  8472 ;;  data            2   65[COMRAM] PTR void 
  8473 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  8474 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), 
  8475 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8478 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8479 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8480 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8481 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      char 
  8484 ;; Registers used:
  8485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8491 ;;      Params:         6       0       0       0       0
  8492 ;;      Locals:         0       5       0       0       0
  8493 ;;      Temps:          1       0       0       0       0
  8494 ;;      Totals:         7       5       0       0       0
  8495 ;;Total ram usage:       12 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    1
  8498 ;; This function calls:
  8499 ;;		i2_memcpy
  8500 ;; This function is called by:
  8501 ;;		_ToMainHigh_sendmsg
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text48
  8506  001020                     __ptext48:
  8507                           	opt stack 0
  8508  001020                     i2_send_msg:
  8509                           	opt stack 16
  8510                           
  8511                           ;messages.c: 25: unsigned char slot;
  8512                           ;messages.c: 27: msg *qmsg;
  8513                           ;messages.c: 28: size_t tlength = length;
  8514                           
  8515                           ;incstack = 0
  8516  001020  0100               	movlb	0	; () banked
  8517  001022  C040  F080         	movff	i2send_msg@length,i2send_msg@tlength
  8518  001026  0100               	movlb	0	; () banked
  8519  001028  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8523  00102A  EE20 F034          	lfsr	2,52
  8524  00102E  503E               	movf	i2send_msg@qptr,w,c
  8525  001030  26D9               	addwf	fsr2l,f,c
  8526  001032  503F               	movf	i2send_msg@qptr+1,w,c
  8527  001034  22DA               	addwfc	fsr2h,f,c
  8528  001036  50DF               	movf	indf2,w,c
  8529  001038  0100               	movlb	0	; () banked
  8530  00103A  6F82               	movwf	i2send_msg@slot& (0+255),b
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8534  00103C  0100               	movlb	0	; () banked
  8535  00103E  5182               	movf	i2send_msg@slot& (0+255),w,b
  8536  001040  0D0D               	mullw	13
  8537  001042  50F3               	movf	prodl,w,c
  8538  001044  243E               	addwf	i2send_msg@qptr,w,c
  8539  001046  0100               	movlb	0	; () banked
  8540  001048  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  8541  00104A  50F4               	movf	prodh,w,c
  8542  00104C  203F               	addwfc	i2send_msg@qptr+1,w,c
  8543  00104E  0100               	movlb	0	; () banked
  8544  001050  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;messages.c: 41: if (qmsg->full != 0) {
  8548  001052  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8549  001056  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8550  00105A  50DF               	movf	indf2,w,c
  8551  00105C  B4D8               	btfsc	status,2,c
  8552  00105E  D002               	goto	i2l3103
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;messages.c: 42: return (-1);
  8556  001060  0EFF               	movlw	255
  8557  001062  0012               	return	
  8558  001064                     i2l3103:
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;messages.c: 43: }
  8562                           ;messages.c: 46: qmsg->length = length;
  8563  001064  0100               	movlb	0	; () banked
  8564  001066  EE20 F001          	lfsr	2,1
  8565  00106A  0100               	movlb	0	; () banked
  8566  00106C  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8567  00106E  26D9               	addwf	fsr2l,f,c
  8568  001070  0100               	movlb	0	; () banked
  8569  001072  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8570  001074  22DA               	addwfc	fsr2h,f,c
  8571  001076  C040  FFDF         	movff	i2send_msg@length,indf2
  8572                           
  8573                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8574  00107A  0100               	movlb	0	; () banked
  8575  00107C  EE20 F002          	lfsr	2,2
  8576  001080  0100               	movlb	0	; () banked
  8577  001082  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8578  001084  26D9               	addwf	fsr2l,f,c
  8579  001086  0100               	movlb	0	; () banked
  8580  001088  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8581  00108A  22DA               	addwfc	fsr2h,f,c
  8582  00108C  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8586  001090  0E03               	movlw	3
  8587  001092  0100               	movlb	0	; () banked
  8588  001094  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  8589  001096  6E34               	movwf	i2memcpy@d1,c
  8590  001098  0E00               	movlw	0
  8591  00109A  0100               	movlb	0	; () banked
  8592  00109C  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8593  00109E  6E35               	movwf	i2memcpy@d1+1,c
  8594  0010A0  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8595  0010A4  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8596  0010A8  C080  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8597  0010AC  C081  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8598  0010B0  EC89  F00C         	call	i2_memcpy	;wreg free
  8599                           
  8600                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8601  0010B4  EE20 F034          	lfsr	2,52
  8602  0010B8  503E               	movf	i2send_msg@qptr,w,c
  8603  0010BA  26D9               	addwf	fsr2l,f,c
  8604  0010BC  503F               	movf	i2send_msg@qptr+1,w,c
  8605  0010BE  22DA               	addwfc	fsr2h,f,c
  8606  0010C0  EE10 F034          	lfsr	1,52
  8607  0010C4  503E               	movf	i2send_msg@qptr,w,c
  8608  0010C6  26E1               	addwf	fsr1l,f,c
  8609  0010C8  503F               	movf	i2send_msg@qptr+1,w,c
  8610  0010CA  22E2               	addwfc	fsr1h,f,c
  8611  0010CC  50E7               	movf	indf1,w,c
  8612  0010CE  6E44               	movwf	??i2_send_msg& (0+255),c
  8613  0010D0  2844               	incf	??i2_send_msg,w,c
  8614  0010D2  0B03               	andlw	3
  8615  0010D4  6EDF               	movwf	indf2,c
  8616                           
  8617                           ;messages.c: 59: qmsg->full = 1;
  8618  0010D6  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8619  0010DA  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8620  0010DE  0E01               	movlw	1
  8621  0010E0  6EDF               	movwf	indf2,c
  8622                           
  8623                           ;messages.c: 60: return (1);
  8624  0010E2  0E01               	movlw	1
  8625  0010E4  0012               	return	
  8626  0010E6                     __end_ofi2_send_msg:
  8627                           	opt stack 0
  8628                           pclatu	equ	0xFFB
  8629                           pclath	equ	0xFFA
  8630                           tblptru	equ	0xFF8
  8631                           tblptrh	equ	0xFF7
  8632                           tblptrl	equ	0xFF6
  8633                           tablat	equ	0xFF5
  8634                           prodh	equ	0xFF4
  8635                           prodl	equ	0xFF3
  8636                           intcon	equ	0xFF2
  8637                           intcon2	equ	0xFF1
  8638                           postinc0	equ	0xFEE
  8639                           fsr0h	equ	0xFEA
  8640                           fsr0l	equ	0xFE9
  8641                           wreg	equ	0xFE8
  8642                           indf1	equ	0xFE7
  8643                           postdec1	equ	0xFE5
  8644                           fsr1h	equ	0xFE2
  8645                           fsr1l	equ	0xFE1
  8646                           bsr	equ	0xFE0
  8647                           indf2	equ	0xFDF
  8648                           postinc2	equ	0xFDE
  8649                           postdec2	equ	0xFDD
  8650                           fsr2h	equ	0xFDA
  8651                           fsr2l	equ	0xFD9
  8652                           status	equ	0xFD8
  8653                           
  8654 ;; *************** function i2_memcpy *****************
  8655 ;; Defined at:
  8656 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  d1              2   51[COMRAM] PTR void 
  8659 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8660 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8661 ;;		 -> main@msgbuffer(11), NULL(0), 
  8662 ;;  s1              2   53[COMRAM] PTR const void 
  8663 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8664 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8665 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  8666 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8667 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  8668 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  8669 ;;  n               2   55[COMRAM] unsigned int 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8672 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8673 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8674 ;;		 -> moveDir@test(2), timer1_lthread@temp_1753(2), timer1_lthread@temp(2), timer0_lthread@temp(2), 
  8675 ;;		 -> sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8676 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), 
  8677 ;;		 -> main@ic(28), main@uc(5), NULL(0), 
  8678 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8679 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8680 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8681 ;;		 -> main@msgbuffer(11), NULL(0), 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  2   51[COMRAM] PTR void 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8691 ;;      Params:         6       0       0       0       0
  8692 ;;      Locals:         4       0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0
  8694 ;;      Totals:        10       0       0       0       0
  8695 ;;Total ram usage:       10 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		i2_send_msg
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text49
  8705  001912                     __ptext49:
  8706                           	opt stack 0
  8707  001912                     i2_memcpy:
  8708                           	opt stack 16
  8709                           
  8710                           ;incstack = 0
  8711  001912  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8712  001916  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8713  00191A  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8714  00191E  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8715  001922  D00E               	goto	i2l3089
  8716  001924                     i2l3083:
  8717  001924  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8718  001928  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8719  00192C  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8720  001930  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8721  001934  CFDF FFE7          	movff	indf2,indf1
  8722  001938  4A3C               	infsnz	i2memcpy@s,f,c
  8723  00193A  2A3D               	incf	i2memcpy@s+1,f,c
  8724  00193C  4A3A               	infsnz	i2memcpy@d,f,c
  8725  00193E  2A3B               	incf	i2memcpy@d+1,f,c
  8726  001940                     i2l3089:
  8727  001940  0638               	decf	i2memcpy@n,f,c
  8728  001942  A0D8               	btfss	status,0,c
  8729  001944  0639               	decf	i2memcpy@n+1,f,c
  8730  001946  2838               	incf	i2memcpy@n& (0+255),w,c
  8731  001948  B4D8               	btfsc	status,2,c
  8732  00194A  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8733  00194C  B4D8               	btfsc	status,2,c
  8734                           
  8735                           ;	Return value of i2_memcpy is never used
  8736  00194E  0012               	return	
  8737  001950  D7E9               	goto	i2l3083
  8738  001952                     __end_ofi2_memcpy:
  8739                           	opt stack 0
  8740                           pclatu	equ	0xFFB
  8741                           pclath	equ	0xFFA
  8742                           tblptru	equ	0xFF8
  8743                           tblptrh	equ	0xFF7
  8744                           tblptrl	equ	0xFF6
  8745                           tablat	equ	0xFF5
  8746                           prodh	equ	0xFF4
  8747                           prodl	equ	0xFF3
  8748                           intcon	equ	0xFF2
  8749                           intcon2	equ	0xFF1
  8750                           postinc0	equ	0xFEE
  8751                           fsr0h	equ	0xFEA
  8752                           fsr0l	equ	0xFE9
  8753                           wreg	equ	0xFE8
  8754                           indf1	equ	0xFE7
  8755                           postdec1	equ	0xFE5
  8756                           fsr1h	equ	0xFE2
  8757                           fsr1l	equ	0xFE1
  8758                           bsr	equ	0xFE0
  8759                           indf2	equ	0xFDF
  8760                           postinc2	equ	0xFDE
  8761                           postdec2	equ	0xFDD
  8762                           fsr2h	equ	0xFDA
  8763                           fsr2l	equ	0xFD9
  8764                           status	equ	0xFD8
  8765                           
  8766 ;; *************** function _SleepIfOkay *****************
  8767 ;; Defined at:
  8768 ;;		line 226 in file "src/messages.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;		None
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;		None               void
  8775 ;; Registers used:
  8776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8782 ;;      Params:         0       0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0
  8785 ;;      Totals:         0       0       0       0       0
  8786 ;;Total ram usage:        0 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    2
  8789 ;; This function calls:
  8790 ;;		_enter_sleep_mode
  8791 ;;		i2_check_msg
  8792 ;;		i2_in_high_int
  8793 ;;		i2_in_low_int
  8794 ;; This function is called by:
  8795 ;;		_InterruptHandlerHigh
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text50
  8800  001884                     __ptext50:
  8801                           	opt stack 0
  8802  001884                     _SleepIfOkay:
  8803                           	opt stack 17
  8804                           
  8805                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8806                           
  8807                           ;incstack = 0
  8808  001884  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8809  001886  D001               	goto	i2l2635
  8810  001888  0012               	return	
  8811  00188A                     i2l2635:
  8812                           
  8813                           ;messages.c: 230: }
  8814                           ;messages.c: 233: if (in_low_int()) {
  8815  00188A  EC93  F00D         	call	i2_in_low_int	;wreg free
  8816  00188E  5037               	movf	?i2_in_low_int+1,w,c
  8817  001890  1036               	iorwf	?i2_in_low_int,w,c
  8818  001892  A4D8               	btfss	status,2,c
  8819  001894  0012               	return	
  8820                           
  8821                           ;messages.c: 235: }
  8822                           ;messages.c: 238: if (!in_high_int()) {
  8823                           
  8824                           ;messages.c: 234: return;
  8825  001896  EC4E  F00E         	call	i2_in_high_int	;wreg free
  8826  00189A  5035               	movf	?i2_in_high_int+1,w,c
  8827  00189C  1034               	iorwf	?i2_in_high_int,w,c
  8828  00189E  B4D8               	btfsc	status,2,c
  8829  0018A0  0012               	return	
  8830                           
  8831                           ;messages.c: 240: }
  8832                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8833                           
  8834                           ;messages.c: 239: return;
  8835  0018A2  0101               	movlb	1	; () banked
  8836  0018A4  0E01               	movlw	high _ToMainHigh_MQ
  8837  0018A6  6E35               	movwf	i2check_msg@qptr+1,c
  8838  0018A8  0101               	movlb	1	; () banked
  8839  0018AA  0E6E               	movlw	low _ToMainHigh_MQ
  8840  0018AC  6E34               	movwf	i2check_msg@qptr,c
  8841  0018AE  ECF5  F00D         	call	i2_check_msg	;wreg free
  8842  0018B2  0900               	iorlw	0
  8843  0018B4  A4D8               	btfss	status,2,c
  8844  0018B6  0012               	return	
  8845                           
  8846                           ;messages.c: 247: }
  8847                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8848                           
  8849                           ;messages.c: 246: return;
  8850  0018B8  0101               	movlb	1	; () banked
  8851  0018BA  0E01               	movlw	high _ToMainLow_MQ
  8852  0018BC  6E35               	movwf	i2check_msg@qptr+1,c
  8853  0018BE  0101               	movlb	1	; () banked
  8854  0018C0  0EA4               	movlw	low _ToMainLow_MQ
  8855  0018C2  6E34               	movwf	i2check_msg@qptr,c
  8856  0018C4  ECF5  F00D         	call	i2_check_msg	;wreg free
  8857  0018C8  0900               	iorlw	0
  8858  0018CA  B4D8               	btfsc	status,2,c
  8859                           
  8860                           ;messages.c: 250: }
  8861                           ;messages.c: 251: enter_sleep_mode();
  8862                           
  8863                           ;messages.c: 249: return;
  8864  0018CC  EC58  F00E         	call	_enter_sleep_mode	;wreg free
  8865  0018D0  0012               	return	
  8866  0018D2                     __end_of_SleepIfOkay:
  8867                           	opt stack 0
  8868                           pclatu	equ	0xFFB
  8869                           pclath	equ	0xFFA
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           intcon2	equ	0xFF1
  8878                           postinc0	equ	0xFEE
  8879                           fsr0h	equ	0xFEA
  8880                           fsr0l	equ	0xFE9
  8881                           wreg	equ	0xFE8
  8882                           indf1	equ	0xFE7
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           bsr	equ	0xFE0
  8887                           indf2	equ	0xFDF
  8888                           postinc2	equ	0xFDE
  8889                           postdec2	equ	0xFDD
  8890                           fsr2h	equ	0xFDA
  8891                           fsr2l	equ	0xFD9
  8892                           status	equ	0xFD8
  8893                           
  8894 ;; *************** function i2_in_low_int *****************
  8895 ;; Defined at:
  8896 ;;		line 30 in file "src/interrupts.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2   53[COMRAM] int 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8910 ;;      Params:         2       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0
  8913 ;;      Totals:         2       0       0       0       0
  8914 ;;Total ram usage:        2 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:    1
  8917 ;; This function calls:
  8918 ;;		i2_in_high_int
  8919 ;; This function is called by:
  8920 ;;		_SleepIfOkay
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text51
  8925  001B26                     __ptext51:
  8926                           	opt stack 0
  8927  001B26                     i2_in_low_int:
  8928                           	opt stack 17
  8929                           
  8930                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8931                           
  8932                           ;incstack = 0
  8933  001B26  ACF2               	btfss	intcon,6,c	;volatile
  8934  001B28  D005               	goto	i2l2467
  8935                           
  8936                           ;interrupts.c: 32: return (0);
  8937  001B2A  0E00               	movlw	0
  8938  001B2C  6E37               	movwf	?i2_in_low_int+1,c
  8939  001B2E  0E00               	movlw	0
  8940  001B30  6E36               	movwf	?i2_in_low_int,c
  8941  001B32  0012               	return	
  8942  001B34                     i2l2467:
  8943  001B34  EC4E  F00E         	call	i2_in_high_int	;wreg free
  8944  001B38  5035               	movf	?i2_in_high_int+1,w,c
  8945  001B3A  1034               	iorwf	?i2_in_high_int,w,c
  8946  001B3C  B4D8               	btfsc	status,2,c
  8947  001B3E  D005               	goto	i2l2475
  8948                           
  8949                           ;interrupts.c: 34: return (0);
  8950  001B40  0E00               	movlw	0
  8951  001B42  6E37               	movwf	?i2_in_low_int+1,c
  8952  001B44  0E00               	movlw	0
  8953  001B46  6E36               	movwf	?i2_in_low_int,c
  8954  001B48  0012               	return	
  8955  001B4A                     i2l2475:
  8956                           
  8957                           ;interrupts.c: 36: return (1);
  8958  001B4A  0E00               	movlw	0
  8959  001B4C  6E37               	movwf	?i2_in_low_int+1,c
  8960  001B4E  0E01               	movlw	1
  8961  001B50  6E36               	movwf	?i2_in_low_int,c
  8962  001B52  0012               	return	
  8963  001B54                     __end_ofi2_in_low_int:
  8964                           	opt stack 0
  8965                           pclatu	equ	0xFFB
  8966                           pclath	equ	0xFFA
  8967                           tblptru	equ	0xFF8
  8968                           tblptrh	equ	0xFF7
  8969                           tblptrl	equ	0xFF6
  8970                           tablat	equ	0xFF5
  8971                           prodh	equ	0xFF4
  8972                           prodl	equ	0xFF3
  8973                           intcon	equ	0xFF2
  8974                           intcon2	equ	0xFF1
  8975                           postinc0	equ	0xFEE
  8976                           fsr0h	equ	0xFEA
  8977                           fsr0l	equ	0xFE9
  8978                           wreg	equ	0xFE8
  8979                           indf1	equ	0xFE7
  8980                           postdec1	equ	0xFE5
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           bsr	equ	0xFE0
  8984                           indf2	equ	0xFDF
  8985                           postinc2	equ	0xFDE
  8986                           postdec2	equ	0xFDD
  8987                           fsr2h	equ	0xFDA
  8988                           fsr2l	equ	0xFD9
  8989                           status	equ	0xFD8
  8990                           
  8991 ;; *************** function i2_in_high_int *****************
  8992 ;; Defined at:
  8993 ;;		line 22 in file "src/interrupts.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2   51[COMRAM] int 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9007 ;;      Params:         2       0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0
  9010 ;;      Totals:         2       0       0       0       0
  9011 ;;Total ram usage:        2 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_SleepIfOkay
  9017 ;;		i2_in_low_int
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text52
  9022  001C9C                     __ptext52:
  9023                           	opt stack 0
  9024  001C9C                     i2_in_high_int:
  9025                           	opt stack 17
  9026                           
  9027                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9028                           
  9029                           ;incstack = 0
  9030  001C9C  0E00               	movlw	0
  9031  001C9E  AEF2               	btfss	intcon,7,c	;volatile
  9032  001CA0  0E01               	movlw	1
  9033  001CA2  6E34               	movwf	?i2_in_high_int,c
  9034  001CA4  6A35               	clrf	?i2_in_high_int+1,c
  9035  001CA6  0012               	return	
  9036  001CA8                     __end_ofi2_in_high_int:
  9037                           	opt stack 0
  9038                           pclatu	equ	0xFFB
  9039                           pclath	equ	0xFFA
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           intcon2	equ	0xFF1
  9048                           postinc0	equ	0xFEE
  9049                           fsr0h	equ	0xFEA
  9050                           fsr0l	equ	0xFE9
  9051                           wreg	equ	0xFE8
  9052                           indf1	equ	0xFE7
  9053                           postdec1	equ	0xFE5
  9054                           fsr1h	equ	0xFE2
  9055                           fsr1l	equ	0xFE1
  9056                           bsr	equ	0xFE0
  9057                           indf2	equ	0xFDF
  9058                           postinc2	equ	0xFDE
  9059                           postdec2	equ	0xFDD
  9060                           fsr2h	equ	0xFDA
  9061                           fsr2l	equ	0xFD9
  9062                           status	equ	0xFD8
  9063                           
  9064 ;; *************** function i2_check_msg *****************
  9065 ;; Defined at:
  9066 ;;		line 220 in file "src/messages.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  9069 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9081 ;;      Params:         2       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          1       0       0       0       0
  9084 ;;      Totals:         3       0       0       0       0
  9085 ;;Total ram usage:        3 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_SleepIfOkay
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text53
  9095  001BEA                     __ptext53:
  9096                           	opt stack 0
  9097  001BEA                     i2_check_msg:
  9098                           	opt stack 18
  9099                           
  9100                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9101                           
  9102                           ;incstack = 0
  9103  001BEA  EE20 F035          	lfsr	2,53
  9104  001BEE  5034               	movf	i2check_msg@qptr,w,c
  9105  001BF0  26D9               	addwf	fsr2l,f,c
  9106  001BF2  5035               	movf	i2check_msg@qptr+1,w,c
  9107  001BF4  22DA               	addwfc	fsr2h,f,c
  9108  001BF6  50DF               	movf	indf2,w,c
  9109  001BF8  6E36               	movwf	??i2_check_msg& (0+255),c
  9110  001BFA  5036               	movf	??i2_check_msg,w,c
  9111  001BFC  0D0D               	mullw	13
  9112  001BFE  50F3               	movf	prodl,w,c
  9113  001C00  2434               	addwf	i2check_msg@qptr,w,c
  9114  001C02  6ED9               	movwf	fsr2l,c
  9115  001C04  50F4               	movf	prodh,w,c
  9116  001C06  2035               	addwfc	i2check_msg@qptr+1,w,c
  9117  001C08  6EDA               	movwf	fsr2h,c
  9118  001C0A  50DF               	movf	indf2,w,c
  9119  001C0C  0012               	return	
  9120  001C0E                     __end_ofi2_check_msg:
  9121                           	opt stack 0
  9122                           pclatu	equ	0xFFB
  9123                           pclath	equ	0xFFA
  9124                           tblptru	equ	0xFF8
  9125                           tblptrh	equ	0xFF7
  9126                           tblptrl	equ	0xFF6
  9127                           tablat	equ	0xFF5
  9128                           prodh	equ	0xFF4
  9129                           prodl	equ	0xFF3
  9130                           intcon	equ	0xFF2
  9131                           intcon2	equ	0xFF1
  9132                           postinc0	equ	0xFEE
  9133                           fsr0h	equ	0xFEA
  9134                           fsr0l	equ	0xFE9
  9135                           wreg	equ	0xFE8
  9136                           indf1	equ	0xFE7
  9137                           postdec1	equ	0xFE5
  9138                           fsr1h	equ	0xFE2
  9139                           fsr1l	equ	0xFE1
  9140                           bsr	equ	0xFE0
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           postdec2	equ	0xFDD
  9144                           fsr2h	equ	0xFDA
  9145                           fsr2l	equ	0xFD9
  9146                           status	equ	0xFD8
  9147                           
  9148 ;; *************** function _enter_sleep_mode *****************
  9149 ;; Defined at:
  9150 ;;		line 202 in file "src/messages.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;		None               void
  9157 ;; Registers used:
  9158 ;;		None
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9164 ;;      Params:         0       0       0       0       0
  9165 ;;      Locals:         0       0       0       0       0
  9166 ;;      Temps:          0       0       0       0       0
  9167 ;;      Totals:         0       0       0       0       0
  9168 ;;Total ram usage:        0 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_SleepIfOkay
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text54
  9178  001CB0                     __ptext54:
  9179                           	opt stack 0
  9180  001CB0                     _enter_sleep_mode:
  9181                           	opt stack 18
  9182                           
  9183                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9184                           
  9185                           ;incstack = 0
  9186  001CB0  8ED3               	bsf	4051,7,c	;volatile
  9187  001CB2  0003               	sleep		;# 
  9188  001CB4  0012               	return	
  9189  001CB6                     __end_of_enter_sleep_mode:
  9190                           	opt stack 0
  9191  0000                     pclatu	equ	0xFFB
  9192                           pclath	equ	0xFFA
  9193                           tblptru	equ	0xFF8
  9194                           tblptrh	equ	0xFF7
  9195                           tblptrl	equ	0xFF6
  9196                           tablat	equ	0xFF5
  9197                           prodh	equ	0xFF4
  9198                           prodl	equ	0xFF3
  9199                           intcon	equ	0xFF2
  9200                           intcon2	equ	0xFF1
  9201                           postinc0	equ	0xFEE
  9202                           fsr0h	equ	0xFEA
  9203                           fsr0l	equ	0xFE9
  9204                           wreg	equ	0xFE8
  9205                           indf1	equ	0xFE7
  9206                           postdec1	equ	0xFE5
  9207                           fsr1h	equ	0xFE2
  9208                           fsr1l	equ	0xFE1
  9209                           bsr	equ	0xFE0
  9210                           indf2	equ	0xFDF
  9211                           postinc2	equ	0xFDE
  9212                           postdec2	equ	0xFDD
  9213                           fsr2h	equ	0xFDA
  9214                           fsr2l	equ	0xFD9
  9215                           status	equ	0xFD8
  9216                           pclatu	equ	0xFFB
  9217                           pclath	equ	0xFFA
  9218                           tblptru	equ	0xFF8
  9219                           tblptrh	equ	0xFF7
  9220                           tblptrl	equ	0xFF6
  9221                           tablat	equ	0xFF5
  9222                           prodh	equ	0xFF4
  9223                           prodl	equ	0xFF3
  9224                           intcon	equ	0xFF2
  9225                           intcon2	equ	0xFF1
  9226                           postinc0	equ	0xFEE
  9227                           fsr0h	equ	0xFEA
  9228                           fsr0l	equ	0xFE9
  9229                           wreg	equ	0xFE8
  9230                           indf1	equ	0xFE7
  9231                           postdec1	equ	0xFE5
  9232                           fsr1h	equ	0xFE2
  9233                           fsr1l	equ	0xFE1
  9234                           bsr	equ	0xFE0
  9235                           indf2	equ	0xFDF
  9236                           postinc2	equ	0xFDE
  9237                           postdec2	equ	0xFDD
  9238                           fsr2h	equ	0xFDA
  9239                           fsr2l	equ	0xFD9
  9240                           status	equ	0xFD8
  9241                           
  9242                           	psect	rparam
  9243  0000                     pclatu	equ	0xFFB
  9244                           pclath	equ	0xFFA
  9245                           tblptru	equ	0xFF8
  9246                           tblptrh	equ	0xFF7
  9247                           tblptrl	equ	0xFF6
  9248                           tablat	equ	0xFF5
  9249                           prodh	equ	0xFF4
  9250                           prodl	equ	0xFF3
  9251                           intcon	equ	0xFF2
  9252                           intcon2	equ	0xFF1
  9253                           postinc0	equ	0xFEE
  9254                           fsr0h	equ	0xFEA
  9255                           fsr0l	equ	0xFE9
  9256                           wreg	equ	0xFE8
  9257                           indf1	equ	0xFE7
  9258                           postdec1	equ	0xFE5
  9259                           fsr1h	equ	0xFE2
  9260                           fsr1l	equ	0xFE1
  9261                           bsr	equ	0xFE0
  9262                           indf2	equ	0xFDF
  9263                           postinc2	equ	0xFDE
  9264                           postdec2	equ	0xFDD
  9265                           fsr2h	equ	0xFDA
  9266                           fsr2l	equ	0xFD9
  9267                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         222
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     75      85
    BANK1           256    110     218
    BANK2           256      0     108
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp_1753(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), 
		 -> sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp_1753(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), 
		 -> sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    moveDir@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 45
		 -> main@t1thread_data(BANK1[45]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 45
		 -> main@t1thread_data(BANK1[45]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 45
		 -> main@t1thread_data(BANK1[45]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 4
		 -> main@t0thread_data(BANK1[4]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 4
		 -> main@t0thread_data(BANK1[4]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp_1753(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), 
		 -> main@ctrl(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp_1753(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), 
		 -> sendUARTbyte@temp(COMRAM[1]), main@ctrl(BANK1[2]), main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp_1753(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), 
		 -> sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), 
		 -> main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _moveDir->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               127   127      0   22322
                                              0 BANK1    110   110      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                            _moveDir
                        _sendUARTarr
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    2541
                                             55 BANK0     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1951
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      16     8      8    3659
                                             59 BANK0     16     8      8
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     263
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      12     4      8    3413
                                             59 BANK0     12     4      8
                            ___awmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     348
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDir                                              6     2      4    3154
                                             59 BANK0      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          4     2      2    2716
                                             55 BANK0      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2307
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1757
                                             39 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     196
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     284
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             39 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    3006
                                             34 COMRAM    17    17      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1113
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0     958
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3     935
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    2146
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2050
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1448
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _moveDir
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _sendUARTarr
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
     ___awmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      6C       8       42.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100     6E      DA       6       85.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4B      55       4       66.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E7      11        0.0%
DATA                 0      0     1E7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Mar 19 08:56:44 2015

               main@uthread_data 010E         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1A02  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1B26  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l141 07EE                              l135 0798  
                            l520 1480                              l521 1482  
                            l522 148E                              l523 1490  
                            l516 1466                              l481 1A96  
                            l482 1A98                              l479 1A80  
                            l764 1C6A             ?_FromMainLow_sendmsg 00B3  
__size_of_uart_trans_int_handler 0056             __size_of_WriteTimer1 0012  
                   ___awmod@sign 00A2                   _FromMainLow_MQ 0236  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 009D                 ??_init_uart_recv 009F  
                           l1070 16D2                             l2125 186E  
                           l2301 1AD8                             l3021 0754  
                           l3013 071E                             l2119 184E  
                           l2143 0D0A                             l3023 079E  
                           l3031 07C0                             l3025 07A8  
                           l3033 07D6                             l2315 1654  
                           l3035 07F4                             l3043 0820  
                           l3027 07B2                             l3051 086C  
                           l2333 0AFA                             l3037 0808  
                           l3045 0836                             l2191 1982  
                           l2183 1964                             l2431 117E  
                           l2423 1148                             l2415 1114  
                           l3063 0926                             l3039 0812  
                           l2425 1154                             l3057 089E  
                           l3049 0850                             l2427 115A  
                           l2435 118C                             l2419 1136  
                           l2451 16A0                             l3059 08E2  
                           l2349 0BB4                             l2293 19BE  
                           l2439 11A0                             l2455 16C4  
                           l2447 168E                             l2449 169A  
                           l2741 1A82                             l2901 0A76  
                           l2921 1220                             l2843 1710  
                           l2837 16F0                             l2925 1240  
                           l2767 1468                             l2759 1456  
                           l2871 0C50                             l2849 1730  
                           l2867 0BD4                             l2883 0954  
                           l2889 09F4                             l2899 0A56  
                           _LATA 000F89                             _LATB 000F8A  
                           u2467 1C6C                             u1975 09D0  
                           i1l59 0088                  _FromMainHigh_MQ 0200  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0E88                             _main 0634  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 0123                       i1_send_msg 1266  
                           pclat 000FFA                      i2_check_msg 1BEA  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0034                             start 00CE  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 1020  
      ToMainHigh_recvmsg@msgtype 00B5                   send_msg@length 00A9  
    __size_of_timer0_int_handler 0002                      _Delay1KTCYx 1C66  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00B6  
                          ?_main 0001                  __end_of___awmod 11AA  
   __size_ofi1_ToMainLow_sendmsg 0024                            _CMCON 000FB4  
                          _T1CON 000FCD            init_uart_lthread@uptr 009D  
                __end_of___lwmod 16DC                       i1memcpy@d1 0001  
                          i1l372 17E0                            i2l301 0152  
                          i1l534 1C3A                            i1l375 17B8  
                          i2l305 0184                            i2l333 049C  
                          i2l327 041E                            i2l319 02FC  
                          i2l289 0FD4                            i2l299 048E  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR1H 000FCF  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
              sendUARTarr@length 00BA                       i2memcpy@d1 0034  
                     i2memcpy@s1 0036                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                sendUARTarr@retval 00B9  
                __end_of_in_main 19CC       ToMainLow_recvmsg@maxlength 00B9  
        timer0_lthread@msgbuffer 00C1                  __end_of_moveDir 15B2  
        i2c_configure_slave@addr 009D                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 178E  
               __end_ofi1_memcpy 1912                 __end_ofi2_memcpy 1952  
                   ?_sendUARTarr 00B7                  __initialization 17E4  
     uart_trans_int_handler@data 001E                     __end_of_main 0944  
   uart_trans_int_handler@length 0022       __size_of_ToMainLow_recvmsg 0036  
     __size_of_ToMainLow_sendmsg 002E            __size_ofi2_in_low_int 002E  
                         ??_main 00CB                  send_msg@msgtype 00AA  
                  __activetblptr 000002                  send_msg@tlength 00AE  
     FromMainLow_sendmsg@msgtype 00B3             __end_of_handle_start 1020  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l2215 129E                           i1l2163 1900  
                         i1l2157 18E4                           i1l2263 0ECE  
                         i1l2279 0F56                           i1l2665 141E  
                         i2l3103 1064                           i1l2687 17D2  
                         i2l3201 03AC                           i1l2961 007E  
                         i1l2955 0074                           i2l3205 03B4  
                         i2l3133 013C                           i2l3233 04A0  
                     _OpenTimer1 1A6A                           i2l3083 1924  
                         i2l3227 0462                           i2l3139 014A  
                         i2l3157 01B0                   __CFG_WDTEN$OFF 000000  
                         i2l3255 060E                           i2l3247 0582  
                         i2l3239 04FE                           i2l3175 022E  
                         i2l3159 01DC                           i2l3089 1940  
                         i2l2385 0FF0                           i2l3177 026E  
                         i2l3169 0216                           i2l3273 1350  
                         i2l2475 1B4A                           i2l2467 1B34  
                         i2l2635 188A                           i2l2387 1008  
                         i2l3267 1346                           i2l3199 036A  
                         i2l3279 1368      __end_of_i2c_configure_slave 1B7C  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0CBC  
             timer0_lthread@temp 00C5               timer0_lthread@tptr 00BB  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1B26  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00D2  
                      ??___awmod 00A1                           _ic_ptr 00D3  
                      ??___lwmod 00A1                    main@msgbuffer 0100  
               __end_of_init_i2c 1618                 OpenTimer1@config 009D  
                         _memcpy 1834                           clear_0 17EA  
                         clear_1 17F6                  ___awmod@divisor 009F  
                         _uc_ptr 0049                  ___awmod@counter 00A1  
                         main@ic 0152                           main@uc 011E  
               __end_of_recv_msg 0BB8      start_i2c_slave_reply@length 00A1  
                      ??_in_main 00A3                 __end_of_send_msg 0DA8  
                      ??_moveDir 00BF          i2c_int_handler@i2c_data 008B  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 009F  
       ToMainLow_recvmsg@msgtype 00B5             __size_of_in_high_int 0010  
        FromMainLow_sendmsg@data 00B4                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 1CBA                       __accesstop 0080  
        __end_of__initialization 182A       __end_of_ToMainHigh_recvmsg 1A38  
     __end_of_ToMainHigh_sendmsg 1BEA               ?_init_uart_lthread 009D  
    __end_of_init_timer0_lthread 1C66      __end_of_init_timer1_lthread 0E88  
            __end_of_SleepIfOkay 18D2                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1CB6           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 009F               __size_of_check_msg 0032  
              __end_of_ReadUSART 1C4A              __size_ofi1_recv_msg 00D2  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 139E      __end_of_InterruptHandlerLow 00CE  
                      ?i2_memcpy 0034                    _ToMainHigh_MQ 016E  
               _enter_sleep_mode 1CB0              __size_ofi2_send_msg 00C6  
           timer1_lthread@length 00BF                    ReadUSART@data 0001  
              __end_of_OpenUSART 14BC                    check_msg@qptr 009D  
      __end_of_init_uart_lthread 1CBC          ??_block_on_To_msgqueues 00A3  
           __size_of_init_queues 0056                       __pbssBANK0 00CB  
                     __pbssBANK1 016E                       __pbssBANK2 0200  
                    ?_OpenTimer1 0001   uart_trans_int_handler@curIndex 0021  
                     __pnvCOMRAM 0049              i1_ToMainLow_sendmsg 1BA2  
        __end_of_i2c_int_handler 0634                     ?i2_check_msg 0034  
             timer1_lthread@temp 00C7               timer1_lthread@tptr 00BB  
           __size_of_sendUARTarr 002E                recv_msg@maxlength 00A9  
                recv_msg@msgtype 00AA                  recv_msg@tlength 00B1  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
                        ?_memcpy 009D                 WriteTimer1@timer 009F  
                  ??_WriteTimer1 009F          __size_of_timer0_lthread 0080  
           ?i1_ToMainLow_sendmsg 0017          __size_of_timer1_lthread 0156  
                    moveDir@test 00BF              timer0_lthread@F5150 00D1  
                    moveDir@tptr 00BB                       ??i1_memcpy 0007  
                     ??i2_memcpy 003A                 i1send_msg@length 000D  
                  i2_in_high_int 1C9C                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1A6A  
                      ?_init_i2c 009D                      _SleepIfOkay 1884  
                      ?_recv_msg 00A7                       _in_low_int 1952  
                   _handle_start 0F5A                          __Hparam 0000  
                      ?_send_msg 00A7                          __Lparam 0000  
     __end_of_timer0_int_handler 1CBE      __end_of_FromMainLow_recvmsg 1BA2  
    __end_of_FromMainLow_sendmsg 1ACA                 init_uart_recv@uc 009D  
                        ___awmod 10E6                          ___lwmod 167C  
                __CFG_STVREN$OFF 000000                    moveDir@cmDist 00BD  
                        __pcinit 17E4                  __size_of_memcpy 0050  
                     _init_queue 1618                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer1 0032  
                        __ptext0 0634                          __ptext1 11AA  
                        __ptext2 1A9C                          __ptext3 0944  
                        __ptext4 167C                          __ptext5 14BC  
                        __ptext6 10E6                          __ptext7 0BB8  
                        __ptext8 153C                          __ptext9 1ACA  
              uart_lthread@index 00C0                          _in_main 1990  
                      _T1CONbits 000FCD                 ___awmod@dividend 009D  
                        _moveDir 153C              __end_of_WriteTimer1 1C8C  
                 ?i2_in_high_int 0034   __end_of_uart_trans_int_handler 17E4  
        timer1_lthread@temp_1753 00C9       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1310             end_of_initialization 182A  
        timer1_lthread@msgbuffer 00C1   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 00A3                          memcpy@n 00A1  
                        memcpy@s 00A5    __end_of_uart_recv_int_handler 143A  
                     ??_init_i2c 009F                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 0089                    __Lmediumconst 0000  
                        int_func 1310                     ??i1_send_msg 0011  
                  ?_uart_lthread 00B7          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00AE  
                   ??i2_send_msg 0044                       ??_send_msg 00AD  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
             __end_ofi1_recv_msg 0F5A               __end_ofi1_send_msg 1310  
                      _TRISCbits 000F94               __end_ofi2_send_msg 10E6  
                 ??_uart_lthread 00BF                        _TXSTAbits 000FAC  
                     main@length 0124                      ?_in_low_int 009F  
          timer0_lthread@msgtype 00BD            _start_i2c_slave_reply 0BB8  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 1CB6               _ToMainHigh_recvmsg 1A02  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1BC6  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 14BC                      ?_init_queue 009D  
                      i2memcpy@d 003A                      _WriteTimer1 1C7A  
                      i2memcpy@n 0038                        i2memcpy@s 003C  
                 _timer1_lthread 0944                   __end_of_memcpy 1884  
              _enable_interrupts 1CA8             __size_of_Delay1KTCYx 0014  
            ?_ToMainHigh_recvmsg 00B5                  ??i2_in_high_int 0036  
       i2c_int_handler@data_read 008E              ?_ToMainHigh_sendmsg 0045  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 17E4                    ??_in_high_int 009F  
                      _ReadUSART 1C2C                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 00B6  
            ??_enable_interrupts 009D                     ??_OpenTimer1 009D  
 __size_of_block_on_To_msgqueues 005C    __end_of_block_on_To_msgqueues 1738  
                      _OpenUSART 143A     __end_of_InterruptHandlerHigh 13A6  
                     init_i2c@ic 009D             ??_ToMainHigh_recvmsg 00B9  
           ??_ToMainHigh_sendmsg 0048           __end_of_timer0_lthread 153C  
       i2c_int_handler@error_buf 0086                      __pdataBANK0 00CF  
         __end_of_timer1_lthread 0A9A        __end_of_enable_interrupts 1CB0  
                       ??_memcpy 00A3            timer1_lthread@msgtype 00BD  
   __size_of_init_timer0_lthread 001C     __size_of_init_timer1_lthread 00E0  
             __end_of_OpenTimer1 1A9C         i2c_int_handler@msg_ready 008D  
            timer1_lthread@F5160 00CD              timer1_lthread@F5158 00CB  
                    __pbssCOMRAM 004B                       ?_ReadUSART 0001  
                  ??_init_queues 00A0                    __pcstackBANK0 0080  
                  __pcstackBANK1 0100              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 009D              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 009D         ToMainLow_sendmsg@msgtype 00B3  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 1C9C  
                     ?_OpenUSART 009D                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 00B7                     _ToMainLow_MQ 01A4  
            __size_of_init_queue 0064                   _init_uart_recv 1C0E  
                      _check_msg 1A38                        __pnvBANK0 00D3  
         ?_start_i2c_slave_reply 009D                __size_of_init_i2c 0066  
                  ??_sendUARTarr 00B9                     recv_msg@data 00AC  
                   recv_msg@qmsg 00B3                     recv_msg@slot 00B0  
                   recv_msg@qptr 00A7                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_send_msg 00EC  
                       ?___awmod 009D                  ?_timer0_lthread 00BB  
                       ?___lwmod 009D                  ?_timer1_lthread 00BB  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00B7  
                   moveDir@F5164 00CF             __end_of_uart_lthread 1266  
     i2c_int_handler@msg_to_send 008C                         ?_in_main 00A1  
             _timer0_int_handler 1CBC                WriteTimer1@timer1 009D  
     i1ToMainLow_sendmsg@msgtype 0017              uart_lthread@msgtype 00B9  
        init_timer0_lthread@tptr 009D                         ?_moveDir 00BB  
          ToMainLow_sendmsg@data 00B4              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 00B7  
         __end_of_init_uart_recv 1C2C              __end_of_init_queues 178E  
                i2check_msg@qptr 0034                       ?_check_msg 009D  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0036                         i2u245_40 1364  
                       i2u245_46 1366                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1BC6  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010             ??_timer0_int_handler 0034  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
            __end_of_sendUARTarr 1AF8                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0026  
   __size_of_FromMainLow_sendmsg 002E             timer0_lthread@length 00BF  
                       i1_memcpy 18D2             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1912  
           timer0_lthread@msgval 00C3                      _in_high_int 1C8C  
                   send_msg@data 00AB              _i2c_configure_slave 1B54  
                   send_msg@qmsg 00B1                     send_msg@slot 00B0  
                   send_msg@qptr 00A7                  sendUARTarr@data 00B7  
                    _INTCON2bits 000FF1            uart_lthread@msgbuffer 00BD  
                      copy_data0 181E                  ?_init_uart_recv 009D  
                    ??_OpenUSART 009F                  OpenUSART@config 00A2  
                 ??i2_in_low_int 0038            _uart_recv_int_handler 13A6  
                   ??_in_low_int 00A1                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001         __size_of_i2c_int_handler 0562  
               __size_of___awmod 00C4               ??_enter_sleep_mode 0034  
               __size_of___lwmod 0060                     ??_init_queue 009F  
                   ?_WriteTimer1 009D          ToMainLow_sendmsg@length 00B6  
              main@t0thread_data 0118            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 0041  
    ToMainHigh_recvmsg@maxlength 00B9                i2send_msg@tlength 0080  
        init_timer1_lthread@tptr 009D                      _init_queues 1738  
             __end_of_in_low_int 1990                 __size_of_moveDir 0076  
                       __ptext10 1AF8                         __ptext11 0CBC  
                       __ptext20 1B54                         __ptext12 1C7A  
                       __ptext21 1CA8                         __ptext13 1C0E  
                       __ptext30 0A9A                         __ptext22 16DC  
                       __ptext14 1CBA                         __ptext31 1834  
                       __ptext23 1990                         __ptext15 0DA8  
                       __ptext40 1266                         __ptext32 143A  
                       __ptext24 1952                         __ptext16 1C4A  
                       __ptext41 18D2                         __ptext33 1A6A  
                       __ptext25 1C8C                         __ptext17 1738  
                       __ptext50 1884                         __ptext42 1C2C  
                       __ptext26 1A38                         __ptext18 1618  
                       __ptext51 1B26                         __ptext35 178E  
                       __ptext27 1C66                         __ptext19 15B2  
                       __ptext52 1C9C                         __ptext44 1CBC  
                       __ptext36 1B7C                         __ptext28 19CC  
                       __ptext53 1BEA                         __ptext45 00D2  
                       __ptext37 0E88                         __ptext29 1A02  
                       __ptext54 1CB0                         __ptext46 0F5A  
                       __ptext38 13A6                         __ptext47 1BC6  
                       __ptext39 1BA2                         __ptext48 1020  
                       __ptext49 1912                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 00BB              _init_timer0_lthread 1C4A  
             uart_lthread@status 00BF                         _init_i2c 15B2  
            _init_timer1_lthread 0DA8                    __size_of_main 0310  
                  ??i2_check_msg 0036                main@t1thread_data 0125  
                    ??_check_msg 009F               __end_of_init_queue 167C  
           __size_of_SleepIfOkay 004E                         _recv_msg 0A9A  
          ??_i2c_configure_slave 009D                         _send_msg 0CBC  
                    _sendUARTarr 1ACA                   init_queue@qptr 009D  
          __size_of_uart_lthread 00BC    uart_trans_int_handler@msgtype 0020  
                  ??_Delay1KTCYx 009D                         main@baud 010B  
           ?_init_timer0_lthread 009D                         main@ctrl 011C  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 009D  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 009D  
                       memcpy@d1 009D                         memcpy@s1 009F  
          __end_ofi2_in_high_int 1CA8     i2c_int_handler@overrun_error 008A  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 009F                 ___lwmod@dividend 009D  
         ?_uart_recv_int_handler 0001                     _uart_lthread 11AA  
                 main@UARTConfig 010C            _block_on_To_msgqueues 16DC  
                  ?_handle_start 0001                 ??_timer0_lthread 00C3  
    __size_of_ToMainHigh_recvmsg 0036      __size_of_ToMainHigh_sendmsg 0024  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00C3  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0048              __end_ofi2_check_msg 1C0E  
          ??_init_timer0_lthread 009F            ??_init_timer1_lthread 009F  
         ??_InterruptHandlerHigh 008F                _ToMainLow_recvmsg 19CC  
              _ToMainLow_sendmsg 1AF8               main@last_reg_recvd 010D  
                ___lwmod@divisor 009F             __end_ofi2_in_low_int 1B54  
             ?_ToMainLow_recvmsg 00B5              __end_of_Delay1KTCYx 1C7A  
              ??_i2c_int_handler 0085                  ___lwmod@counter 00A1  
             ?_ToMainLow_sendmsg 00B3                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0042  
          ??_InterruptHandlerLow 0023              ??_ToMainLow_recvmsg 00B9  
                 i2send_msg@qmsg 0083                   i2send_msg@slot 0082  
                 i2send_msg@qptr 003E              ??_ToMainLow_sendmsg 00B6  
            _FromMainLow_recvmsg 1B7C                   ??_handle_start 0034  
            _FromMainLow_sendmsg 1A9C                     _USART_Status 004C  
