

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 24 23:24:25 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     _INTCONbits	set	4082
    76  0000                     _IPR1bits	set	3999
    77  0000                     _LATB	set	3978
    78  0000                     _OSCCON	set	4051
    79  0000                     _OSCCONbits	set	4051
    80  0000                     _OSCTUNEbits	set	3995
    81  0000                     _PIE1bits	set	3997
    82  0000                     _PIR1bits	set	3998
    83  0000                     _RCONbits	set	4048
    84  0000                     _RCREG	set	4014
    85  0000                     _RCSTA	set	4011
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _SPBRG	set	4015
    88  0000                     _SPBRGH	set	4016
    89  0000                     _SSPADD	set	4040
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPCON1	set	4038
    92  0000                     _SSPCON1bits	set	4038
    93  0000                     _SSPCON2	set	4037
    94  0000                     _SSPCON2bits	set	4037
    95  0000                     _SSPSTAT	set	4039
    96  0000                     _SSPSTATbits	set	4039
    97  0000                     _T0CON	set	4053
    98  0000                     _T0CONbits	set	4053
    99  0000                     _T1CON	set	4045
   100  0000                     _T1CONbits	set	4045
   101  0000                     _TMR0H	set	4055
   102  0000                     _TMR0L	set	4054
   103  0000                     _TMR1H	set	4047
   104  0000                     _TMR1L	set	4046
   105  0000                     _TRISB	set	3987
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TXREG	set	4013
   108  0000                     _TXSTA	set	4012
   109  0000                     _TXSTAbits	set	4012
   110                           
   111                           	psect	nvCOMRAM
   112  000048                     __pnvCOMRAM:
   113                           	opt stack 0
   114  000048                     _uc_ptr:
   115                           	opt stack 0
   116  000048                     	ds	2
   117                           
   118                           	psect	nvBANK0
   119  0000DD                     __pnvBANK0:
   120                           	opt stack 0
   121  0000DD                     _ic_ptr:
   122                           	opt stack 0
   123  0000DD                     	ds	2
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  001C32                     __pcinit:
   129                           	opt stack 0
   130  001C32                     start_initialization:
   131                           	opt stack 0
   132  001C32                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to BANK1 (162 bytes)
   136  001C32  EE01  F000         	lfsr	0,__pbssBANK1
   137  001C36  0EA2               	movlw	162
   138  001C38                     clear_0:
   139  001C38  6AEE               	clrf	postinc0,c
   140  001C3A  06E8               	decf	wreg,f,c
   141  001C3C  E1FD               	bnz	clear_0
   142                           
   143                           ; Clear objects allocated to BANK0 (54 bytes)
   144  001C3E  EE00  F080         	lfsr	0,__pbssBANK0
   145  001C42  0E36               	movlw	54
   146  001C44                     clear_1:
   147  001C44  6AEE               	clrf	postinc0,c
   148  001C46  06E8               	decf	wreg,f,c
   149  001C48  E1FD               	bnz	clear_1
   150                           
   151                           ; Clear objects allocated to COMRAM (2 bytes)
   152  001C4A  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   153  001C4C  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   154  001C4E                     end_of_initialization:
   155                           	opt stack 0
   156  001C4E                     __end_of__initialization:
   157                           	opt stack 0
   158  001C4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  001C50  6EF8               	movwf	tblptru,c
   160  001C52  0100               	movlb	0
   161  001C54  EF8F  F003         	goto	_main	;jump to C main() function
   162                           tblptru	equ	0xFF8
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166                           	psect	bssCOMRAM
   167  00004A                     __pbssCOMRAM:
   168                           	opt stack 0
   169  00004A                     _MQ_Main_Willing_to_block:
   170                           	opt stack 0
   171  00004A                     	ds	1
   172  00004B                     _USART_Status:
   173                           	opt stack 0
   174  00004B                     	ds	1
   175                           tblptru	equ	0xFF8
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	bssBANK0
   180  000080                     __pbssBANK0:
   181                           	opt stack 0
   182  000080                     _ToMainLow_MQ:
   183                           	opt stack 0
   184  000080                     	ds	54
   185                           tblptru	equ	0xFF8
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           
   189                           	psect	bssBANK1
   190  000100                     __pbssBANK1:
   191                           	opt stack 0
   192  000100                     _FromMainHigh_MQ:
   193                           	opt stack 0
   194  000100                     	ds	54
   195  000136                     _FromMainLow_MQ:
   196                           	opt stack 0
   197  000136                     	ds	54
   198  00016C                     _ToMainHigh_MQ:
   199                           	opt stack 0
   200  00016C                     	ds	54
   201                           tblptru	equ	0xFF8
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	cstackBANK2
   206  000200                     __pcstackBANK2:
   207                           	opt stack 0
   208  000200                     main@msgbuffer:
   209                           	opt stack 0
   210                           
   211                           ; 11 bytes @ 0x0
   212  000200                     	ds	11
   213  00020B                     main@t0thread_data:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0xB
   217  00020B                     	ds	2
   218  00020D                     main@last_reg_recvd:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0xD
   222  00020D                     	ds	1
   223  00020E                     main@baud:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xE
   227  00020E                     	ds	1
   228  00020F                     main@UARTConfig:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xF
   232  00020F                     	ds	1
   233  000210                     main@uthread_data:
   234                           	opt stack 0
   235                           
   236                           ; 10 bytes @ 0x10
   237  000210                     	ds	10
   238  00021A                     main@t1thread_data:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x1A
   242  00021A                     	ds	2
   243  00021C                     main@uc:
   244                           	opt stack 0
   245                           
   246                           ; 5 bytes @ 0x1C
   247  00021C                     	ds	5
   248  000221                     main@msgtype:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x21
   252  000221                     	ds	1
   253  000222                     main@length:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x22
   257  000222                     	ds	1
   258  000223                     main@ic:
   259                           	opt stack 0
   260                           
   261                           ; 28 bytes @ 0x23
   262  000223                     	ds	28
   263                           tblptru	equ	0xFF8
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           
   267                           	psect	cstackBANK1
   268  0001A2                     __pcstackBANK1:
   269                           	opt stack 0
   270  0001A2                     ??_block_on_To_msgqueues:
   271  0001A2                     timer0_lthread@tptr:
   272                           	opt stack 0
   273  0001A2                     memcpy@d:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  0001A2                     	ds	2
   278  0001A4                     timer0_lthread@msgtype:
   279                           	opt stack 0
   280  0001A4                     memcpy@s:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x2
   284  0001A4                     	ds	2
   285  0001A6                     send_msg@qptr:
   286                           	opt stack 0
   287  0001A6                     recv_msg@qptr:
   288                           	opt stack 0
   289  0001A6                     timer0_lthread@length:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x4
   293  0001A6                     	ds	2
   294  0001A8                     send_msg@length:
   295                           	opt stack 0
   296  0001A8                     recv_msg@maxlength:
   297                           	opt stack 0
   298  0001A8                     timer0_lthread@msgbuffer:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x6
   302  0001A8                     	ds	1
   303  0001A9                     send_msg@msgtype:
   304                           	opt stack 0
   305  0001A9                     recv_msg@msgtype:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x7
   309  0001A9                     	ds	1
   310  0001AA                     send_msg@data:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x8
   314  0001AA                     	ds	1
   315  0001AB                     recv_msg@data:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x9
   319  0001AB                     	ds	1
   320  0001AC                     ??_send_msg:
   321                           
   322                           ; 0 bytes @ 0xA
   323  0001AC                     	ds	1
   324  0001AD                     ??_recv_msg:
   325  0001AD                     send_msg@tlength:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0xB
   329  0001AD                     	ds	2
   330  0001AF                     send_msg@slot:
   331                           	opt stack 0
   332  0001AF                     recv_msg@slot:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0xD
   336  0001AF                     	ds	1
   337  0001B0                     send_msg@qmsg:
   338                           	opt stack 0
   339  0001B0                     recv_msg@tlength:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0xE
   343  0001B0                     	ds	2
   344  0001B2                     FromMainLow_sendmsg@msgtype:
   345                           	opt stack 0
   346  0001B2                     FromMainHigh_sendmsg@msgtype:
   347                           	opt stack 0
   348  0001B2                     recv_msg@qmsg:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x10
   352  0001B2                     	ds	1
   353  0001B3                     FromMainLow_sendmsg@data:
   354                           	opt stack 0
   355  0001B3                     FromMainHigh_sendmsg@data:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x11
   359  0001B3                     	ds	1
   360  0001B4                     ToMainLow_recvmsg@msgtype:
   361                           	opt stack 0
   362  0001B4                     ToMainHigh_recvmsg@msgtype:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x12
   366  0001B4                     	ds	1
   367  0001B5                     FromMainLow_sendmsg@length:
   368                           	opt stack 0
   369  0001B5                     FromMainHigh_sendmsg@length:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x13
   373  0001B5                     	ds	1
   374  0001B6                     ToMainLow_recvmsg@data:
   375                           	opt stack 0
   376  0001B6                     ToMainHigh_recvmsg@data:
   377                           	opt stack 0
   378  0001B6                     timer1_lthread@tptr:
   379                           	opt stack 0
   380  0001B6                     uart_lthread@uptr:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x14
   384  0001B6                     	ds	2
   385  0001B8                     ToMainLow_recvmsg@maxlength:
   386                           	opt stack 0
   387  0001B8                     ToMainHigh_recvmsg@maxlength:
   388                           	opt stack 0
   389  0001B8                     timer1_lthread@msgtype:
   390                           	opt stack 0
   391  0001B8                     uart_lthread@msgtype:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x16
   395  0001B8                     	ds	2
   396  0001BA                     timer1_lthread@length:
   397                           	opt stack 0
   398  0001BA                     uart_lthread@length:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x18
   402  0001BA                     	ds	2
   403  0001BC                     timer1_lthread@msgbuffer:
   404                           	opt stack 0
   405  0001BC                     uart_lthread@msgbuffer:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1A
   409  0001BC                     	ds	2
   410  0001BE                     ??_timer1_lthread:
   411  0001BE                     uart_lthread@status:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x1C
   415  0001BE                     	ds	1
   416  0001BF                     timer1_lthread@retval:
   417                           	opt stack 0
   418  0001BF                     uart_lthread@index:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x1D
   422  0001BF                     	ds	2
   423  0001C1                     ??_main:
   424                           
   425                           ; 0 bytes @ 0x1F
   426  0001C1                     	ds	1
   427                           tblptru	equ	0xFF8
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           
   431                           	psect	cstackBANK0
   432  0000B6                     __pcstackBANK0:
   433                           	opt stack 0
   434  0000B6                     i2recv_msg@slot:
   435                           	opt stack 0
   436  0000B6                     i2send_msg@tlength:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x0
   440  0000B6                     	ds	1
   441  0000B7                     i2recv_msg@tlength:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x1
   445  0000B7                     	ds	1
   446  0000B8                     i2send_msg@slot:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x2
   450  0000B8                     	ds	1
   451  0000B9                     i2send_msg@qmsg:
   452                           	opt stack 0
   453  0000B9                     i2recv_msg@qmsg:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x3
   457  0000B9                     	ds	2
   458  0000BB                     ToMainHigh_sendmsg@msgtype:
   459                           	opt stack 0
   460  0000BB                     FromMainHigh_recvmsg@msgtype:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x5
   464  0000BB                     	ds	1
   465  0000BC                     ToMainHigh_sendmsg@data:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469  0000BC                     	ds	1
   470  0000BD                     FromMainHigh_recvmsg@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x7
   474  0000BD                     	ds	1
   475  0000BE                     ??_i2c_int_handler:
   476                           
   477                           ; 0 bytes @ 0x8
   478  0000BE                     	ds	1
   479  0000BF                     FromMainHigh_recvmsg@maxlength:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x9
   483  0000BF                     	ds	1
   484  0000C0                     ??_timer0_int_handler:
   485  0000C0                     i2c_int_handler@error_buf:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0xA
   489  0000C0                     	ds	1
   490  0000C1                     timer0_int_handler@length:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0xB
   494  0000C1                     	ds	2
   495  0000C3                     i2c_int_handler@data_written:
   496                           	opt stack 0
   497  0000C3                     timer0_int_handler@msgtype:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0xD
   501  0000C3                     	ds	1
   502  0000C4                     i2c_int_handler@overrun_error:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xE
   506  0000C4                     	ds	1
   507  0000C5                     i2c_int_handler@i2c_data:
   508                           	opt stack 0
   509  0000C5                     timer0_int_handler@val:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0xF
   513  0000C5                     	ds	1
   514  0000C6                     i2c_int_handler@msg_to_send:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x10
   518  0000C6                     	ds	1
   519  0000C7                     i2c_int_handler@msg_ready:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x11
   523  0000C7                     	ds	1
   524  0000C8                     i2c_int_handler@data_read:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x12
   528  0000C8                     	ds	1
   529  0000C9                     ??_InterruptHandlerHigh:
   530                           
   531                           ; 0 bytes @ 0x13
   532  0000C9                     	ds	14
   533  0000D7                     ?_in_high_int:
   534                           	opt stack 0
   535  0000D7                     ?___lwmod:
   536                           	opt stack 0
   537  0000D7                     i2c_configure_slave@addr:
   538                           	opt stack 0
   539  0000D7                     OpenTimer0@config:
   540                           	opt stack 0
   541  0000D7                     OpenTimer1@config:
   542                           	opt stack 0
   543  0000D7                     Delay1KTCYx@unit:
   544                           	opt stack 0
   545  0000D7                     init_queue@qptr:
   546                           	opt stack 0
   547  0000D7                     check_msg@qptr:
   548                           	opt stack 0
   549  0000D7                     start_i2c_slave_reply@msg:
   550                           	opt stack 0
   551  0000D7                     init_i2c@ic:
   552                           	opt stack 0
   553  0000D7                     init_uart_recv@uc:
   554                           	opt stack 0
   555  0000D7                     timer0_lthread@msgval:
   556                           	opt stack 0
   557  0000D7                     init_timer1_lthread@tptr:
   558                           	opt stack 0
   559  0000D7                     init_uart_lthread@uptr:
   560                           	opt stack 0
   561  0000D7                     OpenUSART@spbrg:
   562                           	opt stack 0
   563  0000D7                     ___lwmod@dividend:
   564                           	opt stack 0
   565  0000D7                     memcpy@d1:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x21
   569  0000D7                     	ds	2
   570  0000D9                     ??_OpenUSART:
   571  0000D9                     ??_start_i2c_slave_reply:
   572  0000D9                     ??_init_queue:
   573  0000D9                     ??_check_msg:
   574  0000D9                     ?_in_low_int:
   575                           	opt stack 0
   576  0000D9                     ___lwmod@divisor:
   577                           	opt stack 0
   578  0000D9                     memcpy@s1:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x23
   582  0000D9                     	ds	1
   583  0000DA                     init_queue@i:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x24
   587  0000DA                     	ds	1
   588  0000DB                     ??_init_queues:
   589  0000DB                     ??___lwmod:
   590  0000DB                     ?_in_main:
   591                           	opt stack 0
   592  0000DB                     start_i2c_slave_reply@length:
   593                           	opt stack 0
   594  0000DB                     memcpy@n:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x25
   598  0000DB                     	ds	1
   599  0000DC                     OpenUSART@config:
   600                           	opt stack 0
   601  0000DC                     ___lwmod@counter:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x26
   605  0000DC                     	ds	1
   606  0000DD                     tblptru	equ	0xFF8
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           
   610                           ; 0 bytes @ 0x27
   611                           
   612                           	psect	cstackCOMRAM
   613  000001                     __pcstackCOMRAM:
   614                           	opt stack 0
   615  000001                     ?_ReadTimer1:
   616                           	opt stack 0
   617  000001                     ReadUSART@data:
   618                           	opt stack 0
   619  000001                     WriteTimer1@timer1:
   620                           	opt stack 0
   621  000001                     i1memcpy@d1:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x0
   625  000001                     	ds	2
   626  000003                     ReadTimer1@timer:
   627                           	opt stack 0
   628  000003                     WriteTimer1@timer:
   629                           	opt stack 0
   630  000003                     i1memcpy@s1:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x2
   634  000003                     	ds	2
   635  000005                     i1memcpy@n:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x4
   639  000005                     	ds	2
   640  000007                     i1memcpy@d:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x6
   644  000007                     	ds	2
   645  000009                     i1memcpy@s:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x8
   649  000009                     	ds	2
   650  00000B                     i1send_msg@qptr:
   651                           	opt stack 0
   652  00000B                     i1recv_msg@qptr:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xA
   656  00000B                     	ds	2
   657  00000D                     i1send_msg@length:
   658                           	opt stack 0
   659  00000D                     i1recv_msg@maxlength:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0xC
   663  00000D                     	ds	1
   664  00000E                     i1send_msg@msgtype:
   665                           	opt stack 0
   666  00000E                     i1recv_msg@msgtype:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0xD
   670  00000E                     	ds	1
   671  00000F                     i1send_msg@data:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0xE
   675  00000F                     	ds	1
   676  000010                     i1recv_msg@data:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0xF
   680  000010                     	ds	1
   681  000011                     ??i1_send_msg:
   682                           
   683                           ; 0 bytes @ 0x10
   684  000011                     	ds	1
   685  000012                     ??i1_recv_msg:
   686  000012                     i1send_msg@tlength:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x11
   690  000012                     	ds	2
   691  000014                     i1send_msg@slot:
   692                           	opt stack 0
   693  000014                     i1recv_msg@slot:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697  000014                     	ds	1
   698  000015                     i1send_msg@qmsg:
   699                           	opt stack 0
   700  000015                     i1recv_msg@tlength:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x14
   704  000015                     	ds	2
   705  000017                     ToMainLow_sendmsg@msgtype:
   706                           	opt stack 0
   707  000017                     i1recv_msg@qmsg:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x16
   711  000017                     	ds	1
   712  000018                     ToMainLow_sendmsg@data:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716  000018                     	ds	1
   717  000019                     FromMainLow_recvmsg@msgtype:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x18
   721  000019                     	ds	1
   722  00001A                     ToMainLow_sendmsg@length:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x19
   726  00001A                     	ds	1
   727  00001B                     ??_timer1_int_handler:
   728  00001B                     ??_uart_recv_int_handler:
   729  00001B                     FromMainLow_recvmsg@data:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x1A
   733  00001B                     	ds	1
   734  00001C                     timer1_int_handler@result:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1B
   738  00001C                     	ds	1
   739  00001D                     FromMainLow_recvmsg@maxlength:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x1C
   743  00001D                     	ds	1
   744  00001E                     ??_uart_trans_int_handler:
   745                           
   746                           ; 0 bytes @ 0x1D
   747  00001E                     	ds	1
   748  00001F                     uart_trans_int_handler@data:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x1E
   752  00001F                     	ds	2
   753  000021                     uart_trans_int_handler@curIndex:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x20
   757  000021                     	ds	1
   758  000022                     uart_trans_int_handler@msgtype:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x21
   762  000022                     	ds	1
   763  000023                     uart_trans_int_handler@length:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     ??_InterruptHandlerLow:
   769                           
   770                           ; 0 bytes @ 0x23
   771  000024                     	ds	17
   772  000035                     ?i2_in_high_int:
   773                           	opt stack 0
   774  000035                     handle_start@data_read:
   775                           	opt stack 0
   776  000035                     WriteTimer0@timer0:
   777                           	opt stack 0
   778  000035                     i2check_msg@qptr:
   779                           	opt stack 0
   780  000035                     i2memcpy@d1:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x34
   784  000035                     	ds	2
   785  000037                     ??i2_check_msg:
   786  000037                     ?i2_in_low_int:
   787                           	opt stack 0
   788  000037                     WriteTimer0@timer:
   789                           	opt stack 0
   790  000037                     i2memcpy@s1:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x36
   794  000037                     	ds	2
   795  000039                     i2memcpy@n:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x38
   799  000039                     	ds	2
   800  00003B                     i2memcpy@d:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x3A
   804  00003B                     	ds	2
   805  00003D                     i2memcpy@s:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x3C
   809  00003D                     	ds	2
   810  00003F                     i2send_msg@qptr:
   811                           	opt stack 0
   812  00003F                     i2recv_msg@qptr:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x3E
   816  00003F                     	ds	2
   817  000041                     i2send_msg@length:
   818                           	opt stack 0
   819  000041                     i2recv_msg@maxlength:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x40
   823  000041                     	ds	1
   824  000042                     i2send_msg@msgtype:
   825                           	opt stack 0
   826  000042                     i2recv_msg@msgtype:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x41
   830  000042                     	ds	1
   831  000043                     i2send_msg@data:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x42
   835  000043                     	ds	1
   836  000044                     i2recv_msg@data:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x43
   840  000044                     	ds	1
   841  000045                     ??i2_send_msg:
   842                           
   843                           ; 0 bytes @ 0x44
   844  000045                     	ds	1
   845  000046                     ??i2_recv_msg:
   846  000046                     ToMainHigh_sendmsg@length:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x45
   850  000046                     	ds	2
   851  000048                     tblptru	equ	0xFF8
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           
   855                           ; 0 bytes @ 0x47
   856 ;;
   857 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   858 ;;
   859 ;; *************** function _main *****************
   860 ;; Defined at:
   861 ;;		line 139 in file "src/main.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  ic             28   35[BANK2 ] struct __i2c_comm
   866 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   867 ;;  uthread_data   10   16[BANK2 ] struct __uart_thread_str
   868 ;;  uc              5   28[BANK2 ] struct __uart_comm
   869 ;;  t1thread_dat    2   26[BANK2 ] struct __timer1_thread_s
   870 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   871 ;;  length          1   34[BANK2 ] char 
   872 ;;  msgtype         1   33[BANK2 ] unsigned char 
   873 ;;  UARTConfig      1   15[BANK2 ] unsigned char 
   874 ;;  baud            1   14[BANK2 ] unsigned char 
   875 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   876 ;;  i               1    0        unsigned char 
   877 ;;  c               1    0        unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0      63       0
   889 ;;      Temps:          0       0       1       0       0
   890 ;;      Totals:         0       0       1      63       0
   891 ;;Total ram usage:       64 bytes
   892 ;; Hardware stack levels required when called:   14
   893 ;; This function calls:
   894 ;;		_OpenTimer0
   895 ;;		_OpenTimer1
   896 ;;		_OpenUSART
   897 ;;		_ToMainHigh_recvmsg
   898 ;;		_ToMainLow_recvmsg
   899 ;;		_block_on_To_msgqueues
   900 ;;		_enable_interrupts
   901 ;;		_i2c_configure_slave
   902 ;;		_init_i2c
   903 ;;		_init_queues
   904 ;;		_init_timer1_lthread
   905 ;;		_init_uart_lthread
   906 ;;		_init_uart_recv
   907 ;;		_start_i2c_slave_reply
   908 ;;		_timer0_lthread
   909 ;;		_timer1_lthread
   910 ;;		_uart_lthread
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917  00071E                     __ptext0:
   918                           	opt stack 0
   919  00071E                     _main:
   920                           	opt stack 17
   921                           
   922                           ;main.c: 140: char c;
   923                           ;main.c: 141: signed char length;
   924                           ;main.c: 142: unsigned char msgtype;
   925                           ;main.c: 143: unsigned char last_reg_recvd;
   926                           ;main.c: 144: unsigned char baud, UARTConfig;
   927                           ;main.c: 145: uart_comm uc;
   928                           ;main.c: 146: i2c_comm ic;
   929                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   930                           ;main.c: 148: unsigned char i;
   931                           ;main.c: 149: uart_thread_struct uthread_data;
   932                           ;main.c: 150: timer1_thread_struct t1thread_data;
   933                           ;main.c: 151: timer0_thread_struct t0thread_data;
   934                           ;main.c: 159: OSCCON = 0x82;
   935                           
   936                           ;incstack = 0
   937  00071E  0E82               	movlw	130
   938  000720  6ED3               	movwf	4051,c	;volatile
   939                           
   940                           ;main.c: 160: OSCTUNEbits.PLLEN = 0;
   941  000722  9C9B               	bcf	3995,6,c	;volatile
   942                           
   943                           ;main.c: 173: init_uart_recv(&uc);
   944  000724  0102               	movlb	2	; () banked
   945  000726  0E02               	movlw	high main@uc
   946  000728  0100               	movlb	0	; () banked
   947  00072A  0100               	movlb	0	; () banked
   948  00072C  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   949  00072E  0102               	movlb	2	; () banked
   950  000730  0E1C               	movlw	low main@uc
   951  000732  0100               	movlb	0	; () banked
   952  000734  0100               	movlb	0	; () banked
   953  000736  6FD7               	movwf	init_uart_recv@uc& (0+255),b
   954  000738  EC51  F00E         	call	_init_uart_recv	;wreg free
   955                           
   956                           ;main.c: 176: init_i2c(&ic);
   957  00073C  0102               	movlb	2	; () banked
   958  00073E  0E02               	movlw	high main@ic
   959  000740  0100               	movlb	0	; () banked
   960  000742  0100               	movlb	0	; () banked
   961  000744  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
   962  000746  0102               	movlb	2	; () banked
   963  000748  0E23               	movlw	low main@ic
   964  00074A  0100               	movlb	0	; () banked
   965  00074C  0100               	movlb	0	; () banked
   966  00074E  6FD7               	movwf	init_i2c@ic& (0+255),b
   967  000750  EC93  F00B         	call	_init_i2c	;wreg free
   968                           
   969                           ;main.c: 179: init_timer1_lthread(&t1thread_data);
   970  000754  0102               	movlb	2	; () banked
   971  000756  0E02               	movlw	high main@t1thread_data
   972  000758  0100               	movlb	0	; () banked
   973  00075A  0100               	movlb	0	; () banked
   974  00075C  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   975  00075E  0102               	movlb	2	; () banked
   976  000760  0E1A               	movlw	low main@t1thread_data
   977  000762  0100               	movlb	0	; () banked
   978  000764  0100               	movlb	0	; () banked
   979  000766  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
   980  000768  EC83  F00E         	call	_init_timer1_lthread	;wreg free
   981                           
   982                           ;main.c: 182: init_uart_lthread(&uthread_data);
   983  00076C  0102               	movlb	2	; () banked
   984  00076E  0E02               	movlw	high main@uthread_data
   985  000770  0100               	movlb	0	; () banked
   986  000772  0100               	movlb	0	; () banked
   987  000774  6FD8               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   988  000776  0102               	movlb	2	; () banked
   989  000778  0E10               	movlw	low main@uthread_data
   990  00077A  0100               	movlb	0	; () banked
   991  00077C  0100               	movlb	0	; () banked
   992  00077E  6FD7               	movwf	init_uart_lthread@uptr& (0+255),b
   993  000780  ECBD  F00E         	call	_init_uart_lthread	;wreg free
   994                           
   995                           ;main.c: 186: init_queues();
   996  000784  EC5C  F00B         	call	_init_queues	;wreg free
   997                           
   998                           ;main.c: 189: TRISB = 0x0;
   999  000788  0E00               	movlw	0
  1000  00078A  6E93               	movwf	3987,c	;volatile
  1001                           
  1002                           ;main.c: 190: LATB = 0x0;
  1003  00078C  0E00               	movlw	0
  1004  00078E  6E8A               	movwf	3978,c	;volatile
  1005                           
  1006                           ;main.c: 193: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1007  000790  0E96               	movlw	150
  1008  000792  ECC7  F00D         	call	_OpenTimer0
  1009                           
  1010                           ;main.c: 198: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1011  000796  0EF5               	movlw	245
  1012  000798  EC12  F00D         	call	_OpenTimer1
  1013                           
  1014                           ;main.c: 207: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1015  00079C  0101               	movlb	1	; () banked
  1016  00079E  6FC1               	movwf	??_main& (0+255),b
  1017  0007A0  0EFC               	movlw	252
  1018  0007A2  0102               	movlb	2	; () banked
  1019  0007A4  0102               	movlb	2	; () banked
  1020  0007A6  6F0F               	movwf	main@UARTConfig& (0+255),b
  1021  0007A8  0101               	movlb	1	; () banked
  1022  0007AA  51C1               	movf	??_main& (0+255),w,b
  1023                           
  1024                           ; BSR set to: 1
  1025                           ;main.c: 208: baud = 77;
  1026  0007AC  0101               	movlb	1	; () banked
  1027  0007AE  6FC1               	movwf	??_main& (0+255),b
  1028  0007B0  0E4D               	movlw	77
  1029  0007B2  0102               	movlb	2	; () banked
  1030  0007B4  0102               	movlb	2	; () banked
  1031  0007B6  6F0E               	movwf	main@baud& (0+255),b
  1032  0007B8  0101               	movlb	1	; () banked
  1033  0007BA  51C1               	movf	??_main& (0+255),w,b
  1034                           
  1035                           ; BSR set to: 1
  1036                           ;main.c: 209: OpenUSART(UARTConfig,baud);
  1037  0007BC  0102               	movlb	2	; () banked
  1038  0007BE  0100               	movlb	0	; () banked
  1039  0007C0  C20E  F0D7         	movff	main@baud,OpenUSART@spbrg
  1040  0007C4  0100               	movlb	0	; () banked
  1041  0007C6  0100               	movlb	0	; () banked
  1042  0007C8  6BD8               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1043  0007CA  0102               	movlb	2	; () banked
  1044  0007CC  0102               	movlb	2	; () banked
  1045  0007CE  510F               	movf	main@UARTConfig& (0+255),w,b
  1046  0007D0  EC96  F009         	call	_OpenUSART
  1047                           
  1048                           ;main.c: 215: IPR1bits.TMR1IP = 0;
  1049  0007D4  909F               	bcf	3999,0,c	;volatile
  1050                           
  1051                           ;main.c: 217: IPR1bits.RCIP = 0;
  1052  0007D6  9A9F               	bcf	3999,5,c	;volatile
  1053                           
  1054                           ;main.c: 219: IPR1bits.TXIP = 0;
  1055  0007D8  989F               	bcf	3999,4,c	;volatile
  1056                           
  1057                           ;main.c: 221: IPR1bits.SSPIP = 1;
  1058  0007DA  869F               	bsf	3999,3,c	;volatile
  1059                           
  1060                           ;main.c: 230: i2c_configure_slave(0x9E);
  1061  0007DC  0E9E               	movlw	158
  1062  0007DE  ECF1  F00D         	call	_i2c_configure_slave
  1063                           
  1064                           ;main.c: 245: PIE1bits.SSPIE = 1;
  1065  0007E2  869D               	bsf	3997,3,c	;volatile
  1066                           
  1067                           ;main.c: 249: enable_interrupts();
  1068  0007E4  ECB6  F00E         	call	_enable_interrupts	;wreg free
  1069  0007E8                     l3345:
  1070                           
  1071                           ;main.c: 273: block_on_To_msgqueues();
  1072  0007E8  ECA7  F00A         	call	_block_on_To_msgqueues	;wreg free
  1073                           
  1074                           ;main.c: 280: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1075  0007EC  0102               	movlb	2	; () banked
  1076  0007EE  0E02               	movlw	high main@msgtype
  1077  0007F0  0101               	movlb	1	; () banked
  1078  0007F2  0101               	movlb	1	; () banked
  1079  0007F4  6FB5               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1080  0007F6  0102               	movlb	2	; () banked
  1081  0007F8  0E21               	movlw	low main@msgtype
  1082  0007FA  0101               	movlb	1	; () banked
  1083  0007FC  0101               	movlb	1	; () banked
  1084  0007FE  6FB4               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1085  000800  0102               	movlb	2	; () banked
  1086  000802  0E02               	movlw	high main@msgbuffer
  1087  000804  0101               	movlb	1	; () banked
  1088  000806  0101               	movlb	1	; () banked
  1089  000808  6FB7               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1090  00080A  0102               	movlb	2	; () banked
  1091  00080C  0E00               	movlw	low main@msgbuffer
  1092  00080E  0101               	movlb	1	; () banked
  1093  000810  0101               	movlb	1	; () banked
  1094  000812  6FB6               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1095  000814  0E0A               	movlw	10
  1096  000816  ECB1  F00C         	call	_ToMainHigh_recvmsg
  1097  00081A  0102               	movlb	2	; () banked
  1098  00081C  0102               	movlb	2	; () banked
  1099  00081E  6F22               	movwf	main@length& (0+255),b
  1100                           
  1101                           ; BSR set to: 2
  1102                           ;main.c: 281: if (length < 0) {
  1103  000820  0102               	movlb	2	; () banked
  1104  000822  0102               	movlb	2	; () banked
  1105  000824  BF22               	btfsc	main@length& (0+255),7,b
  1106  000826  D08D               	goto	l3371
  1107  000828  D07D               	goto	l3369
  1108  00082A                     l3353:
  1109                           
  1110                           ; BSR set to: 2
  1111                           ;main.c: 289: {
  1112                           ;main.c: 290: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1113  00082A  0102               	movlb	2	; () banked
  1114  00082C  0E02               	movlw	high main@t0thread_data
  1115  00082E  0101               	movlb	1	; () banked
  1116  000830  0101               	movlb	1	; () banked
  1117  000832  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1118  000834  0102               	movlb	2	; () banked
  1119  000836  0E0B               	movlw	low main@t0thread_data
  1120  000838  0101               	movlb	1	; () banked
  1121  00083A  0101               	movlb	1	; () banked
  1122  00083C  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1123  00083E  0102               	movlb	2	; () banked
  1124  000840  0101               	movlb	1	; () banked
  1125  000842  C221  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1126  000846  0101               	movlb	1	; () banked
  1127  000848  0101               	movlb	1	; () banked
  1128  00084A  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1129  00084C  0102               	movlb	2	; () banked
  1130  00084E  0102               	movlb	2	; () banked
  1131  000850  5122               	movf	main@length& (0+255),w,b
  1132  000852  0101               	movlb	1	; () banked
  1133  000854  0101               	movlb	1	; () banked
  1134  000856  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1135  000858  0101               	movlb	1	; () banked
  1136  00085A  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1137  00085C  0101               	movlb	1	; () banked
  1138  00085E  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1139  000860  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1140  000862  0102               	movlb	2	; () banked
  1141  000864  0E02               	movlw	high main@msgbuffer
  1142  000866  0101               	movlb	1	; () banked
  1143  000868  0101               	movlb	1	; () banked
  1144  00086A  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1145  00086C  0102               	movlb	2	; () banked
  1146  00086E  0E00               	movlw	low main@msgbuffer
  1147  000870  0101               	movlb	1	; () banked
  1148  000872  0101               	movlb	1	; () banked
  1149  000874  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1150  000876  EC7A  F00E         	call	_timer0_lthread	;wreg free
  1151                           
  1152                           ;main.c: 291: break;
  1153  00087A  D063               	goto	l3371
  1154  00087C                     l109:
  1155                           
  1156                           ;main.c: 294: case 41:
  1157                           ;main.c: 295: {
  1158                           ;main.c: 298: last_reg_recvd = msgbuffer[0];
  1159  00087C  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1160                           
  1161                           ;main.c: 299: break;
  1162  000880  D060               	goto	l3371
  1163  000882                     l3355:
  1164                           
  1165                           ;main.c: 312: {
  1166                           ;main.c: 313: length = 2;
  1167  000882  0101               	movlb	1	; () banked
  1168  000884  6FC1               	movwf	??_main& (0+255),b
  1169  000886  0E02               	movlw	2
  1170  000888  0102               	movlb	2	; () banked
  1171  00088A  0102               	movlb	2	; () banked
  1172  00088C  6F22               	movwf	main@length& (0+255),b
  1173  00088E  0101               	movlb	1	; () banked
  1174  000890  51C1               	movf	??_main& (0+255),w,b
  1175                           
  1176                           ;main.c: 314: msgbuffer[0] = 0x55;
  1177  000892  0101               	movlb	1	; () banked
  1178  000894  6FC1               	movwf	??_main& (0+255),b
  1179  000896  0E55               	movlw	85
  1180  000898  0102               	movlb	2	; () banked
  1181  00089A  0102               	movlb	2	; () banked
  1182  00089C  6F00               	movwf	main@msgbuffer& (0+255),b
  1183  00089E  0101               	movlb	1	; () banked
  1184  0008A0  51C1               	movf	??_main& (0+255),w,b
  1185                           
  1186                           ;main.c: 315: msgbuffer[1] = 0xAA;
  1187  0008A2  0101               	movlb	1	; () banked
  1188  0008A4  6FC1               	movwf	??_main& (0+255),b
  1189  0008A6  0EAA               	movlw	170
  1190  0008A8  0102               	movlb	2	; () banked
  1191  0008AA  0102               	movlb	2	; () banked
  1192  0008AC  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1193  0008AE  D00C               	goto	L1
  1194  0008B0                     l3357:
  1195                           
  1196                           ;main.c: 319: {
  1197                           ;main.c: 320: length = 1;
  1198  0008B0  0101               	movlb	1	; () banked
  1199  0008B2  6FC1               	movwf	??_main& (0+255),b
  1200  0008B4  0E01               	movlw	1
  1201  0008B6  0102               	movlb	2	; () banked
  1202  0008B8  0102               	movlb	2	; () banked
  1203  0008BA  6F22               	movwf	main@length& (0+255),b
  1204  0008BC  0101               	movlb	1	; () banked
  1205  0008BE  51C1               	movf	??_main& (0+255),w,b
  1206                           
  1207                           ;main.c: 321: msgbuffer[0] = 0x3A;
  1208  0008C0  0101               	movlb	1	; () banked
  1209  0008C2  6FC1               	movwf	??_main& (0+255),b
  1210  0008C4  0E3A               	movlw	58
  1211  0008C6  D00E               	goto	L2
  1212  0008C8                     L1:
  1213  0008C8  0101               	movlb	1	; () banked
  1214  0008CA  51C1               	movf	??_main& (0+255),w,b
  1215                           
  1216                           ;main.c: 322: break;
  1217  0008CC  D01B               	goto	l3365
  1218  0008CE                     l3359:
  1219                           
  1220                           ;main.c: 325: {
  1221                           ;main.c: 326: length = 1;
  1222  0008CE  0101               	movlb	1	; () banked
  1223  0008D0  6FC1               	movwf	??_main& (0+255),b
  1224  0008D2  0E01               	movlw	1
  1225  0008D4  0102               	movlb	2	; () banked
  1226  0008D6  0102               	movlb	2	; () banked
  1227  0008D8  6F22               	movwf	main@length& (0+255),b
  1228  0008DA  0101               	movlb	1	; () banked
  1229  0008DC  51C1               	movf	??_main& (0+255),w,b
  1230                           
  1231                           ;main.c: 327: msgbuffer[0] = 0xA3;
  1232  0008DE  0101               	movlb	1	; () banked
  1233  0008E0  6FC1               	movwf	??_main& (0+255),b
  1234  0008E2  0EA3               	movlw	163
  1235  0008E4                     L2:
  1236  0008E4  0102               	movlb	2	; () banked
  1237  0008E6  0102               	movlb	2	; () banked
  1238  0008E8  6F00               	movwf	main@msgbuffer& (0+255),b
  1239  0008EA  D7EE               	goto	L1
  1240  0008EC                     l3363:
  1241  0008EC  0102               	movlb	2	; () banked
  1242  0008EE  0102               	movlb	2	; () banked
  1243  0008F0  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1244                           
  1245                           ; Switch size 1, requested type "space"
  1246                           ; Number of cases is 3, Range of values is 168 to 170
  1247                           ; switch strategies available:
  1248                           ; Name         Instructions Cycles
  1249                           ; simple_byte           10     6 (average)
  1250                           ;	Chosen strategy is simple_byte
  1251  0008F2  0AA8               	xorlw	168	; case 168
  1252  0008F4  B4D8               	btfsc	status,2,c
  1253  0008F6  D7DC               	goto	l3357
  1254  0008F8  0A01               	xorlw	1	; case 169
  1255  0008FA  B4D8               	btfsc	status,2,c
  1256  0008FC  D7E8               	goto	l3359
  1257  0008FE  0A03               	xorlw	3	; case 170
  1258  000900  B4D8               	btfsc	status,2,c
  1259  000902  D7BF               	goto	l3355
  1260  000904                     l3365:
  1261                           
  1262                           ;main.c: 331: start_i2c_slave_reply(length, msgbuffer);
  1263  000904  0102               	movlb	2	; () banked
  1264  000906  0E02               	movlw	high main@msgbuffer
  1265  000908  0100               	movlb	0	; () banked
  1266  00090A  0100               	movlb	0	; () banked
  1267  00090C  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1268  00090E  0102               	movlb	2	; () banked
  1269  000910  0E00               	movlw	low main@msgbuffer
  1270  000912  0100               	movlb	0	; () banked
  1271  000914  0100               	movlb	0	; () banked
  1272  000916  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1273  000918  0102               	movlb	2	; () banked
  1274  00091A  0102               	movlb	2	; () banked
  1275  00091C  5122               	movf	main@length& (0+255),w,b
  1276  00091E  ECBD  F005         	call	_start_i2c_slave_reply
  1277                           
  1278                           ;main.c: 332: break;
  1279  000922  D00F               	goto	l3371
  1280  000924                     l3369:
  1281  000924  0102               	movlb	2	; () banked
  1282  000926  0102               	movlb	2	; () banked
  1283  000928  5121               	movf	main@msgtype& (0+255),w,b
  1284                           
  1285                           ; Switch size 1, requested type "space"
  1286                           ; Number of cases is 4, Range of values is 10 to 42
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte           13     7 (average)
  1290                           ;	Chosen strategy is simple_byte
  1291  00092A  0A0A               	xorlw	10	; case 10
  1292  00092C  B4D8               	btfsc	status,2,c
  1293  00092E  D77D               	goto	l3353
  1294  000930  0A22               	xorlw	34	; case 40
  1295  000932  B4D8               	btfsc	status,2,c
  1296  000934  D7A3               	goto	l109
  1297  000936  0A01               	xorlw	1	; case 41
  1298  000938  B4D8               	btfsc	status,2,c
  1299  00093A  D7A0               	goto	l109
  1300  00093C  0A03               	xorlw	3	; case 42
  1301  00093E  B4D8               	btfsc	status,2,c
  1302  000940  D7D5               	goto	l3363
  1303  000942                     l3371:
  1304                           
  1305                           ;main.c: 340: }
  1306                           ;main.c: 343: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1307  000942  0102               	movlb	2	; () banked
  1308  000944  0E02               	movlw	high main@msgtype
  1309  000946  0101               	movlb	1	; () banked
  1310  000948  0101               	movlb	1	; () banked
  1311  00094A  6FB5               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1312  00094C  0102               	movlb	2	; () banked
  1313  00094E  0E21               	movlw	low main@msgtype
  1314  000950  0101               	movlb	1	; () banked
  1315  000952  0101               	movlb	1	; () banked
  1316  000954  6FB4               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1317  000956  0102               	movlb	2	; () banked
  1318  000958  0E02               	movlw	high main@msgbuffer
  1319  00095A  0101               	movlb	1	; () banked
  1320  00095C  0101               	movlb	1	; () banked
  1321  00095E  6FB7               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1322  000960  0102               	movlb	2	; () banked
  1323  000962  0E00               	movlw	low main@msgbuffer
  1324  000964  0101               	movlb	1	; () banked
  1325  000966  0101               	movlb	1	; () banked
  1326  000968  6FB6               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1327  00096A  0E0A               	movlw	10
  1328  00096C  EC90  F00C         	call	_ToMainLow_recvmsg
  1329  000970  0102               	movlb	2	; () banked
  1330  000972  0102               	movlb	2	; () banked
  1331  000974  6F22               	movwf	main@length& (0+255),b
  1332                           
  1333                           ; BSR set to: 2
  1334                           ;main.c: 344: if (length < 0) {
  1335  000976  0102               	movlb	2	; () banked
  1336  000978  0102               	movlb	2	; () banked
  1337  00097A  BF22               	btfsc	main@length& (0+255),7,b
  1338  00097C  D735               	goto	l3345
  1339  00097E  D052               	goto	l3383
  1340  000980                     l3377:
  1341                           
  1342                           ; BSR set to: 2
  1343                           ;main.c: 352: {
  1344                           ;main.c: 353: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1345  000980  0102               	movlb	2	; () banked
  1346  000982  0E02               	movlw	high main@t1thread_data
  1347  000984  0101               	movlb	1	; () banked
  1348  000986  0101               	movlb	1	; () banked
  1349  000988  6FB7               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1350  00098A  0102               	movlb	2	; () banked
  1351  00098C  0E1A               	movlw	low main@t1thread_data
  1352  00098E  0101               	movlb	1	; () banked
  1353  000990  0101               	movlb	1	; () banked
  1354  000992  6FB6               	movwf	timer1_lthread@tptr& (0+255),b
  1355  000994  0102               	movlb	2	; () banked
  1356  000996  0101               	movlb	1	; () banked
  1357  000998  C221  F1B8         	movff	main@msgtype,timer1_lthread@msgtype
  1358  00099C  0101               	movlb	1	; () banked
  1359  00099E  0101               	movlb	1	; () banked
  1360  0009A0  6BB9               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1361  0009A2  0102               	movlb	2	; () banked
  1362  0009A4  0102               	movlb	2	; () banked
  1363  0009A6  5122               	movf	main@length& (0+255),w,b
  1364  0009A8  0101               	movlb	1	; () banked
  1365  0009AA  0101               	movlb	1	; () banked
  1366  0009AC  6FBA               	movwf	timer1_lthread@length& (0+255),b
  1367  0009AE  0101               	movlb	1	; () banked
  1368  0009B0  6BBB               	clrf	(timer1_lthread@length+1)& (0+255),b
  1369  0009B2  0101               	movlb	1	; () banked
  1370  0009B4  BFBA               	btfsc	timer1_lthread@length& (0+255),7,b
  1371  0009B6  07BB               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1372  0009B8  0102               	movlb	2	; () banked
  1373  0009BA  0E02               	movlw	high main@msgbuffer
  1374  0009BC  0101               	movlb	1	; () banked
  1375  0009BE  0101               	movlb	1	; () banked
  1376  0009C0  6FBD               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1377  0009C2  0102               	movlb	2	; () banked
  1378  0009C4  0E00               	movlw	low main@msgbuffer
  1379  0009C6  0101               	movlb	1	; () banked
  1380  0009C8  0101               	movlb	1	; () banked
  1381  0009CA  6FBC               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1382  0009CC  EC23  F00B         	call	_timer1_lthread	;wreg free
  1383                           
  1384                           ;main.c: 354: break;
  1385  0009D0  D70B               	goto	l3345
  1386  0009D2                     l3379:
  1387                           
  1388                           ;main.c: 357: case 31:
  1389                           ;main.c: 358: case 32:
  1390                           ;main.c: 359: {
  1391                           ;main.c: 360: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1392  0009D2  0102               	movlb	2	; () banked
  1393  0009D4  0E02               	movlw	high main@uthread_data
  1394  0009D6  0101               	movlb	1	; () banked
  1395  0009D8  0101               	movlb	1	; () banked
  1396  0009DA  6FB7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1397  0009DC  0102               	movlb	2	; () banked
  1398  0009DE  0E10               	movlw	low main@uthread_data
  1399  0009E0  0101               	movlb	1	; () banked
  1400  0009E2  0101               	movlb	1	; () banked
  1401  0009E4  6FB6               	movwf	uart_lthread@uptr& (0+255),b
  1402  0009E6  0102               	movlb	2	; () banked
  1403  0009E8  0101               	movlb	1	; () banked
  1404  0009EA  C221  F1B8         	movff	main@msgtype,uart_lthread@msgtype
  1405  0009EE  0101               	movlb	1	; () banked
  1406  0009F0  0101               	movlb	1	; () banked
  1407  0009F2  6BB9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1408  0009F4  0102               	movlb	2	; () banked
  1409  0009F6  0102               	movlb	2	; () banked
  1410  0009F8  5122               	movf	main@length& (0+255),w,b
  1411  0009FA  0101               	movlb	1	; () banked
  1412  0009FC  0101               	movlb	1	; () banked
  1413  0009FE  6FBA               	movwf	uart_lthread@length& (0+255),b
  1414  000A00  0101               	movlb	1	; () banked
  1415  000A02  6BBB               	clrf	(uart_lthread@length+1)& (0+255),b
  1416  000A04  0101               	movlb	1	; () banked
  1417  000A06  BFBA               	btfsc	uart_lthread@length& (0+255),7,b
  1418  000A08  07BB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1419  000A0A  0102               	movlb	2	; () banked
  1420  000A0C  0E02               	movlw	high main@msgbuffer
  1421  000A0E  0101               	movlb	1	; () banked
  1422  000A10  0101               	movlb	1	; () banked
  1423  000A12  6FBD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1424  000A14  0102               	movlb	2	; () banked
  1425  000A16  0E00               	movlw	low main@msgbuffer
  1426  000A18  0101               	movlb	1	; () banked
  1427  000A1A  0101               	movlb	1	; () banked
  1428  000A1C  6FBC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1429  000A1E  EC48  F007         	call	_uart_lthread	;wreg free
  1430                           
  1431                           ;main.c: 361: break;
  1432  000A22  D6E2               	goto	l3345
  1433  000A24                     l3383:
  1434  000A24  0102               	movlb	2	; () banked
  1435  000A26  0102               	movlb	2	; () banked
  1436  000A28  5121               	movf	main@msgtype& (0+255),w,b
  1437                           
  1438                           ; Switch size 1, requested type "space"
  1439                           ; Number of cases is 4, Range of values is 11 to 32
  1440                           ; switch strategies available:
  1441                           ; Name         Instructions Cycles
  1442                           ; simple_byte           13     7 (average)
  1443                           ;	Chosen strategy is simple_byte
  1444  000A2A  0A0B               	xorlw	11	; case 11
  1445  000A2C  B4D8               	btfsc	status,2,c
  1446  000A2E  D7A8               	goto	l3377
  1447  000A30  0A15               	xorlw	21	; case 30
  1448  000A32  B4D8               	btfsc	status,2,c
  1449  000A34  D7CE               	goto	l3379
  1450  000A36  0A01               	xorlw	1	; case 31
  1451  000A38  B4D8               	btfsc	status,2,c
  1452  000A3A  D7CB               	goto	l3379
  1453  000A3C  0A3F               	xorlw	63	; case 32
  1454  000A3E  B4D8               	btfsc	status,2,c
  1455  000A40  D7C8               	goto	l3379
  1456  000A42  D6D2               	goto	l3345
  1457  000A44                     __end_of_main:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           postinc0	equ	0xFEE
  1461                           wreg	equ	0xFE8
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _uart_lthread *****************
  1465 ;; Defined at:
  1466 ;;		line 12 in file "src/uart_thread.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  uptr            2   20[BANK1 ] PTR struct __uart_thread
  1469 ;;		 -> main@uthread_data(10), 
  1470 ;;  msgtype         2   22[BANK1 ] int 
  1471 ;;  length          2   24[BANK1 ] int 
  1472 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1473 ;;		 -> main@msgbuffer(11), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  index           2   29[BANK1 ] int 
  1476 ;;  status          1   28[BANK1 ] char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   20[BANK1 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1486 ;;      Params:         0       0       8       0       0
  1487 ;;      Locals:         0       0       3       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         0       0      11       0       0
  1490 ;;Total ram usage:       11 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:   13
  1493 ;; This function calls:
  1494 ;;		_FromMainLow_sendmsg
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501  000E90                     __ptext1:
  1502                           	opt stack 0
  1503  000E90                     _uart_lthread:
  1504                           	opt stack 17
  1505                           
  1506                           ;uart_thread.c: 13: if (msgtype == 30) {
  1507                           
  1508                           ; BSR set to: 2
  1509                           ;incstack = 0
  1510  000E90  0101               	movlb	1	; () banked
  1511  000E92  0101               	movlb	1	; () banked
  1512  000E94  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1513  000E96  0A1E               	xorlw	30
  1514  000E98  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1515  000E9A  B4D8               	btfsc	status,2,c
  1516  000E9C  0012               	return	
  1517                           
  1518                           ; BSR set to: 1
  1519                           ;uart_thread.c: 16: else if(msgtype == 31){
  1520                           
  1521                           ; BSR set to: 1
  1522                           
  1523                           ; BSR set to: 1
  1524                           ;uart_thread.c: 15: }
  1525  000E9E  0101               	movlb	1	; () banked
  1526  000EA0  0101               	movlb	1	; () banked
  1527  000EA2  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1528  000EA4  0A1F               	xorlw	31
  1529  000EA6  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1530  000EA8  A4D8               	btfss	status,2,c
  1531  000EAA  D04F               	goto	l3581
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;uart_thread.c: 18: int index = 0;
  1535  000EAC  0E00               	movlw	0
  1536  000EAE  0101               	movlb	1	; () banked
  1537  000EB0  0101               	movlb	1	; () banked
  1538  000EB2  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1539  000EB4  0E00               	movlw	0
  1540  000EB6  0101               	movlb	1	; () banked
  1541  000EB8  6FBF               	movwf	uart_lthread@index& (0+255),b
  1542                           
  1543                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1544  000EBA  0E00               	movlw	0
  1545  000EBC  0101               	movlb	1	; () banked
  1546  000EBE  0101               	movlb	1	; () banked
  1547  000EC0  6FC0               	movwf	(uart_lthread@index+1)& (0+255),b
  1548  000EC2  0E00               	movlw	0
  1549  000EC4  0101               	movlb	1	; () banked
  1550  000EC6  6FBF               	movwf	uart_lthread@index& (0+255),b
  1551  000EC8                     
  1552                           ; BSR set to: 1
  1553  000EC8  0101               	movlb	1	; () banked
  1554  000ECA  0101               	movlb	1	; () banked
  1555  000ECC  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1556  000ECE  0A80               	xorlw	128
  1557  000ED0  0F80               	addlw	-128
  1558  000ED2  0E0A               	movlw	10
  1559  000ED4  B4D8               	btfsc	status,2,c
  1560  000ED6  5DBF               	subwf	uart_lthread@index& (0+255),w,b
  1561  000ED8  B0D8               	btfsc	status,0,c
  1562  000EDA  D023               	goto	l3577
  1563                           
  1564                           ; BSR set to: 1
  1565                           
  1566                           ; BSR set to: 1
  1567                           
  1568                           ; BSR set to: 1
  1569  000EDC  0101               	movlb	1	; () banked
  1570  000EDE  0101               	movlb	1	; () banked
  1571  000EE0  51BF               	movf	uart_lthread@index& (0+255),w,b
  1572  000EE2  0101               	movlb	1	; () banked
  1573  000EE4  0101               	movlb	1	; () banked
  1574  000EE6  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1575  000EE8  6ED9               	movwf	fsr2l,c
  1576  000EEA  0101               	movlb	1	; () banked
  1577  000EEC  0101               	movlb	1	; () banked
  1578  000EEE  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1579  000EF0  0101               	movlb	1	; () banked
  1580  000EF2  0101               	movlb	1	; () banked
  1581  000EF4  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1582  000EF6  6EDA               	movwf	fsr2h,c
  1583  000EF8  0101               	movlb	1	; () banked
  1584  000EFA  0101               	movlb	1	; () banked
  1585  000EFC  51BF               	movf	uart_lthread@index& (0+255),w,b
  1586  000EFE  0101               	movlb	1	; () banked
  1587  000F00  0101               	movlb	1	; () banked
  1588  000F02  25B6               	addwf	uart_lthread@uptr& (0+255),w,b
  1589  000F04  6EE1               	movwf	fsr1l,c
  1590  000F06  0101               	movlb	1	; () banked
  1591  000F08  0101               	movlb	1	; () banked
  1592  000F0A  51C0               	movf	(uart_lthread@index+1)& (0+255),w,b
  1593  000F0C  0101               	movlb	1	; () banked
  1594  000F0E  0101               	movlb	1	; () banked
  1595  000F10  21B7               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1596  000F12  6EE2               	movwf	fsr1h,c
  1597  000F14  CFDF FFE7          	movff	indf2,indf1
  1598                           
  1599                           ; BSR set to: 1
  1600  000F18  0101               	movlb	1	; () banked
  1601  000F1A  0101               	movlb	1	; () banked
  1602  000F1C  4BBF               	infsnz	uart_lthread@index& (0+255),f,b
  1603  000F1E  2BC0               	incf	(uart_lthread@index+1)& (0+255),f,b
  1604  000F20  D7D3               	goto	L3
  1605  000F22                     l3577:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1609  000F22  C1B8  F1B2         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1610  000F26  0101               	movlb	1	; () banked
  1611  000F28  0101               	movlb	1	; () banked
  1612  000F2A  C1B7  F1B4         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1613  000F2E  0101               	movlb	1	; () banked
  1614  000F30  0101               	movlb	1	; () banked
  1615  000F32  C1B6  F1B3         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1616  000F36  0101               	movlb	1	; () banked
  1617  000F38  0101               	movlb	1	; () banked
  1618  000F3A  51BA               	movf	uart_lthread@length& (0+255),w,b
  1619  000F3C  EC2E  F00D         	call	_FromMainLow_sendmsg
  1620  000F40  0101               	movlb	1	; () banked
  1621  000F42  0101               	movlb	1	; () banked
  1622  000F44  6FBE               	movwf	uart_lthread@status& (0+255),b
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;uart_thread.c: 25: }
  1626                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1627                           
  1628                           ; BSR set to: 1
  1629  000F46  889D               	bsf	3997,4,c	;volatile
  1630                           
  1631                           ;uart_thread.c: 29: }
  1632  000F48  0012               	return	
  1633  000F4A                     l3581:
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;uart_thread.c: 30: else if(msgtype == 32){
  1637  000F4A  0101               	movlb	1	; () banked
  1638  000F4C  0101               	movlb	1	; () banked
  1639  000F4E  51B8               	movf	uart_lthread@msgtype& (0+255),w,b
  1640  000F50  0A20               	xorlw	32
  1641  000F52  11B9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1642  000F54  A4D8               	btfss	status,2,c
  1643  000F56  0012               	return	
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1647  000F58  0101               	movlb	1	; () banked
  1648  000F5A  0101               	movlb	1	; () banked
  1649  000F5C  51BA               	movf	uart_lthread@length& (0+255),w,b
  1650  000F5E  0101               	movlb	1	; () banked
  1651  000F60  0101               	movlb	1	; () banked
  1652  000F62  25BC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1653  000F64  6ED9               	movwf	fsr2l,c
  1654  000F66  0101               	movlb	1	; () banked
  1655  000F68  0101               	movlb	1	; () banked
  1656  000F6A  51BB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1657  000F6C  0101               	movlb	1	; () banked
  1658  000F6E  0101               	movlb	1	; () banked
  1659  000F70  21BD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1660  000F72  6EDA               	movwf	fsr2h,c
  1661  000F74  0E00               	movlw	0
  1662  000F76  6EDF               	movwf	indf2,c
  1663  000F78  0012               	return	
  1664  000F7A                     __end_of_uart_lthread:
  1665                           	opt stack 0
  1666                           tblptru	equ	0xFF8
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           indf1	equ	0xFE7
  1670                           fsr1h	equ	0xFE2
  1671                           fsr1l	equ	0xFE1
  1672                           indf2	equ	0xFDF
  1673                           fsr2h	equ	0xFDA
  1674                           fsr2l	equ	0xFD9
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _FromMainLow_sendmsg *****************
  1678 ;; Defined at:
  1679 ;;		line 150 in file "src/messages.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  length          1    wreg     unsigned char 
  1682 ;;  msgtype         1   16[BANK1 ] unsigned char 
  1683 ;;  data            2   17[BANK1 ] PTR void 
  1684 ;;		 -> main@uthread_data(10), 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  length          1   19[BANK1 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      char 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1696 ;;      Params:         0       0       3       0       0
  1697 ;;      Locals:         0       0       1       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         0       0       4       0       0
  1700 ;;Total ram usage:        4 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:   12
  1703 ;; This function calls:
  1704 ;;		_send_msg
  1705 ;; This function is called by:
  1706 ;;		_uart_lthread
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text2
  1711  001A5C                     __ptext2:
  1712                           	opt stack 0
  1713  001A5C                     _FromMainLow_sendmsg:
  1714                           	opt stack 17
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;incstack = 0
  1718                           ;FromMainLow_sendmsg@length stored from wreg
  1719  001A5C  CFE8 F1B5          	movff	wreg,FromMainLow_sendmsg@length
  1720                           
  1721                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1722  001A60  0101               	movlb	1	; () banked
  1723  001A62  0E01               	movlw	high _FromMainLow_MQ
  1724  001A64  0101               	movlb	1	; () banked
  1725  001A66  0101               	movlb	1	; () banked
  1726  001A68  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1727  001A6A  0101               	movlb	1	; () banked
  1728  001A6C  0E36               	movlw	low _FromMainLow_MQ
  1729  001A6E  0101               	movlb	1	; () banked
  1730  001A70  0101               	movlb	1	; () banked
  1731  001A72  6FA6               	movwf	send_msg@qptr& (0+255),b
  1732  001A74  C1B5  F1A8         	movff	FromMainLow_sendmsg@length,send_msg@length
  1733  001A78  C1B2  F1A9         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1734  001A7C  0101               	movlb	1	; () banked
  1735  001A7E  0101               	movlb	1	; () banked
  1736  001A80  C1B4  F1AB         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1737  001A84  0101               	movlb	1	; () banked
  1738  001A86  0101               	movlb	1	; () banked
  1739  001A88  C1B3  F1AA         	movff	FromMainLow_sendmsg@data,send_msg@data
  1740  001A8C  EC44  F006         	call	_send_msg	;wreg free
  1741  001A90  0012               	return	
  1742  001A92                     __end_of_FromMainLow_sendmsg:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf1	equ	0xFE7
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           indf2	equ	0xFDF
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _timer1_lthread *****************
  1756 ;; Defined at:
  1757 ;;		line 14 in file "src/timer1_thread.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  tptr            2   20[BANK1 ] PTR struct __timer1_thre
  1760 ;;		 -> main@t1thread_data(2), 
  1761 ;;  msgtype         2   22[BANK1 ] int 
  1762 ;;  length          2   24[BANK1 ] int 
  1763 ;;  msgbuffer       2   26[BANK1 ] PTR unsigned char 
  1764 ;;		 -> main@msgbuffer(11), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  retval          1   29[BANK1 ] char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   20[BANK1 ] int 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1776 ;;      Params:         0       0       8       0       0
  1777 ;;      Locals:         0       0       1       0       0
  1778 ;;      Temps:          0       0       1       0       0
  1779 ;;      Totals:         0       0      10       0       0
  1780 ;;Total ram usage:       10 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:   13
  1783 ;; This function calls:
  1784 ;;		_FromMainHigh_sendmsg
  1785 ;;		___lwmod
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text3
  1792  001646                     __ptext3:
  1793                           	opt stack 0
  1794  001646                     _timer1_lthread:
  1795                           	opt stack 17
  1796                           
  1797                           ;timer1_thread.c: 15: signed char retval;
  1798                           ;timer1_thread.c: 17: tptr->msgcount++;
  1799                           
  1800                           ;incstack = 0
  1801  001646  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1802  00164A  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1803  00164E  2ADE               	incf	postinc2,f,c
  1804  001650  0E00               	movlw	0
  1805  001652  22DD               	addwfc	postdec2,f,c
  1806                           
  1807                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1808  001654  C1B6  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1809  001658  C1B7  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1810  00165C  0100               	movlb	0	; () banked
  1811  00165E  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  1812  001662  0100               	movlb	0	; () banked
  1813  001664  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  1814  001668  0E00               	movlw	0
  1815  00166A  0100               	movlb	0	; () banked
  1816  00166C  0100               	movlb	0	; () banked
  1817  00166E  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1818  001670  0E0A               	movlw	10
  1819  001672  0100               	movlb	0	; () banked
  1820  001674  6FD9               	movwf	___lwmod@divisor& (0+255),b
  1821  001676  ECDF  F009         	call	___lwmod	;wreg free
  1822  00167A  0100               	movlb	0	; () banked
  1823  00167C  0100               	movlb	0	; () banked
  1824  00167E  51D7               	movf	?___lwmod& (0+255),w,b
  1825  001680  0A09               	xorlw	9
  1826  001682  0100               	movlb	0	; () banked
  1827  001684  11D8               	iorwf	(?___lwmod+1)& (0+255),w,b
  1828  001686  A4D8               	btfss	status,2,c
  1829  001688  0012               	return	
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1833  00168A  0101               	movlb	1	; () banked
  1834  00168C  6FBE               	movwf	??_timer1_lthread& (0+255),b
  1835  00168E  0E14               	movlw	20
  1836  001690  0101               	movlb	1	; () banked
  1837  001692  0101               	movlb	1	; () banked
  1838  001694  6FB2               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1839  001696  0101               	movlb	1	; () banked
  1840  001698  51BE               	movf	??_timer1_lthread& (0+255),w,b
  1841  00169A  0101               	movlb	1	; () banked
  1842  00169C  0101               	movlb	1	; () banked
  1843  00169E  C1B7  F1B4         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1844  0016A2  0101               	movlb	1	; () banked
  1845  0016A4  0101               	movlb	1	; () banked
  1846  0016A6  C1B6  F1B3         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1847  0016AA  0E02               	movlw	2
  1848  0016AC  EC49  F00D         	call	_FromMainHigh_sendmsg
  1849  0016B0  0101               	movlb	1	; () banked
  1850  0016B2  0101               	movlb	1	; () banked
  1851  0016B4  6FBF               	movwf	timer1_lthread@retval& (0+255),b
  1852  0016B6  0012               	return	
  1853  0016B8                     __end_of_timer1_lthread:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           indf1	equ	0xFE7
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function ___lwmod *****************
  1869 ;; Defined at:
  1870 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  dividend        2   33[BANK0 ] unsigned int 
  1873 ;;  divisor         2   35[BANK0 ] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  counter         1   38[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   33[BANK0 ] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1885 ;;      Params:         0       4       0       0       0
  1886 ;;      Locals:         0       1       0       0       0
  1887 ;;      Temps:          0       1       0       0       0
  1888 ;;      Totals:         0       6       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   10
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_timer1_lthread
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text4
  1900  0013BE                     __ptext4:
  1901                           	opt stack 0
  1902  0013BE                     ___lwmod:
  1903                           	opt stack 19
  1904                           
  1905                           ;incstack = 0
  1906  0013BE  0100               	movlb	0	; () banked
  1907  0013C0  0100               	movlb	0	; () banked
  1908  0013C2  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1909  0013C4  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  1910  0013C6  B4D8               	btfsc	status,2,c
  1911  0013C8  D03A               	goto	l1037
  1912                           
  1913                           ; BSR set to: 0
  1914  0013CA  0100               	movlb	0	; () banked
  1915  0013CC  6FDB               	movwf	??___lwmod& (0+255),b
  1916  0013CE  0E01               	movlw	1
  1917  0013D0  0100               	movlb	0	; () banked
  1918  0013D2  0100               	movlb	0	; () banked
  1919  0013D4  6FDC               	movwf	___lwmod@counter& (0+255),b
  1920  0013D6  0100               	movlb	0	; () banked
  1921  0013D8  51DB               	movf	??___lwmod& (0+255),w,b
  1922  0013DA  D009               	goto	l3735
  1923  0013DC                     l3733:
  1924                           
  1925                           ; BSR set to: 0
  1926  0013DC  0100               	movlb	0	; () banked
  1927  0013DE  0100               	movlb	0	; () banked
  1928  0013E0  0100               	movlb	0	; () banked
  1929  0013E2  90D8               	bcf	status,0,c
  1930  0013E4  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  1931  0013E6  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1932  0013E8  0100               	movlb	0	; () banked
  1933  0013EA  0100               	movlb	0	; () banked
  1934  0013EC  2BDC               	incf	___lwmod@counter& (0+255),f,b
  1935  0013EE                     l3735:
  1936                           
  1937                           ; BSR set to: 0
  1938  0013EE  0100               	movlb	0	; () banked
  1939  0013F0  0100               	movlb	0	; () banked
  1940  0013F2  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1941  0013F4  D7F3               	goto	l3733
  1942  0013F6                     l3737:
  1943                           
  1944                           ; BSR set to: 0
  1945  0013F6  0100               	movlb	0	; () banked
  1946  0013F8  0100               	movlb	0	; () banked
  1947  0013FA  51D9               	movf	___lwmod@divisor& (0+255),w,b
  1948  0013FC  0100               	movlb	0	; () banked
  1949  0013FE  0100               	movlb	0	; () banked
  1950  001400  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  1951  001402  0100               	movlb	0	; () banked
  1952  001404  0100               	movlb	0	; () banked
  1953  001406  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1954  001408  0100               	movlb	0	; () banked
  1955  00140A  0100               	movlb	0	; () banked
  1956  00140C  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1957  00140E  A0D8               	btfss	status,0,c
  1958  001410  D00C               	goto	l3741
  1959                           
  1960                           ; BSR set to: 0
  1961  001412  0100               	movlb	0	; () banked
  1962  001414  0100               	movlb	0	; () banked
  1963  001416  51D9               	movf	___lwmod@divisor& (0+255),w,b
  1964  001418  0100               	movlb	0	; () banked
  1965  00141A  0100               	movlb	0	; () banked
  1966  00141C  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  1967  00141E  0100               	movlb	0	; () banked
  1968  001420  0100               	movlb	0	; () banked
  1969  001422  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1970  001424  0100               	movlb	0	; () banked
  1971  001426  0100               	movlb	0	; () banked
  1972  001428  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1973  00142A                     l3741:
  1974                           
  1975                           ; BSR set to: 0
  1976  00142A  0100               	movlb	0	; () banked
  1977  00142C  0100               	movlb	0	; () banked
  1978  00142E  0100               	movlb	0	; () banked
  1979  001430  90D8               	bcf	status,0,c
  1980  001432  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1981  001434  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  1982                           
  1983                           ; BSR set to: 0
  1984  001436  0100               	movlb	0	; () banked
  1985  001438  0100               	movlb	0	; () banked
  1986  00143A  2FDC               	decfsz	___lwmod@counter& (0+255),f,b
  1987  00143C  D7DC               	goto	l3737
  1988  00143E                     l1037:
  1989                           
  1990                           ; BSR set to: 0
  1991  00143E  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  1992  001442  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  1993                           
  1994                           ; BSR set to: 0
  1995  001446  0012               	return	
  1996  001448                     __end_of___lwmod:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           indf1	equ	0xFE7
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           indf2	equ	0xFDF
  2005                           postinc2	equ	0xFDE
  2006                           postdec2	equ	0xFDD
  2007                           fsr2h	equ	0xFDA
  2008                           fsr2l	equ	0xFD9
  2009                           status	equ	0xFD8
  2010                           
  2011 ;; *************** function _FromMainHigh_sendmsg *****************
  2012 ;; Defined at:
  2013 ;;		line 174 in file "src/messages.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  length          1    wreg     unsigned char 
  2016 ;;  msgtype         1   16[BANK1 ] unsigned char 
  2017 ;;  data            2   17[BANK1 ] PTR void 
  2018 ;;		 -> main@t1thread_data(2), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  length          1   19[BANK1 ] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      char 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2030 ;;      Params:         0       0       3       0       0
  2031 ;;      Locals:         0       0       1       0       0
  2032 ;;      Temps:          0       0       0       0       0
  2033 ;;      Totals:         0       0       4       0       0
  2034 ;;Total ram usage:        4 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:   12
  2037 ;; This function calls:
  2038 ;;		_send_msg
  2039 ;; This function is called by:
  2040 ;;		_timer1_lthread
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text5
  2045  001A92                     __ptext5:
  2046                           	opt stack 0
  2047  001A92                     _FromMainHigh_sendmsg:
  2048                           	opt stack 17
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;incstack = 0
  2052                           ;FromMainHigh_sendmsg@length stored from wreg
  2053  001A92  CFE8 F1B5          	movff	wreg,FromMainHigh_sendmsg@length
  2054                           
  2055                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2056  001A96  0101               	movlb	1	; () banked
  2057  001A98  0E01               	movlw	high _FromMainHigh_MQ
  2058  001A9A  0101               	movlb	1	; () banked
  2059  001A9C  0101               	movlb	1	; () banked
  2060  001A9E  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  2061  001AA0  0101               	movlb	1	; () banked
  2062  001AA2  0E00               	movlw	low _FromMainHigh_MQ
  2063  001AA4  0101               	movlb	1	; () banked
  2064  001AA6  0101               	movlb	1	; () banked
  2065  001AA8  6FA6               	movwf	send_msg@qptr& (0+255),b
  2066  001AAA  C1B5  F1A8         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2067  001AAE  C1B2  F1A9         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2068  001AB2  0101               	movlb	1	; () banked
  2069  001AB4  0101               	movlb	1	; () banked
  2070  001AB6  C1B4  F1AB         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2071  001ABA  0101               	movlb	1	; () banked
  2072  001ABC  0101               	movlb	1	; () banked
  2073  001ABE  C1B3  F1AA         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2074  001AC2  EC44  F006         	call	_send_msg	;wreg free
  2075  001AC6  0012               	return	
  2076  001AC8                     __end_of_FromMainHigh_sendmsg:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           indf1	equ	0xFE7
  2082                           fsr1h	equ	0xFE2
  2083                           fsr1l	equ	0xFE1
  2084                           indf2	equ	0xFDF
  2085                           postinc2	equ	0xFDE
  2086                           postdec2	equ	0xFDD
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _send_msg *****************
  2092 ;; Defined at:
  2093 ;;		line 24 in file "src/messages.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  2096 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2097 ;;  length          1    6[BANK1 ] unsigned char 
  2098 ;;  msgtype         1    7[BANK1 ] unsigned char 
  2099 ;;  data            2    8[BANK1 ] PTR void 
  2100 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  2101 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  2104 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2105 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2106 ;;  tlength         2   11[BANK1 ] unsigned int 
  2107 ;;  slot            1   13[BANK1 ] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      char 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2117 ;;      Params:         0       0       6       0       0
  2118 ;;      Locals:         0       0       5       0       0
  2119 ;;      Temps:          0       0       1       0       0
  2120 ;;      Totals:         0       0      12       0       0
  2121 ;;Total ram usage:       12 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:   11
  2124 ;; This function calls:
  2125 ;;		_memcpy
  2126 ;; This function is called by:
  2127 ;;		_FromMainLow_sendmsg
  2128 ;;		_FromMainHigh_sendmsg
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text6
  2133  000C88                     __ptext6:
  2134                           	opt stack 0
  2135  000C88                     _send_msg:
  2136                           	opt stack 17
  2137                           
  2138                           ;messages.c: 25: unsigned char slot;
  2139                           ;messages.c: 27: msg *qmsg;
  2140                           ;messages.c: 28: size_t tlength = length;
  2141                           
  2142                           ;incstack = 0
  2143  000C88  0101               	movlb	1	; () banked
  2144  000C8A  0101               	movlb	1	; () banked
  2145  000C8C  C1A8  F1AD         	movff	send_msg@length,send_msg@tlength
  2146  000C90  0101               	movlb	1	; () banked
  2147  000C92  0101               	movlb	1	; () banked
  2148  000C94  6BAE               	clrf	(send_msg@tlength+1)& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2152  000C96  0101               	movlb	1	; () banked
  2153  000C98  EE20 F034          	lfsr	2,52
  2154  000C9C  0101               	movlb	1	; () banked
  2155  000C9E  51A6               	movf	send_msg@qptr& (0+255),w,b
  2156  000CA0  26D9               	addwf	fsr2l,f,c
  2157  000CA2  0101               	movlb	1	; () banked
  2158  000CA4  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2159  000CA6  22DA               	addwfc	fsr2h,f,c
  2160  000CA8  50DF               	movf	indf2,w,c
  2161  000CAA  0101               	movlb	1	; () banked
  2162  000CAC  0101               	movlb	1	; () banked
  2163  000CAE  6FAF               	movwf	send_msg@slot& (0+255),b
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2167  000CB0  0101               	movlb	1	; () banked
  2168  000CB2  0101               	movlb	1	; () banked
  2169  000CB4  51AF               	movf	send_msg@slot& (0+255),w,b
  2170  000CB6  0D0D               	mullw	13
  2171  000CB8  50F3               	movf	prodl,w,c
  2172  000CBA  0101               	movlb	1	; () banked
  2173  000CBC  0101               	movlb	1	; () banked
  2174  000CBE  25A6               	addwf	send_msg@qptr& (0+255),w,b
  2175  000CC0  0101               	movlb	1	; () banked
  2176  000CC2  0101               	movlb	1	; () banked
  2177  000CC4  6FB0               	movwf	send_msg@qmsg& (0+255),b
  2178  000CC6  50F4               	movf	prodh,w,c
  2179  000CC8  0101               	movlb	1	; () banked
  2180  000CCA  0101               	movlb	1	; () banked
  2181  000CCC  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2182  000CCE  0101               	movlb	1	; () banked
  2183  000CD0  6FB1               	movwf	(send_msg@qmsg+1)& (0+255),b
  2184                           
  2185                           ; BSR set to: 1
  2186                           ;messages.c: 41: if (qmsg->full != 0) {
  2187  000CD2  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2188  000CD6  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2189  000CDA  50DF               	movf	indf2,w,c
  2190  000CDC  B4D8               	btfsc	status,2,c
  2191  000CDE  D002               	goto	l3611
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;messages.c: 42: return (-1);
  2195  000CE0  0EFF               	movlw	255
  2196  000CE2  0012               	return	
  2197  000CE4                     l3611:
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;messages.c: 43: }
  2201                           ;messages.c: 46: qmsg->length = length;
  2202  000CE4  0101               	movlb	1	; () banked
  2203  000CE6  EE20 F001          	lfsr	2,1
  2204  000CEA  0101               	movlb	1	; () banked
  2205  000CEC  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2206  000CEE  26D9               	addwf	fsr2l,f,c
  2207  000CF0  0101               	movlb	1	; () banked
  2208  000CF2  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2209  000CF4  22DA               	addwfc	fsr2h,f,c
  2210  000CF6  0101               	movlb	1	; () banked
  2211  000CF8  C1A8  FFDF         	movff	send_msg@length,indf2
  2212                           
  2213                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2214  000CFC  0101               	movlb	1	; () banked
  2215  000CFE  EE20 F002          	lfsr	2,2
  2216  000D02  0101               	movlb	1	; () banked
  2217  000D04  51B0               	movf	send_msg@qmsg& (0+255),w,b
  2218  000D06  26D9               	addwf	fsr2l,f,c
  2219  000D08  0101               	movlb	1	; () banked
  2220  000D0A  51B1               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2221  000D0C  22DA               	addwfc	fsr2h,f,c
  2222  000D0E  0101               	movlb	1	; () banked
  2223  000D10  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2227  000D14  0E03               	movlw	3
  2228  000D16  0101               	movlb	1	; () banked
  2229  000D18  0101               	movlb	1	; () banked
  2230  000D1A  25B0               	addwf	send_msg@qmsg& (0+255),w,b
  2231  000D1C  0100               	movlb	0	; () banked
  2232  000D1E  0100               	movlb	0	; () banked
  2233  000D20  6FD7               	movwf	memcpy@d1& (0+255),b
  2234  000D22  0E00               	movlw	0
  2235  000D24  0101               	movlb	1	; () banked
  2236  000D26  0101               	movlb	1	; () banked
  2237  000D28  21B1               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2238  000D2A  0100               	movlb	0	; () banked
  2239  000D2C  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  2240  000D2E  0101               	movlb	1	; () banked
  2241  000D30  0100               	movlb	0	; () banked
  2242  000D32  C1AB  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  2243  000D36  0101               	movlb	1	; () banked
  2244  000D38  0100               	movlb	0	; () banked
  2245  000D3A  C1AA  F0D9         	movff	send_msg@data,memcpy@s1
  2246  000D3E  C1AD  F0DB         	movff	send_msg@tlength,memcpy@n
  2247  000D42  C1AE  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  2248  000D46  ECC8  F00B         	call	_memcpy	;wreg free
  2249                           
  2250                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2251  000D4A  0101               	movlb	1	; () banked
  2252  000D4C  EE20 F034          	lfsr	2,52
  2253  000D50  0101               	movlb	1	; () banked
  2254  000D52  51A6               	movf	send_msg@qptr& (0+255),w,b
  2255  000D54  26D9               	addwf	fsr2l,f,c
  2256  000D56  0101               	movlb	1	; () banked
  2257  000D58  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2258  000D5A  22DA               	addwfc	fsr2h,f,c
  2259  000D5C  0101               	movlb	1	; () banked
  2260  000D5E  EE10 F034          	lfsr	1,52
  2261  000D62  0101               	movlb	1	; () banked
  2262  000D64  51A6               	movf	send_msg@qptr& (0+255),w,b
  2263  000D66  26E1               	addwf	fsr1l,f,c
  2264  000D68  0101               	movlb	1	; () banked
  2265  000D6A  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2266  000D6C  22E2               	addwfc	fsr1h,f,c
  2267  000D6E  50E7               	movf	indf1,w,c
  2268  000D70  0101               	movlb	1	; () banked
  2269  000D72  6FAC               	movwf	??_send_msg& (0+255),b
  2270  000D74  0101               	movlb	1	; () banked
  2271  000D76  29AC               	incf	??_send_msg& (0+255),w,b
  2272  000D78  0B03               	andlw	3
  2273  000D7A  6EDF               	movwf	indf2,c
  2274                           
  2275                           ; BSR set to: 1
  2276                           ;messages.c: 59: qmsg->full = 1;
  2277  000D7C  C1B0  FFD9         	movff	send_msg@qmsg,fsr2l
  2278  000D80  C1B1  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2279  000D84  0E01               	movlw	1
  2280  000D86  6EDF               	movwf	indf2,c
  2281                           
  2282                           ; BSR set to: 1
  2283                           ;messages.c: 60: return (1);
  2284  000D88  0E01               	movlw	1
  2285  000D8A  0012               	return	
  2286  000D8C                     __end_of_send_msg:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           prodh	equ	0xFF4
  2290                           prodl	equ	0xFF3
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           indf1	equ	0xFE7
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           postinc2	equ	0xFDE
  2298                           postdec2	equ	0xFDD
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           
  2303 ;; *************** function _timer0_lthread *****************
  2304 ;; Defined at:
  2305 ;;		line 9 in file "src/timer0_thread.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2308 ;;		 -> main@t0thread_data(2), 
  2309 ;;  msgtype         2    2[BANK1 ] int 
  2310 ;;  length          2    4[BANK1 ] int 
  2311 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2312 ;;		 -> main@msgbuffer(11), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2315 ;;		 -> main@msgbuffer(11), 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  2    0[BANK1 ] int 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2325 ;;      Params:         0       0       8       0       0
  2326 ;;      Locals:         0       2       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         0       2       8       0       0
  2329 ;;Total ram usage:       10 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:   10
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340  001CF4                     __ptext7:
  2341                           	opt stack 0
  2342  001CF4                     _timer0_lthread:
  2343                           	opt stack 20
  2344                           
  2345                           ;timer0_thread.c: 10: unsigned int *msgval;
  2346                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;incstack = 0
  2350  001CF4  0101               	movlb	1	; () banked
  2351  001CF6  0100               	movlb	0	; () banked
  2352  001CF8  C1A9  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2353  001CFC  0101               	movlb	1	; () banked
  2354  001CFE  0100               	movlb	0	; () banked
  2355  001D00  C1A8  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2356                           
  2357                           ; BSR set to: 0
  2358  001D04  0012               	return	
  2359  001D06                     __end_of_timer0_lthread:
  2360                           	opt stack 0
  2361                           tblptru	equ	0xFF8
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           indf1	equ	0xFE7
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           postinc2	equ	0xFDE
  2371                           postdec2	equ	0xFDD
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _start_i2c_slave_reply *****************
  2377 ;; Defined at:
  2378 ;;		line 53 in file "src/my_i2c.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  length          1    wreg     unsigned char 
  2381 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  2382 ;;		 -> main@msgbuffer(11), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  length          1   37[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2394 ;;      Params:         0       2       0       0       0
  2395 ;;      Locals:         0       1       0       0       0
  2396 ;;      Temps:          0       2       0       0       0
  2397 ;;      Totals:         0       5       0       0       0
  2398 ;;Total ram usage:        5 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:   10
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text8
  2409  000B7A                     __ptext8:
  2410                           	opt stack 0
  2411  000B7A                     _start_i2c_slave_reply:
  2412                           	opt stack 20
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;incstack = 0
  2416                           ;start_i2c_slave_reply@length stored from wreg
  2417  000B7A  CFE8 F0DB          	movff	wreg,start_i2c_slave_reply@length
  2418                           
  2419                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2420  000B7E  0100               	movlb	0	; () banked
  2421  000B80  EE20 F019          	lfsr	2,25
  2422  000B84  0100               	movlb	0	; () banked
  2423  000B86  51DD               	movf	_ic_ptr& (0+255),w,b
  2424  000B88  26D9               	addwf	fsr2l,f,c
  2425  000B8A  0100               	movlb	0	; () banked
  2426  000B8C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2427  000B8E  22DA               	addwfc	fsr2h,f,c
  2428  000B90  0E00               	movlw	0
  2429  000B92  6EDF               	movwf	indf2,c
  2430  000B94  D042               	goto	l3541
  2431  000B96                     l3537:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2435  000B96  0100               	movlb	0	; () banked
  2436  000B98  EE20 F019          	lfsr	2,25
  2437  000B9C  0100               	movlb	0	; () banked
  2438  000B9E  51DD               	movf	_ic_ptr& (0+255),w,b
  2439  000BA0  26D9               	addwf	fsr2l,f,c
  2440  000BA2  0100               	movlb	0	; () banked
  2441  000BA4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2442  000BA6  22DA               	addwfc	fsr2h,f,c
  2443  000BA8  50DF               	movf	indf2,w,c
  2444  000BAA  0100               	movlb	0	; () banked
  2445  000BAC  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2446  000BAE  0100               	movlb	0	; () banked
  2447  000BB0  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2448  000BB2  0D01               	mullw	1
  2449  000BB4  50F3               	movf	prodl,w,c
  2450  000BB6  0100               	movlb	0	; () banked
  2451  000BB8  0100               	movlb	0	; () banked
  2452  000BBA  25D7               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2453  000BBC  6ED9               	movwf	fsr2l,c
  2454  000BBE  50F4               	movf	prodh,w,c
  2455  000BC0  0100               	movlb	0	; () banked
  2456  000BC2  0100               	movlb	0	; () banked
  2457  000BC4  21D8               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2458  000BC6  6EDA               	movwf	fsr2h,c
  2459  000BC8  0100               	movlb	0	; () banked
  2460  000BCA  EE10 F019          	lfsr	1,25
  2461  000BCE  0100               	movlb	0	; () banked
  2462  000BD0  51DD               	movf	_ic_ptr& (0+255),w,b
  2463  000BD2  26E1               	addwf	fsr1l,f,c
  2464  000BD4  0100               	movlb	0	; () banked
  2465  000BD6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2466  000BD8  22E2               	addwfc	fsr1h,f,c
  2467  000BDA  50E7               	movf	indf1,w,c
  2468  000BDC  0100               	movlb	0	; () banked
  2469  000BDE  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2470  000BE0  0100               	movlb	0	; () banked
  2471  000BE2  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2472  000BE4  0D01               	mullw	1
  2473  000BE6  0E0F               	movlw	15
  2474  000BE8  26F3               	addwf	prodl,f,c
  2475  000BEA  0E00               	movlw	0
  2476  000BEC  22F4               	addwfc	prodh,f,c
  2477  000BEE  50F3               	movf	prodl,w,c
  2478  000BF0  0100               	movlb	0	; () banked
  2479  000BF2  0100               	movlb	0	; () banked
  2480  000BF4  25DD               	addwf	_ic_ptr& (0+255),w,b
  2481  000BF6  6EE1               	movwf	fsr1l,c
  2482  000BF8  50F4               	movf	prodh,w,c
  2483  000BFA  0100               	movlb	0	; () banked
  2484  000BFC  0100               	movlb	0	; () banked
  2485  000BFE  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2486  000C00  6EE2               	movwf	fsr1h,c
  2487  000C02  CFDF FFE7          	movff	indf2,indf1
  2488                           
  2489                           ; BSR set to: 0
  2490  000C06  0100               	movlb	0	; () banked
  2491  000C08  EE20 F019          	lfsr	2,25
  2492  000C0C  0100               	movlb	0	; () banked
  2493  000C0E  51DD               	movf	_ic_ptr& (0+255),w,b
  2494  000C10  26D9               	addwf	fsr2l,f,c
  2495  000C12  0100               	movlb	0	; () banked
  2496  000C14  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2497  000C16  22DA               	addwfc	fsr2h,f,c
  2498  000C18  2ADF               	incf	indf2,f,c
  2499  000C1A                     l3541:
  2500                           
  2501                           ; BSR set to: 0
  2502  000C1A  0100               	movlb	0	; () banked
  2503  000C1C  EE20 F019          	lfsr	2,25
  2504  000C20  0100               	movlb	0	; () banked
  2505  000C22  51DD               	movf	_ic_ptr& (0+255),w,b
  2506  000C24  26D9               	addwf	fsr2l,f,c
  2507  000C26  0100               	movlb	0	; () banked
  2508  000C28  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2509  000C2A  22DA               	addwfc	fsr2h,f,c
  2510  000C2C  50DF               	movf	indf2,w,c
  2511  000C2E  0100               	movlb	0	; () banked
  2512  000C30  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2513  000C32  0100               	movlb	0	; () banked
  2514  000C34  0100               	movlb	0	; () banked
  2515  000C36  51DB               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2516  000C38  0100               	movlb	0	; () banked
  2517  000C3A  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2518  000C3C  A0D8               	btfss	status,0,c
  2519  000C3E  D7AB               	goto	l3537
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;my_i2c.c: 57: }
  2523                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2524                           
  2525                           ; BSR set to: 0
  2526  000C40  0100               	movlb	0	; () banked
  2527  000C42  EE20 F019          	lfsr	2,25
  2528  000C46  0100               	movlb	0	; () banked
  2529  000C48  51DD               	movf	_ic_ptr& (0+255),w,b
  2530  000C4A  26D9               	addwf	fsr2l,f,c
  2531  000C4C  0100               	movlb	0	; () banked
  2532  000C4E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2533  000C50  22DA               	addwfc	fsr2h,f,c
  2534  000C52  0100               	movlb	0	; () banked
  2535  000C54  C0DB  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2536                           
  2537                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2538  000C58  0100               	movlb	0	; () banked
  2539  000C5A  EE20 F01A          	lfsr	2,26
  2540  000C5E  0100               	movlb	0	; () banked
  2541  000C60  51DD               	movf	_ic_ptr& (0+255),w,b
  2542  000C62  26D9               	addwf	fsr2l,f,c
  2543  000C64  0100               	movlb	0	; () banked
  2544  000C66  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2545  000C68  22DA               	addwfc	fsr2h,f,c
  2546  000C6A  0E01               	movlw	1
  2547  000C6C  6EDF               	movwf	indf2,c
  2548                           
  2549                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2550  000C6E  0100               	movlb	0	; () banked
  2551  000C70  EE20 F00F          	lfsr	2,15
  2552  000C74  0100               	movlb	0	; () banked
  2553  000C76  51DD               	movf	_ic_ptr& (0+255),w,b
  2554  000C78  26D9               	addwf	fsr2l,f,c
  2555  000C7A  0100               	movlb	0	; () banked
  2556  000C7C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  2557  000C7E  22DA               	addwfc	fsr2h,f,c
  2558  000C80  50DF               	movf	indf2,w,c
  2559  000C82  6EC9               	movwf	4041,c	;volatile
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2563  000C84  88C6               	bsf	4038,4,c	;volatile
  2564                           
  2565                           ; BSR set to: 0
  2566  000C86  0012               	return	
  2567  000C88                     __end_of_start_i2c_slave_reply:
  2568                           	opt stack 0
  2569                           tblptru	equ	0xFF8
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           postinc0	equ	0xFEE
  2573                           wreg	equ	0xFE8
  2574                           indf1	equ	0xFE7
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           postinc2	equ	0xFDE
  2579                           postdec2	equ	0xFDD
  2580                           fsr2h	equ	0xFDA
  2581                           fsr2l	equ	0xFD9
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _init_uart_recv *****************
  2585 ;; Defined at:
  2586 ;;		line 80 in file "src/my_uart.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  uc              2   33[BANK0 ] PTR struct __uart_comm
  2589 ;;		 -> main@uc(5), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2601 ;;      Params:         0       2       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       2       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:   10
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text9
  2616  001CA2                     __ptext9:
  2617                           	opt stack 0
  2618  001CA2                     _init_uart_recv:
  2619                           	opt stack 20
  2620                           
  2621                           ;my_uart.c: 81: uc_ptr = uc;
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;incstack = 0
  2625  001CA2  0100               	movlb	0	; () banked
  2626  001CA4  C0D8  F049         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2627  001CA8  0100               	movlb	0	; () banked
  2628  001CAA  C0D7  F048         	movff	init_uart_recv@uc,_uc_ptr
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2632  001CAE  EE20 F004          	lfsr	2,4
  2633  001CB2  5048               	movf	_uc_ptr,w,c
  2634  001CB4  26D9               	addwf	fsr2l,f,c
  2635  001CB6  5049               	movf	_uc_ptr+1,w,c
  2636  001CB8  22DA               	addwfc	fsr2h,f,c
  2637  001CBA  0E00               	movlw	0
  2638  001CBC  6EDF               	movwf	indf2,c
  2639                           
  2640                           ; BSR set to: 0
  2641  001CBE  0012               	return	
  2642  001CC0                     __end_of_init_uart_recv:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           prodh	equ	0xFF4
  2646                           prodl	equ	0xFF3
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           indf1	equ	0xFE7
  2650                           fsr1h	equ	0xFE2
  2651                           fsr1l	equ	0xFE1
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           postdec2	equ	0xFDD
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _init_uart_lthread *****************
  2660 ;; Defined at:
  2661 ;;		line 7 in file "src/uart_thread.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  uptr            2   33[BANK0 ] PTR struct __uart_thread
  2664 ;;		 -> main@uthread_data(10), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;		None               void
  2669 ;; Registers used:
  2670 ;;		None
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2676 ;;      Params:         0       2       0       0       0
  2677 ;;      Locals:         0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0
  2679 ;;      Totals:         0       2       0       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:   10
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text10
  2691  001D7A                     __ptext10:
  2692                           	opt stack 0
  2693  001D7A                     _init_uart_lthread:
  2694                           	opt stack 20
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;incstack = 0
  2698  001D7A  0012               	return	
  2699  001D7C                     __end_of_init_uart_lthread:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           indf1	equ	0xFE7
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _init_timer1_lthread *****************
  2717 ;; Defined at:
  2718 ;;		line 6 in file "src/timer1_thread.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  tptr            2   33[BANK0 ] PTR struct __timer1_thre
  2721 ;;		 -> main@t1thread_data(2), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2733 ;;      Params:         0       2       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       2       0       0       0
  2737 ;;Total ram usage:        2 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:   10
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text11
  2748  001D06                     __ptext11:
  2749                           	opt stack 0
  2750  001D06                     _init_timer1_lthread:
  2751                           	opt stack 20
  2752                           
  2753                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2754                           
  2755                           ;incstack = 0
  2756  001D06  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2757  001D0A  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2758  001D0E  0E00               	movlw	0
  2759  001D10  6EDE               	movwf	postinc2,c
  2760  001D12  0E00               	movlw	0
  2761  001D14  6EDD               	movwf	postdec2,c
  2762  001D16  0012               	return	
  2763  001D18                     __end_of_init_timer1_lthread:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           postinc0	equ	0xFEE
  2769                           wreg	equ	0xFE8
  2770                           indf1	equ	0xFE7
  2771                           fsr1h	equ	0xFE2
  2772                           fsr1l	equ	0xFE1
  2773                           indf2	equ	0xFDF
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _init_queues *****************
  2781 ;; Defined at:
  2782 ;;		line 194 in file "src/messages.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          0       1       0       0       0
  2799 ;;      Totals:         0       1       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:   11
  2803 ;; This function calls:
  2804 ;;		_init_queue
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text12
  2811  0016B8                     __ptext12:
  2812                           	opt stack 0
  2813  0016B8                     _init_queues:
  2814                           	opt stack 19
  2815                           
  2816                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2817                           
  2818                           ;incstack = 0
  2819  0016B8  0100               	movlb	0	; () banked
  2820  0016BA  6FDB               	movwf	??_init_queues& (0+255),b
  2821  0016BC  0E00               	movlw	0
  2822  0016BE  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  2823  0016C0  0100               	movlb	0	; () banked
  2824  0016C2  51DB               	movf	??_init_queues& (0+255),w,b
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2828  0016C4  0100               	movlb	0	; () banked
  2829  0016C6  0E00               	movlw	high _ToMainLow_MQ
  2830  0016C8  0100               	movlb	0	; () banked
  2831  0016CA  0100               	movlb	0	; () banked
  2832  0016CC  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2833  0016CE  0100               	movlb	0	; () banked
  2834  0016D0  0E80               	movlw	low _ToMainLow_MQ
  2835  0016D2  0100               	movlb	0	; () banked
  2836  0016D4  0100               	movlb	0	; () banked
  2837  0016D6  6FD7               	movwf	init_queue@qptr& (0+255),b
  2838  0016D8  ECE6  F00A         	call	_init_queue	;wreg free
  2839                           
  2840                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2841  0016DC  0101               	movlb	1	; () banked
  2842  0016DE  0E01               	movlw	high _ToMainHigh_MQ
  2843  0016E0  0100               	movlb	0	; () banked
  2844  0016E2  0100               	movlb	0	; () banked
  2845  0016E4  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2846  0016E6  0101               	movlb	1	; () banked
  2847  0016E8  0E6C               	movlw	low _ToMainHigh_MQ
  2848  0016EA  0100               	movlb	0	; () banked
  2849  0016EC  0100               	movlb	0	; () banked
  2850  0016EE  6FD7               	movwf	init_queue@qptr& (0+255),b
  2851  0016F0  ECE6  F00A         	call	_init_queue	;wreg free
  2852                           
  2853                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2854  0016F4  0101               	movlb	1	; () banked
  2855  0016F6  0E01               	movlw	high _FromMainLow_MQ
  2856  0016F8  0100               	movlb	0	; () banked
  2857  0016FA  0100               	movlb	0	; () banked
  2858  0016FC  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2859  0016FE  0101               	movlb	1	; () banked
  2860  001700  0E36               	movlw	low _FromMainLow_MQ
  2861  001702  0100               	movlb	0	; () banked
  2862  001704  0100               	movlb	0	; () banked
  2863  001706  6FD7               	movwf	init_queue@qptr& (0+255),b
  2864  001708  ECE6  F00A         	call	_init_queue	;wreg free
  2865                           
  2866                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2867  00170C  0101               	movlb	1	; () banked
  2868  00170E  0E01               	movlw	high _FromMainHigh_MQ
  2869  001710  0100               	movlb	0	; () banked
  2870  001712  0100               	movlb	0	; () banked
  2871  001714  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2872  001716  0101               	movlb	1	; () banked
  2873  001718  0E00               	movlw	low _FromMainHigh_MQ
  2874  00171A  0100               	movlb	0	; () banked
  2875  00171C  0100               	movlb	0	; () banked
  2876  00171E  6FD7               	movwf	init_queue@qptr& (0+255),b
  2877  001720  ECE6  F00A         	call	_init_queue	;wreg free
  2878  001724  0012               	return	
  2879  001726                     __end_of_init_queues:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           postinc0	equ	0xFEE
  2885                           wreg	equ	0xFE8
  2886                           indf1	equ	0xFE7
  2887                           fsr1h	equ	0xFE2
  2888                           fsr1l	equ	0xFE1
  2889                           indf2	equ	0xFDF
  2890                           postinc2	equ	0xFDE
  2891                           postdec2	equ	0xFDD
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _init_queue *****************
  2897 ;; Defined at:
  2898 ;;		line 14 in file "src/messages.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2901 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  i               1   36[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;		None               void
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2913 ;;      Params:         0       2       0       0       0
  2914 ;;      Locals:         0       1       0       0       0
  2915 ;;      Temps:          0       1       0       0       0
  2916 ;;      Totals:         0       4       0       0       0
  2917 ;;Total ram usage:        4 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:   10
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_init_queues
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text13
  2928  0015CC                     __ptext13:
  2929                           	opt stack 0
  2930  0015CC                     _init_queue:
  2931                           	opt stack 19
  2932                           
  2933                           ;messages.c: 15: unsigned char i;
  2934                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2935                           
  2936                           ;incstack = 0
  2937  0015CC  0100               	movlb	0	; () banked
  2938  0015CE  EE20 F034          	lfsr	2,52
  2939  0015D2  0100               	movlb	0	; () banked
  2940  0015D4  51D7               	movf	init_queue@qptr& (0+255),w,b
  2941  0015D6  26D9               	addwf	fsr2l,f,c
  2942  0015D8  0100               	movlb	0	; () banked
  2943  0015DA  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2944  0015DC  22DA               	addwfc	fsr2h,f,c
  2945  0015DE  0E00               	movlw	0
  2946  0015E0  6EDF               	movwf	indf2,c
  2947                           
  2948                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2949  0015E2  0100               	movlb	0	; () banked
  2950  0015E4  EE20 F035          	lfsr	2,53
  2951  0015E8  0100               	movlb	0	; () banked
  2952  0015EA  51D7               	movf	init_queue@qptr& (0+255),w,b
  2953  0015EC  26D9               	addwf	fsr2l,f,c
  2954  0015EE  0100               	movlb	0	; () banked
  2955  0015F0  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2956  0015F2  22DA               	addwfc	fsr2h,f,c
  2957  0015F4  0E00               	movlw	0
  2958  0015F6  6EDF               	movwf	indf2,c
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2962  0015F8  0100               	movlb	0	; () banked
  2963  0015FA  6FD9               	movwf	??_init_queue& (0+255),b
  2964  0015FC  0E00               	movlw	0
  2965  0015FE  0100               	movlb	0	; () banked
  2966  001600  0100               	movlb	0	; () banked
  2967  001602  6FDA               	movwf	init_queue@i& (0+255),b
  2968  001604  0100               	movlb	0	; () banked
  2969  001606  51D9               	movf	??_init_queue& (0+255),w,b
  2970                           
  2971                           ; BSR set to: 0
  2972  001608  0E03               	movlw	3
  2973  00160A  0100               	movlb	0	; () banked
  2974  00160C  0100               	movlb	0	; () banked
  2975  00160E  65DA               	cpfsgt	init_queue@i& (0+255),b
  2976  001610  D001               	goto	l3593
  2977  001612  0012               	return	
  2978  001614                     l3593:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;messages.c: 20: qptr->queue[i].full = 0;
  2982  001614  0100               	movlb	0	; () banked
  2983  001616  0100               	movlb	0	; () banked
  2984  001618  51DA               	movf	init_queue@i& (0+255),w,b
  2985  00161A  0D0D               	mullw	13
  2986  00161C  50F3               	movf	prodl,w,c
  2987  00161E  0100               	movlb	0	; () banked
  2988  001620  0100               	movlb	0	; () banked
  2989  001622  25D7               	addwf	init_queue@qptr& (0+255),w,b
  2990  001624  6ED9               	movwf	fsr2l,c
  2991  001626  50F4               	movf	prodh,w,c
  2992  001628  0100               	movlb	0	; () banked
  2993  00162A  0100               	movlb	0	; () banked
  2994  00162C  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2995  00162E  6EDA               	movwf	fsr2h,c
  2996  001630  0E00               	movlw	0
  2997  001632  6EDF               	movwf	indf2,c
  2998                           
  2999                           ; BSR set to: 0
  3000  001634  0100               	movlb	0	; () banked
  3001  001636  0100               	movlb	0	; () banked
  3002  001638  2BDA               	incf	init_queue@i& (0+255),f,b
  3003                           
  3004                           ; BSR set to: 0
  3005  00163A  0E03               	movlw	3
  3006  00163C  0100               	movlb	0	; () banked
  3007  00163E  0100               	movlb	0	; () banked
  3008  001640  65DA               	cpfsgt	init_queue@i& (0+255),b
  3009  001642  D7E8               	goto	l3593
  3010  001644  0012               	return	
  3011  001646                     __end_of_init_queue:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _init_i2c *****************
  3029 ;; Defined at:
  3030 ;;		line 268 in file "src/my_i2c.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  ic              2   33[BANK0 ] PTR struct __i2c_comm
  3033 ;;		 -> main@ic(28), 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;		None               void
  3038 ;; Registers used:
  3039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3045 ;;      Params:         0       2       0       0       0
  3046 ;;      Locals:         0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0
  3048 ;;      Totals:         0       2       0       0       0
  3049 ;;Total ram usage:        2 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:   10
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text14
  3060  001726                     __ptext14:
  3061                           	opt stack 0
  3062  001726                     _init_i2c:
  3063                           	opt stack 20
  3064                           
  3065                           ;my_i2c.c: 269: ic_ptr = ic;
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;incstack = 0
  3069  001726  0100               	movlb	0	; () banked
  3070  001728  0100               	movlb	0	; () banked
  3071  00172A  C0D8  F0DE         	movff	init_i2c@ic+1,_ic_ptr+1
  3072  00172E  0100               	movlb	0	; () banked
  3073  001730  0100               	movlb	0	; () banked
  3074  001732  C0D7  F0DD         	movff	init_i2c@ic,_ic_ptr
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3078  001736  0100               	movlb	0	; () banked
  3079  001738  EE20 F00A          	lfsr	2,10
  3080  00173C  0100               	movlb	0	; () banked
  3081  00173E  51DD               	movf	_ic_ptr& (0+255),w,b
  3082  001740  26D9               	addwf	fsr2l,f,c
  3083  001742  0100               	movlb	0	; () banked
  3084  001744  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3085  001746  22DA               	addwfc	fsr2h,f,c
  3086  001748  0E00               	movlw	0
  3087  00174A  6EDF               	movwf	indf2,c
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3091  00174C  0100               	movlb	0	; () banked
  3092  00174E  EE20 F00B          	lfsr	2,11
  3093  001752  0100               	movlb	0	; () banked
  3094  001754  51DD               	movf	_ic_ptr& (0+255),w,b
  3095  001756  26D9               	addwf	fsr2l,f,c
  3096  001758  0100               	movlb	0	; () banked
  3097  00175A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3098  00175C  22DA               	addwfc	fsr2h,f,c
  3099  00175E  0E00               	movlw	0
  3100  001760  6EDF               	movwf	indf2,c
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3104  001762  0100               	movlb	0	; () banked
  3105  001764  EE20 F00C          	lfsr	2,12
  3106  001768  0100               	movlb	0	; () banked
  3107  00176A  51DD               	movf	_ic_ptr& (0+255),w,b
  3108  00176C  26D9               	addwf	fsr2l,f,c
  3109  00176E  0100               	movlb	0	; () banked
  3110  001770  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3111  001772  22DA               	addwfc	fsr2h,f,c
  3112  001774  0E05               	movlw	5
  3113  001776  6EDF               	movwf	indf2,c
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3117  001778  0100               	movlb	0	; () banked
  3118  00177A  EE20 F00E          	lfsr	2,14
  3119  00177E  0100               	movlb	0	; () banked
  3120  001780  51DD               	movf	_ic_ptr& (0+255),w,b
  3121  001782  26D9               	addwf	fsr2l,f,c
  3122  001784  0100               	movlb	0	; () banked
  3123  001786  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  3124  001788  22DA               	addwfc	fsr2h,f,c
  3125  00178A  0E00               	movlw	0
  3126  00178C  6EDF               	movwf	indf2,c
  3127                           
  3128                           ; BSR set to: 0
  3129  00178E  0012               	return	
  3130  001790                     __end_of_init_i2c:
  3131                           	opt stack 0
  3132                           tblptru	equ	0xFF8
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _i2c_configure_slave *****************
  3148 ;; Defined at:
  3149 ;;		line 279 in file "src/my_i2c.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  addr            1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  addr            1   33[BANK0 ] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;		None               void
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         0       1       0       0       0
  3165 ;;      Temps:          0       0       0       0       0
  3166 ;;      Totals:         0       1       0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:   10
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text15
  3178  001BE2                     __ptext15:
  3179                           	opt stack 0
  3180  001BE2                     _i2c_configure_slave:
  3181                           	opt stack 20
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;incstack = 0
  3185                           ;i2c_configure_slave@addr stored from wreg
  3186  001BE2  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3187                           
  3188                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3189  001BE6  8694               	bsf	3988,3,c	;volatile
  3190                           
  3191                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3192  001BE8  8894               	bsf	3988,4,c	;volatile
  3193                           
  3194                           ;my_i2c.c: 297: SSPADD = addr;
  3195  001BEA  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3196                           
  3197                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3198  001BEE  0E00               	movlw	0
  3199  001BF0  6EC7               	movwf	4039,c	;volatile
  3200                           
  3201                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3202  001BF2  0E00               	movlw	0
  3203  001BF4  6EC6               	movwf	4038,c	;volatile
  3204                           
  3205                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3206  001BF6  0E00               	movlw	0
  3207  001BF8  6EC5               	movwf	4037,c	;volatile
  3208                           
  3209                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3210  001BFA  0E0E               	movlw	14
  3211  001BFC  12C6               	iorwf	4038,f,c	;volatile
  3212                           
  3213                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3214  001BFE  8EC7               	bsf	4039,7,c	;volatile
  3215                           
  3216                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3217  001C00  8694               	bsf	3988,3,c	;volatile
  3218                           
  3219                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3220  001C02  8894               	bsf	3988,4,c	;volatile
  3221                           
  3222                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3223  001C04  80C5               	bsf	4037,0,c	;volatile
  3224                           
  3225                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3226  001C06  8AC6               	bsf	4038,5,c	;volatile
  3227  001C08  0012               	return	
  3228  001C0A                     __end_of_i2c_configure_slave:
  3229                           	opt stack 0
  3230                           tblptru	equ	0xFF8
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           indf1	equ	0xFE7
  3236                           fsr1h	equ	0xFE2
  3237                           fsr1l	equ	0xFE1
  3238                           indf2	equ	0xFDF
  3239                           postinc2	equ	0xFDE
  3240                           postdec2	equ	0xFDD
  3241                           fsr2h	equ	0xFDA
  3242                           fsr2l	equ	0xFD9
  3243                           status	equ	0xFD8
  3244                           
  3245 ;; *************** function _enable_interrupts *****************
  3246 ;; Defined at:
  3247 ;;		line 14 in file "src/interrupts.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;		None               void
  3254 ;; Registers used:
  3255 ;;		None
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3261 ;;      Params:         0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0
  3264 ;;      Totals:         0       0       0       0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:   10
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text16
  3276  001D6C                     __ptext16:
  3277                           	opt stack 0
  3278  001D6C                     _enable_interrupts:
  3279                           	opt stack 20
  3280                           
  3281                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3282                           
  3283                           ;incstack = 0
  3284  001D6C  8ED0               	bsf	4048,7,c	;volatile
  3285                           
  3286                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3287  001D6E  8EF2               	bsf	intcon,7,c	;volatile
  3288                           
  3289                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3290  001D70  8CF2               	bsf	intcon,6,c	;volatile
  3291  001D72  0012               	return	
  3292  001D74                     __end_of_enable_interrupts:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           prodh	equ	0xFF4
  3296                           prodl	equ	0xFF3
  3297                           intcon	equ	0xFF2
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           indf1	equ	0xFE7
  3301                           fsr1h	equ	0xFE2
  3302                           fsr1l	equ	0xFE1
  3303                           indf2	equ	0xFDF
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _block_on_To_msgqueues *****************
  3311 ;; Defined at:
  3312 ;;		line 258 in file "src/messages.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0
  3328 ;;      Temps:          0       0       1       0       0
  3329 ;;      Totals:         0       0       1       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   13
  3333 ;; This function calls:
  3334 ;;		_Delay1KTCYx
  3335 ;;		_check_msg
  3336 ;;		_in_main
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text17
  3343  00154E                     __ptext17:
  3344                           	opt stack 0
  3345  00154E                     _block_on_To_msgqueues:
  3346                           	opt stack 17
  3347                           
  3348                           ;messages.c: 259: if (!in_main()) {
  3349                           
  3350                           ;incstack = 0
  3351  00154E  EC6E  F00C         	call	_in_main	;wreg free
  3352  001552  0100               	movlb	0	; () banked
  3353  001554  0100               	movlb	0	; () banked
  3354  001556  51DC               	movf	(?_in_main+1)& (0+255),w,b
  3355  001558  0100               	movlb	0	; () banked
  3356  00155A  11DB               	iorwf	?_in_main& (0+255),w,b
  3357  00155C  B4D8               	btfsc	status,2,c
  3358  00155E  0012               	return	
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;messages.c: 261: }
  3362                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3363                           
  3364                           ; BSR set to: 0
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;messages.c: 260: return;
  3368  001560  0101               	movlb	1	; () banked
  3369  001562  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3370  001564  0E01               	movlw	1
  3371  001566  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3372  001568  0101               	movlb	1	; () banked
  3373  00156A  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3374  00156C                     l3515:
  3375                           
  3376                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3377  00156C  0101               	movlb	1	; () banked
  3378  00156E  0E01               	movlw	high _ToMainHigh_MQ
  3379  001570  0100               	movlb	0	; () banked
  3380  001572  0100               	movlb	0	; () banked
  3381  001574  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3382  001576  0101               	movlb	1	; () banked
  3383  001578  0E6C               	movlw	low _ToMainHigh_MQ
  3384  00157A  0100               	movlb	0	; () banked
  3385  00157C  0100               	movlb	0	; () banked
  3386  00157E  6FD7               	movwf	check_msg@qptr& (0+255),b
  3387  001580  EC64  F00D         	call	_check_msg	;wreg free
  3388  001584  0900               	iorlw	0
  3389  001586  B4D8               	btfsc	status,2,c
  3390  001588  D007               	goto	l3521
  3391                           
  3392                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3393  00158A  0101               	movlb	1	; () banked
  3394  00158C  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3395  00158E  0E00               	movlw	0
  3396  001590  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3397  001592  0101               	movlb	1	; () banked
  3398  001594  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3399  001596  0012               	return	
  3400  001598                     l3521:
  3401                           
  3402                           ;messages.c: 271: }
  3403                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3404  001598  0100               	movlb	0	; () banked
  3405  00159A  0E00               	movlw	high _ToMainLow_MQ
  3406  00159C  0100               	movlb	0	; () banked
  3407  00159E  0100               	movlb	0	; () banked
  3408  0015A0  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3409  0015A2  0100               	movlb	0	; () banked
  3410  0015A4  0E80               	movlw	low _ToMainLow_MQ
  3411  0015A6  0100               	movlb	0	; () banked
  3412  0015A8  0100               	movlb	0	; () banked
  3413  0015AA  6FD7               	movwf	check_msg@qptr& (0+255),b
  3414  0015AC  EC64  F00D         	call	_check_msg	;wreg free
  3415  0015B0  0900               	iorlw	0
  3416  0015B2  B4D8               	btfsc	status,2,c
  3417  0015B4  D007               	goto	l3527
  3418                           
  3419                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3420  0015B6  0101               	movlb	1	; () banked
  3421  0015B8  6FA2               	movwf	??_block_on_To_msgqueues& (0+255),b
  3422  0015BA  0E00               	movlw	0
  3423  0015BC  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3424  0015BE  0101               	movlb	1	; () banked
  3425  0015C0  51A2               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3426  0015C2  0012               	return	
  3427  0015C4                     l3527:
  3428                           
  3429                           ;messages.c: 278: }
  3430                           ;messages.c: 279: Delay1KTCYx(10);
  3431  0015C4  0E0A               	movlw	10
  3432  0015C6  EC6F  F00E         	call	_Delay1KTCYx
  3433  0015CA  D7D0               	goto	l3515
  3434  0015CC                     __end_of_block_on_To_msgqueues:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           intcon	equ	0xFF2
  3440                           postinc0	equ	0xFEE
  3441                           wreg	equ	0xFE8
  3442                           indf1	equ	0xFE7
  3443                           fsr1h	equ	0xFE2
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           postinc2	equ	0xFDE
  3447                           postdec2	equ	0xFDD
  3448                           fsr2h	equ	0xFDA
  3449                           fsr2l	equ	0xFD9
  3450                           status	equ	0xFD8
  3451                           
  3452 ;; *************** function _in_main *****************
  3453 ;; Defined at:
  3454 ;;		line 40 in file "src/interrupts.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2   37[BANK0 ] int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3468 ;;      Params:         0       2       0       0       0
  3469 ;;      Locals:         0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0
  3471 ;;      Totals:         0       2       0       0       0
  3472 ;;Total ram usage:        2 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:   12
  3475 ;; This function calls:
  3476 ;;		_in_high_int
  3477 ;;		_in_low_int
  3478 ;; This function is called by:
  3479 ;;		_block_on_To_msgqueues
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text18
  3484  0018DC                     __ptext18:
  3485                           	opt stack 0
  3486  0018DC                     _in_main:
  3487                           	opt stack 17
  3488                           
  3489                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3490                           
  3491                           ;incstack = 0
  3492  0018DC  EC4B  F00C         	call	_in_low_int	;wreg free
  3493  0018E0  0100               	movlb	0	; () banked
  3494  0018E2  0100               	movlb	0	; () banked
  3495  0018E4  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3496  0018E6  0100               	movlb	0	; () banked
  3497  0018E8  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3498  0018EA  A4D8               	btfss	status,2,c
  3499  0018EC  D011               	goto	l3135
  3500                           
  3501                           ; BSR set to: 0
  3502  0018EE  EC8C  F00E         	call	_in_high_int	;wreg free
  3503  0018F2  0100               	movlb	0	; () banked
  3504  0018F4  0100               	movlb	0	; () banked
  3505  0018F6  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3506  0018F8  0100               	movlb	0	; () banked
  3507  0018FA  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3508  0018FC  A4D8               	btfss	status,2,c
  3509  0018FE  D008               	goto	l3135
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;interrupts.c: 42: return (1);
  3513  001900  0E00               	movlw	0
  3514  001902  0100               	movlb	0	; () banked
  3515  001904  0100               	movlb	0	; () banked
  3516  001906  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3517  001908  0E01               	movlw	1
  3518  00190A  0100               	movlb	0	; () banked
  3519  00190C  6FDB               	movwf	?_in_main& (0+255),b
  3520  00190E  0012               	return	
  3521  001910                     l3135:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;interrupts.c: 44: return (0);
  3525  001910  0E00               	movlw	0
  3526  001912  0100               	movlb	0	; () banked
  3527  001914  0100               	movlb	0	; () banked
  3528  001916  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3529  001918  0E00               	movlw	0
  3530  00191A  0100               	movlb	0	; () banked
  3531  00191C  6FDB               	movwf	?_in_main& (0+255),b
  3532  00191E  0012               	return	
  3533  001920                     __end_of_in_main:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           prodh	equ	0xFF4
  3537                           prodl	equ	0xFF3
  3538                           intcon	equ	0xFF2
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           indf1	equ	0xFE7
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           indf2	equ	0xFDF
  3545                           postinc2	equ	0xFDE
  3546                           postdec2	equ	0xFDD
  3547                           fsr2h	equ	0xFDA
  3548                           fsr2l	equ	0xFD9
  3549                           status	equ	0xFD8
  3550                           
  3551 ;; *************** function _in_low_int *****************
  3552 ;; Defined at:
  3553 ;;		line 30 in file "src/interrupts.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2   35[BANK0 ] int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3567 ;;      Params:         0       2       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       2       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:   11
  3574 ;; This function calls:
  3575 ;;		_in_high_int
  3576 ;; This function is called by:
  3577 ;;		_in_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text19
  3582  001896                     __ptext19:
  3583                           	opt stack 0
  3584  001896                     _in_low_int:
  3585                           	opt stack 17
  3586                           
  3587                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;incstack = 0
  3591  001896  ACF2               	btfss	intcon,6,c	;volatile
  3592  001898  D008               	goto	l3113
  3593                           
  3594                           ;interrupts.c: 32: return (0);
  3595  00189A  0E00               	movlw	0
  3596  00189C  0100               	movlb	0	; () banked
  3597  00189E  0100               	movlb	0	; () banked
  3598  0018A0  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3599  0018A2  0E00               	movlw	0
  3600  0018A4  0100               	movlb	0	; () banked
  3601  0018A6  6FD9               	movwf	?_in_low_int& (0+255),b
  3602  0018A8  0012               	return	
  3603  0018AA                     l3113:
  3604  0018AA  EC8C  F00E         	call	_in_high_int	;wreg free
  3605  0018AE  0100               	movlb	0	; () banked
  3606  0018B0  0100               	movlb	0	; () banked
  3607  0018B2  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3608  0018B4  0100               	movlb	0	; () banked
  3609  0018B6  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3610  0018B8  B4D8               	btfsc	status,2,c
  3611  0018BA  D008               	goto	l3121
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;interrupts.c: 34: return (0);
  3615  0018BC  0E00               	movlw	0
  3616  0018BE  0100               	movlb	0	; () banked
  3617  0018C0  0100               	movlb	0	; () banked
  3618  0018C2  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3619  0018C4  0E00               	movlw	0
  3620  0018C6  0100               	movlb	0	; () banked
  3621  0018C8  6FD9               	movwf	?_in_low_int& (0+255),b
  3622  0018CA  0012               	return	
  3623  0018CC                     l3121:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;interrupts.c: 36: return (1);
  3627  0018CC  0E00               	movlw	0
  3628  0018CE  0100               	movlb	0	; () banked
  3629  0018D0  0100               	movlb	0	; () banked
  3630  0018D2  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3631  0018D4  0E01               	movlw	1
  3632  0018D6  0100               	movlb	0	; () banked
  3633  0018D8  6FD9               	movwf	?_in_low_int& (0+255),b
  3634  0018DA  0012               	return	
  3635  0018DC                     __end_of_in_low_int:
  3636                           	opt stack 0
  3637                           tblptru	equ	0xFF8
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           intcon	equ	0xFF2
  3641                           postinc0	equ	0xFEE
  3642                           wreg	equ	0xFE8
  3643                           indf1	equ	0xFE7
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           
  3653 ;; *************** function _in_high_int *****************
  3654 ;; Defined at:
  3655 ;;		line 22 in file "src/interrupts.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2   33[BANK0 ] int 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3669 ;;      Params:         0       2       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       2       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:   10
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_in_low_int
  3680 ;;		_in_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text20
  3685  001D18                     __ptext20:
  3686                           	opt stack 0
  3687  001D18                     _in_high_int:
  3688                           	opt stack 17
  3689                           
  3690                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;incstack = 0
  3694  001D18  0E00               	movlw	0
  3695  001D1A  AEF2               	btfss	intcon,7,c	;volatile
  3696  001D1C  0E01               	movlw	1
  3697  001D1E  0100               	movlb	0	; () banked
  3698  001D20  0100               	movlb	0	; () banked
  3699  001D22  6FD7               	movwf	?_in_high_int& (0+255),b
  3700  001D24  0100               	movlb	0	; () banked
  3701  001D26  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  3702  001D28  0012               	return	
  3703  001D2A                     __end_of_in_high_int:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           intcon	equ	0xFF2
  3709                           postinc0	equ	0xFEE
  3710                           wreg	equ	0xFE8
  3711                           indf1	equ	0xFE7
  3712                           fsr1h	equ	0xFE2
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           postdec2	equ	0xFDD
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _check_msg *****************
  3722 ;; Defined at:
  3723 ;;		line 222 in file "src/messages.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3726 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3738 ;;      Params:         0       2       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          0       1       0       0       0
  3741 ;;      Totals:         0       3       0       0       0
  3742 ;;Total ram usage:        3 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:   10
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_block_on_To_msgqueues
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text21
  3753  001AC8                     __ptext21:
  3754                           	opt stack 0
  3755  001AC8                     _check_msg:
  3756                           	opt stack 19
  3757                           
  3758                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;incstack = 0
  3762  001AC8  0100               	movlb	0	; () banked
  3763  001ACA  EE20 F035          	lfsr	2,53
  3764  001ACE  0100               	movlb	0	; () banked
  3765  001AD0  51D7               	movf	check_msg@qptr& (0+255),w,b
  3766  001AD2  26D9               	addwf	fsr2l,f,c
  3767  001AD4  0100               	movlb	0	; () banked
  3768  001AD6  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3769  001AD8  22DA               	addwfc	fsr2h,f,c
  3770  001ADA  50DF               	movf	indf2,w,c
  3771  001ADC  0100               	movlb	0	; () banked
  3772  001ADE  6FD9               	movwf	??_check_msg& (0+255),b
  3773  001AE0  0100               	movlb	0	; () banked
  3774  001AE2  51D9               	movf	??_check_msg& (0+255),w,b
  3775  001AE4  0D0D               	mullw	13
  3776  001AE6  50F3               	movf	prodl,w,c
  3777  001AE8  0100               	movlb	0	; () banked
  3778  001AEA  0100               	movlb	0	; () banked
  3779  001AEC  25D7               	addwf	check_msg@qptr& (0+255),w,b
  3780  001AEE  6ED9               	movwf	fsr2l,c
  3781  001AF0  50F4               	movf	prodh,w,c
  3782  001AF2  0100               	movlb	0	; () banked
  3783  001AF4  0100               	movlb	0	; () banked
  3784  001AF6  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3785  001AF8  6EDA               	movwf	fsr2h,c
  3786  001AFA  50DF               	movf	indf2,w,c
  3787  001AFC  0012               	return	
  3788  001AFE                     __end_of_check_msg:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           indf1	equ	0xFE7
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _Delay1KTCYx *****************
  3807 ;; Defined at:
  3808 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  unit            1    wreg     unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  unit            1   33[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3822 ;;      Params:         0       0       0       0       0
  3823 ;;      Locals:         0       1       0       0       0
  3824 ;;      Temps:          0       0       0       0       0
  3825 ;;      Totals:         0       1       0       0       0
  3826 ;;Total ram usage:        1 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:   10
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_block_on_To_msgqueues
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text22
  3837  001CDE                     __ptext22:
  3838                           	opt stack 0
  3839  001CDE                     _Delay1KTCYx:
  3840                           	opt stack 19
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;incstack = 0
  3844                           ;Delay1KTCYx@unit stored from wreg
  3845  001CDE  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  3846  001CE2                     l725:
  3847  001CE2  0EFA               	movlw	250
  3848  001CE4                     u3047:
  3849  001CE4  F000               	nop	
  3850  001CE6  2EE8               	decfsz	wreg,f,c
  3851  001CE8  D7FD               	goto	u3047
  3852  001CEA  0100               	movlb	0	; () banked
  3853  001CEC  0100               	movlb	0	; () banked
  3854  001CEE  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3855  001CF0  D7F8               	goto	l725
  3856  001CF2  0012               	return	
  3857  001CF4                     __end_of_Delay1KTCYx:
  3858                           	opt stack 0
  3859                           tblptru	equ	0xFF8
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           indf1	equ	0xFE7
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _ToMainLow_recvmsg *****************
  3876 ;; Defined at:
  3877 ;;		line 112 in file "src/messages.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  maxlength       1    wreg     unsigned char 
  3880 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  3881 ;;		 -> main@msgtype(1), 
  3882 ;;  data            2   20[BANK1 ] PTR void 
  3883 ;;		 -> main@msgbuffer(11), 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  maxlength       1   22[BANK1 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      char 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3895 ;;      Params:         0       0       4       0       0
  3896 ;;      Locals:         0       0       1       0       0
  3897 ;;      Temps:          0       0       0       0       0
  3898 ;;      Totals:         0       0       5       0       0
  3899 ;;Total ram usage:        5 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:   12
  3902 ;; This function calls:
  3903 ;;		_recv_msg
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text23
  3910  001920                     __ptext23:
  3911                           	opt stack 0
  3912  001920                     _ToMainLow_recvmsg:
  3913                           	opt stack 18
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;incstack = 0
  3917                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3918  001920  CFE8 F1B8          	movff	wreg,ToMainLow_recvmsg@maxlength
  3919                           
  3920                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3921  001924  0100               	movlb	0	; () banked
  3922  001926  0E00               	movlw	high _ToMainLow_MQ
  3923  001928  0101               	movlb	1	; () banked
  3924  00192A  0101               	movlb	1	; () banked
  3925  00192C  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  3926  00192E  0100               	movlb	0	; () banked
  3927  001930  0E80               	movlw	low _ToMainLow_MQ
  3928  001932  0101               	movlb	1	; () banked
  3929  001934  0101               	movlb	1	; () banked
  3930  001936  6FA6               	movwf	recv_msg@qptr& (0+255),b
  3931  001938  C1B8  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3932  00193C  0101               	movlb	1	; () banked
  3933  00193E  0101               	movlb	1	; () banked
  3934  001940  C1B5  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3935  001944  0101               	movlb	1	; () banked
  3936  001946  0101               	movlb	1	; () banked
  3937  001948  C1B4  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3938  00194C  0101               	movlb	1	; () banked
  3939  00194E  0101               	movlb	1	; () banked
  3940  001950  C1B7  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3941  001954  0101               	movlb	1	; () banked
  3942  001956  0101               	movlb	1	; () banked
  3943  001958  C1B6  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3944  00195C  EC22  F005         	call	_recv_msg	;wreg free
  3945  001960  0012               	return	
  3946  001962                     __end_of_ToMainLow_recvmsg:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           prodh	equ	0xFF4
  3950                           prodl	equ	0xFF3
  3951                           intcon	equ	0xFF2
  3952                           postinc0	equ	0xFEE
  3953                           wreg	equ	0xFE8
  3954                           indf1	equ	0xFE7
  3955                           fsr1h	equ	0xFE2
  3956                           fsr1l	equ	0xFE1
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           postdec2	equ	0xFDD
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _ToMainHigh_recvmsg *****************
  3965 ;; Defined at:
  3966 ;;		line 135 in file "src/messages.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  maxlength       1    wreg     unsigned char 
  3969 ;;  msgtype         2   18[BANK1 ] PTR unsigned char 
  3970 ;;		 -> main@msgtype(1), 
  3971 ;;  data            2   20[BANK1 ] PTR void 
  3972 ;;		 -> main@msgbuffer(11), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  maxlength       1   22[BANK1 ] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      char 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3984 ;;      Params:         0       0       4       0       0
  3985 ;;      Locals:         0       0       1       0       0
  3986 ;;      Temps:          0       0       0       0       0
  3987 ;;      Totals:         0       0       5       0       0
  3988 ;;Total ram usage:        5 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:   12
  3991 ;; This function calls:
  3992 ;;		_recv_msg
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text24
  3999  001962                     __ptext24:
  4000                           	opt stack 0
  4001  001962                     _ToMainHigh_recvmsg:
  4002                           	opt stack 18
  4003                           
  4004                           ;incstack = 0
  4005                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4006  001962  CFE8 F1B8          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4007                           
  4008                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4009  001966  0101               	movlb	1	; () banked
  4010  001968  0E01               	movlw	high _ToMainHigh_MQ
  4011  00196A  0101               	movlb	1	; () banked
  4012  00196C  0101               	movlb	1	; () banked
  4013  00196E  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4014  001970  0101               	movlb	1	; () banked
  4015  001972  0E6C               	movlw	low _ToMainHigh_MQ
  4016  001974  0101               	movlb	1	; () banked
  4017  001976  0101               	movlb	1	; () banked
  4018  001978  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4019  00197A  C1B8  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4020  00197E  0101               	movlb	1	; () banked
  4021  001980  0101               	movlb	1	; () banked
  4022  001982  C1B5  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4023  001986  0101               	movlb	1	; () banked
  4024  001988  0101               	movlb	1	; () banked
  4025  00198A  C1B4  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4026  00198E  0101               	movlb	1	; () banked
  4027  001990  0101               	movlb	1	; () banked
  4028  001992  C1B7  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4029  001996  0101               	movlb	1	; () banked
  4030  001998  0101               	movlb	1	; () banked
  4031  00199A  C1B6  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4032  00199E  EC22  F005         	call	_recv_msg	;wreg free
  4033  0019A2  0012               	return	
  4034  0019A4                     __end_of_ToMainHigh_recvmsg:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           indf1	equ	0xFE7
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _recv_msg *****************
  4053 ;; Defined at:
  4054 ;;		line 63 in file "src/messages.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  4057 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4058 ;;  maxlength       1    6[BANK1 ] unsigned char 
  4059 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4060 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4061 ;;  data            2    9[BANK1 ] PTR void 
  4062 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  qmsg            2   16[BANK1 ] PTR struct __msg
  4065 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4066 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4067 ;;  tlength         2   14[BANK1 ] unsigned int 
  4068 ;;  slot            1   13[BANK1 ] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      char 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4078 ;;      Params:         0       0       7       0       0
  4079 ;;      Locals:         0       0       5       0       0
  4080 ;;      Temps:          0       0       2       0       0
  4081 ;;      Totals:         0       0      14       0       0
  4082 ;;Total ram usage:       14 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:   11
  4085 ;; This function calls:
  4086 ;;		_memcpy
  4087 ;; This function is called by:
  4088 ;;		_ToMainLow_recvmsg
  4089 ;;		_ToMainHigh_recvmsg
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text25
  4094  000A44                     __ptext25:
  4095                           	opt stack 0
  4096  000A44                     _recv_msg:
  4097                           	opt stack 18
  4098                           
  4099                           ;messages.c: 64: unsigned char slot;
  4100                           ;messages.c: 68: msg *qmsg;
  4101                           ;messages.c: 69: size_t tlength;
  4102                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4103                           
  4104                           ;incstack = 0
  4105  000A44  0101               	movlb	1	; () banked
  4106  000A46  EE20 F035          	lfsr	2,53
  4107  000A4A  0101               	movlb	1	; () banked
  4108  000A4C  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4109  000A4E  26D9               	addwf	fsr2l,f,c
  4110  000A50  0101               	movlb	1	; () banked
  4111  000A52  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4112  000A54  22DA               	addwfc	fsr2h,f,c
  4113  000A56  50DF               	movf	indf2,w,c
  4114  000A58  0101               	movlb	1	; () banked
  4115  000A5A  0101               	movlb	1	; () banked
  4116  000A5C  6FAF               	movwf	recv_msg@slot& (0+255),b
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4120  000A5E  0101               	movlb	1	; () banked
  4121  000A60  0101               	movlb	1	; () banked
  4122  000A62  51AF               	movf	recv_msg@slot& (0+255),w,b
  4123  000A64  0D0D               	mullw	13
  4124  000A66  50F3               	movf	prodl,w,c
  4125  000A68  0101               	movlb	1	; () banked
  4126  000A6A  0101               	movlb	1	; () banked
  4127  000A6C  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4128  000A6E  0101               	movlb	1	; () banked
  4129  000A70  0101               	movlb	1	; () banked
  4130  000A72  6FB2               	movwf	recv_msg@qmsg& (0+255),b
  4131  000A74  50F4               	movf	prodh,w,c
  4132  000A76  0101               	movlb	1	; () banked
  4133  000A78  0101               	movlb	1	; () banked
  4134  000A7A  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4135  000A7C  0101               	movlb	1	; () banked
  4136  000A7E  6FB3               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;messages.c: 74: if (qmsg->full == 1) {
  4140  000A80  0E01               	movlw	1
  4141  000A82  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4142  000A86  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4143  000A8A  62DF               	cpfseq	indf2,c
  4144  000A8C  D074               	goto	l3661
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4148  000A8E  0101               	movlb	1	; () banked
  4149  000A90  EE20 F001          	lfsr	2,1
  4150  000A94  0101               	movlb	1	; () banked
  4151  000A96  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4152  000A98  26D9               	addwf	fsr2l,f,c
  4153  000A9A  0101               	movlb	1	; () banked
  4154  000A9C  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4155  000A9E  22DA               	addwfc	fsr2h,f,c
  4156  000AA0  50DF               	movf	indf2,w,c
  4157  000AA2  0101               	movlb	1	; () banked
  4158  000AA4  0101               	movlb	1	; () banked
  4159  000AA6  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4160  000AA8  B0D8               	btfsc	status,0,c
  4161  000AAA  D002               	goto	l3645
  4162                           
  4163                           ; BSR set to: 1
  4164                           ;messages.c: 77: return (-3);
  4165  000AAC  0EFD               	movlw	253
  4166  000AAE  0012               	return	
  4167  000AB0                     l3645:
  4168                           
  4169                           ; BSR set to: 1
  4170                           ;messages.c: 78: }
  4171                           ;messages.c: 80: tlength = qmsg->length;
  4172  000AB0  0101               	movlb	1	; () banked
  4173  000AB2  EE20 F001          	lfsr	2,1
  4174  000AB6  0101               	movlb	1	; () banked
  4175  000AB8  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4176  000ABA  26D9               	addwf	fsr2l,f,c
  4177  000ABC  0101               	movlb	1	; () banked
  4178  000ABE  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4179  000AC0  22DA               	addwfc	fsr2h,f,c
  4180  000AC2  50DF               	movf	indf2,w,c
  4181  000AC4  0101               	movlb	1	; () banked
  4182  000AC6  6FAD               	movwf	??_recv_msg& (0+255),b
  4183  000AC8  0101               	movlb	1	; () banked
  4184  000ACA  51AD               	movf	??_recv_msg& (0+255),w,b
  4185  000ACC  0101               	movlb	1	; () banked
  4186  000ACE  0101               	movlb	1	; () banked
  4187  000AD0  6FB0               	movwf	recv_msg@tlength& (0+255),b
  4188  000AD2  0101               	movlb	1	; () banked
  4189  000AD4  6BB1               	clrf	(recv_msg@tlength+1)& (0+255),b
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4193  000AD6  0101               	movlb	1	; () banked
  4194  000AD8  0100               	movlb	0	; () banked
  4195  000ADA  C1AC  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  4196  000ADE  0101               	movlb	1	; () banked
  4197  000AE0  0100               	movlb	0	; () banked
  4198  000AE2  C1AB  F0D7         	movff	recv_msg@data,memcpy@d1
  4199  000AE6  0E03               	movlw	3
  4200  000AE8  0101               	movlb	1	; () banked
  4201  000AEA  0101               	movlb	1	; () banked
  4202  000AEC  25B2               	addwf	recv_msg@qmsg& (0+255),w,b
  4203  000AEE  0101               	movlb	1	; () banked
  4204  000AF0  6FAD               	movwf	??_recv_msg& (0+255),b
  4205  000AF2  0E00               	movlw	0
  4206  000AF4  0101               	movlb	1	; () banked
  4207  000AF6  0101               	movlb	1	; () banked
  4208  000AF8  21B3               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4209  000AFA  0101               	movlb	1	; () banked
  4210  000AFC  6FAE               	movwf	(??_recv_msg+1)& (0+255),b
  4211  000AFE  C1AD  F0D9         	movff	??_recv_msg,memcpy@s1
  4212  000B02  C1AE  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  4213  000B06  C1B0  F0DB         	movff	recv_msg@tlength,memcpy@n
  4214  000B0A  C1B1  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  4215  000B0E  ECC8  F00B         	call	_memcpy	;wreg free
  4216                           
  4217                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4218  000B12  0101               	movlb	1	; () banked
  4219  000B14  EE20 F035          	lfsr	2,53
  4220  000B18  0101               	movlb	1	; () banked
  4221  000B1A  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4222  000B1C  26D9               	addwf	fsr2l,f,c
  4223  000B1E  0101               	movlb	1	; () banked
  4224  000B20  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4225  000B22  22DA               	addwfc	fsr2h,f,c
  4226  000B24  0101               	movlb	1	; () banked
  4227  000B26  EE10 F035          	lfsr	1,53
  4228  000B2A  0101               	movlb	1	; () banked
  4229  000B2C  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4230  000B2E  26E1               	addwf	fsr1l,f,c
  4231  000B30  0101               	movlb	1	; () banked
  4232  000B32  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4233  000B34  22E2               	addwfc	fsr1h,f,c
  4234  000B36  50E7               	movf	indf1,w,c
  4235  000B38  0101               	movlb	1	; () banked
  4236  000B3A  6FAD               	movwf	??_recv_msg& (0+255),b
  4237  000B3C  0101               	movlb	1	; () banked
  4238  000B3E  29AD               	incf	??_recv_msg& (0+255),w,b
  4239  000B40  0B03               	andlw	3
  4240  000B42  6EDF               	movwf	indf2,c
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4244  000B44  0101               	movlb	1	; () banked
  4245  000B46  EE20 F002          	lfsr	2,2
  4246  000B4A  0101               	movlb	1	; () banked
  4247  000B4C  51B2               	movf	recv_msg@qmsg& (0+255),w,b
  4248  000B4E  26D9               	addwf	fsr2l,f,c
  4249  000B50  0101               	movlb	1	; () banked
  4250  000B52  51B3               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4251  000B54  22DA               	addwfc	fsr2h,f,c
  4252  000B56  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  4253  000B5A  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4254  000B5E  CFDF FFE7          	movff	indf2,indf1
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;messages.c: 91: qmsg->full = 0;
  4258  000B62  C1B2  FFD9         	movff	recv_msg@qmsg,fsr2l
  4259  000B66  C1B3  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4260  000B6A  0E00               	movlw	0
  4261  000B6C  6EDF               	movwf	indf2,c
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;messages.c: 92: return (tlength);
  4265  000B6E  0101               	movlb	1	; () banked
  4266  000B70  0101               	movlb	1	; () banked
  4267  000B72  51B0               	movf	recv_msg@tlength& (0+255),w,b
  4268  000B74  0012               	return	
  4269  000B76                     l3661:
  4270                           
  4271                           ; BSR set to: 1
  4272                           ;messages.c: 94: return (-4);
  4273  000B76  0EFC               	movlw	252
  4274  000B78  0012               	return	
  4275  000B7A                     __end_of_recv_msg:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           indf1	equ	0xFE7
  4284                           fsr1h	equ	0xFE2
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _memcpy *****************
  4294 ;; Defined at:
  4295 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  d1              2   33[BANK0 ] PTR void 
  4298 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4299 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4300 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4301 ;;  s1              2   35[BANK0 ] PTR const void 
  4302 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4303 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4304 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4305 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4306 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  4307 ;;  n               2   37[BANK0 ] unsigned int 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4310 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4311 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4312 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4313 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  4314 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  4315 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4316 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4317 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4318 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2   33[BANK0 ] PTR void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4328 ;;      Params:         0       6       0       0       0
  4329 ;;      Locals:         0       0       4       0       0
  4330 ;;      Temps:          0       0       0       0       0
  4331 ;;      Totals:         0       6       4       0       0
  4332 ;;Total ram usage:       10 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:   10
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_send_msg
  4339 ;;		_recv_msg
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text26
  4344  001790                     __ptext26:
  4345                           	opt stack 0
  4346  001790                     _memcpy:
  4347                           	opt stack 17
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;incstack = 0
  4351  001790  0100               	movlb	0	; () banked
  4352  001792  0101               	movlb	1	; () banked
  4353  001794  C0DA  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  4354  001798  0100               	movlb	0	; () banked
  4355  00179A  0101               	movlb	1	; () banked
  4356  00179C  C0D9  F1A4         	movff	memcpy@s1,memcpy@s
  4357  0017A0  0100               	movlb	0	; () banked
  4358  0017A2  0101               	movlb	1	; () banked
  4359  0017A4  C0D8  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  4360  0017A8  0100               	movlb	0	; () banked
  4361  0017AA  0101               	movlb	1	; () banked
  4362  0017AC  C0D7  F1A2         	movff	memcpy@d1,memcpy@d
  4363  0017B0  D012               	goto	l3631
  4364  0017B2                     l3625:
  4365  0017B2  C1A4  FFD9         	movff	memcpy@s,fsr2l
  4366  0017B6  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  4367  0017BA  C1A2  FFE1         	movff	memcpy@d,fsr1l
  4368  0017BE  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  4369  0017C2  CFDF FFE7          	movff	indf2,indf1
  4370  0017C6  0101               	movlb	1	; () banked
  4371  0017C8  0101               	movlb	1	; () banked
  4372  0017CA  4BA4               	infsnz	memcpy@s& (0+255),f,b
  4373  0017CC  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  4374                           
  4375                           ; BSR set to: 1
  4376  0017CE  0101               	movlb	1	; () banked
  4377  0017D0  0101               	movlb	1	; () banked
  4378  0017D2  4BA2               	infsnz	memcpy@d& (0+255),f,b
  4379  0017D4  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  4380  0017D6                     l3631:
  4381                           
  4382                           ; BSR set to: 1
  4383  0017D6  0100               	movlb	0	; () banked
  4384  0017D8  0100               	movlb	0	; () banked
  4385  0017DA  07DB               	decf	memcpy@n& (0+255),f,b
  4386  0017DC  A0D8               	btfss	status,0,c
  4387  0017DE  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  4388  0017E0  0100               	movlb	0	; () banked
  4389  0017E2  29DB               	incf	memcpy@n& (0+255),w,b
  4390  0017E4  B4D8               	btfsc	status,2,c
  4391  0017E6  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  4392  0017E8  B4D8               	btfsc	status,2,c
  4393                           
  4394                           ; BSR set to: 0
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;	Return value of _memcpy is never used
  4398  0017EA  0012               	return	
  4399  0017EC  D7E2               	goto	l3625
  4400  0017EE                     __end_of_memcpy:
  4401                           	opt stack 0
  4402                           tblptru	equ	0xFF8
  4403                           prodh	equ	0xFF4
  4404                           prodl	equ	0xFF3
  4405                           intcon	equ	0xFF2
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           indf1	equ	0xFE7
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           indf2	equ	0xFDF
  4412                           postinc2	equ	0xFDE
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _OpenUSART *****************
  4419 ;; Defined at:
  4420 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  config          1    wreg     unsigned char 
  4423 ;;  spbrg           2   33[BANK0 ] unsigned int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  config          1   38[BANK0 ] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;		None               void
  4428 ;; Registers used:
  4429 ;;		wreg, status,2
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4435 ;;      Params:         0       2       0       0       0
  4436 ;;      Locals:         0       1       0       0       0
  4437 ;;      Temps:          0       3       0       0       0
  4438 ;;      Totals:         0       6       0       0       0
  4439 ;;Total ram usage:        6 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:   10
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text27
  4450  00132C                     __ptext27:
  4451                           	opt stack 0
  4452  00132C                     _OpenUSART:
  4453                           	opt stack 20
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;incstack = 0
  4457                           ;OpenUSART@config stored from wreg
  4458  00132C  CFE8 F0DC          	movff	wreg,OpenUSART@config
  4459  001330  0E00               	movlw	0
  4460  001332  6EAC               	movwf	4012,c	;volatile
  4461  001334  0E00               	movlw	0
  4462  001336  6EAB               	movwf	4011,c	;volatile
  4463  001338  0100               	movlb	0	; () banked
  4464  00133A  0100               	movlb	0	; () banked
  4465  00133C  B1DC               	btfsc	OpenUSART@config& (0+255),0,b
  4466                           
  4467                           ; BSR set to: 0
  4468  00133E  88AC               	bsf	4012,4,c	;volatile
  4469                           
  4470                           ; BSR set to: 0
  4471                           
  4472                           ; BSR set to: 0
  4473  001340  0100               	movlb	0	; () banked
  4474  001342  0100               	movlb	0	; () banked
  4475  001344  A3DC               	btfss	OpenUSART@config& (0+255),1,b
  4476  001346  D002               	goto	l3447
  4477                           
  4478                           ; BSR set to: 0
  4479  001348  8CAC               	bsf	4012,6,c	;volatile
  4480  00134A  8CAB               	bsf	4011,6,c	;volatile
  4481  00134C                     l3447:
  4482                           
  4483                           ; BSR set to: 0
  4484  00134C  0100               	movlb	0	; () banked
  4485  00134E  0100               	movlb	0	; () banked
  4486  001350  B5DC               	btfsc	OpenUSART@config& (0+255),2,b
  4487                           
  4488                           ; BSR set to: 0
  4489  001352  8EAC               	bsf	4012,7,c	;volatile
  4490                           
  4491                           ; BSR set to: 0
  4492                           
  4493                           ; BSR set to: 0
  4494  001354  0100               	movlb	0	; () banked
  4495  001356  0100               	movlb	0	; () banked
  4496  001358  A7DC               	btfss	OpenUSART@config& (0+255),3,b
  4497  00135A  D002               	goto	l492
  4498                           
  4499                           ; BSR set to: 0
  4500  00135C  88AB               	bsf	4011,4,c	;volatile
  4501  00135E  D001               	goto	l3455
  4502  001360                     l492:
  4503                           
  4504                           ; BSR set to: 0
  4505  001360  8AAB               	bsf	4011,5,c	;volatile
  4506  001362                     l3455:
  4507                           
  4508                           ; BSR set to: 0
  4509  001362  0100               	movlb	0	; () banked
  4510  001364  0100               	movlb	0	; () banked
  4511  001366  B9DC               	btfsc	OpenUSART@config& (0+255),4,b
  4512                           
  4513                           ; BSR set to: 0
  4514  001368  84AC               	bsf	4012,2,c	;volatile
  4515                           
  4516                           ; BSR set to: 0
  4517  00136A  989E               	bcf	3998,4,c	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520  00136C  0100               	movlb	0	; () banked
  4521  00136E  0100               	movlb	0	; () banked
  4522  001370  BBDC               	btfsc	OpenUSART@config& (0+255),5,b
  4523                           
  4524                           ; BSR set to: 0
  4525  001372  86AB               	bsf	4011,3,c	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           
  4529                           ; BSR set to: 0
  4530  001374  0100               	movlb	0	; () banked
  4531  001376  0100               	movlb	0	; () banked
  4532  001378  ADDC               	btfss	OpenUSART@config& (0+255),6,b
  4533  00137A  D002               	goto	l496
  4534                           
  4535                           ; BSR set to: 0
  4536  00137C  8A9D               	bsf	3997,5,c	;volatile
  4537  00137E  D001               	goto	l497
  4538  001380                     l496:
  4539                           
  4540                           ; BSR set to: 0
  4541  001380  9A9D               	bcf	3997,5,c	;volatile
  4542  001382                     l497:
  4543                           
  4544                           ; BSR set to: 0
  4545  001382  9A9E               	bcf	3998,5,c	;volatile
  4546                           
  4547                           ; BSR set to: 0
  4548  001384  0100               	movlb	0	; () banked
  4549  001386  0100               	movlb	0	; () banked
  4550  001388  AFDC               	btfss	OpenUSART@config& (0+255),7,b
  4551  00138A  D002               	goto	l498
  4552                           
  4553                           ; BSR set to: 0
  4554  00138C  889D               	bsf	3997,4,c	;volatile
  4555  00138E  D001               	goto	l499
  4556  001390                     l498:
  4557                           
  4558                           ; BSR set to: 0
  4559  001390  989D               	bcf	3997,4,c	;volatile
  4560  001392                     l499:
  4561                           
  4562                           ; BSR set to: 0
  4563  001392  C0D7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4564                           
  4565                           ; BSR set to: 0
  4566  001396  0100               	movlb	0	; () banked
  4567  001398  C0D8  F0D9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4568  00139C  C0D9  F0DA         	movff	??_OpenUSART,??_OpenUSART+1
  4569  0013A0  0100               	movlb	0	; () banked
  4570  0013A2  6BDB               	clrf	(??_OpenUSART+2)& (0+255),b
  4571  0013A4  0100               	movlb	0	; () banked
  4572  0013A6  51DA               	movf	(??_OpenUSART+1)& (0+255),w,b
  4573  0013A8  6EB0               	movwf	4016,c	;volatile
  4574                           
  4575                           ; BSR set to: 0
  4576  0013AA  8AAC               	bsf	4012,5,c	;volatile
  4577                           
  4578                           ; BSR set to: 0
  4579  0013AC  8EAB               	bsf	4011,7,c	;volatile
  4580                           
  4581                           ; BSR set to: 0
  4582  0013AE  9C94               	bcf	3988,6,c	;volatile
  4583                           
  4584                           ; BSR set to: 0
  4585  0013B0  8E94               	bsf	3988,7,c	;volatile
  4586                           
  4587                           ; BSR set to: 0
  4588  0013B2  A8AC               	btfss	4012,4,c	;volatile
  4589  0013B4  0012               	return	
  4590                           
  4591                           ; BSR set to: 0
  4592  0013B6  BEAC               	btfsc	4012,7,c	;volatile
  4593  0013B8  0012               	return	
  4594                           
  4595                           ; BSR set to: 0
  4596  0013BA  8C94               	bsf	3988,6,c	;volatile
  4597  0013BC  0012               	return	
  4598  0013BE                     __end_of_OpenUSART:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           indf1	equ	0xFE7
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _OpenTimer1 *****************
  4617 ;; Defined at:
  4618 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  config          1    wreg     unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  config          1   33[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;		None               void
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4632 ;;      Params:         0       0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0
  4634 ;;      Temps:          0       0       0       0       0
  4635 ;;      Totals:         0       1       0       0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   10
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text28
  4647  001A24                     __ptext28:
  4648                           	opt stack 0
  4649  001A24                     _OpenTimer1:
  4650                           	opt stack 20
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;incstack = 0
  4654                           ;OpenTimer1@config stored from wreg
  4655  001A24  CFE8 F0D7          	movff	wreg,OpenTimer1@config
  4656  001A28  0100               	movlb	0	; () banked
  4657  001A2A  0100               	movlb	0	; () banked
  4658  001A2C  51D7               	movf	OpenTimer1@config& (0+255),w,b
  4659  001A2E  0B7E               	andlw	126
  4660  001A30  6ECD               	movwf	4045,c	;volatile
  4661                           
  4662                           ; BSR set to: 0
  4663  001A32  0100               	movlb	0	; () banked
  4664  001A34  0100               	movlb	0	; () banked
  4665  001A36  ADD7               	btfss	OpenTimer1@config& (0+255),6,b
  4666  001A38  D002               	goto	l448
  4667                           
  4668                           ; BSR set to: 0
  4669  001A3A  8ECD               	bsf	4045,7,c	;volatile
  4670  001A3C  D001               	goto	l3429
  4671  001A3E                     l448:
  4672                           
  4673                           ; BSR set to: 0
  4674  001A3E  9ECD               	bcf	4045,7,c	;volatile
  4675  001A40                     l3429:
  4676                           
  4677                           ; BSR set to: 0
  4678  001A40  0E00               	movlw	0
  4679  001A42  6ECF               	movwf	4047,c	;volatile
  4680  001A44  0E00               	movlw	0
  4681  001A46  6ECE               	movwf	4046,c	;volatile
  4682                           
  4683                           ; BSR set to: 0
  4684  001A48  909E               	bcf	3998,0,c	;volatile
  4685                           
  4686                           ; BSR set to: 0
  4687  001A4A  0100               	movlb	0	; () banked
  4688  001A4C  0100               	movlb	0	; () banked
  4689  001A4E  AFD7               	btfss	OpenTimer1@config& (0+255),7,b
  4690  001A50  D002               	goto	l450
  4691                           
  4692                           ; BSR set to: 0
  4693  001A52  809D               	bsf	3997,0,c	;volatile
  4694  001A54  D001               	goto	l451
  4695  001A56                     l450:
  4696                           
  4697                           ; BSR set to: 0
  4698  001A56  909D               	bcf	3997,0,c	;volatile
  4699  001A58                     l451:
  4700                           
  4701                           ; BSR set to: 0
  4702  001A58  80CD               	bsf	4045,0,c	;volatile
  4703                           
  4704                           ; BSR set to: 0
  4705  001A5A  0012               	return	
  4706  001A5C                     __end_of_OpenTimer1:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           prodh	equ	0xFF4
  4710                           prodl	equ	0xFF3
  4711                           intcon	equ	0xFF2
  4712                           postinc0	equ	0xFEE
  4713                           wreg	equ	0xFE8
  4714                           indf1	equ	0xFE7
  4715                           fsr1h	equ	0xFE2
  4716                           fsr1l	equ	0xFE1
  4717                           indf2	equ	0xFDF
  4718                           postinc2	equ	0xFDE
  4719                           postdec2	equ	0xFDD
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _OpenTimer0 *****************
  4725 ;; Defined at:
  4726 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  config          1    wreg     unsigned char 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  config          1   33[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;		None               void
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4740 ;;      Params:         0       0       0       0       0
  4741 ;;      Locals:         0       1       0       0       0
  4742 ;;      Temps:          0       0       0       0       0
  4743 ;;      Totals:         0       1       0       0       0
  4744 ;;Total ram usage:        1 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:   10
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text29
  4755  001B8E                     __ptext29:
  4756                           	opt stack 0
  4757  001B8E                     _OpenTimer0:
  4758                           	opt stack 20
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;incstack = 0
  4762                           ;OpenTimer0@config stored from wreg
  4763  001B8E  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  4764  001B92  0100               	movlb	0	; () banked
  4765  001B94  0100               	movlb	0	; () banked
  4766  001B96  51D7               	movf	OpenTimer0@config& (0+255),w,b
  4767  001B98  0B7F               	andlw	127
  4768  001B9A  6ED5               	movwf	4053,c	;volatile
  4769                           
  4770                           ; BSR set to: 0
  4771  001B9C  0E00               	movlw	0
  4772  001B9E  6ED7               	movwf	4055,c	;volatile
  4773                           
  4774                           ; BSR set to: 0
  4775  001BA0  0E00               	movlw	0
  4776  001BA2  6ED6               	movwf	4054,c	;volatile
  4777                           
  4778                           ; BSR set to: 0
  4779  001BA4  94F2               	bcf	intcon,2,c	;volatile
  4780                           
  4781                           ; BSR set to: 0
  4782  001BA6  0100               	movlb	0	; () banked
  4783  001BA8  0100               	movlb	0	; () banked
  4784  001BAA  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  4785  001BAC  D002               	goto	l424
  4786                           
  4787                           ; BSR set to: 0
  4788  001BAE  8AF2               	bsf	intcon,5,c	;volatile
  4789  001BB0  D001               	goto	l425
  4790  001BB2                     l424:
  4791                           
  4792                           ; BSR set to: 0
  4793  001BB2  9AF2               	bcf	intcon,5,c	;volatile
  4794  001BB4                     l425:
  4795                           
  4796                           ; BSR set to: 0
  4797  001BB4  8ED5               	bsf	4053,7,c	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800  001BB6  0012               	return	
  4801  001BB8                     __end_of_OpenTimer0:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           postinc0	equ	0xFEE
  4808                           wreg	equ	0xFE8
  4809                           indf1	equ	0xFE7
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           indf2	equ	0xFDF
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819 ;; *************** function _InterruptHandlerLow *****************
  4820 ;; Defined at:
  4821 ;;		line 122 in file "src/interrupts.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4835 ;;      Params:         0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0
  4837 ;;      Temps:         17       0       0       0       0
  4838 ;;      Totals:        17       0       0       0       0
  4839 ;;Total ram usage:       17 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    9
  4842 ;; This function calls:
  4843 ;;		_timer1_int_handler
  4844 ;;		_uart_recv_int_handler
  4845 ;;		_uart_trans_int_handler
  4846 ;; This function is called by:
  4847 ;;		Interrupt level 1
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	intcodelo
  4852  000018                     __pintcodelo:
  4853                           	opt stack 0
  4854  000018                     _InterruptHandlerLow:
  4855                           	opt stack 17
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;incstack = 0
  4859  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  4860  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  4861  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  4862  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  4863  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  4864  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  4865  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  4866  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  4867  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  4868  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  4869  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  4870  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  4871  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  4872  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  4873  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  4874  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  4875  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  4876                           
  4877                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4878  00005C  A09E               	btfss	3998,0,c	;volatile
  4879  00005E  D003               	goto	i1l3933
  4880                           
  4881                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4882  000060  909E               	bcf	3998,0,c	;volatile
  4883                           
  4884                           ;interrupts.c: 126: timer1_int_handler();
  4885  000062  EC98  F00D         	call	_timer1_int_handler	;wreg free
  4886  000066                     i1l3933:
  4887                           
  4888                           ;interrupts.c: 127: }
  4889                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4890  000066  AA9E               	btfss	3998,5,c	;volatile
  4891  000068  D003               	goto	i1l3939
  4892                           
  4893                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4894  00006A  9A9E               	bcf	3998,5,c	;volatile
  4895                           
  4896                           ;interrupts.c: 132: uart_recv_int_handler();
  4897  00006C  EC48  F009         	call	_uart_recv_int_handler	;wreg free
  4898  000070                     i1l3939:
  4899                           
  4900                           ;interrupts.c: 133: }
  4901                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4902  000070  B89E               	btfsc	3998,4,c	;volatile
  4903  000072  A89D               	btfss	3997,4,c	;volatile
  4904  000074  D002               	goto	i1l52
  4905                           
  4906                           ;interrupts.c: 137: uart_trans_int_handler();
  4907  000076  ECF7  F00B         	call	_uart_trans_int_handler	;wreg free
  4908  00007A                     i1l52:
  4909  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4910  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4911  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4912  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4913  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4914  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4915  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4916  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4917  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4918  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4919  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4920  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4921  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4922  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4923  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4924  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4925  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  4926  0000BE  0010               	retfie	
  4927  0000C0                     __end_of_InterruptHandlerLow:
  4928                           	opt stack 0
  4929                           pclatu	equ	0xFFB
  4930                           pclath	equ	0xFFA
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           postinc0	equ	0xFEE
  4939                           fsr0h	equ	0xFEA
  4940                           fsr0l	equ	0xFE9
  4941                           wreg	equ	0xFE8
  4942                           indf1	equ	0xFE7
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           bsr	equ	0xFE0
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           postdec2	equ	0xFDD
  4949                           fsr2h	equ	0xFDA
  4950                           fsr2l	equ	0xFD9
  4951                           status	equ	0xFD8
  4952                           
  4953 ;; *************** function _uart_trans_int_handler *****************
  4954 ;; Defined at:
  4955 ;;		line 11 in file "src/my_uart.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  data            2   30[COMRAM] PTR unsigned char 
  4960 ;;		 -> NULL(0), 
  4961 ;;  length          1   34[COMRAM] char 
  4962 ;;  msgtype         1   33[COMRAM] unsigned char 
  4963 ;;  curIndex        1   32[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;		None               void
  4966 ;; Registers used:
  4967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4973 ;;      Params:         0       0       0       0       0
  4974 ;;      Locals:         5       0       0       0       0
  4975 ;;      Temps:          1       0       0       0       0
  4976 ;;      Totals:         6       0       0       0       0
  4977 ;;Total ram usage:        6 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    8
  4980 ;; This function calls:
  4981 ;;		_FromMainLow_recvmsg
  4982 ;; This function is called by:
  4983 ;;		_InterruptHandlerLow
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text31
  4988  0017EE                     __ptext31:
  4989                           	opt stack 0
  4990  0017EE                     _uart_trans_int_handler:
  4991                           	opt stack 17
  4992                           
  4993                           ;my_uart.c: 13: unsigned char* data = (0);
  4994                           
  4995                           ;incstack = 0
  4996  0017EE  0E00               	movlw	0
  4997  0017F0  6E20               	movwf	uart_trans_int_handler@data+1,c
  4998  0017F2  0E00               	movlw	0
  4999  0017F4  6E1F               	movwf	uart_trans_int_handler@data,c
  5000                           
  5001                           ;my_uart.c: 14: unsigned char msgtype;
  5002                           ;my_uart.c: 15: unsigned char curIndex;
  5003                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5004  0017F6  0E00               	movlw	high uart_trans_int_handler@msgtype
  5005  0017F8  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5006  0017FA  0E22               	movlw	low uart_trans_int_handler@msgtype
  5007  0017FC  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5008  0017FE  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5009  001802  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5010  001806  0E0A               	movlw	10
  5011  001808  EC05  F00E         	call	_FromMainLow_recvmsg
  5012  00180C  6E23               	movwf	uart_trans_int_handler@length,c
  5013                           
  5014                           ;my_uart.c: 17: if (length < 0) {
  5015  00180E  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5016  001810  D019               	goto	i1l340
  5017                           
  5018                           ;my_uart.c: 26: curIndex = 0;
  5019                           
  5020                           ;my_uart.c: 24: }
  5021                           ;my_uart.c: 25: } else {
  5022                           
  5023                           ;my_uart.c: 22: else{
  5024                           
  5025                           ;my_uart.c: 21: }
  5026  001812  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5027  001814  0E00               	movlw	0
  5028  001816  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5029  001818  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5030                           
  5031                           ;my_uart.c: 27: while(curIndex < length){
  5032  00181A  D00D               	goto	i1l3925
  5033  00181C                     i1l343:
  5034  00181C  A2AC               	btfss	4012,1,c	;volatile
  5035  00181E  D7FE               	goto	i1l343
  5036                           
  5037                           ;my_uart.c: 33: TXREG = data[curIndex];
  5038  001820  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5039  001822  0D01               	mullw	1
  5040  001824  50F3               	movf	prodl,w,c
  5041  001826  241F               	addwf	uart_trans_int_handler@data,w,c
  5042  001828  6ED9               	movwf	fsr2l,c
  5043  00182A  50F4               	movf	prodh,w,c
  5044  00182C  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5045  00182E  6EDA               	movwf	fsr2h,c
  5046  001830  50DF               	movf	indf2,w,c
  5047  001832  6EAD               	movwf	4013,c	;volatile
  5048                           
  5049                           ;my_uart.c: 35: curIndex++;
  5050  001834  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5051  001836                     i1l3925:
  5052  001836  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5053  001838  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5054  00183A  D004               	goto	i1l340
  5055  00183C  0AFF               	xorlw	255
  5056  00183E  2423               	addwf	uart_trans_int_handler@length,w,c
  5057  001840  B0D8               	btfsc	status,0,c
  5058  001842  D7EC               	goto	i1l343
  5059  001844                     i1l340:
  5060                           
  5061                           ;my_uart.c: 36: }
  5062                           ;my_uart.c: 37: }
  5063                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5064  001844  989D               	bcf	3997,4,c	;volatile
  5065  001846  0012               	return	
  5066  001848                     __end_of_uart_trans_int_handler:
  5067                           	opt stack 0
  5068                           pclatu	equ	0xFFB
  5069                           pclath	equ	0xFFA
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           prodh	equ	0xFF4
  5075                           prodl	equ	0xFF3
  5076                           intcon	equ	0xFF2
  5077                           postinc0	equ	0xFEE
  5078                           fsr0h	equ	0xFEA
  5079                           fsr0l	equ	0xFE9
  5080                           wreg	equ	0xFE8
  5081                           indf1	equ	0xFE7
  5082                           fsr1h	equ	0xFE2
  5083                           fsr1l	equ	0xFE1
  5084                           bsr	equ	0xFE0
  5085                           indf2	equ	0xFDF
  5086                           postinc2	equ	0xFDE
  5087                           postdec2	equ	0xFDD
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _FromMainLow_recvmsg *****************
  5093 ;; Defined at:
  5094 ;;		line 159 in file "src/messages.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  maxlength       1    wreg     unsigned char 
  5097 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5098 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5099 ;;  data            2   26[COMRAM] PTR void 
  5100 ;;		 -> NULL(0), 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  maxlength       1   28[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      char 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5112 ;;      Params:         4       0       0       0       0
  5113 ;;      Locals:         1       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0
  5115 ;;      Totals:         5       0       0       0       0
  5116 ;;Total ram usage:        5 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    7
  5119 ;; This function calls:
  5120 ;;		i1_recv_msg
  5121 ;; This function is called by:
  5122 ;;		_uart_trans_int_handler
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text32
  5127  001C0A                     __ptext32:
  5128                           	opt stack 0
  5129  001C0A                     _FromMainLow_recvmsg:
  5130                           	opt stack 17
  5131                           
  5132                           ;incstack = 0
  5133                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5134  001C0A  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5135                           
  5136                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5137  001C0E  0101               	movlb	1	; () banked
  5138  001C10  0E01               	movlw	high _FromMainLow_MQ
  5139  001C12  6E0C               	movwf	i1recv_msg@qptr+1,c
  5140  001C14  0101               	movlb	1	; () banked
  5141  001C16  0E36               	movlw	low _FromMainLow_MQ
  5142  001C18  6E0B               	movwf	i1recv_msg@qptr,c
  5143  001C1A  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5144  001C1E  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5145  001C22  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5146  001C26  6A11               	clrf	i1recv_msg@data+1,c
  5147  001C28  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5148  001C2C  ECBD  F007         	call	i1_recv_msg	;wreg free
  5149  001C30  0012               	return	
  5150  001C32                     __end_of_FromMainLow_recvmsg:
  5151                           	opt stack 0
  5152                           pclatu	equ	0xFFB
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           fsr0h	equ	0xFEA
  5163                           fsr0l	equ	0xFE9
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           fsr1h	equ	0xFE2
  5167                           fsr1l	equ	0xFE1
  5168                           bsr	equ	0xFE0
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function i1_recv_msg *****************
  5177 ;; Defined at:
  5178 ;;		line 63 in file "src/messages.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5181 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5182 ;;  maxlength       1   12[COMRAM] unsigned char 
  5183 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5184 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5185 ;;  data            2   15[COMRAM] PTR void 
  5186 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5189 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5190 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5191 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5192 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      char 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5202 ;;      Params:         7       0       0       0       0
  5203 ;;      Locals:         5       0       0       0       0
  5204 ;;      Temps:          2       0       0       0       0
  5205 ;;      Totals:        14       0       0       0       0
  5206 ;;Total ram usage:       14 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    6
  5209 ;; This function calls:
  5210 ;;		i1_memcpy
  5211 ;; This function is called by:
  5212 ;;		_FromMainLow_recvmsg
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text33
  5217  000F7A                     __ptext33:
  5218                           	opt stack 0
  5219  000F7A                     i1_recv_msg:
  5220                           	opt stack 17
  5221                           
  5222                           ;messages.c: 64: unsigned char slot;
  5223                           ;messages.c: 68: msg *qmsg;
  5224                           ;messages.c: 69: size_t tlength;
  5225                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5226                           
  5227                           ;incstack = 0
  5228  000F7A  EE20 F035          	lfsr	2,53
  5229  000F7E  500B               	movf	i1recv_msg@qptr,w,c
  5230  000F80  26D9               	addwf	fsr2l,f,c
  5231  000F82  500C               	movf	i1recv_msg@qptr+1,w,c
  5232  000F84  22DA               	addwfc	fsr2h,f,c
  5233  000F86  50DF               	movf	indf2,w,c
  5234  000F88  6E14               	movwf	i1recv_msg@slot,c
  5235                           
  5236                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5237  000F8A  5014               	movf	i1recv_msg@slot,w,c
  5238  000F8C  0D0D               	mullw	13
  5239  000F8E  50F3               	movf	prodl,w,c
  5240  000F90  240B               	addwf	i1recv_msg@qptr,w,c
  5241  000F92  6E17               	movwf	i1recv_msg@qmsg,c
  5242  000F94  50F4               	movf	prodh,w,c
  5243  000F96  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5244  000F98  6E18               	movwf	i1recv_msg@qmsg+1,c
  5245                           
  5246                           ;messages.c: 74: if (qmsg->full == 1) {
  5247  000F9A  0E01               	movlw	1
  5248  000F9C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5249  000FA0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5250  000FA4  62DF               	cpfseq	indf2,c
  5251  000FA6  D050               	goto	i1l3873
  5252                           
  5253                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5254  000FA8  EE20 F001          	lfsr	2,1
  5255  000FAC  5017               	movf	i1recv_msg@qmsg,w,c
  5256  000FAE  26D9               	addwf	fsr2l,f,c
  5257  000FB0  5018               	movf	i1recv_msg@qmsg+1,w,c
  5258  000FB2  22DA               	addwfc	fsr2h,f,c
  5259  000FB4  50DF               	movf	indf2,w,c
  5260  000FB6  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5261  000FB8  B0D8               	btfsc	status,0,c
  5262  000FBA  D002               	goto	i1l3857
  5263                           
  5264                           ;messages.c: 77: return (-3);
  5265  000FBC  0EFD               	movlw	253
  5266  000FBE  0012               	return	
  5267  000FC0                     i1l3857:
  5268                           
  5269                           ;messages.c: 78: }
  5270                           ;messages.c: 80: tlength = qmsg->length;
  5271  000FC0  EE20 F001          	lfsr	2,1
  5272  000FC4  5017               	movf	i1recv_msg@qmsg,w,c
  5273  000FC6  26D9               	addwf	fsr2l,f,c
  5274  000FC8  5018               	movf	i1recv_msg@qmsg+1,w,c
  5275  000FCA  22DA               	addwfc	fsr2h,f,c
  5276  000FCC  50DF               	movf	indf2,w,c
  5277  000FCE  6E12               	movwf	??i1_recv_msg& (0+255),c
  5278  000FD0  5012               	movf	??i1_recv_msg,w,c
  5279  000FD2  6E15               	movwf	i1recv_msg@tlength,c
  5280  000FD4  6A16               	clrf	i1recv_msg@tlength+1,c
  5281                           
  5282                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5283  000FD6  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5284  000FDA  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5285  000FDE  0E03               	movlw	3
  5286  000FE0  2417               	addwf	i1recv_msg@qmsg,w,c
  5287  000FE2  6E12               	movwf	??i1_recv_msg& (0+255),c
  5288  000FE4  0E00               	movlw	0
  5289  000FE6  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5290  000FE8  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5291  000FEA  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5292  000FEE  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5293  000FF2  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5294  000FF6  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5295  000FFA  ECD2  F00C         	call	i1_memcpy	;wreg free
  5296                           
  5297                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5298  000FFE  EE20 F035          	lfsr	2,53
  5299  001002  500B               	movf	i1recv_msg@qptr,w,c
  5300  001004  26D9               	addwf	fsr2l,f,c
  5301  001006  500C               	movf	i1recv_msg@qptr+1,w,c
  5302  001008  22DA               	addwfc	fsr2h,f,c
  5303  00100A  EE10 F035          	lfsr	1,53
  5304  00100E  500B               	movf	i1recv_msg@qptr,w,c
  5305  001010  26E1               	addwf	fsr1l,f,c
  5306  001012  500C               	movf	i1recv_msg@qptr+1,w,c
  5307  001014  22E2               	addwfc	fsr1h,f,c
  5308  001016  50E7               	movf	indf1,w,c
  5309  001018  6E12               	movwf	??i1_recv_msg& (0+255),c
  5310  00101A  2812               	incf	??i1_recv_msg,w,c
  5311  00101C  0B03               	andlw	3
  5312  00101E  6EDF               	movwf	indf2,c
  5313                           
  5314                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5315  001020  EE20 F002          	lfsr	2,2
  5316  001024  5017               	movf	i1recv_msg@qmsg,w,c
  5317  001026  26D9               	addwf	fsr2l,f,c
  5318  001028  5018               	movf	i1recv_msg@qmsg+1,w,c
  5319  00102A  22DA               	addwfc	fsr2h,f,c
  5320  00102C  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5321  001030  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5322  001034  CFDF FFE7          	movff	indf2,indf1
  5323                           
  5324                           ;messages.c: 91: qmsg->full = 0;
  5325  001038  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5326  00103C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5327  001040  0E00               	movlw	0
  5328  001042  6EDF               	movwf	indf2,c
  5329                           
  5330                           ;messages.c: 92: return (tlength);
  5331  001044  5015               	movf	i1recv_msg@tlength,w,c
  5332  001046  0012               	return	
  5333  001048                     i1l3873:
  5334                           
  5335                           ;messages.c: 94: return (-4);
  5336  001048  0EFC               	movlw	252
  5337  00104A  0012               	return	
  5338  00104C                     __end_ofi1_recv_msg:
  5339                           	opt stack 0
  5340                           pclatu	equ	0xFFB
  5341                           pclath	equ	0xFFA
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           postinc0	equ	0xFEE
  5350                           fsr0h	equ	0xFEA
  5351                           fsr0l	equ	0xFE9
  5352                           wreg	equ	0xFE8
  5353                           indf1	equ	0xFE7
  5354                           fsr1h	equ	0xFE2
  5355                           fsr1l	equ	0xFE1
  5356                           bsr	equ	0xFE0
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           postdec2	equ	0xFDD
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _uart_recv_int_handler *****************
  5365 ;; Defined at:
  5366 ;;		line 42 in file "src/my_uart.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5380 ;;      Params:         0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0
  5382 ;;      Temps:          1       0       0       0       0
  5383 ;;      Totals:         1       0       0       0       0
  5384 ;;Total ram usage:        1 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    8
  5387 ;; This function calls:
  5388 ;;		_ReadUSART
  5389 ;;		_ToMainLow_sendmsg
  5390 ;; This function is called by:
  5391 ;;		_InterruptHandlerLow
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text34
  5396  001290                     __ptext34:
  5397                           	opt stack 0
  5398  001290                     _uart_recv_int_handler:
  5399                           	opt stack 17
  5400                           
  5401                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5402                           
  5403                           ;incstack = 0
  5404  001290  AA9E               	btfss	3998,5,c	;volatile
  5405  001292  D03C               	goto	i1l3903
  5406                           
  5407                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5408  001294  EE20 F004          	lfsr	2,4
  5409  001298  5048               	movf	_uc_ptr,w,c
  5410  00129A  26D9               	addwf	fsr2l,f,c
  5411  00129C  5049               	movf	_uc_ptr+1,w,c
  5412  00129E  22DA               	addwfc	fsr2h,f,c
  5413  0012A0  50DF               	movf	indf2,w,c
  5414  0012A2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5415  0012A4  501B               	movf	??_uart_recv_int_handler,w,c
  5416  0012A6  0D01               	mullw	1
  5417  0012A8  50F3               	movf	prodl,w,c
  5418  0012AA  2448               	addwf	_uc_ptr,w,c
  5419  0012AC  6ED9               	movwf	fsr2l,c
  5420  0012AE  50F4               	movf	prodh,w,c
  5421  0012B0  2049               	addwfc	_uc_ptr+1,w,c
  5422  0012B2  6EDA               	movwf	fsr2h,c
  5423  0012B4  EC60  F00E         	call	_ReadUSART	;wreg free
  5424  0012B8  6EDF               	movwf	indf2,c
  5425                           
  5426                           ;my_uart.c: 56: uc_ptr->buflen++;
  5427  0012BA  EE20 F004          	lfsr	2,4
  5428  0012BE  5048               	movf	_uc_ptr,w,c
  5429  0012C0  26D9               	addwf	fsr2l,f,c
  5430  0012C2  5049               	movf	_uc_ptr+1,w,c
  5431  0012C4  22DA               	addwfc	fsr2h,f,c
  5432  0012C6  2ADF               	incf	indf2,f,c
  5433                           
  5434                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5435  0012C8  EE20 F004          	lfsr	2,4
  5436  0012CC  5048               	movf	_uc_ptr,w,c
  5437  0012CE  26D9               	addwf	fsr2l,f,c
  5438  0012D0  5049               	movf	_uc_ptr+1,w,c
  5439  0012D2  22DA               	addwfc	fsr2h,f,c
  5440  0012D4  0E04               	movlw	4
  5441  0012D6  62DF               	cpfseq	indf2,c
  5442  0012D8  D019               	goto	i1l3903
  5443                           
  5444                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5445  0012DA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5446  0012DC  0E20               	movlw	32
  5447  0012DE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5448  0012E0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5449  0012E2  C049  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5450  0012E6  C048  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5451  0012EA  EE20 F004          	lfsr	2,4
  5452  0012EE  5048               	movf	_uc_ptr,w,c
  5453  0012F0  26D9               	addwf	fsr2l,f,c
  5454  0012F2  5049               	movf	_uc_ptr+1,w,c
  5455  0012F4  22DA               	addwfc	fsr2h,f,c
  5456  0012F6  50DF               	movf	indf2,w,c
  5457  0012F8  EC2C  F00E         	call	_ToMainLow_sendmsg
  5458                           
  5459                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5460  0012FC  EE20 F004          	lfsr	2,4
  5461  001300  5048               	movf	_uc_ptr,w,c
  5462  001302  26D9               	addwf	fsr2l,f,c
  5463  001304  5049               	movf	_uc_ptr+1,w,c
  5464  001306  22DA               	addwfc	fsr2h,f,c
  5465  001308  0E00               	movlw	0
  5466  00130A  6EDF               	movwf	indf2,c
  5467  00130C                     i1l3903:
  5468                           
  5469                           ;my_uart.c: 61: }
  5470                           ;my_uart.c: 62: }
  5471                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5472  00130C  A64B               	btfss	_USART_Status,3,c
  5473  00130E  0012               	return	
  5474                           
  5475                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5476  001310  98AB               	bcf	4011,4,c	;volatile
  5477                           
  5478                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5479  001312  88AB               	bsf	4011,4,c	;volatile
  5480                           
  5481                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5482  001314  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5483  001316  0E1E               	movlw	30
  5484  001318  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5485  00131A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5486  00131C  0E00               	movlw	0
  5487  00131E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5488  001320  0E00               	movlw	0
  5489  001322  6E18               	movwf	ToMainLow_sendmsg@data,c
  5490  001324  0E00               	movlw	0
  5491  001326  EC2C  F00E         	call	_ToMainLow_sendmsg
  5492  00132A  0012               	return	
  5493  00132C                     __end_of_uart_recv_int_handler:
  5494                           	opt stack 0
  5495                           pclatu	equ	0xFFB
  5496                           pclath	equ	0xFFA
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           prodh	equ	0xFF4
  5502                           prodl	equ	0xFF3
  5503                           intcon	equ	0xFF2
  5504                           postinc0	equ	0xFEE
  5505                           fsr0h	equ	0xFEA
  5506                           fsr0l	equ	0xFE9
  5507                           wreg	equ	0xFE8
  5508                           indf1	equ	0xFE7
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           bsr	equ	0xFE0
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _ReadUSART *****************
  5520 ;; Defined at:
  5521 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  data            1    0[COMRAM] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      unsigned char 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5535 ;;      Params:         0       0       0       0       0
  5536 ;;      Locals:         1       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0
  5538 ;;      Totals:         1       0       0       0       0
  5539 ;;Total ram usage:        1 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    5
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_uart_recv_int_handler
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text35
  5550  001CC0                     __ptext35:
  5551                           	opt stack 0
  5552  001CC0                     _ReadUSART:
  5553                           	opt stack 19
  5554                           
  5555                           ;incstack = 0
  5556  001CC0  0EF2               	movlw	242
  5557  001CC2  164B               	andwf	_USART_Status,f,c
  5558  001CC4  ACAB               	btfss	4011,6,c	;volatile
  5559  001CC6  D003               	goto	i1l510
  5560  001CC8  904B               	bcf	_USART_Status,0,c
  5561  001CCA  B0AB               	btfsc	4011,0,c	;volatile
  5562  001CCC  804B               	bsf	_USART_Status,0,c
  5563  001CCE                     i1l510:
  5564  001CCE  B4AB               	btfsc	4011,2,c	;volatile
  5565  001CD0  844B               	bsf	_USART_Status,2,c
  5566  001CD2  B2AB               	btfsc	4011,1,c	;volatile
  5567  001CD4  864B               	bsf	_USART_Status,3,c
  5568  001CD6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5569  001CDA  5001               	movf	ReadUSART@data,w,c
  5570  001CDC  0012               	return	
  5571  001CDE                     __end_of_ReadUSART:
  5572                           	opt stack 0
  5573                           pclatu	equ	0xFFB
  5574                           pclath	equ	0xFFA
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           intcon	equ	0xFF2
  5582                           postinc0	equ	0xFEE
  5583                           fsr0h	equ	0xFEA
  5584                           fsr0l	equ	0xFE9
  5585                           wreg	equ	0xFE8
  5586                           indf1	equ	0xFE7
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           bsr	equ	0xFE0
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function _timer1_int_handler *****************
  5598 ;; Defined at:
  5599 ;;		line 36 in file "src/user_interrupts.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  result          2   27[COMRAM] unsigned int 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;		None               void
  5606 ;; Registers used:
  5607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5613 ;;      Params:         0       0       0       0       0
  5614 ;;      Locals:         2       0       0       0       0
  5615 ;;      Temps:          1       0       0       0       0
  5616 ;;      Totals:         3       0       0       0       0
  5617 ;;Total ram usage:        3 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    8
  5620 ;; This function calls:
  5621 ;;		_ReadTimer1
  5622 ;;		_ToMainLow_sendmsg
  5623 ;;		_WriteTimer1
  5624 ;; This function is called by:
  5625 ;;		_InterruptHandlerLow
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text36
  5630  001B30                     __ptext36:
  5631                           	opt stack 0
  5632  001B30                     _timer1_int_handler:
  5633                           	opt stack 17
  5634                           
  5635                           ;user_interrupts.c: 37: unsigned int result;
  5636                           ;user_interrupts.c: 44: result = ReadTimer1();
  5637                           
  5638                           ;incstack = 0
  5639  001B30  EC9E  F00E         	call	_ReadTimer1	;wreg free
  5640  001B34  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5641  001B38  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5642                           
  5643                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5644  001B3C  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5645  001B3E  0E0B               	movlw	11
  5646  001B40  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5647  001B42  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5648  001B44  0E00               	movlw	0
  5649  001B46  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5650  001B48  0E00               	movlw	0
  5651  001B4A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5652  001B4C  0E00               	movlw	0
  5653  001B4E  EC2C  F00E         	call	_ToMainLow_sendmsg
  5654                           
  5655                           ;user_interrupts.c: 48: WriteTimer1(0);
  5656  001B52  0E00               	movlw	0
  5657  001B54  6E02               	movwf	WriteTimer1@timer1+1,c
  5658  001B56  0E00               	movlw	0
  5659  001B58  6E01               	movwf	WriteTimer1@timer1,c
  5660  001B5A  EC95  F00E         	call	_WriteTimer1	;wreg free
  5661  001B5E  0012               	return	
  5662  001B60                     __end_of_timer1_int_handler:
  5663                           	opt stack 0
  5664                           pclatu	equ	0xFFB
  5665                           pclath	equ	0xFFA
  5666                           tblptru	equ	0xFF8
  5667                           tblptrh	equ	0xFF7
  5668                           tblptrl	equ	0xFF6
  5669                           tablat	equ	0xFF5
  5670                           prodh	equ	0xFF4
  5671                           prodl	equ	0xFF3
  5672                           intcon	equ	0xFF2
  5673                           postinc0	equ	0xFEE
  5674                           fsr0h	equ	0xFEA
  5675                           fsr0l	equ	0xFE9
  5676                           wreg	equ	0xFE8
  5677                           indf1	equ	0xFE7
  5678                           fsr1h	equ	0xFE2
  5679                           fsr1l	equ	0xFE1
  5680                           bsr	equ	0xFE0
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           postdec2	equ	0xFDD
  5684                           fsr2h	equ	0xFDA
  5685                           fsr2l	equ	0xFD9
  5686                           status	equ	0xFD8
  5687                           
  5688 ;; *************** function _WriteTimer1 *****************
  5689 ;; Defined at:
  5690 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  timer1          2    0[COMRAM] unsigned int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  timer           2    2[COMRAM] struct Timers
  5695 ;; Return value:  Size  Location     Type
  5696 ;;		None               void
  5697 ;; Registers used:
  5698 ;;		None
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5704 ;;      Params:         2       0       0       0       0
  5705 ;;      Locals:         2       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0
  5707 ;;      Totals:         4       0       0       0       0
  5708 ;;Total ram usage:        4 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    5
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_timer1_int_handler
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text37
  5719  001D2A                     __ptext37:
  5720                           	opt stack 0
  5721  001D2A                     _WriteTimer1:
  5722                           	opt stack 19
  5723                           
  5724                           ;incstack = 0
  5725  001D2A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5726  001D2E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5727  001D32  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5728  001D36  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5729  001D3A  0012               	return	
  5730  001D3C                     __end_of_WriteTimer1:
  5731                           	opt stack 0
  5732                           pclatu	equ	0xFFB
  5733                           pclath	equ	0xFFA
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           intcon	equ	0xFF2
  5741                           postinc0	equ	0xFEE
  5742                           fsr0h	equ	0xFEA
  5743                           fsr0l	equ	0xFE9
  5744                           wreg	equ	0xFE8
  5745                           indf1	equ	0xFE7
  5746                           fsr1h	equ	0xFE2
  5747                           fsr1l	equ	0xFE1
  5748                           bsr	equ	0xFE0
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           fsr2h	equ	0xFDA
  5753                           fsr2l	equ	0xFD9
  5754                           status	equ	0xFD8
  5755                           
  5756 ;; *************** function _ToMainLow_sendmsg *****************
  5757 ;; Defined at:
  5758 ;;		line 103 in file "src/messages.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  length          1    wreg     unsigned char 
  5761 ;;  msgtype         1   22[COMRAM] unsigned char 
  5762 ;;  data            2   23[COMRAM] PTR void 
  5763 ;;		 -> NULL(0), main@uc(5), 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  length          1   25[COMRAM] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      char 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5775 ;;      Params:         3       0       0       0       0
  5776 ;;      Locals:         1       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0
  5778 ;;      Totals:         4       0       0       0       0
  5779 ;;Total ram usage:        4 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    7
  5782 ;; This function calls:
  5783 ;;		i1_send_msg
  5784 ;; This function is called by:
  5785 ;;		_uart_recv_int_handler
  5786 ;;		_timer1_int_handler
  5787 ;;		_sendUART
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text38
  5792  001C58                     __ptext38:
  5793                           	opt stack 0
  5794  001C58                     _ToMainLow_sendmsg:
  5795                           	opt stack 17
  5796                           
  5797                           ;incstack = 0
  5798                           ;ToMainLow_sendmsg@length stored from wreg
  5799  001C58  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5800                           
  5801                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5802  001C5C  0100               	movlb	0	; () banked
  5803  001C5E  0E00               	movlw	high _ToMainLow_MQ
  5804  001C60  6E0C               	movwf	i1send_msg@qptr+1,c
  5805  001C62  0100               	movlb	0	; () banked
  5806  001C64  0E80               	movlw	low _ToMainLow_MQ
  5807  001C66  6E0B               	movwf	i1send_msg@qptr,c
  5808  001C68  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5809  001C6C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5810  001C70  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5811  001C74  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5812  001C78  ECF3  F008         	call	i1_send_msg	;wreg free
  5813  001C7C  0012               	return	
  5814  001C7E                     __end_of_ToMainLow_sendmsg:
  5815                           	opt stack 0
  5816                           pclatu	equ	0xFFB
  5817                           pclath	equ	0xFFA
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           prodh	equ	0xFF4
  5823                           prodl	equ	0xFF3
  5824                           intcon	equ	0xFF2
  5825                           postinc0	equ	0xFEE
  5826                           fsr0h	equ	0xFEA
  5827                           fsr0l	equ	0xFE9
  5828                           wreg	equ	0xFE8
  5829                           indf1	equ	0xFE7
  5830                           fsr1h	equ	0xFE2
  5831                           fsr1l	equ	0xFE1
  5832                           bsr	equ	0xFE0
  5833                           indf2	equ	0xFDF
  5834                           postinc2	equ	0xFDE
  5835                           postdec2	equ	0xFDD
  5836                           fsr2h	equ	0xFDA
  5837                           fsr2l	equ	0xFD9
  5838                           status	equ	0xFD8
  5839                           
  5840 ;; *************** function i1_send_msg *****************
  5841 ;; Defined at:
  5842 ;;		line 24 in file "src/messages.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5845 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5846 ;;  length          1   12[COMRAM] unsigned char 
  5847 ;;  msgtype         1   13[COMRAM] unsigned char 
  5848 ;;  data            2   14[COMRAM] PTR void 
  5849 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  5850 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5853 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5854 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5855 ;;  send_msg        2   17[COMRAM] unsigned int 
  5856 ;;  send_msg        1   19[COMRAM] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      char 
  5859 ;; Registers used:
  5860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5866 ;;      Params:         6       0       0       0       0
  5867 ;;      Locals:         5       0       0       0       0
  5868 ;;      Temps:          1       0       0       0       0
  5869 ;;      Totals:        12       0       0       0       0
  5870 ;;Total ram usage:       12 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    6
  5873 ;; This function calls:
  5874 ;;		i1_memcpy
  5875 ;; This function is called by:
  5876 ;;		_ToMainLow_sendmsg
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text39
  5881  0011E6                     __ptext39:
  5882                           	opt stack 0
  5883  0011E6                     i1_send_msg:
  5884                           	opt stack 17
  5885                           
  5886                           ;messages.c: 25: unsigned char slot;
  5887                           ;messages.c: 27: msg *qmsg;
  5888                           ;messages.c: 28: size_t tlength = length;
  5889                           
  5890                           ;incstack = 0
  5891  0011E6  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5892  0011EA  6A13               	clrf	i1send_msg@tlength+1,c
  5893                           
  5894                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5895  0011EC  EE20 F034          	lfsr	2,52
  5896  0011F0  500B               	movf	i1send_msg@qptr,w,c
  5897  0011F2  26D9               	addwf	fsr2l,f,c
  5898  0011F4  500C               	movf	i1send_msg@qptr+1,w,c
  5899  0011F6  22DA               	addwfc	fsr2h,f,c
  5900  0011F8  50DF               	movf	indf2,w,c
  5901  0011FA  6E14               	movwf	i1send_msg@slot,c
  5902                           
  5903                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5904  0011FC  5014               	movf	i1send_msg@slot,w,c
  5905  0011FE  0D0D               	mullw	13
  5906  001200  50F3               	movf	prodl,w,c
  5907  001202  240B               	addwf	i1send_msg@qptr,w,c
  5908  001204  6E15               	movwf	i1send_msg@qmsg,c
  5909  001206  50F4               	movf	prodh,w,c
  5910  001208  200C               	addwfc	i1send_msg@qptr+1,w,c
  5911  00120A  6E16               	movwf	i1send_msg@qmsg+1,c
  5912                           
  5913                           ;messages.c: 41: if (qmsg->full != 0) {
  5914  00120C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5915  001210  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5916  001214  50DF               	movf	indf2,w,c
  5917  001216  B4D8               	btfsc	status,2,c
  5918  001218  D002               	goto	i1l3833
  5919                           
  5920                           ;messages.c: 42: return (-1);
  5921  00121A  0EFF               	movlw	255
  5922  00121C  0012               	return	
  5923  00121E                     i1l3833:
  5924                           
  5925                           ;messages.c: 43: }
  5926                           ;messages.c: 46: qmsg->length = length;
  5927  00121E  EE20 F001          	lfsr	2,1
  5928  001222  5015               	movf	i1send_msg@qmsg,w,c
  5929  001224  26D9               	addwf	fsr2l,f,c
  5930  001226  5016               	movf	i1send_msg@qmsg+1,w,c
  5931  001228  22DA               	addwfc	fsr2h,f,c
  5932  00122A  C00D  FFDF         	movff	i1send_msg@length,indf2
  5933                           
  5934                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5935  00122E  EE20 F002          	lfsr	2,2
  5936  001232  5015               	movf	i1send_msg@qmsg,w,c
  5937  001234  26D9               	addwf	fsr2l,f,c
  5938  001236  5016               	movf	i1send_msg@qmsg+1,w,c
  5939  001238  22DA               	addwfc	fsr2h,f,c
  5940  00123A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5941                           
  5942                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5943  00123E  0E03               	movlw	3
  5944  001240  2415               	addwf	i1send_msg@qmsg,w,c
  5945  001242  6E01               	movwf	i1memcpy@d1,c
  5946  001244  0E00               	movlw	0
  5947  001246  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5948  001248  6E02               	movwf	i1memcpy@d1+1,c
  5949  00124A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5950  00124E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5951  001252  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5952  001256  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5953  00125A  ECD2  F00C         	call	i1_memcpy	;wreg free
  5954                           
  5955                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5956  00125E  EE20 F034          	lfsr	2,52
  5957  001262  500B               	movf	i1send_msg@qptr,w,c
  5958  001264  26D9               	addwf	fsr2l,f,c
  5959  001266  500C               	movf	i1send_msg@qptr+1,w,c
  5960  001268  22DA               	addwfc	fsr2h,f,c
  5961  00126A  EE10 F034          	lfsr	1,52
  5962  00126E  500B               	movf	i1send_msg@qptr,w,c
  5963  001270  26E1               	addwf	fsr1l,f,c
  5964  001272  500C               	movf	i1send_msg@qptr+1,w,c
  5965  001274  22E2               	addwfc	fsr1h,f,c
  5966  001276  50E7               	movf	indf1,w,c
  5967  001278  6E11               	movwf	??i1_send_msg& (0+255),c
  5968  00127A  2811               	incf	??i1_send_msg,w,c
  5969  00127C  0B03               	andlw	3
  5970  00127E  6EDF               	movwf	indf2,c
  5971                           
  5972                           ;messages.c: 59: qmsg->full = 1;
  5973  001280  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5974  001284  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5975  001288  0E01               	movlw	1
  5976  00128A  6EDF               	movwf	indf2,c
  5977                           
  5978                           ;messages.c: 60: return (1);
  5979  00128C  0E01               	movlw	1
  5980  00128E  0012               	return	
  5981  001290                     __end_ofi1_send_msg:
  5982                           	opt stack 0
  5983                           pclatu	equ	0xFFB
  5984                           pclath	equ	0xFFA
  5985                           tblptru	equ	0xFF8
  5986                           tblptrh	equ	0xFF7
  5987                           tblptrl	equ	0xFF6
  5988                           tablat	equ	0xFF5
  5989                           prodh	equ	0xFF4
  5990                           prodl	equ	0xFF3
  5991                           intcon	equ	0xFF2
  5992                           postinc0	equ	0xFEE
  5993                           fsr0h	equ	0xFEA
  5994                           fsr0l	equ	0xFE9
  5995                           wreg	equ	0xFE8
  5996                           indf1	equ	0xFE7
  5997                           fsr1h	equ	0xFE2
  5998                           fsr1l	equ	0xFE1
  5999                           bsr	equ	0xFE0
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function i1_memcpy *****************
  6008 ;; Defined at:
  6009 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  d1              2    0[COMRAM] PTR void 
  6012 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6013 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6014 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6015 ;;  s1              2    2[COMRAM] PTR const void 
  6016 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6017 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6018 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6019 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6020 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  6021 ;;  n               2    4[COMRAM] unsigned int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6024 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6025 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6026 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6027 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  6028 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  6029 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6030 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6031 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6032 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    0[COMRAM] PTR void 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6042 ;;      Params:         6       0       0       0       0
  6043 ;;      Locals:         4       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0
  6045 ;;      Totals:        10       0       0       0       0
  6046 ;;Total ram usage:       10 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    5
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		i1_send_msg
  6053 ;;		i1_recv_msg
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text40
  6058  0019A4                     __ptext40:
  6059                           	opt stack 0
  6060  0019A4                     i1_memcpy:
  6061                           	opt stack 17
  6062                           
  6063                           ;incstack = 0
  6064  0019A4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6065  0019A8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6066  0019AC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6067  0019B0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6068  0019B4  D00E               	goto	i1l3809
  6069  0019B6                     i1l3803:
  6070  0019B6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6071  0019BA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6072  0019BE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6073  0019C2  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6074  0019C6  CFDF FFE7          	movff	indf2,indf1
  6075  0019CA  4A09               	infsnz	i1memcpy@s,f,c
  6076  0019CC  2A0A               	incf	i1memcpy@s+1,f,c
  6077  0019CE  4A07               	infsnz	i1memcpy@d,f,c
  6078  0019D0  2A08               	incf	i1memcpy@d+1,f,c
  6079  0019D2                     i1l3809:
  6080  0019D2  0605               	decf	i1memcpy@n,f,c
  6081  0019D4  A0D8               	btfss	status,0,c
  6082  0019D6  0606               	decf	i1memcpy@n+1,f,c
  6083  0019D8  2805               	incf	i1memcpy@n& (0+255),w,c
  6084  0019DA  B4D8               	btfsc	status,2,c
  6085  0019DC  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6086  0019DE  B4D8               	btfsc	status,2,c
  6087                           
  6088                           ;	Return value of i1_memcpy is never used
  6089  0019E0  0012               	return	
  6090  0019E2  D7E9               	goto	i1l3803
  6091  0019E4                     __end_ofi1_memcpy:
  6092                           	opt stack 0
  6093                           pclatu	equ	0xFFB
  6094                           pclath	equ	0xFFA
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           intcon	equ	0xFF2
  6102                           postinc0	equ	0xFEE
  6103                           fsr0h	equ	0xFEA
  6104                           fsr0l	equ	0xFE9
  6105                           wreg	equ	0xFE8
  6106                           indf1	equ	0xFE7
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           bsr	equ	0xFE0
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function _ReadTimer1 *****************
  6118 ;; Defined at:
  6119 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  timer           2    2[COMRAM] struct Timers
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    0[COMRAM] unsigned int 
  6126 ;; Registers used:
  6127 ;;		None
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6133 ;;      Params:         2       0       0       0       0
  6134 ;;      Locals:         2       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0
  6136 ;;      Totals:         4       0       0       0       0
  6137 ;;Total ram usage:        4 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    5
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_timer1_int_handler
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text41
  6148  001D3C                     __ptext41:
  6149                           	opt stack 0
  6150  001D3C                     _ReadTimer1:
  6151                           	opt stack 19
  6152                           
  6153                           ;incstack = 0
  6154  001D3C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6155  001D40  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6156  001D44  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6157  001D48  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6158  001D4C  0012               	return	
  6159  001D4E                     __end_of_ReadTimer1:
  6160                           	opt stack 0
  6161                           pclatu	equ	0xFFB
  6162                           pclath	equ	0xFFA
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           intcon	equ	0xFF2
  6170                           postinc0	equ	0xFEE
  6171                           fsr0h	equ	0xFEA
  6172                           fsr0l	equ	0xFE9
  6173                           wreg	equ	0xFE8
  6174                           indf1	equ	0xFE7
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           bsr	equ	0xFE0
  6178                           indf2	equ	0xFDF
  6179                           postinc2	equ	0xFDE
  6180                           postdec2	equ	0xFDD
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _InterruptHandlerHigh *****************
  6186 ;; Defined at:
  6187 ;;		line 83 in file "src/interrupts.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6201 ;;      Params:         0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0
  6203 ;;      Temps:          0      14       0       0       0
  6204 ;;      Totals:         0      14       0       0       0
  6205 ;;Total ram usage:       14 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    4
  6208 ;; This function calls:
  6209 ;;		_SleepIfOkay
  6210 ;;		_i2c_int_handler
  6211 ;;		_timer0_int_handler
  6212 ;; This function is called by:
  6213 ;;		Interrupt level 2
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	intcode
  6218  000008                     __pintcode:
  6219                           	opt stack 0
  6220  000008                     _InterruptHandlerHigh:
  6221                           	opt stack 17
  6222                           
  6223                           ;incstack = 0
  6224  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh
  6225  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+1
  6226  000010  EF66  F00A         	goto	int_func
  6227                           pclatu	equ	0xFFB
  6228                           pclath	equ	0xFFA
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           fsr0h	equ	0xFEA
  6238                           fsr0l	equ	0xFE9
  6239                           wreg	equ	0xFE8
  6240                           indf1	equ	0xFE7
  6241                           fsr1h	equ	0xFE2
  6242                           fsr1l	equ	0xFE1
  6243                           bsr	equ	0xFE0
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251                           	psect	intcode_body
  6252  0014CC                     __pintcode_body:
  6253                           	opt stack 17
  6254  0014CC                     int_func:
  6255                           	opt stack 17
  6256  0014CC  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6257  0014D0  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6258  0014D4  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6259  0014D8  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6260  0014DC  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6261  0014E0  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6262  0014E4  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+8
  6263  0014E8  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+9
  6264  0014EC  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6265  0014F0  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6266  0014F4  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+12
  6267  0014F8  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+13
  6268                           
  6269                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6270  0014FC  A69E               	btfss	3998,3,c	;volatile
  6271  0014FE  D003               	goto	i2l3145
  6272                           
  6273                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6274  001500  969E               	bcf	3998,3,c	;volatile
  6275                           
  6276                           ;interrupts.c: 92: i2c_int_handler();
  6277  001502  EC62  F000         	call	_i2c_int_handler	;wreg free
  6278  001506                     i2l3145:
  6279                           
  6280                           ;interrupts.c: 93: }
  6281                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6282  001506  A4F2               	btfss	intcon,2,c	;volatile
  6283  001508  D003               	goto	i2l3151
  6284                           
  6285                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6286  00150A  94F2               	bcf	intcon,2,c	;volatile
  6287                           
  6288                           ;interrupts.c: 99: timer0_int_handler();
  6289  00150C  EC24  F00A         	call	_timer0_int_handler	;wreg free
  6290  001510                     i2l3151:
  6291                           
  6292                           ;interrupts.c: 100: }
  6293                           ;interrupts.c: 109: SleepIfOkay();
  6294  001510  EC24  F00C         	call	_SleepIfOkay	;wreg free
  6295  001514  C0D6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6296  001518  C0D5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6297  00151C  C0D4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6298  001520  C0D3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6299  001524  C0D2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6300  001528  C0D1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6301  00152C  C0D0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6302  001530  C0CF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6303  001534  C0CE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6304  001538  C0CD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6305  00153C  C0CC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6306  001540  C0CB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6307  001544  C0CA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6308  001548  C0C9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6309  00154C  0011               	retfie		f
  6310  00154E                     __end_of_InterruptHandlerHigh:
  6311                           	opt stack 0
  6312                           pclatu	equ	0xFFB
  6313                           pclath	equ	0xFFA
  6314                           tblptru	equ	0xFF8
  6315                           tblptrh	equ	0xFF7
  6316                           tblptrl	equ	0xFF6
  6317                           tablat	equ	0xFF5
  6318                           prodh	equ	0xFF4
  6319                           prodl	equ	0xFF3
  6320                           intcon	equ	0xFF2
  6321                           postinc0	equ	0xFEE
  6322                           fsr0h	equ	0xFEA
  6323                           fsr0l	equ	0xFE9
  6324                           wreg	equ	0xFE8
  6325                           indf1	equ	0xFE7
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           bsr	equ	0xFE0
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336 ;; *************** function _timer0_int_handler *****************
  6337 ;; Defined at:
  6338 ;;		line 16 in file "src/user_interrupts.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  val             2   15[BANK0 ] unsigned int 
  6343 ;;  msgtype         2   13[BANK0 ] int 
  6344 ;;  length          2   11[BANK0 ] int 
  6345 ;; Return value:  Size  Location     Type
  6346 ;;		None               void
  6347 ;; Registers used:
  6348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6354 ;;      Params:         0       0       0       0       0
  6355 ;;      Locals:         0       6       0       0       0
  6356 ;;      Temps:          0       1       0       0       0
  6357 ;;      Totals:         0       7       0       0       0
  6358 ;;Total ram usage:        7 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    3
  6361 ;; This function calls:
  6362 ;;		_FromMainHigh_recvmsg
  6363 ;;		_ToMainHigh_sendmsg
  6364 ;;		_WriteTimer0
  6365 ;; This function is called by:
  6366 ;;		_InterruptHandlerHigh
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text43
  6371  001448                     __ptext43:
  6372                           	opt stack 0
  6373  001448                     _timer0_int_handler:
  6374                           	opt stack 17
  6375                           
  6376                           ;user_interrupts.c: 17: unsigned int val;
  6377                           ;user_interrupts.c: 18: int length, msgtype;
  6378                           ;user_interrupts.c: 25: WriteTimer0(0);
  6379                           
  6380                           ;incstack = 0
  6381  001448  0E00               	movlw	0
  6382  00144A  6E36               	movwf	WriteTimer0@timer0+1,c
  6383  00144C  0E00               	movlw	0
  6384  00144E  6E35               	movwf	WriteTimer0@timer0,c
  6385  001450  ECA7  F00E         	call	_WriteTimer0	;wreg free
  6386                           
  6387                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6388  001454  0100               	movlb	0	; () banked
  6389  001456  0E00               	movlw	high timer0_int_handler@msgtype
  6390  001458  0100               	movlb	0	; () banked
  6391  00145A  0100               	movlb	0	; () banked
  6392  00145C  6FBC               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6393  00145E  0100               	movlb	0	; () banked
  6394  001460  0EC3               	movlw	low timer0_int_handler@msgtype
  6395  001462  0100               	movlb	0	; () banked
  6396  001464  0100               	movlb	0	; () banked
  6397  001466  6FBB               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6398  001468  0100               	movlb	0	; () banked
  6399  00146A  0E00               	movlw	high timer0_int_handler@val
  6400  00146C  0100               	movlb	0	; () banked
  6401  00146E  0100               	movlb	0	; () banked
  6402  001470  6FBE               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6403  001472  0100               	movlb	0	; () banked
  6404  001474  0EC5               	movlw	low timer0_int_handler@val
  6405  001476  0100               	movlb	0	; () banked
  6406  001478  0100               	movlb	0	; () banked
  6407  00147A  6FBD               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6408  00147C  0E02               	movlw	2
  6409  00147E  EC7F  F00D         	call	_FromMainHigh_recvmsg
  6410  001482  0100               	movlb	0	; () banked
  6411  001484  0100               	movlb	0	; () banked
  6412  001486  6FC1               	movwf	timer0_int_handler@length& (0+255),b
  6413  001488  0100               	movlb	0	; () banked
  6414  00148A  6BC2               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6415  00148C  0100               	movlb	0	; () banked
  6416  00148E  BFC1               	btfsc	timer0_int_handler@length& (0+255),7,b
  6417  001490  07C2               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6421  001492  0100               	movlb	0	; () banked
  6422  001494  0100               	movlb	0	; () banked
  6423  001496  51C1               	movf	timer0_int_handler@length& (0+255),w,b
  6424  001498  0A02               	xorlw	2
  6425  00149A  11C2               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6426  00149C  A4D8               	btfss	status,2,c
  6427  00149E  0012               	return	
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6431  0014A0  0100               	movlb	0	; () banked
  6432  0014A2  6FC0               	movwf	??_timer0_int_handler& (0+255),b
  6433  0014A4  0E0A               	movlw	10
  6434  0014A6  0100               	movlb	0	; () banked
  6435  0014A8  0100               	movlb	0	; () banked
  6436  0014AA  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6437  0014AC  0100               	movlb	0	; () banked
  6438  0014AE  51C0               	movf	??_timer0_int_handler& (0+255),w,b
  6439  0014B0  0100               	movlb	0	; () banked
  6440  0014B2  0E00               	movlw	high timer0_int_handler@val
  6441  0014B4  0100               	movlb	0	; () banked
  6442  0014B6  0100               	movlb	0	; () banked
  6443  0014B8  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6444  0014BA  0100               	movlb	0	; () banked
  6445  0014BC  0EC5               	movlw	low timer0_int_handler@val
  6446  0014BE  0100               	movlb	0	; () banked
  6447  0014C0  0100               	movlb	0	; () banked
  6448  0014C2  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6449  0014C4  0E02               	movlw	2
  6450  0014C6  ECDC  F00D         	call	_ToMainHigh_sendmsg
  6451  0014CA  0012               	return	
  6452  0014CC                     __end_of_timer0_int_handler:
  6453                           	opt stack 0
  6454                           pclatu	equ	0xFFB
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           postinc0	equ	0xFEE
  6464                           fsr0h	equ	0xFEA
  6465                           fsr0l	equ	0xFE9
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           bsr	equ	0xFE0
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _WriteTimer0 *****************
  6479 ;; Defined at:
  6480 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  timer0          2   52[COMRAM] unsigned int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  timer           2   54[COMRAM] struct Timers
  6485 ;; Return value:  Size  Location     Type
  6486 ;;		None               void
  6487 ;; Registers used:
  6488 ;;		None
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6494 ;;      Params:         2       0       0       0       0
  6495 ;;      Locals:         2       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0
  6497 ;;      Totals:         4       0       0       0       0
  6498 ;;Total ram usage:        4 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_timer0_int_handler
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text44
  6508  001D4E                     __ptext44:
  6509                           	opt stack 0
  6510  001D4E                     _WriteTimer0:
  6511                           	opt stack 19
  6512                           
  6513                           ;incstack = 0
  6514  001D4E  C035  F037         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6515  001D52  C036  F038         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6516  001D56  C038  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6517  001D5A  C037  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6518  001D5E  0012               	return	
  6519  001D60                     __end_of_WriteTimer0:
  6520                           	opt stack 0
  6521                           pclatu	equ	0xFFB
  6522                           pclath	equ	0xFFA
  6523                           tblptru	equ	0xFF8
  6524                           tblptrh	equ	0xFF7
  6525                           tblptrl	equ	0xFF6
  6526                           tablat	equ	0xFF5
  6527                           prodh	equ	0xFF4
  6528                           prodl	equ	0xFF3
  6529                           intcon	equ	0xFF2
  6530                           postinc0	equ	0xFEE
  6531                           fsr0h	equ	0xFEA
  6532                           fsr0l	equ	0xFE9
  6533                           wreg	equ	0xFE8
  6534                           indf1	equ	0xFE7
  6535                           fsr1h	equ	0xFE2
  6536                           fsr1l	equ	0xFE1
  6537                           bsr	equ	0xFE0
  6538                           indf2	equ	0xFDF
  6539                           postinc2	equ	0xFDE
  6540                           postdec2	equ	0xFDD
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _FromMainHigh_recvmsg *****************
  6546 ;; Defined at:
  6547 ;;		line 183 in file "src/messages.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  maxlength       1    wreg     unsigned char 
  6550 ;;  msgtype         2    5[BANK0 ] PTR unsigned char 
  6551 ;;		 -> timer0_int_handler@msgtype(2), 
  6552 ;;  data            2    7[BANK0 ] PTR void 
  6553 ;;		 -> timer0_int_handler@val(2), 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  maxlength       1    9[BANK0 ] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      char 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6565 ;;      Params:         0       4       0       0       0
  6566 ;;      Locals:         0       1       0       0       0
  6567 ;;      Temps:          0       0       0       0       0
  6568 ;;      Totals:         0       5       0       0       0
  6569 ;;Total ram usage:        5 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    2
  6572 ;; This function calls:
  6573 ;;		i2_recv_msg
  6574 ;; This function is called by:
  6575 ;;		_timer0_int_handler
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text45
  6580  001AFE                     __ptext45:
  6581                           	opt stack 0
  6582  001AFE                     _FromMainHigh_recvmsg:
  6583                           	opt stack 17
  6584                           
  6585                           ;incstack = 0
  6586                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6587  001AFE  CFE8 F0BF          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6588                           
  6589                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6590  001B02  0101               	movlb	1	; () banked
  6591  001B04  0E01               	movlw	high _FromMainHigh_MQ
  6592  001B06  6E40               	movwf	i2recv_msg@qptr+1,c
  6593  001B08  0101               	movlb	1	; () banked
  6594  001B0A  0E00               	movlw	low _FromMainHigh_MQ
  6595  001B0C  6E3F               	movwf	i2recv_msg@qptr,c
  6596  001B0E  C0BF  F041         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6597  001B12  0100               	movlb	0	; () banked
  6598  001B14  C0BC  F043         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6599  001B18  0100               	movlb	0	; () banked
  6600  001B1A  C0BB  F042         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6601  001B1E  0100               	movlb	0	; () banked
  6602  001B20  C0BE  F045         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6603  001B24  0100               	movlb	0	; () banked
  6604  001B26  C0BD  F044         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6605  001B2A  ECC6  F006         	call	i2_recv_msg	;wreg free
  6606  001B2E  0012               	return	
  6607  001B30                     __end_of_FromMainHigh_recvmsg:
  6608                           	opt stack 0
  6609                           pclatu	equ	0xFFB
  6610                           pclath	equ	0xFFA
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           fsr0h	equ	0xFEA
  6620                           fsr0l	equ	0xFE9
  6621                           wreg	equ	0xFE8
  6622                           indf1	equ	0xFE7
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           bsr	equ	0xFE0
  6626                           indf2	equ	0xFDF
  6627                           postinc2	equ	0xFDE
  6628                           postdec2	equ	0xFDD
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function i2_recv_msg *****************
  6634 ;; Defined at:
  6635 ;;		line 63 in file "src/messages.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  6638 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6639 ;;  maxlength       1   64[COMRAM] unsigned char 
  6640 ;;  msgtype         2   65[COMRAM] PTR unsigned char 
  6641 ;;		 -> timer0_int_handler@msgtype(2), uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6642 ;;  data            2   67[COMRAM] PTR void 
  6643 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
  6646 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6647 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6648 ;;  recv_msg        2    1[BANK0 ] unsigned int 
  6649 ;;  recv_msg        1    0[BANK0 ] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      char 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6659 ;;      Params:         7       0       0       0       0
  6660 ;;      Locals:         0       5       0       0       0
  6661 ;;      Temps:          2       0       0       0       0
  6662 ;;      Totals:         9       5       0       0       0
  6663 ;;Total ram usage:       14 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    1
  6666 ;; This function calls:
  6667 ;;		i2_memcpy
  6668 ;; This function is called by:
  6669 ;;		_FromMainHigh_recvmsg
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text46
  6674  000D8C                     __ptext46:
  6675                           	opt stack 0
  6676  000D8C                     i2_recv_msg:
  6677                           	opt stack 17
  6678                           
  6679                           ;messages.c: 64: unsigned char slot;
  6680                           ;messages.c: 68: msg *qmsg;
  6681                           ;messages.c: 69: size_t tlength;
  6682                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6683                           
  6684                           ;incstack = 0
  6685  000D8C  EE20 F035          	lfsr	2,53
  6686  000D90  503F               	movf	i2recv_msg@qptr,w,c
  6687  000D92  26D9               	addwf	fsr2l,f,c
  6688  000D94  5040               	movf	i2recv_msg@qptr+1,w,c
  6689  000D96  22DA               	addwfc	fsr2h,f,c
  6690  000D98  50DF               	movf	indf2,w,c
  6691  000D9A  0100               	movlb	0	; () banked
  6692  000D9C  0100               	movlb	0	; () banked
  6693  000D9E  6FB6               	movwf	i2recv_msg@slot& (0+255),b
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6697  000DA0  0100               	movlb	0	; () banked
  6698  000DA2  0100               	movlb	0	; () banked
  6699  000DA4  51B6               	movf	i2recv_msg@slot& (0+255),w,b
  6700  000DA6  0D0D               	mullw	13
  6701  000DA8  50F3               	movf	prodl,w,c
  6702  000DAA  243F               	addwf	i2recv_msg@qptr,w,c
  6703  000DAC  0100               	movlb	0	; () banked
  6704  000DAE  0100               	movlb	0	; () banked
  6705  000DB0  6FB9               	movwf	i2recv_msg@qmsg& (0+255),b
  6706  000DB2  50F4               	movf	prodh,w,c
  6707  000DB4  2040               	addwfc	i2recv_msg@qptr+1,w,c
  6708  000DB6  0100               	movlb	0	; () banked
  6709  000DB8  6FBA               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;messages.c: 74: if (qmsg->full == 1) {
  6713  000DBA  0E01               	movlw	1
  6714  000DBC  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6715  000DC0  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6716  000DC4  62DF               	cpfseq	indf2,c
  6717  000DC6  D062               	goto	i2l3797
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6721  000DC8  0100               	movlb	0	; () banked
  6722  000DCA  EE20 F001          	lfsr	2,1
  6723  000DCE  0100               	movlb	0	; () banked
  6724  000DD0  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6725  000DD2  26D9               	addwf	fsr2l,f,c
  6726  000DD4  0100               	movlb	0	; () banked
  6727  000DD6  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6728  000DD8  22DA               	addwfc	fsr2h,f,c
  6729  000DDA  50DF               	movf	indf2,w,c
  6730  000DDC  5C41               	subwf	i2recv_msg@maxlength,w,c
  6731  000DDE  B0D8               	btfsc	status,0,c
  6732  000DE0  D002               	goto	i2l3781
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;messages.c: 77: return (-3);
  6736  000DE2  0EFD               	movlw	253
  6737  000DE4  0012               	return	
  6738  000DE6                     i2l3781:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;messages.c: 78: }
  6742                           ;messages.c: 80: tlength = qmsg->length;
  6743  000DE6  0100               	movlb	0	; () banked
  6744  000DE8  EE20 F001          	lfsr	2,1
  6745  000DEC  0100               	movlb	0	; () banked
  6746  000DEE  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6747  000DF0  26D9               	addwf	fsr2l,f,c
  6748  000DF2  0100               	movlb	0	; () banked
  6749  000DF4  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6750  000DF6  22DA               	addwfc	fsr2h,f,c
  6751  000DF8  50DF               	movf	indf2,w,c
  6752  000DFA  6E46               	movwf	??i2_recv_msg& (0+255),c
  6753  000DFC  5046               	movf	??i2_recv_msg,w,c
  6754  000DFE  0100               	movlb	0	; () banked
  6755  000E00  0100               	movlb	0	; () banked
  6756  000E02  6FB7               	movwf	i2recv_msg@tlength& (0+255),b
  6757  000E04  0100               	movlb	0	; () banked
  6758  000E06  6BB8               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6762  000E08  C045  F036         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6763  000E0C  C044  F035         	movff	i2recv_msg@data,i2memcpy@d1
  6764  000E10  0E03               	movlw	3
  6765  000E12  0100               	movlb	0	; () banked
  6766  000E14  0100               	movlb	0	; () banked
  6767  000E16  25B9               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6768  000E18  6E46               	movwf	??i2_recv_msg& (0+255),c
  6769  000E1A  0E00               	movlw	0
  6770  000E1C  0100               	movlb	0	; () banked
  6771  000E1E  0100               	movlb	0	; () banked
  6772  000E20  21BA               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6773  000E22  6E47               	movwf	(??i2_recv_msg+1)& (0+255),c
  6774  000E24  C046  F037         	movff	??i2_recv_msg,i2memcpy@s1
  6775  000E28  C047  F038         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6776  000E2C  C0B7  F039         	movff	i2recv_msg@tlength,i2memcpy@n
  6777  000E30  C0B8  F03A         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6778  000E34  ECF2  F00C         	call	i2_memcpy	;wreg free
  6779                           
  6780                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6781  000E38  EE20 F035          	lfsr	2,53
  6782  000E3C  503F               	movf	i2recv_msg@qptr,w,c
  6783  000E3E  26D9               	addwf	fsr2l,f,c
  6784  000E40  5040               	movf	i2recv_msg@qptr+1,w,c
  6785  000E42  22DA               	addwfc	fsr2h,f,c
  6786  000E44  EE10 F035          	lfsr	1,53
  6787  000E48  503F               	movf	i2recv_msg@qptr,w,c
  6788  000E4A  26E1               	addwf	fsr1l,f,c
  6789  000E4C  5040               	movf	i2recv_msg@qptr+1,w,c
  6790  000E4E  22E2               	addwfc	fsr1h,f,c
  6791  000E50  50E7               	movf	indf1,w,c
  6792  000E52  6E46               	movwf	??i2_recv_msg& (0+255),c
  6793  000E54  2846               	incf	??i2_recv_msg,w,c
  6794  000E56  0B03               	andlw	3
  6795  000E58  6EDF               	movwf	indf2,c
  6796                           
  6797                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6798  000E5A  0100               	movlb	0	; () banked
  6799  000E5C  EE20 F002          	lfsr	2,2
  6800  000E60  0100               	movlb	0	; () banked
  6801  000E62  51B9               	movf	i2recv_msg@qmsg& (0+255),w,b
  6802  000E64  26D9               	addwf	fsr2l,f,c
  6803  000E66  0100               	movlb	0	; () banked
  6804  000E68  51BA               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6805  000E6A  22DA               	addwfc	fsr2h,f,c
  6806  000E6C  C042  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6807  000E70  C043  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6808  000E74  CFDF FFE7          	movff	indf2,indf1
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;messages.c: 91: qmsg->full = 0;
  6812  000E78  C0B9  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6813  000E7C  C0BA  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6814  000E80  0E00               	movlw	0
  6815  000E82  6EDF               	movwf	indf2,c
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;messages.c: 92: return (tlength);
  6819  000E84  0100               	movlb	0	; () banked
  6820  000E86  0100               	movlb	0	; () banked
  6821  000E88  51B7               	movf	i2recv_msg@tlength& (0+255),w,b
  6822  000E8A  0012               	return	
  6823  000E8C                     i2l3797:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;messages.c: 94: return (-4);
  6827  000E8C  0EFC               	movlw	252
  6828  000E8E  0012               	return	
  6829  000E90                     __end_ofi2_recv_msg:
  6830                           	opt stack 0
  6831                           pclatu	equ	0xFFB
  6832                           pclath	equ	0xFFA
  6833                           tblptru	equ	0xFF8
  6834                           tblptrh	equ	0xFF7
  6835                           tblptrl	equ	0xFF6
  6836                           tablat	equ	0xFF5
  6837                           prodh	equ	0xFF4
  6838                           prodl	equ	0xFF3
  6839                           intcon	equ	0xFF2
  6840                           postinc0	equ	0xFEE
  6841                           fsr0h	equ	0xFEA
  6842                           fsr0l	equ	0xFE9
  6843                           wreg	equ	0xFE8
  6844                           indf1	equ	0xFE7
  6845                           fsr1h	equ	0xFE2
  6846                           fsr1l	equ	0xFE1
  6847                           bsr	equ	0xFE0
  6848                           indf2	equ	0xFDF
  6849                           postinc2	equ	0xFDE
  6850                           postdec2	equ	0xFDD
  6851                           fsr2h	equ	0xFDA
  6852                           fsr2l	equ	0xFD9
  6853                           status	equ	0xFD8
  6854                           
  6855 ;; *************** function _i2c_int_handler *****************
  6856 ;; Defined at:
  6857 ;;		line 100 in file "src/my_i2c.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  error_buf       3   10[BANK0 ] unsigned char [3]
  6862 ;;  data_read       1   18[BANK0 ] unsigned char 
  6863 ;;  msg_ready       1   17[BANK0 ] unsigned char 
  6864 ;;  msg_to_send     1   16[BANK0 ] unsigned char 
  6865 ;;  i2c_data        1   15[BANK0 ] unsigned char 
  6866 ;;  overrun_erro    1   14[BANK0 ] unsigned char 
  6867 ;;  data_written    1   13[BANK0 ] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;		None               void
  6870 ;; Registers used:
  6871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6877 ;;      Params:         0       0       0       0       0
  6878 ;;      Locals:         0       9       0       0       0
  6879 ;;      Temps:          0       2       0       0       0
  6880 ;;      Totals:         0      11       0       0       0
  6881 ;;Total ram usage:       11 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    3
  6884 ;; This function calls:
  6885 ;;		_ToMainHigh_sendmsg
  6886 ;;		_handle_start
  6887 ;; This function is called by:
  6888 ;;		_InterruptHandlerHigh
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text47
  6893  0000C4                     __ptext47:
  6894                           	opt stack 0
  6895  0000C4                     _i2c_int_handler:
  6896                           	opt stack 17
  6897                           
  6898                           ;my_i2c.c: 101: unsigned char i2c_data;
  6899                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;incstack = 0
  6903  0000C4  0100               	movlb	0	; () banked
  6904  0000C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6905  0000C8  0E00               	movlw	0
  6906  0000CA  0100               	movlb	0	; () banked
  6907  0000CC  0100               	movlb	0	; () banked
  6908  0000CE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  6909  0000D0  0100               	movlb	0	; () banked
  6910  0000D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6911                           
  6912                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6913  0000D4  0100               	movlb	0	; () banked
  6914  0000D6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6915  0000D8  0E00               	movlw	0
  6916  0000DA  0100               	movlb	0	; () banked
  6917  0000DC  0100               	movlb	0	; () banked
  6918  0000DE  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  6919  0000E0  0100               	movlb	0	; () banked
  6920  0000E2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6921                           
  6922                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6923  0000E4  0100               	movlb	0	; () banked
  6924  0000E6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6925  0000E8  0E00               	movlw	0
  6926  0000EA  0100               	movlb	0	; () banked
  6927  0000EC  0100               	movlb	0	; () banked
  6928  0000EE  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6929  0000F0  0100               	movlb	0	; () banked
  6930  0000F2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6931                           
  6932                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6933  0000F4  0100               	movlb	0	; () banked
  6934  0000F6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6935  0000F8  0E00               	movlw	0
  6936  0000FA  0100               	movlb	0	; () banked
  6937  0000FC  0100               	movlb	0	; () banked
  6938  0000FE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6939  000100  0100               	movlb	0	; () banked
  6940  000102  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6941                           
  6942                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6943  000104  0100               	movlb	0	; () banked
  6944  000106  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6945  000108  0E00               	movlw	0
  6946  00010A  0100               	movlb	0	; () banked
  6947  00010C  0100               	movlb	0	; () banked
  6948  00010E  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6949  000110  0100               	movlb	0	; () banked
  6950  000112  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6954                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6955  000114  ACC6               	btfss	4038,6,c	;volatile
  6956  000116  D029               	goto	i2l3167
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6960  000118  9CC6               	bcf	4038,6,c	;volatile
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6964  00011A  0100               	movlb	0	; () banked
  6965  00011C  EE20 F00C          	lfsr	2,12
  6966  000120  0100               	movlb	0	; () banked
  6967  000122  51DD               	movf	_ic_ptr& (0+255),w,b
  6968  000124  26D9               	addwf	fsr2l,f,c
  6969  000126  0100               	movlb	0	; () banked
  6970  000128  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6971  00012A  22DA               	addwfc	fsr2h,f,c
  6972  00012C  0E05               	movlw	5
  6973  00012E  6EDF               	movwf	indf2,c
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;my_i2c.c: 116: overrun_error = 1;
  6977  000130  0100               	movlb	0	; () banked
  6978  000132  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  6979  000134  0E01               	movlw	1
  6980  000136  0100               	movlb	0	; () banked
  6981  000138  0100               	movlb	0	; () banked
  6982  00013A  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6983  00013C  0100               	movlb	0	; () banked
  6984  00013E  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6988  000140  0100               	movlb	0	; () banked
  6989  000142  EE20 F00E          	lfsr	2,14
  6990  000146  0100               	movlb	0	; () banked
  6991  000148  51DD               	movf	_ic_ptr& (0+255),w,b
  6992  00014A  26D9               	addwf	fsr2l,f,c
  6993  00014C  0100               	movlb	0	; () banked
  6994  00014E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  6995  000150  22DA               	addwfc	fsr2h,f,c
  6996  000152  2ADF               	incf	indf2,f,c
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7000  000154  0100               	movlb	0	; () banked
  7001  000156  EE20 F00D          	lfsr	2,13
  7002  00015A  0100               	movlb	0	; () banked
  7003  00015C  51DD               	movf	_ic_ptr& (0+255),w,b
  7004  00015E  26D9               	addwf	fsr2l,f,c
  7005  000160  0100               	movlb	0	; () banked
  7006  000162  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7007  000164  22DA               	addwfc	fsr2h,f,c
  7008  000166  0E04               	movlw	4
  7009  000168  6EDF               	movwf	indf2,c
  7010  00016A                     i2l3167:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 119: }
  7014                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7015  00016A  A0C7               	btfss	4039,0,c	;volatile
  7016  00016C  D00A               	goto	i2l3173
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7020  00016E  CFC9 F0C5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 123: data_read = 1;
  7024  000172  0100               	movlb	0	; () banked
  7025  000174  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7026  000176  0E01               	movlw	1
  7027  000178  0100               	movlb	0	; () banked
  7028  00017A  0100               	movlb	0	; () banked
  7029  00017C  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7030  00017E  0100               	movlb	0	; () banked
  7031  000180  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7032  000182                     i2l3173:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;my_i2c.c: 124: }
  7036                           ;my_i2c.c: 126: if (!overrun_error) {
  7037  000182  0100               	movlb	0	; () banked
  7038  000184  0100               	movlb	0	; () banked
  7039  000186  67C4               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7040  000188  D1CE               	goto	i2l267
  7041  00018A  D1B7               	goto	i2l3261
  7042  00018C                     i2l269:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;my_i2c.c: 129: {
  7046                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7047  00018C  A6C7               	btfss	4039,3,c	;volatile
  7048  00018E  D1CB               	goto	i2l267
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 132: handle_start(data_read);
  7052  000190  0100               	movlb	0	; () banked
  7053  000192  0100               	movlb	0	; () banked
  7054  000194  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7055  000196  EC8F  F008         	call	_handle_start
  7056                           
  7057                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7058  00019A  0100               	movlb	0	; () banked
  7059  00019C  EE20 F00C          	lfsr	2,12
  7060  0001A0  0100               	movlb	0	; () banked
  7061  0001A2  51DD               	movf	_ic_ptr& (0+255),w,b
  7062  0001A4  26D9               	addwf	fsr2l,f,c
  7063  0001A6  0100               	movlb	0	; () banked
  7064  0001A8  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7065  0001AA  22DA               	addwfc	fsr2h,f,c
  7066  0001AC  0E08               	movlw	8
  7067  0001AE  62DF               	cpfseq	indf2,c
  7068  0001B0  D1BA               	goto	i2l267
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 135: data_read = 0;
  7072  0001B2  0100               	movlb	0	; () banked
  7073  0001B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7074  0001B6  0E00               	movlw	0
  7075  0001B8  0100               	movlb	0	; () banked
  7076  0001BA  0100               	movlb	0	; () banked
  7077  0001BC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7078  0001BE  0100               	movlb	0	; () banked
  7079  0001C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7080                           
  7081                           ;my_i2c.c: 136: msg_to_send = 1;
  7082  0001C2  0100               	movlb	0	; () banked
  7083  0001C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7084  0001C6  0E01               	movlw	1
  7085  0001C8  0100               	movlb	0	; () banked
  7086  0001CA  0100               	movlb	0	; () banked
  7087  0001CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7088  0001CE  D187               	goto	L9
  7089  0001D0                     i2l273:
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 142: {
  7093                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7094  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7095  0001D2  D030               	goto	i2l3193
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7099  0001D4  0100               	movlb	0	; () banked
  7100  0001D6  EE20 F00B          	lfsr	2,11
  7101  0001DA  0100               	movlb	0	; () banked
  7102  0001DC  51DD               	movf	_ic_ptr& (0+255),w,b
  7103  0001DE  26D9               	addwf	fsr2l,f,c
  7104  0001E0  0100               	movlb	0	; () banked
  7105  0001E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7106  0001E4  22DA               	addwfc	fsr2h,f,c
  7107  0001E6  2ADF               	incf	indf2,f,c
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;my_i2c.c: 148: if (data_read) {
  7111  0001E8  0100               	movlb	0	; () banked
  7112  0001EA  0100               	movlb	0	; () banked
  7113  0001EC  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7114  0001EE  B4D8               	btfsc	status,2,c
  7115  0001F0  D179               	goto	L11
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7119  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7120  0001F4  D009               	goto	i2l3191
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;my_i2c.c: 150: msg_ready = 1;
  7124  0001F6  0100               	movlb	0	; () banked
  7125  0001F8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7126  0001FA  0E01               	movlw	1
  7127  0001FC  0100               	movlb	0	; () banked
  7128  0001FE  0100               	movlb	0	; () banked
  7129  000200  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7130  000202  0100               	movlb	0	; () banked
  7131  000204  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7132                           
  7133                           ;my_i2c.c: 151: } else {
  7134  000206  D16E               	goto	L11
  7135  000208                     i2l3191:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7139  000208  0100               	movlb	0	; () banked
  7140  00020A  EE20 F00E          	lfsr	2,14
  7141  00020E  0100               	movlb	0	; () banked
  7142  000210  51DD               	movf	_ic_ptr& (0+255),w,b
  7143  000212  26D9               	addwf	fsr2l,f,c
  7144  000214  0100               	movlb	0	; () banked
  7145  000216  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7146  000218  22DA               	addwfc	fsr2h,f,c
  7147  00021A  2ADF               	incf	indf2,f,c
  7148                           
  7149                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7150  00021C  0100               	movlb	0	; () banked
  7151  00021E  EE20 F00D          	lfsr	2,13
  7152  000222  0100               	movlb	0	; () banked
  7153  000224  51DD               	movf	_ic_ptr& (0+255),w,b
  7154  000226  26D9               	addwf	fsr2l,f,c
  7155  000228  0100               	movlb	0	; () banked
  7156  00022A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7157  00022C  22DA               	addwfc	fsr2h,f,c
  7158  00022E  0E06               	movlw	6
  7159  000230  6EDF               	movwf	indf2,c
  7160                           
  7161                           ; BSR set to: 0
  7162  000232  D158               	goto	L11
  7163  000234                     i2l3193:
  7164                           
  7165                           ; BSR set to: 0
  7166  000234  0100               	movlb	0	; () banked
  7167  000236  0100               	movlb	0	; () banked
  7168  000238  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7169  00023A  B4D8               	btfsc	status,2,c
  7170  00023C  D174               	goto	i2l267
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7174  00023E  0100               	movlb	0	; () banked
  7175  000240  EE20 F00B          	lfsr	2,11
  7176  000244  0100               	movlb	0	; () banked
  7177  000246  51DD               	movf	_ic_ptr& (0+255),w,b
  7178  000248  26D9               	addwf	fsr2l,f,c
  7179  00024A  0100               	movlb	0	; () banked
  7180  00024C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7181  00024E  22DA               	addwfc	fsr2h,f,c
  7182  000250  2ADF               	incf	indf2,f,c
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7186  000252  BAC7               	btfsc	4039,5,c	;volatile
  7187  000254  D019               	goto	i2l3209
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7191  000256  B4C7               	btfsc	4039,2,c	;volatile
  7192  000258  D00B               	goto	i2l3203
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7196  00025A  0100               	movlb	0	; () banked
  7197  00025C  EE20 F00C          	lfsr	2,12
  7198  000260  0100               	movlb	0	; () banked
  7199  000262  51DD               	movf	_ic_ptr& (0+255),w,b
  7200  000264  26D9               	addwf	fsr2l,f,c
  7201  000266  0100               	movlb	0	; () banked
  7202  000268  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7203  00026A  22DA               	addwfc	fsr2h,f,c
  7204  00026C  0E07               	movlw	7
  7205  00026E  D076               	goto	L8
  7206  000270                     i2l3203:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7210  000270  0100               	movlb	0	; () banked
  7211  000272  EE20 F00C          	lfsr	2,12
  7212  000276  0100               	movlb	0	; () banked
  7213  000278  51DD               	movf	_ic_ptr& (0+255),w,b
  7214  00027A  26D9               	addwf	fsr2l,f,c
  7215  00027C  0100               	movlb	0	; () banked
  7216  00027E  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7217  000280  22DA               	addwfc	fsr2h,f,c
  7218  000282  0E08               	movlw	8
  7219  000284  6EDF               	movwf	indf2,c
  7220  000286  D11D               	goto	L12
  7221  000288                     i2l3209:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7225  000288  0100               	movlb	0	; () banked
  7226  00028A  EE20 F00E          	lfsr	2,14
  7227  00028E  0100               	movlb	0	; () banked
  7228  000290  51DD               	movf	_ic_ptr& (0+255),w,b
  7229  000292  26D9               	addwf	fsr2l,f,c
  7230  000294  0100               	movlb	0	; () banked
  7231  000296  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7232  000298  22DA               	addwfc	fsr2h,f,c
  7233  00029A  2ADF               	incf	indf2,f,c
  7234                           
  7235                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7236  00029C  0100               	movlb	0	; () banked
  7237  00029E  EE20 F00C          	lfsr	2,12
  7238  0002A2  0100               	movlb	0	; () banked
  7239  0002A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7240  0002A6  26D9               	addwf	fsr2l,f,c
  7241  0002A8  0100               	movlb	0	; () banked
  7242  0002AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  0002AC  22DA               	addwfc	fsr2h,f,c
  7244  0002AE  0E05               	movlw	5
  7245  0002B0  6EDF               	movwf	indf2,c
  7246                           
  7247                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7248  0002B2  0100               	movlb	0	; () banked
  7249  0002B4  EE20 F00D          	lfsr	2,13
  7250  0002B8  0100               	movlb	0	; () banked
  7251  0002BA  51DD               	movf	_ic_ptr& (0+255),w,b
  7252  0002BC  26D9               	addwf	fsr2l,f,c
  7253  0002BE  0100               	movlb	0	; () banked
  7254  0002C0  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7255  0002C2  22DA               	addwfc	fsr2h,f,c
  7256  0002C4  0E06               	movlw	6
  7257  0002C6  D04A               	goto	L8
  7258  0002C8                     i2l3211:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;my_i2c.c: 177: {
  7262                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7263  0002C8  0100               	movlb	0	; () banked
  7264  0002CA  EE20 F01A          	lfsr	2,26
  7265  0002CE  0100               	movlb	0	; () banked
  7266  0002D0  51DD               	movf	_ic_ptr& (0+255),w,b
  7267  0002D2  26D9               	addwf	fsr2l,f,c
  7268  0002D4  0100               	movlb	0	; () banked
  7269  0002D6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  0002D8  22DA               	addwfc	fsr2h,f,c
  7271  0002DA  50DF               	movf	indf2,w,c
  7272  0002DC  0100               	movlb	0	; () banked
  7273  0002DE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7274  0002E0  0100               	movlb	0	; () banked
  7275  0002E2  EE20 F019          	lfsr	2,25
  7276  0002E6  0100               	movlb	0	; () banked
  7277  0002E8  51DD               	movf	_ic_ptr& (0+255),w,b
  7278  0002EA  26D9               	addwf	fsr2l,f,c
  7279  0002EC  0100               	movlb	0	; () banked
  7280  0002EE  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7281  0002F0  22DA               	addwfc	fsr2h,f,c
  7282  0002F2  50DF               	movf	indf2,w,c
  7283  0002F4  0100               	movlb	0	; () banked
  7284  0002F6  5DBE               	subwf	??_i2c_int_handler& (0+255),w,b
  7285  0002F8  B0D8               	btfsc	status,0,c
  7286  0002FA  D0F4               	goto	L11
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7290  0002FC  0100               	movlb	0	; () banked
  7291  0002FE  EE20 F01A          	lfsr	2,26
  7292  000302  0100               	movlb	0	; () banked
  7293  000304  51DD               	movf	_ic_ptr& (0+255),w,b
  7294  000306  26D9               	addwf	fsr2l,f,c
  7295  000308  0100               	movlb	0	; () banked
  7296  00030A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7297  00030C  22DA               	addwfc	fsr2h,f,c
  7298  00030E  50DF               	movf	indf2,w,c
  7299  000310  0100               	movlb	0	; () banked
  7300  000312  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7301  000314  0100               	movlb	0	; () banked
  7302  000316  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7303  000318  0D01               	mullw	1
  7304  00031A  0E0F               	movlw	15
  7305  00031C  26F3               	addwf	prodl,f,c
  7306  00031E  0E00               	movlw	0
  7307  000320  22F4               	addwfc	prodh,f,c
  7308  000322  50F3               	movf	prodl,w,c
  7309  000324  0100               	movlb	0	; () banked
  7310  000326  0100               	movlb	0	; () banked
  7311  000328  25DD               	addwf	_ic_ptr& (0+255),w,b
  7312  00032A  6ED9               	movwf	fsr2l,c
  7313  00032C  50F4               	movf	prodh,w,c
  7314  00032E  0100               	movlb	0	; () banked
  7315  000330  0100               	movlb	0	; () banked
  7316  000332  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7317  000334  6EDA               	movwf	fsr2h,c
  7318  000336  50DF               	movf	indf2,w,c
  7319  000338  6EC9               	movwf	4041,c	;volatile
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7323  00033A  0100               	movlb	0	; () banked
  7324  00033C  EE20 F01A          	lfsr	2,26
  7325  000340  0100               	movlb	0	; () banked
  7326  000342  51DD               	movf	_ic_ptr& (0+255),w,b
  7327  000344  26D9               	addwf	fsr2l,f,c
  7328  000346  0100               	movlb	0	; () banked
  7329  000348  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7330  00034A  22DA               	addwfc	fsr2h,f,c
  7331  00034C  2ADF               	incf	indf2,f,c
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 181: data_written = 1;
  7335  00034E  0100               	movlb	0	; () banked
  7336  000350  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7337  000352  0E01               	movlw	1
  7338  000354  0100               	movlb	0	; () banked
  7339  000356  0100               	movlb	0	; () banked
  7340  000358  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7341  00035A  D0C1               	goto	L9
  7342  00035C                     L8:
  7343  00035C  6EDF               	movwf	indf2,c
  7344  00035E  D0E3               	goto	i2l267
  7345  000360                     i2l287:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;my_i2c.c: 189: {
  7349                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7350  000360  A8C7               	btfss	4039,4,c	;volatile
  7351  000362  D062               	goto	i2l3239
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7355  000364  0100               	movlb	0	; () banked
  7356  000366  EE20 F00B          	lfsr	2,11
  7357  00036A  0100               	movlb	0	; () banked
  7358  00036C  51DD               	movf	_ic_ptr& (0+255),w,b
  7359  00036E  26D9               	addwf	fsr2l,f,c
  7360  000370  0100               	movlb	0	; () banked
  7361  000372  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  000374  22DA               	addwfc	fsr2h,f,c
  7363  000376  2ADF               	incf	indf2,f,c
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;my_i2c.c: 194: if (data_read) {
  7367  000378  0100               	movlb	0	; () banked
  7368  00037A  0100               	movlb	0	; () banked
  7369  00037C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7370  00037E  B4D8               	btfsc	status,2,c
  7371  000380  D04A               	goto	i2l3235
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7375  000382  AAC7               	btfss	4039,5,c	;volatile
  7376  000384  D027               	goto	i2l3233
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7380  000386  0100               	movlb	0	; () banked
  7381  000388  EE20 F00A          	lfsr	2,10
  7382  00038C  0100               	movlb	0	; () banked
  7383  00038E  51DD               	movf	_ic_ptr& (0+255),w,b
  7384  000390  26D9               	addwf	fsr2l,f,c
  7385  000392  0100               	movlb	0	; () banked
  7386  000394  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7387  000396  22DA               	addwfc	fsr2h,f,c
  7388  000398  50DF               	movf	indf2,w,c
  7389  00039A  0100               	movlb	0	; () banked
  7390  00039C  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7391  00039E  0100               	movlb	0	; () banked
  7392  0003A0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7393  0003A2  0D01               	mullw	1
  7394  0003A4  50F3               	movf	prodl,w,c
  7395  0003A6  0100               	movlb	0	; () banked
  7396  0003A8  0100               	movlb	0	; () banked
  7397  0003AA  25DD               	addwf	_ic_ptr& (0+255),w,b
  7398  0003AC  6ED9               	movwf	fsr2l,c
  7399  0003AE  50F4               	movf	prodh,w,c
  7400  0003B0  0100               	movlb	0	; () banked
  7401  0003B2  0100               	movlb	0	; () banked
  7402  0003B4  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7403  0003B6  6EDA               	movwf	fsr2h,c
  7404  0003B8  0100               	movlb	0	; () banked
  7405  0003BA  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7409  0003BE  0100               	movlb	0	; () banked
  7410  0003C0  EE20 F00A          	lfsr	2,10
  7411  0003C4  0100               	movlb	0	; () banked
  7412  0003C6  51DD               	movf	_ic_ptr& (0+255),w,b
  7413  0003C8  26D9               	addwf	fsr2l,f,c
  7414  0003CA  0100               	movlb	0	; () banked
  7415  0003CC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  0003CE  22DA               	addwfc	fsr2h,f,c
  7417  0003D0  2ADF               	incf	indf2,f,c
  7418  0003D2  D021               	goto	i2l3235
  7419  0003D4                     i2l3233:
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7423  0003D4  0100               	movlb	0	; () banked
  7424  0003D6  EE20 F00E          	lfsr	2,14
  7425  0003DA  0100               	movlb	0	; () banked
  7426  0003DC  51DD               	movf	_ic_ptr& (0+255),w,b
  7427  0003DE  26D9               	addwf	fsr2l,f,c
  7428  0003E0  0100               	movlb	0	; () banked
  7429  0003E2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7430  0003E4  22DA               	addwfc	fsr2h,f,c
  7431  0003E6  2ADF               	incf	indf2,f,c
  7432                           
  7433                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7434  0003E8  0100               	movlb	0	; () banked
  7435  0003EA  EE20 F00D          	lfsr	2,13
  7436  0003EE  0100               	movlb	0	; () banked
  7437  0003F0  51DD               	movf	_ic_ptr& (0+255),w,b
  7438  0003F2  26D9               	addwf	fsr2l,f,c
  7439  0003F4  0100               	movlb	0	; () banked
  7440  0003F6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7441  0003F8  22DA               	addwfc	fsr2h,f,c
  7442  0003FA  0E06               	movlw	6
  7443  0003FC  6EDF               	movwf	indf2,c
  7444                           
  7445                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7446  0003FE  0100               	movlb	0	; () banked
  7447  000400  EE20 F00C          	lfsr	2,12
  7448  000404  0100               	movlb	0	; () banked
  7449  000406  51DD               	movf	_ic_ptr& (0+255),w,b
  7450  000408  26D9               	addwf	fsr2l,f,c
  7451  00040A  0100               	movlb	0	; () banked
  7452  00040C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7453  00040E  22DA               	addwfc	fsr2h,f,c
  7454  000410  0E05               	movlw	5
  7455  000412  6EDF               	movwf	indf2,c
  7456  000414  D067               	goto	L11
  7457  000416                     i2l3235:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;my_i2c.c: 205: msg_ready = 1;
  7461  000416  0100               	movlb	0	; () banked
  7462  000418  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7463  00041A  0E01               	movlw	1
  7464  00041C  0100               	movlb	0	; () banked
  7465  00041E  0100               	movlb	0	; () banked
  7466  000420  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7467  000422  0100               	movlb	0	; () banked
  7468  000424  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7469                           
  7470                           ; BSR set to: 0
  7471  000426  D05E               	goto	L11
  7472  000428                     i2l3239:
  7473                           
  7474                           ; BSR set to: 0
  7475  000428  0100               	movlb	0	; () banked
  7476  00042A  0100               	movlb	0	; () banked
  7477  00042C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7478  00042E  B4D8               	btfsc	status,2,c
  7479  000430  D07A               	goto	i2l267
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7483  000432  0100               	movlb	0	; () banked
  7484  000434  EE20 F00B          	lfsr	2,11
  7485  000438  0100               	movlb	0	; () banked
  7486  00043A  51DD               	movf	_ic_ptr& (0+255),w,b
  7487  00043C  26D9               	addwf	fsr2l,f,c
  7488  00043E  0100               	movlb	0	; () banked
  7489  000440  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  000442  22DA               	addwfc	fsr2h,f,c
  7491  000444  2ADF               	incf	indf2,f,c
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7495  000446  AAC7               	btfss	4039,5,c	;volatile
  7496  000448  D027               	goto	i2l295
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7500  00044A  0100               	movlb	0	; () banked
  7501  00044C  EE20 F00A          	lfsr	2,10
  7502  000450  0100               	movlb	0	; () banked
  7503  000452  51DD               	movf	_ic_ptr& (0+255),w,b
  7504  000454  26D9               	addwf	fsr2l,f,c
  7505  000456  0100               	movlb	0	; () banked
  7506  000458  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  00045A  22DA               	addwfc	fsr2h,f,c
  7508  00045C  50DF               	movf	indf2,w,c
  7509  00045E  0100               	movlb	0	; () banked
  7510  000460  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7511  000462  0100               	movlb	0	; () banked
  7512  000464  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7513  000466  0D01               	mullw	1
  7514  000468  50F3               	movf	prodl,w,c
  7515  00046A  0100               	movlb	0	; () banked
  7516  00046C  0100               	movlb	0	; () banked
  7517  00046E  25DD               	addwf	_ic_ptr& (0+255),w,b
  7518  000470  6ED9               	movwf	fsr2l,c
  7519  000472  50F4               	movf	prodh,w,c
  7520  000474  0100               	movlb	0	; () banked
  7521  000476  0100               	movlb	0	; () banked
  7522  000478  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7523  00047A  6EDA               	movwf	fsr2h,c
  7524  00047C  0100               	movlb	0	; () banked
  7525  00047E  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7529  000482  0100               	movlb	0	; () banked
  7530  000484  EE20 F00A          	lfsr	2,10
  7531  000488  0100               	movlb	0	; () banked
  7532  00048A  51DD               	movf	_ic_ptr& (0+255),w,b
  7533  00048C  26D9               	addwf	fsr2l,f,c
  7534  00048E  0100               	movlb	0	; () banked
  7535  000490  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7536  000492  22DA               	addwfc	fsr2h,f,c
  7537  000494  2ADF               	incf	indf2,f,c
  7538                           
  7539                           ;my_i2c.c: 213: } else {
  7540  000496  D047               	goto	i2l267
  7541  000498                     i2l295:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7545  000498  A4C7               	btfss	4039,2,c	;volatile
  7546  00049A  D6B6               	goto	i2l3191
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7550  00049C  0100               	movlb	0	; () banked
  7551  00049E  EE20 F00C          	lfsr	2,12
  7552  0004A2  0100               	movlb	0	; () banked
  7553  0004A4  51DD               	movf	_ic_ptr& (0+255),w,b
  7554  0004A6  26D9               	addwf	fsr2l,f,c
  7555  0004A8  0100               	movlb	0	; () banked
  7556  0004AA  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  0004AC  22DA               	addwfc	fsr2h,f,c
  7558  0004AE  0E08               	movlw	8
  7559  0004B0  6EDF               	movwf	indf2,c
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;my_i2c.c: 216: msg_ready = 1;
  7563  0004B2  0100               	movlb	0	; () banked
  7564  0004B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7565  0004B6  0E01               	movlw	1
  7566  0004B8  0100               	movlb	0	; () banked
  7567  0004BA  0100               	movlb	0	; () banked
  7568  0004BC  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7569  0004BE  0100               	movlb	0	; () banked
  7570  0004C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7571  0004C2                     L12:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;my_i2c.c: 217: msg_to_send = 1;
  7575  0004C2  0100               	movlb	0	; () banked
  7576  0004C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7577  0004C6  0E01               	movlw	1
  7578  0004C8  0100               	movlb	0	; () banked
  7579  0004CA  0100               	movlb	0	; () banked
  7580  0004CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7581  0004CE  0100               	movlb	0	; () banked
  7582  0004D0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;my_i2c.c: 219: data_read = 0;
  7586  0004D2  0100               	movlb	0	; () banked
  7587  0004D4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7588  0004D6  0E00               	movlw	0
  7589  0004D8  0100               	movlb	0	; () banked
  7590  0004DA  0100               	movlb	0	; () banked
  7591  0004DC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7592  0004DE                     L9:
  7593  0004DE  0100               	movlb	0	; () banked
  7594  0004E0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7595                           
  7596                           ;my_i2c.c: 220: } else {
  7597  0004E2  D021               	goto	i2l267
  7598  0004E4                     L11:
  7599                           
  7600                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7601  0004E4  0100               	movlb	0	; () banked
  7602  0004E6  EE20 F00C          	lfsr	2,12
  7603  0004EA  0100               	movlb	0	; () banked
  7604  0004EC  51DD               	movf	_ic_ptr& (0+255),w,b
  7605  0004EE  26D9               	addwf	fsr2l,f,c
  7606  0004F0  0100               	movlb	0	; () banked
  7607  0004F2  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7608  0004F4  22DA               	addwfc	fsr2h,f,c
  7609  0004F6  0E05               	movlw	5
  7610  0004F8  D731               	goto	L8
  7611  0004FA                     i2l3261:
  7612                           
  7613                           ; BSR set to: 0
  7614  0004FA  0100               	movlb	0	; () banked
  7615  0004FC  EE20 F00C          	lfsr	2,12
  7616  000500  0100               	movlb	0	; () banked
  7617  000502  51DD               	movf	_ic_ptr& (0+255),w,b
  7618  000504  26D9               	addwf	fsr2l,f,c
  7619  000506  0100               	movlb	0	; () banked
  7620  000508  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7621  00050A  22DA               	addwfc	fsr2h,f,c
  7622  00050C  50DF               	movf	indf2,w,c
  7623                           
  7624                           ; Switch size 1, requested type "space"
  7625                           ; Number of cases is 4, Range of values is 5 to 8
  7626                           ; switch strategies available:
  7627                           ; Name         Instructions Cycles
  7628                           ; simple_byte           13     7 (average)
  7629                           ;	Chosen strategy is simple_byte
  7630  00050E  0A05               	xorlw	5	; case 5
  7631  000510  B4D8               	btfsc	status,2,c
  7632  000512  D63C               	goto	i2l269
  7633  000514  0A03               	xorlw	3	; case 6
  7634  000516  B4D8               	btfsc	status,2,c
  7635  000518  D65B               	goto	i2l273
  7636  00051A  0A01               	xorlw	1	; case 7
  7637  00051C  B4D8               	btfsc	status,2,c
  7638  00051E  D720               	goto	i2l287
  7639  000520  0A0F               	xorlw	15	; case 8
  7640  000522  B4D8               	btfsc	status,2,c
  7641  000524  D6D1               	goto	i2l3211
  7642  000526                     i2l267:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;my_i2c.c: 230: }
  7646                           ;my_i2c.c: 233: if (data_read || data_written) {
  7647  000526  0100               	movlb	0	; () banked
  7648  000528  0100               	movlb	0	; () banked
  7649  00052A  67C8               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7650  00052C  D005               	goto	i2l301
  7651                           
  7652                           ; BSR set to: 0
  7653  00052E  0100               	movlb	0	; () banked
  7654  000530  0100               	movlb	0	; () banked
  7655  000532  51C3               	movf	i2c_int_handler@data_written& (0+255),w,b
  7656  000534  B4D8               	btfsc	status,2,c
  7657  000536  D002               	goto	i2l3267
  7658  000538                     i2l301:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7662  000538  A8C6               	btfss	4038,4,c	;volatile
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7666  00053A  88C6               	bsf	4038,4,c	;volatile
  7667  00053C                     i2l3267:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;my_i2c.c: 237: }
  7671                           ;my_i2c.c: 238: }
  7672                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7673  00053C  0100               	movlb	0	; () banked
  7674  00053E  EE20 F00A          	lfsr	2,10
  7675  000542  0100               	movlb	0	; () banked
  7676  000544  51DD               	movf	_ic_ptr& (0+255),w,b
  7677  000546  26D9               	addwf	fsr2l,f,c
  7678  000548  0100               	movlb	0	; () banked
  7679  00054A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7680  00054C  22DA               	addwfc	fsr2h,f,c
  7681  00054E  0E08               	movlw	8
  7682  000550  64DF               	cpfsgt	indf2,c
  7683  000552  D024               	goto	i2l3273
  7684                           
  7685                           ; BSR set to: 0
  7686  000554  0100               	movlb	0	; () banked
  7687  000556  0100               	movlb	0	; () banked
  7688  000558  67C7               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7689  00055A  D020               	goto	i2l3273
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7693  00055C  0100               	movlb	0	; () banked
  7694  00055E  EE20 F00C          	lfsr	2,12
  7695  000562  0100               	movlb	0	; () banked
  7696  000564  51DD               	movf	_ic_ptr& (0+255),w,b
  7697  000566  26D9               	addwf	fsr2l,f,c
  7698  000568  0100               	movlb	0	; () banked
  7699  00056A  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7700  00056C  22DA               	addwfc	fsr2h,f,c
  7701  00056E  0E05               	movlw	5
  7702  000570  6EDF               	movwf	indf2,c
  7703                           
  7704                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7705  000572  0100               	movlb	0	; () banked
  7706  000574  EE20 F00E          	lfsr	2,14
  7707  000578  0100               	movlb	0	; () banked
  7708  00057A  51DD               	movf	_ic_ptr& (0+255),w,b
  7709  00057C  26D9               	addwf	fsr2l,f,c
  7710  00057E  0100               	movlb	0	; () banked
  7711  000580  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7712  000582  22DA               	addwfc	fsr2h,f,c
  7713  000584  2ADF               	incf	indf2,f,c
  7714                           
  7715                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7716  000586  0100               	movlb	0	; () banked
  7717  000588  EE20 F00D          	lfsr	2,13
  7718  00058C  0100               	movlb	0	; () banked
  7719  00058E  51DD               	movf	_ic_ptr& (0+255),w,b
  7720  000590  26D9               	addwf	fsr2l,f,c
  7721  000592  0100               	movlb	0	; () banked
  7722  000594  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7723  000596  22DA               	addwfc	fsr2h,f,c
  7724  000598  0E07               	movlw	7
  7725  00059A  6EDF               	movwf	indf2,c
  7726  00059C                     i2l3273:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;my_i2c.c: 245: }
  7730                           ;my_i2c.c: 247: if (msg_ready) {
  7731  00059C  0100               	movlb	0	; () banked
  7732  00059E  0100               	movlb	0	; () banked
  7733  0005A0  51C7               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7734  0005A2  B4D8               	btfsc	status,2,c
  7735  0005A4  D048               	goto	i2l3281
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7739  0005A6  0100               	movlb	0	; () banked
  7740  0005A8  EE20 F00B          	lfsr	2,11
  7741  0005AC  0100               	movlb	0	; () banked
  7742  0005AE  51DD               	movf	_ic_ptr& (0+255),w,b
  7743  0005B0  26D9               	addwf	fsr2l,f,c
  7744  0005B2  0100               	movlb	0	; () banked
  7745  0005B4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  0005B6  22DA               	addwfc	fsr2h,f,c
  7747  0005B8  0100               	movlb	0	; () banked
  7748  0005BA  EE10 F00A          	lfsr	1,10
  7749  0005BE  0100               	movlb	0	; () banked
  7750  0005C0  51DD               	movf	_ic_ptr& (0+255),w,b
  7751  0005C2  26E1               	addwf	fsr1l,f,c
  7752  0005C4  0100               	movlb	0	; () banked
  7753  0005C6  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7754  0005C8  22E2               	addwfc	fsr1h,f,c
  7755  0005CA  50E7               	movf	indf1,w,c
  7756  0005CC  0100               	movlb	0	; () banked
  7757  0005CE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7758  0005D0  0100               	movlb	0	; () banked
  7759  0005D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7760  0005D4  0D01               	mullw	1
  7761  0005D6  50F3               	movf	prodl,w,c
  7762  0005D8  0100               	movlb	0	; () banked
  7763  0005DA  0100               	movlb	0	; () banked
  7764  0005DC  25DD               	addwf	_ic_ptr& (0+255),w,b
  7765  0005DE  6EE1               	movwf	fsr1l,c
  7766  0005E0  50F4               	movf	prodh,w,c
  7767  0005E2  0100               	movlb	0	; () banked
  7768  0005E4  0100               	movlb	0	; () banked
  7769  0005E6  21DE               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7770  0005E8  6EE2               	movwf	fsr1h,c
  7771  0005EA  CFDF FFE7          	movff	indf2,indf1
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7775  0005EE  0100               	movlb	0	; () banked
  7776  0005F0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7777  0005F2  0E28               	movlw	40
  7778  0005F4  0100               	movlb	0	; () banked
  7779  0005F6  0100               	movlb	0	; () banked
  7780  0005F8  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7781  0005FA  0100               	movlb	0	; () banked
  7782  0005FC  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7783  0005FE  0100               	movlb	0	; () banked
  7784  000600  0100               	movlb	0	; () banked
  7785  000602  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7786  000606  0100               	movlb	0	; () banked
  7787  000608  0100               	movlb	0	; () banked
  7788  00060A  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7789  00060E  0100               	movlb	0	; () banked
  7790  000610  EE20 F00A          	lfsr	2,10
  7791  000614  0100               	movlb	0	; () banked
  7792  000616  51DD               	movf	_ic_ptr& (0+255),w,b
  7793  000618  26D9               	addwf	fsr2l,f,c
  7794  00061A  0100               	movlb	0	; () banked
  7795  00061C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7796  00061E  22DA               	addwfc	fsr2h,f,c
  7797  000620  50DF               	movf	indf2,w,c
  7798  000622  0100               	movlb	0	; () banked
  7799  000624  6FBF               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7800  000626  0100               	movlb	0	; () banked
  7801  000628  29BF               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7802  00062A  ECDC  F00D         	call	_ToMainHigh_sendmsg
  7803                           
  7804                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7805  00062E  0100               	movlb	0	; () banked
  7806  000630  EE20 F00A          	lfsr	2,10
  7807  000634  D04B               	goto	L10
  7808  000636                     i2l3281:
  7809                           
  7810                           ; BSR set to: 0
  7811  000636  0100               	movlb	0	; () banked
  7812  000638  EE20 F00E          	lfsr	2,14
  7813  00063C  0100               	movlb	0	; () banked
  7814  00063E  51DD               	movf	_ic_ptr& (0+255),w,b
  7815  000640  26D9               	addwf	fsr2l,f,c
  7816  000642  0100               	movlb	0	; () banked
  7817  000644  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7818  000646  22DA               	addwfc	fsr2h,f,c
  7819  000648  50DF               	movf	indf2,w,c
  7820  00064A  B4D8               	btfsc	status,2,c
  7821  00064C  D047               	goto	i2l3289
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7825  00064E  0100               	movlb	0	; () banked
  7826  000650  EE20 F00E          	lfsr	2,14
  7827  000654  0100               	movlb	0	; () banked
  7828  000656  51DD               	movf	_ic_ptr& (0+255),w,b
  7829  000658  26D9               	addwf	fsr2l,f,c
  7830  00065A  0100               	movlb	0	; () banked
  7831  00065C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7832  00065E  22DA               	addwfc	fsr2h,f,c
  7833  000660  50DF               	movf	indf2,w,c
  7834  000662  0100               	movlb	0	; () banked
  7835  000664  0100               	movlb	0	; () banked
  7836  000666  6FC0               	movwf	i2c_int_handler@error_buf& (0+255),b
  7837                           
  7838                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7839  000668  0100               	movlb	0	; () banked
  7840  00066A  EE20 F00D          	lfsr	2,13
  7841  00066E  0100               	movlb	0	; () banked
  7842  000670  51DD               	movf	_ic_ptr& (0+255),w,b
  7843  000672  26D9               	addwf	fsr2l,f,c
  7844  000674  0100               	movlb	0	; () banked
  7845  000676  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7846  000678  22DA               	addwfc	fsr2h,f,c
  7847  00067A  50DF               	movf	indf2,w,c
  7848  00067C  0100               	movlb	0	; () banked
  7849  00067E  0100               	movlb	0	; () banked
  7850  000680  6FC1               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7851                           
  7852                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7853  000682  0100               	movlb	0	; () banked
  7854  000684  EE20 F00B          	lfsr	2,11
  7855  000688  0100               	movlb	0	; () banked
  7856  00068A  51DD               	movf	_ic_ptr& (0+255),w,b
  7857  00068C  26D9               	addwf	fsr2l,f,c
  7858  00068E  0100               	movlb	0	; () banked
  7859  000690  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7860  000692  22DA               	addwfc	fsr2h,f,c
  7861  000694  50DF               	movf	indf2,w,c
  7862  000696  0100               	movlb	0	; () banked
  7863  000698  0100               	movlb	0	; () banked
  7864  00069A  6FC2               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7868  00069C  0100               	movlb	0	; () banked
  7869  00069E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7870  0006A0  0E29               	movlw	41
  7871  0006A2  0100               	movlb	0	; () banked
  7872  0006A4  0100               	movlb	0	; () banked
  7873  0006A6  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7874  0006A8  0100               	movlb	0	; () banked
  7875  0006AA  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7876  0006AC  0100               	movlb	0	; () banked
  7877  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  7878  0006B0  0100               	movlb	0	; () banked
  7879  0006B2  0100               	movlb	0	; () banked
  7880  0006B4  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7881  0006B6  0100               	movlb	0	; () banked
  7882  0006B8  0EC0               	movlw	low i2c_int_handler@error_buf
  7883  0006BA  0100               	movlb	0	; () banked
  7884  0006BC  0100               	movlb	0	; () banked
  7885  0006BE  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7886  0006C0  0E03               	movlw	3
  7887  0006C2  ECDC  F00D         	call	_ToMainHigh_sendmsg
  7888                           
  7889                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7890  0006C6  0100               	movlb	0	; () banked
  7891  0006C8  EE20 F00E          	lfsr	2,14
  7892  0006CC                     L10:
  7893  0006CC  0100               	movlb	0	; () banked
  7894  0006CE  51DD               	movf	_ic_ptr& (0+255),w,b
  7895  0006D0  26D9               	addwf	fsr2l,f,c
  7896  0006D2  0100               	movlb	0	; () banked
  7897  0006D4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  7898  0006D6  22DA               	addwfc	fsr2h,f,c
  7899  0006D8  0E00               	movlw	0
  7900  0006DA  6EDF               	movwf	indf2,c
  7901  0006DC                     i2l3289:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;my_i2c.c: 257: }
  7905                           ;my_i2c.c: 258: if (msg_to_send) {
  7906  0006DC  0100               	movlb	0	; () banked
  7907  0006DE  0100               	movlb	0	; () banked
  7908  0006E0  51C6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7909  0006E2  B4D8               	btfsc	status,2,c
  7910  0006E4  0012               	return	
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7914  0006E6  0100               	movlb	0	; () banked
  7915  0006E8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7916  0006EA  0E2A               	movlw	42
  7917  0006EC  0100               	movlb	0	; () banked
  7918  0006EE  0100               	movlb	0	; () banked
  7919  0006F0  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7920  0006F2  0100               	movlb	0	; () banked
  7921  0006F4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7922  0006F6  0100               	movlb	0	; () banked
  7923  0006F8  0100               	movlb	0	; () banked
  7924  0006FA  C0DE  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7925  0006FE  0100               	movlb	0	; () banked
  7926  000700  0100               	movlb	0	; () banked
  7927  000702  C0DD  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7928  000706  0E00               	movlw	0
  7929  000708  ECDC  F00D         	call	_ToMainHigh_sendmsg
  7930                           
  7931                           ;my_i2c.c: 261: msg_to_send = 0;
  7932  00070C  0100               	movlb	0	; () banked
  7933  00070E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7934  000710  0E00               	movlw	0
  7935  000712  0100               	movlb	0	; () banked
  7936  000714  0100               	movlb	0	; () banked
  7937  000716  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7938  000718  0100               	movlb	0	; () banked
  7939  00071A  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7940  00071C  0012               	return	
  7941  00071E                     __end_of_i2c_int_handler:
  7942                           	opt stack 0
  7943                           pclatu	equ	0xFFB
  7944                           pclath	equ	0xFFA
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           intcon	equ	0xFF2
  7952                           postinc0	equ	0xFEE
  7953                           fsr0h	equ	0xFEA
  7954                           fsr0l	equ	0xFE9
  7955                           wreg	equ	0xFE8
  7956                           indf1	equ	0xFE7
  7957                           fsr1h	equ	0xFE2
  7958                           fsr1l	equ	0xFE1
  7959                           bsr	equ	0xFE0
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           postdec2	equ	0xFDD
  7963                           fsr2h	equ	0xFDA
  7964                           fsr2l	equ	0xFD9
  7965                           status	equ	0xFD8
  7966                           
  7967 ;; *************** function _handle_start *****************
  7968 ;; Defined at:
  7969 ;;		line 71 in file "src/my_i2c.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  data_read       1    wreg     unsigned char 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  data_read       1   52[COMRAM] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7983 ;;      Params:         0       0       0       0       0
  7984 ;;      Locals:         1       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0
  7986 ;;      Totals:         1       0       0       0       0
  7987 ;;Total ram usage:        1 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_i2c_int_handler
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text48
  7997  00111E                     __ptext48:
  7998                           	opt stack 0
  7999  00111E                     _handle_start:
  8000                           	opt stack 19
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;incstack = 0
  8004                           ;handle_start@data_read stored from wreg
  8005  00111E  CFE8 F035          	movff	wreg,handle_start@data_read
  8006                           
  8007                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8008  001122  0100               	movlb	0	; () banked
  8009  001124  EE20 F00B          	lfsr	2,11
  8010  001128  0100               	movlb	0	; () banked
  8011  00112A  51DD               	movf	_ic_ptr& (0+255),w,b
  8012  00112C  26D9               	addwf	fsr2l,f,c
  8013  00112E  0100               	movlb	0	; () banked
  8014  001130  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8015  001132  22DA               	addwfc	fsr2h,f,c
  8016  001134  0E01               	movlw	1
  8017  001136  6EDF               	movwf	indf2,c
  8018                           
  8019                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8020  001138  0100               	movlb	0	; () banked
  8021  00113A  EE20 F00A          	lfsr	2,10
  8022  00113E  0100               	movlb	0	; () banked
  8023  001140  51DD               	movf	_ic_ptr& (0+255),w,b
  8024  001142  26D9               	addwf	fsr2l,f,c
  8025  001144  0100               	movlb	0	; () banked
  8026  001146  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8027  001148  22DA               	addwfc	fsr2h,f,c
  8028  00114A  0E00               	movlw	0
  8029  00114C  6EDF               	movwf	indf2,c
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;my_i2c.c: 75: if (data_read) {
  8033  00114E  5035               	movf	handle_start@data_read,w,c
  8034  001150  B4D8               	btfsc	status,2,c
  8035  001152  D03D               	goto	i2l3701
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8039  001154  AAC7               	btfss	4039,5,c	;volatile
  8040  001156  D021               	goto	i2l257
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8044  001158  0100               	movlb	0	; () banked
  8045  00115A  EE20 F00C          	lfsr	2,12
  8046  00115E  0100               	movlb	0	; () banked
  8047  001160  51DD               	movf	_ic_ptr& (0+255),w,b
  8048  001162  26D9               	addwf	fsr2l,f,c
  8049  001164  0100               	movlb	0	; () banked
  8050  001166  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8051  001168  22DA               	addwfc	fsr2h,f,c
  8052  00116A  0E05               	movlw	5
  8053  00116C  6EDF               	movwf	indf2,c
  8054                           
  8055                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8056  00116E  0100               	movlb	0	; () banked
  8057  001170  EE20 F00E          	lfsr	2,14
  8058  001174  0100               	movlb	0	; () banked
  8059  001176  51DD               	movf	_ic_ptr& (0+255),w,b
  8060  001178  26D9               	addwf	fsr2l,f,c
  8061  00117A  0100               	movlb	0	; () banked
  8062  00117C  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8063  00117E  22DA               	addwfc	fsr2h,f,c
  8064  001180  2ADF               	incf	indf2,f,c
  8065                           
  8066                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8067  001182  0100               	movlb	0	; () banked
  8068  001184  EE20 F00D          	lfsr	2,13
  8069  001188  0100               	movlb	0	; () banked
  8070  00118A  51DD               	movf	_ic_ptr& (0+255),w,b
  8071  00118C  26D9               	addwf	fsr2l,f,c
  8072  00118E  0100               	movlb	0	; () banked
  8073  001190  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8074  001192  22DA               	addwfc	fsr2h,f,c
  8075  001194  0E05               	movlw	5
  8076  001196  6EDF               	movwf	indf2,c
  8077                           
  8078                           ;my_i2c.c: 82: } else {
  8079  001198  0012               	return	
  8080  00119A                     i2l257:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8084  00119A  A4C7               	btfss	4039,2,c	;volatile
  8085  00119C  D00C               	goto	i2l3699
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8089  00119E  0100               	movlb	0	; () banked
  8090  0011A0  EE20 F00C          	lfsr	2,12
  8091  0011A4  0100               	movlb	0	; () banked
  8092  0011A6  51DD               	movf	_ic_ptr& (0+255),w,b
  8093  0011A8  26D9               	addwf	fsr2l,f,c
  8094  0011AA  0100               	movlb	0	; () banked
  8095  0011AC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8096  0011AE  22DA               	addwfc	fsr2h,f,c
  8097  0011B0  0E08               	movlw	8
  8098  0011B2  6EDF               	movwf	indf2,c
  8099                           
  8100                           ;my_i2c.c: 85: } else {
  8101  0011B4  0012               	return	
  8102  0011B6                     i2l3699:
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8106  0011B6  0100               	movlb	0	; () banked
  8107  0011B8  EE20 F00C          	lfsr	2,12
  8108  0011BC  0100               	movlb	0	; () banked
  8109  0011BE  51DD               	movf	_ic_ptr& (0+255),w,b
  8110  0011C0  26D9               	addwf	fsr2l,f,c
  8111  0011C2  0100               	movlb	0	; () banked
  8112  0011C4  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8113  0011C6  22DA               	addwfc	fsr2h,f,c
  8114  0011C8  0E07               	movlw	7
  8115  0011CA  6EDF               	movwf	indf2,c
  8116  0011CC  0012               	return	
  8117  0011CE                     i2l3701:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8121  0011CE  0100               	movlb	0	; () banked
  8122  0011D0  EE20 F00C          	lfsr	2,12
  8123  0011D4  0100               	movlb	0	; () banked
  8124  0011D6  51DD               	movf	_ic_ptr& (0+255),w,b
  8125  0011D8  26D9               	addwf	fsr2l,f,c
  8126  0011DA  0100               	movlb	0	; () banked
  8127  0011DC  51DE               	movf	(_ic_ptr+1)& (0+255),w,b
  8128  0011DE  22DA               	addwfc	fsr2h,f,c
  8129  0011E0  0E06               	movlw	6
  8130  0011E2  6EDF               	movwf	indf2,c
  8131  0011E4  0012               	return	
  8132  0011E6                     __end_of_handle_start:
  8133                           	opt stack 0
  8134                           pclatu	equ	0xFFB
  8135                           pclath	equ	0xFFA
  8136                           tblptru	equ	0xFF8
  8137                           tblptrh	equ	0xFF7
  8138                           tblptrl	equ	0xFF6
  8139                           tablat	equ	0xFF5
  8140                           prodh	equ	0xFF4
  8141                           prodl	equ	0xFF3
  8142                           intcon	equ	0xFF2
  8143                           postinc0	equ	0xFEE
  8144                           fsr0h	equ	0xFEA
  8145                           fsr0l	equ	0xFE9
  8146                           wreg	equ	0xFE8
  8147                           indf1	equ	0xFE7
  8148                           fsr1h	equ	0xFE2
  8149                           fsr1l	equ	0xFE1
  8150                           bsr	equ	0xFE0
  8151                           indf2	equ	0xFDF
  8152                           postinc2	equ	0xFDE
  8153                           postdec2	equ	0xFDD
  8154                           fsr2h	equ	0xFDA
  8155                           fsr2l	equ	0xFD9
  8156                           status	equ	0xFD8
  8157                           
  8158 ;; *************** function _ToMainHigh_sendmsg *****************
  8159 ;; Defined at:
  8160 ;;		line 126 in file "src/messages.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  length          1    wreg     unsigned char 
  8163 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8164 ;;  data            2    6[BANK0 ] PTR void 
  8165 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  length          1   69[COMRAM] unsigned char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      char 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8177 ;;      Params:         0       3       0       0       0
  8178 ;;      Locals:         1       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0
  8180 ;;      Totals:         1       3       0       0       0
  8181 ;;Total ram usage:        4 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    2
  8184 ;; This function calls:
  8185 ;;		i2_send_msg
  8186 ;; This function is called by:
  8187 ;;		_i2c_int_handler
  8188 ;;		_timer0_int_handler
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text49
  8193  001BB8                     __ptext49:
  8194                           	opt stack 0
  8195  001BB8                     _ToMainHigh_sendmsg:
  8196                           	opt stack 17
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;incstack = 0
  8200                           ;ToMainHigh_sendmsg@length stored from wreg
  8201  001BB8  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  8202                           
  8203                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8204                           ;	Return value of _ToMainHigh_sendmsg is never used
  8205  001BBC  0101               	movlb	1	; () banked
  8206  001BBE  0E01               	movlw	high _ToMainHigh_MQ
  8207  001BC0  6E40               	movwf	i2send_msg@qptr+1,c
  8208  001BC2  0101               	movlb	1	; () banked
  8209  001BC4  0E6C               	movlw	low _ToMainHigh_MQ
  8210  001BC6  6E3F               	movwf	i2send_msg@qptr,c
  8211  001BC8  C046  F041         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8212  001BCC  C0BB  F042         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8213  001BD0  0100               	movlb	0	; () banked
  8214  001BD2  C0BD  F044         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8215  001BD6  0100               	movlb	0	; () banked
  8216  001BD8  C0BC  F043         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8217  001BDC  EC26  F008         	call	i2_send_msg	;wreg free
  8218  001BE0  0012               	return	
  8219  001BE2                     __end_of_ToMainHigh_sendmsg:
  8220                           	opt stack 0
  8221                           pclatu	equ	0xFFB
  8222                           pclath	equ	0xFFA
  8223                           tblptru	equ	0xFF8
  8224                           tblptrh	equ	0xFF7
  8225                           tblptrl	equ	0xFF6
  8226                           tablat	equ	0xFF5
  8227                           prodh	equ	0xFF4
  8228                           prodl	equ	0xFF3
  8229                           intcon	equ	0xFF2
  8230                           postinc0	equ	0xFEE
  8231                           fsr0h	equ	0xFEA
  8232                           fsr0l	equ	0xFE9
  8233                           wreg	equ	0xFE8
  8234                           indf1	equ	0xFE7
  8235                           fsr1h	equ	0xFE2
  8236                           fsr1l	equ	0xFE1
  8237                           bsr	equ	0xFE0
  8238                           indf2	equ	0xFDF
  8239                           postinc2	equ	0xFDE
  8240                           postdec2	equ	0xFDD
  8241                           fsr2h	equ	0xFDA
  8242                           fsr2l	equ	0xFD9
  8243                           status	equ	0xFD8
  8244                           
  8245 ;; *************** function i2_send_msg *****************
  8246 ;; Defined at:
  8247 ;;		line 24 in file "src/messages.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  8250 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8251 ;;  length          1   64[COMRAM] unsigned char 
  8252 ;;  msgtype         1   65[COMRAM] unsigned char 
  8253 ;;  data            2   66[COMRAM] PTR void 
  8254 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@uthread_data(10), 
  8255 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8258 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8259 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8260 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8261 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      char 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8271 ;;      Params:         6       0       0       0       0
  8272 ;;      Locals:         0       5       0       0       0
  8273 ;;      Temps:          1       0       0       0       0
  8274 ;;      Totals:         7       5       0       0       0
  8275 ;;Total ram usage:       12 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    1
  8278 ;; This function calls:
  8279 ;;		i2_memcpy
  8280 ;; This function is called by:
  8281 ;;		_ToMainHigh_sendmsg
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text50
  8286  00104C                     __ptext50:
  8287                           	opt stack 0
  8288  00104C                     i2_send_msg:
  8289                           	opt stack 17
  8290                           
  8291                           ;messages.c: 25: unsigned char slot;
  8292                           ;messages.c: 27: msg *qmsg;
  8293                           ;messages.c: 28: size_t tlength = length;
  8294                           
  8295                           ;incstack = 0
  8296  00104C  0100               	movlb	0	; () banked
  8297  00104E  C041  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8298  001052  0100               	movlb	0	; () banked
  8299  001054  0100               	movlb	0	; () banked
  8300  001056  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8304  001058  EE20 F034          	lfsr	2,52
  8305  00105C  503F               	movf	i2send_msg@qptr,w,c
  8306  00105E  26D9               	addwf	fsr2l,f,c
  8307  001060  5040               	movf	i2send_msg@qptr+1,w,c
  8308  001062  22DA               	addwfc	fsr2h,f,c
  8309  001064  50DF               	movf	indf2,w,c
  8310  001066  0100               	movlb	0	; () banked
  8311  001068  0100               	movlb	0	; () banked
  8312  00106A  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8316  00106C  0100               	movlb	0	; () banked
  8317  00106E  0100               	movlb	0	; () banked
  8318  001070  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8319  001072  0D0D               	mullw	13
  8320  001074  50F3               	movf	prodl,w,c
  8321  001076  243F               	addwf	i2send_msg@qptr,w,c
  8322  001078  0100               	movlb	0	; () banked
  8323  00107A  0100               	movlb	0	; () banked
  8324  00107C  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8325  00107E  50F4               	movf	prodh,w,c
  8326  001080  2040               	addwfc	i2send_msg@qptr+1,w,c
  8327  001082  0100               	movlb	0	; () banked
  8328  001084  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;messages.c: 41: if (qmsg->full != 0) {
  8332  001086  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8333  00108A  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8334  00108E  50DF               	movf	indf2,w,c
  8335  001090  B4D8               	btfsc	status,2,c
  8336  001092  D002               	goto	i2l3757
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;messages.c: 42: return (-1);
  8340  001094  0EFF               	movlw	255
  8341  001096  0012               	return	
  8342  001098                     i2l3757:
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;messages.c: 43: }
  8346                           ;messages.c: 46: qmsg->length = length;
  8347  001098  0100               	movlb	0	; () banked
  8348  00109A  EE20 F001          	lfsr	2,1
  8349  00109E  0100               	movlb	0	; () banked
  8350  0010A0  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8351  0010A2  26D9               	addwf	fsr2l,f,c
  8352  0010A4  0100               	movlb	0	; () banked
  8353  0010A6  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8354  0010A8  22DA               	addwfc	fsr2h,f,c
  8355  0010AA  C041  FFDF         	movff	i2send_msg@length,indf2
  8356                           
  8357                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8358  0010AE  0100               	movlb	0	; () banked
  8359  0010B0  EE20 F002          	lfsr	2,2
  8360  0010B4  0100               	movlb	0	; () banked
  8361  0010B6  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8362  0010B8  26D9               	addwf	fsr2l,f,c
  8363  0010BA  0100               	movlb	0	; () banked
  8364  0010BC  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8365  0010BE  22DA               	addwfc	fsr2h,f,c
  8366  0010C0  C042  FFDF         	movff	i2send_msg@msgtype,indf2
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8370  0010C4  0E03               	movlw	3
  8371  0010C6  0100               	movlb	0	; () banked
  8372  0010C8  0100               	movlb	0	; () banked
  8373  0010CA  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8374  0010CC  6E35               	movwf	i2memcpy@d1,c
  8375  0010CE  0E00               	movlw	0
  8376  0010D0  0100               	movlb	0	; () banked
  8377  0010D2  0100               	movlb	0	; () banked
  8378  0010D4  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8379  0010D6  6E36               	movwf	i2memcpy@d1+1,c
  8380  0010D8  C044  F038         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8381  0010DC  C043  F037         	movff	i2send_msg@data,i2memcpy@s1
  8382  0010E0  C0B6  F039         	movff	i2send_msg@tlength,i2memcpy@n
  8383  0010E4  C0B7  F03A         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8384  0010E8  ECF2  F00C         	call	i2_memcpy	;wreg free
  8385                           
  8386                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8387  0010EC  EE20 F034          	lfsr	2,52
  8388  0010F0  503F               	movf	i2send_msg@qptr,w,c
  8389  0010F2  26D9               	addwf	fsr2l,f,c
  8390  0010F4  5040               	movf	i2send_msg@qptr+1,w,c
  8391  0010F6  22DA               	addwfc	fsr2h,f,c
  8392  0010F8  EE10 F034          	lfsr	1,52
  8393  0010FC  503F               	movf	i2send_msg@qptr,w,c
  8394  0010FE  26E1               	addwf	fsr1l,f,c
  8395  001100  5040               	movf	i2send_msg@qptr+1,w,c
  8396  001102  22E2               	addwfc	fsr1h,f,c
  8397  001104  50E7               	movf	indf1,w,c
  8398  001106  6E45               	movwf	??i2_send_msg& (0+255),c
  8399  001108  2845               	incf	??i2_send_msg,w,c
  8400  00110A  0B03               	andlw	3
  8401  00110C  6EDF               	movwf	indf2,c
  8402                           
  8403                           ;messages.c: 59: qmsg->full = 1;
  8404  00110E  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8405  001112  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8406  001116  0E01               	movlw	1
  8407  001118  6EDF               	movwf	indf2,c
  8408                           
  8409                           ;messages.c: 60: return (1);
  8410  00111A  0E01               	movlw	1
  8411  00111C  0012               	return	
  8412  00111E                     __end_ofi2_send_msg:
  8413                           	opt stack 0
  8414                           pclatu	equ	0xFFB
  8415                           pclath	equ	0xFFA
  8416                           tblptru	equ	0xFF8
  8417                           tblptrh	equ	0xFF7
  8418                           tblptrl	equ	0xFF6
  8419                           tablat	equ	0xFF5
  8420                           prodh	equ	0xFF4
  8421                           prodl	equ	0xFF3
  8422                           intcon	equ	0xFF2
  8423                           postinc0	equ	0xFEE
  8424                           fsr0h	equ	0xFEA
  8425                           fsr0l	equ	0xFE9
  8426                           wreg	equ	0xFE8
  8427                           indf1	equ	0xFE7
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           bsr	equ	0xFE0
  8431                           indf2	equ	0xFDF
  8432                           postinc2	equ	0xFDE
  8433                           postdec2	equ	0xFDD
  8434                           fsr2h	equ	0xFDA
  8435                           fsr2l	equ	0xFD9
  8436                           status	equ	0xFD8
  8437                           
  8438 ;; *************** function i2_memcpy *****************
  8439 ;; Defined at:
  8440 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  d1              2   52[COMRAM] PTR void 
  8443 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8444 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8445 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8446 ;;  s1              2   54[COMRAM] PTR const void 
  8447 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8448 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8449 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8450 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8451 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8452 ;;  n               2   56[COMRAM] unsigned int 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  memcpy          2   60[COMRAM] PTR const unsigned char 
  8455 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8456 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8457 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8458 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@uthread_data(10), 
  8459 ;;		 -> main@t1thread_data(2), main@ic(28), main@uc(5), 
  8460 ;;  memcpy          2   58[COMRAM] PTR unsigned char 
  8461 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8462 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8463 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  2   52[COMRAM] PTR void 
  8466 ;; Registers used:
  8467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8473 ;;      Params:         6       0       0       0       0
  8474 ;;      Locals:         4       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0
  8476 ;;      Totals:        10       0       0       0       0
  8477 ;;Total ram usage:       10 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		i2_send_msg
  8483 ;;		i2_recv_msg
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text51
  8488  0019E4                     __ptext51:
  8489                           	opt stack 0
  8490  0019E4                     i2_memcpy:
  8491                           	opt stack 17
  8492                           
  8493                           ;incstack = 0
  8494  0019E4  C038  F03E         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8495  0019E8  C037  F03D         	movff	i2memcpy@s1,i2memcpy@s
  8496  0019EC  C036  F03C         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8497  0019F0  C035  F03B         	movff	i2memcpy@d1,i2memcpy@d
  8498  0019F4  D00E               	goto	i2l3819
  8499  0019F6                     i2l3813:
  8500  0019F6  C03D  FFD9         	movff	i2memcpy@s,fsr2l
  8501  0019FA  C03E  FFDA         	movff	i2memcpy@s+1,fsr2h
  8502  0019FE  C03B  FFE1         	movff	i2memcpy@d,fsr1l
  8503  001A02  C03C  FFE2         	movff	i2memcpy@d+1,fsr1h
  8504  001A06  CFDF FFE7          	movff	indf2,indf1
  8505  001A0A  4A3D               	infsnz	i2memcpy@s,f,c
  8506  001A0C  2A3E               	incf	i2memcpy@s+1,f,c
  8507  001A0E  4A3B               	infsnz	i2memcpy@d,f,c
  8508  001A10  2A3C               	incf	i2memcpy@d+1,f,c
  8509  001A12                     i2l3819:
  8510  001A12  0639               	decf	i2memcpy@n,f,c
  8511  001A14  A0D8               	btfss	status,0,c
  8512  001A16  063A               	decf	i2memcpy@n+1,f,c
  8513  001A18  2839               	incf	i2memcpy@n& (0+255),w,c
  8514  001A1A  B4D8               	btfsc	status,2,c
  8515  001A1C  283A               	incf	(i2memcpy@n+1)& (0+255),w,c
  8516  001A1E  B4D8               	btfsc	status,2,c
  8517                           
  8518                           ;	Return value of i2_memcpy is never used
  8519  001A20  0012               	return	
  8520  001A22  D7E9               	goto	i2l3813
  8521  001A24                     __end_ofi2_memcpy:
  8522                           	opt stack 0
  8523                           pclatu	equ	0xFFB
  8524                           pclath	equ	0xFFA
  8525                           tblptru	equ	0xFF8
  8526                           tblptrh	equ	0xFF7
  8527                           tblptrl	equ	0xFF6
  8528                           tablat	equ	0xFF5
  8529                           prodh	equ	0xFF4
  8530                           prodl	equ	0xFF3
  8531                           intcon	equ	0xFF2
  8532                           postinc0	equ	0xFEE
  8533                           fsr0h	equ	0xFEA
  8534                           fsr0l	equ	0xFE9
  8535                           wreg	equ	0xFE8
  8536                           indf1	equ	0xFE7
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           bsr	equ	0xFE0
  8540                           indf2	equ	0xFDF
  8541                           postinc2	equ	0xFDE
  8542                           postdec2	equ	0xFDD
  8543                           fsr2h	equ	0xFDA
  8544                           fsr2l	equ	0xFD9
  8545                           status	equ	0xFD8
  8546                           
  8547 ;; *************** function _SleepIfOkay *****************
  8548 ;; Defined at:
  8549 ;;		line 228 in file "src/messages.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;		None               void
  8556 ;; Registers used:
  8557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8563 ;;      Params:         0       0       0       0       0
  8564 ;;      Locals:         0       0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0
  8566 ;;      Totals:         0       0       0       0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    2
  8570 ;; This function calls:
  8571 ;;		_enter_sleep_mode
  8572 ;;		i2_check_msg
  8573 ;;		i2_in_high_int
  8574 ;;		i2_in_low_int
  8575 ;; This function is called by:
  8576 ;;		_InterruptHandlerHigh
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text52
  8581  001848                     __ptext52:
  8582                           	opt stack 0
  8583  001848                     _SleepIfOkay:
  8584                           	opt stack 18
  8585                           
  8586                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8587                           
  8588                           ;incstack = 0
  8589  001848  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  8590  00184A  D001               	goto	i2l2405
  8591  00184C  0012               	return	
  8592  00184E                     i2l2405:
  8593                           
  8594                           ;messages.c: 232: }
  8595                           ;messages.c: 235: if (in_low_int()) {
  8596  00184E  ECB0  F00D         	call	i2_in_low_int	;wreg free
  8597  001852  5038               	movf	?i2_in_low_int+1,w,c
  8598  001854  1037               	iorwf	?i2_in_low_int,w,c
  8599  001856  A4D8               	btfss	status,2,c
  8600  001858  0012               	return	
  8601                           
  8602                           ;messages.c: 237: }
  8603                           ;messages.c: 240: if (!in_high_int()) {
  8604                           
  8605                           ;messages.c: 236: return;
  8606  00185A  ECB0  F00E         	call	i2_in_high_int	;wreg free
  8607  00185E  5036               	movf	?i2_in_high_int+1,w,c
  8608  001860  1035               	iorwf	?i2_in_high_int,w,c
  8609  001862  B4D8               	btfsc	status,2,c
  8610  001864  0012               	return	
  8611                           
  8612                           ;messages.c: 242: }
  8613                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8614                           
  8615                           ;messages.c: 241: return;
  8616  001866  0101               	movlb	1	; () banked
  8617  001868  0E01               	movlw	high _ToMainHigh_MQ
  8618  00186A  6E36               	movwf	i2check_msg@qptr+1,c
  8619  00186C  0101               	movlb	1	; () banked
  8620  00186E  0E6C               	movlw	low _ToMainHigh_MQ
  8621  001870  6E35               	movwf	i2check_msg@qptr,c
  8622  001872  EC3F  F00E         	call	i2_check_msg	;wreg free
  8623  001876  0900               	iorlw	0
  8624  001878  A4D8               	btfss	status,2,c
  8625  00187A  0012               	return	
  8626                           
  8627                           ;messages.c: 249: }
  8628                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8629                           
  8630                           ;messages.c: 248: return;
  8631  00187C  0100               	movlb	0	; () banked
  8632  00187E  0E00               	movlw	high _ToMainLow_MQ
  8633  001880  6E36               	movwf	i2check_msg@qptr+1,c
  8634  001882  0100               	movlb	0	; () banked
  8635  001884  0E80               	movlw	low _ToMainLow_MQ
  8636  001886  6E35               	movwf	i2check_msg@qptr,c
  8637  001888  EC3F  F00E         	call	i2_check_msg	;wreg free
  8638  00188C  0900               	iorlw	0
  8639  00188E  B4D8               	btfsc	status,2,c
  8640                           
  8641                           ;messages.c: 252: }
  8642                           ;messages.c: 253: enter_sleep_mode();
  8643                           
  8644                           ;messages.c: 251: return;
  8645  001890  ECBA  F00E         	call	_enter_sleep_mode	;wreg free
  8646  001894  0012               	return	
  8647  001896                     __end_of_SleepIfOkay:
  8648                           	opt stack 0
  8649                           pclatu	equ	0xFFB
  8650                           pclath	equ	0xFFA
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           postinc0	equ	0xFEE
  8659                           fsr0h	equ	0xFEA
  8660                           fsr0l	equ	0xFE9
  8661                           wreg	equ	0xFE8
  8662                           indf1	equ	0xFE7
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           bsr	equ	0xFE0
  8666                           indf2	equ	0xFDF
  8667                           postinc2	equ	0xFDE
  8668                           postdec2	equ	0xFDD
  8669                           fsr2h	equ	0xFDA
  8670                           fsr2l	equ	0xFD9
  8671                           status	equ	0xFD8
  8672                           
  8673 ;; *************** function i2_in_low_int *****************
  8674 ;; Defined at:
  8675 ;;		line 30 in file "src/interrupts.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  2   54[COMRAM] int 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2, status,0, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8689 ;;      Params:         2       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0
  8692 ;;      Totals:         2       0       0       0       0
  8693 ;;Total ram usage:        2 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:    1
  8696 ;; This function calls:
  8697 ;;		i2_in_high_int
  8698 ;; This function is called by:
  8699 ;;		_SleepIfOkay
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text53
  8704  001B60                     __ptext53:
  8705                           	opt stack 0
  8706  001B60                     i2_in_low_int:
  8707                           	opt stack 18
  8708                           
  8709                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8710                           
  8711                           ;incstack = 0
  8712  001B60  ACF2               	btfss	intcon,6,c	;volatile
  8713  001B62  D005               	goto	i2l2881
  8714                           
  8715                           ;interrupts.c: 32: return (0);
  8716  001B64  0E00               	movlw	0
  8717  001B66  6E38               	movwf	?i2_in_low_int+1,c
  8718  001B68  0E00               	movlw	0
  8719  001B6A  6E37               	movwf	?i2_in_low_int,c
  8720  001B6C  0012               	return	
  8721  001B6E                     i2l2881:
  8722  001B6E  ECB0  F00E         	call	i2_in_high_int	;wreg free
  8723  001B72  5036               	movf	?i2_in_high_int+1,w,c
  8724  001B74  1035               	iorwf	?i2_in_high_int,w,c
  8725  001B76  B4D8               	btfsc	status,2,c
  8726  001B78  D005               	goto	i2l2889
  8727                           
  8728                           ;interrupts.c: 34: return (0);
  8729  001B7A  0E00               	movlw	0
  8730  001B7C  6E38               	movwf	?i2_in_low_int+1,c
  8731  001B7E  0E00               	movlw	0
  8732  001B80  6E37               	movwf	?i2_in_low_int,c
  8733  001B82  0012               	return	
  8734  001B84                     i2l2889:
  8735                           
  8736                           ;interrupts.c: 36: return (1);
  8737  001B84  0E00               	movlw	0
  8738  001B86  6E38               	movwf	?i2_in_low_int+1,c
  8739  001B88  0E01               	movlw	1
  8740  001B8A  6E37               	movwf	?i2_in_low_int,c
  8741  001B8C  0012               	return	
  8742  001B8E                     __end_ofi2_in_low_int:
  8743                           	opt stack 0
  8744                           pclatu	equ	0xFFB
  8745                           pclath	equ	0xFFA
  8746                           tblptru	equ	0xFF8
  8747                           tblptrh	equ	0xFF7
  8748                           tblptrl	equ	0xFF6
  8749                           tablat	equ	0xFF5
  8750                           prodh	equ	0xFF4
  8751                           prodl	equ	0xFF3
  8752                           intcon	equ	0xFF2
  8753                           postinc0	equ	0xFEE
  8754                           fsr0h	equ	0xFEA
  8755                           fsr0l	equ	0xFE9
  8756                           wreg	equ	0xFE8
  8757                           indf1	equ	0xFE7
  8758                           fsr1h	equ	0xFE2
  8759                           fsr1l	equ	0xFE1
  8760                           bsr	equ	0xFE0
  8761                           indf2	equ	0xFDF
  8762                           postinc2	equ	0xFDE
  8763                           postdec2	equ	0xFDD
  8764                           fsr2h	equ	0xFDA
  8765                           fsr2l	equ	0xFD9
  8766                           status	equ	0xFD8
  8767                           
  8768 ;; *************** function i2_in_high_int *****************
  8769 ;; Defined at:
  8770 ;;		line 22 in file "src/interrupts.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;		None
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   52[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8784 ;;      Params:         2       0       0       0       0
  8785 ;;      Locals:         0       0       0       0       0
  8786 ;;      Temps:          0       0       0       0       0
  8787 ;;      Totals:         2       0       0       0       0
  8788 ;;Total ram usage:        2 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_SleepIfOkay
  8794 ;;		i2_in_low_int
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text54
  8799  001D60                     __ptext54:
  8800                           	opt stack 0
  8801  001D60                     i2_in_high_int:
  8802                           	opt stack 18
  8803                           
  8804                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8805                           
  8806                           ;incstack = 0
  8807  001D60  0E00               	movlw	0
  8808  001D62  AEF2               	btfss	intcon,7,c	;volatile
  8809  001D64  0E01               	movlw	1
  8810  001D66  6E35               	movwf	?i2_in_high_int,c
  8811  001D68  6A36               	clrf	?i2_in_high_int+1,c
  8812  001D6A  0012               	return	
  8813  001D6C                     __end_ofi2_in_high_int:
  8814                           	opt stack 0
  8815                           pclatu	equ	0xFFB
  8816                           pclath	equ	0xFFA
  8817                           tblptru	equ	0xFF8
  8818                           tblptrh	equ	0xFF7
  8819                           tblptrl	equ	0xFF6
  8820                           tablat	equ	0xFF5
  8821                           prodh	equ	0xFF4
  8822                           prodl	equ	0xFF3
  8823                           intcon	equ	0xFF2
  8824                           postinc0	equ	0xFEE
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           indf1	equ	0xFE7
  8829                           fsr1h	equ	0xFE2
  8830                           fsr1l	equ	0xFE1
  8831                           bsr	equ	0xFE0
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function i2_check_msg *****************
  8840 ;; Defined at:
  8841 ;;		line 222 in file "src/messages.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  qptr            2   52[COMRAM] PTR struct __msg_queue
  8844 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      unsigned char 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8856 ;;      Params:         2       0       0       0       0
  8857 ;;      Locals:         0       0       0       0       0
  8858 ;;      Temps:          1       0       0       0       0
  8859 ;;      Totals:         3       0       0       0       0
  8860 ;;Total ram usage:        3 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_SleepIfOkay
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text55
  8870  001C7E                     __ptext55:
  8871                           	opt stack 0
  8872  001C7E                     i2_check_msg:
  8873                           	opt stack 19
  8874                           
  8875                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8876                           
  8877                           ;incstack = 0
  8878  001C7E  EE20 F035          	lfsr	2,53
  8879  001C82  5035               	movf	i2check_msg@qptr,w,c
  8880  001C84  26D9               	addwf	fsr2l,f,c
  8881  001C86  5036               	movf	i2check_msg@qptr+1,w,c
  8882  001C88  22DA               	addwfc	fsr2h,f,c
  8883  001C8A  50DF               	movf	indf2,w,c
  8884  001C8C  6E37               	movwf	??i2_check_msg& (0+255),c
  8885  001C8E  5037               	movf	??i2_check_msg,w,c
  8886  001C90  0D0D               	mullw	13
  8887  001C92  50F3               	movf	prodl,w,c
  8888  001C94  2435               	addwf	i2check_msg@qptr,w,c
  8889  001C96  6ED9               	movwf	fsr2l,c
  8890  001C98  50F4               	movf	prodh,w,c
  8891  001C9A  2036               	addwfc	i2check_msg@qptr+1,w,c
  8892  001C9C  6EDA               	movwf	fsr2h,c
  8893  001C9E  50DF               	movf	indf2,w,c
  8894  001CA0  0012               	return	
  8895  001CA2                     __end_ofi2_check_msg:
  8896                           	opt stack 0
  8897                           pclatu	equ	0xFFB
  8898                           pclath	equ	0xFFA
  8899                           tblptru	equ	0xFF8
  8900                           tblptrh	equ	0xFF7
  8901                           tblptrl	equ	0xFF6
  8902                           tablat	equ	0xFF5
  8903                           prodh	equ	0xFF4
  8904                           prodl	equ	0xFF3
  8905                           intcon	equ	0xFF2
  8906                           postinc0	equ	0xFEE
  8907                           fsr0h	equ	0xFEA
  8908                           fsr0l	equ	0xFE9
  8909                           wreg	equ	0xFE8
  8910                           indf1	equ	0xFE7
  8911                           fsr1h	equ	0xFE2
  8912                           fsr1l	equ	0xFE1
  8913                           bsr	equ	0xFE0
  8914                           indf2	equ	0xFDF
  8915                           postinc2	equ	0xFDE
  8916                           postdec2	equ	0xFDD
  8917                           fsr2h	equ	0xFDA
  8918                           fsr2l	equ	0xFD9
  8919                           status	equ	0xFD8
  8920                           
  8921 ;; *************** function _enter_sleep_mode *****************
  8922 ;; Defined at:
  8923 ;;		line 202 in file "src/messages.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;		None               void
  8930 ;; Registers used:
  8931 ;;		None
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8937 ;;      Params:         0       0       0       0       0
  8938 ;;      Locals:         0       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0
  8940 ;;      Totals:         0       0       0       0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_SleepIfOkay
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text56
  8951  001D74                     __ptext56:
  8952                           	opt stack 0
  8953  001D74                     _enter_sleep_mode:
  8954                           	opt stack 19
  8955                           
  8956                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8957                           
  8958                           ;incstack = 0
  8959  001D74  8ED3               	bsf	4051,7,c	;volatile
  8960  001D76  0003               	sleep		;# 
  8961  001D78  0012               	return	
  8962  001D7A                     __end_of_enter_sleep_mode:
  8963                           	opt stack 0
  8964  0000                     pclatu	equ	0xFFB
  8965                           pclath	equ	0xFFA
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           postinc0	equ	0xFEE
  8974                           fsr0h	equ	0xFEA
  8975                           fsr0l	equ	0xFE9
  8976                           wreg	equ	0xFE8
  8977                           indf1	equ	0xFE7
  8978                           fsr1h	equ	0xFE2
  8979                           fsr1l	equ	0xFE1
  8980                           bsr	equ	0xFE0
  8981                           indf2	equ	0xFDF
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           fsr2h	equ	0xFDA
  8985                           fsr2l	equ	0xFD9
  8986                           status	equ	0xFD8
  8987                           pclatu	equ	0xFFB
  8988                           pclath	equ	0xFFA
  8989                           tblptru	equ	0xFF8
  8990                           tblptrh	equ	0xFF7
  8991                           tblptrl	equ	0xFF6
  8992                           tablat	equ	0xFF5
  8993                           prodh	equ	0xFF4
  8994                           prodl	equ	0xFF3
  8995                           intcon	equ	0xFF2
  8996                           postinc0	equ	0xFEE
  8997                           fsr0h	equ	0xFEA
  8998                           fsr0l	equ	0xFE9
  8999                           wreg	equ	0xFE8
  9000                           indf1	equ	0xFE7
  9001                           fsr1h	equ	0xFE2
  9002                           fsr1l	equ	0xFE1
  9003                           bsr	equ	0xFE0
  9004                           indf2	equ	0xFDF
  9005                           postinc2	equ	0xFDE
  9006                           postdec2	equ	0xFDD
  9007                           fsr2h	equ	0xFDA
  9008                           fsr2l	equ	0xFD9
  9009                           status	equ	0xFD8
  9010                           
  9011                           	psect	rparam
  9012  0000                     pclatu	equ	0xFFB
  9013                           pclath	equ	0xFFA
  9014                           tblptru	equ	0xFF8
  9015                           tblptrh	equ	0xFF7
  9016                           tblptrl	equ	0xFF6
  9017                           tablat	equ	0xFF5
  9018                           prodh	equ	0xFF4
  9019                           prodl	equ	0xFF3
  9020                           intcon	equ	0xFF2
  9021                           postinc0	equ	0xFEE
  9022                           fsr0h	equ	0xFEA
  9023                           fsr0l	equ	0xFE9
  9024                           wreg	equ	0xFE8
  9025                           indf1	equ	0xFE7
  9026                           fsr1h	equ	0xFE2
  9027                           fsr1l	equ	0xFE1
  9028                           bsr	equ	0xFE0
  9029                           indf2	equ	0xFDF
  9030                           postinc2	equ	0xFDE
  9031                           postdec2	equ	0xFDD
  9032                           fsr2h	equ	0xFDA
  9033                           fsr2l	equ	0xFD9
  9034                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      75
    BANK0           128     39      95
    BANK1           256     32     194
    BANK2           256     63      63
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@uthread_data(BANK2[10]), 
		 -> main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_OpenUSART
    _timer1_lthread->___lwmod
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   14729
                                             31 BANK1      1     1      0
                                              0 BANK2     63    63      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3094
                                             20 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2309
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3046
                                             20 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             33 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2309
                                             16 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2062
                                              4 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             33 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             37 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                              0 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             37 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             33 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2340
                                             18 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2093
                                              4 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             33 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             33 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   10181
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               6     6      0    3280
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3402
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3499
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3368
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2659
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10905
                                             19 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6686
                                             10 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                             52 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2994
                                              5 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             62 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3983
                                              8 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3368
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             62 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                             52 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             54 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             52 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             52 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3F      3F       8       24.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     20      C2       6       75.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     27      5F       4       74.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      11        0.0%
DATA                 0      0     1AB      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 24 23:24:25 2015

               main@uthread_data 0210         _MQ_Main_Willing_to_block 004A  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1962  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1C7E  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0042  
              i2recv_msg@tlength 00B7             ?_FromMainLow_recvmsg 0019  
                            l109 087C                              l424 1BB2  
                            l425 1BB4                              l450 1A56  
                            l451 1A58                              l448 1A3E  
                            l492 1360                              l725 1CE2  
                            l496 1380                              l497 1382  
                            l498 1390                              l499 1392  
           ?_FromMainLow_sendmsg 01B2  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D7  
               ??_init_uart_recv 00D9                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 0041                             l1037 143E  
                           l3121 18CC                             l3113 18AA  
                           l3135 1910                             l3521 1598  
                           l3353 082A                             l3345 07E8  
                           l3515 156C                             l3611 0CE4  
                           l3355 0882                             l3363 08EC  
                           l3371 0942                             l3429 1A40  
                           l3541 0C1A                             l3357 08B0  
                           l3365 0904                             l3455 1362  
                           l3447 134C                             l3631 17D6  
                           l3527 15C4                             l3383 0A24  
                           l3359 08CE                             l3625 17B2  
                           l3537 0B96                             l3377 0980  
                           l3369 0924                             l3379 09D2  
                           l3645 0AB0                             l3661 0B76  
                           l3741 142A                             l3733 13DC  
                           l3581 0F4A                             l3735 13EE  
                           l3593 1614                             l3737 13F6  
                           l3577 0F22                             _LATB 000F8A  
                           u3047 1CE4                             i1l52 007A  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0F7A  
                           _main 071E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0221  
                     i1_send_msg 11E6                             pclat 000FFA  
                    i2_check_msg 1C7E                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0035  
                           start 00C0                       i2_recv_msg 0D8C  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 104C  
      ToMainHigh_recvmsg@msgtype 01B4                   send_msg@length 01A8  
    __size_of_timer0_int_handler 0084                      _Delay1KTCYx 1CDE  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00DD  
                          ?_main 0001                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D7  
                          i1l340 1844                            i1l510 1CCE  
                          i1l343 181C                  __end_of___lwmod 1448  
                     i1memcpy@d1 0001                            i2l301 0538  
                          i2l257 119A                            i2l273 01D0  
                          i2l267 0526                            i2l269 018C  
                          i2l295 0498                            i2l287 0360  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 00BB  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0035                       i2memcpy@s1 0037  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1920       ToMainLow_recvmsg@maxlength 01B8  
        timer0_lthread@msgbuffer 01A8          i2c_configure_slave@addr 00D7  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 17EE                 __end_ofi1_memcpy 19E4  
               __end_ofi2_memcpy 1A24                  __initialization 1C32  
     uart_trans_int_handler@data 001F                     __end_of_main 0A44  
   uart_trans_int_handler@length 0023                       _ReadTimer1 1D3C  
    __size_of_timer1_int_handler 0030       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026    __size_of_FromMainHigh_recvmsg 0032  
          __size_ofi2_in_low_int 002E    __size_of_FromMainHigh_sendmsg 0036  
                         ??_main 01C1                  send_msg@msgtype 01A9  
                  __activetblptr 000002                  send_msg@tlength 01AD  
     FromMainLow_sendmsg@msgtype 01B2             __end_of_handle_start 11E6  
        ??_uart_recv_int_handler 001B                           i1l3803 19B6  
                         i1l3903 130C                           i1l3809 19D2  
                         i1l3833 121E                           i2l3211 02C8  
                         i2l3203 0270                           i2l2405 184E  
                         i1l3925 1836                           i1l3933 0066  
                         i2l3151 1510                           i2l3233 03D4  
                         i2l3209 0288                           i2l3145 1506  
                         i1l3857 0FC0                           i1l3873 1048  
                     _OpenTimer0 1B8E                       _OpenTimer1 1A24  
                         i2l3235 0416                           i1l3939 0070  
                         i2l3261 04FA                           i2l3173 0182  
                 __CFG_WDTEN$OFF 000000                           i2l3239 0428  
                         i2l3191 0208                           i2l3167 016A  
                         i2l3281 0636                           i2l3273 059C  
                         i2l3193 0234                           i2l3267 053C  
                         i2l3701 11CE                           i2l3289 06DC  
                         i2l3813 19F6                           i2l2881 1B6E  
                         i2l3819 1A12                           i2l3757 1098  
                         i2l3781 0DE6                           i2l2889 1B84  
                         i2l3699 11B6                           i2l3797 0E8C  
    __end_of_i2c_configure_slave 1C0A                    ??_SleepIfOkay 0039  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                      ?i1_send_msg 000B  
  __end_of_start_i2c_slave_reply 0C88               timer0_lthread@tptr 01A2  
        FromMainLow_recvmsg@data 001B                      ?i2_recv_msg 003F  
                   i2_in_low_int 1B60                      ?i2_send_msg 003F  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 00C4                 OpenTimer0@config 00D7  
                         _ic_ptr 00DD                        ??___lwmod 00DB  
                  main@msgbuffer 0200                 __end_of_init_i2c 1790  
               OpenTimer1@config 00D7                           _memcpy 1790  
                         clear_0 1C38                           clear_1 1C44  
                         _uc_ptr 0048                           main@ic 0223  
                         main@uc 021C                 __end_of_recv_msg 0B7A  
    start_i2c_slave_reply@length 00DB                        ??_in_main 00DD  
               __end_of_send_msg 0D8C            timer0_int_handler@val 00C5  
        i2c_int_handler@i2c_data 00C5                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00DA         ToMainLow_recvmsg@msgtype 01B4  
           __size_of_in_high_int 0012          FromMainLow_sendmsg@data 01B3  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1D7A  
                     __accesstop 0080          __end_of__initialization 1C4E  
     __end_of_ToMainHigh_recvmsg 19A4       __end_of_ToMainHigh_sendmsg 1BE2  
             ?_init_uart_lthread 00D7      __end_of_init_timer1_lthread 1D18  
            __end_of_SleepIfOkay 1896                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 00D9  
                    ?_ReadTimer1 0001               __size_of_check_msg 0036  
              __end_of_ReadUSART 1CDE        timer0_int_handler@msgtype 00C3  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1546  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0035  
                  _ToMainHigh_MQ 016C              __size_ofi2_recv_msg 0104  
               _enter_sleep_mode 1D74              __size_ofi2_send_msg 00D2  
           timer1_lthread@length 01BA                    ReadUSART@data 0001  
              __end_of_OpenUSART 13BE                    check_msg@qptr 00D7  
           timer1_lthread@retval 01BF        __end_of_init_uart_lthread 1D7C  
        ??_block_on_To_msgqueues 01A2             __size_of_init_queues 006E  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0048  
        __end_of_i2c_int_handler 071E                     ?i2_check_msg 0035  
             timer1_lthread@tptr 01B6                recv_msg@maxlength 01A8  
                recv_msg@msgtype 01A9                  recv_msg@tlength 01B0  
          __size_of_handle_start 00C8                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0037                          ?_memcpy 00D7  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0037  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 0012  
        __size_of_timer1_lthread 0072                       ??i1_memcpy 0007  
                     ??i2_memcpy 003B                 i1send_msg@length 000D  
                  i2_in_high_int 1D60                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001              __size_of_ReadTimer1 0012  
              __end_of_check_msg 1AFE                        ?_init_i2c 00D7  
                    _SleepIfOkay 1848                        ?_recv_msg 01A6  
                     _in_low_int 1896                     _handle_start 111E  
                        __Hparam 0000                        ?_send_msg 01A6  
                        __Lparam 0000       __end_of_timer0_int_handler 14CC  
    __end_of_FromMainLow_recvmsg 1C32      __end_of_FromMainLow_sendmsg 1A92  
               init_uart_recv@uc 00D7                          ___lwmod 13BE  
                __CFG_STVREN$OFF 000000                          __pcinit 1C32  
                __size_of_memcpy 005E                       _init_queue 15CC  
                        __ramtop 0400              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0038                          __ptext0 071E  
                        __ptext1 0E90                          __ptext2 1A5C  
                        __ptext3 1646                          __ptext4 13BE  
                        __ptext5 1A92                          __ptext6 0C88  
                        __ptext7 1CF4                          __ptext8 0B7A  
                        __ptext9 1CA2                uart_lthread@index 01BF  
                      _T0CONbits 000FD5                          _in_main 18DC  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1D60  
            __end_of_WriteTimer1 1D3C                   ?i2_in_high_int 0035  
 __end_of_uart_trans_int_handler 1848       __size_of_init_uart_lthread 0002  
                 __pintcode_body 14CC     __end_of_FromMainHigh_recvmsg 1B30  
           end_of_initialization 1C4E          timer1_lthread@msgbuffer 01BC  
   __end_of_FromMainHigh_sendmsg 1AC8   __size_of_uart_recv_int_handler 009C  
     FromMainHigh_sendmsg@length 01B5                          memcpy@d 01A2  
                        memcpy@n 00DB                          memcpy@s 01A4  
  __end_of_uart_recv_int_handler 132C                       ??_init_i2c 00D9  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00C3  
                  __Lmediumconst 0000                          int_func 14CC  
                   ??i1_send_msg 0011                    ?_uart_lthread 01B6  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 0046                       ??_recv_msg 01AD  
                   ??i2_send_msg 0045                       ??_send_msg 01AC  
     __end_of_timer1_int_handler 1B60                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 00BB  
             __end_ofi1_recv_msg 104C               __end_ofi1_send_msg 1290  
    FromMainHigh_sendmsg@msgtype 01B2                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0E90               __end_ofi2_send_msg 111E  
  FromMainHigh_recvmsg@maxlength 00BF         timer1_int_handler@result 001C  
                 ??_uart_lthread 00DD                        _TXSTAbits 000FAC  
                     main@length 0222                      ?_in_low_int 00D9  
          timer0_lthread@msgtype 01A4            _start_i2c_slave_reply 0B7A  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 1D7A                     ??_ReadTimer1 0003  
             _ToMainHigh_recvmsg 1962                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1BB8                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1CF4  
                    ?_init_queue 00D7                        i2memcpy@d 003B  
                    _WriteTimer0 1D4E                      _WriteTimer1 1D2A  
                      i2memcpy@n 0039                        i2memcpy@s 003D  
                 _timer1_lthread 1646                   __end_of_memcpy 17EE  
              _enable_interrupts 1D6C             __size_of_Delay1KTCYx 0016  
            ?_ToMainHigh_recvmsg 01B4                  ??i2_in_high_int 0037  
       i2c_int_handler@data_read 00C8              ?_ToMainHigh_sendmsg 00BB  
             ?_enable_interrupts 0001              start_initialization 1C32  
                  ??_in_high_int 00D9                        _ReadUSART 1CC0  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
      FromMainLow_sendmsg@length 01B5              ??_enable_interrupts 00D7  
                   ??_OpenTimer0 00D7                     ??_OpenTimer1 00D7  
 __size_of_block_on_To_msgqueues 007E               __end_of_ReadTimer1 1D4E  
  __end_of_block_on_To_msgqueues 15CC                        _OpenUSART 132C  
   __end_of_InterruptHandlerHigh 154E                       init_i2c@ic 00D7  
           ??_ToMainHigh_recvmsg 00DD             ??_ToMainHigh_sendmsg 0046  
         __end_of_timer0_lthread 1D06         i2c_int_handler@error_buf 00C0  
         __end_of_timer1_lthread 16B8        __end_of_enable_interrupts 1D74  
                       ??_memcpy 00DD            timer1_lthread@msgtype 01B8  
           _FromMainHigh_recvmsg 1AFE             _FromMainHigh_sendmsg 1A92  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1BB8  
             __end_of_OpenTimer1 1A5C         i2c_int_handler@msg_ready 00C7  
                    __pbssCOMRAM 004A                       ?_ReadUSART 0001  
                  ??_init_queues 00DB                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2                    __pcstackBANK2 0200  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00D7  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D7  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00A8  
            __end_of_in_high_int 1D2A                       ?_OpenUSART 00D7  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B6  
                   _ToMainLow_MQ 0080              __size_of_init_queue 007A  
                 _init_uart_recv 1CA2                        _check_msg 1AC8  
                      __pnvBANK0 00DD           ?_start_i2c_slave_reply 00D7  
              __size_of_init_i2c 006A                     recv_msg@data 01AB  
                   recv_msg@qmsg 01B2                     recv_msg@slot 01AF  
                   recv_msg@qptr 01A6                __size_of_recv_msg 0136  
                      __pintcode 0008                __size_of_send_msg 0104  
                ?_timer0_lthread 01A2                         ?___lwmod 00D7  
          ?_FromMainHigh_recvmsg 00BB                  ?_timer1_lthread 01B6  
          ?_FromMainHigh_sendmsg 01B2                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B6             __end_of_uart_lthread 0F7A  
     i2c_int_handler@msg_to_send 00C6                         ?_in_main 00DB  
              WriteTimer0@timer0 0035               _timer0_int_handler 1448  
              WriteTimer1@timer1 0001              uart_lthread@msgtype 01B8  
          ToMainLow_sendmsg@data 0018              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 01B6  
         __end_of_init_uart_recv 1CC0              __end_of_init_queues 1726  
                i2check_msg@qptr 0035                       ?_check_msg 00D7  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0037                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 00BC                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 00C0                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1B30                         i1_memcpy 19A4  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 19E4             timer0_lthread@msgval 00D7  
       FromMainHigh_recvmsg@data 00BD                      _in_high_int 1D18  
                   send_msg@data 01AA              _i2c_configure_slave 1BE2  
                   send_msg@qmsg 01B0                     send_msg@slot 01AF  
                   send_msg@qptr 01A6            uart_lthread@msgbuffer 01BC  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D7  
                    ??_OpenUSART 00D9                  OpenUSART@config 00DC  
                 ??i2_in_low_int 0039            _uart_recv_int_handler 1290  
                   ??_in_low_int 00DB                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0048  
         ??_FromMainHigh_sendmsg 00DD             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 065A               ??_enter_sleep_mode 0035  
               __size_of___lwmod 008A                     ??_init_queue 00D9  
                   ?_WriteTimer0 0035                     ?_WriteTimer1 0001  
       FromMainHigh_sendmsg@data 01B3          ToMainLow_sendmsg@length 001A  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 0042  
    ToMainHigh_recvmsg@maxlength 01B8                i2send_msg@tlength 00B6  
        init_timer1_lthread@tptr 00D7                      _init_queues 16B8  
             __end_of_in_low_int 18DC                         __ptext10 1D7A  
                       __ptext11 1D06                         __ptext20 1D18  
                       __ptext12 16B8                         __ptext21 1AC8  
                       __ptext13 15CC                         __ptext22 1CDE  
                       __ptext14 1726                         __ptext31 17EE  
                       __ptext23 1920                         __ptext15 1BE2  
                       __ptext40 19A4                         __ptext32 1C0A  
                       __ptext24 1962                         __ptext16 1D6C  
                       __ptext41 1D3C                         __ptext33 0F7A  
                       __ptext25 0A44                         __ptext17 154E  
                       __ptext50 104C                         __ptext34 1290  
                       __ptext26 1790                         __ptext18 18DC  
                       __ptext51 19E4                         __ptext43 1448  
                       __ptext35 1CC0                         __ptext27 132C  
                       __ptext19 1896                         __ptext52 1848  
                       __ptext44 1D4E                         __ptext36 1B30  
                       __ptext28 1A24                         __ptext53 1B60  
                       __ptext45 1AFE                         __ptext37 1D2A  
                       __ptext29 1B8E                         __ptext54 1D60  
                       __ptext46 0D8C                         __ptext38 1C58  
                       __ptext55 1C7E                         __ptext47 00C4  
                       __ptext39 11E6                         __ptext56 1D74  
                       __ptext48 111E                         __ptext49 1BB8  
                 i1send_msg@data 000F                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 01BA         timer0_int_handler@length 00C1  
             uart_lthread@status 01BE                         _init_i2c 1726  
            _init_timer1_lthread 1D06                    __size_of_main 0326  
                  ??i2_check_msg 0037                main@t1thread_data 021A  
                    ??_check_msg 00D9               __end_of_init_queue 1646  
           __size_of_SleepIfOkay 004E                         _recv_msg 0A44  
          ??_i2c_configure_slave 00D7                         _send_msg 0C88  
                 init_queue@qptr 00D7            __size_of_uart_lthread 00EA  
                 i2recv_msg@data 0044    uart_trans_int_handler@msgtype 0022  
                 i2recv_msg@qmsg 00B9                    ??_Delay1KTCYx 00D7  
                 i2recv_msg@slot 00B6                   i2recv_msg@qptr 003F  
                       main@baud 020E              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00D7         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00D7                         memcpy@d1 00D7  
                       memcpy@s1 00D9            __end_ofi2_in_high_int 1D6C  
   i2c_int_handler@overrun_error 00C4                 i2send_msg@length 0041  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D9  
               ___lwmod@dividend 00D7           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0E90                   main@UARTConfig 020F  
          _block_on_To_msgqueues 154E                    ?_handle_start 0001  
               ??_timer0_lthread 00D7      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01BE                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0046  
            __end_ofi2_check_msg 1CA2            ??_init_timer1_lthread 00D9  
         ??_InterruptHandlerHigh 00C9                _ToMainLow_recvmsg 1920  
              _ToMainLow_sendmsg 1C58               main@last_reg_recvd 020D  
                ___lwmod@divisor 00D9             __end_ofi2_in_low_int 1B8E  
             ?_ToMainLow_recvmsg 01B4              __end_of_Delay1KTCYx 1CF4  
              ??_i2c_int_handler 00BE                  ___lwmod@counter 00DC  
             ?_ToMainLow_sendmsg 0017                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0043  
          ??_InterruptHandlerLow 0024              ??_ToMainLow_recvmsg 00DD  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003F              ??_ToMainLow_sendmsg 001A  
            _FromMainLow_recvmsg 1C0A                   ??_handle_start 0035  
            _FromMainLow_sendmsg 1A5C                     _USART_Status 004B  
