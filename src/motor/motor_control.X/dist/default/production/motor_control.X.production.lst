

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Feb 25 19:55:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     _ADCON1	set	4033
    74  0000                     _CMCON	set	4020
    75  0000                     _INTCONbits	set	4082
    76  0000                     _IPR1bits	set	3999
    77  0000                     _LATA	set	3977
    78  0000                     _LATB	set	3978
    79  0000                     _OSCCON	set	4051
    80  0000                     _OSCCONbits	set	4051
    81  0000                     _OSCTUNEbits	set	3995
    82  0000                     _PIE1bits	set	3997
    83  0000                     _PIR1bits	set	3998
    84  0000                     _PORTA	set	3968
    85  0000                     _PORTAbits	set	3968
    86  0000                     _PORTB	set	3969
    87  0000                     _RCONbits	set	4048
    88  0000                     _RCREG	set	4014
    89  0000                     _RCSTA	set	4011
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _SPBRGH	set	4016
    93  0000                     _SSPADD	set	4040
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON1	set	4038
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _SSPCON2	set	4037
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTAT	set	4039
   100  0000                     _SSPSTATbits	set	4039
   101  0000                     _T1CON	set	4045
   102  0000                     _T1CONbits	set	4045
   103  0000                     _TMR1H	set	4047
   104  0000                     _TMR1L	set	4046
   105  0000                     _TRISA	set	3986
   106  0000                     _TRISB	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _TXREG	set	4013
   109  0000                     _TXSTA	set	4012
   110  0000                     _TXSTAbits	set	4012
   111                           
   112                           	psect	nvCOMRAM
   113  000049                     __pnvCOMRAM:
   114                           	opt stack 0
   115  000049                     _uc_ptr:
   116                           	opt stack 0
   117  000049                     	ds	2
   118                           
   119                           	psect	nvBANK0
   120  0000E1                     __pnvBANK0:
   121                           	opt stack 0
   122  0000E1                     _ic_ptr:
   123                           	opt stack 0
   124  0000E1                     	ds	2
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  0019DE                     __pcinit:
   130                           	opt stack 0
   131  0019DE                     start_initialization:
   132                           	opt stack 0
   133  0019DE                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to BANK2 (54 bytes)
   137  0019DE  EE02  F000         	lfsr	0,__pbssBANK2
   138  0019E2  0E36               	movlw	54
   139  0019E4                     clear_0:
   140  0019E4  6AEE               	clrf	postinc0,c
   141  0019E6  06E8               	decf	wreg,f,c
   142  0019E8  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to BANK1 (108 bytes)
   145  0019EA  EE01  F07E         	lfsr	0,__pbssBANK1
   146  0019EE  0E6C               	movlw	108
   147  0019F0                     clear_1:
   148  0019F0  6AEE               	clrf	postinc0,c
   149  0019F2  06E8               	decf	wreg,f,c
   150  0019F4  E1FD               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to BANK0 (54 bytes)
   153  0019F6  EE00  F080         	lfsr	0,__pbssBANK0
   154  0019FA  0E36               	movlw	54
   155  0019FC                     clear_2:
   156  0019FC  6AEE               	clrf	postinc0,c
   157  0019FE  06E8               	decf	wreg,f,c
   158  001A00  E1FD               	bnz	clear_2
   159                           
   160                           ; Clear objects allocated to COMRAM (2 bytes)
   161  001A02  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162  001A04  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   163  001A06                     end_of_initialization:
   164                           	opt stack 0
   165  001A06                     __end_of__initialization:
   166                           	opt stack 0
   167  001A06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  001A08  6EF8               	movwf	tblptru,c
   169  001A0A  0100               	movlb	0
   170  001A0C  EF13  F003         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  00004B                     __pbssCOMRAM:
   177                           	opt stack 0
   178  00004B                     _MQ_Main_Willing_to_block:
   179                           	opt stack 0
   180  00004B                     	ds	1
   181  00004C                     _USART_Status:
   182                           	opt stack 0
   183  00004C                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	bssBANK0
   189  000080                     __pbssBANK0:
   190                           	opt stack 0
   191  000080                     _ToMainLow_MQ:
   192                           	opt stack 0
   193  000080                     	ds	54
   194                           tblptru	equ	0xFF8
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssBANK1
   199  00017E                     __pbssBANK1:
   200                           	opt stack 0
   201  00017E                     _FromMainLow_MQ:
   202                           	opt stack 0
   203  00017E                     	ds	54
   204  0001B4                     _ToMainHigh_MQ:
   205                           	opt stack 0
   206  0001B4                     	ds	54
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	bssBANK2
   212  000200                     __pbssBANK2:
   213                           	opt stack 0
   214  000200                     _FromMainHigh_MQ:
   215                           	opt stack 0
   216  000200                     	ds	54
   217                           tblptru	equ	0xFF8
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           
   221                           	psect	cstackBANK1
   222  000100                     __pcstackBANK1:
   223                           	opt stack 0
   224  000100                     send_msg@qptr:
   225                           	opt stack 0
   226  000100                     recv_msg@qptr:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x0
   230  000100                     	ds	2
   231  000102                     send_msg@length:
   232                           	opt stack 0
   233  000102                     recv_msg@maxlength:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x2
   237  000102                     	ds	1
   238  000103                     send_msg@msgtype:
   239                           	opt stack 0
   240  000103                     recv_msg@msgtype:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x3
   244  000103                     	ds	1
   245  000104                     send_msg@data:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x4
   249  000104                     	ds	1
   250  000105                     recv_msg@data:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x5
   254  000105                     	ds	1
   255  000106                     send_msg@tlength:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x6
   259  000106                     	ds	1
   260  000107                     recv_msg@slot:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x7
   264  000107                     	ds	1
   265  000108                     send_msg@slot:
   266                           	opt stack 0
   267  000108                     recv_msg@tlength:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x8
   271  000108                     	ds	1
   272  000109                     send_msg@qmsg:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x9
   276  000109                     	ds	1
   277  00010A                     recv_msg@qmsg:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0xA
   281  00010A                     	ds	1
   282  00010B                     ToMainLow_sendmsg@length:
   283                           	opt stack 0
   284  00010B                     FromMainLow_sendmsg@length:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0xB
   288  00010B                     	ds	1
   289  00010C                     ToMainLow_recvmsg@msgtype:
   290                           	opt stack 0
   291  00010C                     ToMainHigh_recvmsg@msgtype:
   292                           	opt stack 0
   293  00010C                     sendUARTarr@data:
   294                           	opt stack 0
   295  00010C                     uart_lthread@uptr:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xC
   299  00010C                     	ds	2
   300  00010E                     sendUARTarr@retval:
   301                           	opt stack 0
   302  00010E                     ToMainLow_recvmsg@data:
   303                           	opt stack 0
   304  00010E                     ToMainHigh_recvmsg@data:
   305                           	opt stack 0
   306  00010E                     uart_lthread@msgtype:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0xE
   310  00010E                     	ds	1
   311  00010F                     sendUARTarr@length:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0xF
   315  00010F                     	ds	1
   316  000110                     uart_lthread@length:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x10
   320  000110                     	ds	2
   321  000112                     uart_lthread@msgbuffer:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x12
   325  000112                     	ds	2
   326  000114                     uart_lthread@status:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x14
   330  000114                     	ds	1
   331  000115                     uart_lthread@index:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x15
   335  000115                     	ds	2
   336  000117                     main@t0thread_data:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x17
   340  000117                     	ds	2
   341  000119                     main@msgbuffer:
   342                           	opt stack 0
   343                           
   344                           ; 11 bytes @ 0x19
   345  000119                     	ds	11
   346  000124                     main@baud:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x24
   350  000124                     	ds	1
   351  000125                     main@UARTConfig:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x25
   355  000125                     	ds	1
   356  000126                     main@last_reg_recvd:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x26
   360  000126                     	ds	1
   361  000127                     main@uthread_data:
   362                           	opt stack 0
   363                           
   364                           ; 10 bytes @ 0x27
   365  000127                     	ds	10
   366  000131                     main@uc:
   367                           	opt stack 0
   368                           
   369                           ; 5 bytes @ 0x31
   370  000131                     	ds	5
   371  000136                     main@ctrl:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x36
   375  000136                     	ds	2
   376  000138                     main@msgtype:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x38
   380  000138                     	ds	1
   381  000139                     main@length:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x39
   385  000139                     	ds	1
   386  00013A                     main@t1thread_data:
   387                           	opt stack 0
   388                           
   389                           ; 40 bytes @ 0x3A
   390  00013A                     	ds	40
   391  000162                     main@ic:
   392                           	opt stack 0
   393                           
   394                           ; 28 bytes @ 0x62
   395  000162                     	ds	28
   396                           tblptru	equ	0xFF8
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           	psect	cstackBANK0
   401  0000B6                     __pcstackBANK0:
   402                           	opt stack 0
   403  0000B6                     i2send_msg@tlength:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x0
   407  0000B6                     	ds	2
   408  0000B8                     i2send_msg@slot:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x2
   412  0000B8                     	ds	1
   413  0000B9                     i2send_msg@qmsg:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x3
   417  0000B9                     	ds	2
   418  0000BB                     ??_i2c_int_handler:
   419                           
   420                           ; 0 bytes @ 0x5
   421  0000BB                     	ds	1
   422  0000BC                     i2c_int_handler@error_buf:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x6
   426  0000BC                     	ds	3
   427  0000BF                     i2c_int_handler@data_written:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x9
   431  0000BF                     	ds	1
   432  0000C0                     i2c_int_handler@overrun_error:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0xA
   436  0000C0                     	ds	1
   437  0000C1                     i2c_int_handler@i2c_data:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441  0000C1                     	ds	1
   442  0000C2                     i2c_int_handler@msg_to_send:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0xC
   446  0000C2                     	ds	1
   447  0000C3                     i2c_int_handler@msg_ready:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0xD
   451  0000C3                     	ds	1
   452  0000C4                     i2c_int_handler@data_read:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0xE
   456  0000C4                     	ds	1
   457  0000C5                     ??_InterruptHandlerHigh:
   458                           
   459                           ; 0 bytes @ 0xF
   460  0000C5                     	ds	14
   461  0000D3                     ?_in_high_int:
   462                           	opt stack 0
   463  0000D3                     i2c_configure_slave@addr:
   464                           	opt stack 0
   465  0000D3                     OpenTimer1@config:
   466                           	opt stack 0
   467  0000D3                     Delay1KTCYx@unit:
   468                           	opt stack 0
   469  0000D3                     init_queue@qptr:
   470                           	opt stack 0
   471  0000D3                     check_msg@qptr:
   472                           	opt stack 0
   473  0000D3                     start_i2c_slave_reply@msg:
   474                           	opt stack 0
   475  0000D3                     init_i2c@ic:
   476                           	opt stack 0
   477  0000D3                     init_uart_recv@uc:
   478                           	opt stack 0
   479  0000D3                     timer0_lthread@tptr:
   480                           	opt stack 0
   481  0000D3                     timer1_lthread@tptr:
   482                           	opt stack 0
   483  0000D3                     quad_lookup_init@table:
   484                           	opt stack 0
   485  0000D3                     init_uart_lthread@uptr:
   486                           	opt stack 0
   487  0000D3                     WriteTimer1@timer1:
   488                           	opt stack 0
   489  0000D3                     OpenUSART@spbrg:
   490                           	opt stack 0
   491  0000D3                     memcpy@d1:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x1D
   495  0000D3                     	ds	2
   496  0000D5                     ??_OpenUSART:
   497  0000D5                     ??_start_i2c_slave_reply:
   498  0000D5                     ??_check_msg:
   499  0000D5                     ?_in_low_int:
   500                           	opt stack 0
   501  0000D5                     init_queue@i:
   502                           	opt stack 0
   503  0000D5                     timer0_lthread@msgtype:
   504                           	opt stack 0
   505  0000D5                     init_timer1_lthread@tptr:
   506                           	opt stack 0
   507  0000D5                     timer1_lthread@msgtype:
   508                           	opt stack 0
   509  0000D5                     WriteTimer1@timer:
   510                           	opt stack 0
   511  0000D5                     memcpy@s1:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x1F
   515  0000D5                     	ds	1
   516  0000D6                     
   517                           ; 0 bytes @ 0x20
   518  0000D6                     	ds	1
   519  0000D7                     ?_in_main:
   520                           	opt stack 0
   521  0000D7                     start_i2c_slave_reply@length:
   522                           	opt stack 0
   523  0000D7                     timer0_lthread@length:
   524                           	opt stack 0
   525  0000D7                     timer1_lthread@length:
   526                           	opt stack 0
   527  0000D7                     memcpy@n:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x21
   531  0000D7                     	ds	1
   532  0000D8                     OpenUSART@config:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x22
   536  0000D8                     	ds	1
   537  0000D9                     timer0_lthread@msgbuffer:
   538                           	opt stack 0
   539  0000D9                     timer1_lthread@msgbuffer:
   540                           	opt stack 0
   541  0000D9                     memcpy@d:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x23
   545  0000D9                     	ds	2
   546  0000DB                     ??_timer1_lthread:
   547  0000DB                     timer0_lthread@msgval:
   548                           	opt stack 0
   549  0000DB                     memcpy@s:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x25
   553  0000DB                     	ds	2
   554  0000DD                     ??_send_msg:
   555  0000DD                     ??_recv_msg:
   556                           
   557                           ; 0 bytes @ 0x27
   558  0000DD                     	ds	1
   559  0000DE                     ToMainLow_sendmsg@msgtype:
   560                           	opt stack 0
   561  0000DE                     FromMainLow_sendmsg@msgtype:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x28
   565  0000DE                     	ds	1
   566  0000DF                     ToMainLow_recvmsg@maxlength:
   567                           	opt stack 0
   568  0000DF                     ToMainHigh_recvmsg@maxlength:
   569                           	opt stack 0
   570  0000DF                     timer1_lthread@index:
   571                           	opt stack 0
   572  0000DF                     ToMainLow_sendmsg@data:
   573                           	opt stack 0
   574  0000DF                     FromMainLow_sendmsg@data:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x29
   578  0000DF                     	ds	2
   579  0000E1                     tblptru	equ	0xFF8
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           
   583                           ; 0 bytes @ 0x2B
   584                           
   585                           	psect	cstackCOMRAM
   586  000001                     __pcstackCOMRAM:
   587                           	opt stack 0
   588  000001                     ReadUSART@data:
   589                           	opt stack 0
   590  000001                     i1WriteTimer1@timer1:
   591                           	opt stack 0
   592  000001                     i1memcpy@d1:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x0
   596  000001                     	ds	2
   597  000003                     i1WriteTimer1@timer:
   598                           	opt stack 0
   599  000003                     i1memcpy@s1:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x2
   603  000003                     	ds	2
   604  000005                     i1memcpy@n:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x4
   608  000005                     	ds	2
   609  000007                     i1memcpy@d:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  000007                     	ds	2
   614  000009                     i1memcpy@s:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x8
   618  000009                     	ds	2
   619  00000B                     i1send_msg@qptr:
   620                           	opt stack 0
   621  00000B                     i1recv_msg@qptr:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xA
   625  00000B                     	ds	2
   626  00000D                     i1send_msg@length:
   627                           	opt stack 0
   628  00000D                     i1recv_msg@maxlength:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0xC
   632  00000D                     	ds	1
   633  00000E                     i1send_msg@msgtype:
   634                           	opt stack 0
   635  00000E                     i1recv_msg@msgtype:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0xD
   639  00000E                     	ds	1
   640  00000F                     i1send_msg@data:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0xE
   644  00000F                     	ds	1
   645  000010                     i1recv_msg@data:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xF
   649  000010                     	ds	1
   650  000011                     ??i1_send_msg:
   651                           
   652                           ; 0 bytes @ 0x10
   653  000011                     	ds	1
   654  000012                     ??i1_recv_msg:
   655  000012                     i1send_msg@tlength:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x11
   659  000012                     	ds	2
   660  000014                     i1send_msg@slot:
   661                           	opt stack 0
   662  000014                     i1recv_msg@slot:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x13
   666  000014                     	ds	1
   667  000015                     i1send_msg@qmsg:
   668                           	opt stack 0
   669  000015                     i1recv_msg@tlength:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x14
   673  000015                     	ds	2
   674  000017                     i1ToMainLow_sendmsg@msgtype:
   675                           	opt stack 0
   676  000017                     i1recv_msg@qmsg:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x16
   680  000017                     	ds	1
   681  000018                     i1ToMainLow_sendmsg@data:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x17
   685  000018                     	ds	1
   686  000019                     FromMainLow_recvmsg@msgtype:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x18
   690  000019                     	ds	1
   691  00001A                     i1ToMainLow_sendmsg@length:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x19
   695  00001A                     	ds	1
   696  00001B                     ??_uart_recv_int_handler:
   697  00001B                     sendUARTbyte@data:
   698                           	opt stack 0
   699  00001B                     FromMainLow_recvmsg@data:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x1A
   703  00001B                     	ds	1
   704  00001C                     sendUARTbyte@retval:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x1B
   708  00001C                     	ds	1
   709  00001D                     FromMainLow_recvmsg@maxlength:
   710                           	opt stack 0
   711  00001D                     sendUARTbyte@temp:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x1C
   715  00001D                     	ds	1
   716  00001E                     uart_trans_int_handler@data:
   717                           	opt stack 0
   718  00001E                     timer1_int_handler@curPos:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x1D
   722  00001E                     	ds	2
   723  000020                     uart_trans_int_handler@msgtype:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x1F
   727  000020                     	ds	1
   728  000021                     uart_trans_int_handler@curIndex:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x20
   732  000021                     	ds	1
   733  000022                     uart_trans_int_handler@length:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x21
   737  000022                     	ds	1
   738  000023                     ??_InterruptHandlerLow:
   739                           
   740                           ; 0 bytes @ 0x22
   741  000023                     	ds	17
   742  000034                     ?i2_in_high_int:
   743                           	opt stack 0
   744  000034                     handle_start@data_read:
   745                           	opt stack 0
   746  000034                     i2check_msg@qptr:
   747                           	opt stack 0
   748  000034                     i2memcpy@d1:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x33
   752  000034                     	ds	2
   753  000036                     ??i2_check_msg:
   754  000036                     ?i2_in_low_int:
   755                           	opt stack 0
   756  000036                     i2memcpy@s1:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x35
   760  000036                     	ds	2
   761  000038                     i2memcpy@n:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x37
   765  000038                     	ds	2
   766  00003A                     i2memcpy@d:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x39
   770  00003A                     	ds	2
   771  00003C                     i2memcpy@s:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x3B
   775  00003C                     	ds	2
   776  00003E                     i2send_msg@qptr:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x3D
   780  00003E                     	ds	2
   781  000040                     i2send_msg@length:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x3F
   785  000040                     	ds	1
   786  000041                     i2send_msg@msgtype:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x40
   790  000041                     	ds	1
   791  000042                     i2send_msg@data:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x41
   795  000042                     	ds	2
   796  000044                     ??i2_send_msg:
   797                           
   798                           ; 0 bytes @ 0x43
   799  000044                     	ds	1
   800  000045                     ToMainHigh_sendmsg@msgtype:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x44
   804  000045                     	ds	1
   805  000046                     ToMainHigh_sendmsg@data:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x45
   809  000046                     	ds	2
   810  000048                     ToMainHigh_sendmsg@length:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x47
   814  000048                     	ds	1
   815                           tblptru	equ	0xFF8
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 139 in file "src/main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  ctrl            2   54[BANK1 ] unsigned char [2]
   829 ;;  t1thread_dat   40   58[BANK1 ] struct __timer1_thread_s
   830 ;;  ic             28   98[BANK1 ] struct __i2c_comm
   831 ;;  msgbuffer      11   25[BANK1 ] unsigned char [11]
   832 ;;  uthread_data   10   39[BANK1 ] struct __uart_thread_str
   833 ;;  uc              5   49[BANK1 ] struct __uart_comm
   834 ;;  t0thread_dat    2   23[BANK1 ] struct __timer0_thread_s
   835 ;;  length          1   57[BANK1 ] char 
   836 ;;  msgtype         1   56[BANK1 ] unsigned char 
   837 ;;  last_reg_rec    1   38[BANK1 ] unsigned char 
   838 ;;  UARTConfig      1   37[BANK1 ] unsigned char 
   839 ;;  baud            1   36[BANK1 ] unsigned char 
   840 ;;  i               1    0        unsigned char 
   841 ;;  c               1    0        unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0     103       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       0     103       0       0
   855 ;;Total ram usage:      103 bytes
   856 ;; Hardware stack levels required when called:   15
   857 ;; This function calls:
   858 ;;		_OpenTimer1
   859 ;;		_OpenUSART
   860 ;;		_ToMainHigh_recvmsg
   861 ;;		_ToMainLow_recvmsg
   862 ;;		_WriteTimer1
   863 ;;		_block_on_To_msgqueues
   864 ;;		_enable_interrupts
   865 ;;		_i2c_configure_slave
   866 ;;		_init_i2c
   867 ;;		_init_queues
   868 ;;		_init_timer1_lthread
   869 ;;		_init_uart_lthread
   870 ;;		_init_uart_recv
   871 ;;		_sendUARTarr
   872 ;;		_start_i2c_slave_reply
   873 ;;		_timer0_lthread
   874 ;;		_timer1_lthread
   875 ;;		_uart_lthread
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text0
   882  000626                     __ptext0:
   883                           	opt stack 0
   884  000626                     _main:
   885                           	opt stack 16
   886                           
   887                           ;main.c: 140: char c;
   888                           ;main.c: 141: signed char length;
   889                           ;main.c: 142: unsigned char msgtype;
   890                           ;main.c: 143: unsigned char last_reg_recvd;
   891                           ;main.c: 144: unsigned char baud, UARTConfig;
   892                           ;main.c: 145: uart_comm uc;
   893                           ;main.c: 146: i2c_comm ic;
   894                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
   895                           ;main.c: 148: unsigned char i;
   896                           ;main.c: 149: uart_thread_struct uthread_data;
   897                           ;main.c: 150: timer1_thread_struct t1thread_data;
   898                           ;main.c: 151: timer0_thread_struct t0thread_data;
   899                           ;main.c: 154: PORTA = 0x0;
   900                           
   901                           ;incstack = 0
   902  000626  0E00               	movlw	0
   903  000628  6E80               	movwf	3968,c	;volatile
   904                           
   905                           ;main.c: 155: LATA = 0x0;
   906  00062A  0E00               	movlw	0
   907  00062C  6E89               	movwf	3977,c	;volatile
   908                           
   909                           ;main.c: 156: ADCON1 = 0x0F;
   910  00062E  0E0F               	movlw	15
   911  000630  6EC1               	movwf	4033,c	;volatile
   912                           
   913                           ;main.c: 157: CMCON = 0x07;
   914  000632  0E07               	movlw	7
   915  000634  6EB4               	movwf	4020,c	;volatile
   916                           
   917                           ;main.c: 158: TRISA = 0xFF;
   918  000636  6892               	setf	3986,c	;volatile
   919                           
   920                           ;main.c: 161: PORTB = 0x0;
   921  000638  0E00               	movlw	0
   922  00063A  6E81               	movwf	3969,c	;volatile
   923                           
   924                           ;main.c: 162: LATB = 0x0;
   925  00063C  0E00               	movlw	0
   926  00063E  6E8A               	movwf	3978,c	;volatile
   927                           
   928                           ;main.c: 163: TRISB = 0xFF;
   929  000640  6893               	setf	3987,c	;volatile
   930                           
   931                           ;main.c: 171: OSCCON = 0x82;
   932  000642  0E82               	movlw	130
   933  000644  6ED3               	movwf	4051,c	;volatile
   934                           
   935                           ;main.c: 172: OSCTUNEbits.PLLEN = 0;
   936  000646  9C9B               	bcf	3995,6,c	;volatile
   937                           
   938                           ;main.c: 185: init_uart_recv(&uc);
   939  000648  0101               	movlb	1	; () banked
   940  00064A  0E01               	movlw	high main@uc
   941  00064C  0100               	movlb	0	; () banked
   942  00064E  6FD4               	movwf	(init_uart_recv@uc+1)& (0+255),b
   943  000650  0101               	movlb	1	; () banked
   944  000652  0E31               	movlw	low main@uc
   945  000654  0100               	movlb	0	; () banked
   946  000656  6FD3               	movwf	init_uart_recv@uc& (0+255),b
   947  000658  ECF9  F00D         	call	_init_uart_recv	;wreg free
   948                           
   949                           ;main.c: 188: init_i2c(&ic);
   950  00065C  0101               	movlb	1	; () banked
   951  00065E  0E01               	movlw	high main@ic
   952  000660  0100               	movlb	0	; () banked
   953  000662  6FD4               	movwf	(init_i2c@ic+1)& (0+255),b
   954  000664  0101               	movlb	1	; () banked
   955  000666  0E62               	movlw	low main@ic
   956  000668  0100               	movlb	0	; () banked
   957  00066A  6FD3               	movwf	init_i2c@ic& (0+255),b
   958  00066C  ECE5  F00A         	call	_init_i2c	;wreg free
   959                           
   960                           ;main.c: 191: init_timer1_lthread(&t1thread_data);
   961  000670  0101               	movlb	1	; () banked
   962  000672  0E01               	movlw	high main@t1thread_data
   963  000674  0100               	movlb	0	; () banked
   964  000676  6FD6               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   965  000678  0101               	movlb	1	; () banked
   966  00067A  0E3A               	movlw	low main@t1thread_data
   967  00067C  0100               	movlb	0	; () banked
   968  00067E  6FD5               	movwf	init_timer1_lthread@tptr& (0+255),b
   969  000680  EC6F  F009         	call	_init_timer1_lthread	;wreg free
   970                           
   971                           ;main.c: 194: init_uart_lthread(&uthread_data);
   972  000684  0101               	movlb	1	; () banked
   973  000686  0E01               	movlw	high main@uthread_data
   974  000688  0100               	movlb	0	; () banked
   975  00068A  6FD4               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   976  00068C  0101               	movlb	1	; () banked
   977  00068E  0E27               	movlw	low main@uthread_data
   978  000690  0100               	movlb	0	; () banked
   979  000692  6FD3               	movwf	init_uart_lthread@uptr& (0+255),b
   980  000694  EC5D  F00E         	call	_init_uart_lthread	;wreg free
   981                           
   982                           ;main.c: 198: init_queues();
   983  000698  EC78  F00B         	call	_init_queues	;wreg free
   984                           
   985                           ;main.c: 201: TRISB = 0x0;
   986  00069C  0E00               	movlw	0
   987  00069E  6E93               	movwf	3987,c	;volatile
   988                           
   989                           ;main.c: 202: LATB = 0x0;
   990  0006A0  0E00               	movlw	0
   991  0006A2  6E8A               	movwf	3978,c	;volatile
   992                           
   993                           ;main.c: 212: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111)
      +                          ;
   994  0006A4  0EF5               	movlw	245
   995  0006A6  EC6C  F00D         	call	_OpenTimer1
   996                           
   997                           ;main.c: 213: WriteTimer1(64936);
   998  0006AA  0EFD               	movlw	253
   999  0006AC  0100               	movlb	0	; () banked
  1000  0006AE  6FD4               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  1001  0006B0  0EA8               	movlw	168
  1002  0006B2  0100               	movlb	0	; () banked
  1003  0006B4  6FD3               	movwf	WriteTimer1@timer1& (0+255),b
  1004  0006B6  EC2F  F00E         	call	_WriteTimer1	;wreg free
  1005                           
  1006                           ;main.c: 222: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1007  0006BA  0EFC               	movlw	252
  1008  0006BC  0101               	movlb	1	; () banked
  1009  0006BE  6F25               	movwf	main@UARTConfig& (0+255),b
  1010                           
  1011                           ; BSR set to: 1
  1012                           ;main.c: 223: baud = 12;
  1013  0006C0  0E0C               	movlw	12
  1014  0006C2  0101               	movlb	1	; () banked
  1015  0006C4  6F24               	movwf	main@baud& (0+255),b
  1016                           
  1017                           ; BSR set to: 1
  1018                           ;main.c: 224: OpenUSART(UARTConfig,baud);
  1019  0006C6  0101               	movlb	1	; () banked
  1020  0006C8  0100               	movlb	0	; () banked
  1021  0006CA  C124  F0D3         	movff	main@baud,OpenUSART@spbrg
  1022  0006CE  0100               	movlb	0	; () banked
  1023  0006D0  6BD4               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1024  0006D2  0101               	movlb	1	; () banked
  1025  0006D4  5125               	movf	main@UARTConfig& (0+255),w,b
  1026  0006D6  EC65  F00A         	call	_OpenUSART
  1027                           
  1028                           ;main.c: 230: IPR1bits.TMR1IP = 0;
  1029  0006DA  909F               	bcf	3999,0,c	;volatile
  1030                           
  1031                           ;main.c: 232: IPR1bits.RCIP = 0;
  1032  0006DC  9A9F               	bcf	3999,5,c	;volatile
  1033                           
  1034                           ;main.c: 234: IPR1bits.TXIP = 0;
  1035  0006DE  989F               	bcf	3999,4,c	;volatile
  1036                           
  1037                           ;main.c: 236: IPR1bits.SSPIP = 1;
  1038  0006E0  869F               	bsf	3999,3,c	;volatile
  1039                           
  1040                           ;main.c: 245: i2c_configure_slave(0x9A);
  1041  0006E2  0E9A               	movlw	154
  1042  0006E4  EC9C  F00D         	call	_i2c_configure_slave
  1043                           
  1044                           ;main.c: 260: PIE1bits.SSPIE = 1;
  1045  0006E8  869D               	bsf	3997,3,c	;volatile
  1046                           
  1047                           ;main.c: 264: enable_interrupts();
  1048  0006EA  EC56  F00E         	call	_enable_interrupts	;wreg free
  1049  0006EE                     l3359:
  1050                           
  1051                           ;main.c: 282: block_on_To_msgqueues();
  1052  0006EE  EC4A  F00B         	call	_block_on_To_msgqueues	;wreg free
  1053                           
  1054                           ;main.c: 289: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1055  0006F2  0101               	movlb	1	; () banked
  1056  0006F4  0E01               	movlw	high main@msgtype
  1057  0006F6  0101               	movlb	1	; () banked
  1058  0006F8  6F0D               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1059  0006FA  0101               	movlb	1	; () banked
  1060  0006FC  0E38               	movlw	low main@msgtype
  1061  0006FE  0101               	movlb	1	; () banked
  1062  000700  6F0C               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1063  000702  0101               	movlb	1	; () banked
  1064  000704  0E01               	movlw	high main@msgbuffer
  1065  000706  0101               	movlb	1	; () banked
  1066  000708  6F0F               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1067  00070A  0101               	movlb	1	; () banked
  1068  00070C  0E19               	movlw	low main@msgbuffer
  1069  00070E  0101               	movlb	1	; () banked
  1070  000710  6F0E               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1071  000712  0E0A               	movlw	10
  1072  000714  ECD4  F00C         	call	_ToMainHigh_recvmsg
  1073  000718  0101               	movlb	1	; () banked
  1074  00071A  6F39               	movwf	main@length& (0+255),b
  1075                           
  1076                           ; BSR set to: 1
  1077                           ;main.c: 290: if (length < 0) {
  1078  00071C  0101               	movlb	1	; () banked
  1079  00071E  BF39               	btfsc	main@length& (0+255),7,b
  1080  000720  D08D               	goto	l3397
  1081  000722  D07E               	goto	l3395
  1082  000724                     l3367:
  1083                           
  1084                           ; BSR set to: 1
  1085                           ;main.c: 298: {
  1086                           ;main.c: 299: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1087  000724  0101               	movlb	1	; () banked
  1088  000726  0E01               	movlw	high main@t0thread_data
  1089  000728  0100               	movlb	0	; () banked
  1090  00072A  6FD4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1091  00072C  0101               	movlb	1	; () banked
  1092  00072E  0E17               	movlw	low main@t0thread_data
  1093  000730  0100               	movlb	0	; () banked
  1094  000732  6FD3               	movwf	timer0_lthread@tptr& (0+255),b
  1095  000734  0101               	movlb	1	; () banked
  1096  000736  0100               	movlb	0	; () banked
  1097  000738  C138  F0D5         	movff	main@msgtype,timer0_lthread@msgtype
  1098  00073C  0100               	movlb	0	; () banked
  1099  00073E  6BD6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1100  000740  0101               	movlb	1	; () banked
  1101  000742  5139               	movf	main@length& (0+255),w,b
  1102  000744  0100               	movlb	0	; () banked
  1103  000746  6FD7               	movwf	timer0_lthread@length& (0+255),b
  1104  000748  0100               	movlb	0	; () banked
  1105  00074A  6BD8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1106  00074C  0100               	movlb	0	; () banked
  1107  00074E  BFD7               	btfsc	timer0_lthread@length& (0+255),7,b
  1108  000750  07D8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1109  000752  0101               	movlb	1	; () banked
  1110  000754  0E01               	movlw	high main@msgbuffer
  1111  000756  0100               	movlb	0	; () banked
  1112  000758  6FDA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1113  00075A  0101               	movlb	1	; () banked
  1114  00075C  0E19               	movlw	low main@msgbuffer
  1115  00075E  0100               	movlb	0	; () banked
  1116  000760  6FD9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1117  000762  EC49  F00E         	call	_timer0_lthread	;wreg free
  1118                           
  1119                           ;main.c: 300: break;
  1120  000766  D06A               	goto	l3397
  1121  000768                     l122:
  1122                           
  1123                           ; BSR set to: 1
  1124                           ;main.c: 303: {
  1125                           ;main.c: 304: last_reg_recvd = msgbuffer[0];
  1126  000768  C119  F126         	movff	main@msgbuffer,main@last_reg_recvd
  1127                           
  1128                           ;main.c: 305: unsigned char ctrl[2];
  1129                           ;main.c: 306: switch(last_reg_recvd){
  1130  00076C  D011               	goto	l3377
  1131  00076E                     l3369:
  1132                           
  1133                           ; BSR set to: 1
  1134                           ;main.c: 308: {
  1135                           ;main.c: 309: ctrl[0] = 0;
  1136  00076E  0E00               	movlw	0
  1137  000770  0101               	movlb	1	; () banked
  1138  000772  6F36               	movwf	main@ctrl& (0+255),b
  1139                           
  1140                           ;main.c: 310: ctrl[1] = 0;
  1141  000774  0E00               	movlw	0
  1142  000776  D009               	goto	L2
  1143  000778                     l3371:
  1144                           
  1145                           ; BSR set to: 1
  1146                           ;main.c: 314: {
  1147                           ;main.c: 315: ctrl[0] = 199;
  1148  000778  0EC7               	movlw	199
  1149  00077A  0101               	movlb	1	; () banked
  1150  00077C  6F36               	movwf	main@ctrl& (0+255),b
  1151                           
  1152                           ;main.c: 316: ctrl[1] = 73;
  1153  00077E  0E49               	movlw	73
  1154  000780  D004               	goto	L2
  1155  000782                     l3373:
  1156                           
  1157                           ; BSR set to: 1
  1158                           ;main.c: 320: {
  1159                           ;main.c: 321: ctrl[0] = 182;
  1160  000782  0EB6               	movlw	182
  1161  000784  0101               	movlb	1	; () banked
  1162  000786  6F36               	movwf	main@ctrl& (0+255),b
  1163                           
  1164                           ;main.c: 322: ctrl[1] = 54;
  1165  000788  0E36               	movlw	54
  1166  00078A                     L2:
  1167  00078A  0101               	movlb	1	; () banked
  1168  00078C  6F37               	movwf	(main@ctrl+1)& (0+255),b
  1169                           
  1170                           ;main.c: 323: break;
  1171  00078E  D00B               	goto	l3379
  1172  000790                     l3377:
  1173                           
  1174                           ; BSR set to: 1
  1175  000790  0101               	movlb	1	; () banked
  1176  000792  5126               	movf	main@last_reg_recvd& (0+255),w,b
  1177                           
  1178                           ; Switch size 1, requested type "space"
  1179                           ; Number of cases is 3, Range of values is 0 to 2
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           10     6 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184  000794  0A00               	xorlw	0	; case 0
  1185  000796  B4D8               	btfsc	status,2,c
  1186  000798  D7EA               	goto	l3369
  1187  00079A  0A01               	xorlw	1	; case 1
  1188  00079C  B4D8               	btfsc	status,2,c
  1189  00079E  D7EC               	goto	l3371
  1190  0007A0  0A03               	xorlw	3	; case 2
  1191  0007A2  B4D8               	btfsc	status,2,c
  1192  0007A4  D7EE               	goto	l3373
  1193  0007A6                     l3379:
  1194                           
  1195                           ; BSR set to: 1
  1196                           ;main.c: 326: sendUARTarr(2,ctrl);
  1197  0007A6  0101               	movlb	1	; () banked
  1198  0007A8  0E01               	movlw	high main@ctrl
  1199  0007AA  0101               	movlb	1	; () banked
  1200  0007AC  6F0D               	movwf	(sendUARTarr@data+1)& (0+255),b
  1201  0007AE  0101               	movlb	1	; () banked
  1202  0007B0  0E36               	movlw	low main@ctrl
  1203  0007B2  0101               	movlb	1	; () banked
  1204  0007B4  6F0C               	movwf	sendUARTarr@data& (0+255),b
  1205  0007B6  0E02               	movlw	2
  1206  0007B8  EC21  F00D         	call	_sendUARTarr
  1207                           
  1208                           ;main.c: 327: break;
  1209  0007BC  D03F               	goto	l3397
  1210  0007BE                     l128:
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;main.c: 330: {
  1214                           ;main.c: 333: last_reg_recvd = msgbuffer[0];
  1215  0007BE  C119  F126         	movff	main@msgbuffer,main@last_reg_recvd
  1216                           
  1217                           ;main.c: 334: break;
  1218  0007C2  D03C               	goto	l3397
  1219  0007C4                     l3381:
  1220                           
  1221                           ; BSR set to: 1
  1222                           ;main.c: 347: {
  1223                           ;main.c: 348: length = 2;
  1224  0007C4  0E02               	movlw	2
  1225  0007C6  0101               	movlb	1	; () banked
  1226  0007C8  6F39               	movwf	main@length& (0+255),b
  1227                           
  1228                           ;main.c: 349: msgbuffer[0] = 0x55;
  1229  0007CA  0E55               	movlw	85
  1230  0007CC  0101               	movlb	1	; () banked
  1231  0007CE  6F19               	movwf	main@msgbuffer& (0+255),b
  1232                           
  1233                           ;main.c: 350: msgbuffer[1] = 0xAA;
  1234  0007D0  0EAA               	movlw	170
  1235  0007D2  0101               	movlb	1	; () banked
  1236  0007D4  6F1A               	movwf	(main@msgbuffer+1)& (0+255),b
  1237                           
  1238                           ;main.c: 351: break;
  1239  0007D6  D017               	goto	l3391
  1240  0007D8                     l3383:
  1241                           
  1242                           ; BSR set to: 1
  1243                           ;main.c: 354: {
  1244                           ;main.c: 355: length = 1;
  1245  0007D8  0E01               	movlw	1
  1246  0007DA  0101               	movlb	1	; () banked
  1247  0007DC  6F39               	movwf	main@length& (0+255),b
  1248                           
  1249                           ;main.c: 356: msgbuffer[0] = 0x3A;
  1250  0007DE  0E3A               	movlw	58
  1251  0007E0  D004               	goto	L3
  1252  0007E2                     l3385:
  1253                           
  1254                           ; BSR set to: 1
  1255                           ;main.c: 360: {
  1256                           ;main.c: 361: length = 1;
  1257  0007E2  0E01               	movlw	1
  1258  0007E4  0101               	movlb	1	; () banked
  1259  0007E6  6F39               	movwf	main@length& (0+255),b
  1260                           
  1261                           ;main.c: 362: msgbuffer[0] = 0xA3;
  1262  0007E8  0EA3               	movlw	163
  1263  0007EA                     L3:
  1264  0007EA  0101               	movlb	1	; () banked
  1265  0007EC  6F19               	movwf	main@msgbuffer& (0+255),b
  1266                           
  1267                           ;main.c: 363: break;
  1268  0007EE  D00B               	goto	l3391
  1269  0007F0                     l3389:
  1270                           
  1271                           ; BSR set to: 1
  1272  0007F0  0101               	movlb	1	; () banked
  1273  0007F2  5126               	movf	main@last_reg_recvd& (0+255),w,b
  1274                           
  1275                           ; Switch size 1, requested type "space"
  1276                           ; Number of cases is 3, Range of values is 168 to 170
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte           10     6 (average)
  1280                           ;	Chosen strategy is simple_byte
  1281  0007F4  0AA8               	xorlw	168	; case 168
  1282  0007F6  B4D8               	btfsc	status,2,c
  1283  0007F8  D7EF               	goto	l3383
  1284  0007FA  0A01               	xorlw	1	; case 169
  1285  0007FC  B4D8               	btfsc	status,2,c
  1286  0007FE  D7F1               	goto	l3385
  1287  000800  0A03               	xorlw	3	; case 170
  1288  000802  B4D8               	btfsc	status,2,c
  1289  000804  D7DF               	goto	l3381
  1290  000806                     l3391:
  1291                           
  1292                           ; BSR set to: 1
  1293                           ;main.c: 366: start_i2c_slave_reply(length, msgbuffer);
  1294  000806  0101               	movlb	1	; () banked
  1295  000808  0E01               	movlw	high main@msgbuffer
  1296  00080A  0100               	movlb	0	; () banked
  1297  00080C  6FD4               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1298  00080E  0101               	movlb	1	; () banked
  1299  000810  0E19               	movlw	low main@msgbuffer
  1300  000812  0100               	movlb	0	; () banked
  1301  000814  6FD3               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1302  000816  0101               	movlb	1	; () banked
  1303  000818  5139               	movf	main@length& (0+255),w,b
  1304  00081A  EC76  F006         	call	_start_i2c_slave_reply
  1305                           
  1306                           ;main.c: 367: break;
  1307  00081E  D00E               	goto	l3397
  1308  000820                     l3395:
  1309  000820  0101               	movlb	1	; () banked
  1310  000822  5138               	movf	main@msgtype& (0+255),w,b
  1311                           
  1312                           ; Switch size 1, requested type "space"
  1313                           ; Number of cases is 4, Range of values is 10 to 42
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte           13     7 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318  000824  0A0A               	xorlw	10	; case 10
  1319  000826  B4D8               	btfsc	status,2,c
  1320  000828  D77D               	goto	l3367
  1321  00082A  0A22               	xorlw	34	; case 40
  1322  00082C  B4D8               	btfsc	status,2,c
  1323  00082E  D79C               	goto	l122
  1324  000830  0A01               	xorlw	1	; case 41
  1325  000832  B4D8               	btfsc	status,2,c
  1326  000834  D7C4               	goto	l128
  1327  000836  0A03               	xorlw	3	; case 42
  1328  000838  B4D8               	btfsc	status,2,c
  1329  00083A  D7DA               	goto	l3389
  1330  00083C                     l3397:
  1331                           
  1332                           ;main.c: 375: }
  1333                           ;main.c: 378: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1334  00083C  0101               	movlb	1	; () banked
  1335  00083E  0E01               	movlw	high main@msgtype
  1336  000840  0101               	movlb	1	; () banked
  1337  000842  6F0D               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1338  000844  0101               	movlb	1	; () banked
  1339  000846  0E38               	movlw	low main@msgtype
  1340  000848  0101               	movlb	1	; () banked
  1341  00084A  6F0C               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1342  00084C  0101               	movlb	1	; () banked
  1343  00084E  0E01               	movlw	high main@msgbuffer
  1344  000850  0101               	movlb	1	; () banked
  1345  000852  6F0F               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1346  000854  0101               	movlb	1	; () banked
  1347  000856  0E19               	movlw	low main@msgbuffer
  1348  000858  0101               	movlb	1	; () banked
  1349  00085A  6F0E               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1350  00085C  0E0A               	movlw	10
  1351  00085E  ECB9  F00C         	call	_ToMainLow_recvmsg
  1352  000862  0101               	movlb	1	; () banked
  1353  000864  6F39               	movwf	main@length& (0+255),b
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;main.c: 379: if (length < 0) {
  1357  000866  0101               	movlb	1	; () banked
  1358  000868  BF39               	btfsc	main@length& (0+255),7,b
  1359  00086A  D741               	goto	l3359
  1360  00086C  D043               	goto	l3409
  1361  00086E                     l3403:
  1362                           
  1363                           ; BSR set to: 1
  1364                           ;main.c: 387: {
  1365                           ;main.c: 388: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1366  00086E  0101               	movlb	1	; () banked
  1367  000870  0E01               	movlw	high main@t1thread_data
  1368  000872  0100               	movlb	0	; () banked
  1369  000874  6FD4               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1370  000876  0101               	movlb	1	; () banked
  1371  000878  0E3A               	movlw	low main@t1thread_data
  1372  00087A  0100               	movlb	0	; () banked
  1373  00087C  6FD3               	movwf	timer1_lthread@tptr& (0+255),b
  1374  00087E  0101               	movlb	1	; () banked
  1375  000880  0100               	movlb	0	; () banked
  1376  000882  C138  F0D5         	movff	main@msgtype,timer1_lthread@msgtype
  1377  000886  0100               	movlb	0	; () banked
  1378  000888  6BD6               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1379  00088A  0101               	movlb	1	; () banked
  1380  00088C  5139               	movf	main@length& (0+255),w,b
  1381  00088E  0100               	movlb	0	; () banked
  1382  000890  6FD7               	movwf	timer1_lthread@length& (0+255),b
  1383  000892  0100               	movlb	0	; () banked
  1384  000894  6BD8               	clrf	(timer1_lthread@length+1)& (0+255),b
  1385  000896  0100               	movlb	0	; () banked
  1386  000898  BFD7               	btfsc	timer1_lthread@length& (0+255),7,b
  1387  00089A  07D8               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1388  00089C  0101               	movlb	1	; () banked
  1389  00089E  0E01               	movlw	high main@msgbuffer
  1390  0008A0  0100               	movlb	0	; () banked
  1391  0008A2  6FDA               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1392  0008A4  0101               	movlb	1	; () banked
  1393  0008A6  0E19               	movlw	low main@msgbuffer
  1394  0008A8  0100               	movlb	0	; () banked
  1395  0008AA  6FD9               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1396  0008AC  EC70  F007         	call	_timer1_lthread	;wreg free
  1397                           
  1398                           ;main.c: 389: break;
  1399  0008B0  D71E               	goto	l3359
  1400  0008B2                     l3405:
  1401                           
  1402                           ;main.c: 392: case 31:
  1403                           ;main.c: 393: case 32:
  1404                           ;main.c: 394: {
  1405                           ;main.c: 395: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1406  0008B2  0101               	movlb	1	; () banked
  1407  0008B4  0E01               	movlw	high main@uthread_data
  1408  0008B6  0101               	movlb	1	; () banked
  1409  0008B8  6F0D               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1410  0008BA  0101               	movlb	1	; () banked
  1411  0008BC  0E27               	movlw	low main@uthread_data
  1412  0008BE  0101               	movlb	1	; () banked
  1413  0008C0  6F0C               	movwf	uart_lthread@uptr& (0+255),b
  1414  0008C2  0101               	movlb	1	; () banked
  1415  0008C4  C138  F10E         	movff	main@msgtype,uart_lthread@msgtype
  1416  0008C8  0101               	movlb	1	; () banked
  1417  0008CA  6B0F               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1418  0008CC  0101               	movlb	1	; () banked
  1419  0008CE  5139               	movf	main@length& (0+255),w,b
  1420  0008D0  0101               	movlb	1	; () banked
  1421  0008D2  6F10               	movwf	uart_lthread@length& (0+255),b
  1422  0008D4  0101               	movlb	1	; () banked
  1423  0008D6  6B11               	clrf	(uart_lthread@length+1)& (0+255),b
  1424  0008D8  0101               	movlb	1	; () banked
  1425  0008DA  BF10               	btfsc	uart_lthread@length& (0+255),7,b
  1426  0008DC  0711               	decf	(uart_lthread@length+1)& (0+255),f,b
  1427  0008DE  0101               	movlb	1	; () banked
  1428  0008E0  0E01               	movlw	high main@msgbuffer
  1429  0008E2  0101               	movlb	1	; () banked
  1430  0008E4  6F13               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1431  0008E6  0101               	movlb	1	; () banked
  1432  0008E8  0E19               	movlw	low main@msgbuffer
  1433  0008EA  0101               	movlb	1	; () banked
  1434  0008EC  6F12               	movwf	uart_lthread@msgbuffer& (0+255),b
  1435  0008EE  EC0F  F009         	call	_uart_lthread	;wreg free
  1436                           
  1437                           ;main.c: 396: break;
  1438  0008F2  D6FD               	goto	l3359
  1439  0008F4                     l3409:
  1440  0008F4  0101               	movlb	1	; () banked
  1441  0008F6  5138               	movf	main@msgtype& (0+255),w,b
  1442                           
  1443                           ; Switch size 1, requested type "space"
  1444                           ; Number of cases is 4, Range of values is 11 to 32
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte           13     7 (average)
  1448                           ;	Chosen strategy is simple_byte
  1449  0008F8  0A0B               	xorlw	11	; case 11
  1450  0008FA  B4D8               	btfsc	status,2,c
  1451  0008FC  D7B8               	goto	l3403
  1452  0008FE  0A15               	xorlw	21	; case 30
  1453  000900  B4D8               	btfsc	status,2,c
  1454  000902  D7D7               	goto	l3405
  1455  000904  0A01               	xorlw	1	; case 31
  1456  000906  B4D8               	btfsc	status,2,c
  1457  000908  D7D4               	goto	l3405
  1458  00090A  0A3F               	xorlw	63	; case 32
  1459  00090C  B4D8               	btfsc	status,2,c
  1460  00090E  D7D1               	goto	l3405
  1461  000910  D6EE               	goto	l3359
  1462  000912                     __end_of_main:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _uart_lthread *****************
  1470 ;; Defined at:
  1471 ;;		line 12 in file "src/uart_thread.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  uptr            2   12[BANK1 ] PTR struct __uart_thread
  1474 ;;		 -> main@uthread_data(10), 
  1475 ;;  msgtype         2   14[BANK1 ] int 
  1476 ;;  length          2   16[BANK1 ] int 
  1477 ;;  msgbuffer       2   18[BANK1 ] PTR unsigned char 
  1478 ;;		 -> main@msgbuffer(11), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  index           2   21[BANK1 ] int 
  1481 ;;  status          1   20[BANK1 ] char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2   12[BANK1 ] int 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1491 ;;      Params:         0       0       8       0       0
  1492 ;;      Locals:         0       0       3       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       0      11       0       0
  1495 ;;Total ram usage:       11 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:   14
  1498 ;; This function calls:
  1499 ;;		_FromMainLow_sendmsg
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text1
  1506  00121E                     __ptext1:
  1507                           	opt stack 0
  1508  00121E                     _uart_lthread:
  1509                           	opt stack 16
  1510                           
  1511                           ;uart_thread.c: 13: if (msgtype == 30) {
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;incstack = 0
  1515  00121E  0101               	movlb	1	; () banked
  1516  001220  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1517  001222  0A1E               	xorlw	30
  1518  001224  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1519  001226  B4D8               	btfsc	status,2,c
  1520  001228  0012               	return	
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;uart_thread.c: 16: else if(msgtype == 31){
  1524                           
  1525                           ; BSR set to: 1
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;uart_thread.c: 15: }
  1529  00122A  0101               	movlb	1	; () banked
  1530  00122C  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1531  00122E  0A1F               	xorlw	31
  1532  001230  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1533  001232  A4D8               	btfss	status,2,c
  1534  001234  D041               	goto	l3295
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;uart_thread.c: 18: int index = 0;
  1538  001236  0E00               	movlw	0
  1539  001238  0101               	movlb	1	; () banked
  1540  00123A  6F16               	movwf	(uart_lthread@index+1)& (0+255),b
  1541  00123C  0E00               	movlw	0
  1542  00123E  0101               	movlb	1	; () banked
  1543  001240  6F15               	movwf	uart_lthread@index& (0+255),b
  1544                           
  1545                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1546  001242  0E00               	movlw	0
  1547  001244  0101               	movlb	1	; () banked
  1548  001246  6F16               	movwf	(uart_lthread@index+1)& (0+255),b
  1549  001248  0E00               	movlw	0
  1550  00124A  0101               	movlb	1	; () banked
  1551  00124C  6F15               	movwf	uart_lthread@index& (0+255),b
  1552  00124E                     
  1553                           ; BSR set to: 1
  1554  00124E  0101               	movlb	1	; () banked
  1555  001250  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1556  001252  0A80               	xorlw	128
  1557  001254  0F80               	addlw	-128
  1558  001256  0E0A               	movlw	10
  1559  001258  B4D8               	btfsc	status,2,c
  1560  00125A  5D15               	subwf	uart_lthread@index& (0+255),w,b
  1561  00125C  B0D8               	btfsc	status,0,c
  1562  00125E  D01A               	goto	l3291
  1563                           
  1564                           ; BSR set to: 1
  1565                           
  1566                           ; BSR set to: 1
  1567                           
  1568                           ; BSR set to: 1
  1569  001260  0101               	movlb	1	; () banked
  1570  001262  5115               	movf	uart_lthread@index& (0+255),w,b
  1571  001264  0101               	movlb	1	; () banked
  1572  001266  2512               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1573  001268  6ED9               	movwf	fsr2l,c
  1574  00126A  0101               	movlb	1	; () banked
  1575  00126C  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1576  00126E  0101               	movlb	1	; () banked
  1577  001270  2113               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1578  001272  6EDA               	movwf	fsr2h,c
  1579  001274  0101               	movlb	1	; () banked
  1580  001276  5115               	movf	uart_lthread@index& (0+255),w,b
  1581  001278  0101               	movlb	1	; () banked
  1582  00127A  250C               	addwf	uart_lthread@uptr& (0+255),w,b
  1583  00127C  6EE1               	movwf	fsr1l,c
  1584  00127E  0101               	movlb	1	; () banked
  1585  001280  5116               	movf	(uart_lthread@index+1)& (0+255),w,b
  1586  001282  0101               	movlb	1	; () banked
  1587  001284  210D               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1588  001286  6EE2               	movwf	fsr1h,c
  1589  001288  CFDF FFE7          	movff	indf2,indf1
  1590                           
  1591                           ; BSR set to: 1
  1592  00128C  0101               	movlb	1	; () banked
  1593  00128E  4B15               	infsnz	uart_lthread@index& (0+255),f,b
  1594  001290  2B16               	incf	(uart_lthread@index+1)& (0+255),f,b
  1595  001292  D7DD               	goto	L4
  1596  001294                     l3291:
  1597                           
  1598                           ; BSR set to: 1
  1599                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1600  001294  C10E  F0DE         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1601  001298  0101               	movlb	1	; () banked
  1602  00129A  0100               	movlb	0	; () banked
  1603  00129C  C10D  F0E0         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1604  0012A0  0101               	movlb	1	; () banked
  1605  0012A2  0100               	movlb	0	; () banked
  1606  0012A4  C10C  F0DF         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1607  0012A8  0101               	movlb	1	; () banked
  1608  0012AA  5110               	movf	uart_lthread@length& (0+255),w,b
  1609  0012AC  EC08  F00D         	call	_FromMainLow_sendmsg
  1610  0012B0  0101               	movlb	1	; () banked
  1611  0012B2  6F14               	movwf	uart_lthread@status& (0+255),b
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;uart_thread.c: 25: }
  1615                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1616                           
  1617                           ; BSR set to: 1
  1618  0012B4  889D               	bsf	3997,4,c	;volatile
  1619                           
  1620                           ;uart_thread.c: 29: }
  1621  0012B6  0012               	return	
  1622  0012B8                     l3295:
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;uart_thread.c: 30: else if(msgtype == 32){
  1626  0012B8  0101               	movlb	1	; () banked
  1627  0012BA  510E               	movf	uart_lthread@msgtype& (0+255),w,b
  1628  0012BC  0A20               	xorlw	32
  1629  0012BE  110F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1630  0012C0  A4D8               	btfss	status,2,c
  1631  0012C2  0012               	return	
  1632                           
  1633                           ; BSR set to: 1
  1634                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1635  0012C4  0101               	movlb	1	; () banked
  1636  0012C6  5110               	movf	uart_lthread@length& (0+255),w,b
  1637  0012C8  0101               	movlb	1	; () banked
  1638  0012CA  2512               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1639  0012CC  6ED9               	movwf	fsr2l,c
  1640  0012CE  0101               	movlb	1	; () banked
  1641  0012D0  5111               	movf	(uart_lthread@length+1)& (0+255),w,b
  1642  0012D2  0101               	movlb	1	; () banked
  1643  0012D4  2113               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1644  0012D6  6EDA               	movwf	fsr2h,c
  1645  0012D8  0E00               	movlw	0
  1646  0012DA  6EDF               	movwf	indf2,c
  1647  0012DC  0012               	return	
  1648  0012DE                     __end_of_uart_lthread:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           indf1	equ	0xFE7
  1654                           fsr1h	equ	0xFE2
  1655                           fsr1l	equ	0xFE1
  1656                           indf2	equ	0xFDF
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _FromMainLow_sendmsg *****************
  1662 ;; Defined at:
  1663 ;;		line 150 in file "src/messages.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  length          1    wreg     unsigned char 
  1666 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1667 ;;  data            2   41[BANK0 ] PTR void 
  1668 ;;		 -> main@uthread_data(10), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  length          1   11[BANK1 ] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      char 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1680 ;;      Params:         0       3       0       0       0
  1681 ;;      Locals:         0       0       1       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         0       3       1       0       0
  1684 ;;Total ram usage:        4 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:   13
  1687 ;; This function calls:
  1688 ;;		_send_msg
  1689 ;; This function is called by:
  1690 ;;		_uart_lthread
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text2
  1695  001A10                     __ptext2:
  1696                           	opt stack 0
  1697  001A10                     _FromMainLow_sendmsg:
  1698                           	opt stack 16
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;incstack = 0
  1702                           ;FromMainLow_sendmsg@length stored from wreg
  1703  001A10  0101               	movlb	1	; () banked
  1704  001A12  6F0B               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1705                           
  1706                           ; BSR set to: 1
  1707                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1708  001A14  0101               	movlb	1	; () banked
  1709  001A16  0E01               	movlw	high _FromMainLow_MQ
  1710  001A18  0101               	movlb	1	; () banked
  1711  001A1A  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  1712  001A1C  0101               	movlb	1	; () banked
  1713  001A1E  0E7E               	movlw	low _FromMainLow_MQ
  1714  001A20  0101               	movlb	1	; () banked
  1715  001A22  6F00               	movwf	send_msg@qptr& (0+255),b
  1716  001A24  C10B  F102         	movff	FromMainLow_sendmsg@length,send_msg@length
  1717  001A28  C0DE  F103         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1718  001A2C  0100               	movlb	0	; () banked
  1719  001A2E  0101               	movlb	1	; () banked
  1720  001A30  C0E0  F105         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1721  001A34  0100               	movlb	0	; () banked
  1722  001A36  0101               	movlb	1	; () banked
  1723  001A38  C0DF  F104         	movff	FromMainLow_sendmsg@data,send_msg@data
  1724  001A3C  ECF8  F006         	call	_send_msg	;wreg free
  1725  001A40  0012               	return	
  1726  001A42                     __end_of_FromMainLow_sendmsg:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           indf1	equ	0xFE7
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _timer1_lthread *****************
  1740 ;; Defined at:
  1741 ;;		line 22 in file "src/timer1_thread.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  1744 ;;		 -> main@t1thread_data(40), 
  1745 ;;  msgtype         2   31[BANK0 ] int 
  1746 ;;  length          2   33[BANK0 ] int 
  1747 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  1748 ;;		 -> main@msgbuffer(11), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  index           1   41[BANK0 ] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   29[BANK0 ] int 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1760 ;;      Params:         0       8       0       0       0
  1761 ;;      Locals:         0       1       0       0       0
  1762 ;;      Temps:          0       4       0       0       0
  1763 ;;      Totals:         0      13       0       0       0
  1764 ;;Total ram usage:       13 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:   11
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text3
  1775  000EE0                     __ptext3:
  1776                           	opt stack 0
  1777  000EE0                     _timer1_lthread:
  1778                           	opt stack 19
  1779                           
  1780                           ;timer1_thread.c: 23: tptr->msgcount++;
  1781                           
  1782                           ;incstack = 0
  1783  000EE0  C0D3  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1784  000EE4  C0D4  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1785  000EE8  2ADE               	incf	postinc2,f,c
  1786  000EEA  0E00               	movlw	0
  1787  000EEC  22DD               	addwfc	postdec2,f,c
  1788                           
  1789                           ;timer1_thread.c: 24: char index = msgbuffer[0] + (msgbuffer[1]<<1) + (tptr->prevPos[0]<
      +                          <3) + (tptr->prevPos[1]<<2);
  1790  000EEE  C0D9  FFD9         	movff	timer1_lthread@msgbuffer,fsr2l
  1791  000EF2  C0DA  FFDA         	movff	timer1_lthread@msgbuffer+1,fsr2h
  1792  000EF6  50DF               	movf	indf2,w,c
  1793  000EF8  0100               	movlb	0	; () banked
  1794  000EFA  6FDB               	movwf	??_timer1_lthread& (0+255),b
  1795  000EFC  0100               	movlb	0	; () banked
  1796  000EFE  EE20 F025          	lfsr	2,37
  1797  000F02  0100               	movlb	0	; () banked
  1798  000F04  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1799  000F06  26D9               	addwf	fsr2l,f,c
  1800  000F08  0100               	movlb	0	; () banked
  1801  000F0A  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1802  000F0C  22DA               	addwfc	fsr2h,f,c
  1803  000F0E  50DF               	movf	indf2,w,c
  1804  000F10  0100               	movlb	0	; () banked
  1805  000F12  6FDC               	movwf	(??_timer1_lthread+1)& (0+255),b
  1806  000F14  0100               	movlb	0	; () banked
  1807  000F16  90D8               	bcf	status,0,c
  1808  000F18  37DC               	rlcf	(??_timer1_lthread+1)& (0+255),f,b
  1809  000F1A  0100               	movlb	0	; () banked
  1810  000F1C  90D8               	bcf	status,0,c
  1811  000F1E  37DC               	rlcf	(??_timer1_lthread+1)& (0+255),f,b
  1812  000F20  0100               	movlb	0	; () banked
  1813  000F22  EE20 F024          	lfsr	2,36
  1814  000F26  0100               	movlb	0	; () banked
  1815  000F28  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1816  000F2A  26D9               	addwf	fsr2l,f,c
  1817  000F2C  0100               	movlb	0	; () banked
  1818  000F2E  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1819  000F30  22DA               	addwfc	fsr2h,f,c
  1820  000F32  50DF               	movf	indf2,w,c
  1821  000F34  0100               	movlb	0	; () banked
  1822  000F36  6FDD               	movwf	(??_timer1_lthread+2)& (0+255),b
  1823  000F38  0100               	movlb	0	; () banked
  1824  000F3A  90D8               	bcf	status,0,c
  1825  000F3C  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1826  000F3E  0100               	movlb	0	; () banked
  1827  000F40  90D8               	bcf	status,0,c
  1828  000F42  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1829  000F44  0100               	movlb	0	; () banked
  1830  000F46  90D8               	bcf	status,0,c
  1831  000F48  37DD               	rlcf	(??_timer1_lthread+2)& (0+255),f,b
  1832  000F4A  0100               	movlb	0	; () banked
  1833  000F4C  EE20 F001          	lfsr	2,1
  1834  000F50  0100               	movlb	0	; () banked
  1835  000F52  51D9               	movf	timer1_lthread@msgbuffer& (0+255),w,b
  1836  000F54  26D9               	addwf	fsr2l,f,c
  1837  000F56  0100               	movlb	0	; () banked
  1838  000F58  51DA               	movf	(timer1_lthread@msgbuffer+1)& (0+255),w,b
  1839  000F5A  22DA               	addwfc	fsr2h,f,c
  1840  000F5C  50DF               	movf	indf2,w,c
  1841  000F5E  0100               	movlb	0	; () banked
  1842  000F60  6FDE               	movwf	(??_timer1_lthread+3)& (0+255),b
  1843  000F62  0100               	movlb	0	; () banked
  1844  000F64  90D8               	bcf	status,0,c
  1845  000F66  35DE               	rlcf	(??_timer1_lthread+3)& (0+255),w,b
  1846  000F68  0100               	movlb	0	; () banked
  1847  000F6A  25DD               	addwf	(??_timer1_lthread+2)& (0+255),w,b
  1848  000F6C  0100               	movlb	0	; () banked
  1849  000F6E  25DC               	addwf	(??_timer1_lthread+1)& (0+255),w,b
  1850  000F70  0100               	movlb	0	; () banked
  1851  000F72  25DB               	addwf	??_timer1_lthread& (0+255),w,b
  1852  000F74  0100               	movlb	0	; () banked
  1853  000F76  6FDF               	movwf	timer1_lthread@index& (0+255),b
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;timer1_thread.c: 28: tptr->prevPos[0] = msgbuffer[0];
  1857  000F78  C0D9  FFD9         	movff	timer1_lthread@msgbuffer,fsr2l
  1858  000F7C  C0DA  FFDA         	movff	timer1_lthread@msgbuffer+1,fsr2h
  1859  000F80  0100               	movlb	0	; () banked
  1860  000F82  EE10 F024          	lfsr	1,36
  1861  000F86  0100               	movlb	0	; () banked
  1862  000F88  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1863  000F8A  26E1               	addwf	fsr1l,f,c
  1864  000F8C  0100               	movlb	0	; () banked
  1865  000F8E  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1866  000F90  22E2               	addwfc	fsr1h,f,c
  1867  000F92  CFDF FFE7          	movff	indf2,indf1
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;timer1_thread.c: 29: tptr->prevPos[1] = msgbuffer[1];
  1871  000F96  0100               	movlb	0	; () banked
  1872  000F98  EE20 F001          	lfsr	2,1
  1873  000F9C  0100               	movlb	0	; () banked
  1874  000F9E  51D9               	movf	timer1_lthread@msgbuffer& (0+255),w,b
  1875  000FA0  26D9               	addwf	fsr2l,f,c
  1876  000FA2  0100               	movlb	0	; () banked
  1877  000FA4  51DA               	movf	(timer1_lthread@msgbuffer+1)& (0+255),w,b
  1878  000FA6  22DA               	addwfc	fsr2h,f,c
  1879  000FA8  0100               	movlb	0	; () banked
  1880  000FAA  EE10 F025          	lfsr	1,37
  1881  000FAE  0100               	movlb	0	; () banked
  1882  000FB0  51D3               	movf	timer1_lthread@tptr& (0+255),w,b
  1883  000FB2  26E1               	addwf	fsr1l,f,c
  1884  000FB4  0100               	movlb	0	; () banked
  1885  000FB6  51D4               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1886  000FB8  22E2               	addwfc	fsr1h,f,c
  1887  000FBA  CFDF FFE7          	movff	indf2,indf1
  1888                           
  1889                           ; BSR set to: 0
  1890  000FBE  0012               	return	
  1891  000FC0                     __end_of_timer1_lthread:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           indf1	equ	0xFE7
  1897                           fsr1h	equ	0xFE2
  1898                           fsr1l	equ	0xFE1
  1899                           indf2	equ	0xFDF
  1900                           postinc2	equ	0xFDE
  1901                           postdec2	equ	0xFDD
  1902                           fsr2h	equ	0xFDA
  1903                           fsr2l	equ	0xFD9
  1904                           status	equ	0xFD8
  1905                           
  1906 ;; *************** function _timer0_lthread *****************
  1907 ;; Defined at:
  1908 ;;		line 9 in file "src/timer0_thread.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  1911 ;;		 -> main@t0thread_data(2), 
  1912 ;;  msgtype         2   31[BANK0 ] int 
  1913 ;;  length          2   33[BANK0 ] int 
  1914 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  1915 ;;		 -> main@msgbuffer(11), 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  msgval          2   37[BANK0 ] PTR unsigned int 
  1918 ;;		 -> main@msgbuffer(11), 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2   29[BANK0 ] int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1928 ;;      Params:         0       8       0       0       0
  1929 ;;      Locals:         0       2       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0      10       0       0       0
  1932 ;;Total ram usage:       10 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:   11
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text4
  1943  001C92                     __ptext4:
  1944                           	opt stack 0
  1945  001C92                     _timer0_lthread:
  1946                           	opt stack 19
  1947                           
  1948                           ;timer0_thread.c: 10: unsigned int *msgval;
  1949                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;incstack = 0
  1953  001C92  0100               	movlb	0	; () banked
  1954  001C94  C0DA  F0DC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1955  001C98  0100               	movlb	0	; () banked
  1956  001C9A  C0D9  F0DB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1957                           
  1958                           ; BSR set to: 0
  1959  001C9E  0012               	return	
  1960  001CA0                     __end_of_timer0_lthread:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           indf1	equ	0xFE7
  1966                           fsr1h	equ	0xFE2
  1967                           fsr1l	equ	0xFE1
  1968                           indf2	equ	0xFDF
  1969                           postinc2	equ	0xFDE
  1970                           postdec2	equ	0xFDD
  1971                           fsr2h	equ	0xFDA
  1972                           fsr2l	equ	0xFD9
  1973                           status	equ	0xFD8
  1974                           
  1975 ;; *************** function _start_i2c_slave_reply *****************
  1976 ;; Defined at:
  1977 ;;		line 53 in file "src/my_i2c.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  length          1    wreg     unsigned char 
  1980 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  1981 ;;		 -> main@msgbuffer(11), 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  length          1   33[BANK0 ] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;		None               void
  1986 ;; Registers used:
  1987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1993 ;;      Params:         0       2       0       0       0
  1994 ;;      Locals:         0       1       0       0       0
  1995 ;;      Temps:          0       2       0       0       0
  1996 ;;      Totals:         0       5       0       0       0
  1997 ;;Total ram usage:        5 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:   11
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text5
  2008  000CEC                     __ptext5:
  2009                           	opt stack 0
  2010  000CEC                     _start_i2c_slave_reply:
  2011                           	opt stack 19
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;incstack = 0
  2015                           ;start_i2c_slave_reply@length stored from wreg
  2016  000CEC  0100               	movlb	0	; () banked
  2017  000CEE  6FD7               	movwf	start_i2c_slave_reply@length& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2021  000CF0  0100               	movlb	0	; () banked
  2022  000CF2  EE20 F019          	lfsr	2,25
  2023  000CF6  0100               	movlb	0	; () banked
  2024  000CF8  51E1               	movf	_ic_ptr& (0+255),w,b
  2025  000CFA  26D9               	addwf	fsr2l,f,c
  2026  000CFC  0100               	movlb	0	; () banked
  2027  000CFE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2028  000D00  22DA               	addwfc	fsr2h,f,c
  2029  000D02  0E00               	movlw	0
  2030  000D04  6EDF               	movwf	indf2,c
  2031  000D06  D03E               	goto	l2821
  2032  000D08                     l2817:
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2036  000D08  0100               	movlb	0	; () banked
  2037  000D0A  EE20 F019          	lfsr	2,25
  2038  000D0E  0100               	movlb	0	; () banked
  2039  000D10  51E1               	movf	_ic_ptr& (0+255),w,b
  2040  000D12  26D9               	addwf	fsr2l,f,c
  2041  000D14  0100               	movlb	0	; () banked
  2042  000D16  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2043  000D18  22DA               	addwfc	fsr2h,f,c
  2044  000D1A  50DF               	movf	indf2,w,c
  2045  000D1C  0100               	movlb	0	; () banked
  2046  000D1E  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2047  000D20  0100               	movlb	0	; () banked
  2048  000D22  51D5               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2049  000D24  0D01               	mullw	1
  2050  000D26  50F3               	movf	prodl,w,c
  2051  000D28  0100               	movlb	0	; () banked
  2052  000D2A  25D3               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2053  000D2C  6ED9               	movwf	fsr2l,c
  2054  000D2E  50F4               	movf	prodh,w,c
  2055  000D30  0100               	movlb	0	; () banked
  2056  000D32  21D4               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2057  000D34  6EDA               	movwf	fsr2h,c
  2058  000D36  0100               	movlb	0	; () banked
  2059  000D38  EE10 F019          	lfsr	1,25
  2060  000D3C  0100               	movlb	0	; () banked
  2061  000D3E  51E1               	movf	_ic_ptr& (0+255),w,b
  2062  000D40  26E1               	addwf	fsr1l,f,c
  2063  000D42  0100               	movlb	0	; () banked
  2064  000D44  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2065  000D46  22E2               	addwfc	fsr1h,f,c
  2066  000D48  50E7               	movf	indf1,w,c
  2067  000D4A  0100               	movlb	0	; () banked
  2068  000D4C  6FD6               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2069  000D4E  0100               	movlb	0	; () banked
  2070  000D50  51D6               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2071  000D52  0D01               	mullw	1
  2072  000D54  0E0F               	movlw	15
  2073  000D56  26F3               	addwf	prodl,f,c
  2074  000D58  0E00               	movlw	0
  2075  000D5A  22F4               	addwfc	prodh,f,c
  2076  000D5C  50F3               	movf	prodl,w,c
  2077  000D5E  0100               	movlb	0	; () banked
  2078  000D60  25E1               	addwf	_ic_ptr& (0+255),w,b
  2079  000D62  6EE1               	movwf	fsr1l,c
  2080  000D64  50F4               	movf	prodh,w,c
  2081  000D66  0100               	movlb	0	; () banked
  2082  000D68  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2083  000D6A  6EE2               	movwf	fsr1h,c
  2084  000D6C  CFDF FFE7          	movff	indf2,indf1
  2085                           
  2086                           ; BSR set to: 0
  2087  000D70  0100               	movlb	0	; () banked
  2088  000D72  EE20 F019          	lfsr	2,25
  2089  000D76  0100               	movlb	0	; () banked
  2090  000D78  51E1               	movf	_ic_ptr& (0+255),w,b
  2091  000D7A  26D9               	addwf	fsr2l,f,c
  2092  000D7C  0100               	movlb	0	; () banked
  2093  000D7E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2094  000D80  22DA               	addwfc	fsr2h,f,c
  2095  000D82  2ADF               	incf	indf2,f,c
  2096  000D84                     l2821:
  2097                           
  2098                           ; BSR set to: 0
  2099  000D84  0100               	movlb	0	; () banked
  2100  000D86  EE20 F019          	lfsr	2,25
  2101  000D8A  0100               	movlb	0	; () banked
  2102  000D8C  51E1               	movf	_ic_ptr& (0+255),w,b
  2103  000D8E  26D9               	addwf	fsr2l,f,c
  2104  000D90  0100               	movlb	0	; () banked
  2105  000D92  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2106  000D94  22DA               	addwfc	fsr2h,f,c
  2107  000D96  50DF               	movf	indf2,w,c
  2108  000D98  0100               	movlb	0	; () banked
  2109  000D9A  6FD5               	movwf	??_start_i2c_slave_reply& (0+255),b
  2110  000D9C  0100               	movlb	0	; () banked
  2111  000D9E  51D7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2112  000DA0  0100               	movlb	0	; () banked
  2113  000DA2  5DD5               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2114  000DA4  A0D8               	btfss	status,0,c
  2115  000DA6  D7B0               	goto	l2817
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;my_i2c.c: 57: }
  2119                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2120                           
  2121                           ; BSR set to: 0
  2122  000DA8  0100               	movlb	0	; () banked
  2123  000DAA  EE20 F019          	lfsr	2,25
  2124  000DAE  0100               	movlb	0	; () banked
  2125  000DB0  51E1               	movf	_ic_ptr& (0+255),w,b
  2126  000DB2  26D9               	addwf	fsr2l,f,c
  2127  000DB4  0100               	movlb	0	; () banked
  2128  000DB6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2129  000DB8  22DA               	addwfc	fsr2h,f,c
  2130  000DBA  0100               	movlb	0	; () banked
  2131  000DBC  C0D7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2132                           
  2133                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2134  000DC0  0100               	movlb	0	; () banked
  2135  000DC2  EE20 F01A          	lfsr	2,26
  2136  000DC6  0100               	movlb	0	; () banked
  2137  000DC8  51E1               	movf	_ic_ptr& (0+255),w,b
  2138  000DCA  26D9               	addwf	fsr2l,f,c
  2139  000DCC  0100               	movlb	0	; () banked
  2140  000DCE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2141  000DD0  22DA               	addwfc	fsr2h,f,c
  2142  000DD2  0E01               	movlw	1
  2143  000DD4  6EDF               	movwf	indf2,c
  2144                           
  2145                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2146  000DD6  0100               	movlb	0	; () banked
  2147  000DD8  EE20 F00F          	lfsr	2,15
  2148  000DDC  0100               	movlb	0	; () banked
  2149  000DDE  51E1               	movf	_ic_ptr& (0+255),w,b
  2150  000DE0  26D9               	addwf	fsr2l,f,c
  2151  000DE2  0100               	movlb	0	; () banked
  2152  000DE4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2153  000DE6  22DA               	addwfc	fsr2h,f,c
  2154  000DE8  50DF               	movf	indf2,w,c
  2155  000DEA  6EC9               	movwf	4041,c	;volatile
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2159  000DEC  88C6               	bsf	4038,4,c	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162  000DEE  0012               	return	
  2163  000DF0                     __end_of_start_i2c_slave_reply:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           prodh	equ	0xFF4
  2167                           prodl	equ	0xFF3
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           indf1	equ	0xFE7
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           indf2	equ	0xFDF
  2174                           postinc2	equ	0xFDE
  2175                           postdec2	equ	0xFDD
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _sendUARTarr *****************
  2181 ;; Defined at:
  2182 ;;		line 85 in file "src/my_uart.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  length          1    wreg     unsigned char 
  2185 ;;  data            2   12[BANK1 ] PTR unsigned char 
  2186 ;;		 -> main@ctrl(2), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  length          1   15[BANK1 ] unsigned char 
  2189 ;;  retval          1   14[BANK1 ] char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      enum E4333
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2199 ;;      Params:         0       0       2       0       0
  2200 ;;      Locals:         0       0       2       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       4       0       0
  2203 ;;Total ram usage:        4 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   14
  2206 ;; This function calls:
  2207 ;;		_ToMainLow_sendmsg
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text6
  2214  001A42                     __ptext6:
  2215                           	opt stack 0
  2216  001A42                     _sendUARTarr:
  2217                           	opt stack 16
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;incstack = 0
  2221                           ;sendUARTarr@length stored from wreg
  2222  001A42  0101               	movlb	1	; () banked
  2223  001A44  6F0F               	movwf	sendUARTarr@length& (0+255),b
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;my_uart.c: 86: if(length > 10){
  2227  001A46  0E0A               	movlw	10
  2228  001A48  0101               	movlb	1	; () banked
  2229  001A4A  650F               	cpfsgt	sendUARTarr@length& (0+255),b
  2230  001A4C  D001               	goto	l3263
  2231  001A4E  0012               	return	
  2232  001A50                     l3263:
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;my_uart.c: 89: }
  2236                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2237  001A50  0E1F               	movlw	31
  2238  001A52  0100               	movlb	0	; () banked
  2239  001A54  6FDE               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2240  001A56  0101               	movlb	1	; () banked
  2241  001A58  0100               	movlb	0	; () banked
  2242  001A5A  C10D  F0E0         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  2243  001A5E  0101               	movlb	1	; () banked
  2244  001A60  0100               	movlb	0	; () banked
  2245  001A62  C10C  F0DF         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  2246  001A66  0101               	movlb	1	; () banked
  2247  001A68  510F               	movf	sendUARTarr@length& (0+255),w,b
  2248  001A6A  EC3A  F00D         	call	_ToMainLow_sendmsg
  2249  001A6E  0101               	movlb	1	; () banked
  2250  001A70  6F0E               	movwf	sendUARTarr@retval& (0+255),b
  2251  001A72  0012               	return	
  2252  001A74                     __end_of_sendUARTarr:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           prodh	equ	0xFF4
  2256                           prodl	equ	0xFF3
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           indf1	equ	0xFE7
  2260                           fsr1h	equ	0xFE2
  2261                           fsr1l	equ	0xFE1
  2262                           indf2	equ	0xFDF
  2263                           postinc2	equ	0xFDE
  2264                           postdec2	equ	0xFDD
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _ToMainLow_sendmsg *****************
  2270 ;; Defined at:
  2271 ;;		line 103 in file "src/messages.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  length          1    wreg     unsigned char 
  2274 ;;  msgtype         1   40[BANK0 ] unsigned char 
  2275 ;;  data            2   41[BANK0 ] PTR void 
  2276 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), main@ctrl(2), 
  2277 ;;		 -> main@uc(5), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  length          1   11[BANK1 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      char 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2289 ;;      Params:         0       3       0       0       0
  2290 ;;      Locals:         0       0       1       0       0
  2291 ;;      Temps:          0       0       0       0       0
  2292 ;;      Totals:         0       3       1       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:   13
  2296 ;; This function calls:
  2297 ;;		_send_msg
  2298 ;; This function is called by:
  2299 ;;		_sendUARTarr
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text7
  2304  001A74                     __ptext7:
  2305                           	opt stack 0
  2306  001A74                     _ToMainLow_sendmsg:
  2307                           	opt stack 16
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;incstack = 0
  2311                           ;ToMainLow_sendmsg@length stored from wreg
  2312  001A74  0101               	movlb	1	; () banked
  2313  001A76  6F0B               	movwf	ToMainLow_sendmsg@length& (0+255),b
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2317  001A78  0100               	movlb	0	; () banked
  2318  001A7A  0E00               	movlw	high _ToMainLow_MQ
  2319  001A7C  0101               	movlb	1	; () banked
  2320  001A7E  6F01               	movwf	(send_msg@qptr+1)& (0+255),b
  2321  001A80  0100               	movlb	0	; () banked
  2322  001A82  0E80               	movlw	low _ToMainLow_MQ
  2323  001A84  0101               	movlb	1	; () banked
  2324  001A86  6F00               	movwf	send_msg@qptr& (0+255),b
  2325  001A88  C10B  F102         	movff	ToMainLow_sendmsg@length,send_msg@length
  2326  001A8C  C0DE  F103         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2327  001A90  0100               	movlb	0	; () banked
  2328  001A92  0101               	movlb	1	; () banked
  2329  001A94  C0E0  F105         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2330  001A98  0100               	movlb	0	; () banked
  2331  001A9A  0101               	movlb	1	; () banked
  2332  001A9C  C0DF  F104         	movff	ToMainLow_sendmsg@data,send_msg@data
  2333  001AA0  ECF8  F006         	call	_send_msg	;wreg free
  2334  001AA4  0012               	return	
  2335  001AA6                     __end_of_ToMainLow_sendmsg:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           prodh	equ	0xFF4
  2339                           prodl	equ	0xFF3
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           indf1	equ	0xFE7
  2343                           fsr1h	equ	0xFE2
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           postinc2	equ	0xFDE
  2347                           postdec2	equ	0xFDD
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352 ;; *************** function _send_msg *****************
  2353 ;; Defined at:
  2354 ;;		line 24 in file "src/messages.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2357 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2358 ;;  length          1    2[BANK1 ] unsigned char 
  2359 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2360 ;;  data            2    4[BANK1 ] PTR void 
  2361 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  2362 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2365 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2366 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2367 ;;  tlength         2    6[BANK1 ] unsigned int 
  2368 ;;  slot            1    8[BANK1 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      char 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2378 ;;      Params:         0       0       6       0       0
  2379 ;;      Locals:         0       0       5       0       0
  2380 ;;      Temps:          0       1       0       0       0
  2381 ;;      Totals:         0       1      11       0       0
  2382 ;;Total ram usage:       12 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:   12
  2385 ;; This function calls:
  2386 ;;		_memcpy
  2387 ;; This function is called by:
  2388 ;;		_ToMainLow_sendmsg
  2389 ;;		_FromMainLow_sendmsg
  2390 ;;		_FromMainHigh_sendmsg
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text8
  2395  000DF0                     __ptext8:
  2396                           	opt stack 0
  2397  000DF0                     _send_msg:
  2398                           	opt stack 16
  2399                           
  2400                           ;messages.c: 25: unsigned char slot;
  2401                           ;messages.c: 27: msg *qmsg;
  2402                           ;messages.c: 28: size_t tlength = length;
  2403                           
  2404                           ;incstack = 0
  2405  000DF0  0101               	movlb	1	; () banked
  2406  000DF2  C102  F106         	movff	send_msg@length,send_msg@tlength
  2407  000DF6  0101               	movlb	1	; () banked
  2408  000DF8  6B07               	clrf	(send_msg@tlength+1)& (0+255),b
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2412  000DFA  0101               	movlb	1	; () banked
  2413  000DFC  EE20 F034          	lfsr	2,52
  2414  000E00  0101               	movlb	1	; () banked
  2415  000E02  5100               	movf	send_msg@qptr& (0+255),w,b
  2416  000E04  26D9               	addwf	fsr2l,f,c
  2417  000E06  0101               	movlb	1	; () banked
  2418  000E08  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2419  000E0A  22DA               	addwfc	fsr2h,f,c
  2420  000E0C  50DF               	movf	indf2,w,c
  2421  000E0E  0101               	movlb	1	; () banked
  2422  000E10  6F08               	movwf	send_msg@slot& (0+255),b
  2423                           
  2424                           ; BSR set to: 1
  2425                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2426  000E12  0101               	movlb	1	; () banked
  2427  000E14  5108               	movf	send_msg@slot& (0+255),w,b
  2428  000E16  0D0D               	mullw	13
  2429  000E18  50F3               	movf	prodl,w,c
  2430  000E1A  0101               	movlb	1	; () banked
  2431  000E1C  2500               	addwf	send_msg@qptr& (0+255),w,b
  2432  000E1E  0101               	movlb	1	; () banked
  2433  000E20  6F09               	movwf	send_msg@qmsg& (0+255),b
  2434  000E22  50F4               	movf	prodh,w,c
  2435  000E24  0101               	movlb	1	; () banked
  2436  000E26  2101               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2437  000E28  0101               	movlb	1	; () banked
  2438  000E2A  6F0A               	movwf	(send_msg@qmsg+1)& (0+255),b
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;messages.c: 41: if (qmsg->full != 0) {
  2442  000E2C  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2443  000E30  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2444  000E34  50DF               	movf	indf2,w,c
  2445  000E36  B4D8               	btfsc	status,2,c
  2446  000E38  D002               	goto	l3033
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;messages.c: 42: return (-1);
  2450  000E3A  0EFF               	movlw	255
  2451  000E3C  0012               	return	
  2452  000E3E                     l3033:
  2453                           
  2454                           ; BSR set to: 1
  2455                           ;messages.c: 43: }
  2456                           ;messages.c: 46: qmsg->length = length;
  2457  000E3E  0101               	movlb	1	; () banked
  2458  000E40  EE20 F001          	lfsr	2,1
  2459  000E44  0101               	movlb	1	; () banked
  2460  000E46  5109               	movf	send_msg@qmsg& (0+255),w,b
  2461  000E48  26D9               	addwf	fsr2l,f,c
  2462  000E4A  0101               	movlb	1	; () banked
  2463  000E4C  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2464  000E4E  22DA               	addwfc	fsr2h,f,c
  2465  000E50  0101               	movlb	1	; () banked
  2466  000E52  C102  FFDF         	movff	send_msg@length,indf2
  2467                           
  2468                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2469  000E56  0101               	movlb	1	; () banked
  2470  000E58  EE20 F002          	lfsr	2,2
  2471  000E5C  0101               	movlb	1	; () banked
  2472  000E5E  5109               	movf	send_msg@qmsg& (0+255),w,b
  2473  000E60  26D9               	addwf	fsr2l,f,c
  2474  000E62  0101               	movlb	1	; () banked
  2475  000E64  510A               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2476  000E66  22DA               	addwfc	fsr2h,f,c
  2477  000E68  0101               	movlb	1	; () banked
  2478  000E6A  C103  FFDF         	movff	send_msg@msgtype,indf2
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2482  000E6E  0E03               	movlw	3
  2483  000E70  0101               	movlb	1	; () banked
  2484  000E72  2509               	addwf	send_msg@qmsg& (0+255),w,b
  2485  000E74  0100               	movlb	0	; () banked
  2486  000E76  6FD3               	movwf	memcpy@d1& (0+255),b
  2487  000E78  0E00               	movlw	0
  2488  000E7A  0101               	movlb	1	; () banked
  2489  000E7C  210A               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2490  000E7E  0100               	movlb	0	; () banked
  2491  000E80  6FD4               	movwf	(memcpy@d1+1)& (0+255),b
  2492  000E82  0101               	movlb	1	; () banked
  2493  000E84  0100               	movlb	0	; () banked
  2494  000E86  C105  F0D6         	movff	send_msg@data+1,memcpy@s1+1
  2495  000E8A  0101               	movlb	1	; () banked
  2496  000E8C  0100               	movlb	0	; () banked
  2497  000E8E  C104  F0D5         	movff	send_msg@data,memcpy@s1
  2498  000E92  C106  F0D7         	movff	send_msg@tlength,memcpy@n
  2499  000E96  C107  F0D8         	movff	send_msg@tlength+1,memcpy@n+1
  2500  000E9A  ECCE  F00B         	call	_memcpy	;wreg free
  2501                           
  2502                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2503  000E9E  0101               	movlb	1	; () banked
  2504  000EA0  EE20 F034          	lfsr	2,52
  2505  000EA4  0101               	movlb	1	; () banked
  2506  000EA6  5100               	movf	send_msg@qptr& (0+255),w,b
  2507  000EA8  26D9               	addwf	fsr2l,f,c
  2508  000EAA  0101               	movlb	1	; () banked
  2509  000EAC  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2510  000EAE  22DA               	addwfc	fsr2h,f,c
  2511  000EB0  0101               	movlb	1	; () banked
  2512  000EB2  EE10 F034          	lfsr	1,52
  2513  000EB6  0101               	movlb	1	; () banked
  2514  000EB8  5100               	movf	send_msg@qptr& (0+255),w,b
  2515  000EBA  26E1               	addwf	fsr1l,f,c
  2516  000EBC  0101               	movlb	1	; () banked
  2517  000EBE  5101               	movf	(send_msg@qptr+1)& (0+255),w,b
  2518  000EC0  22E2               	addwfc	fsr1h,f,c
  2519  000EC2  50E7               	movf	indf1,w,c
  2520  000EC4  0100               	movlb	0	; () banked
  2521  000EC6  6FDD               	movwf	??_send_msg& (0+255),b
  2522  000EC8  0100               	movlb	0	; () banked
  2523  000ECA  29DD               	incf	??_send_msg& (0+255),w,b
  2524  000ECC  0B03               	andlw	3
  2525  000ECE  6EDF               	movwf	indf2,c
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;messages.c: 59: qmsg->full = 1;
  2529  000ED0  C109  FFD9         	movff	send_msg@qmsg,fsr2l
  2530  000ED4  C10A  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2531  000ED8  0E01               	movlw	1
  2532  000EDA  6EDF               	movwf	indf2,c
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;messages.c: 60: return (1);
  2536  000EDC  0E01               	movlw	1
  2537  000EDE  0012               	return	
  2538  000EE0                     __end_of_send_msg:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           indf1	equ	0xFE7
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _init_uart_recv *****************
  2556 ;; Defined at:
  2557 ;;		line 80 in file "src/my_uart.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  2560 ;;		 -> main@uc(5), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2572 ;;      Params:         0       2       0       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0       2       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   11
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text9
  2587  001BF2                     __ptext9:
  2588                           	opt stack 0
  2589  001BF2                     _init_uart_recv:
  2590                           	opt stack 19
  2591                           
  2592                           ;my_uart.c: 81: uc_ptr = uc;
  2593                           
  2594                           ;incstack = 0
  2595  001BF2  0100               	movlb	0	; () banked
  2596  001BF4  C0D4  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2597  001BF8  0100               	movlb	0	; () banked
  2598  001BFA  C0D3  F049         	movff	init_uart_recv@uc,_uc_ptr
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  2602  001BFE  EE20 F004          	lfsr	2,4
  2603  001C02  5049               	movf	_uc_ptr,w,c
  2604  001C04  26D9               	addwf	fsr2l,f,c
  2605  001C06  504A               	movf	_uc_ptr+1,w,c
  2606  001C08  22DA               	addwfc	fsr2h,f,c
  2607  001C0A  0E00               	movlw	0
  2608  001C0C  6EDF               	movwf	indf2,c
  2609                           
  2610                           ; BSR set to: 0
  2611  001C0E  0012               	return	
  2612  001C10                     __end_of_init_uart_recv:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           prodh	equ	0xFF4
  2616                           prodl	equ	0xFF3
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           indf1	equ	0xFE7
  2620                           fsr1h	equ	0xFE2
  2621                           fsr1l	equ	0xFE1
  2622                           indf2	equ	0xFDF
  2623                           postinc2	equ	0xFDE
  2624                           postdec2	equ	0xFDD
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _init_uart_lthread *****************
  2630 ;; Defined at:
  2631 ;;		line 7 in file "src/uart_thread.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  2634 ;;		 -> main@uthread_data(10), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;		None               void
  2639 ;; Registers used:
  2640 ;;		None
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2646 ;;      Params:         0       2       0       0       0
  2647 ;;      Locals:         0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0
  2649 ;;      Totals:         0       2       0       0       0
  2650 ;;Total ram usage:        2 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:   11
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text10
  2661  001CBA                     __ptext10:
  2662                           	opt stack 0
  2663  001CBA                     _init_uart_lthread:
  2664                           	opt stack 19
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;incstack = 0
  2668  001CBA  0012               	return	
  2669  001CBC                     __end_of_init_uart_lthread:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           indf1	equ	0xFE7
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _init_timer1_lthread *****************
  2687 ;; Defined at:
  2688 ;;		line 7 in file "src/timer1_thread.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  tptr            2   31[BANK0 ] PTR struct __timer1_thre
  2691 ;;		 -> main@t1thread_data(40), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2703 ;;      Params:         0       2       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0
  2706 ;;      Totals:         0       2       0       0       0
  2707 ;;Total ram usage:        2 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:   12
  2710 ;; This function calls:
  2711 ;;		_quad_lookup_init
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text11
  2718  0012DE                     __ptext11:
  2719                           	opt stack 0
  2720  0012DE                     _init_timer1_lthread:
  2721                           	opt stack 18
  2722                           
  2723                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  2724                           
  2725                           ;incstack = 0
  2726  0012DE  C0D5  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2727  0012E2  C0D6  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2728  0012E6  0E00               	movlw	0
  2729  0012E8  6EDE               	movwf	postinc2,c
  2730  0012EA  0E00               	movlw	0
  2731  0012EC  6EDD               	movwf	postdec2,c
  2732                           
  2733                           ;timer1_thread.c: 9: tptr->ctrl[0] = 182;
  2734  0012EE  0100               	movlb	0	; () banked
  2735  0012F0  EE20 F002          	lfsr	2,2
  2736  0012F4  0100               	movlb	0	; () banked
  2737  0012F6  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2738  0012F8  26D9               	addwf	fsr2l,f,c
  2739  0012FA  0100               	movlb	0	; () banked
  2740  0012FC  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2741  0012FE  22DA               	addwfc	fsr2h,f,c
  2742  001300  0EB6               	movlw	182
  2743  001302  6EDF               	movwf	indf2,c
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;timer1_thread.c: 10: tptr->ctrl[1] = 54;
  2747  001304  0100               	movlb	0	; () banked
  2748  001306  EE20 F003          	lfsr	2,3
  2749  00130A  0100               	movlb	0	; () banked
  2750  00130C  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2751  00130E  26D9               	addwf	fsr2l,f,c
  2752  001310  0100               	movlb	0	; () banked
  2753  001312  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2754  001314  22DA               	addwfc	fsr2h,f,c
  2755  001316  0E36               	movlw	54
  2756  001318  6EDF               	movwf	indf2,c
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;timer1_thread.c: 11: tptr->prevPos[0] = 0;
  2760  00131A  0100               	movlb	0	; () banked
  2761  00131C  EE20 F024          	lfsr	2,36
  2762  001320  0100               	movlb	0	; () banked
  2763  001322  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2764  001324  26D9               	addwf	fsr2l,f,c
  2765  001326  0100               	movlb	0	; () banked
  2766  001328  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2767  00132A  22DA               	addwfc	fsr2h,f,c
  2768  00132C  0E00               	movlw	0
  2769  00132E  6EDF               	movwf	indf2,c
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;timer1_thread.c: 12: tptr->prevPos[1] = 0;
  2773  001330  0100               	movlb	0	; () banked
  2774  001332  EE20 F025          	lfsr	2,37
  2775  001336  0100               	movlb	0	; () banked
  2776  001338  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2777  00133A  26D9               	addwf	fsr2l,f,c
  2778  00133C  0100               	movlb	0	; () banked
  2779  00133E  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2780  001340  22DA               	addwfc	fsr2h,f,c
  2781  001342  0E00               	movlw	0
  2782  001344  6EDF               	movwf	indf2,c
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;timer1_thread.c: 13: tptr->current_position = 0;
  2786  001346  0100               	movlb	0	; () banked
  2787  001348  EE20 F026          	lfsr	2,38
  2788  00134C  0100               	movlb	0	; () banked
  2789  00134E  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2790  001350  26D9               	addwf	fsr2l,f,c
  2791  001352  0100               	movlb	0	; () banked
  2792  001354  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2793  001356  22DA               	addwfc	fsr2h,f,c
  2794  001358  0E00               	movlw	0
  2795  00135A  6EDF               	movwf	indf2,c
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;timer1_thread.c: 14: tptr->direction = 0;
  2799  00135C  0100               	movlb	0	; () banked
  2800  00135E  EE20 F027          	lfsr	2,39
  2801  001362  0100               	movlb	0	; () banked
  2802  001364  51D5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  2803  001366  26D9               	addwf	fsr2l,f,c
  2804  001368  0100               	movlb	0	; () banked
  2805  00136A  51D6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2806  00136C  22DA               	addwfc	fsr2h,f,c
  2807  00136E  0E00               	movlw	0
  2808  001370  6EDF               	movwf	indf2,c
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;timer1_thread.c: 15: quad_lookup_init(tptr->quadpos);
  2812  001372  0E04               	movlw	4
  2813  001374  0100               	movlb	0	; () banked
  2814  001376  25D5               	addwf	init_timer1_lthread@tptr& (0+255),w,b
  2815  001378  0100               	movlb	0	; () banked
  2816  00137A  6FD3               	movwf	quad_lookup_init@table& (0+255),b
  2817  00137C  0E00               	movlw	0
  2818  00137E  0100               	movlb	0	; () banked
  2819  001380  21D6               	addwfc	(init_timer1_lthread@tptr+1)& (0+255),w,b
  2820  001382  0100               	movlb	0	; () banked
  2821  001384  6FD4               	movwf	(quad_lookup_init@table+1)& (0+255),b
  2822  001386  EC89  F004         	call	_quad_lookup_init	;wreg free
  2823  00138A  0012               	return	
  2824  00138C                     __end_of_init_timer1_lthread:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           prodh	equ	0xFF4
  2828                           prodl	equ	0xFF3
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           indf1	equ	0xFE7
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _quad_lookup_init *****************
  2842 ;; Defined at:
  2843 ;;		line 36 in file "src/timer1_thread.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  table           2   29[BANK0 ] PTR unsigned char 
  2846 ;;		 -> main@t1thread_data(40), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;		None               void
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2858 ;;      Params:         0       2       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         0       2       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:   11
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_init_timer1_lthread
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text12
  2873  000912                     __ptext12:
  2874                           	opt stack 0
  2875  000912                     _quad_lookup_init:
  2876                           	opt stack 18
  2877                           
  2878                           ;timer1_thread.c: 37: table[0] = 0;
  2879                           
  2880                           ;incstack = 0
  2881  000912  C0D3  FFD9         	movff	quad_lookup_init@table,fsr2l
  2882  000916  C0D4  FFDA         	movff	quad_lookup_init@table+1,fsr2h
  2883  00091A  0E00               	movlw	0
  2884  00091C  6EDF               	movwf	indf2,c
  2885                           
  2886                           ;timer1_thread.c: 38: table[1] = -1;
  2887  00091E  0100               	movlb	0	; () banked
  2888  000920  EE20 F001          	lfsr	2,1
  2889  000924  0100               	movlb	0	; () banked
  2890  000926  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2891  000928  26D9               	addwf	fsr2l,f,c
  2892  00092A  0100               	movlb	0	; () banked
  2893  00092C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2894  00092E  22DA               	addwfc	fsr2h,f,c
  2895  000930  0EFF               	movlw	255
  2896  000932  6EDF               	movwf	indf2,c
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;timer1_thread.c: 39: table[2] = 1;
  2900  000934  0100               	movlb	0	; () banked
  2901  000936  EE20 F002          	lfsr	2,2
  2902  00093A  0100               	movlb	0	; () banked
  2903  00093C  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2904  00093E  26D9               	addwf	fsr2l,f,c
  2905  000940  0100               	movlb	0	; () banked
  2906  000942  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2907  000944  22DA               	addwfc	fsr2h,f,c
  2908  000946  0E01               	movlw	1
  2909  000948  6EDF               	movwf	indf2,c
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;timer1_thread.c: 40: table[3] = -2;
  2913  00094A  0100               	movlb	0	; () banked
  2914  00094C  EE20 F003          	lfsr	2,3
  2915  000950  0100               	movlb	0	; () banked
  2916  000952  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2917  000954  26D9               	addwf	fsr2l,f,c
  2918  000956  0100               	movlb	0	; () banked
  2919  000958  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2920  00095A  22DA               	addwfc	fsr2h,f,c
  2921  00095C  0EFE               	movlw	254
  2922  00095E  6EDF               	movwf	indf2,c
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;timer1_thread.c: 41: table[4] = 1;
  2926  000960  0100               	movlb	0	; () banked
  2927  000962  EE20 F004          	lfsr	2,4
  2928  000966  0100               	movlb	0	; () banked
  2929  000968  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2930  00096A  26D9               	addwf	fsr2l,f,c
  2931  00096C  0100               	movlb	0	; () banked
  2932  00096E  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2933  000970  22DA               	addwfc	fsr2h,f,c
  2934  000972  0E01               	movlw	1
  2935  000974  6EDF               	movwf	indf2,c
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;timer1_thread.c: 42: table[5] = 0;
  2939  000976  0100               	movlb	0	; () banked
  2940  000978  EE20 F005          	lfsr	2,5
  2941  00097C  0100               	movlb	0	; () banked
  2942  00097E  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2943  000980  26D9               	addwf	fsr2l,f,c
  2944  000982  0100               	movlb	0	; () banked
  2945  000984  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2946  000986  22DA               	addwfc	fsr2h,f,c
  2947  000988  0E00               	movlw	0
  2948  00098A  6EDF               	movwf	indf2,c
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;timer1_thread.c: 43: table[6] = -2;
  2952  00098C  0100               	movlb	0	; () banked
  2953  00098E  EE20 F006          	lfsr	2,6
  2954  000992  0100               	movlb	0	; () banked
  2955  000994  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2956  000996  26D9               	addwf	fsr2l,f,c
  2957  000998  0100               	movlb	0	; () banked
  2958  00099A  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2959  00099C  22DA               	addwfc	fsr2h,f,c
  2960  00099E  0EFE               	movlw	254
  2961  0009A0  6EDF               	movwf	indf2,c
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;timer1_thread.c: 44: table[7] = -1;
  2965  0009A2  0100               	movlb	0	; () banked
  2966  0009A4  EE20 F007          	lfsr	2,7
  2967  0009A8  0100               	movlb	0	; () banked
  2968  0009AA  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2969  0009AC  26D9               	addwf	fsr2l,f,c
  2970  0009AE  0100               	movlb	0	; () banked
  2971  0009B0  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2972  0009B2  22DA               	addwfc	fsr2h,f,c
  2973  0009B4  0EFF               	movlw	255
  2974  0009B6  6EDF               	movwf	indf2,c
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;timer1_thread.c: 45: table[8] = -1;
  2978  0009B8  0100               	movlb	0	; () banked
  2979  0009BA  EE20 F008          	lfsr	2,8
  2980  0009BE  0100               	movlb	0	; () banked
  2981  0009C0  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2982  0009C2  26D9               	addwf	fsr2l,f,c
  2983  0009C4  0100               	movlb	0	; () banked
  2984  0009C6  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2985  0009C8  22DA               	addwfc	fsr2h,f,c
  2986  0009CA  0EFF               	movlw	255
  2987  0009CC  6EDF               	movwf	indf2,c
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;timer1_thread.c: 46: table[9] = -2;
  2991  0009CE  0100               	movlb	0	; () banked
  2992  0009D0  EE20 F009          	lfsr	2,9
  2993  0009D4  0100               	movlb	0	; () banked
  2994  0009D6  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  2995  0009D8  26D9               	addwf	fsr2l,f,c
  2996  0009DA  0100               	movlb	0	; () banked
  2997  0009DC  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  2998  0009DE  22DA               	addwfc	fsr2h,f,c
  2999  0009E0  0EFE               	movlw	254
  3000  0009E2  6EDF               	movwf	indf2,c
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;timer1_thread.c: 47: table[10] = 0;
  3004  0009E4  0100               	movlb	0	; () banked
  3005  0009E6  EE20 F00A          	lfsr	2,10
  3006  0009EA  0100               	movlb	0	; () banked
  3007  0009EC  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3008  0009EE  26D9               	addwf	fsr2l,f,c
  3009  0009F0  0100               	movlb	0	; () banked
  3010  0009F2  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3011  0009F4  22DA               	addwfc	fsr2h,f,c
  3012  0009F6  0E00               	movlw	0
  3013  0009F8  6EDF               	movwf	indf2,c
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;timer1_thread.c: 48: table[11] = 1;
  3017  0009FA  0100               	movlb	0	; () banked
  3018  0009FC  EE20 F00B          	lfsr	2,11
  3019  000A00  0100               	movlb	0	; () banked
  3020  000A02  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3021  000A04  26D9               	addwf	fsr2l,f,c
  3022  000A06  0100               	movlb	0	; () banked
  3023  000A08  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3024  000A0A  22DA               	addwfc	fsr2h,f,c
  3025  000A0C  0E01               	movlw	1
  3026  000A0E  6EDF               	movwf	indf2,c
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;timer1_thread.c: 49: table[12] = -2;
  3030  000A10  0100               	movlb	0	; () banked
  3031  000A12  EE20 F00C          	lfsr	2,12
  3032  000A16  0100               	movlb	0	; () banked
  3033  000A18  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3034  000A1A  26D9               	addwf	fsr2l,f,c
  3035  000A1C  0100               	movlb	0	; () banked
  3036  000A1E  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3037  000A20  22DA               	addwfc	fsr2h,f,c
  3038  000A22  0EFE               	movlw	254
  3039  000A24  6EDF               	movwf	indf2,c
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;timer1_thread.c: 50: table[13] = 1;
  3043  000A26  0100               	movlb	0	; () banked
  3044  000A28  EE20 F00D          	lfsr	2,13
  3045  000A2C  0100               	movlb	0	; () banked
  3046  000A2E  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3047  000A30  26D9               	addwf	fsr2l,f,c
  3048  000A32  0100               	movlb	0	; () banked
  3049  000A34  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3050  000A36  22DA               	addwfc	fsr2h,f,c
  3051  000A38  0E01               	movlw	1
  3052  000A3A  6EDF               	movwf	indf2,c
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;timer1_thread.c: 51: table[14] = -1;
  3056  000A3C  0100               	movlb	0	; () banked
  3057  000A3E  EE20 F00E          	lfsr	2,14
  3058  000A42  0100               	movlb	0	; () banked
  3059  000A44  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3060  000A46  26D9               	addwf	fsr2l,f,c
  3061  000A48  0100               	movlb	0	; () banked
  3062  000A4A  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3063  000A4C  22DA               	addwfc	fsr2h,f,c
  3064  000A4E  0EFF               	movlw	255
  3065  000A50  6EDF               	movwf	indf2,c
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;timer1_thread.c: 52: table[15] = 0;
  3069  000A52  0100               	movlb	0	; () banked
  3070  000A54  EE20 F00F          	lfsr	2,15
  3071  000A58  0100               	movlb	0	; () banked
  3072  000A5A  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3073  000A5C  26D9               	addwf	fsr2l,f,c
  3074  000A5E  0100               	movlb	0	; () banked
  3075  000A60  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3076  000A62  22DA               	addwfc	fsr2h,f,c
  3077  000A64  0E00               	movlw	0
  3078  000A66  6EDF               	movwf	indf2,c
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;timer1_thread.c: 53: table[16] = 0;
  3082  000A68  0100               	movlb	0	; () banked
  3083  000A6A  EE20 F010          	lfsr	2,16
  3084  000A6E  0100               	movlb	0	; () banked
  3085  000A70  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3086  000A72  26D9               	addwf	fsr2l,f,c
  3087  000A74  0100               	movlb	0	; () banked
  3088  000A76  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3089  000A78  22DA               	addwfc	fsr2h,f,c
  3090  000A7A  0E00               	movlw	0
  3091  000A7C  6EDF               	movwf	indf2,c
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;timer1_thread.c: 54: table[17] = -1;
  3095  000A7E  0100               	movlb	0	; () banked
  3096  000A80  EE20 F011          	lfsr	2,17
  3097  000A84  0100               	movlb	0	; () banked
  3098  000A86  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3099  000A88  26D9               	addwf	fsr2l,f,c
  3100  000A8A  0100               	movlb	0	; () banked
  3101  000A8C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3102  000A8E  22DA               	addwfc	fsr2h,f,c
  3103  000A90  0EFF               	movlw	255
  3104  000A92  6EDF               	movwf	indf2,c
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;timer1_thread.c: 55: table[18] = 1;
  3108  000A94  0100               	movlb	0	; () banked
  3109  000A96  EE20 F012          	lfsr	2,18
  3110  000A9A  0100               	movlb	0	; () banked
  3111  000A9C  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3112  000A9E  26D9               	addwf	fsr2l,f,c
  3113  000AA0  0100               	movlb	0	; () banked
  3114  000AA2  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3115  000AA4  22DA               	addwfc	fsr2h,f,c
  3116  000AA6  0E01               	movlw	1
  3117  000AA8  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;timer1_thread.c: 56: table[19] = 2;
  3121  000AAA  0100               	movlb	0	; () banked
  3122  000AAC  EE20 F013          	lfsr	2,19
  3123  000AB0  0100               	movlb	0	; () banked
  3124  000AB2  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3125  000AB4  26D9               	addwf	fsr2l,f,c
  3126  000AB6  0100               	movlb	0	; () banked
  3127  000AB8  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3128  000ABA  22DA               	addwfc	fsr2h,f,c
  3129  000ABC  0E02               	movlw	2
  3130  000ABE  6EDF               	movwf	indf2,c
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;timer1_thread.c: 57: table[20] = 1;
  3134  000AC0  0100               	movlb	0	; () banked
  3135  000AC2  EE20 F014          	lfsr	2,20
  3136  000AC6  0100               	movlb	0	; () banked
  3137  000AC8  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3138  000ACA  26D9               	addwf	fsr2l,f,c
  3139  000ACC  0100               	movlb	0	; () banked
  3140  000ACE  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3141  000AD0  22DA               	addwfc	fsr2h,f,c
  3142  000AD2  0E01               	movlw	1
  3143  000AD4  6EDF               	movwf	indf2,c
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;timer1_thread.c: 58: table[21] = 0;
  3147  000AD6  0100               	movlb	0	; () banked
  3148  000AD8  EE20 F015          	lfsr	2,21
  3149  000ADC  0100               	movlb	0	; () banked
  3150  000ADE  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3151  000AE0  26D9               	addwf	fsr2l,f,c
  3152  000AE2  0100               	movlb	0	; () banked
  3153  000AE4  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3154  000AE6  22DA               	addwfc	fsr2h,f,c
  3155  000AE8  0E00               	movlw	0
  3156  000AEA  6EDF               	movwf	indf2,c
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;timer1_thread.c: 59: table[22] = 2;
  3160  000AEC  0100               	movlb	0	; () banked
  3161  000AEE  EE20 F016          	lfsr	2,22
  3162  000AF2  0100               	movlb	0	; () banked
  3163  000AF4  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3164  000AF6  26D9               	addwf	fsr2l,f,c
  3165  000AF8  0100               	movlb	0	; () banked
  3166  000AFA  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3167  000AFC  22DA               	addwfc	fsr2h,f,c
  3168  000AFE  0E02               	movlw	2
  3169  000B00  6EDF               	movwf	indf2,c
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;timer1_thread.c: 60: table[23] = -1;
  3173  000B02  0100               	movlb	0	; () banked
  3174  000B04  EE20 F017          	lfsr	2,23
  3175  000B08  0100               	movlb	0	; () banked
  3176  000B0A  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3177  000B0C  26D9               	addwf	fsr2l,f,c
  3178  000B0E  0100               	movlb	0	; () banked
  3179  000B10  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3180  000B12  22DA               	addwfc	fsr2h,f,c
  3181  000B14  0EFF               	movlw	255
  3182  000B16  6EDF               	movwf	indf2,c
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;timer1_thread.c: 61: table[24] = -1;
  3186  000B18  0100               	movlb	0	; () banked
  3187  000B1A  EE20 F018          	lfsr	2,24
  3188  000B1E  0100               	movlb	0	; () banked
  3189  000B20  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3190  000B22  26D9               	addwf	fsr2l,f,c
  3191  000B24  0100               	movlb	0	; () banked
  3192  000B26  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3193  000B28  22DA               	addwfc	fsr2h,f,c
  3194  000B2A  0EFF               	movlw	255
  3195  000B2C  6EDF               	movwf	indf2,c
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;timer1_thread.c: 62: table[25] = 2;
  3199  000B2E  0100               	movlb	0	; () banked
  3200  000B30  EE20 F019          	lfsr	2,25
  3201  000B34  0100               	movlb	0	; () banked
  3202  000B36  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3203  000B38  26D9               	addwf	fsr2l,f,c
  3204  000B3A  0100               	movlb	0	; () banked
  3205  000B3C  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3206  000B3E  22DA               	addwfc	fsr2h,f,c
  3207  000B40  0E02               	movlw	2
  3208  000B42  6EDF               	movwf	indf2,c
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;timer1_thread.c: 63: table[26] = 0;
  3212  000B44  0100               	movlb	0	; () banked
  3213  000B46  EE20 F01A          	lfsr	2,26
  3214  000B4A  0100               	movlb	0	; () banked
  3215  000B4C  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3216  000B4E  26D9               	addwf	fsr2l,f,c
  3217  000B50  0100               	movlb	0	; () banked
  3218  000B52  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3219  000B54  22DA               	addwfc	fsr2h,f,c
  3220  000B56  0E00               	movlw	0
  3221  000B58  6EDF               	movwf	indf2,c
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;timer1_thread.c: 64: table[27] = 1;
  3225  000B5A  0100               	movlb	0	; () banked
  3226  000B5C  EE20 F01B          	lfsr	2,27
  3227  000B60  0100               	movlb	0	; () banked
  3228  000B62  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3229  000B64  26D9               	addwf	fsr2l,f,c
  3230  000B66  0100               	movlb	0	; () banked
  3231  000B68  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3232  000B6A  22DA               	addwfc	fsr2h,f,c
  3233  000B6C  0E01               	movlw	1
  3234  000B6E  6EDF               	movwf	indf2,c
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;timer1_thread.c: 65: table[28] = 2;
  3238  000B70  0100               	movlb	0	; () banked
  3239  000B72  EE20 F01C          	lfsr	2,28
  3240  000B76  0100               	movlb	0	; () banked
  3241  000B78  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3242  000B7A  26D9               	addwf	fsr2l,f,c
  3243  000B7C  0100               	movlb	0	; () banked
  3244  000B7E  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3245  000B80  22DA               	addwfc	fsr2h,f,c
  3246  000B82  0E02               	movlw	2
  3247  000B84  6EDF               	movwf	indf2,c
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;timer1_thread.c: 66: table[29] = 1;
  3251  000B86  0100               	movlb	0	; () banked
  3252  000B88  EE20 F01D          	lfsr	2,29
  3253  000B8C  0100               	movlb	0	; () banked
  3254  000B8E  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3255  000B90  26D9               	addwf	fsr2l,f,c
  3256  000B92  0100               	movlb	0	; () banked
  3257  000B94  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3258  000B96  22DA               	addwfc	fsr2h,f,c
  3259  000B98  0E01               	movlw	1
  3260  000B9A  6EDF               	movwf	indf2,c
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;timer1_thread.c: 67: table[30] = -1;
  3264  000B9C  0100               	movlb	0	; () banked
  3265  000B9E  EE20 F01E          	lfsr	2,30
  3266  000BA2  0100               	movlb	0	; () banked
  3267  000BA4  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3268  000BA6  26D9               	addwf	fsr2l,f,c
  3269  000BA8  0100               	movlb	0	; () banked
  3270  000BAA  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3271  000BAC  22DA               	addwfc	fsr2h,f,c
  3272  000BAE  0EFF               	movlw	255
  3273  000BB0  6EDF               	movwf	indf2,c
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;timer1_thread.c: 68: table[31] = 0;
  3277  000BB2  0100               	movlb	0	; () banked
  3278  000BB4  EE20 F01F          	lfsr	2,31
  3279  000BB8  0100               	movlb	0	; () banked
  3280  000BBA  51D3               	movf	quad_lookup_init@table& (0+255),w,b
  3281  000BBC  26D9               	addwf	fsr2l,f,c
  3282  000BBE  0100               	movlb	0	; () banked
  3283  000BC0  51D4               	movf	(quad_lookup_init@table+1)& (0+255),w,b
  3284  000BC2  22DA               	addwfc	fsr2h,f,c
  3285  000BC4  0E00               	movlw	0
  3286  000BC6  6EDF               	movwf	indf2,c
  3287                           
  3288                           ; BSR set to: 0
  3289  000BC8  0012               	return	
  3290  000BCA                     __end_of_quad_lookup_init:
  3291                           	opt stack 0
  3292                           tblptru	equ	0xFF8
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           postinc0	equ	0xFEE
  3296                           wreg	equ	0xFE8
  3297                           indf1	equ	0xFE7
  3298                           fsr1h	equ	0xFE2
  3299                           fsr1l	equ	0xFE1
  3300                           indf2	equ	0xFDF
  3301                           postinc2	equ	0xFDE
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _init_queues *****************
  3308 ;; Defined at:
  3309 ;;		line 194 in file "src/messages.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;		None               void
  3316 ;; Registers used:
  3317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:   12
  3330 ;; This function calls:
  3331 ;;		_init_queue
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text13
  3338  0016F0                     __ptext13:
  3339                           	opt stack 0
  3340  0016F0                     _init_queues:
  3341                           	opt stack 18
  3342                           
  3343                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;incstack = 0
  3347  0016F0  0E00               	movlw	0
  3348  0016F2  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3349                           
  3350                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3351  0016F4  0100               	movlb	0	; () banked
  3352  0016F6  0E00               	movlw	high _ToMainLow_MQ
  3353  0016F8  0100               	movlb	0	; () banked
  3354  0016FA  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3355  0016FC  0100               	movlb	0	; () banked
  3356  0016FE  0E80               	movlw	low _ToMainLow_MQ
  3357  001700  0100               	movlb	0	; () banked
  3358  001702  6FD3               	movwf	init_queue@qptr& (0+255),b
  3359  001704  EC18  F00B         	call	_init_queue	;wreg free
  3360                           
  3361                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3362  001708  0101               	movlb	1	; () banked
  3363  00170A  0E01               	movlw	high _ToMainHigh_MQ
  3364  00170C  0100               	movlb	0	; () banked
  3365  00170E  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3366  001710  0101               	movlb	1	; () banked
  3367  001712  0EB4               	movlw	low _ToMainHigh_MQ
  3368  001714  0100               	movlb	0	; () banked
  3369  001716  6FD3               	movwf	init_queue@qptr& (0+255),b
  3370  001718  EC18  F00B         	call	_init_queue	;wreg free
  3371                           
  3372                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3373  00171C  0101               	movlb	1	; () banked
  3374  00171E  0E01               	movlw	high _FromMainLow_MQ
  3375  001720  0100               	movlb	0	; () banked
  3376  001722  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3377  001724  0101               	movlb	1	; () banked
  3378  001726  0E7E               	movlw	low _FromMainLow_MQ
  3379  001728  0100               	movlb	0	; () banked
  3380  00172A  6FD3               	movwf	init_queue@qptr& (0+255),b
  3381  00172C  EC18  F00B         	call	_init_queue	;wreg free
  3382                           
  3383                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3384  001730  0102               	movlb	2	; () banked
  3385  001732  0E02               	movlw	high _FromMainHigh_MQ
  3386  001734  0100               	movlb	0	; () banked
  3387  001736  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  3388  001738  0102               	movlb	2	; () banked
  3389  00173A  0E00               	movlw	low _FromMainHigh_MQ
  3390  00173C  0100               	movlb	0	; () banked
  3391  00173E  6FD3               	movwf	init_queue@qptr& (0+255),b
  3392  001740  EC18  F00B         	call	_init_queue	;wreg free
  3393  001744  0012               	return	
  3394  001746                     __end_of_init_queues:
  3395                           	opt stack 0
  3396                           tblptru	equ	0xFF8
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           indf1	equ	0xFE7
  3402                           fsr1h	equ	0xFE2
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _init_queue *****************
  3412 ;; Defined at:
  3413 ;;		line 14 in file "src/messages.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3416 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  i               1   31[BANK0 ] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3428 ;;      Params:         0       2       0       0       0
  3429 ;;      Locals:         0       1       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         0       3       0       0       0
  3432 ;;Total ram usage:        3 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:   11
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_init_queues
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text14
  3443  001630                     __ptext14:
  3444                           	opt stack 0
  3445  001630                     _init_queue:
  3446                           	opt stack 18
  3447                           
  3448                           ;messages.c: 15: unsigned char i;
  3449                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3450                           
  3451                           ;incstack = 0
  3452  001630  0100               	movlb	0	; () banked
  3453  001632  EE20 F034          	lfsr	2,52
  3454  001636  0100               	movlb	0	; () banked
  3455  001638  51D3               	movf	init_queue@qptr& (0+255),w,b
  3456  00163A  26D9               	addwf	fsr2l,f,c
  3457  00163C  0100               	movlb	0	; () banked
  3458  00163E  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3459  001640  22DA               	addwfc	fsr2h,f,c
  3460  001642  0E00               	movlw	0
  3461  001644  6EDF               	movwf	indf2,c
  3462                           
  3463                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3464  001646  0100               	movlb	0	; () banked
  3465  001648  EE20 F035          	lfsr	2,53
  3466  00164C  0100               	movlb	0	; () banked
  3467  00164E  51D3               	movf	init_queue@qptr& (0+255),w,b
  3468  001650  26D9               	addwf	fsr2l,f,c
  3469  001652  0100               	movlb	0	; () banked
  3470  001654  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3471  001656  22DA               	addwfc	fsr2h,f,c
  3472  001658  0E00               	movlw	0
  3473  00165A  6EDF               	movwf	indf2,c
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3477  00165C  0E00               	movlw	0
  3478  00165E  0100               	movlb	0	; () banked
  3479  001660  6FD5               	movwf	init_queue@i& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482  001662  0E03               	movlw	3
  3483  001664  0100               	movlb	0	; () banked
  3484  001666  65D5               	cpfsgt	init_queue@i& (0+255),b
  3485  001668  D001               	goto	l2247
  3486  00166A  0012               	return	
  3487  00166C                     l2247:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;messages.c: 20: qptr->queue[i].full = 0;
  3491  00166C  0100               	movlb	0	; () banked
  3492  00166E  51D5               	movf	init_queue@i& (0+255),w,b
  3493  001670  0D0D               	mullw	13
  3494  001672  50F3               	movf	prodl,w,c
  3495  001674  0100               	movlb	0	; () banked
  3496  001676  25D3               	addwf	init_queue@qptr& (0+255),w,b
  3497  001678  6ED9               	movwf	fsr2l,c
  3498  00167A  50F4               	movf	prodh,w,c
  3499  00167C  0100               	movlb	0	; () banked
  3500  00167E  21D4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3501  001680  6EDA               	movwf	fsr2h,c
  3502  001682  0E00               	movlw	0
  3503  001684  6EDF               	movwf	indf2,c
  3504                           
  3505                           ; BSR set to: 0
  3506  001686  0100               	movlb	0	; () banked
  3507  001688  2BD5               	incf	init_queue@i& (0+255),f,b
  3508                           
  3509                           ; BSR set to: 0
  3510  00168A  0E03               	movlw	3
  3511  00168C  0100               	movlb	0	; () banked
  3512  00168E  65D5               	cpfsgt	init_queue@i& (0+255),b
  3513  001690  D7ED               	goto	l2247
  3514  001692  0012               	return	
  3515  001694                     __end_of_init_queue:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           prodh	equ	0xFF4
  3519                           prodl	equ	0xFF3
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           indf1	equ	0xFE7
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _init_i2c *****************
  3533 ;; Defined at:
  3534 ;;		line 268 in file "src/my_i2c.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  3537 ;;		 -> main@ic(28), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3549 ;;      Params:         0       2       0       0       0
  3550 ;;      Locals:         0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0
  3552 ;;      Totals:         0       2       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   11
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text15
  3564  0015CA                     __ptext15:
  3565                           	opt stack 0
  3566  0015CA                     _init_i2c:
  3567                           	opt stack 19
  3568                           
  3569                           ;my_i2c.c: 269: ic_ptr = ic;
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;incstack = 0
  3573  0015CA  0100               	movlb	0	; () banked
  3574  0015CC  C0D4  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  3575  0015D0  0100               	movlb	0	; () banked
  3576  0015D2  C0D3  F0E1         	movff	init_i2c@ic,_ic_ptr
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3580  0015D6  0100               	movlb	0	; () banked
  3581  0015D8  EE20 F00A          	lfsr	2,10
  3582  0015DC  0100               	movlb	0	; () banked
  3583  0015DE  51E1               	movf	_ic_ptr& (0+255),w,b
  3584  0015E0  26D9               	addwf	fsr2l,f,c
  3585  0015E2  0100               	movlb	0	; () banked
  3586  0015E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3587  0015E6  22DA               	addwfc	fsr2h,f,c
  3588  0015E8  0E00               	movlw	0
  3589  0015EA  6EDF               	movwf	indf2,c
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3593  0015EC  0100               	movlb	0	; () banked
  3594  0015EE  EE20 F00B          	lfsr	2,11
  3595  0015F2  0100               	movlb	0	; () banked
  3596  0015F4  51E1               	movf	_ic_ptr& (0+255),w,b
  3597  0015F6  26D9               	addwf	fsr2l,f,c
  3598  0015F8  0100               	movlb	0	; () banked
  3599  0015FA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3600  0015FC  22DA               	addwfc	fsr2h,f,c
  3601  0015FE  0E00               	movlw	0
  3602  001600  6EDF               	movwf	indf2,c
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3606  001602  0100               	movlb	0	; () banked
  3607  001604  EE20 F00C          	lfsr	2,12
  3608  001608  0100               	movlb	0	; () banked
  3609  00160A  51E1               	movf	_ic_ptr& (0+255),w,b
  3610  00160C  26D9               	addwf	fsr2l,f,c
  3611  00160E  0100               	movlb	0	; () banked
  3612  001610  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3613  001612  22DA               	addwfc	fsr2h,f,c
  3614  001614  0E05               	movlw	5
  3615  001616  6EDF               	movwf	indf2,c
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3619  001618  0100               	movlb	0	; () banked
  3620  00161A  EE20 F00E          	lfsr	2,14
  3621  00161E  0100               	movlb	0	; () banked
  3622  001620  51E1               	movf	_ic_ptr& (0+255),w,b
  3623  001622  26D9               	addwf	fsr2l,f,c
  3624  001624  0100               	movlb	0	; () banked
  3625  001626  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3626  001628  22DA               	addwfc	fsr2h,f,c
  3627  00162A  0E00               	movlw	0
  3628  00162C  6EDF               	movwf	indf2,c
  3629                           
  3630                           ; BSR set to: 0
  3631  00162E  0012               	return	
  3632  001630                     __end_of_init_i2c:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           indf1	equ	0xFE7
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           postdec2	equ	0xFDD
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _i2c_configure_slave *****************
  3650 ;; Defined at:
  3651 ;;		line 279 in file "src/my_i2c.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  addr            1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  addr            1   29[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;		None               void
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3665 ;;      Params:         0       0       0       0       0
  3666 ;;      Locals:         0       1       0       0       0
  3667 ;;      Temps:          0       0       0       0       0
  3668 ;;      Totals:         0       1       0       0       0
  3669 ;;Total ram usage:        1 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:   11
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text16
  3680  001B38                     __ptext16:
  3681                           	opt stack 0
  3682  001B38                     _i2c_configure_slave:
  3683                           	opt stack 19
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;incstack = 0
  3687                           ;i2c_configure_slave@addr stored from wreg
  3688  001B38  0100               	movlb	0	; () banked
  3689  001B3A  6FD3               	movwf	i2c_configure_slave@addr& (0+255),b
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3693  001B3C  8694               	bsf	3988,3,c	;volatile
  3694                           
  3695                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3696  001B3E  8894               	bsf	3988,4,c	;volatile
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;my_i2c.c: 297: SSPADD = addr;
  3700  001B40  C0D3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3704  001B44  0E00               	movlw	0
  3705  001B46  6EC7               	movwf	4039,c	;volatile
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3709  001B48  0E00               	movlw	0
  3710  001B4A  6EC6               	movwf	4038,c	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3714  001B4C  0E00               	movlw	0
  3715  001B4E  6EC5               	movwf	4037,c	;volatile
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3719  001B50  0E0E               	movlw	14
  3720  001B52  12C6               	iorwf	4038,f,c	;volatile
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3724  001B54  8EC7               	bsf	4039,7,c	;volatile
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3728  001B56  8694               	bsf	3988,3,c	;volatile
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3732  001B58  8894               	bsf	3988,4,c	;volatile
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3736  001B5A  80C5               	bsf	4037,0,c	;volatile
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3740  001B5C  8AC6               	bsf	4038,5,c	;volatile
  3741                           
  3742                           ; BSR set to: 0
  3743  001B5E  0012               	return	
  3744  001B60                     __end_of_i2c_configure_slave:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           prodh	equ	0xFF4
  3748                           prodl	equ	0xFF3
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           indf1	equ	0xFE7
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           indf2	equ	0xFDF
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _enable_interrupts *****************
  3762 ;; Defined at:
  3763 ;;		line 14 in file "src/interrupts.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;		None               void
  3770 ;; Registers used:
  3771 ;;		None
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:   11
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text17
  3792  001CAC                     __ptext17:
  3793                           	opt stack 0
  3794  001CAC                     _enable_interrupts:
  3795                           	opt stack 19
  3796                           
  3797                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801  001CAC  8ED0               	bsf	4048,7,c	;volatile
  3802                           
  3803                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3804  001CAE  8EF2               	bsf	intcon,7,c	;volatile
  3805                           
  3806                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3807  001CB0  8CF2               	bsf	intcon,6,c	;volatile
  3808  001CB2  0012               	return	
  3809  001CB4                     __end_of_enable_interrupts:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           intcon	equ	0xFF2
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           postinc2	equ	0xFDE
  3822                           postdec2	equ	0xFDD
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _block_on_To_msgqueues *****************
  3828 ;; Defined at:
  3829 ;;		line 256 in file "src/messages.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3843 ;;      Params:         0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:   14
  3850 ;; This function calls:
  3851 ;;		_Delay1KTCYx
  3852 ;;		_check_msg
  3853 ;;		_in_main
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text18
  3860  001694                     __ptext18:
  3861                           	opt stack 0
  3862  001694                     _block_on_To_msgqueues:
  3863                           	opt stack 16
  3864                           
  3865                           ;messages.c: 257: if (!in_main()) {
  3866                           
  3867                           ;incstack = 0
  3868  001694  EC9B  F00C         	call	_in_main	;wreg free
  3869  001698  0100               	movlb	0	; () banked
  3870  00169A  51D8               	movf	(?_in_main+1)& (0+255),w,b
  3871  00169C  0100               	movlb	0	; () banked
  3872  00169E  11D7               	iorwf	?_in_main& (0+255),w,b
  3873  0016A0  B4D8               	btfsc	status,2,c
  3874  0016A2  0012               	return	
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;messages.c: 259: }
  3878                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3879                           
  3880                           ; BSR set to: 0
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;messages.c: 258: return;
  3884  0016A4  0E01               	movlw	1
  3885  0016A6  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3886  0016A8                     l2785:
  3887                           
  3888                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3889  0016A8  0101               	movlb	1	; () banked
  3890  0016AA  0E01               	movlw	high _ToMainHigh_MQ
  3891  0016AC  0100               	movlb	0	; () banked
  3892  0016AE  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3893  0016B0  0101               	movlb	1	; () banked
  3894  0016B2  0EB4               	movlw	low _ToMainHigh_MQ
  3895  0016B4  0100               	movlb	0	; () banked
  3896  0016B6  6FD3               	movwf	check_msg@qptr& (0+255),b
  3897  0016B8  EC53  F00D         	call	_check_msg	;wreg free
  3898  0016BC  0900               	iorlw	0
  3899  0016BE  B4D8               	btfsc	status,2,c
  3900  0016C0  D003               	goto	l2791
  3901                           
  3902                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3903  0016C2  0E00               	movlw	0
  3904  0016C4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3905  0016C6  0012               	return	
  3906  0016C8                     l2791:
  3907                           
  3908                           ;messages.c: 271: }
  3909                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3910  0016C8  0100               	movlb	0	; () banked
  3911  0016CA  0E00               	movlw	high _ToMainLow_MQ
  3912  0016CC  0100               	movlb	0	; () banked
  3913  0016CE  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3914  0016D0  0100               	movlb	0	; () banked
  3915  0016D2  0E80               	movlw	low _ToMainLow_MQ
  3916  0016D4  0100               	movlb	0	; () banked
  3917  0016D6  6FD3               	movwf	check_msg@qptr& (0+255),b
  3918  0016D8  EC53  F00D         	call	_check_msg	;wreg free
  3919  0016DC  0900               	iorlw	0
  3920  0016DE  B4D8               	btfsc	status,2,c
  3921  0016E0  D003               	goto	l2797
  3922                           
  3923                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3924  0016E2  0E00               	movlw	0
  3925  0016E4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3926  0016E6  0012               	return	
  3927  0016E8                     l2797:
  3928                           
  3929                           ;messages.c: 278: }
  3930                           ;messages.c: 279: Delay1KTCYx(10);
  3931  0016E8  0E0A               	movlw	10
  3932  0016EA  EC25  F00E         	call	_Delay1KTCYx
  3933  0016EE  D7DC               	goto	l2785
  3934  0016F0                     __end_of_block_on_To_msgqueues:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf1	equ	0xFE7
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _in_main *****************
  3953 ;; Defined at:
  3954 ;;		line 40 in file "src/interrupts.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2   33[BANK0 ] int 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3968 ;;      Params:         0       2       0       0       0
  3969 ;;      Locals:         0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0
  3971 ;;      Totals:         0       2       0       0       0
  3972 ;;Total ram usage:        2 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:   13
  3975 ;; This function calls:
  3976 ;;		_in_high_int
  3977 ;;		_in_low_int
  3978 ;; This function is called by:
  3979 ;;		_block_on_To_msgqueues
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text19
  3984  001936                     __ptext19:
  3985                           	opt stack 0
  3986  001936                     _in_main:
  3987                           	opt stack 16
  3988                           
  3989                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3990                           
  3991                           ;incstack = 0
  3992  001936  EC5D  F00C         	call	_in_low_int	;wreg free
  3993  00193A  0100               	movlb	0	; () banked
  3994  00193C  51D6               	movf	(?_in_low_int+1)& (0+255),w,b
  3995  00193E  0100               	movlb	0	; () banked
  3996  001940  11D5               	iorwf	?_in_low_int& (0+255),w,b
  3997  001942  A4D8               	btfss	status,2,c
  3998  001944  D00F               	goto	l2235
  3999                           
  4000                           ; BSR set to: 0
  4001  001946  EC41  F00E         	call	_in_high_int	;wreg free
  4002  00194A  0100               	movlb	0	; () banked
  4003  00194C  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  4004  00194E  0100               	movlb	0	; () banked
  4005  001950  11D3               	iorwf	?_in_high_int& (0+255),w,b
  4006  001952  A4D8               	btfss	status,2,c
  4007  001954  D007               	goto	l2235
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;interrupts.c: 42: return (1);
  4011  001956  0E00               	movlw	0
  4012  001958  0100               	movlb	0	; () banked
  4013  00195A  6FD8               	movwf	(?_in_main+1)& (0+255),b
  4014  00195C  0E01               	movlw	1
  4015  00195E  0100               	movlb	0	; () banked
  4016  001960  6FD7               	movwf	?_in_main& (0+255),b
  4017  001962  0012               	return	
  4018  001964                     l2235:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;interrupts.c: 44: return (0);
  4022  001964  0E00               	movlw	0
  4023  001966  0100               	movlb	0	; () banked
  4024  001968  6FD8               	movwf	(?_in_main+1)& (0+255),b
  4025  00196A  0E00               	movlw	0
  4026  00196C  0100               	movlb	0	; () banked
  4027  00196E  6FD7               	movwf	?_in_main& (0+255),b
  4028  001970  0012               	return	
  4029  001972                     __end_of_in_main:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           prodh	equ	0xFF4
  4033                           prodl	equ	0xFF3
  4034                           intcon	equ	0xFF2
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           indf1	equ	0xFE7
  4038                           fsr1h	equ	0xFE2
  4039                           fsr1l	equ	0xFE1
  4040                           indf2	equ	0xFDF
  4041                           postinc2	equ	0xFDE
  4042                           postdec2	equ	0xFDD
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _in_low_int *****************
  4048 ;; Defined at:
  4049 ;;		line 30 in file "src/interrupts.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  2   31[BANK0 ] int 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4063 ;;      Params:         0       2       0       0       0
  4064 ;;      Locals:         0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0
  4066 ;;      Totals:         0       2       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:   12
  4070 ;; This function calls:
  4071 ;;		_in_high_int
  4072 ;; This function is called by:
  4073 ;;		_in_main
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text20
  4078  0018BA                     __ptext20:
  4079                           	opt stack 0
  4080  0018BA                     _in_low_int:
  4081                           	opt stack 16
  4082                           
  4083                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;incstack = 0
  4087  0018BA  ACF2               	btfss	intcon,6,c	;volatile
  4088  0018BC  D007               	goto	l2125
  4089                           
  4090                           ;interrupts.c: 32: return (0);
  4091  0018BE  0E00               	movlw	0
  4092  0018C0  0100               	movlb	0	; () banked
  4093  0018C2  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4094  0018C4  0E00               	movlw	0
  4095  0018C6  0100               	movlb	0	; () banked
  4096  0018C8  6FD5               	movwf	?_in_low_int& (0+255),b
  4097  0018CA  0012               	return	
  4098  0018CC                     l2125:
  4099  0018CC  EC41  F00E         	call	_in_high_int	;wreg free
  4100  0018D0  0100               	movlb	0	; () banked
  4101  0018D2  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  4102  0018D4  0100               	movlb	0	; () banked
  4103  0018D6  11D3               	iorwf	?_in_high_int& (0+255),w,b
  4104  0018D8  B4D8               	btfsc	status,2,c
  4105  0018DA  D007               	goto	l2133
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;interrupts.c: 34: return (0);
  4109  0018DC  0E00               	movlw	0
  4110  0018DE  0100               	movlb	0	; () banked
  4111  0018E0  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4112  0018E2  0E00               	movlw	0
  4113  0018E4  0100               	movlb	0	; () banked
  4114  0018E6  6FD5               	movwf	?_in_low_int& (0+255),b
  4115  0018E8  0012               	return	
  4116  0018EA                     l2133:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;interrupts.c: 36: return (1);
  4120  0018EA  0E00               	movlw	0
  4121  0018EC  0100               	movlb	0	; () banked
  4122  0018EE  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  4123  0018F0  0E01               	movlw	1
  4124  0018F2  0100               	movlb	0	; () banked
  4125  0018F4  6FD5               	movwf	?_in_low_int& (0+255),b
  4126  0018F6  0012               	return	
  4127  0018F8                     __end_of_in_low_int:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           intcon	equ	0xFF2
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           indf1	equ	0xFE7
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function _in_high_int *****************
  4146 ;; Defined at:
  4147 ;;		line 22 in file "src/interrupts.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2   29[BANK0 ] int 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4161 ;;      Params:         0       2       0       0       0
  4162 ;;      Locals:         0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0
  4164 ;;      Totals:         0       2       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:   11
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_in_low_int
  4172 ;;		_in_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text21
  4177  001C82                     __ptext21:
  4178                           	opt stack 0
  4179  001C82                     _in_high_int:
  4180                           	opt stack 16
  4181                           
  4182                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;incstack = 0
  4186  001C82  0E00               	movlw	0
  4187  001C84  AEF2               	btfss	intcon,7,c	;volatile
  4188  001C86  0E01               	movlw	1
  4189  001C88  0100               	movlb	0	; () banked
  4190  001C8A  6FD3               	movwf	?_in_high_int& (0+255),b
  4191  001C8C  0100               	movlb	0	; () banked
  4192  001C8E  6BD4               	clrf	(?_in_high_int+1)& (0+255),b
  4193  001C90  0012               	return	
  4194  001C92                     __end_of_in_high_int:
  4195                           	opt stack 0
  4196                           tblptru	equ	0xFF8
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           postinc0	equ	0xFEE
  4201                           wreg	equ	0xFE8
  4202                           indf1	equ	0xFE7
  4203                           fsr1h	equ	0xFE2
  4204                           fsr1l	equ	0xFE1
  4205                           indf2	equ	0xFDF
  4206                           postinc2	equ	0xFDE
  4207                           postdec2	equ	0xFDD
  4208                           fsr2h	equ	0xFDA
  4209                           fsr2l	equ	0xFD9
  4210                           status	equ	0xFD8
  4211                           
  4212 ;; *************** function _check_msg *****************
  4213 ;; Defined at:
  4214 ;;		line 220 in file "src/messages.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4217 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4229 ;;      Params:         0       2       0       0       0
  4230 ;;      Locals:         0       0       0       0       0
  4231 ;;      Temps:          0       1       0       0       0
  4232 ;;      Totals:         0       3       0       0       0
  4233 ;;Total ram usage:        3 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:   11
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_block_on_To_msgqueues
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text22
  4244  001AA6                     __ptext22:
  4245                           	opt stack 0
  4246  001AA6                     _check_msg:
  4247                           	opt stack 18
  4248                           
  4249                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;incstack = 0
  4253  001AA6  0100               	movlb	0	; () banked
  4254  001AA8  EE20 F035          	lfsr	2,53
  4255  001AAC  0100               	movlb	0	; () banked
  4256  001AAE  51D3               	movf	check_msg@qptr& (0+255),w,b
  4257  001AB0  26D9               	addwf	fsr2l,f,c
  4258  001AB2  0100               	movlb	0	; () banked
  4259  001AB4  51D4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4260  001AB6  22DA               	addwfc	fsr2h,f,c
  4261  001AB8  50DF               	movf	indf2,w,c
  4262  001ABA  0100               	movlb	0	; () banked
  4263  001ABC  6FD5               	movwf	??_check_msg& (0+255),b
  4264  001ABE  0100               	movlb	0	; () banked
  4265  001AC0  51D5               	movf	??_check_msg& (0+255),w,b
  4266  001AC2  0D0D               	mullw	13
  4267  001AC4  50F3               	movf	prodl,w,c
  4268  001AC6  0100               	movlb	0	; () banked
  4269  001AC8  25D3               	addwf	check_msg@qptr& (0+255),w,b
  4270  001ACA  6ED9               	movwf	fsr2l,c
  4271  001ACC  50F4               	movf	prodh,w,c
  4272  001ACE  0100               	movlb	0	; () banked
  4273  001AD0  21D4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4274  001AD2  6EDA               	movwf	fsr2h,c
  4275  001AD4  50DF               	movf	indf2,w,c
  4276  001AD6  0012               	return	
  4277  001AD8                     __end_of_check_msg:
  4278                           	opt stack 0
  4279                           tblptru	equ	0xFF8
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           indf1	equ	0xFE7
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function _Delay1KTCYx *****************
  4296 ;; Defined at:
  4297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  unit            1    wreg     unsigned char 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  unit            1   29[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;		None               void
  4304 ;; Registers used:
  4305 ;;		wreg
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4311 ;;      Params:         0       0       0       0       0
  4312 ;;      Locals:         0       1       0       0       0
  4313 ;;      Temps:          0       0       0       0       0
  4314 ;;      Totals:         0       1       0       0       0
  4315 ;;Total ram usage:        1 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:   11
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_block_on_To_msgqueues
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text23
  4326  001C4A                     __ptext23:
  4327                           	opt stack 0
  4328  001C4A                     _Delay1KTCYx:
  4329                           	opt stack 18
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;incstack = 0
  4333                           ;Delay1KTCYx@unit stored from wreg
  4334  001C4A  0100               	movlb	0	; () banked
  4335  001C4C  6FD3               	movwf	Delay1KTCYx@unit& (0+255),b
  4336  001C4E                     l730:
  4337                           
  4338                           ; BSR set to: 0
  4339                           
  4340                           ; BSR set to: 0
  4341  001C4E  0EFA               	movlw	250
  4342  001C50                     u2297:
  4343  001C50  F000               	nop	
  4344  001C52  2EE8               	decfsz	wreg,f,c
  4345  001C54  D7FD               	goto	u2297
  4346  001C56  0100               	movlb	0	; () banked
  4347  001C58  2FD3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4348  001C5A  D7F9               	goto	l730
  4349  001C5C  0012               	return	
  4350  001C5E                     __end_of_Delay1KTCYx:
  4351                           	opt stack 0
  4352                           tblptru	equ	0xFF8
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           indf1	equ	0xFE7
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           postinc2	equ	0xFDE
  4363                           postdec2	equ	0xFDD
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function _WriteTimer1 *****************
  4369 ;; Defined at:
  4370 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  timer1          2   29[BANK0 ] unsigned int 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  timer           2   31[BANK0 ] struct Timers
  4375 ;; Return value:  Size  Location     Type
  4376 ;;		None               void
  4377 ;; Registers used:
  4378 ;;		None
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4384 ;;      Params:         0       2       0       0       0
  4385 ;;      Locals:         0       2       0       0       0
  4386 ;;      Temps:          0       0       0       0       0
  4387 ;;      Totals:         0       4       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:   11
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text24
  4399  001C5E                     __ptext24:
  4400                           	opt stack 0
  4401  001C5E                     _WriteTimer1:
  4402                           	opt stack 19
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;incstack = 0
  4406  001C5E  C0D3  F0D5         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4407  001C62  C0D4  F0D6         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4408  001C66  C0D6  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4409  001C6A  C0D5  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4410  001C6E  0012               	return	
  4411  001C70                     __end_of_WriteTimer1:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           postinc0	equ	0xFEE
  4418                           wreg	equ	0xFE8
  4419                           indf1	equ	0xFE7
  4420                           fsr1h	equ	0xFE2
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           postdec2	equ	0xFDD
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _ToMainLow_recvmsg *****************
  4430 ;; Defined at:
  4431 ;;		line 112 in file "src/messages.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  maxlength       1    wreg     unsigned char 
  4434 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  4435 ;;		 -> main@msgtype(1), 
  4436 ;;  data            2   14[BANK1 ] PTR void 
  4437 ;;		 -> main@msgbuffer(11), 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  maxlength       1   41[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      char 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4449 ;;      Params:         0       0       4       0       0
  4450 ;;      Locals:         0       1       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         0       1       4       0       0
  4453 ;;Total ram usage:        5 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:   13
  4456 ;; This function calls:
  4457 ;;		_recv_msg
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text25
  4464  001972                     __ptext25:
  4465                           	opt stack 0
  4466  001972                     _ToMainLow_recvmsg:
  4467                           	opt stack 17
  4468                           
  4469                           ;incstack = 0
  4470                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4471  001972  0100               	movlb	0	; () banked
  4472  001974  6FDF               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4476  001976  0100               	movlb	0	; () banked
  4477  001978  0E00               	movlw	high _ToMainLow_MQ
  4478  00197A  0101               	movlb	1	; () banked
  4479  00197C  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  4480  00197E  0100               	movlb	0	; () banked
  4481  001980  0E80               	movlw	low _ToMainLow_MQ
  4482  001982  0101               	movlb	1	; () banked
  4483  001984  6F00               	movwf	recv_msg@qptr& (0+255),b
  4484  001986  C0DF  F102         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4485  00198A  0101               	movlb	1	; () banked
  4486  00198C  C10D  F104         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4487  001990  0101               	movlb	1	; () banked
  4488  001992  C10C  F103         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4489  001996  0101               	movlb	1	; () banked
  4490  001998  C10F  F106         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4491  00199C  0101               	movlb	1	; () banked
  4492  00199E  C10E  F105         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4493  0019A2  ECE5  F005         	call	_recv_msg	;wreg free
  4494  0019A6  0012               	return	
  4495  0019A8                     __end_of_ToMainLow_recvmsg:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           intcon	equ	0xFF2
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           indf1	equ	0xFE7
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           indf2	equ	0xFDF
  4507                           postinc2	equ	0xFDE
  4508                           postdec2	equ	0xFDD
  4509                           fsr2h	equ	0xFDA
  4510                           fsr2l	equ	0xFD9
  4511                           status	equ	0xFD8
  4512                           
  4513 ;; *************** function _ToMainHigh_recvmsg *****************
  4514 ;; Defined at:
  4515 ;;		line 135 in file "src/messages.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  maxlength       1    wreg     unsigned char 
  4518 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  4519 ;;		 -> main@msgtype(1), 
  4520 ;;  data            2   14[BANK1 ] PTR void 
  4521 ;;		 -> main@msgbuffer(11), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  maxlength       1   41[BANK0 ] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      char 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4533 ;;      Params:         0       0       4       0       0
  4534 ;;      Locals:         0       1       0       0       0
  4535 ;;      Temps:          0       0       0       0       0
  4536 ;;      Totals:         0       1       4       0       0
  4537 ;;Total ram usage:        5 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:   13
  4540 ;; This function calls:
  4541 ;;		_recv_msg
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text26
  4548  0019A8                     __ptext26:
  4549                           	opt stack 0
  4550  0019A8                     _ToMainHigh_recvmsg:
  4551                           	opt stack 17
  4552                           
  4553                           ;incstack = 0
  4554                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4555  0019A8  0100               	movlb	0	; () banked
  4556  0019AA  6FDF               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4560  0019AC  0101               	movlb	1	; () banked
  4561  0019AE  0E01               	movlw	high _ToMainHigh_MQ
  4562  0019B0  0101               	movlb	1	; () banked
  4563  0019B2  6F01               	movwf	(recv_msg@qptr+1)& (0+255),b
  4564  0019B4  0101               	movlb	1	; () banked
  4565  0019B6  0EB4               	movlw	low _ToMainHigh_MQ
  4566  0019B8  0101               	movlb	1	; () banked
  4567  0019BA  6F00               	movwf	recv_msg@qptr& (0+255),b
  4568  0019BC  C0DF  F102         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4569  0019C0  0101               	movlb	1	; () banked
  4570  0019C2  C10D  F104         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4571  0019C6  0101               	movlb	1	; () banked
  4572  0019C8  C10C  F103         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4573  0019CC  0101               	movlb	1	; () banked
  4574  0019CE  C10F  F106         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4575  0019D2  0101               	movlb	1	; () banked
  4576  0019D4  C10E  F105         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4577  0019D8  ECE5  F005         	call	_recv_msg	;wreg free
  4578  0019DC  0012               	return	
  4579  0019DE                     __end_of_ToMainHigh_recvmsg:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           indf1	equ	0xFE7
  4588                           fsr1h	equ	0xFE2
  4589                           fsr1l	equ	0xFE1
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _recv_msg *****************
  4598 ;; Defined at:
  4599 ;;		line 63 in file "src/messages.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4602 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4603 ;;  maxlength       1    2[BANK1 ] unsigned char 
  4604 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  4605 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4606 ;;  data            2    5[BANK1 ] PTR void 
  4607 ;;		 -> NULL(0), main@msgbuffer(11), 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  4610 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4611 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4612 ;;  tlength         2    8[BANK1 ] unsigned int 
  4613 ;;  slot            1    7[BANK1 ] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      char 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4623 ;;      Params:         0       0       7       0       0
  4624 ;;      Locals:         0       0       5       0       0
  4625 ;;      Temps:          0       2       0       0       0
  4626 ;;      Totals:         0       2      12       0       0
  4627 ;;Total ram usage:       14 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:   12
  4630 ;; This function calls:
  4631 ;;		_memcpy
  4632 ;; This function is called by:
  4633 ;;		_ToMainLow_recvmsg
  4634 ;;		_ToMainHigh_recvmsg
  4635 ;;		_FromMainHigh_recvmsg
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text27
  4640  000BCA                     __ptext27:
  4641                           	opt stack 0
  4642  000BCA                     _recv_msg:
  4643                           	opt stack 17
  4644                           
  4645                           ;messages.c: 64: unsigned char slot;
  4646                           ;messages.c: 68: msg *qmsg;
  4647                           ;messages.c: 69: size_t tlength;
  4648                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4649                           
  4650                           ;incstack = 0
  4651  000BCA  0101               	movlb	1	; () banked
  4652  000BCC  EE20 F035          	lfsr	2,53
  4653  000BD0  0101               	movlb	1	; () banked
  4654  000BD2  5100               	movf	recv_msg@qptr& (0+255),w,b
  4655  000BD4  26D9               	addwf	fsr2l,f,c
  4656  000BD6  0101               	movlb	1	; () banked
  4657  000BD8  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4658  000BDA  22DA               	addwfc	fsr2h,f,c
  4659  000BDC  50DF               	movf	indf2,w,c
  4660  000BDE  0101               	movlb	1	; () banked
  4661  000BE0  6F07               	movwf	recv_msg@slot& (0+255),b
  4662                           
  4663                           ; BSR set to: 1
  4664                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4665  000BE2  0101               	movlb	1	; () banked
  4666  000BE4  5107               	movf	recv_msg@slot& (0+255),w,b
  4667  000BE6  0D0D               	mullw	13
  4668  000BE8  50F3               	movf	prodl,w,c
  4669  000BEA  0101               	movlb	1	; () banked
  4670  000BEC  2500               	addwf	recv_msg@qptr& (0+255),w,b
  4671  000BEE  0101               	movlb	1	; () banked
  4672  000BF0  6F0A               	movwf	recv_msg@qmsg& (0+255),b
  4673  000BF2  50F4               	movf	prodh,w,c
  4674  000BF4  0101               	movlb	1	; () banked
  4675  000BF6  2101               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4676  000BF8  0101               	movlb	1	; () banked
  4677  000BFA  6F0B               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4678                           
  4679                           ; BSR set to: 1
  4680                           ;messages.c: 74: if (qmsg->full == 1) {
  4681  000BFC  0E01               	movlw	1
  4682  000BFE  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4683  000C02  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4684  000C06  62DF               	cpfseq	indf2,c
  4685  000C08  D06F               	goto	l3097
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4689  000C0A  0101               	movlb	1	; () banked
  4690  000C0C  EE20 F001          	lfsr	2,1
  4691  000C10  0101               	movlb	1	; () banked
  4692  000C12  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4693  000C14  26D9               	addwf	fsr2l,f,c
  4694  000C16  0101               	movlb	1	; () banked
  4695  000C18  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4696  000C1A  22DA               	addwfc	fsr2h,f,c
  4697  000C1C  50DF               	movf	indf2,w,c
  4698  000C1E  0101               	movlb	1	; () banked
  4699  000C20  5D02               	subwf	recv_msg@maxlength& (0+255),w,b
  4700  000C22  B0D8               	btfsc	status,0,c
  4701  000C24  D002               	goto	l3081
  4702                           
  4703                           ; BSR set to: 1
  4704                           ;messages.c: 77: return (-3);
  4705  000C26  0EFD               	movlw	253
  4706  000C28  0012               	return	
  4707  000C2A                     l3081:
  4708                           
  4709                           ; BSR set to: 1
  4710                           ;messages.c: 78: }
  4711                           ;messages.c: 80: tlength = qmsg->length;
  4712  000C2A  0101               	movlb	1	; () banked
  4713  000C2C  EE20 F001          	lfsr	2,1
  4714  000C30  0101               	movlb	1	; () banked
  4715  000C32  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4716  000C34  26D9               	addwf	fsr2l,f,c
  4717  000C36  0101               	movlb	1	; () banked
  4718  000C38  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4719  000C3A  22DA               	addwfc	fsr2h,f,c
  4720  000C3C  50DF               	movf	indf2,w,c
  4721  000C3E  0100               	movlb	0	; () banked
  4722  000C40  6FDD               	movwf	??_recv_msg& (0+255),b
  4723  000C42  0100               	movlb	0	; () banked
  4724  000C44  51DD               	movf	??_recv_msg& (0+255),w,b
  4725  000C46  0101               	movlb	1	; () banked
  4726  000C48  6F08               	movwf	recv_msg@tlength& (0+255),b
  4727  000C4A  0101               	movlb	1	; () banked
  4728  000C4C  6B09               	clrf	(recv_msg@tlength+1)& (0+255),b
  4729                           
  4730                           ; BSR set to: 1
  4731                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4732  000C4E  0101               	movlb	1	; () banked
  4733  000C50  0100               	movlb	0	; () banked
  4734  000C52  C106  F0D4         	movff	recv_msg@data+1,memcpy@d1+1
  4735  000C56  0101               	movlb	1	; () banked
  4736  000C58  0100               	movlb	0	; () banked
  4737  000C5A  C105  F0D3         	movff	recv_msg@data,memcpy@d1
  4738  000C5E  0E03               	movlw	3
  4739  000C60  0101               	movlb	1	; () banked
  4740  000C62  250A               	addwf	recv_msg@qmsg& (0+255),w,b
  4741  000C64  0100               	movlb	0	; () banked
  4742  000C66  6FDD               	movwf	??_recv_msg& (0+255),b
  4743  000C68  0E00               	movlw	0
  4744  000C6A  0101               	movlb	1	; () banked
  4745  000C6C  210B               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4746  000C6E  0100               	movlb	0	; () banked
  4747  000C70  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  4748  000C72  C0DD  F0D5         	movff	??_recv_msg,memcpy@s1
  4749  000C76  C0DE  F0D6         	movff	??_recv_msg+1,memcpy@s1+1
  4750  000C7A  C108  F0D7         	movff	recv_msg@tlength,memcpy@n
  4751  000C7E  C109  F0D8         	movff	recv_msg@tlength+1,memcpy@n+1
  4752  000C82  ECCE  F00B         	call	_memcpy	;wreg free
  4753                           
  4754                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4755  000C86  0101               	movlb	1	; () banked
  4756  000C88  EE20 F035          	lfsr	2,53
  4757  000C8C  0101               	movlb	1	; () banked
  4758  000C8E  5100               	movf	recv_msg@qptr& (0+255),w,b
  4759  000C90  26D9               	addwf	fsr2l,f,c
  4760  000C92  0101               	movlb	1	; () banked
  4761  000C94  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4762  000C96  22DA               	addwfc	fsr2h,f,c
  4763  000C98  0101               	movlb	1	; () banked
  4764  000C9A  EE10 F035          	lfsr	1,53
  4765  000C9E  0101               	movlb	1	; () banked
  4766  000CA0  5100               	movf	recv_msg@qptr& (0+255),w,b
  4767  000CA2  26E1               	addwf	fsr1l,f,c
  4768  000CA4  0101               	movlb	1	; () banked
  4769  000CA6  5101               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4770  000CA8  22E2               	addwfc	fsr1h,f,c
  4771  000CAA  50E7               	movf	indf1,w,c
  4772  000CAC  0100               	movlb	0	; () banked
  4773  000CAE  6FDD               	movwf	??_recv_msg& (0+255),b
  4774  000CB0  0100               	movlb	0	; () banked
  4775  000CB2  29DD               	incf	??_recv_msg& (0+255),w,b
  4776  000CB4  0B03               	andlw	3
  4777  000CB6  6EDF               	movwf	indf2,c
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4781  000CB8  0101               	movlb	1	; () banked
  4782  000CBA  EE20 F002          	lfsr	2,2
  4783  000CBE  0101               	movlb	1	; () banked
  4784  000CC0  510A               	movf	recv_msg@qmsg& (0+255),w,b
  4785  000CC2  26D9               	addwf	fsr2l,f,c
  4786  000CC4  0101               	movlb	1	; () banked
  4787  000CC6  510B               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4788  000CC8  22DA               	addwfc	fsr2h,f,c
  4789  000CCA  C103  FFE1         	movff	recv_msg@msgtype,fsr1l
  4790  000CCE  C104  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4791  000CD2  CFDF FFE7          	movff	indf2,indf1
  4792                           
  4793                           ; BSR set to: 1
  4794                           ;messages.c: 91: qmsg->full = 0;
  4795  000CD6  C10A  FFD9         	movff	recv_msg@qmsg,fsr2l
  4796  000CDA  C10B  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4797  000CDE  0E00               	movlw	0
  4798  000CE0  6EDF               	movwf	indf2,c
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;messages.c: 92: return (tlength);
  4802  000CE2  0101               	movlb	1	; () banked
  4803  000CE4  5108               	movf	recv_msg@tlength& (0+255),w,b
  4804  000CE6  0012               	return	
  4805  000CE8                     l3097:
  4806                           
  4807                           ; BSR set to: 1
  4808                           ;messages.c: 94: return (-4);
  4809  000CE8  0EFC               	movlw	252
  4810  000CEA  0012               	return	
  4811  000CEC                     __end_of_recv_msg:
  4812                           	opt stack 0
  4813                           tblptru	equ	0xFF8
  4814                           prodh	equ	0xFF4
  4815                           prodl	equ	0xFF3
  4816                           intcon	equ	0xFF2
  4817                           postinc0	equ	0xFEE
  4818                           wreg	equ	0xFE8
  4819                           indf1	equ	0xFE7
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           indf2	equ	0xFDF
  4823                           postinc2	equ	0xFDE
  4824                           postdec2	equ	0xFDD
  4825                           fsr2h	equ	0xFDA
  4826                           fsr2l	equ	0xFD9
  4827                           status	equ	0xFD8
  4828                           
  4829 ;; *************** function _memcpy *****************
  4830 ;; Defined at:
  4831 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  d1              2   29[BANK0 ] PTR void 
  4834 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4835 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4836 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4837 ;;  s1              2   31[BANK0 ] PTR const void 
  4838 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4839 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4840 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  4841 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4842 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  4843 ;;  n               2   33[BANK0 ] unsigned int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  4846 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4847 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4848 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  4849 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4850 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  4851 ;;  d               2   35[BANK0 ] PTR unsigned char 
  4852 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4853 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4854 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  2   29[BANK0 ] PTR void 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4864 ;;      Params:         0       6       0       0       0
  4865 ;;      Locals:         0       4       0       0       0
  4866 ;;      Temps:          0       0       0       0       0
  4867 ;;      Totals:         0      10       0       0       0
  4868 ;;Total ram usage:       10 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:   11
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_send_msg
  4875 ;;		_recv_msg
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text28
  4880  00179C                     __ptext28:
  4881                           	opt stack 0
  4882  00179C                     _memcpy:
  4883                           	opt stack 16
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;incstack = 0
  4887  00179C  0100               	movlb	0	; () banked
  4888  00179E  C0D6  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  4889  0017A2  0100               	movlb	0	; () banked
  4890  0017A4  C0D5  F0DB         	movff	memcpy@s1,memcpy@s
  4891  0017A8  0100               	movlb	0	; () banked
  4892  0017AA  C0D4  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  4893  0017AE  0100               	movlb	0	; () banked
  4894  0017B0  C0D3  F0D9         	movff	memcpy@d1,memcpy@d
  4895  0017B4  D010               	goto	l3009
  4896  0017B6                     l3003:
  4897                           
  4898                           ; BSR set to: 0
  4899  0017B6  C0DB  FFD9         	movff	memcpy@s,fsr2l
  4900  0017BA  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  4901  0017BE  C0D9  FFE1         	movff	memcpy@d,fsr1l
  4902  0017C2  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  4903  0017C6  CFDF FFE7          	movff	indf2,indf1
  4904                           
  4905                           ; BSR set to: 0
  4906  0017CA  0100               	movlb	0	; () banked
  4907  0017CC  4BDB               	infsnz	memcpy@s& (0+255),f,b
  4908  0017CE  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  4909                           
  4910                           ; BSR set to: 0
  4911  0017D0  0100               	movlb	0	; () banked
  4912  0017D2  4BD9               	infsnz	memcpy@d& (0+255),f,b
  4913  0017D4  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  4914  0017D6                     l3009:
  4915                           
  4916                           ; BSR set to: 0
  4917  0017D6  0100               	movlb	0	; () banked
  4918  0017D8  07D7               	decf	memcpy@n& (0+255),f,b
  4919  0017DA  A0D8               	btfss	status,0,c
  4920  0017DC  07D8               	decf	(memcpy@n+1)& (0+255),f,b
  4921  0017DE  0100               	movlb	0	; () banked
  4922  0017E0  29D7               	incf	memcpy@n& (0+255),w,b
  4923  0017E2  B4D8               	btfsc	status,2,c
  4924  0017E4  29D8               	incf	(memcpy@n+1)& (0+255),w,b
  4925  0017E6  B4D8               	btfsc	status,2,c
  4926                           
  4927                           ; BSR set to: 0
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;	Return value of _memcpy is never used
  4931  0017E8  0012               	return	
  4932  0017EA  D7E5               	goto	l3003
  4933  0017EC                     __end_of_memcpy:
  4934                           	opt stack 0
  4935                           tblptru	equ	0xFF8
  4936                           prodh	equ	0xFF4
  4937                           prodl	equ	0xFF3
  4938                           intcon	equ	0xFF2
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           indf1	equ	0xFE7
  4942                           fsr1h	equ	0xFE2
  4943                           fsr1l	equ	0xFE1
  4944                           indf2	equ	0xFDF
  4945                           postinc2	equ	0xFDE
  4946                           postdec2	equ	0xFDD
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _OpenUSART *****************
  4952 ;; Defined at:
  4953 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  config          1    wreg     unsigned char 
  4956 ;;  spbrg           2   29[BANK0 ] unsigned int 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  config          1   34[BANK0 ] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;		None               void
  4961 ;; Registers used:
  4962 ;;		wreg, status,2
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4968 ;;      Params:         0       2       0       0       0
  4969 ;;      Locals:         0       1       0       0       0
  4970 ;;      Temps:          0       3       0       0       0
  4971 ;;      Totals:         0       6       0       0       0
  4972 ;;Total ram usage:        6 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:   11
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_main
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text29
  4983  0014CA                     __ptext29:
  4984                           	opt stack 0
  4985  0014CA                     _OpenUSART:
  4986                           	opt stack 19
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;incstack = 0
  4990                           ;OpenUSART@config stored from wreg
  4991  0014CA  0100               	movlb	0	; () banked
  4992  0014CC  6FD8               	movwf	OpenUSART@config& (0+255),b
  4993                           
  4994                           ; BSR set to: 0
  4995  0014CE  0E00               	movlw	0
  4996  0014D0  6EAC               	movwf	4012,c	;volatile
  4997  0014D2  0E00               	movlw	0
  4998  0014D4  6EAB               	movwf	4011,c	;volatile
  4999                           
  5000                           ; BSR set to: 0
  5001  0014D6  0100               	movlb	0	; () banked
  5002  0014D8  B1D8               	btfsc	OpenUSART@config& (0+255),0,b
  5003                           
  5004                           ; BSR set to: 0
  5005  0014DA  88AC               	bsf	4012,4,c	;volatile
  5006                           
  5007                           ; BSR set to: 0
  5008                           
  5009                           ; BSR set to: 0
  5010  0014DC  0100               	movlb	0	; () banked
  5011  0014DE  A3D8               	btfss	OpenUSART@config& (0+255),1,b
  5012  0014E0  D002               	goto	l2717
  5013                           
  5014                           ; BSR set to: 0
  5015  0014E2  8CAC               	bsf	4012,6,c	;volatile
  5016  0014E4  8CAB               	bsf	4011,6,c	;volatile
  5017  0014E6                     l2717:
  5018                           
  5019                           ; BSR set to: 0
  5020  0014E6  0100               	movlb	0	; () banked
  5021  0014E8  B5D8               	btfsc	OpenUSART@config& (0+255),2,b
  5022                           
  5023                           ; BSR set to: 0
  5024  0014EA  8EAC               	bsf	4012,7,c	;volatile
  5025                           
  5026                           ; BSR set to: 0
  5027                           
  5028                           ; BSR set to: 0
  5029  0014EC  0100               	movlb	0	; () banked
  5030  0014EE  A7D8               	btfss	OpenUSART@config& (0+255),3,b
  5031  0014F0  D002               	goto	l482
  5032                           
  5033                           ; BSR set to: 0
  5034  0014F2  88AB               	bsf	4011,4,c	;volatile
  5035  0014F4  D001               	goto	l2725
  5036  0014F6                     l482:
  5037                           
  5038                           ; BSR set to: 0
  5039  0014F6  8AAB               	bsf	4011,5,c	;volatile
  5040  0014F8                     l2725:
  5041                           
  5042                           ; BSR set to: 0
  5043  0014F8  0100               	movlb	0	; () banked
  5044  0014FA  B9D8               	btfsc	OpenUSART@config& (0+255),4,b
  5045                           
  5046                           ; BSR set to: 0
  5047  0014FC  84AC               	bsf	4012,2,c	;volatile
  5048                           
  5049                           ; BSR set to: 0
  5050  0014FE  989E               	bcf	3998,4,c	;volatile
  5051                           
  5052                           ; BSR set to: 0
  5053  001500  0100               	movlb	0	; () banked
  5054  001502  BBD8               	btfsc	OpenUSART@config& (0+255),5,b
  5055                           
  5056                           ; BSR set to: 0
  5057  001504  86AB               	bsf	4011,3,c	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060                           
  5061                           ; BSR set to: 0
  5062  001506  0100               	movlb	0	; () banked
  5063  001508  ADD8               	btfss	OpenUSART@config& (0+255),6,b
  5064  00150A  D002               	goto	l486
  5065                           
  5066                           ; BSR set to: 0
  5067  00150C  8A9D               	bsf	3997,5,c	;volatile
  5068  00150E  D001               	goto	l487
  5069  001510                     l486:
  5070                           
  5071                           ; BSR set to: 0
  5072  001510  9A9D               	bcf	3997,5,c	;volatile
  5073  001512                     l487:
  5074                           
  5075                           ; BSR set to: 0
  5076  001512  9A9E               	bcf	3998,5,c	;volatile
  5077                           
  5078                           ; BSR set to: 0
  5079  001514  0100               	movlb	0	; () banked
  5080  001516  AFD8               	btfss	OpenUSART@config& (0+255),7,b
  5081  001518  D002               	goto	l488
  5082                           
  5083                           ; BSR set to: 0
  5084  00151A  889D               	bsf	3997,4,c	;volatile
  5085  00151C  D001               	goto	l489
  5086  00151E                     l488:
  5087                           
  5088                           ; BSR set to: 0
  5089  00151E  989D               	bcf	3997,4,c	;volatile
  5090  001520                     l489:
  5091                           
  5092                           ; BSR set to: 0
  5093  001520  C0D3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5094                           
  5095                           ; BSR set to: 0
  5096  001524  0100               	movlb	0	; () banked
  5097  001526  C0D4  F0D5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5098  00152A  C0D5  F0D6         	movff	??_OpenUSART,??_OpenUSART+1
  5099  00152E  0100               	movlb	0	; () banked
  5100  001530  6BD7               	clrf	(??_OpenUSART+2)& (0+255),b
  5101  001532  0100               	movlb	0	; () banked
  5102  001534  51D6               	movf	(??_OpenUSART+1)& (0+255),w,b
  5103  001536  6EB0               	movwf	4016,c	;volatile
  5104                           
  5105                           ; BSR set to: 0
  5106  001538  8AAC               	bsf	4012,5,c	;volatile
  5107                           
  5108                           ; BSR set to: 0
  5109  00153A  8EAB               	bsf	4011,7,c	;volatile
  5110                           
  5111                           ; BSR set to: 0
  5112  00153C  9C94               	bcf	3988,6,c	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115  00153E  8E94               	bsf	3988,7,c	;volatile
  5116                           
  5117                           ; BSR set to: 0
  5118  001540  A8AC               	btfss	4012,4,c	;volatile
  5119  001542  0012               	return	
  5120                           
  5121                           ; BSR set to: 0
  5122  001544  BEAC               	btfsc	4012,7,c	;volatile
  5123  001546  0012               	return	
  5124                           
  5125                           ; BSR set to: 0
  5126  001548  8C94               	bsf	3988,6,c	;volatile
  5127  00154A  0012               	return	
  5128  00154C                     __end_of_OpenUSART:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           intcon	equ	0xFF2
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           indf1	equ	0xFE7
  5137                           fsr1h	equ	0xFE2
  5138                           fsr1l	equ	0xFE1
  5139                           indf2	equ	0xFDF
  5140                           postinc2	equ	0xFDE
  5141                           postdec2	equ	0xFDD
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           
  5146 ;; *************** function _OpenTimer1 *****************
  5147 ;; Defined at:
  5148 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  config          1    wreg     unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  config          1   29[BANK0 ] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;		None               void
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5162 ;;      Params:         0       0       0       0       0
  5163 ;;      Locals:         0       1       0       0       0
  5164 ;;      Temps:          0       0       0       0       0
  5165 ;;      Totals:         0       1       0       0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:   11
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text30
  5177  001AD8                     __ptext30:
  5178                           	opt stack 0
  5179  001AD8                     _OpenTimer1:
  5180                           	opt stack 19
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;incstack = 0
  5184                           ;OpenTimer1@config stored from wreg
  5185  001AD8  0100               	movlb	0	; () banked
  5186  001ADA  6FD3               	movwf	OpenTimer1@config& (0+255),b
  5187                           
  5188                           ; BSR set to: 0
  5189  001ADC  0100               	movlb	0	; () banked
  5190  001ADE  51D3               	movf	OpenTimer1@config& (0+255),w,b
  5191  001AE0  0B7E               	andlw	126
  5192  001AE2  6ECD               	movwf	4045,c	;volatile
  5193                           
  5194                           ; BSR set to: 0
  5195  001AE4  0100               	movlb	0	; () banked
  5196  001AE6  ADD3               	btfss	OpenTimer1@config& (0+255),6,b
  5197  001AE8  D002               	goto	l445
  5198                           
  5199                           ; BSR set to: 0
  5200  001AEA  8ECD               	bsf	4045,7,c	;volatile
  5201  001AEC  D001               	goto	l2697
  5202  001AEE                     l445:
  5203                           
  5204                           ; BSR set to: 0
  5205  001AEE  9ECD               	bcf	4045,7,c	;volatile
  5206  001AF0                     l2697:
  5207                           
  5208                           ; BSR set to: 0
  5209  001AF0  0E00               	movlw	0
  5210  001AF2  6ECF               	movwf	4047,c	;volatile
  5211  001AF4  0E00               	movlw	0
  5212  001AF6  6ECE               	movwf	4046,c	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215  001AF8  909E               	bcf	3998,0,c	;volatile
  5216                           
  5217                           ; BSR set to: 0
  5218  001AFA  0100               	movlb	0	; () banked
  5219  001AFC  AFD3               	btfss	OpenTimer1@config& (0+255),7,b
  5220  001AFE  D002               	goto	l447
  5221                           
  5222                           ; BSR set to: 0
  5223  001B00  809D               	bsf	3997,0,c	;volatile
  5224  001B02  D001               	goto	l448
  5225  001B04                     l447:
  5226                           
  5227                           ; BSR set to: 0
  5228  001B04  909D               	bcf	3997,0,c	;volatile
  5229  001B06                     l448:
  5230                           
  5231                           ; BSR set to: 0
  5232  001B06  80CD               	bsf	4045,0,c	;volatile
  5233                           
  5234                           ; BSR set to: 0
  5235  001B08  0012               	return	
  5236  001B0A                     __end_of_OpenTimer1:
  5237                           	opt stack 0
  5238                           tblptru	equ	0xFF8
  5239                           prodh	equ	0xFF4
  5240                           prodl	equ	0xFF3
  5241                           intcon	equ	0xFF2
  5242                           postinc0	equ	0xFEE
  5243                           wreg	equ	0xFE8
  5244                           indf1	equ	0xFE7
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           postinc2	equ	0xFDE
  5249                           postdec2	equ	0xFDD
  5250                           fsr2h	equ	0xFDA
  5251                           fsr2l	equ	0xFD9
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function _InterruptHandlerLow *****************
  5255 ;; Defined at:
  5256 ;;		line 122 in file "src/interrupts.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;		None               void
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5270 ;;      Params:         0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0
  5272 ;;      Temps:         17       0       0       0       0
  5273 ;;      Totals:        17       0       0       0       0
  5274 ;;Total ram usage:       17 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:   10
  5277 ;; This function calls:
  5278 ;;		_timer1_int_handler
  5279 ;;		_uart_recv_int_handler
  5280 ;;		_uart_trans_int_handler
  5281 ;; This function is called by:
  5282 ;;		Interrupt level 1
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	intcodelo
  5287  000018                     __pintcodelo:
  5288                           	opt stack 0
  5289  000018                     _InterruptHandlerLow:
  5290                           	opt stack 16
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;incstack = 0
  5294  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5295  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5296  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5297  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5298  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5299  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5300  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5301  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5302  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5303  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5304  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5305  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5306  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5307  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5308  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5309  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5310  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5311                           
  5312                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5313  00005C  A09E               	btfss	3998,0,c	;volatile
  5314  00005E  D003               	goto	i1l2883
  5315                           
  5316                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5317  000060  909E               	bcf	3998,0,c	;volatile
  5318                           
  5319                           ;interrupts.c: 126: timer1_int_handler();
  5320  000062  EC7C  F00C         	call	_timer1_int_handler	;wreg free
  5321  000066                     i1l2883:
  5322                           
  5323                           ;interrupts.c: 127: }
  5324                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5325  000066  AA9E               	btfss	3998,5,c	;volatile
  5326  000068  D003               	goto	i1l2889
  5327                           
  5328                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5329  00006A  9A9E               	bcf	3998,5,c	;volatile
  5330                           
  5331                           ;interrupts.c: 132: uart_recv_int_handler();
  5332  00006C  EC1B  F00A         	call	_uart_recv_int_handler	;wreg free
  5333  000070                     i1l2889:
  5334                           
  5335                           ;interrupts.c: 133: }
  5336                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5337  000070  B89E               	btfsc	3998,4,c	;volatile
  5338  000072  A89D               	btfss	3997,4,c	;volatile
  5339  000074  D002               	goto	i1l52
  5340                           
  5341                           ;interrupts.c: 137: uart_trans_int_handler();
  5342  000076  ECA3  F00B         	call	_uart_trans_int_handler	;wreg free
  5343  00007A                     i1l52:
  5344  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5345  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5346  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5347  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5348  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5349  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5350  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5351  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5352  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5353  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5354  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5355  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5356  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5357  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5358  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5359  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5360  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5361  0000BE  0010               	retfie	
  5362  0000C0                     __end_of_InterruptHandlerLow:
  5363                           	opt stack 0
  5364                           pclatu	equ	0xFFB
  5365                           pclath	equ	0xFFA
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           postinc0	equ	0xFEE
  5374                           fsr0h	equ	0xFEA
  5375                           fsr0l	equ	0xFE9
  5376                           wreg	equ	0xFE8
  5377                           indf1	equ	0xFE7
  5378                           fsr1h	equ	0xFE2
  5379                           fsr1l	equ	0xFE1
  5380                           bsr	equ	0xFE0
  5381                           indf2	equ	0xFDF
  5382                           postinc2	equ	0xFDE
  5383                           postdec2	equ	0xFDD
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _uart_trans_int_handler *****************
  5389 ;; Defined at:
  5390 ;;		line 11 in file "src/my_uart.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  data            2   29[COMRAM] PTR unsigned char 
  5395 ;;		 -> NULL(0), 
  5396 ;;  length          1   33[COMRAM] char 
  5397 ;;  curIndex        1   32[COMRAM] unsigned char 
  5398 ;;  msgtype         1   31[COMRAM] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5408 ;;      Params:         0       0       0       0       0
  5409 ;;      Locals:         5       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0
  5411 ;;      Totals:         5       0       0       0       0
  5412 ;;Total ram usage:        5 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    8
  5415 ;; This function calls:
  5416 ;;		_FromMainLow_recvmsg
  5417 ;; This function is called by:
  5418 ;;		_InterruptHandlerLow
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text32
  5423  001746                     __ptext32:
  5424                           	opt stack 0
  5425  001746                     _uart_trans_int_handler:
  5426                           	opt stack 17
  5427                           
  5428                           ;my_uart.c: 13: unsigned char* data = (0);
  5429                           
  5430                           ;incstack = 0
  5431  001746  0E00               	movlw	0
  5432  001748  6E1F               	movwf	uart_trans_int_handler@data+1,c
  5433  00174A  0E00               	movlw	0
  5434  00174C  6E1E               	movwf	uart_trans_int_handler@data,c
  5435                           
  5436                           ;my_uart.c: 14: unsigned char msgtype;
  5437                           ;my_uart.c: 15: unsigned char curIndex;
  5438                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5439  00174E  0E00               	movlw	high uart_trans_int_handler@msgtype
  5440  001750  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5441  001752  0E20               	movlw	low uart_trans_int_handler@msgtype
  5442  001754  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5443  001756  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5444  00175A  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5445  00175E  0E0A               	movlw	10
  5446  001760  ECB0  F00D         	call	_FromMainLow_recvmsg
  5447  001764  6E22               	movwf	uart_trans_int_handler@length,c
  5448                           
  5449                           ;my_uart.c: 17: if (length < 0) {
  5450  001766  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5451  001768  D017               	goto	i1l359
  5452                           
  5453                           ;my_uart.c: 26: curIndex = 0;
  5454                           
  5455                           ;my_uart.c: 24: }
  5456                           ;my_uart.c: 25: } else {
  5457                           
  5458                           ;my_uart.c: 22: else{
  5459                           
  5460                           ;my_uart.c: 21: }
  5461  00176A  0E00               	movlw	0
  5462  00176C  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5463                           
  5464                           ;my_uart.c: 27: while(curIndex < length){
  5465  00176E  D00D               	goto	i1l2649
  5466  001770                     i1l362:
  5467  001770  A2AC               	btfss	4012,1,c	;volatile
  5468  001772  D7FE               	goto	i1l362
  5469                           
  5470                           ;my_uart.c: 33: TXREG = data[curIndex];
  5471  001774  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5472  001776  0D01               	mullw	1
  5473  001778  50F3               	movf	prodl,w,c
  5474  00177A  241E               	addwf	uart_trans_int_handler@data,w,c
  5475  00177C  6ED9               	movwf	fsr2l,c
  5476  00177E  50F4               	movf	prodh,w,c
  5477  001780  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  5478  001782  6EDA               	movwf	fsr2h,c
  5479  001784  50DF               	movf	indf2,w,c
  5480  001786  6EAD               	movwf	4013,c	;volatile
  5481                           
  5482                           ;my_uart.c: 35: curIndex++;
  5483  001788  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5484  00178A                     i1l2649:
  5485  00178A  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5486  00178C  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5487  00178E  D004               	goto	i1l359
  5488  001790  0AFF               	xorlw	255
  5489  001792  2422               	addwf	uart_trans_int_handler@length,w,c
  5490  001794  B0D8               	btfsc	status,0,c
  5491  001796  D7EC               	goto	i1l362
  5492  001798                     i1l359:
  5493                           
  5494                           ;my_uart.c: 36: }
  5495                           ;my_uart.c: 37: }
  5496                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5497  001798  989D               	bcf	3997,4,c	;volatile
  5498  00179A  0012               	return	
  5499  00179C                     __end_of_uart_trans_int_handler:
  5500                           	opt stack 0
  5501                           pclatu	equ	0xFFB
  5502                           pclath	equ	0xFFA
  5503                           tblptru	equ	0xFF8
  5504                           tblptrh	equ	0xFF7
  5505                           tblptrl	equ	0xFF6
  5506                           tablat	equ	0xFF5
  5507                           prodh	equ	0xFF4
  5508                           prodl	equ	0xFF3
  5509                           intcon	equ	0xFF2
  5510                           postinc0	equ	0xFEE
  5511                           fsr0h	equ	0xFEA
  5512                           fsr0l	equ	0xFE9
  5513                           wreg	equ	0xFE8
  5514                           indf1	equ	0xFE7
  5515                           fsr1h	equ	0xFE2
  5516                           fsr1l	equ	0xFE1
  5517                           bsr	equ	0xFE0
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           postdec2	equ	0xFDD
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _FromMainLow_recvmsg *****************
  5526 ;; Defined at:
  5527 ;;		line 159 in file "src/messages.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  maxlength       1    wreg     unsigned char 
  5530 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5531 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5532 ;;  data            2   26[COMRAM] PTR void 
  5533 ;;		 -> NULL(0), 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  maxlength       1   28[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      char 
  5538 ;; Registers used:
  5539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5545 ;;      Params:         4       0       0       0       0
  5546 ;;      Locals:         1       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0
  5548 ;;      Totals:         5       0       0       0       0
  5549 ;;Total ram usage:        5 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    7
  5552 ;; This function calls:
  5553 ;;		i1_recv_msg
  5554 ;; This function is called by:
  5555 ;;		_uart_trans_int_handler
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text33
  5560  001B60                     __ptext33:
  5561                           	opt stack 0
  5562  001B60                     _FromMainLow_recvmsg:
  5563                           	opt stack 17
  5564                           
  5565                           ;incstack = 0
  5566                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5567  001B60  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5568                           
  5569                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5570  001B62  0101               	movlb	1	; () banked
  5571  001B64  0E01               	movlw	high _FromMainLow_MQ
  5572  001B66  6E0C               	movwf	i1recv_msg@qptr+1,c
  5573  001B68  0101               	movlb	1	; () banked
  5574  001B6A  0E7E               	movlw	low _FromMainLow_MQ
  5575  001B6C  6E0B               	movwf	i1recv_msg@qptr,c
  5576  001B6E  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5577  001B72  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5578  001B76  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5579  001B7A  6A11               	clrf	i1recv_msg@data+1,c
  5580  001B7C  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5581  001B80  ECE0  F007         	call	i1_recv_msg	;wreg free
  5582  001B84  0012               	return	
  5583  001B86                     __end_of_FromMainLow_recvmsg:
  5584                           	opt stack 0
  5585                           pclatu	equ	0xFFB
  5586                           pclath	equ	0xFFA
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           postinc0	equ	0xFEE
  5595                           fsr0h	equ	0xFEA
  5596                           fsr0l	equ	0xFE9
  5597                           wreg	equ	0xFE8
  5598                           indf1	equ	0xFE7
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           bsr	equ	0xFE0
  5602                           indf2	equ	0xFDF
  5603                           postinc2	equ	0xFDE
  5604                           postdec2	equ	0xFDD
  5605                           fsr2h	equ	0xFDA
  5606                           fsr2l	equ	0xFD9
  5607                           status	equ	0xFD8
  5608                           
  5609 ;; *************** function i1_recv_msg *****************
  5610 ;; Defined at:
  5611 ;;		line 63 in file "src/messages.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5614 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5615 ;;  maxlength       1   12[COMRAM] unsigned char 
  5616 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5617 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5618 ;;  data            2   15[COMRAM] PTR void 
  5619 ;;		 -> NULL(0), main@msgbuffer(11), 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5622 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5623 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5624 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5625 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      char 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5635 ;;      Params:         7       0       0       0       0
  5636 ;;      Locals:         5       0       0       0       0
  5637 ;;      Temps:          2       0       0       0       0
  5638 ;;      Totals:        14       0       0       0       0
  5639 ;;Total ram usage:       14 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    6
  5642 ;; This function calls:
  5643 ;;		i1_memcpy
  5644 ;; This function is called by:
  5645 ;;		_FromMainLow_recvmsg
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text34
  5650  000FC0                     __ptext34:
  5651                           	opt stack 0
  5652  000FC0                     i1_recv_msg:
  5653                           	opt stack 17
  5654                           
  5655                           ;messages.c: 64: unsigned char slot;
  5656                           ;messages.c: 68: msg *qmsg;
  5657                           ;messages.c: 69: size_t tlength;
  5658                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5659                           
  5660                           ;incstack = 0
  5661  000FC0  EE20 F035          	lfsr	2,53
  5662  000FC4  500B               	movf	i1recv_msg@qptr,w,c
  5663  000FC6  26D9               	addwf	fsr2l,f,c
  5664  000FC8  500C               	movf	i1recv_msg@qptr+1,w,c
  5665  000FCA  22DA               	addwfc	fsr2h,f,c
  5666  000FCC  50DF               	movf	indf2,w,c
  5667  000FCE  6E14               	movwf	i1recv_msg@slot,c
  5668                           
  5669                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5670  000FD0  5014               	movf	i1recv_msg@slot,w,c
  5671  000FD2  0D0D               	mullw	13
  5672  000FD4  50F3               	movf	prodl,w,c
  5673  000FD6  240B               	addwf	i1recv_msg@qptr,w,c
  5674  000FD8  6E17               	movwf	i1recv_msg@qmsg,c
  5675  000FDA  50F4               	movf	prodh,w,c
  5676  000FDC  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5677  000FDE  6E18               	movwf	i1recv_msg@qmsg+1,c
  5678                           
  5679                           ;messages.c: 74: if (qmsg->full == 1) {
  5680  000FE0  0E01               	movlw	1
  5681  000FE2  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5682  000FE6  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5683  000FEA  62DF               	cpfseq	indf2,c
  5684  000FEC  D050               	goto	i1l2217
  5685                           
  5686                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5687  000FEE  EE20 F001          	lfsr	2,1
  5688  000FF2  5017               	movf	i1recv_msg@qmsg,w,c
  5689  000FF4  26D9               	addwf	fsr2l,f,c
  5690  000FF6  5018               	movf	i1recv_msg@qmsg+1,w,c
  5691  000FF8  22DA               	addwfc	fsr2h,f,c
  5692  000FFA  50DF               	movf	indf2,w,c
  5693  000FFC  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5694  000FFE  B0D8               	btfsc	status,0,c
  5695  001000  D002               	goto	i1l2201
  5696                           
  5697                           ;messages.c: 77: return (-3);
  5698  001002  0EFD               	movlw	253
  5699  001004  0012               	return	
  5700  001006                     i1l2201:
  5701                           
  5702                           ;messages.c: 78: }
  5703                           ;messages.c: 80: tlength = qmsg->length;
  5704  001006  EE20 F001          	lfsr	2,1
  5705  00100A  5017               	movf	i1recv_msg@qmsg,w,c
  5706  00100C  26D9               	addwf	fsr2l,f,c
  5707  00100E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5708  001010  22DA               	addwfc	fsr2h,f,c
  5709  001012  50DF               	movf	indf2,w,c
  5710  001014  6E12               	movwf	??i1_recv_msg& (0+255),c
  5711  001016  5012               	movf	??i1_recv_msg,w,c
  5712  001018  6E15               	movwf	i1recv_msg@tlength,c
  5713  00101A  6A16               	clrf	i1recv_msg@tlength+1,c
  5714                           
  5715                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5716  00101C  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5717  001020  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5718  001024  0E03               	movlw	3
  5719  001026  2417               	addwf	i1recv_msg@qmsg,w,c
  5720  001028  6E12               	movwf	??i1_recv_msg& (0+255),c
  5721  00102A  0E00               	movlw	0
  5722  00102C  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5723  00102E  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5724  001030  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5725  001034  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5726  001038  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5727  00103C  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5728  001040  EC1D  F00C         	call	i1_memcpy	;wreg free
  5729                           
  5730                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5731  001044  EE20 F035          	lfsr	2,53
  5732  001048  500B               	movf	i1recv_msg@qptr,w,c
  5733  00104A  26D9               	addwf	fsr2l,f,c
  5734  00104C  500C               	movf	i1recv_msg@qptr+1,w,c
  5735  00104E  22DA               	addwfc	fsr2h,f,c
  5736  001050  EE10 F035          	lfsr	1,53
  5737  001054  500B               	movf	i1recv_msg@qptr,w,c
  5738  001056  26E1               	addwf	fsr1l,f,c
  5739  001058  500C               	movf	i1recv_msg@qptr+1,w,c
  5740  00105A  22E2               	addwfc	fsr1h,f,c
  5741  00105C  50E7               	movf	indf1,w,c
  5742  00105E  6E12               	movwf	??i1_recv_msg& (0+255),c
  5743  001060  2812               	incf	??i1_recv_msg,w,c
  5744  001062  0B03               	andlw	3
  5745  001064  6EDF               	movwf	indf2,c
  5746                           
  5747                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5748  001066  EE20 F002          	lfsr	2,2
  5749  00106A  5017               	movf	i1recv_msg@qmsg,w,c
  5750  00106C  26D9               	addwf	fsr2l,f,c
  5751  00106E  5018               	movf	i1recv_msg@qmsg+1,w,c
  5752  001070  22DA               	addwfc	fsr2h,f,c
  5753  001072  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5754  001076  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5755  00107A  CFDF FFE7          	movff	indf2,indf1
  5756                           
  5757                           ;messages.c: 91: qmsg->full = 0;
  5758  00107E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5759  001082  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5760  001086  0E00               	movlw	0
  5761  001088  6EDF               	movwf	indf2,c
  5762                           
  5763                           ;messages.c: 92: return (tlength);
  5764  00108A  5015               	movf	i1recv_msg@tlength,w,c
  5765  00108C  0012               	return	
  5766  00108E                     i1l2217:
  5767                           
  5768                           ;messages.c: 94: return (-4);
  5769  00108E  0EFC               	movlw	252
  5770  001090  0012               	return	
  5771  001092                     __end_ofi1_recv_msg:
  5772                           	opt stack 0
  5773                           pclatu	equ	0xFFB
  5774                           pclath	equ	0xFFA
  5775                           tblptru	equ	0xFF8
  5776                           tblptrh	equ	0xFF7
  5777                           tblptrl	equ	0xFF6
  5778                           tablat	equ	0xFF5
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           intcon	equ	0xFF2
  5782                           postinc0	equ	0xFEE
  5783                           fsr0h	equ	0xFEA
  5784                           fsr0l	equ	0xFE9
  5785                           wreg	equ	0xFE8
  5786                           indf1	equ	0xFE7
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           bsr	equ	0xFE0
  5790                           indf2	equ	0xFDF
  5791                           postinc2	equ	0xFDE
  5792                           postdec2	equ	0xFDD
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _uart_recv_int_handler *****************
  5798 ;; Defined at:
  5799 ;;		line 42 in file "src/my_uart.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;		None               void
  5806 ;; Registers used:
  5807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5813 ;;      Params:         0       0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0
  5815 ;;      Temps:          1       0       0       0       0
  5816 ;;      Totals:         1       0       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    8
  5820 ;; This function calls:
  5821 ;;		_ReadUSART
  5822 ;;		i1_ToMainLow_sendmsg
  5823 ;; This function is called by:
  5824 ;;		_InterruptHandlerLow
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text35
  5829  001436                     __ptext35:
  5830                           	opt stack 0
  5831  001436                     _uart_recv_int_handler:
  5832                           	opt stack 17
  5833                           
  5834                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5835                           
  5836                           ;incstack = 0
  5837  001436  AA9E               	btfss	3998,5,c	;volatile
  5838  001438  D03A               	goto	i1l2627
  5839                           
  5840                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5841  00143A  EE20 F004          	lfsr	2,4
  5842  00143E  5049               	movf	_uc_ptr,w,c
  5843  001440  26D9               	addwf	fsr2l,f,c
  5844  001442  504A               	movf	_uc_ptr+1,w,c
  5845  001444  22DA               	addwfc	fsr2h,f,c
  5846  001446  50DF               	movf	indf2,w,c
  5847  001448  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5848  00144A  501B               	movf	??_uart_recv_int_handler,w,c
  5849  00144C  0D01               	mullw	1
  5850  00144E  50F3               	movf	prodl,w,c
  5851  001450  2449               	addwf	_uc_ptr,w,c
  5852  001452  6ED9               	movwf	fsr2l,c
  5853  001454  50F4               	movf	prodh,w,c
  5854  001456  204A               	addwfc	_uc_ptr+1,w,c
  5855  001458  6EDA               	movwf	fsr2h,c
  5856  00145A  EC08  F00E         	call	_ReadUSART	;wreg free
  5857  00145E  6EDF               	movwf	indf2,c
  5858                           
  5859                           ;my_uart.c: 56: uc_ptr->buflen++;
  5860  001460  EE20 F004          	lfsr	2,4
  5861  001464  5049               	movf	_uc_ptr,w,c
  5862  001466  26D9               	addwf	fsr2l,f,c
  5863  001468  504A               	movf	_uc_ptr+1,w,c
  5864  00146A  22DA               	addwfc	fsr2h,f,c
  5865  00146C  2ADF               	incf	indf2,f,c
  5866                           
  5867                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5868  00146E  EE20 F004          	lfsr	2,4
  5869  001472  5049               	movf	_uc_ptr,w,c
  5870  001474  26D9               	addwf	fsr2l,f,c
  5871  001476  504A               	movf	_uc_ptr+1,w,c
  5872  001478  22DA               	addwfc	fsr2h,f,c
  5873  00147A  0E04               	movlw	4
  5874  00147C  62DF               	cpfseq	indf2,c
  5875  00147E  D017               	goto	i1l2627
  5876                           
  5877                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5878  001480  0E20               	movlw	32
  5879  001482  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5880  001484  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5881  001488  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5882  00148C  EE20 F004          	lfsr	2,4
  5883  001490  5049               	movf	_uc_ptr,w,c
  5884  001492  26D9               	addwf	fsr2l,f,c
  5885  001494  504A               	movf	_uc_ptr+1,w,c
  5886  001496  22DA               	addwfc	fsr2h,f,c
  5887  001498  50DF               	movf	indf2,w,c
  5888  00149A  ECC3  F00D         	call	i1_ToMainLow_sendmsg
  5889                           
  5890                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5891  00149E  EE20 F004          	lfsr	2,4
  5892  0014A2  5049               	movf	_uc_ptr,w,c
  5893  0014A4  26D9               	addwf	fsr2l,f,c
  5894  0014A6  504A               	movf	_uc_ptr+1,w,c
  5895  0014A8  22DA               	addwfc	fsr2h,f,c
  5896  0014AA  0E00               	movlw	0
  5897  0014AC  6EDF               	movwf	indf2,c
  5898  0014AE                     i1l2627:
  5899                           
  5900                           ;my_uart.c: 61: }
  5901                           ;my_uart.c: 62: }
  5902                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5903  0014AE  A64C               	btfss	_USART_Status,3,c
  5904  0014B0  0012               	return	
  5905                           
  5906                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5907  0014B2  98AB               	bcf	4011,4,c	;volatile
  5908                           
  5909                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5910  0014B4  88AB               	bsf	4011,4,c	;volatile
  5911                           
  5912                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5913  0014B6  0E1E               	movlw	30
  5914  0014B8  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5915  0014BA  0E00               	movlw	0
  5916  0014BC  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5917  0014BE  0E00               	movlw	0
  5918  0014C0  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5919  0014C2  0E00               	movlw	0
  5920  0014C4  ECC3  F00D         	call	i1_ToMainLow_sendmsg
  5921  0014C8  0012               	return	
  5922  0014CA                     __end_of_uart_recv_int_handler:
  5923                           	opt stack 0
  5924                           pclatu	equ	0xFFB
  5925                           pclath	equ	0xFFA
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           postinc0	equ	0xFEE
  5934                           fsr0h	equ	0xFEA
  5935                           fsr0l	equ	0xFE9
  5936                           wreg	equ	0xFE8
  5937                           indf1	equ	0xFE7
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           bsr	equ	0xFE0
  5941                           indf2	equ	0xFDF
  5942                           postinc2	equ	0xFDE
  5943                           postdec2	equ	0xFDD
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _ReadUSART *****************
  5949 ;; Defined at:
  5950 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  data            1    0[COMRAM] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      unsigned char 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5964 ;;      Params:         0       0       0       0       0
  5965 ;;      Locals:         1       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0
  5967 ;;      Totals:         1       0       0       0       0
  5968 ;;Total ram usage:        1 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    5
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_uart_recv_int_handler
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text36
  5979  001C10                     __ptext36:
  5980                           	opt stack 0
  5981  001C10                     _ReadUSART:
  5982                           	opt stack 19
  5983                           
  5984                           ;incstack = 0
  5985  001C10  0EF2               	movlw	242
  5986  001C12  164C               	andwf	_USART_Status,f,c
  5987  001C14  ACAB               	btfss	4011,6,c	;volatile
  5988  001C16  D003               	goto	i1l500
  5989  001C18  904C               	bcf	_USART_Status,0,c
  5990  001C1A  B0AB               	btfsc	4011,0,c	;volatile
  5991  001C1C  804C               	bsf	_USART_Status,0,c
  5992  001C1E                     i1l500:
  5993  001C1E  B4AB               	btfsc	4011,2,c	;volatile
  5994  001C20  844C               	bsf	_USART_Status,2,c
  5995  001C22  B2AB               	btfsc	4011,1,c	;volatile
  5996  001C24  864C               	bsf	_USART_Status,3,c
  5997  001C26  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5998  001C2A  5001               	movf	ReadUSART@data,w,c
  5999  001C2C  0012               	return	
  6000  001C2E                     __end_of_ReadUSART:
  6001                           	opt stack 0
  6002                           pclatu	equ	0xFFB
  6003                           pclath	equ	0xFFA
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           intcon	equ	0xFF2
  6011                           postinc0	equ	0xFEE
  6012                           fsr0h	equ	0xFEA
  6013                           fsr0l	equ	0xFE9
  6014                           wreg	equ	0xFE8
  6015                           indf1	equ	0xFE7
  6016                           fsr1h	equ	0xFE2
  6017                           fsr1l	equ	0xFE1
  6018                           bsr	equ	0xFE0
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _timer1_int_handler *****************
  6027 ;; Defined at:
  6028 ;;		line 30 in file "src/user_interrupts.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  curPos          2   29[COMRAM] unsigned char [2]
  6033 ;;  result          2    0        unsigned int 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;		None               void
  6036 ;; Registers used:
  6037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6043 ;;      Params:         0       0       0       0       0
  6044 ;;      Locals:         2       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0
  6046 ;;      Totals:         2       0       0       0       0
  6047 ;;Total ram usage:        2 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    9
  6050 ;; This function calls:
  6051 ;;		_sendUARTbyte
  6052 ;;		i1_ToMainLow_sendmsg
  6053 ;;		i1_WriteTimer1
  6054 ;; This function is called by:
  6055 ;;		_InterruptHandlerLow
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text37
  6060  0018F8                     __ptext37:
  6061                           	opt stack 0
  6062  0018F8                     _timer1_int_handler:
  6063                           	opt stack 16
  6064                           
  6065                           ;user_interrupts.c: 31: unsigned int result;
  6066                           ;user_interrupts.c: 39: WriteTimer1(64936);
  6067                           
  6068                           ;incstack = 0
  6069  0018F8  0EFD               	movlw	253
  6070  0018FA  6E02               	movwf	i1WriteTimer1@timer1+1,c
  6071  0018FC  0EA8               	movlw	168
  6072  0018FE  6E01               	movwf	i1WriteTimer1@timer1,c
  6073  001900  EC38  F00E         	call	i1_WriteTimer1	;wreg free
  6074                           
  6075                           ;user_interrupts.c: 41: unsigned char curPos[2];
  6076                           ;user_interrupts.c: 42: curPos[0] = PORTAbits.RA0;
  6077  001904  0E00               	movlw	0
  6078  001906  B080               	btfsc	3968,0,c	;volatile
  6079  001908  0E01               	movlw	1
  6080  00190A  6E1E               	movwf	timer1_int_handler@curPos,c
  6081                           
  6082                           ;user_interrupts.c: 43: curPos[1] = PORTAbits.RA1;
  6083  00190C  0E00               	movlw	0
  6084  00190E  B280               	btfsc	3968,1,c	;volatile
  6085  001910  0E01               	movlw	1
  6086  001912  6E1F               	movwf	timer1_int_handler@curPos+1,c
  6087                           
  6088                           ;user_interrupts.c: 45: sendUARTbyte(PORTAbits.RA0);
  6089  001914  A080               	btfss	3968,0,c	;volatile
  6090  001916  D002               	goto	i1u150_20
  6091  001918  0E01               	movlw	1
  6092  00191A  D001               	goto	i1u150_26
  6093  00191C                     i1u150_20:
  6094  00191C  0E00               	movlw	0
  6095  00191E                     i1u150_26:
  6096  00191E  EC17  F00E         	call	_sendUARTbyte
  6097                           
  6098                           ;user_interrupts.c: 48: ToMainLow_sendmsg(2, 11, (void *)curPos);
  6099  001922  0E0B               	movlw	11
  6100  001924  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6101  001926  0E00               	movlw	high timer1_int_handler@curPos
  6102  001928  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6103  00192A  0E1E               	movlw	low timer1_int_handler@curPos
  6104  00192C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6105  00192E  0E02               	movlw	2
  6106  001930  ECC3  F00D         	call	i1_ToMainLow_sendmsg
  6107  001934  0012               	return	
  6108  001936                     __end_of_timer1_int_handler:
  6109                           	opt stack 0
  6110                           pclatu	equ	0xFFB
  6111                           pclath	equ	0xFFA
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           postinc0	equ	0xFEE
  6120                           fsr0h	equ	0xFEA
  6121                           fsr0l	equ	0xFE9
  6122                           wreg	equ	0xFE8
  6123                           indf1	equ	0xFE7
  6124                           fsr1h	equ	0xFE2
  6125                           fsr1l	equ	0xFE1
  6126                           bsr	equ	0xFE0
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function i1_WriteTimer1 *****************
  6135 ;; Defined at:
  6136 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  timer1          2    0[COMRAM] unsigned int 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  6141 ;; Return value:  Size  Location     Type
  6142 ;;		None               void
  6143 ;; Registers used:
  6144 ;;		None
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6150 ;;      Params:         2       0       0       0       0
  6151 ;;      Locals:         2       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0
  6153 ;;      Totals:         4       0       0       0       0
  6154 ;;Total ram usage:        4 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    5
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_timer1_int_handler
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text38
  6165  001C70                     __ptext38:
  6166                           	opt stack 0
  6167  001C70                     i1_WriteTimer1:
  6168                           	opt stack 19
  6169                           
  6170                           ;incstack = 0
  6171  001C70  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  6172  001C74  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  6173  001C78  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  6174  001C7C  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  6175  001C80  0012               	return	
  6176  001C82                     __end_ofi1_WriteTimer1:
  6177                           	opt stack 0
  6178                           pclatu	equ	0xFFB
  6179                           pclath	equ	0xFFA
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           postinc0	equ	0xFEE
  6188                           fsr0h	equ	0xFEA
  6189                           fsr0l	equ	0xFE9
  6190                           wreg	equ	0xFE8
  6191                           indf1	equ	0xFE7
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           bsr	equ	0xFE0
  6195                           indf2	equ	0xFDF
  6196                           postinc2	equ	0xFDE
  6197                           postdec2	equ	0xFDD
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _sendUARTbyte *****************
  6203 ;; Defined at:
  6204 ;;		line 99 in file "src/my_uart.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  data            1    wreg     unsigned char 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  data            1   26[COMRAM] unsigned char 
  6209 ;;  temp            1   28[COMRAM] unsigned char [1]
  6210 ;;  retval          1   27[COMRAM] char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      enum E4333
  6213 ;; Registers used:
  6214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6220 ;;      Params:         0       0       0       0       0
  6221 ;;      Locals:         3       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0
  6223 ;;      Totals:         3       0       0       0       0
  6224 ;;Total ram usage:        3 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    8
  6227 ;; This function calls:
  6228 ;;		i1_ToMainLow_sendmsg
  6229 ;; This function is called by:
  6230 ;;		_timer1_int_handler
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text39
  6235  001C2E                     __ptext39:
  6236                           	opt stack 0
  6237  001C2E                     _sendUARTbyte:
  6238                           	opt stack 16
  6239                           
  6240                           ;incstack = 0
  6241                           ;sendUARTbyte@data stored from wreg
  6242  001C2E  6E1B               	movwf	sendUARTbyte@data,c
  6243                           
  6244                           ;my_uart.c: 100: unsigned char temp[1];
  6245                           ;my_uart.c: 101: temp[0] = data;
  6246  001C30  C01B  F01D         	movff	sendUARTbyte@data,sendUARTbyte@temp
  6247                           
  6248                           ;my_uart.c: 103: signed char retval = ToMainLow_sendmsg(1, 31, (void *)temp);
  6249  001C34  0E1F               	movlw	31
  6250  001C36  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6251  001C38  0E00               	movlw	high sendUARTbyte@temp
  6252  001C3A  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6253  001C3C  0E1D               	movlw	low sendUARTbyte@temp
  6254  001C3E  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6255  001C40  0E01               	movlw	1
  6256  001C42  ECC3  F00D         	call	i1_ToMainLow_sendmsg
  6257  001C46  6E1C               	movwf	sendUARTbyte@retval,c
  6258  001C48  0012               	return	
  6259  001C4A                     __end_of_sendUARTbyte:
  6260                           	opt stack 0
  6261                           pclatu	equ	0xFFB
  6262                           pclath	equ	0xFFA
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           intcon	equ	0xFF2
  6270                           postinc0	equ	0xFEE
  6271                           fsr0h	equ	0xFEA
  6272                           fsr0l	equ	0xFE9
  6273                           wreg	equ	0xFE8
  6274                           indf1	equ	0xFE7
  6275                           fsr1h	equ	0xFE2
  6276                           fsr1l	equ	0xFE1
  6277                           bsr	equ	0xFE0
  6278                           indf2	equ	0xFDF
  6279                           postinc2	equ	0xFDE
  6280                           postdec2	equ	0xFDD
  6281                           fsr2h	equ	0xFDA
  6282                           fsr2l	equ	0xFD9
  6283                           status	equ	0xFD8
  6284                           
  6285 ;; *************** function i1_ToMainLow_sendmsg *****************
  6286 ;; Defined at:
  6287 ;;		line 103 in file "src/messages.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  length          1    wreg     unsigned char 
  6290 ;;  msgtype         1   22[COMRAM] unsigned char 
  6291 ;;  data            2   23[COMRAM] PTR void 
  6292 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), main@ctrl(2), 
  6293 ;;		 -> main@uc(5), 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  length          1   25[COMRAM] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      char 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6305 ;;      Params:         3       0       0       0       0
  6306 ;;      Locals:         1       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0
  6308 ;;      Totals:         4       0       0       0       0
  6309 ;;Total ram usage:        4 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    7
  6312 ;; This function calls:
  6313 ;;		i1_send_msg
  6314 ;; This function is called by:
  6315 ;;		_uart_recv_int_handler
  6316 ;;		_sendUARTbyte
  6317 ;;		_timer1_int_handler
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text40
  6322  001B86                     __ptext40:
  6323                           	opt stack 0
  6324  001B86                     i1_ToMainLow_sendmsg:
  6325                           	opt stack 17
  6326                           
  6327                           ;incstack = 0
  6328                           ;i1ToMainLow_sendmsg@length stored from wreg
  6329  001B86  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  6330                           
  6331                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6332  001B88  0100               	movlb	0	; () banked
  6333  001B8A  0E00               	movlw	high _ToMainLow_MQ
  6334  001B8C  6E0C               	movwf	i1send_msg@qptr+1,c
  6335  001B8E  0100               	movlb	0	; () banked
  6336  001B90  0E80               	movlw	low _ToMainLow_MQ
  6337  001B92  6E0B               	movwf	i1send_msg@qptr,c
  6338  001B94  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6339  001B98  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6340  001B9C  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6341  001BA0  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6342  001BA4  ECC6  F009         	call	i1_send_msg	;wreg free
  6343  001BA8  0012               	return	
  6344  001BAA                     __end_ofi1_ToMainLow_sendmsg:
  6345                           	opt stack 0
  6346                           pclatu	equ	0xFFB
  6347                           pclath	equ	0xFFA
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           intcon	equ	0xFF2
  6355                           postinc0	equ	0xFEE
  6356                           fsr0h	equ	0xFEA
  6357                           fsr0l	equ	0xFE9
  6358                           wreg	equ	0xFE8
  6359                           indf1	equ	0xFE7
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           bsr	equ	0xFE0
  6363                           indf2	equ	0xFDF
  6364                           postinc2	equ	0xFDE
  6365                           postdec2	equ	0xFDD
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           
  6370 ;; *************** function i1_send_msg *****************
  6371 ;; Defined at:
  6372 ;;		line 24 in file "src/messages.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6375 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6376 ;;  length          1   12[COMRAM] unsigned char 
  6377 ;;  msgtype         1   13[COMRAM] unsigned char 
  6378 ;;  data            2   14[COMRAM] PTR void 
  6379 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6380 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6383 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6384 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6385 ;;  send_msg        2   17[COMRAM] unsigned int 
  6386 ;;  send_msg        1   19[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      char 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6396 ;;      Params:         6       0       0       0       0
  6397 ;;      Locals:         5       0       0       0       0
  6398 ;;      Temps:          1       0       0       0       0
  6399 ;;      Totals:        12       0       0       0       0
  6400 ;;Total ram usage:       12 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    6
  6403 ;; This function calls:
  6404 ;;		i1_memcpy
  6405 ;; This function is called by:
  6406 ;;		i1_ToMainLow_sendmsg
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text41
  6411  00138C                     __ptext41:
  6412                           	opt stack 0
  6413  00138C                     i1_send_msg:
  6414                           	opt stack 17
  6415                           
  6416                           ;messages.c: 25: unsigned char slot;
  6417                           ;messages.c: 27: msg *qmsg;
  6418                           ;messages.c: 28: size_t tlength = length;
  6419                           
  6420                           ;incstack = 0
  6421  00138C  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6422  001390  6A13               	clrf	i1send_msg@tlength+1,c
  6423                           
  6424                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6425  001392  EE20 F034          	lfsr	2,52
  6426  001396  500B               	movf	i1send_msg@qptr,w,c
  6427  001398  26D9               	addwf	fsr2l,f,c
  6428  00139A  500C               	movf	i1send_msg@qptr+1,w,c
  6429  00139C  22DA               	addwfc	fsr2h,f,c
  6430  00139E  50DF               	movf	indf2,w,c
  6431  0013A0  6E14               	movwf	i1send_msg@slot,c
  6432                           
  6433                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6434  0013A2  5014               	movf	i1send_msg@slot,w,c
  6435  0013A4  0D0D               	mullw	13
  6436  0013A6  50F3               	movf	prodl,w,c
  6437  0013A8  240B               	addwf	i1send_msg@qptr,w,c
  6438  0013AA  6E15               	movwf	i1send_msg@qmsg,c
  6439  0013AC  50F4               	movf	prodh,w,c
  6440  0013AE  200C               	addwfc	i1send_msg@qptr+1,w,c
  6441  0013B0  6E16               	movwf	i1send_msg@qmsg+1,c
  6442                           
  6443                           ;messages.c: 41: if (qmsg->full != 0) {
  6444  0013B2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6445  0013B6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6446  0013BA  50DF               	movf	indf2,w,c
  6447  0013BC  B4D8               	btfsc	status,2,c
  6448  0013BE  D002               	goto	i1l2095
  6449                           
  6450                           ;messages.c: 42: return (-1);
  6451  0013C0  0EFF               	movlw	255
  6452  0013C2  0012               	return	
  6453  0013C4                     i1l2095:
  6454                           
  6455                           ;messages.c: 43: }
  6456                           ;messages.c: 46: qmsg->length = length;
  6457  0013C4  EE20 F001          	lfsr	2,1
  6458  0013C8  5015               	movf	i1send_msg@qmsg,w,c
  6459  0013CA  26D9               	addwf	fsr2l,f,c
  6460  0013CC  5016               	movf	i1send_msg@qmsg+1,w,c
  6461  0013CE  22DA               	addwfc	fsr2h,f,c
  6462  0013D0  C00D  FFDF         	movff	i1send_msg@length,indf2
  6463                           
  6464                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6465  0013D4  EE20 F002          	lfsr	2,2
  6466  0013D8  5015               	movf	i1send_msg@qmsg,w,c
  6467  0013DA  26D9               	addwf	fsr2l,f,c
  6468  0013DC  5016               	movf	i1send_msg@qmsg+1,w,c
  6469  0013DE  22DA               	addwfc	fsr2h,f,c
  6470  0013E0  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6471                           
  6472                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6473  0013E4  0E03               	movlw	3
  6474  0013E6  2415               	addwf	i1send_msg@qmsg,w,c
  6475  0013E8  6E01               	movwf	i1memcpy@d1,c
  6476  0013EA  0E00               	movlw	0
  6477  0013EC  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6478  0013EE  6E02               	movwf	i1memcpy@d1+1,c
  6479  0013F0  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6480  0013F4  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6481  0013F8  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6482  0013FC  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6483  001400  EC1D  F00C         	call	i1_memcpy	;wreg free
  6484                           
  6485                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6486  001404  EE20 F034          	lfsr	2,52
  6487  001408  500B               	movf	i1send_msg@qptr,w,c
  6488  00140A  26D9               	addwf	fsr2l,f,c
  6489  00140C  500C               	movf	i1send_msg@qptr+1,w,c
  6490  00140E  22DA               	addwfc	fsr2h,f,c
  6491  001410  EE10 F034          	lfsr	1,52
  6492  001414  500B               	movf	i1send_msg@qptr,w,c
  6493  001416  26E1               	addwf	fsr1l,f,c
  6494  001418  500C               	movf	i1send_msg@qptr+1,w,c
  6495  00141A  22E2               	addwfc	fsr1h,f,c
  6496  00141C  50E7               	movf	indf1,w,c
  6497  00141E  6E11               	movwf	??i1_send_msg& (0+255),c
  6498  001420  2811               	incf	??i1_send_msg,w,c
  6499  001422  0B03               	andlw	3
  6500  001424  6EDF               	movwf	indf2,c
  6501                           
  6502                           ;messages.c: 59: qmsg->full = 1;
  6503  001426  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6504  00142A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6505  00142E  0E01               	movlw	1
  6506  001430  6EDF               	movwf	indf2,c
  6507                           
  6508                           ;messages.c: 60: return (1);
  6509  001432  0E01               	movlw	1
  6510  001434  0012               	return	
  6511  001436                     __end_ofi1_send_msg:
  6512                           	opt stack 0
  6513                           pclatu	equ	0xFFB
  6514                           pclath	equ	0xFFA
  6515                           tblptru	equ	0xFF8
  6516                           tblptrh	equ	0xFF7
  6517                           tblptrl	equ	0xFF6
  6518                           tablat	equ	0xFF5
  6519                           prodh	equ	0xFF4
  6520                           prodl	equ	0xFF3
  6521                           intcon	equ	0xFF2
  6522                           postinc0	equ	0xFEE
  6523                           fsr0h	equ	0xFEA
  6524                           fsr0l	equ	0xFE9
  6525                           wreg	equ	0xFE8
  6526                           indf1	equ	0xFE7
  6527                           fsr1h	equ	0xFE2
  6528                           fsr1l	equ	0xFE1
  6529                           bsr	equ	0xFE0
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           fsr2h	equ	0xFDA
  6534                           fsr2l	equ	0xFD9
  6535                           status	equ	0xFD8
  6536                           
  6537 ;; *************** function i1_memcpy *****************
  6538 ;; Defined at:
  6539 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  d1              2    0[COMRAM] PTR void 
  6542 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6543 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6544 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6545 ;;  s1              2    2[COMRAM] PTR const void 
  6546 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6547 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6548 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6549 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6550 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6551 ;;  n               2    4[COMRAM] unsigned int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6554 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6555 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6556 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  6557 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6558 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6559 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6560 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6561 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6562 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    0[COMRAM] PTR void 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6572 ;;      Params:         6       0       0       0       0
  6573 ;;      Locals:         4       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0
  6575 ;;      Totals:        10       0       0       0       0
  6576 ;;Total ram usage:       10 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    5
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		i1_send_msg
  6583 ;;		i1_recv_msg
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text42
  6588  00183A                     __ptext42:
  6589                           	opt stack 0
  6590  00183A                     i1_memcpy:
  6591                           	opt stack 17
  6592                           
  6593                           ;incstack = 0
  6594  00183A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6595  00183E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6596  001842  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6597  001846  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6598  00184A  D00E               	goto	i1l2067
  6599  00184C                     i1l2061:
  6600  00184C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6601  001850  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6602  001854  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6603  001858  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6604  00185C  CFDF FFE7          	movff	indf2,indf1
  6605  001860  4A09               	infsnz	i1memcpy@s,f,c
  6606  001862  2A0A               	incf	i1memcpy@s+1,f,c
  6607  001864  4A07               	infsnz	i1memcpy@d,f,c
  6608  001866  2A08               	incf	i1memcpy@d+1,f,c
  6609  001868                     i1l2067:
  6610  001868  0605               	decf	i1memcpy@n,f,c
  6611  00186A  A0D8               	btfss	status,0,c
  6612  00186C  0606               	decf	i1memcpy@n+1,f,c
  6613  00186E  2805               	incf	i1memcpy@n& (0+255),w,c
  6614  001870  B4D8               	btfsc	status,2,c
  6615  001872  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6616  001874  B4D8               	btfsc	status,2,c
  6617                           
  6618                           ;	Return value of i1_memcpy is never used
  6619  001876  0012               	return	
  6620  001878  D7E9               	goto	i1l2061
  6621  00187A                     __end_ofi1_memcpy:
  6622                           	opt stack 0
  6623                           pclatu	equ	0xFFB
  6624                           pclath	equ	0xFFA
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           postinc0	equ	0xFEE
  6633                           fsr0h	equ	0xFEA
  6634                           fsr0l	equ	0xFE9
  6635                           wreg	equ	0xFE8
  6636                           indf1	equ	0xFE7
  6637                           fsr1h	equ	0xFE2
  6638                           fsr1l	equ	0xFE1
  6639                           bsr	equ	0xFE0
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _InterruptHandlerHigh *****************
  6648 ;; Defined at:
  6649 ;;		line 83 in file "src/interrupts.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6663 ;;      Params:         0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0
  6665 ;;      Temps:          0      14       0       0       0
  6666 ;;      Totals:         0      14       0       0       0
  6667 ;;Total ram usage:       14 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    4
  6670 ;; This function calls:
  6671 ;;		_SleepIfOkay
  6672 ;;		_i2c_int_handler
  6673 ;;		_timer0_int_handler
  6674 ;; This function is called by:
  6675 ;;		Interrupt level 2
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	intcode
  6680  000008                     __pintcode:
  6681                           	opt stack 0
  6682  000008                     _InterruptHandlerHigh:
  6683                           	opt stack 16
  6684                           
  6685                           ;incstack = 0
  6686  000008  CFFA F0C5          	movff	pclath,??_InterruptHandlerHigh
  6687  00000C  CFFB F0C6          	movff	pclatu,??_InterruptHandlerHigh+1
  6688  000010  CFE9 F0C7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6689  000014  EFA6  F00A         	goto	int_func
  6690                           pclatu	equ	0xFFB
  6691                           pclath	equ	0xFFA
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           intcon	equ	0xFF2
  6699                           postinc0	equ	0xFEE
  6700                           fsr0h	equ	0xFEA
  6701                           fsr0l	equ	0xFE9
  6702                           wreg	equ	0xFE8
  6703                           indf1	equ	0xFE7
  6704                           fsr1h	equ	0xFE2
  6705                           fsr1l	equ	0xFE1
  6706                           bsr	equ	0xFE0
  6707                           indf2	equ	0xFDF
  6708                           postinc2	equ	0xFDE
  6709                           postdec2	equ	0xFDD
  6710                           fsr2h	equ	0xFDA
  6711                           fsr2l	equ	0xFD9
  6712                           status	equ	0xFD8
  6713                           
  6714                           	psect	intcode_body
  6715  00154C                     __pintcode_body:
  6716                           	opt stack 16
  6717  00154C                     int_func:
  6718                           	opt stack 16
  6719  00154C  CFEA F0C8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6720  001550  CFE1 F0C9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6721  001554  CFE2 F0CA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6722  001558  CFD9 F0CB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6723  00155C  CFDA F0CC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6724  001560  CFF3 F0CD          	movff	prodl,??_InterruptHandlerHigh+8
  6725  001564  CFF4 F0CE          	movff	prodh,??_InterruptHandlerHigh+9
  6726  001568  CFF6 F0CF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6727  00156C  CFF7 F0D0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6728  001570  CFF8 F0D1          	movff	tblptru,??_InterruptHandlerHigh+12
  6729  001574  CFF5 F0D2          	movff	tablat,??_InterruptHandlerHigh+13
  6730                           
  6731                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6732  001578  A69E               	btfss	3998,3,c	;volatile
  6733  00157A  D003               	goto	i2l3305
  6734                           
  6735                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6736  00157C  969E               	bcf	3998,3,c	;volatile
  6737                           
  6738                           ;interrupts.c: 92: i2c_int_handler();
  6739  00157E  EC62  F000         	call	_i2c_int_handler	;wreg free
  6740  001582                     i2l3305:
  6741                           
  6742                           ;interrupts.c: 93: }
  6743                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6744  001582  A4F2               	btfss	intcon,2,c	;volatile
  6745  001584  D003               	goto	i2l3311
  6746                           
  6747                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6748  001586  94F2               	bcf	intcon,2,c	;volatile
  6749                           
  6750                           ;interrupts.c: 99: timer0_int_handler();
  6751  001588  EC5E  F00E         	call	_timer0_int_handler	;wreg free
  6752  00158C                     i2l3311:
  6753                           
  6754                           ;interrupts.c: 100: }
  6755                           ;interrupts.c: 109: SleepIfOkay();
  6756  00158C  ECF6  F00B         	call	_SleepIfOkay	;wreg free
  6757  001590  C0D2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6758  001594  C0D1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6759  001598  C0D0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6760  00159C  C0CF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6761  0015A0  C0CE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6762  0015A4  C0CD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6763  0015A8  C0CC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6764  0015AC  C0CB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6765  0015B0  C0CA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6766  0015B4  C0C9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6767  0015B8  C0C8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6768  0015BC  C0C7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6769  0015C0  C0C6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6770  0015C4  C0C5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6771  0015C8  0011               	retfie		f
  6772  0015CA                     __end_of_InterruptHandlerHigh:
  6773                           	opt stack 0
  6774                           pclatu	equ	0xFFB
  6775                           pclath	equ	0xFFA
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           indf1	equ	0xFE7
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           bsr	equ	0xFE0
  6791                           indf2	equ	0xFDF
  6792                           postinc2	equ	0xFDE
  6793                           postdec2	equ	0xFDD
  6794                           fsr2h	equ	0xFDA
  6795                           fsr2l	equ	0xFD9
  6796                           status	equ	0xFD8
  6797                           
  6798 ;; *************** function _timer0_int_handler *****************
  6799 ;; Defined at:
  6800 ;;		line 17 in file "src/user_interrupts.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  msgtype         2    0        int 
  6805 ;;  length          2    0        int 
  6806 ;;  val             2    0        unsigned int 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;		None               void
  6809 ;; Registers used:
  6810 ;;		None
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6816 ;;      Params:         0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0
  6819 ;;      Totals:         0       0       0       0       0
  6820 ;;Total ram usage:        0 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_InterruptHandlerHigh
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text44
  6830  001CBC                     __ptext44:
  6831                           	opt stack 0
  6832  001CBC                     _timer0_int_handler:
  6833                           	opt stack 19
  6834                           
  6835                           ;incstack = 0
  6836  001CBC  0012               	return	
  6837  001CBE                     __end_of_timer0_int_handler:
  6838                           	opt stack 0
  6839                           pclatu	equ	0xFFB
  6840                           pclath	equ	0xFFA
  6841                           tblptru	equ	0xFF8
  6842                           tblptrh	equ	0xFF7
  6843                           tblptrl	equ	0xFF6
  6844                           tablat	equ	0xFF5
  6845                           prodh	equ	0xFF4
  6846                           prodl	equ	0xFF3
  6847                           intcon	equ	0xFF2
  6848                           postinc0	equ	0xFEE
  6849                           fsr0h	equ	0xFEA
  6850                           fsr0l	equ	0xFE9
  6851                           wreg	equ	0xFE8
  6852                           indf1	equ	0xFE7
  6853                           fsr1h	equ	0xFE2
  6854                           fsr1l	equ	0xFE1
  6855                           bsr	equ	0xFE0
  6856                           indf2	equ	0xFDF
  6857                           postinc2	equ	0xFDE
  6858                           postdec2	equ	0xFDD
  6859                           fsr2h	equ	0xFDA
  6860                           fsr2l	equ	0xFD9
  6861                           status	equ	0xFD8
  6862                           
  6863 ;; *************** function _i2c_int_handler *****************
  6864 ;; Defined at:
  6865 ;;		line 100 in file "src/my_i2c.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6870 ;;  data_read       1   14[BANK0 ] unsigned char 
  6871 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6872 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6873 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6874 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6875 ;;  data_written    1    9[BANK0 ] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6885 ;;      Params:         0       0       0       0       0
  6886 ;;      Locals:         0       9       0       0       0
  6887 ;;      Temps:          0       1       0       0       0
  6888 ;;      Totals:         0      10       0       0       0
  6889 ;;Total ram usage:       10 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    3
  6892 ;; This function calls:
  6893 ;;		_ToMainHigh_sendmsg
  6894 ;;		_handle_start
  6895 ;; This function is called by:
  6896 ;;		_InterruptHandlerHigh
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text45
  6901  0000C4                     __ptext45:
  6902                           	opt stack 0
  6903  0000C4                     _i2c_int_handler:
  6904                           	opt stack 16
  6905                           
  6906                           ;my_i2c.c: 101: unsigned char i2c_data;
  6907                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6908                           
  6909                           ;incstack = 0
  6910  0000C4  0E00               	movlw	0
  6911  0000C6  0100               	movlb	0	; () banked
  6912  0000C8  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  6913                           
  6914                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6915  0000CA  0E00               	movlw	0
  6916  0000CC  0100               	movlb	0	; () banked
  6917  0000CE  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  6918                           
  6919                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6920  0000D0  0E00               	movlw	0
  6921  0000D2  0100               	movlb	0	; () banked
  6922  0000D4  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6923                           
  6924                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6925  0000D6  0E00               	movlw	0
  6926  0000D8  0100               	movlb	0	; () banked
  6927  0000DA  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6928                           
  6929                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6930  0000DC  0E00               	movlw	0
  6931  0000DE  0100               	movlb	0	; () banked
  6932  0000E0  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6936                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6937  0000E2  ACC6               	btfss	4038,6,c	;volatile
  6938  0000E4  D024               	goto	i2l3127
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6942  0000E6  9CC6               	bcf	4038,6,c	;volatile
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6946  0000E8  0100               	movlb	0	; () banked
  6947  0000EA  EE20 F00C          	lfsr	2,12
  6948  0000EE  0100               	movlb	0	; () banked
  6949  0000F0  51E1               	movf	_ic_ptr& (0+255),w,b
  6950  0000F2  26D9               	addwf	fsr2l,f,c
  6951  0000F4  0100               	movlb	0	; () banked
  6952  0000F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6953  0000F8  22DA               	addwfc	fsr2h,f,c
  6954  0000FA  0E05               	movlw	5
  6955  0000FC  6EDF               	movwf	indf2,c
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;my_i2c.c: 116: overrun_error = 1;
  6959  0000FE  0E01               	movlw	1
  6960  000100  0100               	movlb	0	; () banked
  6961  000102  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 117: ic_ptr->error_count++;
  6965  000104  0100               	movlb	0	; () banked
  6966  000106  EE20 F00E          	lfsr	2,14
  6967  00010A  0100               	movlb	0	; () banked
  6968  00010C  51E1               	movf	_ic_ptr& (0+255),w,b
  6969  00010E  26D9               	addwf	fsr2l,f,c
  6970  000110  0100               	movlb	0	; () banked
  6971  000112  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  000114  22DA               	addwfc	fsr2h,f,c
  6973  000116  2ADF               	incf	indf2,f,c
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  6977  000118  0100               	movlb	0	; () banked
  6978  00011A  EE20 F00D          	lfsr	2,13
  6979  00011E  0100               	movlb	0	; () banked
  6980  000120  51E1               	movf	_ic_ptr& (0+255),w,b
  6981  000122  26D9               	addwf	fsr2l,f,c
  6982  000124  0100               	movlb	0	; () banked
  6983  000126  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6984  000128  22DA               	addwfc	fsr2h,f,c
  6985  00012A  0E04               	movlw	4
  6986  00012C  6EDF               	movwf	indf2,c
  6987  00012E                     i2l3127:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;my_i2c.c: 119: }
  6991                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  6992  00012E  A0C7               	btfss	4039,0,c	;volatile
  6993  000130  D005               	goto	i2l3133
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  6997  000132  CFC9 F0C1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;my_i2c.c: 123: data_read = 1;
  7001  000136  0E01               	movlw	1
  7002  000138  0100               	movlb	0	; () banked
  7003  00013A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7004  00013C                     i2l3133:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;my_i2c.c: 124: }
  7008                           ;my_i2c.c: 126: if (!overrun_error) {
  7009  00013C  0100               	movlb	0	; () banked
  7010  00013E  67C0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7011  000140  D19F               	goto	i2l286
  7012  000142  D188               	goto	i2l3221
  7013  000144                     i2l288:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;my_i2c.c: 129: {
  7017                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7018  000144  A6C7               	btfss	4039,3,c	;volatile
  7019  000146  D19C               	goto	i2l286
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;my_i2c.c: 132: handle_start(data_read);
  7023  000148  0100               	movlb	0	; () banked
  7024  00014A  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7025  00014C  EC49  F008         	call	_handle_start
  7026                           
  7027                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7028  000150  0100               	movlb	0	; () banked
  7029  000152  EE20 F00C          	lfsr	2,12
  7030  000156  0100               	movlb	0	; () banked
  7031  000158  51E1               	movf	_ic_ptr& (0+255),w,b
  7032  00015A  26D9               	addwf	fsr2l,f,c
  7033  00015C  0100               	movlb	0	; () banked
  7034  00015E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7035  000160  22DA               	addwfc	fsr2h,f,c
  7036  000162  0E08               	movlw	8
  7037  000164  62DF               	cpfseq	indf2,c
  7038  000166  D18C               	goto	i2l286
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;my_i2c.c: 135: data_read = 0;
  7042  000168  0E00               	movlw	0
  7043  00016A  0100               	movlb	0	; () banked
  7044  00016C  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7045                           
  7046                           ;my_i2c.c: 136: msg_to_send = 1;
  7047  00016E  0E01               	movlw	1
  7048  000170  0100               	movlb	0	; () banked
  7049  000172  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7050  000174  D185               	goto	i2l286
  7051  000176                     i2l292:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 142: {
  7055                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7056  000176  A8C7               	btfss	4039,4,c	;volatile
  7057  000178  D02A               	goto	i2l3153
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7061  00017A  0100               	movlb	0	; () banked
  7062  00017C  EE20 F00B          	lfsr	2,11
  7063  000180  0100               	movlb	0	; () banked
  7064  000182  51E1               	movf	_ic_ptr& (0+255),w,b
  7065  000184  26D9               	addwf	fsr2l,f,c
  7066  000186  0100               	movlb	0	; () banked
  7067  000188  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7068  00018A  22DA               	addwfc	fsr2h,f,c
  7069  00018C  2ADF               	incf	indf2,f,c
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;my_i2c.c: 148: if (data_read) {
  7073  00018E  0100               	movlb	0	; () banked
  7074  000190  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7075  000192  B4D8               	btfsc	status,2,c
  7076  000194  D154               	goto	L10
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7080  000196  BAC7               	btfsc	4039,5,c	;volatile
  7081  000198  D004               	goto	i2l3151
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;my_i2c.c: 150: msg_ready = 1;
  7085  00019A  0E01               	movlw	1
  7086  00019C  0100               	movlb	0	; () banked
  7087  00019E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7088                           
  7089                           ;my_i2c.c: 151: } else {
  7090  0001A0  D14E               	goto	L10
  7091  0001A2                     i2l3151:
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7095  0001A2  0100               	movlb	0	; () banked
  7096  0001A4  EE20 F00E          	lfsr	2,14
  7097  0001A8  0100               	movlb	0	; () banked
  7098  0001AA  51E1               	movf	_ic_ptr& (0+255),w,b
  7099  0001AC  26D9               	addwf	fsr2l,f,c
  7100  0001AE  0100               	movlb	0	; () banked
  7101  0001B0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7102  0001B2  22DA               	addwfc	fsr2h,f,c
  7103  0001B4  2ADF               	incf	indf2,f,c
  7104                           
  7105                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7106  0001B6  0100               	movlb	0	; () banked
  7107  0001B8  EE20 F00D          	lfsr	2,13
  7108  0001BC  0100               	movlb	0	; () banked
  7109  0001BE  51E1               	movf	_ic_ptr& (0+255),w,b
  7110  0001C0  26D9               	addwf	fsr2l,f,c
  7111  0001C2  0100               	movlb	0	; () banked
  7112  0001C4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  0001C6  22DA               	addwfc	fsr2h,f,c
  7114  0001C8  0E06               	movlw	6
  7115  0001CA  6EDF               	movwf	indf2,c
  7116                           
  7117                           ; BSR set to: 0
  7118  0001CC  D138               	goto	L10
  7119  0001CE                     i2l3153:
  7120                           
  7121                           ; BSR set to: 0
  7122  0001CE  0100               	movlb	0	; () banked
  7123  0001D0  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7124  0001D2  B4D8               	btfsc	status,2,c
  7125  0001D4  D155               	goto	i2l286
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7129  0001D6  0100               	movlb	0	; () banked
  7130  0001D8  EE20 F00B          	lfsr	2,11
  7131  0001DC  0100               	movlb	0	; () banked
  7132  0001DE  51E1               	movf	_ic_ptr& (0+255),w,b
  7133  0001E0  26D9               	addwf	fsr2l,f,c
  7134  0001E2  0100               	movlb	0	; () banked
  7135  0001E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7136  0001E6  22DA               	addwfc	fsr2h,f,c
  7137  0001E8  2ADF               	incf	indf2,f,c
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7141  0001EA  BAC7               	btfsc	4039,5,c	;volatile
  7142  0001EC  D019               	goto	i2l3169
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7146  0001EE  B4C7               	btfsc	4039,2,c	;volatile
  7147  0001F0  D00B               	goto	i2l3163
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7151  0001F2  0100               	movlb	0	; () banked
  7152  0001F4  EE20 F00C          	lfsr	2,12
  7153  0001F8  0100               	movlb	0	; () banked
  7154  0001FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7155  0001FC  26D9               	addwf	fsr2l,f,c
  7156  0001FE  0100               	movlb	0	; () banked
  7157  000200  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7158  000202  22DA               	addwfc	fsr2h,f,c
  7159  000204  0E07               	movlw	7
  7160  000206  D071               	goto	L8
  7161  000208                     i2l3163:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7165  000208  0100               	movlb	0	; () banked
  7166  00020A  EE20 F00C          	lfsr	2,12
  7167  00020E  0100               	movlb	0	; () banked
  7168  000210  51E1               	movf	_ic_ptr& (0+255),w,b
  7169  000212  26D9               	addwf	fsr2l,f,c
  7170  000214  0100               	movlb	0	; () banked
  7171  000216  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7172  000218  22DA               	addwfc	fsr2h,f,c
  7173  00021A  0E08               	movlw	8
  7174  00021C  6EDF               	movwf	indf2,c
  7175  00021E  D108               	goto	L7
  7176  000220                     i2l3169:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7180  000220  0100               	movlb	0	; () banked
  7181  000222  EE20 F00E          	lfsr	2,14
  7182  000226  0100               	movlb	0	; () banked
  7183  000228  51E1               	movf	_ic_ptr& (0+255),w,b
  7184  00022A  26D9               	addwf	fsr2l,f,c
  7185  00022C  0100               	movlb	0	; () banked
  7186  00022E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7187  000230  22DA               	addwfc	fsr2h,f,c
  7188  000232  2ADF               	incf	indf2,f,c
  7189                           
  7190                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7191  000234  0100               	movlb	0	; () banked
  7192  000236  EE20 F00C          	lfsr	2,12
  7193  00023A  0100               	movlb	0	; () banked
  7194  00023C  51E1               	movf	_ic_ptr& (0+255),w,b
  7195  00023E  26D9               	addwf	fsr2l,f,c
  7196  000240  0100               	movlb	0	; () banked
  7197  000242  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  000244  22DA               	addwfc	fsr2h,f,c
  7199  000246  0E05               	movlw	5
  7200  000248  6EDF               	movwf	indf2,c
  7201                           
  7202                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7203  00024A  0100               	movlb	0	; () banked
  7204  00024C  EE20 F00D          	lfsr	2,13
  7205  000250  0100               	movlb	0	; () banked
  7206  000252  51E1               	movf	_ic_ptr& (0+255),w,b
  7207  000254  26D9               	addwf	fsr2l,f,c
  7208  000256  0100               	movlb	0	; () banked
  7209  000258  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7210  00025A  22DA               	addwfc	fsr2h,f,c
  7211  00025C  0E06               	movlw	6
  7212  00025E  D045               	goto	L8
  7213  000260                     i2l3171:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;my_i2c.c: 177: {
  7217                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7218  000260  0100               	movlb	0	; () banked
  7219  000262  EE20 F01A          	lfsr	2,26
  7220  000266  0100               	movlb	0	; () banked
  7221  000268  51E1               	movf	_ic_ptr& (0+255),w,b
  7222  00026A  26D9               	addwf	fsr2l,f,c
  7223  00026C  0100               	movlb	0	; () banked
  7224  00026E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  000270  22DA               	addwfc	fsr2h,f,c
  7226  000272  50DF               	movf	indf2,w,c
  7227  000274  0100               	movlb	0	; () banked
  7228  000276  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7229  000278  0100               	movlb	0	; () banked
  7230  00027A  EE20 F019          	lfsr	2,25
  7231  00027E  0100               	movlb	0	; () banked
  7232  000280  51E1               	movf	_ic_ptr& (0+255),w,b
  7233  000282  26D9               	addwf	fsr2l,f,c
  7234  000284  0100               	movlb	0	; () banked
  7235  000286  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  000288  22DA               	addwfc	fsr2h,f,c
  7237  00028A  50DF               	movf	indf2,w,c
  7238  00028C  0100               	movlb	0	; () banked
  7239  00028E  5DBB               	subwf	??_i2c_int_handler& (0+255),w,b
  7240  000290  B0D8               	btfsc	status,0,c
  7241  000292  D0D5               	goto	L10
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7245  000294  0100               	movlb	0	; () banked
  7246  000296  EE20 F01A          	lfsr	2,26
  7247  00029A  0100               	movlb	0	; () banked
  7248  00029C  51E1               	movf	_ic_ptr& (0+255),w,b
  7249  00029E  26D9               	addwf	fsr2l,f,c
  7250  0002A0  0100               	movlb	0	; () banked
  7251  0002A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7252  0002A4  22DA               	addwfc	fsr2h,f,c
  7253  0002A6  50DF               	movf	indf2,w,c
  7254  0002A8  0100               	movlb	0	; () banked
  7255  0002AA  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7256  0002AC  0100               	movlb	0	; () banked
  7257  0002AE  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7258  0002B0  0D01               	mullw	1
  7259  0002B2  0E0F               	movlw	15
  7260  0002B4  26F3               	addwf	prodl,f,c
  7261  0002B6  0E00               	movlw	0
  7262  0002B8  22F4               	addwfc	prodh,f,c
  7263  0002BA  50F3               	movf	prodl,w,c
  7264  0002BC  0100               	movlb	0	; () banked
  7265  0002BE  25E1               	addwf	_ic_ptr& (0+255),w,b
  7266  0002C0  6ED9               	movwf	fsr2l,c
  7267  0002C2  50F4               	movf	prodh,w,c
  7268  0002C4  0100               	movlb	0	; () banked
  7269  0002C6  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7270  0002C8  6EDA               	movwf	fsr2h,c
  7271  0002CA  50DF               	movf	indf2,w,c
  7272  0002CC  6EC9               	movwf	4041,c	;volatile
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7276  0002CE  0100               	movlb	0	; () banked
  7277  0002D0  EE20 F01A          	lfsr	2,26
  7278  0002D4  0100               	movlb	0	; () banked
  7279  0002D6  51E1               	movf	_ic_ptr& (0+255),w,b
  7280  0002D8  26D9               	addwf	fsr2l,f,c
  7281  0002DA  0100               	movlb	0	; () banked
  7282  0002DC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7283  0002DE  22DA               	addwfc	fsr2h,f,c
  7284  0002E0  2ADF               	incf	indf2,f,c
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;my_i2c.c: 181: data_written = 1;
  7288  0002E2  0E01               	movlw	1
  7289  0002E4  0100               	movlb	0	; () banked
  7290  0002E6  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  7291                           
  7292                           ;my_i2c.c: 182: } else {
  7293  0002E8  D0CB               	goto	i2l286
  7294  0002EA                     L8:
  7295  0002EA  6EDF               	movwf	indf2,c
  7296  0002EC  D0C9               	goto	i2l286
  7297  0002EE                     i2l306:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;my_i2c.c: 189: {
  7301                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7302  0002EE  A8C7               	btfss	4039,4,c	;volatile
  7303  0002F0  D05A               	goto	i2l3199
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7307  0002F2  0100               	movlb	0	; () banked
  7308  0002F4  EE20 F00B          	lfsr	2,11
  7309  0002F8  0100               	movlb	0	; () banked
  7310  0002FA  51E1               	movf	_ic_ptr& (0+255),w,b
  7311  0002FC  26D9               	addwf	fsr2l,f,c
  7312  0002FE  0100               	movlb	0	; () banked
  7313  000300  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7314  000302  22DA               	addwfc	fsr2h,f,c
  7315  000304  2ADF               	incf	indf2,f,c
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;my_i2c.c: 194: if (data_read) {
  7319  000306  0100               	movlb	0	; () banked
  7320  000308  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7321  00030A  B4D8               	btfsc	status,2,c
  7322  00030C  D048               	goto	i2l3195
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7326  00030E  AAC7               	btfss	4039,5,c	;volatile
  7327  000310  D025               	goto	i2l3193
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7331  000312  0100               	movlb	0	; () banked
  7332  000314  EE20 F00A          	lfsr	2,10
  7333  000318  0100               	movlb	0	; () banked
  7334  00031A  51E1               	movf	_ic_ptr& (0+255),w,b
  7335  00031C  26D9               	addwf	fsr2l,f,c
  7336  00031E  0100               	movlb	0	; () banked
  7337  000320  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7338  000322  22DA               	addwfc	fsr2h,f,c
  7339  000324  50DF               	movf	indf2,w,c
  7340  000326  0100               	movlb	0	; () banked
  7341  000328  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7342  00032A  0100               	movlb	0	; () banked
  7343  00032C  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7344  00032E  0D01               	mullw	1
  7345  000330  50F3               	movf	prodl,w,c
  7346  000332  0100               	movlb	0	; () banked
  7347  000334  25E1               	addwf	_ic_ptr& (0+255),w,b
  7348  000336  6ED9               	movwf	fsr2l,c
  7349  000338  50F4               	movf	prodh,w,c
  7350  00033A  0100               	movlb	0	; () banked
  7351  00033C  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7352  00033E  6EDA               	movwf	fsr2h,c
  7353  000340  0100               	movlb	0	; () banked
  7354  000342  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7358  000346  0100               	movlb	0	; () banked
  7359  000348  EE20 F00A          	lfsr	2,10
  7360  00034C  0100               	movlb	0	; () banked
  7361  00034E  51E1               	movf	_ic_ptr& (0+255),w,b
  7362  000350  26D9               	addwf	fsr2l,f,c
  7363  000352  0100               	movlb	0	; () banked
  7364  000354  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  000356  22DA               	addwfc	fsr2h,f,c
  7366  000358  2ADF               	incf	indf2,f,c
  7367  00035A  D021               	goto	i2l3195
  7368  00035C                     i2l3193:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7372  00035C  0100               	movlb	0	; () banked
  7373  00035E  EE20 F00E          	lfsr	2,14
  7374  000362  0100               	movlb	0	; () banked
  7375  000364  51E1               	movf	_ic_ptr& (0+255),w,b
  7376  000366  26D9               	addwf	fsr2l,f,c
  7377  000368  0100               	movlb	0	; () banked
  7378  00036A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7379  00036C  22DA               	addwfc	fsr2h,f,c
  7380  00036E  2ADF               	incf	indf2,f,c
  7381                           
  7382                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7383  000370  0100               	movlb	0	; () banked
  7384  000372  EE20 F00D          	lfsr	2,13
  7385  000376  0100               	movlb	0	; () banked
  7386  000378  51E1               	movf	_ic_ptr& (0+255),w,b
  7387  00037A  26D9               	addwf	fsr2l,f,c
  7388  00037C  0100               	movlb	0	; () banked
  7389  00037E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7390  000380  22DA               	addwfc	fsr2h,f,c
  7391  000382  0E06               	movlw	6
  7392  000384  6EDF               	movwf	indf2,c
  7393                           
  7394                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7395  000386  0100               	movlb	0	; () banked
  7396  000388  EE20 F00C          	lfsr	2,12
  7397  00038C  0100               	movlb	0	; () banked
  7398  00038E  51E1               	movf	_ic_ptr& (0+255),w,b
  7399  000390  26D9               	addwf	fsr2l,f,c
  7400  000392  0100               	movlb	0	; () banked
  7401  000394  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7402  000396  22DA               	addwfc	fsr2h,f,c
  7403  000398  0E05               	movlw	5
  7404  00039A  6EDF               	movwf	indf2,c
  7405  00039C  D050               	goto	L10
  7406  00039E                     i2l3195:
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 205: msg_ready = 1;
  7410  00039E  0E01               	movlw	1
  7411  0003A0  0100               	movlb	0	; () banked
  7412  0003A2  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7413                           
  7414                           ; BSR set to: 0
  7415  0003A4  D04C               	goto	L10
  7416  0003A6                     i2l3199:
  7417                           
  7418                           ; BSR set to: 0
  7419  0003A6  0100               	movlb	0	; () banked
  7420  0003A8  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7421  0003AA  B4D8               	btfsc	status,2,c
  7422  0003AC  D069               	goto	i2l286
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7426  0003AE  0100               	movlb	0	; () banked
  7427  0003B0  EE20 F00B          	lfsr	2,11
  7428  0003B4  0100               	movlb	0	; () banked
  7429  0003B6  51E1               	movf	_ic_ptr& (0+255),w,b
  7430  0003B8  26D9               	addwf	fsr2l,f,c
  7431  0003BA  0100               	movlb	0	; () banked
  7432  0003BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7433  0003BE  22DA               	addwfc	fsr2h,f,c
  7434  0003C0  2ADF               	incf	indf2,f,c
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7438  0003C2  AAC7               	btfss	4039,5,c	;volatile
  7439  0003C4  D025               	goto	i2l314
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7443  0003C6  0100               	movlb	0	; () banked
  7444  0003C8  EE20 F00A          	lfsr	2,10
  7445  0003CC  0100               	movlb	0	; () banked
  7446  0003CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7447  0003D0  26D9               	addwf	fsr2l,f,c
  7448  0003D2  0100               	movlb	0	; () banked
  7449  0003D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7450  0003D6  22DA               	addwfc	fsr2h,f,c
  7451  0003D8  50DF               	movf	indf2,w,c
  7452  0003DA  0100               	movlb	0	; () banked
  7453  0003DC  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7454  0003DE  0100               	movlb	0	; () banked
  7455  0003E0  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7456  0003E2  0D01               	mullw	1
  7457  0003E4  50F3               	movf	prodl,w,c
  7458  0003E6  0100               	movlb	0	; () banked
  7459  0003E8  25E1               	addwf	_ic_ptr& (0+255),w,b
  7460  0003EA  6ED9               	movwf	fsr2l,c
  7461  0003EC  50F4               	movf	prodh,w,c
  7462  0003EE  0100               	movlb	0	; () banked
  7463  0003F0  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7464  0003F2  6EDA               	movwf	fsr2h,c
  7465  0003F4  0100               	movlb	0	; () banked
  7466  0003F6  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7470  0003FA  0100               	movlb	0	; () banked
  7471  0003FC  EE20 F00A          	lfsr	2,10
  7472  000400  0100               	movlb	0	; () banked
  7473  000402  51E1               	movf	_ic_ptr& (0+255),w,b
  7474  000404  26D9               	addwf	fsr2l,f,c
  7475  000406  0100               	movlb	0	; () banked
  7476  000408  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7477  00040A  22DA               	addwfc	fsr2h,f,c
  7478  00040C  2ADF               	incf	indf2,f,c
  7479                           
  7480                           ;my_i2c.c: 213: } else {
  7481  00040E  D038               	goto	i2l286
  7482  000410                     i2l314:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7486  000410  A4C7               	btfss	4039,2,c	;volatile
  7487  000412  D6C7               	goto	i2l3151
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7491  000414  0100               	movlb	0	; () banked
  7492  000416  EE20 F00C          	lfsr	2,12
  7493  00041A  0100               	movlb	0	; () banked
  7494  00041C  51E1               	movf	_ic_ptr& (0+255),w,b
  7495  00041E  26D9               	addwf	fsr2l,f,c
  7496  000420  0100               	movlb	0	; () banked
  7497  000422  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7498  000424  22DA               	addwfc	fsr2h,f,c
  7499  000426  0E08               	movlw	8
  7500  000428  6EDF               	movwf	indf2,c
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 216: msg_ready = 1;
  7504  00042A  0E01               	movlw	1
  7505  00042C  0100               	movlb	0	; () banked
  7506  00042E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7507  000430                     L7:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;my_i2c.c: 217: msg_to_send = 1;
  7511  000430  0E01               	movlw	1
  7512  000432  0100               	movlb	0	; () banked
  7513  000434  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 219: data_read = 0;
  7517  000436  0E00               	movlw	0
  7518  000438  0100               	movlb	0	; () banked
  7519  00043A  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7520                           
  7521                           ;my_i2c.c: 220: } else {
  7522  00043C  D021               	goto	i2l286
  7523  00043E                     L10:
  7524                           
  7525                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7526  00043E  0100               	movlb	0	; () banked
  7527  000440  EE20 F00C          	lfsr	2,12
  7528  000444  0100               	movlb	0	; () banked
  7529  000446  51E1               	movf	_ic_ptr& (0+255),w,b
  7530  000448  26D9               	addwf	fsr2l,f,c
  7531  00044A  0100               	movlb	0	; () banked
  7532  00044C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7533  00044E  22DA               	addwfc	fsr2h,f,c
  7534  000450  0E05               	movlw	5
  7535  000452  D74B               	goto	L8
  7536  000454                     i2l3221:
  7537                           
  7538                           ; BSR set to: 0
  7539  000454  0100               	movlb	0	; () banked
  7540  000456  EE20 F00C          	lfsr	2,12
  7541  00045A  0100               	movlb	0	; () banked
  7542  00045C  51E1               	movf	_ic_ptr& (0+255),w,b
  7543  00045E  26D9               	addwf	fsr2l,f,c
  7544  000460  0100               	movlb	0	; () banked
  7545  000462  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7546  000464  22DA               	addwfc	fsr2h,f,c
  7547  000466  50DF               	movf	indf2,w,c
  7548                           
  7549                           ; Switch size 1, requested type "space"
  7550                           ; Number of cases is 4, Range of values is 5 to 8
  7551                           ; switch strategies available:
  7552                           ; Name         Instructions Cycles
  7553                           ; simple_byte           13     7 (average)
  7554                           ;	Chosen strategy is simple_byte
  7555  000468  0A05               	xorlw	5	; case 5
  7556  00046A  B4D8               	btfsc	status,2,c
  7557  00046C  D66B               	goto	i2l288
  7558  00046E  0A03               	xorlw	3	; case 6
  7559  000470  B4D8               	btfsc	status,2,c
  7560  000472  D681               	goto	i2l292
  7561  000474  0A01               	xorlw	1	; case 7
  7562  000476  B4D8               	btfsc	status,2,c
  7563  000478  D73A               	goto	i2l306
  7564  00047A  0A0F               	xorlw	15	; case 8
  7565  00047C  B4D8               	btfsc	status,2,c
  7566  00047E  D6F0               	goto	i2l3171
  7567  000480                     i2l286:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;my_i2c.c: 230: }
  7571                           ;my_i2c.c: 233: if (data_read || data_written) {
  7572  000480  0100               	movlb	0	; () banked
  7573  000482  67C4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7574  000484  D004               	goto	i2l320
  7575                           
  7576                           ; BSR set to: 0
  7577  000486  0100               	movlb	0	; () banked
  7578  000488  51BF               	movf	i2c_int_handler@data_written& (0+255),w,b
  7579  00048A  B4D8               	btfsc	status,2,c
  7580  00048C  D002               	goto	i2l3227
  7581  00048E                     i2l320:
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7585  00048E  A8C6               	btfss	4038,4,c	;volatile
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7589  000490  88C6               	bsf	4038,4,c	;volatile
  7590  000492                     i2l3227:
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;my_i2c.c: 237: }
  7594                           ;my_i2c.c: 238: }
  7595                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7596  000492  0100               	movlb	0	; () banked
  7597  000494  EE20 F00A          	lfsr	2,10
  7598  000498  0100               	movlb	0	; () banked
  7599  00049A  51E1               	movf	_ic_ptr& (0+255),w,b
  7600  00049C  26D9               	addwf	fsr2l,f,c
  7601  00049E  0100               	movlb	0	; () banked
  7602  0004A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7603  0004A2  22DA               	addwfc	fsr2h,f,c
  7604  0004A4  0E08               	movlw	8
  7605  0004A6  64DF               	cpfsgt	indf2,c
  7606  0004A8  D023               	goto	i2l3233
  7607                           
  7608                           ; BSR set to: 0
  7609  0004AA  0100               	movlb	0	; () banked
  7610  0004AC  67C3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7611  0004AE  D020               	goto	i2l3233
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7615  0004B0  0100               	movlb	0	; () banked
  7616  0004B2  EE20 F00C          	lfsr	2,12
  7617  0004B6  0100               	movlb	0	; () banked
  7618  0004B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7619  0004BA  26D9               	addwf	fsr2l,f,c
  7620  0004BC  0100               	movlb	0	; () banked
  7621  0004BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7622  0004C0  22DA               	addwfc	fsr2h,f,c
  7623  0004C2  0E05               	movlw	5
  7624  0004C4  6EDF               	movwf	indf2,c
  7625                           
  7626                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7627  0004C6  0100               	movlb	0	; () banked
  7628  0004C8  EE20 F00E          	lfsr	2,14
  7629  0004CC  0100               	movlb	0	; () banked
  7630  0004CE  51E1               	movf	_ic_ptr& (0+255),w,b
  7631  0004D0  26D9               	addwf	fsr2l,f,c
  7632  0004D2  0100               	movlb	0	; () banked
  7633  0004D4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7634  0004D6  22DA               	addwfc	fsr2h,f,c
  7635  0004D8  2ADF               	incf	indf2,f,c
  7636                           
  7637                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7638  0004DA  0100               	movlb	0	; () banked
  7639  0004DC  EE20 F00D          	lfsr	2,13
  7640  0004E0  0100               	movlb	0	; () banked
  7641  0004E2  51E1               	movf	_ic_ptr& (0+255),w,b
  7642  0004E4  26D9               	addwf	fsr2l,f,c
  7643  0004E6  0100               	movlb	0	; () banked
  7644  0004E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7645  0004EA  22DA               	addwfc	fsr2h,f,c
  7646  0004EC  0E07               	movlw	7
  7647  0004EE  6EDF               	movwf	indf2,c
  7648  0004F0                     i2l3233:
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;my_i2c.c: 245: }
  7652                           ;my_i2c.c: 247: if (msg_ready) {
  7653  0004F0  0100               	movlb	0	; () banked
  7654  0004F2  51C3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7655  0004F4  B4D8               	btfsc	status,2,c
  7656  0004F6  D03E               	goto	i2l3241
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7660  0004F8  0100               	movlb	0	; () banked
  7661  0004FA  EE20 F00B          	lfsr	2,11
  7662  0004FE  0100               	movlb	0	; () banked
  7663  000500  51E1               	movf	_ic_ptr& (0+255),w,b
  7664  000502  26D9               	addwf	fsr2l,f,c
  7665  000504  0100               	movlb	0	; () banked
  7666  000506  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7667  000508  22DA               	addwfc	fsr2h,f,c
  7668  00050A  0100               	movlb	0	; () banked
  7669  00050C  EE10 F00A          	lfsr	1,10
  7670  000510  0100               	movlb	0	; () banked
  7671  000512  51E1               	movf	_ic_ptr& (0+255),w,b
  7672  000514  26E1               	addwf	fsr1l,f,c
  7673  000516  0100               	movlb	0	; () banked
  7674  000518  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7675  00051A  22E2               	addwfc	fsr1h,f,c
  7676  00051C  50E7               	movf	indf1,w,c
  7677  00051E  0100               	movlb	0	; () banked
  7678  000520  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7679  000522  0100               	movlb	0	; () banked
  7680  000524  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7681  000526  0D01               	mullw	1
  7682  000528  50F3               	movf	prodl,w,c
  7683  00052A  0100               	movlb	0	; () banked
  7684  00052C  25E1               	addwf	_ic_ptr& (0+255),w,b
  7685  00052E  6EE1               	movwf	fsr1l,c
  7686  000530  50F4               	movf	prodh,w,c
  7687  000532  0100               	movlb	0	; () banked
  7688  000534  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7689  000536  6EE2               	movwf	fsr1h,c
  7690  000538  CFDF FFE7          	movff	indf2,indf1
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7694  00053C  0E28               	movlw	40
  7695  00053E  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7696  000540  0100               	movlb	0	; () banked
  7697  000542  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7698  000546  0100               	movlb	0	; () banked
  7699  000548  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7700  00054C  0100               	movlb	0	; () banked
  7701  00054E  EE20 F00A          	lfsr	2,10
  7702  000552  0100               	movlb	0	; () banked
  7703  000554  51E1               	movf	_ic_ptr& (0+255),w,b
  7704  000556  26D9               	addwf	fsr2l,f,c
  7705  000558  0100               	movlb	0	; () banked
  7706  00055A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7707  00055C  22DA               	addwfc	fsr2h,f,c
  7708  00055E  50DF               	movf	indf2,w,c
  7709  000560  0100               	movlb	0	; () banked
  7710  000562  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7711  000564  0100               	movlb	0	; () banked
  7712  000566  29BB               	incf	??_i2c_int_handler& (0+255),w,b
  7713  000568  ECD5  F00D         	call	_ToMainHigh_sendmsg
  7714                           
  7715                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7716  00056C  0100               	movlb	0	; () banked
  7717  00056E  EE20 F00A          	lfsr	2,10
  7718  000572  D03E               	goto	L9
  7719  000574                     i2l3241:
  7720                           
  7721                           ; BSR set to: 0
  7722  000574  0100               	movlb	0	; () banked
  7723  000576  EE20 F00E          	lfsr	2,14
  7724  00057A  0100               	movlb	0	; () banked
  7725  00057C  51E1               	movf	_ic_ptr& (0+255),w,b
  7726  00057E  26D9               	addwf	fsr2l,f,c
  7727  000580  0100               	movlb	0	; () banked
  7728  000582  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7729  000584  22DA               	addwfc	fsr2h,f,c
  7730  000586  50DF               	movf	indf2,w,c
  7731  000588  B4D8               	btfsc	status,2,c
  7732  00058A  D03A               	goto	i2l3249
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7736  00058C  0100               	movlb	0	; () banked
  7737  00058E  EE20 F00E          	lfsr	2,14
  7738  000592  0100               	movlb	0	; () banked
  7739  000594  51E1               	movf	_ic_ptr& (0+255),w,b
  7740  000596  26D9               	addwf	fsr2l,f,c
  7741  000598  0100               	movlb	0	; () banked
  7742  00059A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7743  00059C  22DA               	addwfc	fsr2h,f,c
  7744  00059E  50DF               	movf	indf2,w,c
  7745  0005A0  0100               	movlb	0	; () banked
  7746  0005A2  6FBC               	movwf	i2c_int_handler@error_buf& (0+255),b
  7747                           
  7748                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7749  0005A4  0100               	movlb	0	; () banked
  7750  0005A6  EE20 F00D          	lfsr	2,13
  7751  0005AA  0100               	movlb	0	; () banked
  7752  0005AC  51E1               	movf	_ic_ptr& (0+255),w,b
  7753  0005AE  26D9               	addwf	fsr2l,f,c
  7754  0005B0  0100               	movlb	0	; () banked
  7755  0005B2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7756  0005B4  22DA               	addwfc	fsr2h,f,c
  7757  0005B6  50DF               	movf	indf2,w,c
  7758  0005B8  0100               	movlb	0	; () banked
  7759  0005BA  6FBD               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7760                           
  7761                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7762  0005BC  0100               	movlb	0	; () banked
  7763  0005BE  EE20 F00B          	lfsr	2,11
  7764  0005C2  0100               	movlb	0	; () banked
  7765  0005C4  51E1               	movf	_ic_ptr& (0+255),w,b
  7766  0005C6  26D9               	addwf	fsr2l,f,c
  7767  0005C8  0100               	movlb	0	; () banked
  7768  0005CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7769  0005CC  22DA               	addwfc	fsr2h,f,c
  7770  0005CE  50DF               	movf	indf2,w,c
  7771  0005D0  0100               	movlb	0	; () banked
  7772  0005D2  6FBE               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7776  0005D4  0E29               	movlw	41
  7777  0005D6  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7778  0005D8  0100               	movlb	0	; () banked
  7779  0005DA  0E00               	movlw	high i2c_int_handler@error_buf
  7780  0005DC  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7781  0005DE  0100               	movlb	0	; () banked
  7782  0005E0  0EBC               	movlw	low i2c_int_handler@error_buf
  7783  0005E2  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7784  0005E4  0E03               	movlw	3
  7785  0005E6  ECD5  F00D         	call	_ToMainHigh_sendmsg
  7786                           
  7787                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7788  0005EA  0100               	movlb	0	; () banked
  7789  0005EC  EE20 F00E          	lfsr	2,14
  7790  0005F0                     L9:
  7791  0005F0  0100               	movlb	0	; () banked
  7792  0005F2  51E1               	movf	_ic_ptr& (0+255),w,b
  7793  0005F4  26D9               	addwf	fsr2l,f,c
  7794  0005F6  0100               	movlb	0	; () banked
  7795  0005F8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7796  0005FA  22DA               	addwfc	fsr2h,f,c
  7797  0005FC  0E00               	movlw	0
  7798  0005FE  6EDF               	movwf	indf2,c
  7799  000600                     i2l3249:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;my_i2c.c: 257: }
  7803                           ;my_i2c.c: 258: if (msg_to_send) {
  7804  000600  0100               	movlb	0	; () banked
  7805  000602  51C2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7806  000604  B4D8               	btfsc	status,2,c
  7807  000606  0012               	return	
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7811  000608  0E2A               	movlw	42
  7812  00060A  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7813  00060C  0100               	movlb	0	; () banked
  7814  00060E  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7815  000612  0100               	movlb	0	; () banked
  7816  000614  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7817  000618  0E00               	movlw	0
  7818  00061A  ECD5  F00D         	call	_ToMainHigh_sendmsg
  7819                           
  7820                           ;my_i2c.c: 261: msg_to_send = 0;
  7821  00061E  0E00               	movlw	0
  7822  000620  0100               	movlb	0	; () banked
  7823  000622  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7824  000624  0012               	return	
  7825  000626                     __end_of_i2c_int_handler:
  7826                           	opt stack 0
  7827                           pclatu	equ	0xFFB
  7828                           pclath	equ	0xFFA
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           intcon	equ	0xFF2
  7836                           postinc0	equ	0xFEE
  7837                           fsr0h	equ	0xFEA
  7838                           fsr0l	equ	0xFE9
  7839                           wreg	equ	0xFE8
  7840                           indf1	equ	0xFE7
  7841                           fsr1h	equ	0xFE2
  7842                           fsr1l	equ	0xFE1
  7843                           bsr	equ	0xFE0
  7844                           indf2	equ	0xFDF
  7845                           postinc2	equ	0xFDE
  7846                           postdec2	equ	0xFDD
  7847                           fsr2h	equ	0xFDA
  7848                           fsr2l	equ	0xFD9
  7849                           status	equ	0xFD8
  7850                           
  7851 ;; *************** function _handle_start *****************
  7852 ;; Defined at:
  7853 ;;		line 71 in file "src/my_i2c.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  data_read       1    wreg     unsigned char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  data_read       1   51[COMRAM] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;		None               void
  7860 ;; Registers used:
  7861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7867 ;;      Params:         0       0       0       0       0
  7868 ;;      Locals:         1       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0
  7870 ;;      Totals:         1       0       0       0       0
  7871 ;;Total ram usage:        1 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_i2c_int_handler
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text46
  7881  001092                     __ptext46:
  7882                           	opt stack 0
  7883  001092                     _handle_start:
  7884                           	opt stack 18
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;incstack = 0
  7888                           ;handle_start@data_read stored from wreg
  7889  001092  6E34               	movwf	handle_start@data_read,c
  7890                           
  7891                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7892  001094  0100               	movlb	0	; () banked
  7893  001096  EE20 F00B          	lfsr	2,11
  7894  00109A  0100               	movlb	0	; () banked
  7895  00109C  51E1               	movf	_ic_ptr& (0+255),w,b
  7896  00109E  26D9               	addwf	fsr2l,f,c
  7897  0010A0  0100               	movlb	0	; () banked
  7898  0010A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7899  0010A4  22DA               	addwfc	fsr2h,f,c
  7900  0010A6  0E01               	movlw	1
  7901  0010A8  6EDF               	movwf	indf2,c
  7902                           
  7903                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7904  0010AA  0100               	movlb	0	; () banked
  7905  0010AC  EE20 F00A          	lfsr	2,10
  7906  0010B0  0100               	movlb	0	; () banked
  7907  0010B2  51E1               	movf	_ic_ptr& (0+255),w,b
  7908  0010B4  26D9               	addwf	fsr2l,f,c
  7909  0010B6  0100               	movlb	0	; () banked
  7910  0010B8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7911  0010BA  22DA               	addwfc	fsr2h,f,c
  7912  0010BC  0E00               	movlw	0
  7913  0010BE  6EDF               	movwf	indf2,c
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 75: if (data_read) {
  7917  0010C0  5034               	movf	handle_start@data_read,w,c
  7918  0010C2  B4D8               	btfsc	status,2,c
  7919  0010C4  D03D               	goto	i2l2323
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7923  0010C6  AAC7               	btfss	4039,5,c	;volatile
  7924  0010C8  D021               	goto	i2l276
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7928  0010CA  0100               	movlb	0	; () banked
  7929  0010CC  EE20 F00C          	lfsr	2,12
  7930  0010D0  0100               	movlb	0	; () banked
  7931  0010D2  51E1               	movf	_ic_ptr& (0+255),w,b
  7932  0010D4  26D9               	addwf	fsr2l,f,c
  7933  0010D6  0100               	movlb	0	; () banked
  7934  0010D8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7935  0010DA  22DA               	addwfc	fsr2h,f,c
  7936  0010DC  0E05               	movlw	5
  7937  0010DE  6EDF               	movwf	indf2,c
  7938                           
  7939                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7940  0010E0  0100               	movlb	0	; () banked
  7941  0010E2  EE20 F00E          	lfsr	2,14
  7942  0010E6  0100               	movlb	0	; () banked
  7943  0010E8  51E1               	movf	_ic_ptr& (0+255),w,b
  7944  0010EA  26D9               	addwf	fsr2l,f,c
  7945  0010EC  0100               	movlb	0	; () banked
  7946  0010EE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7947  0010F0  22DA               	addwfc	fsr2h,f,c
  7948  0010F2  2ADF               	incf	indf2,f,c
  7949                           
  7950                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7951  0010F4  0100               	movlb	0	; () banked
  7952  0010F6  EE20 F00D          	lfsr	2,13
  7953  0010FA  0100               	movlb	0	; () banked
  7954  0010FC  51E1               	movf	_ic_ptr& (0+255),w,b
  7955  0010FE  26D9               	addwf	fsr2l,f,c
  7956  001100  0100               	movlb	0	; () banked
  7957  001102  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7958  001104  22DA               	addwfc	fsr2h,f,c
  7959  001106  0E05               	movlw	5
  7960  001108  6EDF               	movwf	indf2,c
  7961                           
  7962                           ;my_i2c.c: 82: } else {
  7963  00110A  0012               	return	
  7964  00110C                     i2l276:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  7968  00110C  A4C7               	btfss	4039,2,c	;volatile
  7969  00110E  D00C               	goto	i2l2321
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  7973  001110  0100               	movlb	0	; () banked
  7974  001112  EE20 F00C          	lfsr	2,12
  7975  001116  0100               	movlb	0	; () banked
  7976  001118  51E1               	movf	_ic_ptr& (0+255),w,b
  7977  00111A  26D9               	addwf	fsr2l,f,c
  7978  00111C  0100               	movlb	0	; () banked
  7979  00111E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7980  001120  22DA               	addwfc	fsr2h,f,c
  7981  001122  0E08               	movlw	8
  7982  001124  6EDF               	movwf	indf2,c
  7983                           
  7984                           ;my_i2c.c: 85: } else {
  7985  001126  0012               	return	
  7986  001128                     i2l2321:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  7990  001128  0100               	movlb	0	; () banked
  7991  00112A  EE20 F00C          	lfsr	2,12
  7992  00112E  0100               	movlb	0	; () banked
  7993  001130  51E1               	movf	_ic_ptr& (0+255),w,b
  7994  001132  26D9               	addwf	fsr2l,f,c
  7995  001134  0100               	movlb	0	; () banked
  7996  001136  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7997  001138  22DA               	addwfc	fsr2h,f,c
  7998  00113A  0E07               	movlw	7
  7999  00113C  6EDF               	movwf	indf2,c
  8000  00113E  0012               	return	
  8001  001140                     i2l2323:
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8005  001140  0100               	movlb	0	; () banked
  8006  001142  EE20 F00C          	lfsr	2,12
  8007  001146  0100               	movlb	0	; () banked
  8008  001148  51E1               	movf	_ic_ptr& (0+255),w,b
  8009  00114A  26D9               	addwf	fsr2l,f,c
  8010  00114C  0100               	movlb	0	; () banked
  8011  00114E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8012  001150  22DA               	addwfc	fsr2h,f,c
  8013  001152  0E06               	movlw	6
  8014  001154  6EDF               	movwf	indf2,c
  8015  001156  0012               	return	
  8016  001158                     __end_of_handle_start:
  8017                           	opt stack 0
  8018                           pclatu	equ	0xFFB
  8019                           pclath	equ	0xFFA
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           postinc0	equ	0xFEE
  8028                           fsr0h	equ	0xFEA
  8029                           fsr0l	equ	0xFE9
  8030                           wreg	equ	0xFE8
  8031                           indf1	equ	0xFE7
  8032                           fsr1h	equ	0xFE2
  8033                           fsr1l	equ	0xFE1
  8034                           bsr	equ	0xFE0
  8035                           indf2	equ	0xFDF
  8036                           postinc2	equ	0xFDE
  8037                           postdec2	equ	0xFDD
  8038                           fsr2h	equ	0xFDA
  8039                           fsr2l	equ	0xFD9
  8040                           status	equ	0xFD8
  8041                           
  8042 ;; *************** function _ToMainHigh_sendmsg *****************
  8043 ;; Defined at:
  8044 ;;		line 126 in file "src/messages.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  length          1    wreg     unsigned char 
  8047 ;;  msgtype         1   68[COMRAM] unsigned char 
  8048 ;;  data            2   69[COMRAM] PTR void 
  8049 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  length          1   71[COMRAM] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      char 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8061 ;;      Params:         3       0       0       0       0
  8062 ;;      Locals:         1       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0
  8064 ;;      Totals:         4       0       0       0       0
  8065 ;;Total ram usage:        4 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    2
  8068 ;; This function calls:
  8069 ;;		i2_send_msg
  8070 ;; This function is called by:
  8071 ;;		_i2c_int_handler
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text47
  8076  001BAA                     __ptext47:
  8077                           	opt stack 0
  8078  001BAA                     _ToMainHigh_sendmsg:
  8079                           	opt stack 16
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;incstack = 0
  8083                           ;ToMainHigh_sendmsg@length stored from wreg
  8084  001BAA  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8085                           
  8086                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8087                           ;	Return value of _ToMainHigh_sendmsg is never used
  8088  001BAC  0101               	movlb	1	; () banked
  8089  001BAE  0E01               	movlw	high _ToMainHigh_MQ
  8090  001BB0  6E3F               	movwf	i2send_msg@qptr+1,c
  8091  001BB2  0101               	movlb	1	; () banked
  8092  001BB4  0EB4               	movlw	low _ToMainHigh_MQ
  8093  001BB6  6E3E               	movwf	i2send_msg@qptr,c
  8094  001BB8  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8095  001BBC  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8096  001BC0  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8097  001BC4  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8098  001BC8  ECAC  F008         	call	i2_send_msg	;wreg free
  8099  001BCC  0012               	return	
  8100  001BCE                     __end_of_ToMainHigh_sendmsg:
  8101                           	opt stack 0
  8102                           pclatu	equ	0xFFB
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           postinc0	equ	0xFEE
  8112                           fsr0h	equ	0xFEA
  8113                           fsr0l	equ	0xFE9
  8114                           wreg	equ	0xFE8
  8115                           indf1	equ	0xFE7
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           bsr	equ	0xFE0
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           fsr2h	equ	0xFDA
  8123                           fsr2l	equ	0xFD9
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function i2_send_msg *****************
  8127 ;; Defined at:
  8128 ;;		line 24 in file "src/messages.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8131 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8132 ;;  length          1   63[COMRAM] unsigned char 
  8133 ;;  msgtype         1   64[COMRAM] unsigned char 
  8134 ;;  data            2   65[COMRAM] PTR void 
  8135 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8136 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8139 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8140 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8141 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8142 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      char 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8152 ;;      Params:         6       0       0       0       0
  8153 ;;      Locals:         0       5       0       0       0
  8154 ;;      Temps:          1       0       0       0       0
  8155 ;;      Totals:         7       5       0       0       0
  8156 ;;Total ram usage:       12 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    1
  8159 ;; This function calls:
  8160 ;;		i2_memcpy
  8161 ;; This function is called by:
  8162 ;;		_ToMainHigh_sendmsg
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text48
  8167  001158                     __ptext48:
  8168                           	opt stack 0
  8169  001158                     i2_send_msg:
  8170                           	opt stack 16
  8171                           
  8172                           ;messages.c: 25: unsigned char slot;
  8173                           ;messages.c: 27: msg *qmsg;
  8174                           ;messages.c: 28: size_t tlength = length;
  8175                           
  8176                           ;incstack = 0
  8177  001158  0100               	movlb	0	; () banked
  8178  00115A  C040  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8179  00115E  0100               	movlb	0	; () banked
  8180  001160  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8184  001162  EE20 F034          	lfsr	2,52
  8185  001166  503E               	movf	i2send_msg@qptr,w,c
  8186  001168  26D9               	addwf	fsr2l,f,c
  8187  00116A  503F               	movf	i2send_msg@qptr+1,w,c
  8188  00116C  22DA               	addwfc	fsr2h,f,c
  8189  00116E  50DF               	movf	indf2,w,c
  8190  001170  0100               	movlb	0	; () banked
  8191  001172  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8195  001174  0100               	movlb	0	; () banked
  8196  001176  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8197  001178  0D0D               	mullw	13
  8198  00117A  50F3               	movf	prodl,w,c
  8199  00117C  243E               	addwf	i2send_msg@qptr,w,c
  8200  00117E  0100               	movlb	0	; () banked
  8201  001180  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8202  001182  50F4               	movf	prodh,w,c
  8203  001184  203F               	addwfc	i2send_msg@qptr+1,w,c
  8204  001186  0100               	movlb	0	; () banked
  8205  001188  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;messages.c: 41: if (qmsg->full != 0) {
  8209  00118A  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8210  00118E  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8211  001192  50DF               	movf	indf2,w,c
  8212  001194  B4D8               	btfsc	status,2,c
  8213  001196  D002               	goto	i2l3057
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;messages.c: 42: return (-1);
  8217  001198  0EFF               	movlw	255
  8218  00119A  0012               	return	
  8219  00119C                     i2l3057:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;messages.c: 43: }
  8223                           ;messages.c: 46: qmsg->length = length;
  8224  00119C  0100               	movlb	0	; () banked
  8225  00119E  EE20 F001          	lfsr	2,1
  8226  0011A2  0100               	movlb	0	; () banked
  8227  0011A4  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8228  0011A6  26D9               	addwf	fsr2l,f,c
  8229  0011A8  0100               	movlb	0	; () banked
  8230  0011AA  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8231  0011AC  22DA               	addwfc	fsr2h,f,c
  8232  0011AE  C040  FFDF         	movff	i2send_msg@length,indf2
  8233                           
  8234                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8235  0011B2  0100               	movlb	0	; () banked
  8236  0011B4  EE20 F002          	lfsr	2,2
  8237  0011B8  0100               	movlb	0	; () banked
  8238  0011BA  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8239  0011BC  26D9               	addwf	fsr2l,f,c
  8240  0011BE  0100               	movlb	0	; () banked
  8241  0011C0  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8242  0011C2  22DA               	addwfc	fsr2h,f,c
  8243  0011C4  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8247  0011C8  0E03               	movlw	3
  8248  0011CA  0100               	movlb	0	; () banked
  8249  0011CC  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8250  0011CE  6E34               	movwf	i2memcpy@d1,c
  8251  0011D0  0E00               	movlw	0
  8252  0011D2  0100               	movlb	0	; () banked
  8253  0011D4  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8254  0011D6  6E35               	movwf	i2memcpy@d1+1,c
  8255  0011D8  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8256  0011DC  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8257  0011E0  C0B6  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8258  0011E4  C0B7  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8259  0011E8  EC3D  F00C         	call	i2_memcpy	;wreg free
  8260                           
  8261                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8262  0011EC  EE20 F034          	lfsr	2,52
  8263  0011F0  503E               	movf	i2send_msg@qptr,w,c
  8264  0011F2  26D9               	addwf	fsr2l,f,c
  8265  0011F4  503F               	movf	i2send_msg@qptr+1,w,c
  8266  0011F6  22DA               	addwfc	fsr2h,f,c
  8267  0011F8  EE10 F034          	lfsr	1,52
  8268  0011FC  503E               	movf	i2send_msg@qptr,w,c
  8269  0011FE  26E1               	addwf	fsr1l,f,c
  8270  001200  503F               	movf	i2send_msg@qptr+1,w,c
  8271  001202  22E2               	addwfc	fsr1h,f,c
  8272  001204  50E7               	movf	indf1,w,c
  8273  001206  6E44               	movwf	??i2_send_msg& (0+255),c
  8274  001208  2844               	incf	??i2_send_msg,w,c
  8275  00120A  0B03               	andlw	3
  8276  00120C  6EDF               	movwf	indf2,c
  8277                           
  8278                           ;messages.c: 59: qmsg->full = 1;
  8279  00120E  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8280  001212  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8281  001216  0E01               	movlw	1
  8282  001218  6EDF               	movwf	indf2,c
  8283                           
  8284                           ;messages.c: 60: return (1);
  8285  00121A  0E01               	movlw	1
  8286  00121C  0012               	return	
  8287  00121E                     __end_ofi2_send_msg:
  8288                           	opt stack 0
  8289                           pclatu	equ	0xFFB
  8290                           pclath	equ	0xFFA
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           fsr0h	equ	0xFEA
  8300                           fsr0l	equ	0xFE9
  8301                           wreg	equ	0xFE8
  8302                           indf1	equ	0xFE7
  8303                           fsr1h	equ	0xFE2
  8304                           fsr1l	equ	0xFE1
  8305                           bsr	equ	0xFE0
  8306                           indf2	equ	0xFDF
  8307                           postinc2	equ	0xFDE
  8308                           postdec2	equ	0xFDD
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function i2_memcpy *****************
  8314 ;; Defined at:
  8315 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  d1              2   51[COMRAM] PTR void 
  8318 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8319 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8320 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8321 ;;  s1              2   53[COMRAM] PTR const void 
  8322 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8323 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8324 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8325 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8326 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8327 ;;  n               2   55[COMRAM] unsigned int 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8330 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8331 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8332 ;;		 -> timer1_int_handler@curPos(2), sendUARTbyte@temp(1), NULL(0), i2c_int_handler@error_buf(3), 
  8333 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8334 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8335 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8336 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8337 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8338 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2   51[COMRAM] PTR void 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8348 ;;      Params:         6       0       0       0       0
  8349 ;;      Locals:         4       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0
  8351 ;;      Totals:        10       0       0       0       0
  8352 ;;Total ram usage:       10 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		i2_send_msg
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text49
  8362  00187A                     __ptext49:
  8363                           	opt stack 0
  8364  00187A                     i2_memcpy:
  8365                           	opt stack 16
  8366                           
  8367                           ;incstack = 0
  8368  00187A  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8369  00187E  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8370  001882  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8371  001886  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8372  00188A  D00E               	goto	i2l3019
  8373  00188C                     i2l3013:
  8374  00188C  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8375  001890  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8376  001894  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8377  001898  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8378  00189C  CFDF FFE7          	movff	indf2,indf1
  8379  0018A0  4A3C               	infsnz	i2memcpy@s,f,c
  8380  0018A2  2A3D               	incf	i2memcpy@s+1,f,c
  8381  0018A4  4A3A               	infsnz	i2memcpy@d,f,c
  8382  0018A6  2A3B               	incf	i2memcpy@d+1,f,c
  8383  0018A8                     i2l3019:
  8384  0018A8  0638               	decf	i2memcpy@n,f,c
  8385  0018AA  A0D8               	btfss	status,0,c
  8386  0018AC  0639               	decf	i2memcpy@n+1,f,c
  8387  0018AE  2838               	incf	i2memcpy@n& (0+255),w,c
  8388  0018B0  B4D8               	btfsc	status,2,c
  8389  0018B2  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8390  0018B4  B4D8               	btfsc	status,2,c
  8391                           
  8392                           ;	Return value of i2_memcpy is never used
  8393  0018B6  0012               	return	
  8394  0018B8  D7E9               	goto	i2l3013
  8395  0018BA                     __end_ofi2_memcpy:
  8396                           	opt stack 0
  8397                           pclatu	equ	0xFFB
  8398                           pclath	equ	0xFFA
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           postinc0	equ	0xFEE
  8407                           fsr0h	equ	0xFEA
  8408                           fsr0l	equ	0xFE9
  8409                           wreg	equ	0xFE8
  8410                           indf1	equ	0xFE7
  8411                           fsr1h	equ	0xFE2
  8412                           fsr1l	equ	0xFE1
  8413                           bsr	equ	0xFE0
  8414                           indf2	equ	0xFDF
  8415                           postinc2	equ	0xFDE
  8416                           postdec2	equ	0xFDD
  8417                           fsr2h	equ	0xFDA
  8418                           fsr2l	equ	0xFD9
  8419                           status	equ	0xFD8
  8420                           
  8421 ;; *************** function _SleepIfOkay *****************
  8422 ;; Defined at:
  8423 ;;		line 226 in file "src/messages.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;		None               void
  8430 ;; Registers used:
  8431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8437 ;;      Params:         0       0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    2
  8444 ;; This function calls:
  8445 ;;		_enter_sleep_mode
  8446 ;;		i2_check_msg
  8447 ;;		i2_in_high_int
  8448 ;;		i2_in_low_int
  8449 ;; This function is called by:
  8450 ;;		_InterruptHandlerHigh
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text50
  8455  0017EC                     __ptext50:
  8456                           	opt stack 0
  8457  0017EC                     _SleepIfOkay:
  8458                           	opt stack 17
  8459                           
  8460                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8461                           
  8462                           ;incstack = 0
  8463  0017EC  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8464  0017EE  D001               	goto	i2l2587
  8465  0017F0  0012               	return	
  8466  0017F2                     i2l2587:
  8467                           
  8468                           ;messages.c: 230: }
  8469                           ;messages.c: 233: if (in_low_int()) {
  8470  0017F2  EC85  F00D         	call	i2_in_low_int	;wreg free
  8471  0017F6  5037               	movf	?i2_in_low_int+1,w,c
  8472  0017F8  1036               	iorwf	?i2_in_low_int,w,c
  8473  0017FA  A4D8               	btfss	status,2,c
  8474  0017FC  0012               	return	
  8475                           
  8476                           ;messages.c: 235: }
  8477                           ;messages.c: 238: if (!in_high_int()) {
  8478                           
  8479                           ;messages.c: 234: return;
  8480  0017FE  EC50  F00E         	call	i2_in_high_int	;wreg free
  8481  001802  5035               	movf	?i2_in_high_int+1,w,c
  8482  001804  1034               	iorwf	?i2_in_high_int,w,c
  8483  001806  B4D8               	btfsc	status,2,c
  8484  001808  0012               	return	
  8485                           
  8486                           ;messages.c: 240: }
  8487                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8488                           
  8489                           ;messages.c: 239: return;
  8490  00180A  0101               	movlb	1	; () banked
  8491  00180C  0E01               	movlw	high _ToMainHigh_MQ
  8492  00180E  6E35               	movwf	i2check_msg@qptr+1,c
  8493  001810  0101               	movlb	1	; () banked
  8494  001812  0EB4               	movlw	low _ToMainHigh_MQ
  8495  001814  6E34               	movwf	i2check_msg@qptr,c
  8496  001816  ECE7  F00D         	call	i2_check_msg	;wreg free
  8497  00181A  0900               	iorlw	0
  8498  00181C  A4D8               	btfss	status,2,c
  8499  00181E  0012               	return	
  8500                           
  8501                           ;messages.c: 247: }
  8502                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8503                           
  8504                           ;messages.c: 246: return;
  8505  001820  0100               	movlb	0	; () banked
  8506  001822  0E00               	movlw	high _ToMainLow_MQ
  8507  001824  6E35               	movwf	i2check_msg@qptr+1,c
  8508  001826  0100               	movlb	0	; () banked
  8509  001828  0E80               	movlw	low _ToMainLow_MQ
  8510  00182A  6E34               	movwf	i2check_msg@qptr,c
  8511  00182C  ECE7  F00D         	call	i2_check_msg	;wreg free
  8512  001830  0900               	iorlw	0
  8513  001832  B4D8               	btfsc	status,2,c
  8514                           
  8515                           ;messages.c: 250: }
  8516                           ;messages.c: 251: enter_sleep_mode();
  8517                           
  8518                           ;messages.c: 249: return;
  8519  001834  EC5A  F00E         	call	_enter_sleep_mode	;wreg free
  8520  001838  0012               	return	
  8521  00183A                     __end_of_SleepIfOkay:
  8522                           	opt stack 0
  8523                           pclatu	equ	0xFFB
  8524                           pclath	equ	0xFFA
  8525                           tblptru	equ	0xFF8
  8526                           tblptrh	equ	0xFF7
  8527                           tblptrl	equ	0xFF6
  8528                           tablat	equ	0xFF5
  8529                           prodh	equ	0xFF4
  8530                           prodl	equ	0xFF3
  8531                           intcon	equ	0xFF2
  8532                           postinc0	equ	0xFEE
  8533                           fsr0h	equ	0xFEA
  8534                           fsr0l	equ	0xFE9
  8535                           wreg	equ	0xFE8
  8536                           indf1	equ	0xFE7
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           bsr	equ	0xFE0
  8540                           indf2	equ	0xFDF
  8541                           postinc2	equ	0xFDE
  8542                           postdec2	equ	0xFDD
  8543                           fsr2h	equ	0xFDA
  8544                           fsr2l	equ	0xFD9
  8545                           status	equ	0xFD8
  8546                           
  8547 ;; *************** function i2_in_low_int *****************
  8548 ;; Defined at:
  8549 ;;		line 30 in file "src/interrupts.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  2   53[COMRAM] int 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8563 ;;      Params:         2       0       0       0       0
  8564 ;;      Locals:         0       0       0       0       0
  8565 ;;      Temps:          0       0       0       0       0
  8566 ;;      Totals:         2       0       0       0       0
  8567 ;;Total ram usage:        2 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    1
  8570 ;; This function calls:
  8571 ;;		i2_in_high_int
  8572 ;; This function is called by:
  8573 ;;		_SleepIfOkay
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text51
  8578  001B0A                     __ptext51:
  8579                           	opt stack 0
  8580  001B0A                     i2_in_low_int:
  8581                           	opt stack 17
  8582                           
  8583                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8584                           
  8585                           ;incstack = 0
  8586  001B0A  ACF2               	btfss	intcon,6,c	;volatile
  8587  001B0C  D005               	goto	i2l2421
  8588                           
  8589                           ;interrupts.c: 32: return (0);
  8590  001B0E  0E00               	movlw	0
  8591  001B10  6E37               	movwf	?i2_in_low_int+1,c
  8592  001B12  0E00               	movlw	0
  8593  001B14  6E36               	movwf	?i2_in_low_int,c
  8594  001B16  0012               	return	
  8595  001B18                     i2l2421:
  8596  001B18  EC50  F00E         	call	i2_in_high_int	;wreg free
  8597  001B1C  5035               	movf	?i2_in_high_int+1,w,c
  8598  001B1E  1034               	iorwf	?i2_in_high_int,w,c
  8599  001B20  B4D8               	btfsc	status,2,c
  8600  001B22  D005               	goto	i2l2429
  8601                           
  8602                           ;interrupts.c: 34: return (0);
  8603  001B24  0E00               	movlw	0
  8604  001B26  6E37               	movwf	?i2_in_low_int+1,c
  8605  001B28  0E00               	movlw	0
  8606  001B2A  6E36               	movwf	?i2_in_low_int,c
  8607  001B2C  0012               	return	
  8608  001B2E                     i2l2429:
  8609                           
  8610                           ;interrupts.c: 36: return (1);
  8611  001B2E  0E00               	movlw	0
  8612  001B30  6E37               	movwf	?i2_in_low_int+1,c
  8613  001B32  0E01               	movlw	1
  8614  001B34  6E36               	movwf	?i2_in_low_int,c
  8615  001B36  0012               	return	
  8616  001B38                     __end_ofi2_in_low_int:
  8617                           	opt stack 0
  8618                           pclatu	equ	0xFFB
  8619                           pclath	equ	0xFFA
  8620                           tblptru	equ	0xFF8
  8621                           tblptrh	equ	0xFF7
  8622                           tblptrl	equ	0xFF6
  8623                           tablat	equ	0xFF5
  8624                           prodh	equ	0xFF4
  8625                           prodl	equ	0xFF3
  8626                           intcon	equ	0xFF2
  8627                           postinc0	equ	0xFEE
  8628                           fsr0h	equ	0xFEA
  8629                           fsr0l	equ	0xFE9
  8630                           wreg	equ	0xFE8
  8631                           indf1	equ	0xFE7
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           bsr	equ	0xFE0
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           fsr2h	equ	0xFDA
  8639                           fsr2l	equ	0xFD9
  8640                           status	equ	0xFD8
  8641                           
  8642 ;; *************** function i2_in_high_int *****************
  8643 ;; Defined at:
  8644 ;;		line 22 in file "src/interrupts.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  2   51[COMRAM] int 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8658 ;;      Params:         2       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0
  8661 ;;      Totals:         2       0       0       0       0
  8662 ;;Total ram usage:        2 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_SleepIfOkay
  8668 ;;		i2_in_low_int
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text52
  8673  001CA0                     __ptext52:
  8674                           	opt stack 0
  8675  001CA0                     i2_in_high_int:
  8676                           	opt stack 17
  8677                           
  8678                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8679                           
  8680                           ;incstack = 0
  8681  001CA0  0E00               	movlw	0
  8682  001CA2  AEF2               	btfss	intcon,7,c	;volatile
  8683  001CA4  0E01               	movlw	1
  8684  001CA6  6E34               	movwf	?i2_in_high_int,c
  8685  001CA8  6A35               	clrf	?i2_in_high_int+1,c
  8686  001CAA  0012               	return	
  8687  001CAC                     __end_ofi2_in_high_int:
  8688                           	opt stack 0
  8689                           pclatu	equ	0xFFB
  8690                           pclath	equ	0xFFA
  8691                           tblptru	equ	0xFF8
  8692                           tblptrh	equ	0xFF7
  8693                           tblptrl	equ	0xFF6
  8694                           tablat	equ	0xFF5
  8695                           prodh	equ	0xFF4
  8696                           prodl	equ	0xFF3
  8697                           intcon	equ	0xFF2
  8698                           postinc0	equ	0xFEE
  8699                           fsr0h	equ	0xFEA
  8700                           fsr0l	equ	0xFE9
  8701                           wreg	equ	0xFE8
  8702                           indf1	equ	0xFE7
  8703                           fsr1h	equ	0xFE2
  8704                           fsr1l	equ	0xFE1
  8705                           bsr	equ	0xFE0
  8706                           indf2	equ	0xFDF
  8707                           postinc2	equ	0xFDE
  8708                           postdec2	equ	0xFDD
  8709                           fsr2h	equ	0xFDA
  8710                           fsr2l	equ	0xFD9
  8711                           status	equ	0xFD8
  8712                           
  8713 ;; *************** function i2_check_msg *****************
  8714 ;; Defined at:
  8715 ;;		line 220 in file "src/messages.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8718 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      unsigned char 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8730 ;;      Params:         2       0       0       0       0
  8731 ;;      Locals:         0       0       0       0       0
  8732 ;;      Temps:          1       0       0       0       0
  8733 ;;      Totals:         3       0       0       0       0
  8734 ;;Total ram usage:        3 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_SleepIfOkay
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text53
  8744  001BCE                     __ptext53:
  8745                           	opt stack 0
  8746  001BCE                     i2_check_msg:
  8747                           	opt stack 18
  8748                           
  8749                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8750                           
  8751                           ;incstack = 0
  8752  001BCE  EE20 F035          	lfsr	2,53
  8753  001BD2  5034               	movf	i2check_msg@qptr,w,c
  8754  001BD4  26D9               	addwf	fsr2l,f,c
  8755  001BD6  5035               	movf	i2check_msg@qptr+1,w,c
  8756  001BD8  22DA               	addwfc	fsr2h,f,c
  8757  001BDA  50DF               	movf	indf2,w,c
  8758  001BDC  6E36               	movwf	??i2_check_msg& (0+255),c
  8759  001BDE  5036               	movf	??i2_check_msg,w,c
  8760  001BE0  0D0D               	mullw	13
  8761  001BE2  50F3               	movf	prodl,w,c
  8762  001BE4  2434               	addwf	i2check_msg@qptr,w,c
  8763  001BE6  6ED9               	movwf	fsr2l,c
  8764  001BE8  50F4               	movf	prodh,w,c
  8765  001BEA  2035               	addwfc	i2check_msg@qptr+1,w,c
  8766  001BEC  6EDA               	movwf	fsr2h,c
  8767  001BEE  50DF               	movf	indf2,w,c
  8768  001BF0  0012               	return	
  8769  001BF2                     __end_ofi2_check_msg:
  8770                           	opt stack 0
  8771                           pclatu	equ	0xFFB
  8772                           pclath	equ	0xFFA
  8773                           tblptru	equ	0xFF8
  8774                           tblptrh	equ	0xFF7
  8775                           tblptrl	equ	0xFF6
  8776                           tablat	equ	0xFF5
  8777                           prodh	equ	0xFF4
  8778                           prodl	equ	0xFF3
  8779                           intcon	equ	0xFF2
  8780                           postinc0	equ	0xFEE
  8781                           fsr0h	equ	0xFEA
  8782                           fsr0l	equ	0xFE9
  8783                           wreg	equ	0xFE8
  8784                           indf1	equ	0xFE7
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           bsr	equ	0xFE0
  8788                           indf2	equ	0xFDF
  8789                           postinc2	equ	0xFDE
  8790                           postdec2	equ	0xFDD
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _enter_sleep_mode *****************
  8796 ;; Defined at:
  8797 ;;		line 202 in file "src/messages.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;		None               void
  8804 ;; Registers used:
  8805 ;;		None
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8811 ;;      Params:         0       0       0       0       0
  8812 ;;      Locals:         0       0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0
  8814 ;;      Totals:         0       0       0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_SleepIfOkay
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text54
  8825  001CB4                     __ptext54:
  8826                           	opt stack 0
  8827  001CB4                     _enter_sleep_mode:
  8828                           	opt stack 18
  8829                           
  8830                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8831                           
  8832                           ;incstack = 0
  8833  001CB4  8ED3               	bsf	4051,7,c	;volatile
  8834  001CB6  0003               	sleep		;# 
  8835  001CB8  0012               	return	
  8836  001CBA                     __end_of_enter_sleep_mode:
  8837                           	opt stack 0
  8838  0000                     pclatu	equ	0xFFB
  8839                           pclath	equ	0xFFA
  8840                           tblptru	equ	0xFF8
  8841                           tblptrh	equ	0xFF7
  8842                           tblptrl	equ	0xFF6
  8843                           tablat	equ	0xFF5
  8844                           prodh	equ	0xFF4
  8845                           prodl	equ	0xFF3
  8846                           intcon	equ	0xFF2
  8847                           postinc0	equ	0xFEE
  8848                           fsr0h	equ	0xFEA
  8849                           fsr0l	equ	0xFE9
  8850                           wreg	equ	0xFE8
  8851                           indf1	equ	0xFE7
  8852                           fsr1h	equ	0xFE2
  8853                           fsr1l	equ	0xFE1
  8854                           bsr	equ	0xFE0
  8855                           indf2	equ	0xFDF
  8856                           postinc2	equ	0xFDE
  8857                           postdec2	equ	0xFDD
  8858                           fsr2h	equ	0xFDA
  8859                           fsr2l	equ	0xFD9
  8860                           status	equ	0xFD8
  8861                           pclatu	equ	0xFFB
  8862                           pclath	equ	0xFFA
  8863                           tblptru	equ	0xFF8
  8864                           tblptrh	equ	0xFF7
  8865                           tblptrl	equ	0xFF6
  8866                           tablat	equ	0xFF5
  8867                           prodh	equ	0xFF4
  8868                           prodl	equ	0xFF3
  8869                           intcon	equ	0xFF2
  8870                           postinc0	equ	0xFEE
  8871                           fsr0h	equ	0xFEA
  8872                           fsr0l	equ	0xFE9
  8873                           wreg	equ	0xFE8
  8874                           indf1	equ	0xFE7
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           bsr	equ	0xFE0
  8878                           indf2	equ	0xFDF
  8879                           postinc2	equ	0xFDE
  8880                           postdec2	equ	0xFDD
  8881                           fsr2h	equ	0xFDA
  8882                           fsr2l	equ	0xFD9
  8883                           status	equ	0xFD8
  8884                           
  8885                           	psect	rparam
  8886  0000                     pclatu	equ	0xFFB
  8887                           pclath	equ	0xFFA
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           postinc0	equ	0xFEE
  8896                           fsr0h	equ	0xFEA
  8897                           fsr0l	equ	0xFE9
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           bsr	equ	0xFE0
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     43      99
    BANK1           256    126     234
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    quad_lookup_init@table	PTR unsigned char  size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 40
		 -> main@t1thread_data(BANK1[40]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> main@ctrl(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), main@ctrl(BANK1[2]), 
		 -> main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_int_handler@curPos(COMRAM[2]), sendUARTbyte@temp(COMRAM[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->_sendUARTbyte
    _sendUARTbyte->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_timer1_lthread->_quad_lookup_init
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0   16519
                                             23 BANK1    103   103      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer1
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                        _sendUARTarr
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             12 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      13     5      8     455
                                             29 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             29 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sendUARTarr                                          4     2      2    2989
                                             12 BANK1      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2785
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             39 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2    1008
                                             31 BANK0      2     0      2
                   _quad_lookup_init
 ---------------------------------------------------------------------------------
 (2) _quad_lookup_init                                     2     0      2     768
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     171
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             39 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4311
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               5     5      0    1113
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1010
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   4     4      0    2188
                                             29 COMRAM     2     2      0
                       _sendUARTbyte
                i1_ToMainLow_sendmsg
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sendUARTbyte                                         3     3      0    1058
                                             26 COMRAM     3     3      0
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3     987
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    2146
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2050
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1448
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer1
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
     _quad_lookup_init
   _init_uart_lthread
   _init_uart_recv
   _sendUARTarr
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _sendUARTbyte
       i1_ToMainLow_sendmsg
         i1_send_msg
           i1_memcpy
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     7E      EA       6       91.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2B      63       4       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CF      11        0.0%
DATA                 0      0     1CF      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Feb 25 19:55:45 2015

               main@uthread_data 0127         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 19A8  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1AA6  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l122 0768                              l128 07BE  
                            l445 1AEE                              l447 1B04  
                            l448 1B06                              l482 14F6  
                            l730 1C4E                              l486 1510  
                            l487 1512                              l488 151E  
                            l489 1520             ?_FromMainLow_sendmsg 00DE  
__size_of_uart_trans_int_handler 0056             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 017E                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D3  
               ??_init_uart_recv 00D5                             l3003 17B6  
                           l2133 18EA                             l2125 18CC  
                           l3009 17D6                             l3033 0E3E  
                           l2235 1964                             l2247 166C  
                           l3081 0C2A                             l3403 086E  
                           l3405 08B2                             l3263 1A50  
                           l3097 0CE8                             l3409 08F4  
                           l3291 1294                             l3371 0778  
                           l2725 14F8                             l2717 14E6  
                           l2821 0D84                             l3381 07C4  
                           l3373 0782                             l3295 12B8  
                           l3383 07D8                             l3391 0806  
                           l3367 0724                             l3359 06EE  
                           l2817 0D08                             l3385 07E2  
                           l3369 076E                             l3377 0790  
                           l3379 07A6                             l3395 0820  
                           l3389 07F0                             l3397 083C  
                           l2791 16C8                             l2697 1AF0  
                           l2785 16A8                             l2797 16E8  
                           _LATA 000F89                             _LATB 000F8A  
                           u2297 1C50                             i1l52 007A  
                _FromMainHigh_MQ 0200                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0FC0  
                           _main 0626                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0138  
                     i1_send_msg 138C                             pclat 000FFA  
                    i2_check_msg 1BCE                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0034  
                           start 00C0              i1WriteTimer1@timer1 0001  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 1158  
      ToMainHigh_recvmsg@msgtype 010C                   send_msg@length 0102  
    __size_of_timer0_int_handler 0002                      _Delay1KTCYx 1C4A  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00E1  
                          ?_main 0001                    i1_WriteTimer1 1C70  
   __size_ofi1_ToMainLow_sendmsg 0024                            _CMCON 000FB4  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D3  
                          i1l500 1C1E                            i1l362 1770  
                     i1memcpy@d1 0001                            i1l359 1798  
                          i2l320 048E                            i2l314 0410  
                          i2l306 02EE                            i2l276 110C  
                          i2l292 0176                            i2l286 0480  
                          i2l288 0144                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR1H 000FCF                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                sendUARTarr@length 010F  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
              sendUARTarr@retval 010E                  __end_of_in_main 1972  
     ToMainLow_recvmsg@maxlength 00DF          timer0_lthread@msgbuffer 00D9  
        i2c_configure_slave@addr 00D3                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1746  
               __end_ofi1_memcpy 187A                 __end_ofi2_memcpy 18BA  
                   ?_sendUARTarr 010C                  __initialization 19DE  
     uart_trans_int_handler@data 001E                     __end_of_main 0912  
   uart_trans_int_handler@length 0022      __size_of_timer1_int_handler 003E  
     __size_of_ToMainLow_recvmsg 0036                ?_quad_lookup_init 00D3  
     __size_of_ToMainLow_sendmsg 0032            __size_ofi2_in_low_int 002E  
                 ?i1_WriteTimer1 0001                           ??_main 00E1  
             ??_quad_lookup_init 00D5                  send_msg@msgtype 0103  
                  __activetblptr 000002                  send_msg@tlength 0106  
     FromMainLow_sendmsg@msgtype 00DE             __end_of_handle_start 1158  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
          quad_lookup_init@table 00D3                           i1l2201 1006  
                         i1l2061 184C                           i1l2217 108E  
                         i1l2067 1868                           i1l2095 13C4  
                         i1l2627 14AE                           i1l2649 178A  
                         i2l3013 188C                           i2l2321 1128  
                         i2l3019 18A8                           i2l2323 1140  
                         i1l2883 0066                           i2l2421 1B18  
                         i2l3221 0454                           i2l3133 013C  
                         i2l3151 01A2                           i2l3127 012E  
                         i2l3311 158C                           i2l3057 119C  
                         i2l3241 0574                           i2l3233 04F0  
                         i2l3153 01CE                           i2l3305 1582  
                         i1l2889 0070                       _OpenTimer1 1AD8  
                         i2l3227 0492                           i2l3171 0260  
                         i2l3163 0208                           i2l2429 1B2E  
                 __CFG_WDTEN$OFF 000000                           i2l3249 0600  
                         i2l3193 035C                           i2l3169 0220  
                         i2l3195 039E                           i2l3199 03A6  
                         i2l2587 17F2      __end_of_i2c_configure_slave 1B60  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0DF0  
             timer0_lthread@tptr 00D3          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1B0A                      ?i2_send_msg 003E  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0082  
                _i2c_int_handler 00C4                           _ic_ptr 00E1  
                  main@msgbuffer 0119                 __end_of_init_i2c 1630  
               OpenTimer1@config 00D3                           _memcpy 179C  
                         clear_0 19E4                           clear_1 19F0  
                         clear_2 19FC                           _uc_ptr 0049  
                         main@ic 0162                           main@uc 0131  
               __end_of_recv_msg 0CEC      start_i2c_slave_reply@length 00D7  
                      ??_in_main 00D9                 __end_of_send_msg 0EE0  
        i2c_int_handler@i2c_data 00C1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00D5         ToMainLow_recvmsg@msgtype 010C  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 00DF  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1CBA  
                     __accesstop 0080          __end_of__initialization 1A06  
     __end_of_ToMainHigh_recvmsg 19DE       __end_of_ToMainHigh_sendmsg 1BCE  
             ?_init_uart_lthread 00D3                    ?_sendUARTbyte 0001  
    __end_of_init_timer1_lthread 138C              __end_of_SleepIfOkay 183A  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D5                  ??i1_WriteTimer1 0003  
             __size_of_check_msg 0032                __end_of_ReadUSART 1C2E  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 15C2  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 01B4                 _enter_sleep_mode 1CB4  
            __size_ofi2_send_msg 00C6             timer1_lthread@length 00D7  
                  ReadUSART@data 0001                __end_of_OpenUSART 154C  
                  check_msg@qptr 00D3        __end_of_init_uart_lthread 1CBC  
        ??_block_on_To_msgqueues 00D9             __size_of_init_queues 0056  
                     __pbssBANK0 0080                       __pbssBANK1 017E  
                     __pbssBANK2 0200                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021               sendUARTbyte@retval 001C  
                     __pnvCOMRAM 0049              i1_ToMainLow_sendmsg 1B86  
        __end_of_i2c_int_handler 0626                     ?i2_check_msg 0034  
                 ??_sendUARTbyte 001B               timer1_lthread@tptr 00D3  
           __size_of_sendUARTarr 0032                recv_msg@maxlength 0102  
                recv_msg@msgtype 0103                  recv_msg@tlength 0108  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
                        ?_memcpy 00D3                 WriteTimer1@timer 00D5  
                  ??_WriteTimer1 00D5          __size_of_timer0_lthread 000E  
           ?i1_ToMainLow_sendmsg 0017          __size_of_timer1_lthread 00E0  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1CA0  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1AD8                        ?_init_i2c 00D3  
                    _SleepIfOkay 17EC                        ?_recv_msg 0100  
                     _in_low_int 18BA                     _handle_start 1092  
                        __Hparam 0000                        ?_send_msg 0100  
                        __Lparam 0000       __end_of_timer0_int_handler 1CBE  
    __end_of_FromMainLow_recvmsg 1B86      __end_of_FromMainLow_sendmsg 1A42  
               init_uart_recv@uc 00D3                  __CFG_STVREN$OFF 000000  
                        __pcinit 19DE                  __size_of_memcpy 0050  
                     _init_queue 1630                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer1 0032  
                        __ptext0 0626                          __ptext1 121E  
                        __ptext2 1A10                          __ptext3 0EE0  
                        __ptext4 1C92                          __ptext5 0CEC  
                        __ptext6 1A42                          __ptext7 1A74  
                        __ptext8 0DF0                          __ptext9 1BF2  
              uart_lthread@index 0115                          _in_main 1936  
                      _T1CONbits 000FCD              __end_of_WriteTimer1 1C70  
                 ?i2_in_high_int 0034   __end_of_uart_trans_int_handler 179C  
     __size_of_init_uart_lthread 0002        __size_of_quad_lookup_init 02B8  
                 __pintcode_body 154C             end_of_initialization 1A06  
        timer1_lthread@msgbuffer 00D9   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 00D9                          memcpy@n 00D7  
                        memcpy@s 00DB    __end_of_uart_recv_int_handler 14CA  
                     ??_init_i2c 00D5                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00BF                    __Lmediumconst 0000  
                        int_func 154C                     ??i1_send_msg 0011  
                  ?_uart_lthread 010C          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00DD  
                   ??i2_send_msg 0044                       ??_send_msg 00DD  
     __end_of_timer1_int_handler 1936                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
                      _PORTAbits 000F80               __end_ofi1_recv_msg 1092  
           __end_of_sendUARTbyte 1C4A               __end_ofi1_send_msg 1436  
                      _TRISCbits 000F94               __end_ofi2_send_msg 121E  
       timer1_int_handler@curPos 001E                   ??_uart_lthread 00E1  
                      _TXSTAbits 000FAC                       main@length 0139  
                    ?_in_low_int 00D5               i1WriteTimer1@timer 0003  
          timer0_lthread@msgtype 00D5            _start_i2c_slave_reply 0CEC  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 1CBA               _ToMainHigh_recvmsg 19A8  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1BAA  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 1C92                      ?_init_queue 00D3  
                      i2memcpy@d 003A                      _WriteTimer1 1C5E  
                      i2memcpy@n 0038                        i2memcpy@s 003C  
                 _timer1_lthread 0EE0                   __end_of_memcpy 17EC  
              _enable_interrupts 1CAC             __size_of_Delay1KTCYx 0014  
            ?_ToMainHigh_recvmsg 010C                  ??i2_in_high_int 0036  
       i2c_int_handler@data_read 00C4              ?_ToMainHigh_sendmsg 0045  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 19DE                    ??_in_high_int 00D5  
                      _ReadUSART 1C10                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 010B  
               sendUARTbyte@data 001B              ??_enable_interrupts 00D3  
                   ??_OpenTimer1 00D3                 sendUARTbyte@temp 001D  
 __size_of_block_on_To_msgqueues 005C    __end_of_block_on_To_msgqueues 16F0  
                      _OpenUSART 14CA     __end_of_InterruptHandlerHigh 15CA  
                     init_i2c@ic 00D3             ??_ToMainHigh_recvmsg 00DF  
           ??_ToMainHigh_sendmsg 0048           __end_of_timer0_lthread 1CA0  
       i2c_int_handler@error_buf 00BC           __end_of_timer1_lthread 0FC0  
      __end_of_enable_interrupts 1CB4                         ??_memcpy 00D9  
          timer1_lthread@msgtype 00D5            __end_ofi1_WriteTimer1 1C82  
   __size_of_init_timer1_lthread 00AE               __end_of_OpenTimer1 1B0A  
       i2c_int_handler@msg_ready 00C3                      __pbssCOMRAM 004B  
                     ?_ReadUSART 0001                    ??_init_queues 00D6  
                  __pcstackBANK0 00B6                    __pcstackBANK1 0100  
            __size_of_in_low_int 003E         start_i2c_slave_reply@msg 00D3  
               _quad_lookup_init 0912              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00D3         ToMainLow_sendmsg@msgtype 00DE  
   __size_of_InterruptHandlerLow 00A8              __end_of_in_high_int 1C92  
                     ?_OpenUSART 00D3                     ?_SleepIfOkay 0001  
            timer1_lthread@index 00DF            ToMainLow_recvmsg@data 010E  
                   _ToMainLow_MQ 0080              __size_of_init_queue 0064  
                 _init_uart_recv 1BF2                        _check_msg 1AA6  
                      __pnvBANK0 00E1           ?_start_i2c_slave_reply 00D3  
              __size_of_init_i2c 0066                    ??_sendUARTarr 00E1  
                   recv_msg@data 0105                     recv_msg@qmsg 010A  
                   recv_msg@slot 0107                     recv_msg@qptr 0100  
              __size_of_recv_msg 0122                        __pintcode 0008  
              __size_of_send_msg 00F0                  ?_timer0_lthread 00D3  
                ?_timer1_lthread 00D3                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 010E            __size_of_sendUARTbyte 001C  
           __end_of_uart_lthread 12DE       i2c_int_handler@msg_to_send 00C2  
                       ?_in_main 00D7               _timer0_int_handler 1CBC  
              WriteTimer1@timer1 00D3       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 010E            ToMainLow_sendmsg@data 00DF  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 010C           __end_of_init_uart_recv 1C10  
            __end_of_init_queues 1746                  i2check_msg@qptr 0034  
                     ?_check_msg 00D3                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0036  
                       i1u150_20 191C                         i1u150_26 191E  
                   _sendUARTbyte 1C2E                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1BAA  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010             ??_timer0_int_handler 0034  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
            __end_of_sendUARTarr 1A74                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0026  
   __size_of_FromMainLow_sendmsg 0032             timer0_lthread@length 00D7  
             _timer1_int_handler 18F8                         i1_memcpy 183A  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 187A             timer0_lthread@msgval 00DB  
                    _in_high_int 1C82                     send_msg@data 0104  
            _i2c_configure_slave 1B38                     send_msg@qmsg 0109  
                   send_msg@slot 0108                     send_msg@qptr 0100  
                sendUARTarr@data 010C            uart_lthread@msgbuffer 0112  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D3  
                    ??_OpenUSART 00D5                  OpenUSART@config 00D8  
                 ??i2_in_low_int 0038            _uart_recv_int_handler 1436  
                   ??_in_low_int 00D7                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001             ??_timer1_int_handler 001E  
       __size_of_i2c_int_handler 0562               ??_enter_sleep_mode 0034  
                   ??_init_queue 00D5                     ?_WriteTimer1 00D3  
        ToMainLow_sendmsg@length 010B                main@t0thread_data 0117  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 0041      ToMainHigh_recvmsg@maxlength 00DF  
              i2send_msg@tlength 00B6          init_timer1_lthread@tptr 00D5  
                    _init_queues 16F0               __end_of_in_low_int 18F8  
                       __ptext10 1CBA                         __ptext11 12DE  
                       __ptext20 18BA                         __ptext12 0912  
                       __ptext21 1C82                         __ptext13 16F0  
                       __ptext30 1AD8                         __ptext22 1AA6  
                       __ptext14 1630                         __ptext23 1C4A  
                       __ptext15 15CA                         __ptext40 1B86  
                       __ptext32 1746                         __ptext24 1C5E  
                       __ptext16 1B38                         __ptext41 138C  
                       __ptext33 1B60                         __ptext25 1972  
                       __ptext17 1CAC                         __ptext50 17EC  
                       __ptext42 183A                         __ptext34 0FC0  
                       __ptext26 19A8                         __ptext18 1694  
                       __ptext51 1B0A                         __ptext35 1436  
                       __ptext27 0BCA                         __ptext19 1936  
                       __ptext52 1CA0                         __ptext44 1CBC  
                       __ptext36 1C10                         __ptext28 179C  
                       __ptext53 1BCE                         __ptext45 00C4  
                       __ptext37 18F8                         __ptext29 14CA  
                       __ptext54 1CB4                         __ptext46 1092  
                       __ptext38 1C70                         __ptext47 1BAA  
                       __ptext39 1C2E                         __ptext48 1158  
                       __ptext49 187A                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 0110               uart_lthread@status 0114  
                       _init_i2c 15CA              _init_timer1_lthread 12DE  
                  __size_of_main 02EC                    ??i2_check_msg 0036  
              main@t1thread_data 013A                      ??_check_msg 00D5  
             __end_of_init_queue 1694             __size_of_SleepIfOkay 004E  
                       _recv_msg 0BCA            ??_i2c_configure_slave 00D3  
                       _send_msg 0DF0                      _sendUARTarr 1A42  
                 init_queue@qptr 00D3            __size_of_uart_lthread 00C0  
       __end_of_quad_lookup_init 0BCA    uart_trans_int_handler@msgtype 0020  
                  ??_Delay1KTCYx 00D3                         main@baud 0124  
                       main@ctrl 0136              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00D5         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00D3                         memcpy@d1 00D3  
                       memcpy@s1 00D5            __end_ofi2_in_high_int 1CAC  
   i2c_int_handler@overrun_error 00C0                 i2send_msg@length 0040  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D5  
         ?_uart_recv_int_handler 0001                     _uart_lthread 121E  
                 main@UARTConfig 0125            _block_on_To_msgqueues 1694  
                  ?_handle_start 0001                 ??_timer0_lthread 00DB  
    __size_of_ToMainHigh_recvmsg 0036      __size_of_ToMainHigh_sendmsg 0024  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00DB  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0048              __end_ofi2_check_msg 1BF2  
          ??_init_timer1_lthread 00D7           ??_InterruptHandlerHigh 00C5  
              _ToMainLow_recvmsg 1972                _ToMainLow_sendmsg 1A74  
             main@last_reg_recvd 0126             __end_ofi2_in_low_int 1B38  
             ?_ToMainLow_recvmsg 010C              __end_of_Delay1KTCYx 1C5E  
              ??_i2c_int_handler 00BB               ?_ToMainLow_sendmsg 00DE  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0042            ??_InterruptHandlerLow 0023  
            ??_ToMainLow_recvmsg 00DF                   i2send_msg@qmsg 00B9  
                 i2send_msg@slot 00B8                   i2send_msg@qptr 003E  
            ??_ToMainLow_sendmsg 00E1           __size_ofi1_WriteTimer1 0012  
            _FromMainLow_recvmsg 1B60                   ??_handle_start 0034  
            _FromMainLow_sendmsg 1A10                     _USART_Status 004C  
