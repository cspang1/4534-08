

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Mar 19 11:04:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  001FD8                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for moveDir@F5160
    81  001FD8  50                 	db	80
    82  001FD9  CD                 	db	205
    83                           
    84                           ;initializer for timer0_lthread@F5149
    85  001FDA  C7                 	db	199
    86  001FDB  48                 	db	72
    87  0000                     _ADCON1	set	4033
    88  0000                     _CMCON	set	4020
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATA	set	3977
    93  0000                     _LATB	set	3978
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTA	set	3968
   100  0000                     _PORTB	set	3969
   101  0000                     _RCONbits	set	4048
   102  0000                     _RCREG	set	4014
   103  0000                     _RCSTA	set	4011
   104  0000                     _RCSTAbits	set	4011
   105  0000                     _SPBRG	set	4015
   106  0000                     _SPBRGH	set	4016
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _TMR1H	set	4047
   118  0000                     _TMR1L	set	4046
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISB	set	3987
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TXREG	set	4013
   123  0000                     _TXSTA	set	4012
   124  0000                     _TXSTAbits	set	4012
   125                           
   126                           	psect	nvCOMRAM
   127  000047                     __pnvCOMRAM:
   128                           	opt stack 0
   129  000047                     _uc_ptr:
   130                           	opt stack 0
   131  000047                     	ds	2
   132                           
   133                           	psect	nvBANK0
   134  0000D4                     __pnvBANK0:
   135                           	opt stack 0
   136  0000D4                     _ic_ptr:
   137                           	opt stack 0
   138  0000D4                     	ds	2
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  001B44                     __pcinit:
   144                           	opt stack 0
   145  001B44                     start_initialization:
   146                           	opt stack 0
   147  001B44                     __initialization:
   148                           	opt stack 0
   149                           
   150                           ; Clear objects allocated to BANK2 (108 bytes)
   151  001B44  EE02  F000         	lfsr	0,__pbssBANK2
   152  001B48  0E6C               	movlw	108
   153  001B4A                     clear_0:
   154  001B4A  6AEE               	clrf	postinc0,c
   155  001B4C  06E8               	decf	wreg,f,c
   156  001B4E  E1FD               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to BANK1 (108 bytes)
   159  001B50  EE01  F06D         	lfsr	0,__pbssBANK1
   160  001B54  0E6C               	movlw	108
   161  001B56                     clear_1:
   162  001B56  6AEE               	clrf	postinc0,c
   163  001B58  06E8               	decf	wreg,f,c
   164  001B5A  E1FD               	bnz	clear_1
   165                           
   166                           ; Clear objects allocated to BANK0 (2 bytes)
   167  001B5C  0100               	movlb	0
   168  001B5E  6BD7               	clrf	(__pbssBANK0+1)& (0+255),b
   169  001B60  6BD6               	clrf	__pbssBANK0& (0+255),b
   170                           
   171                           ; Clear objects allocated to COMRAM (2 bytes)
   172  001B62  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   173  001B64  6A49               	clrf	__pbssCOMRAM& (0+255),c
   174                           
   175                           ; Initialize objects allocated to BANK0 (4 bytes)
   176                           ; load TBLPTR registers with __pidataBANK0
   177  001B66  0ED8               	movlw	low __pidataBANK0
   178  001B68  6EF6               	movwf	tblptrl,c
   179  001B6A  0E1F               	movlw	high __pidataBANK0
   180  001B6C  6EF7               	movwf	tblptrh,c
   181  001B6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   182  001B70  6EF8               	movwf	tblptru,c
   183  001B72  EE00  F0D0         	lfsr	0,__pdataBANK0
   184  001B76  EE10 F004          	lfsr	1,4
   185  001B7A                     copy_data0:
   186  001B7A  0009               	tblrd		*+
   187  001B7C  CFF5 FFEE          	movff	tablat,postinc0
   188  001B80  50E5               	movf	postdec1,w,c
   189  001B82  50E1               	movf	fsr1l,w,c
   190  001B84  E1FA               	bnz	copy_data0
   191  001B86                     end_of_initialization:
   192                           	opt stack 0
   193  001B86                     __end_of__initialization:
   194                           	opt stack 0
   195  001B86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  001B88  6EF8               	movwf	tblptru,c
   197  001B8A  0100               	movlb	0
   198  001B8C  EF98  F003         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	bssCOMRAM
   209  000049                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000049                     _MQ_Main_Willing_to_block:
   212                           	opt stack 0
   213  000049                     	ds	1
   214  00004A                     _USART_Status:
   215                           	opt stack 0
   216  00004A                     	ds	1
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226                           	psect	bssBANK0
   227  0000D6                     __pbssBANK0:
   228                           	opt stack 0
   229  0000D6                     timer1_lthread@F5156:
   230                           	opt stack 0
   231  0000D6                     	ds	2
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           wreg	equ	0xFE8
   238                           postdec1	equ	0xFE5
   239                           fsr1l	equ	0xFE1
   240                           
   241                           	psect	dataBANK0
   242  0000D0                     __pdataBANK0:
   243                           	opt stack 0
   244  0000D0                     moveDir@F5160:
   245                           	opt stack 0
   246  0000D0                     	ds	2
   247  0000D2                     timer0_lthread@F5149:
   248                           	opt stack 0
   249  0000D2                     	ds	2
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	bssBANK1
   260  00016D                     __pbssBANK1:
   261                           	opt stack 0
   262  00016D                     _ToMainHigh_MQ:
   263                           	opt stack 0
   264  00016D                     	ds	54
   265  0001A3                     _ToMainLow_MQ:
   266                           	opt stack 0
   267  0001A3                     	ds	54
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssBANK2
   278  000200                     __pbssBANK2:
   279                           	opt stack 0
   280  000200                     _FromMainHigh_MQ:
   281                           	opt stack 0
   282  000200                     	ds	54
   283  000236                     _FromMainLow_MQ:
   284                           	opt stack 0
   285  000236                     	ds	54
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	cstackBANK1
   296  000100                     __pcstackBANK1:
   297                           	opt stack 0
   298  000100                     main@msgbuffer:
   299                           	opt stack 0
   300                           
   301                           ; 11 bytes @ 0x0
   302  000100                     	ds	11
   303  00010B                     main@baud:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0xB
   307  00010B                     	ds	1
   308  00010C                     main@UARTConfig:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0xC
   312  00010C                     	ds	1
   313  00010D                     main@last_reg_recvd:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xD
   317  00010D                     	ds	1
   318  00010E                     main@t0thread_data:
   319                           	opt stack 0
   320                           
   321                           ; 4 bytes @ 0xE
   322  00010E                     	ds	4
   323  000112                     main@uthread_data:
   324                           	opt stack 0
   325                           
   326                           ; 10 bytes @ 0x12
   327  000112                     	ds	10
   328  00011C                     main@ctrl:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1C
   332  00011C                     	ds	2
   333  00011E                     main@uc:
   334                           	opt stack 0
   335                           
   336                           ; 5 bytes @ 0x1E
   337  00011E                     	ds	5
   338  000123                     main@msgtype:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x23
   342  000123                     	ds	1
   343  000124                     main@t1thread_data:
   344                           	opt stack 0
   345                           
   346                           ; 44 bytes @ 0x24
   347  000124                     	ds	44
   348  000150                     main@length:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x50
   352  000150                     	ds	1
   353  000151                     main@ic:
   354                           	opt stack 0
   355                           
   356                           ; 28 bytes @ 0x51
   357  000151                     	ds	28
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	cstackBANK0
   368  000080                     __pcstackBANK0:
   369                           	opt stack 0
   370  000080                     i2send_msg@tlength:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374  000080                     	ds	2
   375  000082                     i2send_msg@slot:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x2
   379  000082                     	ds	1
   380  000083                     i2send_msg@qmsg:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x3
   384  000083                     	ds	2
   385  000085                     ToMainHigh_sendmsg@msgtype:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x5
   389  000085                     	ds	1
   390  000086                     ToMainHigh_sendmsg@data:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x6
   394  000086                     	ds	2
   395  000088                     ToMainHigh_sendmsg@length:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x8
   399  000088                     	ds	1
   400  000089                     ??_i2c_int_handler:
   401                           
   402                           ; 0 bytes @ 0x9
   403  000089                     	ds	2
   404  00008B                     i2c_int_handler@error_buf:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0xB
   408  00008B                     	ds	3
   409  00008E                     i2c_int_handler@data_written:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0xE
   413  00008E                     	ds	1
   414  00008F                     i2c_int_handler@overrun_error:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xF
   418  00008F                     	ds	1
   419  000090                     i2c_int_handler@i2c_data:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x10
   423  000090                     	ds	1
   424  000091                     i2c_int_handler@msg_to_send:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x11
   428  000091                     	ds	1
   429  000092                     i2c_int_handler@msg_ready:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x12
   433  000092                     	ds	1
   434  000093                     i2c_int_handler@data_read:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x13
   438  000093                     	ds	1
   439  000094                     ??_InterruptHandlerHigh:
   440                           
   441                           ; 0 bytes @ 0x14
   442  000094                     	ds	14
   443  0000A2                     ?_in_high_int:
   444                           	opt stack 0
   445  0000A2                     ?___awmod:
   446                           	opt stack 0
   447  0000A2                     ?___lwmod:
   448                           	opt stack 0
   449  0000A2                     i2c_configure_slave@addr:
   450                           	opt stack 0
   451  0000A2                     OpenTimer1@config:
   452                           	opt stack 0
   453  0000A2                     Delay1KTCYx@unit:
   454                           	opt stack 0
   455  0000A2                     init_queue@qptr:
   456                           	opt stack 0
   457  0000A2                     check_msg@qptr:
   458                           	opt stack 0
   459  0000A2                     start_i2c_slave_reply@msg:
   460                           	opt stack 0
   461  0000A2                     init_i2c@ic:
   462                           	opt stack 0
   463  0000A2                     init_uart_recv@uc:
   464                           	opt stack 0
   465  0000A2                     init_timer0_lthread@tptr:
   466                           	opt stack 0
   467  0000A2                     init_timer1_lthread@tptr:
   468                           	opt stack 0
   469  0000A2                     init_uart_lthread@uptr:
   470                           	opt stack 0
   471  0000A2                     WriteTimer1@timer1:
   472                           	opt stack 0
   473  0000A2                     OpenUSART@spbrg:
   474                           	opt stack 0
   475  0000A2                     ___awmod@dividend:
   476                           	opt stack 0
   477  0000A2                     ___lwmod@dividend:
   478                           	opt stack 0
   479  0000A2                     memcpy@d1:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x22
   483  0000A2                     	ds	2
   484  0000A4                     ??_OpenUSART:
   485  0000A4                     ??_start_i2c_slave_reply:
   486  0000A4                     ??_init_queue:
   487  0000A4                     ??_check_msg:
   488  0000A4                     ?_in_low_int:
   489                           	opt stack 0
   490  0000A4                     WriteTimer1@timer:
   491                           	opt stack 0
   492  0000A4                     ___awmod@divisor:
   493                           	opt stack 0
   494  0000A4                     ___lwmod@divisor:
   495                           	opt stack 0
   496  0000A4                     memcpy@s1:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x24
   500  0000A4                     	ds	1
   501  0000A5                     init_queue@i:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x25
   505  0000A5                     	ds	1
   506  0000A6                     ??_init_queues:
   507  0000A6                     ??___awmod:
   508  0000A6                     ??___lwmod:
   509  0000A6                     ?_in_main:
   510                           	opt stack 0
   511  0000A6                     start_i2c_slave_reply@length:
   512                           	opt stack 0
   513  0000A6                     memcpy@n:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x26
   517  0000A6                     	ds	1
   518  0000A7                     OpenUSART@config:
   519                           	opt stack 0
   520  0000A7                     ___awmod@counter:
   521                           	opt stack 0
   522  0000A7                     ___lwmod@counter:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x27
   526  0000A7                     	ds	1
   527  0000A8                     ??_block_on_To_msgqueues:
   528  0000A8                     ___awmod@sign:
   529                           	opt stack 0
   530  0000A8                     memcpy@d:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x28
   534  0000A8                     	ds	2
   535  0000AA                     memcpy@s:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x2A
   539  0000AA                     	ds	2
   540  0000AC                     send_msg@qptr:
   541                           	opt stack 0
   542  0000AC                     recv_msg@qptr:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x2C
   546  0000AC                     	ds	2
   547  0000AE                     send_msg@length:
   548                           	opt stack 0
   549  0000AE                     recv_msg@maxlength:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x2E
   553  0000AE                     	ds	1
   554  0000AF                     send_msg@msgtype:
   555                           	opt stack 0
   556  0000AF                     recv_msg@msgtype:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x2F
   560  0000AF                     	ds	1
   561  0000B0                     send_msg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x30
   565  0000B0                     	ds	1
   566  0000B1                     recv_msg@data:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x31
   570  0000B1                     	ds	1
   571  0000B2                     ??_send_msg:
   572                           
   573                           ; 0 bytes @ 0x32
   574  0000B2                     	ds	1
   575  0000B3                     ??_recv_msg:
   576  0000B3                     send_msg@tlength:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x33
   580  0000B3                     	ds	2
   581  0000B5                     send_msg@slot:
   582                           	opt stack 0
   583  0000B5                     recv_msg@slot:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x35
   587  0000B5                     	ds	1
   588  0000B6                     send_msg@qmsg:
   589                           	opt stack 0
   590  0000B6                     recv_msg@tlength:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x36
   594  0000B6                     	ds	2
   595  0000B8                     ToMainLow_sendmsg@msgtype:
   596                           	opt stack 0
   597  0000B8                     FromMainLow_sendmsg@msgtype:
   598                           	opt stack 0
   599  0000B8                     recv_msg@qmsg:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x38
   603  0000B8                     	ds	1
   604  0000B9                     ToMainLow_sendmsg@data:
   605                           	opt stack 0
   606  0000B9                     FromMainLow_sendmsg@data:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x39
   610  0000B9                     	ds	1
   611  0000BA                     ToMainLow_recvmsg@msgtype:
   612                           	opt stack 0
   613  0000BA                     ToMainHigh_recvmsg@msgtype:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x3A
   617  0000BA                     	ds	1
   618  0000BB                     ToMainLow_sendmsg@length:
   619                           	opt stack 0
   620  0000BB                     FromMainLow_sendmsg@length:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x3B
   624  0000BB                     	ds	1
   625  0000BC                     ToMainLow_recvmsg@data:
   626                           	opt stack 0
   627  0000BC                     ToMainHigh_recvmsg@data:
   628                           	opt stack 0
   629  0000BC                     sendUARTarr@data:
   630                           	opt stack 0
   631  0000BC                     uart_lthread@uptr:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x3C
   635  0000BC                     	ds	2
   636  0000BE                     ??_sendUARTarr:
   637  0000BE                     ToMainLow_recvmsg@maxlength:
   638                           	opt stack 0
   639  0000BE                     ToMainHigh_recvmsg@maxlength:
   640                           	opt stack 0
   641  0000BE                     uart_lthread@msgtype:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x3E
   645  0000BE                     	ds	1
   646  0000BF                     sendUARTarr@retval:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x3F
   650  0000BF                     	ds	1
   651  0000C0                     sendUARTarr@length:
   652                           	opt stack 0
   653  0000C0                     uart_lthread@length:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x40
   657  0000C0                     	ds	1
   658  0000C1                     timer0_lthread@tptr:
   659                           	opt stack 0
   660  0000C1                     timer1_lthread@tptr:
   661                           	opt stack 0
   662  0000C1                     moveDir@tptr:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x41
   666  0000C1                     	ds	1
   667  0000C2                     uart_lthread@msgbuffer:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x42
   671  0000C2                     	ds	1
   672  0000C3                     timer0_lthread@msgtype:
   673                           	opt stack 0
   674  0000C3                     timer1_lthread@msgtype:
   675                           	opt stack 0
   676  0000C3                     moveDir@cmDist:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x43
   680  0000C3                     	ds	1
   681  0000C4                     uart_lthread@status:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x44
   685  0000C4                     	ds	1
   686  0000C5                     timer0_lthread@length:
   687                           	opt stack 0
   688  0000C5                     timer1_lthread@length:
   689                           	opt stack 0
   690  0000C5                     moveDir@test:
   691                           	opt stack 0
   692  0000C5                     uart_lthread@index:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x45
   696  0000C5                     	ds	2
   697  0000C7                     timer0_lthread@msgbuffer:
   698                           	opt stack 0
   699  0000C7                     timer1_lthread@msgbuffer:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x47
   703  0000C7                     	ds	2
   704  0000C9                     ??_timer1_lthread:
   705  0000C9                     timer0_lthread@msgval:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x49
   709  0000C9                     	ds	2
   710  0000CB                     timer0_lthread@temp:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x4B
   714  0000CB                     	ds	2
   715  0000CD                     timer1_lthread@temp:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x4D
   719  0000CD                     	ds	2
   720  0000CF                     ??_main:
   721                           
   722                           ; 0 bytes @ 0x4F
   723  0000CF                     	ds	1
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1l	equ	0xFE1
   732                           
   733                           	psect	cstackCOMRAM
   734  000001                     __pcstackCOMRAM:
   735                           	opt stack 0
   736  000001                     ReadUSART@data:
   737                           	opt stack 0
   738  000001                     i1memcpy@d1:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x0
   742  000001                     	ds	2
   743  000003                     i1memcpy@s1:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x2
   747  000003                     	ds	2
   748  000005                     i1memcpy@n:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x4
   752  000005                     	ds	2
   753  000007                     i1memcpy@d:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x6
   757  000007                     	ds	2
   758  000009                     i1memcpy@s:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x8
   762  000009                     	ds	2
   763  00000B                     i1send_msg@qptr:
   764                           	opt stack 0
   765  00000B                     i1recv_msg@qptr:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0xA
   769  00000B                     	ds	2
   770  00000D                     i1send_msg@length:
   771                           	opt stack 0
   772  00000D                     i1recv_msg@maxlength:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0xC
   776  00000D                     	ds	1
   777  00000E                     i1send_msg@msgtype:
   778                           	opt stack 0
   779  00000E                     i1recv_msg@msgtype:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0xD
   783  00000E                     	ds	1
   784  00000F                     i1send_msg@data:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0xE
   788  00000F                     	ds	1
   789  000010                     i1recv_msg@data:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0xF
   793  000010                     	ds	1
   794  000011                     ??i1_send_msg:
   795                           
   796                           ; 0 bytes @ 0x10
   797  000011                     	ds	1
   798  000012                     ??i1_recv_msg:
   799  000012                     i1send_msg@tlength:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x11
   803  000012                     	ds	2
   804  000014                     i1send_msg@slot:
   805                           	opt stack 0
   806  000014                     i1recv_msg@slot:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x13
   810  000014                     	ds	1
   811  000015                     i1send_msg@qmsg:
   812                           	opt stack 0
   813  000015                     i1recv_msg@tlength:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x14
   817  000015                     	ds	2
   818  000017                     i1ToMainLow_sendmsg@msgtype:
   819                           	opt stack 0
   820  000017                     i1recv_msg@qmsg:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x16
   824  000017                     	ds	1
   825  000018                     i1ToMainLow_sendmsg@data:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x17
   829  000018                     	ds	1
   830  000019                     FromMainLow_recvmsg@msgtype:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x18
   834  000019                     	ds	1
   835  00001A                     i1ToMainLow_sendmsg@length:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x19
   839  00001A                     	ds	1
   840  00001B                     ??_uart_recv_int_handler:
   841  00001B                     FromMainLow_recvmsg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x1A
   845  00001B                     	ds	2
   846  00001D                     FromMainLow_recvmsg@maxlength:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x1C
   850  00001D                     	ds	1
   851  00001E                     ??_uart_trans_int_handler:
   852                           
   853                           ; 0 bytes @ 0x1D
   854  00001E                     	ds	1
   855  00001F                     uart_trans_int_handler@data:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x1E
   859  00001F                     	ds	2
   860  000021                     uart_trans_int_handler@msgtype:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x20
   864  000021                     	ds	1
   865  000022                     uart_trans_int_handler@curIndex:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x21
   869  000022                     	ds	1
   870  000023                     uart_trans_int_handler@length:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x22
   874  000023                     	ds	1
   875  000024                     ??_InterruptHandlerLow:
   876                           
   877                           ; 0 bytes @ 0x23
   878  000024                     	ds	18
   879  000036                     ?i2_in_high_int:
   880                           	opt stack 0
   881  000036                     handle_start@data_read:
   882                           	opt stack 0
   883  000036                     i2check_msg@qptr:
   884                           	opt stack 0
   885  000036                     i2memcpy@d1:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x35
   889  000036                     	ds	2
   890  000038                     ??i2_check_msg:
   891  000038                     ?i2_in_low_int:
   892                           	opt stack 0
   893  000038                     i2memcpy@s1:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x37
   897  000038                     	ds	2
   898  00003A                     i2memcpy@n:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x39
   902  00003A                     	ds	2
   903  00003C                     i2memcpy@d:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x3B
   907  00003C                     	ds	2
   908  00003E                     i2memcpy@s:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x3D
   912  00003E                     	ds	2
   913  000040                     i2send_msg@qptr:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x3F
   917  000040                     	ds	2
   918  000042                     i2send_msg@length:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x41
   922  000042                     	ds	1
   923  000043                     i2send_msg@msgtype:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x42
   927  000043                     	ds	1
   928  000044                     i2send_msg@data:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x43
   932  000044                     	ds	2
   933  000046                     ??i2_send_msg:
   934                           
   935                           ; 0 bytes @ 0x45
   936  000046                     	ds	1
   937  000047                     tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1l	equ	0xFE1
   945                           
   946                           ; 0 bytes @ 0x46
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 29 in file "src/main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  ctrl            2   28[BANK1 ] unsigned char [2]
   957 ;;  t1thread_dat   44   36[BANK1 ] struct __timer1_thread_s
   958 ;;  ic             28   81[BANK1 ] struct __i2c_comm
   959 ;;  pbthread_dat   15    0        struct __portb_thread_st
   960 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   961 ;;  uthread_data   10   18[BANK1 ] struct __uart_thread_str
   962 ;;  uc              5   30[BANK1 ] struct __uart_comm
   963 ;;  t0thread_dat    4   14[BANK1 ] struct __timer0_thread_s
   964 ;;  length          1   80[BANK1 ] char 
   965 ;;  msgtype         1   35[BANK1 ] unsigned char 
   966 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   967 ;;  UARTConfig      1   12[BANK1 ] unsigned char 
   968 ;;  baud            1   11[BANK1 ] unsigned char 
   969 ;;  i               1    0        unsigned char 
   970 ;;  c               1    0        unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   980 ;;      Params:         0       0       0       0       0
   981 ;;      Locals:         0       0     109       0       0
   982 ;;      Temps:          0       1       0       0       0
   983 ;;      Totals:         0       1     109       0       0
   984 ;;Total ram usage:      110 bytes
   985 ;; Hardware stack levels required when called:   15
   986 ;; This function calls:
   987 ;;		_OpenTimer1
   988 ;;		_OpenUSART
   989 ;;		_ToMainHigh_recvmsg
   990 ;;		_ToMainLow_recvmsg
   991 ;;		_block_on_To_msgqueues
   992 ;;		_enable_interrupts
   993 ;;		_i2c_configure_slave
   994 ;;		_init_i2c
   995 ;;		_init_queues
   996 ;;		_init_timer0_lthread
   997 ;;		_init_timer1_lthread
   998 ;;		_init_uart_lthread
   999 ;;		_init_uart_recv
  1000 ;;		_moveDir
  1001 ;;		_sendUARTarr
  1002 ;;		_start_i2c_slave_reply
  1003 ;;		_timer0_lthread
  1004 ;;		_timer1_lthread
  1005 ;;		_uart_lthread
  1006 ;; This function is called by:
  1007 ;;		Startup code after reset
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text0
  1012  000730                     __ptext0:
  1013                           	opt stack 0
  1014  000730                     _main:
  1015                           	opt stack 16
  1016                           
  1017                           ;main.c: 30: char c;
  1018                           ;main.c: 31: signed char length;
  1019                           ;main.c: 32: unsigned char msgtype;
  1020                           ;main.c: 33: unsigned char last_reg_recvd;
  1021                           ;main.c: 34: unsigned char baud, UARTConfig;
  1022                           ;main.c: 35: uart_comm uc;
  1023                           ;main.c: 36: i2c_comm ic;
  1024                           ;main.c: 37: unsigned char msgbuffer[10 + 1];
  1025                           ;main.c: 38: unsigned char i;
  1026                           ;main.c: 39: uart_thread_struct uthread_data;
  1027                           ;main.c: 40: timer1_thread_struct t1thread_data;
  1028                           ;main.c: 41: timer0_thread_struct t0thread_data;
  1029                           ;main.c: 42: portb_thread_struct pbthread_data;
  1030                           ;main.c: 45: PORTA = 0x0;
  1031                           
  1032                           ;incstack = 0
  1033  000730  0E00               	movlw	0
  1034  000732  6E80               	movwf	3968,c	;volatile
  1035                           
  1036                           ;main.c: 46: LATA = 0x0;
  1037  000734  0E00               	movlw	0
  1038  000736  6E89               	movwf	3977,c	;volatile
  1039                           
  1040                           ;main.c: 47: ADCON1 = 0x0F;
  1041  000738  0E0F               	movlw	15
  1042  00073A  6EC1               	movwf	4033,c	;volatile
  1043                           
  1044                           ;main.c: 48: CMCON = 0x07;
  1045  00073C  0E07               	movlw	7
  1046  00073E  6EB4               	movwf	4020,c	;volatile
  1047                           
  1048                           ;main.c: 49: TRISA = 0x00;
  1049  000740  0E00               	movlw	0
  1050  000742  6E92               	movwf	3986,c	;volatile
  1051                           
  1052                           ;main.c: 52: PORTB = 0x0;
  1053  000744  0E00               	movlw	0
  1054  000746  6E81               	movwf	3969,c	;volatile
  1055                           
  1056                           ;main.c: 53: LATB = 0x0;
  1057  000748  0E00               	movlw	0
  1058  00074A  6E8A               	movwf	3978,c	;volatile
  1059                           
  1060                           ;main.c: 54: TRISB = 0xFF;
  1061  00074C  6893               	setf	3987,c	;volatile
  1062                           
  1063                           ;main.c: 56: OSCCON = 0x82;
  1064  00074E  0E82               	movlw	130
  1065  000750  6ED3               	movwf	4051,c	;volatile
  1066                           
  1067                           ;main.c: 57: OSCTUNEbits.PLLEN = 1;
  1068  000752  8C9B               	bsf	3995,6,c	;volatile
  1069                           
  1070                           ;main.c: 60: init_uart_recv(&uc);
  1071  000754  0101               	movlb	1	; () banked
  1072  000756  0E01               	movlw	high main@uc
  1073  000758  0100               	movlb	0	; () banked
  1074  00075A  0100               	movlb	0	; () banked
  1075  00075C  6FA3               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1076  00075E  0101               	movlb	1	; () banked
  1077  000760  0E1E               	movlw	low main@uc
  1078  000762  0100               	movlb	0	; () banked
  1079  000764  0100               	movlb	0	; () banked
  1080  000766  6FA2               	movwf	init_uart_recv@uc& (0+255),b
  1081  000768  EC96  F00F         	call	_init_uart_recv	;wreg free
  1082                           
  1083                           ;main.c: 63: init_i2c(&ic);
  1084  00076C  0101               	movlb	1	; () banked
  1085  00076E  0E01               	movlw	high main@ic
  1086  000770  0100               	movlb	0	; () banked
  1087  000772  0100               	movlb	0	; () banked
  1088  000774  6FA3               	movwf	(init_i2c@ic+1)& (0+255),b
  1089  000776  0101               	movlb	1	; () banked
  1090  000778  0E51               	movlw	low main@ic
  1091  00077A  0100               	movlb	0	; () banked
  1092  00077C  0100               	movlb	0	; () banked
  1093  00077E  6FA2               	movwf	init_i2c@ic& (0+255),b
  1094  000780  ECB8  F00C         	call	_init_i2c	;wreg free
  1095                           
  1096                           ;main.c: 66: init_timer1_lthread(&t1thread_data);
  1097  000784  0101               	movlb	1	; () banked
  1098  000786  0E01               	movlw	high main@t1thread_data
  1099  000788  0100               	movlb	0	; () banked
  1100  00078A  0100               	movlb	0	; () banked
  1101  00078C  6FA3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1102  00078E  0101               	movlb	1	; () banked
  1103  000790  0E24               	movlw	low main@t1thread_data
  1104  000792  0100               	movlb	0	; () banked
  1105  000794  0100               	movlb	0	; () banked
  1106  000796  6FA2               	movwf	init_timer1_lthread@tptr& (0+255),b
  1107  000798  EC78  F009         	call	_init_timer1_lthread	;wreg free
  1108                           
  1109                           ;main.c: 69: init_timer0_lthread(&t0thread_data);
  1110  00079C  0101               	movlb	1	; () banked
  1111  00079E  0E01               	movlw	high main@t0thread_data
  1112  0007A0  0100               	movlb	0	; () banked
  1113  0007A2  0100               	movlb	0	; () banked
  1114  0007A4  6FA3               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1115  0007A6  0101               	movlb	1	; () banked
  1116  0007A8  0E0E               	movlw	low main@t0thread_data
  1117  0007AA  0100               	movlb	0	; () banked
  1118  0007AC  0100               	movlb	0	; () banked
  1119  0007AE  6FA2               	movwf	init_timer0_lthread@tptr& (0+255),b
  1120  0007B0  ECB4  F00F         	call	_init_timer0_lthread	;wreg free
  1121                           
  1122                           ;main.c: 72: init_uart_lthread(&uthread_data);
  1123  0007B4  0101               	movlb	1	; () banked
  1124  0007B6  0E01               	movlw	high main@uthread_data
  1125  0007B8  0100               	movlb	0	; () banked
  1126  0007BA  0100               	movlb	0	; () banked
  1127  0007BC  6FA3               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1128  0007BE  0101               	movlb	1	; () banked
  1129  0007C0  0E12               	movlw	low main@uthread_data
  1130  0007C2  0100               	movlb	0	; () banked
  1131  0007C4  0100               	movlb	0	; () banked
  1132  0007C6  6FA2               	movwf	init_uart_lthread@uptr& (0+255),b
  1133  0007C8  ECEE  F00F         	call	_init_uart_lthread	;wreg free
  1134                           
  1135                           ;main.c: 75: init_queues();
  1136  0007CC  EC81  F00C         	call	_init_queues	;wreg free
  1137                           
  1138                           ;main.c: 80: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1139  0007D0  0EC7               	movlw	199
  1140  0007D2  ECB0  F00E         	call	_OpenTimer1
  1141                           
  1142                           ;main.c: 83: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111;
  1143  0007D6  0100               	movlb	0	; () banked
  1144  0007D8  6FCF               	movwf	??_main& (0+255),b
  1145  0007DA  0EEC               	movlw	236
  1146  0007DC  0101               	movlb	1	; () banked
  1147  0007DE  0101               	movlb	1	; () banked
  1148  0007E0  6F0C               	movwf	main@UARTConfig& (0+255),b
  1149  0007E2  0100               	movlb	0	; () banked
  1150  0007E4  51CF               	movf	??_main& (0+255),w,b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 84: baud = 77;
  1154  0007E6  0100               	movlb	0	; () banked
  1155  0007E8  6FCF               	movwf	??_main& (0+255),b
  1156  0007EA  0E4D               	movlw	77
  1157  0007EC  0101               	movlb	1	; () banked
  1158  0007EE  0101               	movlb	1	; () banked
  1159  0007F0  6F0B               	movwf	main@baud& (0+255),b
  1160  0007F2  0100               	movlb	0	; () banked
  1161  0007F4  51CF               	movf	??_main& (0+255),w,b
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 85: OpenUSART(UARTConfig,baud);
  1165  0007F6  0101               	movlb	1	; () banked
  1166  0007F8  0100               	movlb	0	; () banked
  1167  0007FA  C10B  F0A2         	movff	main@baud,OpenUSART@spbrg
  1168  0007FE  0100               	movlb	0	; () banked
  1169  000800  0100               	movlb	0	; () banked
  1170  000802  6BA3               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1171  000804  0101               	movlb	1	; () banked
  1172  000806  0101               	movlb	1	; () banked
  1173  000808  510C               	movf	main@UARTConfig& (0+255),w,b
  1174  00080A  EC31  F00B         	call	_OpenUSART
  1175                           
  1176                           ;main.c: 90: IPR1bits.TMR1IP = 0;
  1177  00080E  909F               	bcf	3999,0,c	;volatile
  1178                           
  1179                           ;main.c: 92: IPR1bits.RCIP = 0;
  1180  000810  9A9F               	bcf	3999,5,c	;volatile
  1181                           
  1182                           ;main.c: 94: IPR1bits.TXIP = 0;
  1183  000812  989F               	bcf	3999,4,c	;volatile
  1184                           
  1185                           ;main.c: 96: IPR1bits.SSPIP = 1;
  1186  000814  869F               	bsf	3999,3,c	;volatile
  1187                           
  1188                           ;main.c: 98: INTCON2bits.RBIP = 1;
  1189  000816  80F1               	bsf	intcon2,0,c	;volatile
  1190                           
  1191                           ;main.c: 99: INTCONbits.RBIE = 1;
  1192  000818  86F2               	bsf	intcon,3,c	;volatile
  1193                           
  1194                           ;main.c: 102: i2c_configure_slave(0x9A);
  1195  00081A  0E9A               	movlw	154
  1196  00081C  EC49  F00F         	call	_i2c_configure_slave
  1197                           
  1198                           ;main.c: 105: PIE1bits.SSPIE = 1;
  1199  000820  869D               	bsf	3997,3,c	;volatile
  1200                           
  1201                           ;main.c: 109: enable_interrupts();
  1202  000822  ECE5  F00F         	call	_enable_interrupts	;wreg free
  1203                           
  1204                           ;main.c: 112: moveDir(&t1thread_data, 183);
  1205  000826  0101               	movlb	1	; () banked
  1206  000828  0E01               	movlw	high main@t1thread_data
  1207  00082A  0100               	movlb	0	; () banked
  1208  00082C  0100               	movlb	0	; () banked
  1209  00082E  6FC2               	movwf	(moveDir@tptr+1)& (0+255),b
  1210  000830  0101               	movlb	1	; () banked
  1211  000832  0E24               	movlw	low main@t1thread_data
  1212  000834  0100               	movlb	0	; () banked
  1213  000836  0100               	movlb	0	; () banked
  1214  000838  6FC1               	movwf	moveDir@tptr& (0+255),b
  1215  00083A  0E00               	movlw	0
  1216  00083C  0100               	movlb	0	; () banked
  1217  00083E  0100               	movlb	0	; () banked
  1218  000840  6FC4               	movwf	(moveDir@cmDist+1)& (0+255),b
  1219  000842  0EB7               	movlw	183
  1220  000844  0100               	movlb	0	; () banked
  1221  000846  6FC3               	movwf	moveDir@cmDist& (0+255),b
  1222  000848  ECED  F00C         	call	_moveDir	;wreg free
  1223  00084C                     l2522:
  1224                           
  1225                           ;main.c: 125: block_on_To_msgqueues();
  1226  00084C  EC05  F00C         	call	_block_on_To_msgqueues	;wreg free
  1227                           
  1228                           ;main.c: 128: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1229  000850  0101               	movlb	1	; () banked
  1230  000852  0E01               	movlw	high main@msgtype
  1231  000854  0100               	movlb	0	; () banked
  1232  000856  0100               	movlb	0	; () banked
  1233  000858  6FBB               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1234  00085A  0101               	movlb	1	; () banked
  1235  00085C  0E23               	movlw	low main@msgtype
  1236  00085E  0100               	movlb	0	; () banked
  1237  000860  0100               	movlb	0	; () banked
  1238  000862  6FBA               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1239  000864  0101               	movlb	1	; () banked
  1240  000866  0E01               	movlw	high main@msgbuffer
  1241  000868  0100               	movlb	0	; () banked
  1242  00086A  0100               	movlb	0	; () banked
  1243  00086C  6FBD               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1244  00086E  0101               	movlb	1	; () banked
  1245  000870  0E00               	movlw	low main@msgbuffer
  1246  000872  0100               	movlb	0	; () banked
  1247  000874  0100               	movlb	0	; () banked
  1248  000876  6FBC               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1249  000878  0E0A               	movlw	10
  1250  00087A  EC4F  F00E         	call	_ToMainHigh_recvmsg
  1251  00087E  0101               	movlb	1	; () banked
  1252  000880  0101               	movlb	1	; () banked
  1253  000882  6F50               	movwf	main@length& (0+255),b
  1254                           
  1255                           ; BSR set to: 1
  1256                           ;main.c: 129: if (length < 0) {
  1257  000884  0101               	movlb	1	; () banked
  1258  000886  0101               	movlb	1	; () banked
  1259  000888  BF50               	btfsc	main@length& (0+255),7,b
  1260  00088A  D0D3               	goto	l2560
  1261  00088C  D0C3               	goto	l2558
  1262  00088E                     l2530:
  1263                           
  1264                           ; BSR set to: 1
  1265                           ;main.c: 137: {
  1266                           ;main.c: 138: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1267  00088E  0101               	movlb	1	; () banked
  1268  000890  0E01               	movlw	high main@t0thread_data
  1269  000892  0100               	movlb	0	; () banked
  1270  000894  0100               	movlb	0	; () banked
  1271  000896  6FC2               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1272  000898  0101               	movlb	1	; () banked
  1273  00089A  0E0E               	movlw	low main@t0thread_data
  1274  00089C  0100               	movlb	0	; () banked
  1275  00089E  0100               	movlb	0	; () banked
  1276  0008A0  6FC1               	movwf	timer0_lthread@tptr& (0+255),b
  1277  0008A2  0101               	movlb	1	; () banked
  1278  0008A4  0100               	movlb	0	; () banked
  1279  0008A6  C123  F0C3         	movff	main@msgtype,timer0_lthread@msgtype
  1280  0008AA  0100               	movlb	0	; () banked
  1281  0008AC  0100               	movlb	0	; () banked
  1282  0008AE  6BC4               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1283  0008B0  0101               	movlb	1	; () banked
  1284  0008B2  0101               	movlb	1	; () banked
  1285  0008B4  5150               	movf	main@length& (0+255),w,b
  1286  0008B6  0100               	movlb	0	; () banked
  1287  0008B8  0100               	movlb	0	; () banked
  1288  0008BA  6FC5               	movwf	timer0_lthread@length& (0+255),b
  1289  0008BC  0100               	movlb	0	; () banked
  1290  0008BE  6BC6               	clrf	(timer0_lthread@length+1)& (0+255),b
  1291  0008C0  0100               	movlb	0	; () banked
  1292  0008C2  BFC5               	btfsc	timer0_lthread@length& (0+255),7,b
  1293  0008C4  07C6               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1294  0008C6  0101               	movlb	1	; () banked
  1295  0008C8  0E01               	movlw	high main@msgbuffer
  1296  0008CA  0100               	movlb	0	; () banked
  1297  0008CC  0100               	movlb	0	; () banked
  1298  0008CE  6FC8               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1299  0008D0  0101               	movlb	1	; () banked
  1300  0008D2  0E00               	movlw	low main@msgbuffer
  1301  0008D4  0100               	movlb	0	; () banked
  1302  0008D6  0100               	movlb	0	; () banked
  1303  0008D8  6FC7               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1304  0008DA  EC7A  F00B         	call	_timer0_lthread	;wreg free
  1305                           
  1306                           ;main.c: 139: break;
  1307  0008DE  D0A9               	goto	l2560
  1308  0008E0                     l135:
  1309                           
  1310                           ; BSR set to: 1
  1311                           ;main.c: 142: {
  1312                           ;main.c: 143: last_reg_recvd = msgbuffer[0];
  1313  0008E0  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
  1314                           
  1315                           ;main.c: 144: unsigned char ctrl[2];
  1316                           ;main.c: 145: switch(last_reg_recvd){
  1317  0008E4  D029               	goto	l2540
  1318  0008E6                     l2532:
  1319                           
  1320                           ; BSR set to: 1
  1321                           ;main.c: 147: {
  1322                           ;main.c: 148: ctrl[0] = 0;
  1323  0008E6  0100               	movlb	0	; () banked
  1324  0008E8  6FCF               	movwf	??_main& (0+255),b
  1325  0008EA  0E00               	movlw	0
  1326  0008EC  0101               	movlb	1	; () banked
  1327  0008EE  0101               	movlb	1	; () banked
  1328  0008F0  6F1C               	movwf	main@ctrl& (0+255),b
  1329  0008F2  0100               	movlb	0	; () banked
  1330  0008F4  51CF               	movf	??_main& (0+255),w,b
  1331                           
  1332                           ;main.c: 149: ctrl[1] = 0;
  1333  0008F6  0100               	movlb	0	; () banked
  1334  0008F8  6FCF               	movwf	??_main& (0+255),b
  1335  0008FA  0E00               	movlw	0
  1336  0008FC  D017               	goto	L2
  1337  0008FE                     l2534:
  1338                           
  1339                           ;main.c: 153: {
  1340                           ;main.c: 154: ctrl[0] = 199;
  1341  0008FE  0100               	movlb	0	; () banked
  1342  000900  6FCF               	movwf	??_main& (0+255),b
  1343  000902  0EC7               	movlw	199
  1344  000904  0101               	movlb	1	; () banked
  1345  000906  0101               	movlb	1	; () banked
  1346  000908  6F1C               	movwf	main@ctrl& (0+255),b
  1347  00090A  0100               	movlb	0	; () banked
  1348  00090C  51CF               	movf	??_main& (0+255),w,b
  1349                           
  1350                           ;main.c: 155: ctrl[1] = 73;
  1351  00090E  0100               	movlb	0	; () banked
  1352  000910  6FCF               	movwf	??_main& (0+255),b
  1353  000912  0E49               	movlw	73
  1354  000914  D00B               	goto	L2
  1355  000916                     l2536:
  1356                           
  1357                           ;main.c: 159: {
  1358                           ;main.c: 160: ctrl[0] = 182;
  1359  000916  0100               	movlb	0	; () banked
  1360  000918  6FCF               	movwf	??_main& (0+255),b
  1361  00091A  0EB6               	movlw	182
  1362  00091C  0101               	movlb	1	; () banked
  1363  00091E  0101               	movlb	1	; () banked
  1364  000920  6F1C               	movwf	main@ctrl& (0+255),b
  1365  000922  0100               	movlb	0	; () banked
  1366  000924  51CF               	movf	??_main& (0+255),w,b
  1367                           
  1368                           ;main.c: 161: ctrl[1] = 54;
  1369  000926  0100               	movlb	0	; () banked
  1370  000928  6FCF               	movwf	??_main& (0+255),b
  1371  00092A  0E36               	movlw	54
  1372  00092C                     L2:
  1373  00092C  0101               	movlb	1	; () banked
  1374  00092E  0101               	movlb	1	; () banked
  1375  000930  6F1D               	movwf	(main@ctrl+1)& (0+255),b
  1376  000932  0100               	movlb	0	; () banked
  1377  000934  51CF               	movf	??_main& (0+255),w,b
  1378                           
  1379                           ;main.c: 162: break;
  1380  000936  D00C               	goto	l2542
  1381  000938                     l2540:
  1382  000938  0101               	movlb	1	; () banked
  1383  00093A  0101               	movlb	1	; () banked
  1384  00093C  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1385                           
  1386                           ; Switch size 1, requested type "space"
  1387                           ; Number of cases is 3, Range of values is 0 to 2
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte           10     6 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392  00093E  0A00               	xorlw	0	; case 0
  1393  000940  B4D8               	btfsc	status,2,c
  1394  000942  D7D1               	goto	l2532
  1395  000944  0A01               	xorlw	1	; case 1
  1396  000946  B4D8               	btfsc	status,2,c
  1397  000948  D7DA               	goto	l2534
  1398  00094A  0A03               	xorlw	3	; case 2
  1399  00094C  B4D8               	btfsc	status,2,c
  1400  00094E  D7E3               	goto	l2536
  1401  000950                     l2542:
  1402                           
  1403                           ;main.c: 165: sendUARTarr(2,ctrl);
  1404  000950  0101               	movlb	1	; () banked
  1405  000952  0E01               	movlw	high main@ctrl
  1406  000954  0100               	movlb	0	; () banked
  1407  000956  0100               	movlb	0	; () banked
  1408  000958  6FBD               	movwf	(sendUARTarr@data+1)& (0+255),b
  1409  00095A  0101               	movlb	1	; () banked
  1410  00095C  0E1C               	movlw	low main@ctrl
  1411  00095E  0100               	movlb	0	; () banked
  1412  000960  0100               	movlb	0	; () banked
  1413  000962  6FBC               	movwf	sendUARTarr@data& (0+255),b
  1414  000964  0E02               	movlw	2
  1415  000966  EC0D  F00E         	call	_sendUARTarr
  1416                           
  1417                           ;main.c: 166: break;
  1418  00096A  D063               	goto	l2560
  1419  00096C                     l141:
  1420                           
  1421                           ; BSR set to: 1
  1422                           ;main.c: 169: {
  1423                           ;main.c: 172: last_reg_recvd = msgbuffer[0];
  1424  00096C  C100  F10D         	movff	main@msgbuffer,main@last_reg_recvd
  1425                           
  1426                           ;main.c: 173: break;
  1427  000970  D060               	goto	l2560
  1428  000972                     l2544:
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 186: {
  1432                           ;main.c: 187: length = 2;
  1433  000972  0100               	movlb	0	; () banked
  1434  000974  6FCF               	movwf	??_main& (0+255),b
  1435  000976  0E02               	movlw	2
  1436  000978  0101               	movlb	1	; () banked
  1437  00097A  0101               	movlb	1	; () banked
  1438  00097C  6F50               	movwf	main@length& (0+255),b
  1439  00097E  0100               	movlb	0	; () banked
  1440  000980  51CF               	movf	??_main& (0+255),w,b
  1441                           
  1442                           ;main.c: 188: msgbuffer[0] = 0x55;
  1443  000982  0100               	movlb	0	; () banked
  1444  000984  6FCF               	movwf	??_main& (0+255),b
  1445  000986  0E55               	movlw	85
  1446  000988  0101               	movlb	1	; () banked
  1447  00098A  0101               	movlb	1	; () banked
  1448  00098C  6F00               	movwf	main@msgbuffer& (0+255),b
  1449  00098E  0100               	movlb	0	; () banked
  1450  000990  51CF               	movf	??_main& (0+255),w,b
  1451                           
  1452                           ;main.c: 189: msgbuffer[1] = 0xAA;
  1453  000992  0100               	movlb	0	; () banked
  1454  000994  6FCF               	movwf	??_main& (0+255),b
  1455  000996  0EAA               	movlw	170
  1456  000998  0101               	movlb	1	; () banked
  1457  00099A  0101               	movlb	1	; () banked
  1458  00099C  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1459  00099E  D00C               	goto	L3
  1460  0009A0                     l2546:
  1461                           
  1462                           ;main.c: 193: {
  1463                           ;main.c: 194: length = 1;
  1464  0009A0  0100               	movlb	0	; () banked
  1465  0009A2  6FCF               	movwf	??_main& (0+255),b
  1466  0009A4  0E01               	movlw	1
  1467  0009A6  0101               	movlb	1	; () banked
  1468  0009A8  0101               	movlb	1	; () banked
  1469  0009AA  6F50               	movwf	main@length& (0+255),b
  1470  0009AC  0100               	movlb	0	; () banked
  1471  0009AE  51CF               	movf	??_main& (0+255),w,b
  1472                           
  1473                           ;main.c: 195: msgbuffer[0] = 0x3A;
  1474  0009B0  0100               	movlb	0	; () banked
  1475  0009B2  6FCF               	movwf	??_main& (0+255),b
  1476  0009B4  0E3A               	movlw	58
  1477  0009B6  D00E               	goto	L4
  1478  0009B8                     L3:
  1479  0009B8  0100               	movlb	0	; () banked
  1480  0009BA  51CF               	movf	??_main& (0+255),w,b
  1481                           
  1482                           ;main.c: 196: break;
  1483  0009BC  D01B               	goto	l2554
  1484  0009BE                     l2548:
  1485                           
  1486                           ;main.c: 199: {
  1487                           ;main.c: 200: length = 1;
  1488  0009BE  0100               	movlb	0	; () banked
  1489  0009C0  6FCF               	movwf	??_main& (0+255),b
  1490  0009C2  0E01               	movlw	1
  1491  0009C4  0101               	movlb	1	; () banked
  1492  0009C6  0101               	movlb	1	; () banked
  1493  0009C8  6F50               	movwf	main@length& (0+255),b
  1494  0009CA  0100               	movlb	0	; () banked
  1495  0009CC  51CF               	movf	??_main& (0+255),w,b
  1496                           
  1497                           ;main.c: 201: msgbuffer[0] = 0xA3;
  1498  0009CE  0100               	movlb	0	; () banked
  1499  0009D0  6FCF               	movwf	??_main& (0+255),b
  1500  0009D2  0EA3               	movlw	163
  1501  0009D4                     L4:
  1502  0009D4  0101               	movlb	1	; () banked
  1503  0009D6  0101               	movlb	1	; () banked
  1504  0009D8  6F00               	movwf	main@msgbuffer& (0+255),b
  1505  0009DA  D7EE               	goto	L3
  1506  0009DC                     l2552:
  1507  0009DC  0101               	movlb	1	; () banked
  1508  0009DE  0101               	movlb	1	; () banked
  1509  0009E0  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1510                           
  1511                           ; Switch size 1, requested type "space"
  1512                           ; Number of cases is 3, Range of values is 168 to 170
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte           10     6 (average)
  1516                           ;	Chosen strategy is simple_byte
  1517  0009E2  0AA8               	xorlw	168	; case 168
  1518  0009E4  B4D8               	btfsc	status,2,c
  1519  0009E6  D7DC               	goto	l2546
  1520  0009E8  0A01               	xorlw	1	; case 169
  1521  0009EA  B4D8               	btfsc	status,2,c
  1522  0009EC  D7E8               	goto	l2548
  1523  0009EE  0A03               	xorlw	3	; case 170
  1524  0009F0  B4D8               	btfsc	status,2,c
  1525  0009F2  D7BF               	goto	l2544
  1526  0009F4                     l2554:
  1527                           
  1528                           ;main.c: 205: start_i2c_slave_reply(length, msgbuffer);
  1529  0009F4  0101               	movlb	1	; () banked
  1530  0009F6  0E01               	movlw	high main@msgbuffer
  1531  0009F8  0100               	movlb	0	; () banked
  1532  0009FA  0100               	movlb	0	; () banked
  1533  0009FC  6FA3               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1534  0009FE  0101               	movlb	1	; () banked
  1535  000A00  0E00               	movlw	low main@msgbuffer
  1536  000A02  0100               	movlb	0	; () banked
  1537  000A04  0100               	movlb	0	; () banked
  1538  000A06  6FA2               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1539  000A08  0101               	movlb	1	; () banked
  1540  000A0A  0101               	movlb	1	; () banked
  1541  000A0C  5150               	movf	main@length& (0+255),w,b
  1542  000A0E  ECBC  F006         	call	_start_i2c_slave_reply
  1543                           
  1544                           ;main.c: 206: break;
  1545  000A12  D00F               	goto	l2560
  1546  000A14                     l2558:
  1547  000A14  0101               	movlb	1	; () banked
  1548  000A16  0101               	movlb	1	; () banked
  1549  000A18  5123               	movf	main@msgtype& (0+255),w,b
  1550                           
  1551                           ; Switch size 1, requested type "space"
  1552                           ; Number of cases is 4, Range of values is 10 to 42
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte           13     7 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557  000A1A  0A0A               	xorlw	10	; case 10
  1558  000A1C  B4D8               	btfsc	status,2,c
  1559  000A1E  D737               	goto	l2530
  1560  000A20  0A22               	xorlw	34	; case 40
  1561  000A22  B4D8               	btfsc	status,2,c
  1562  000A24  D75D               	goto	l135
  1563  000A26  0A01               	xorlw	1	; case 41
  1564  000A28  B4D8               	btfsc	status,2,c
  1565  000A2A  D7A0               	goto	l141
  1566  000A2C  0A03               	xorlw	3	; case 42
  1567  000A2E  B4D8               	btfsc	status,2,c
  1568  000A30  D7D5               	goto	l2552
  1569  000A32                     l2560:
  1570                           
  1571                           ;main.c: 214: }
  1572                           ;main.c: 217: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1573  000A32  0101               	movlb	1	; () banked
  1574  000A34  0E01               	movlw	high main@msgtype
  1575  000A36  0100               	movlb	0	; () banked
  1576  000A38  0100               	movlb	0	; () banked
  1577  000A3A  6FBB               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1578  000A3C  0101               	movlb	1	; () banked
  1579  000A3E  0E23               	movlw	low main@msgtype
  1580  000A40  0100               	movlb	0	; () banked
  1581  000A42  0100               	movlb	0	; () banked
  1582  000A44  6FBA               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1583  000A46  0101               	movlb	1	; () banked
  1584  000A48  0E01               	movlw	high main@msgbuffer
  1585  000A4A  0100               	movlb	0	; () banked
  1586  000A4C  0100               	movlb	0	; () banked
  1587  000A4E  6FBD               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1588  000A50  0101               	movlb	1	; () banked
  1589  000A52  0E00               	movlw	low main@msgbuffer
  1590  000A54  0100               	movlb	0	; () banked
  1591  000A56  0100               	movlb	0	; () banked
  1592  000A58  6FBC               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1593  000A5A  0E0A               	movlw	10
  1594  000A5C  EC2E  F00E         	call	_ToMainLow_recvmsg
  1595  000A60  0101               	movlb	1	; () banked
  1596  000A62  0101               	movlb	1	; () banked
  1597  000A64  6F50               	movwf	main@length& (0+255),b
  1598                           
  1599                           ; BSR set to: 1
  1600                           ;main.c: 218: if (length < 0) {
  1601  000A66  0101               	movlb	1	; () banked
  1602  000A68  0101               	movlb	1	; () banked
  1603  000A6A  BF50               	btfsc	main@length& (0+255),7,b
  1604  000A6C  D6EF               	goto	l2522
  1605  000A6E  D052               	goto	l2572
  1606  000A70                     l2566:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 226: {
  1610                           ;main.c: 227: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1611  000A70  0101               	movlb	1	; () banked
  1612  000A72  0E01               	movlw	high main@t1thread_data
  1613  000A74  0100               	movlb	0	; () banked
  1614  000A76  0100               	movlb	0	; () banked
  1615  000A78  6FC2               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1616  000A7A  0101               	movlb	1	; () banked
  1617  000A7C  0E24               	movlw	low main@t1thread_data
  1618  000A7E  0100               	movlb	0	; () banked
  1619  000A80  0100               	movlb	0	; () banked
  1620  000A82  6FC1               	movwf	timer1_lthread@tptr& (0+255),b
  1621  000A84  0101               	movlb	1	; () banked
  1622  000A86  0100               	movlb	0	; () banked
  1623  000A88  C123  F0C3         	movff	main@msgtype,timer1_lthread@msgtype
  1624  000A8C  0100               	movlb	0	; () banked
  1625  000A8E  0100               	movlb	0	; () banked
  1626  000A90  6BC4               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1627  000A92  0101               	movlb	1	; () banked
  1628  000A94  0101               	movlb	1	; () banked
  1629  000A96  5150               	movf	main@length& (0+255),w,b
  1630  000A98  0100               	movlb	0	; () banked
  1631  000A9A  0100               	movlb	0	; () banked
  1632  000A9C  6FC5               	movwf	timer1_lthread@length& (0+255),b
  1633  000A9E  0100               	movlb	0	; () banked
  1634  000AA0  6BC6               	clrf	(timer1_lthread@length+1)& (0+255),b
  1635  000AA2  0100               	movlb	0	; () banked
  1636  000AA4  BFC5               	btfsc	timer1_lthread@length& (0+255),7,b
  1637  000AA6  07C6               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1638  000AA8  0101               	movlb	1	; () banked
  1639  000AAA  0E01               	movlw	high main@msgbuffer
  1640  000AAC  0100               	movlb	0	; () banked
  1641  000AAE  0100               	movlb	0	; () banked
  1642  000AB0  6FC8               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1643  000AB2  0101               	movlb	1	; () banked
  1644  000AB4  0E00               	movlw	low main@msgbuffer
  1645  000AB6  0100               	movlb	0	; () banked
  1646  000AB8  0100               	movlb	0	; () banked
  1647  000ABA  6FC7               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1648  000ABC  EC3A  F008         	call	_timer1_lthread	;wreg free
  1649                           
  1650                           ;main.c: 228: break;
  1651  000AC0  D6C5               	goto	l2522
  1652  000AC2                     l2568:
  1653                           
  1654                           ;main.c: 231: case 31:
  1655                           ;main.c: 232: case 32:
  1656                           ;main.c: 233: {
  1657                           ;main.c: 234: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1658  000AC2  0101               	movlb	1	; () banked
  1659  000AC4  0E01               	movlw	high main@uthread_data
  1660  000AC6  0100               	movlb	0	; () banked
  1661  000AC8  0100               	movlb	0	; () banked
  1662  000ACA  6FBD               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1663  000ACC  0101               	movlb	1	; () banked
  1664  000ACE  0E12               	movlw	low main@uthread_data
  1665  000AD0  0100               	movlb	0	; () banked
  1666  000AD2  0100               	movlb	0	; () banked
  1667  000AD4  6FBC               	movwf	uart_lthread@uptr& (0+255),b
  1668  000AD6  0101               	movlb	1	; () banked
  1669  000AD8  0100               	movlb	0	; () banked
  1670  000ADA  C123  F0BE         	movff	main@msgtype,uart_lthread@msgtype
  1671  000ADE  0100               	movlb	0	; () banked
  1672  000AE0  0100               	movlb	0	; () banked
  1673  000AE2  6BBF               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1674  000AE4  0101               	movlb	1	; () banked
  1675  000AE6  0101               	movlb	1	; () banked
  1676  000AE8  5150               	movf	main@length& (0+255),w,b
  1677  000AEA  0100               	movlb	0	; () banked
  1678  000AEC  0100               	movlb	0	; () banked
  1679  000AEE  6FC0               	movwf	uart_lthread@length& (0+255),b
  1680  000AF0  0100               	movlb	0	; () banked
  1681  000AF2  6BC1               	clrf	(uart_lthread@length+1)& (0+255),b
  1682  000AF4  0100               	movlb	0	; () banked
  1683  000AF6  BFC0               	btfsc	uart_lthread@length& (0+255),7,b
  1684  000AF8  07C1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1685  000AFA  0101               	movlb	1	; () banked
  1686  000AFC  0E01               	movlw	high main@msgbuffer
  1687  000AFE  0100               	movlb	0	; () banked
  1688  000B00  0100               	movlb	0	; () banked
  1689  000B02  6FC3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1690  000B04  0101               	movlb	1	; () banked
  1691  000B06  0E00               	movlw	low main@msgbuffer
  1692  000B08  0100               	movlb	0	; () banked
  1693  000B0A  0100               	movlb	0	; () banked
  1694  000B0C  6FC2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1695  000B0E  ECC5  F007         	call	_uart_lthread	;wreg free
  1696                           
  1697                           ;main.c: 235: break;
  1698  000B12  D69C               	goto	l2522
  1699  000B14                     l2572:
  1700  000B14  0101               	movlb	1	; () banked
  1701  000B16  0101               	movlb	1	; () banked
  1702  000B18  5123               	movf	main@msgtype& (0+255),w,b
  1703                           
  1704                           ; Switch size 1, requested type "space"
  1705                           ; Number of cases is 4, Range of values is 11 to 32
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte           13     7 (average)
  1709                           ;	Chosen strategy is simple_byte
  1710  000B1A  0A0B               	xorlw	11	; case 11
  1711  000B1C  B4D8               	btfsc	status,2,c
  1712  000B1E  D7A8               	goto	l2566
  1713  000B20  0A15               	xorlw	21	; case 30
  1714  000B22  B4D8               	btfsc	status,2,c
  1715  000B24  D7CE               	goto	l2568
  1716  000B26  0A01               	xorlw	1	; case 31
  1717  000B28  B4D8               	btfsc	status,2,c
  1718  000B2A  D7CB               	goto	l2568
  1719  000B2C  0A3F               	xorlw	63	; case 32
  1720  000B2E  B4D8               	btfsc	status,2,c
  1721  000B30  D7C8               	goto	l2568
  1722  000B32  D68C               	goto	l2522
  1723  000B34                     __end_of_main:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           intcon	equ	0xFF2
  1730                           intcon2	equ	0xFF1
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _uart_lthread *****************
  1738 ;; Defined at:
  1739 ;;		line 12 in file "src/uart_thread.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  uptr            2   60[BANK0 ] PTR struct __uart_thread
  1742 ;;		 -> main@uthread_data(10), 
  1743 ;;  msgtype         2   62[BANK0 ] int 
  1744 ;;  length          2   64[BANK0 ] int 
  1745 ;;  msgbuffer       2   66[BANK0 ] PTR unsigned char 
  1746 ;;		 -> main@msgbuffer(11), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  index           2   69[BANK0 ] int 
  1749 ;;  status          1   68[BANK0 ] char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2   60[BANK0 ] int 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1759 ;;      Params:         0       8       0       0       0
  1760 ;;      Locals:         0       3       0       0       0
  1761 ;;      Temps:          0       0       0       0       0
  1762 ;;      Totals:         0      11       0       0       0
  1763 ;;Total ram usage:       11 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:   13
  1766 ;; This function calls:
  1767 ;;		_FromMainLow_sendmsg
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text1
  1774  000F8A                     __ptext1:
  1775                           	opt stack 0
  1776  000F8A                     _uart_lthread:
  1777                           	opt stack 17
  1778                           
  1779                           ;uart_thread.c: 13: if (msgtype == 30) {
  1780                           
  1781                           ; BSR set to: 1
  1782                           ;incstack = 0
  1783  000F8A  0100               	movlb	0	; () banked
  1784  000F8C  0100               	movlb	0	; () banked
  1785  000F8E  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1786  000F90  0A1E               	xorlw	30
  1787  000F92  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1788  000F94  B4D8               	btfsc	status,2,c
  1789  000F96  0012               	return	
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;uart_thread.c: 16: else if(msgtype == 31){
  1793                           
  1794                           ; BSR set to: 0
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;uart_thread.c: 15: }
  1798  000F98  0100               	movlb	0	; () banked
  1799  000F9A  0100               	movlb	0	; () banked
  1800  000F9C  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1801  000F9E  0A1F               	xorlw	31
  1802  000FA0  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1803  000FA2  A4D8               	btfss	status,2,c
  1804  000FA4  D04F               	goto	l2804
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;uart_thread.c: 18: int index = 0;
  1808  000FA6  0E00               	movlw	0
  1809  000FA8  0100               	movlb	0	; () banked
  1810  000FAA  0100               	movlb	0	; () banked
  1811  000FAC  6FC6               	movwf	(uart_lthread@index+1)& (0+255),b
  1812  000FAE  0E00               	movlw	0
  1813  000FB0  0100               	movlb	0	; () banked
  1814  000FB2  6FC5               	movwf	uart_lthread@index& (0+255),b
  1815                           
  1816                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1817  000FB4  0E00               	movlw	0
  1818  000FB6  0100               	movlb	0	; () banked
  1819  000FB8  0100               	movlb	0	; () banked
  1820  000FBA  6FC6               	movwf	(uart_lthread@index+1)& (0+255),b
  1821  000FBC  0E00               	movlw	0
  1822  000FBE  0100               	movlb	0	; () banked
  1823  000FC0  6FC5               	movwf	uart_lthread@index& (0+255),b
  1824  000FC2                     
  1825                           ; BSR set to: 0
  1826  000FC2  0100               	movlb	0	; () banked
  1827  000FC4  0100               	movlb	0	; () banked
  1828  000FC6  51C6               	movf	(uart_lthread@index+1)& (0+255),w,b
  1829  000FC8  0A80               	xorlw	128
  1830  000FCA  0F80               	addlw	-128
  1831  000FCC  0E0A               	movlw	10
  1832  000FCE  B4D8               	btfsc	status,2,c
  1833  000FD0  5DC5               	subwf	uart_lthread@index& (0+255),w,b
  1834  000FD2  B0D8               	btfsc	status,0,c
  1835  000FD4  D023               	goto	l2800
  1836                           
  1837                           ; BSR set to: 0
  1838                           
  1839                           ; BSR set to: 0
  1840                           
  1841                           ; BSR set to: 0
  1842  000FD6  0100               	movlb	0	; () banked
  1843  000FD8  0100               	movlb	0	; () banked
  1844  000FDA  51C5               	movf	uart_lthread@index& (0+255),w,b
  1845  000FDC  0100               	movlb	0	; () banked
  1846  000FDE  0100               	movlb	0	; () banked
  1847  000FE0  25C2               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1848  000FE2  6ED9               	movwf	fsr2l,c
  1849  000FE4  0100               	movlb	0	; () banked
  1850  000FE6  0100               	movlb	0	; () banked
  1851  000FE8  51C6               	movf	(uart_lthread@index+1)& (0+255),w,b
  1852  000FEA  0100               	movlb	0	; () banked
  1853  000FEC  0100               	movlb	0	; () banked
  1854  000FEE  21C3               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1855  000FF0  6EDA               	movwf	fsr2h,c
  1856  000FF2  0100               	movlb	0	; () banked
  1857  000FF4  0100               	movlb	0	; () banked
  1858  000FF6  51C5               	movf	uart_lthread@index& (0+255),w,b
  1859  000FF8  0100               	movlb	0	; () banked
  1860  000FFA  0100               	movlb	0	; () banked
  1861  000FFC  25BC               	addwf	uart_lthread@uptr& (0+255),w,b
  1862  000FFE  6EE1               	movwf	fsr1l,c
  1863  001000  0100               	movlb	0	; () banked
  1864  001002  0100               	movlb	0	; () banked
  1865  001004  51C6               	movf	(uart_lthread@index+1)& (0+255),w,b
  1866  001006  0100               	movlb	0	; () banked
  1867  001008  0100               	movlb	0	; () banked
  1868  00100A  21BD               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1869  00100C  6EE2               	movwf	fsr1h,c
  1870  00100E  CFDF FFE7          	movff	indf2,indf1
  1871                           
  1872                           ; BSR set to: 0
  1873  001012  0100               	movlb	0	; () banked
  1874  001014  0100               	movlb	0	; () banked
  1875  001016  4BC5               	infsnz	uart_lthread@index& (0+255),f,b
  1876  001018  2BC6               	incf	(uart_lthread@index+1)& (0+255),f,b
  1877  00101A  D7D3               	goto	L5
  1878  00101C                     l2800:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1882  00101C  C0BE  F0B8         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1883  001020  0100               	movlb	0	; () banked
  1884  001022  0100               	movlb	0	; () banked
  1885  001024  C0BD  F0BA         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1886  001028  0100               	movlb	0	; () banked
  1887  00102A  0100               	movlb	0	; () banked
  1888  00102C  C0BC  F0B9         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1889  001030  0100               	movlb	0	; () banked
  1890  001032  0100               	movlb	0	; () banked
  1891  001034  51C0               	movf	uart_lthread@length& (0+255),w,b
  1892  001036  ECCC  F00E         	call	_FromMainLow_sendmsg
  1893  00103A  0100               	movlb	0	; () banked
  1894  00103C  0100               	movlb	0	; () banked
  1895  00103E  6FC4               	movwf	uart_lthread@status& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;uart_thread.c: 25: }
  1899                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1900                           
  1901                           ; BSR set to: 0
  1902  001040  889D               	bsf	3997,4,c	;volatile
  1903                           
  1904                           ;uart_thread.c: 29: }
  1905  001042  0012               	return	
  1906  001044                     l2804:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;uart_thread.c: 30: else if(msgtype == 32){
  1910  001044  0100               	movlb	0	; () banked
  1911  001046  0100               	movlb	0	; () banked
  1912  001048  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1913  00104A  0A20               	xorlw	32
  1914  00104C  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1915  00104E  A4D8               	btfss	status,2,c
  1916  001050  0012               	return	
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1920  001052  0100               	movlb	0	; () banked
  1921  001054  0100               	movlb	0	; () banked
  1922  001056  51C0               	movf	uart_lthread@length& (0+255),w,b
  1923  001058  0100               	movlb	0	; () banked
  1924  00105A  0100               	movlb	0	; () banked
  1925  00105C  25C2               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1926  00105E  6ED9               	movwf	fsr2l,c
  1927  001060  0100               	movlb	0	; () banked
  1928  001062  0100               	movlb	0	; () banked
  1929  001064  51C1               	movf	(uart_lthread@length+1)& (0+255),w,b
  1930  001066  0100               	movlb	0	; () banked
  1931  001068  0100               	movlb	0	; () banked
  1932  00106A  21C3               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1933  00106C  6EDA               	movwf	fsr2h,c
  1934  00106E  0E00               	movlw	0
  1935  001070  6EDF               	movwf	indf2,c
  1936  001072  0012               	return	
  1937  001074                     __end_of_uart_lthread:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           intcon	equ	0xFF2
  1944                           intcon2	equ	0xFF1
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           indf1	equ	0xFE7
  1948                           postdec1	equ	0xFE5
  1949                           fsr1h	equ	0xFE2
  1950                           fsr1l	equ	0xFE1
  1951                           indf2	equ	0xFDF
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _FromMainLow_sendmsg *****************
  1957 ;; Defined at:
  1958 ;;		line 150 in file "src/messages.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  length          1    wreg     unsigned char 
  1961 ;;  msgtype         1   56[BANK0 ] unsigned char 
  1962 ;;  data            2   57[BANK0 ] PTR void 
  1963 ;;		 -> main@uthread_data(10), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  length          1   59[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      char 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1975 ;;      Params:         0       3       0       0       0
  1976 ;;      Locals:         0       1       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       4       0       0       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:   12
  1982 ;; This function calls:
  1983 ;;		_send_msg
  1984 ;; This function is called by:
  1985 ;;		_uart_lthread
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text2
  1990  001D98                     __ptext2:
  1991                           	opt stack 0
  1992  001D98                     _FromMainLow_sendmsg:
  1993                           	opt stack 17
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;incstack = 0
  1997                           ;FromMainLow_sendmsg@length stored from wreg
  1998  001D98  CFE8 F0BB          	movff	wreg,FromMainLow_sendmsg@length
  1999                           
  2000                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2001  001D9C  0102               	movlb	2	; () banked
  2002  001D9E  0E02               	movlw	high _FromMainLow_MQ
  2003  001DA0  0100               	movlb	0	; () banked
  2004  001DA2  0100               	movlb	0	; () banked
  2005  001DA4  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  2006  001DA6  0102               	movlb	2	; () banked
  2007  001DA8  0E36               	movlw	low _FromMainLow_MQ
  2008  001DAA  0100               	movlb	0	; () banked
  2009  001DAC  0100               	movlb	0	; () banked
  2010  001DAE  6FAC               	movwf	send_msg@qptr& (0+255),b
  2011  001DB0  C0BB  F0AE         	movff	FromMainLow_sendmsg@length,send_msg@length
  2012  001DB4  C0B8  F0AF         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2013  001DB8  0100               	movlb	0	; () banked
  2014  001DBA  0100               	movlb	0	; () banked
  2015  001DBC  C0BA  F0B1         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2016  001DC0  0100               	movlb	0	; () banked
  2017  001DC2  0100               	movlb	0	; () banked
  2018  001DC4  C0B9  F0B0         	movff	FromMainLow_sendmsg@data,send_msg@data
  2019  001DC8  EC43  F007         	call	_send_msg	;wreg free
  2020  001DCC  0012               	return	
  2021  001DCE                     __end_of_FromMainLow_sendmsg:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           indf1	equ	0xFE7
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           indf2	equ	0xFDF
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _timer1_lthread *****************
  2041 ;; Defined at:
  2042 ;;		line 23 in file "src/timer1_thread.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  tptr            2   65[BANK0 ] PTR struct __timer1_thre
  2045 ;;		 -> main@t1thread_data(44), 
  2046 ;;  msgtype         2   67[BANK0 ] int 
  2047 ;;  length          2   69[BANK0 ] int 
  2048 ;;  msgbuffer       2   71[BANK0 ] PTR unsigned char 
  2049 ;;		 -> main@msgbuffer(11), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  temp            2   77[BANK0 ] unsigned char [2]
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  2   65[BANK0 ] int 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2061 ;;      Params:         0       8       0       0       0
  2062 ;;      Locals:         0       2       0       0       0
  2063 ;;      Temps:          0       4       0       0       0
  2064 ;;      Totals:         0      14       0       0       0
  2065 ;;Total ram usage:       14 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:   14
  2068 ;; This function calls:
  2069 ;;		_WriteTimer1
  2070 ;;		___lwmod
  2071 ;;		_sendUARTarr
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text3
  2078  001074                     __ptext3:
  2079                           	opt stack 0
  2080  001074                     _timer1_lthread:
  2081                           	opt stack 16
  2082                           
  2083                           ;timer1_thread.c: 24: tptr->msgcount++;
  2084                           
  2085                           ;incstack = 0
  2086  001074  C0C1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2087  001078  C0C2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2088  00107C  2ADE               	incf	postinc2,f,c
  2089  00107E  0E00               	movlw	0
  2090  001080  22DD               	addwfc	postdec2,f,c
  2091                           
  2092                           ;timer1_thread.c: 28: if ((tptr->msgcount % tptr->curMove) == tptr->curMove-1) {
  2093  001082  C0C1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2094  001086  C0C2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2095  00108A  0100               	movlb	0	; () banked
  2096  00108C  CFDE F0A2          	movff	postinc2,___lwmod@dividend
  2097  001090  0100               	movlb	0	; () banked
  2098  001092  CFDD F0A3          	movff	postdec2,___lwmod@dividend+1
  2099  001096  0100               	movlb	0	; () banked
  2100  001098  EE20 F02A          	lfsr	2,42
  2101  00109C  0100               	movlb	0	; () banked
  2102  00109E  51C1               	movf	timer1_lthread@tptr& (0+255),w,b
  2103  0010A0  26D9               	addwf	fsr2l,f,c
  2104  0010A2  0100               	movlb	0	; () banked
  2105  0010A4  51C2               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2106  0010A6  22DA               	addwfc	fsr2h,f,c
  2107  0010A8  0100               	movlb	0	; () banked
  2108  0010AA  CFDE F0A4          	movff	postinc2,___lwmod@divisor
  2109  0010AE  0100               	movlb	0	; () banked
  2110  0010B0  CFDD F0A5          	movff	postdec2,___lwmod@divisor+1
  2111  0010B4  ECC0  F00B         	call	___lwmod	;wreg free
  2112  0010B8  0EFF               	movlw	255
  2113  0010BA  0100               	movlb	0	; () banked
  2114  0010BC  6FC9               	movwf	??_timer1_lthread& (0+255),b
  2115  0010BE  0EFF               	movlw	255
  2116  0010C0  6FCA               	movwf	(??_timer1_lthread+1)& (0+255),b
  2117  0010C2  0100               	movlb	0	; () banked
  2118  0010C4  EE20 F02A          	lfsr	2,42
  2119  0010C8  0100               	movlb	0	; () banked
  2120  0010CA  51C1               	movf	timer1_lthread@tptr& (0+255),w,b
  2121  0010CC  26D9               	addwf	fsr2l,f,c
  2122  0010CE  0100               	movlb	0	; () banked
  2123  0010D0  51C2               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2124  0010D2  22DA               	addwfc	fsr2h,f,c
  2125  0010D4  CFDE F0CB          	movff	postinc2,??_timer1_lthread+2
  2126  0010D8  CFDD F0CC          	movff	postdec2,??_timer1_lthread+3
  2127  0010DC  0100               	movlb	0	; () banked
  2128  0010DE  51C9               	movf	??_timer1_lthread& (0+255),w,b
  2129  0010E0  0100               	movlb	0	; () banked
  2130  0010E2  27CB               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  2131  0010E4  0100               	movlb	0	; () banked
  2132  0010E6  51CA               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2133  0010E8  0100               	movlb	0	; () banked
  2134  0010EA  23CC               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  2135  0010EC  0100               	movlb	0	; () banked
  2136  0010EE  0100               	movlb	0	; () banked
  2137  0010F0  51A3               	movf	(?___lwmod+1)& (0+255),w,b
  2138  0010F2  0100               	movlb	0	; () banked
  2139  0010F4  19CC               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  2140  0010F6  E105               	bnz	u1745
  2141  0010F8  0100               	movlb	0	; () banked
  2142  0010FA  0100               	movlb	0	; () banked
  2143  0010FC  51A2               	movf	?___lwmod& (0+255),w,b
  2144  0010FE  0100               	movlb	0	; () banked
  2145  001100  19CB               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  2146  001102                     u1745:
  2147  001102  A4D8               	btfss	status,2,c
  2148  001104  D011               	goto	l2780
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;timer1_thread.c: 29: unsigned char temp[2] = {0,0};
  2152  001106  C0D6  F0CD         	movff	timer1_lthread@F5156,timer1_lthread@temp
  2153  00110A  C0D7  F0CE         	movff	timer1_lthread@F5156+1,timer1_lthread@temp+1
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;timer1_thread.c: 30: sendUARTarr(2,temp);
  2157  00110E  0100               	movlb	0	; () banked
  2158  001110  0E00               	movlw	high timer1_lthread@temp
  2159  001112  0100               	movlb	0	; () banked
  2160  001114  0100               	movlb	0	; () banked
  2161  001116  6FBD               	movwf	(sendUARTarr@data+1)& (0+255),b
  2162  001118  0100               	movlb	0	; () banked
  2163  00111A  0ECD               	movlw	low timer1_lthread@temp
  2164  00111C  0100               	movlb	0	; () banked
  2165  00111E  0100               	movlb	0	; () banked
  2166  001120  6FBC               	movwf	sendUARTarr@data& (0+255),b
  2167  001122  0E02               	movlw	2
  2168  001124  EC0D  F00E         	call	_sendUARTarr
  2169  001128                     l2780:
  2170                           
  2171                           ;timer1_thread.c: 31: }
  2172                           ;timer1_thread.c: 33: WriteTimer1(tptr->cmDist);
  2173  001128  0100               	movlb	0	; () banked
  2174  00112A  EE20 F028          	lfsr	2,40
  2175  00112E  0100               	movlb	0	; () banked
  2176  001130  51C1               	movf	timer1_lthread@tptr& (0+255),w,b
  2177  001132  26D9               	addwf	fsr2l,f,c
  2178  001134  0100               	movlb	0	; () banked
  2179  001136  51C2               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2180  001138  22DA               	addwfc	fsr2h,f,c
  2181  00113A  0100               	movlb	0	; () banked
  2182  00113C  CFDE F0A2          	movff	postinc2,WriteTimer1@timer1
  2183  001140  0100               	movlb	0	; () banked
  2184  001142  CFDD F0A3          	movff	postdec2,WriteTimer1@timer1+1
  2185  001146  ECCD  F00F         	call	_WriteTimer1	;wreg free
  2186  00114A  0012               	return	
  2187  00114C                     __end_of_timer1_lthread:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           intcon	equ	0xFF2
  2194                           intcon2	equ	0xFF1
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           indf1	equ	0xFE7
  2198                           postdec1	equ	0xFE5
  2199                           fsr1h	equ	0xFE2
  2200                           fsr1l	equ	0xFE1
  2201                           indf2	equ	0xFDF
  2202                           postinc2	equ	0xFDE
  2203                           postdec2	equ	0xFDD
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function ___lwmod *****************
  2209 ;; Defined at:
  2210 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dividend        2   34[BANK0 ] unsigned int 
  2213 ;;  divisor         2   36[BANK0 ] unsigned int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  counter         1   39[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2   34[BANK0 ] unsigned int 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2225 ;;      Params:         0       4       0       0       0
  2226 ;;      Locals:         0       1       0       0       0
  2227 ;;      Temps:          0       1       0       0       0
  2228 ;;      Totals:         0       6       0       0       0
  2229 ;;Total ram usage:        6 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:   10
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_timer1_lthread
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text4
  2240  001780                     __ptext4:
  2241                           	opt stack 0
  2242  001780                     ___lwmod:
  2243                           	opt stack 19
  2244                           
  2245                           ;incstack = 0
  2246  001780  0100               	movlb	0	; () banked
  2247  001782  0100               	movlb	0	; () banked
  2248  001784  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2249  001786  11A4               	iorwf	___lwmod@divisor& (0+255),w,b
  2250  001788  B4D8               	btfsc	status,2,c
  2251  00178A  D03A               	goto	l1054
  2252                           
  2253                           ; BSR set to: 0
  2254  00178C  0100               	movlb	0	; () banked
  2255  00178E  6FA6               	movwf	??___lwmod& (0+255),b
  2256  001790  0E01               	movlw	1
  2257  001792  0100               	movlb	0	; () banked
  2258  001794  0100               	movlb	0	; () banked
  2259  001796  6FA7               	movwf	___lwmod@counter& (0+255),b
  2260  001798  0100               	movlb	0	; () banked
  2261  00179A  51A6               	movf	??___lwmod& (0+255),w,b
  2262  00179C  D009               	goto	l2996
  2263  00179E                     l2994:
  2264                           
  2265                           ; BSR set to: 0
  2266  00179E  0100               	movlb	0	; () banked
  2267  0017A0  0100               	movlb	0	; () banked
  2268  0017A2  0100               	movlb	0	; () banked
  2269  0017A4  90D8               	bcf	status,0,c
  2270  0017A6  37A4               	rlcf	___lwmod@divisor& (0+255),f,b
  2271  0017A8  37A5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2272  0017AA  0100               	movlb	0	; () banked
  2273  0017AC  0100               	movlb	0	; () banked
  2274  0017AE  2BA7               	incf	___lwmod@counter& (0+255),f,b
  2275  0017B0                     l2996:
  2276                           
  2277                           ; BSR set to: 0
  2278  0017B0  0100               	movlb	0	; () banked
  2279  0017B2  0100               	movlb	0	; () banked
  2280  0017B4  AFA5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2281  0017B6  D7F3               	goto	l2994
  2282  0017B8                     l2998:
  2283                           
  2284                           ; BSR set to: 0
  2285  0017B8  0100               	movlb	0	; () banked
  2286  0017BA  0100               	movlb	0	; () banked
  2287  0017BC  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2288  0017BE  0100               	movlb	0	; () banked
  2289  0017C0  0100               	movlb	0	; () banked
  2290  0017C2  5DA2               	subwf	___lwmod@dividend& (0+255),w,b
  2291  0017C4  0100               	movlb	0	; () banked
  2292  0017C6  0100               	movlb	0	; () banked
  2293  0017C8  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2294  0017CA  0100               	movlb	0	; () banked
  2295  0017CC  0100               	movlb	0	; () banked
  2296  0017CE  59A3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2297  0017D0  A0D8               	btfss	status,0,c
  2298  0017D2  D00C               	goto	l3002
  2299                           
  2300                           ; BSR set to: 0
  2301  0017D4  0100               	movlb	0	; () banked
  2302  0017D6  0100               	movlb	0	; () banked
  2303  0017D8  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2304  0017DA  0100               	movlb	0	; () banked
  2305  0017DC  0100               	movlb	0	; () banked
  2306  0017DE  5FA2               	subwf	___lwmod@dividend& (0+255),f,b
  2307  0017E0  0100               	movlb	0	; () banked
  2308  0017E2  0100               	movlb	0	; () banked
  2309  0017E4  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2310  0017E6  0100               	movlb	0	; () banked
  2311  0017E8  0100               	movlb	0	; () banked
  2312  0017EA  5BA3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2313  0017EC                     l3002:
  2314                           
  2315                           ; BSR set to: 0
  2316  0017EC  0100               	movlb	0	; () banked
  2317  0017EE  0100               	movlb	0	; () banked
  2318  0017F0  0100               	movlb	0	; () banked
  2319  0017F2  90D8               	bcf	status,0,c
  2320  0017F4  33A5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2321  0017F6  33A4               	rrcf	___lwmod@divisor& (0+255),f,b
  2322                           
  2323                           ; BSR set to: 0
  2324  0017F8  0100               	movlb	0	; () banked
  2325  0017FA  0100               	movlb	0	; () banked
  2326  0017FC  2FA7               	decfsz	___lwmod@counter& (0+255),f,b
  2327  0017FE  D7DC               	goto	l2998
  2328  001800                     l1054:
  2329                           
  2330                           ; BSR set to: 0
  2331  001800  C0A2  F0A2         	movff	___lwmod@dividend,?___lwmod
  2332  001804  C0A3  F0A3         	movff	___lwmod@dividend+1,?___lwmod+1
  2333                           
  2334                           ; BSR set to: 0
  2335  001808  0012               	return	
  2336  00180A                     __end_of___lwmod:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           intcon	equ	0xFF2
  2343                           intcon2	equ	0xFF1
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           indf1	equ	0xFE7
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           postinc2	equ	0xFDE
  2352                           postdec2	equ	0xFDD
  2353                           fsr2h	equ	0xFDA
  2354                           fsr2l	equ	0xFD9
  2355                           status	equ	0xFD8
  2356                           
  2357 ;; *************** function _timer0_lthread *****************
  2358 ;; Defined at:
  2359 ;;		line 14 in file "src/timer0_thread.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  tptr            2   65[BANK0 ] PTR struct __timer0_thre
  2362 ;;		 -> main@t0thread_data(4), 
  2363 ;;  msgtype         2   67[BANK0 ] int 
  2364 ;;  length          2   69[BANK0 ] int 
  2365 ;;  msgbuffer       2   71[BANK0 ] PTR unsigned char 
  2366 ;;		 -> main@msgbuffer(11), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  temp            2   75[BANK0 ] unsigned char [2]
  2369 ;;  msgval          2   73[BANK0 ] PTR unsigned int 
  2370 ;;		 -> main@msgbuffer(11), 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   65[BANK0 ] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2380 ;;      Params:         0       8       0       0       0
  2381 ;;      Locals:         0       4       0       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0      12       0       0       0
  2384 ;;Total ram usage:       12 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:   14
  2387 ;; This function calls:
  2388 ;;		___awmod
  2389 ;;		_sendUARTarr
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text5
  2396  0016F4                     __ptext5:
  2397                           	opt stack 0
  2398  0016F4                     _timer0_lthread:
  2399                           	opt stack 16
  2400                           
  2401                           ;timer0_thread.c: 15: unsigned int *msgval;
  2402                           ;timer0_thread.c: 16: msgval = (unsigned int *) msgbuffer;
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;incstack = 0
  2406  0016F4  0100               	movlb	0	; () banked
  2407  0016F6  0100               	movlb	0	; () banked
  2408  0016F8  C0C8  F0CA         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2409  0016FC  0100               	movlb	0	; () banked
  2410  0016FE  0100               	movlb	0	; () banked
  2411  001700  C0C7  F0C9         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;timer0_thread.c: 18: tptr->msgcount++;
  2415  001704  0100               	movlb	0	; () banked
  2416  001706  EE20 F002          	lfsr	2,2
  2417  00170A  0100               	movlb	0	; () banked
  2418  00170C  51C1               	movf	timer0_lthread@tptr& (0+255),w,b
  2419  00170E  26D9               	addwf	fsr2l,f,c
  2420  001710  0100               	movlb	0	; () banked
  2421  001712  51C2               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2422  001714  22DA               	addwfc	fsr2h,f,c
  2423  001716  2ADE               	incf	postinc2,f,c
  2424  001718  0E00               	movlw	0
  2425  00171A  22DD               	addwfc	postdec2,f,c
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;timer0_thread.c: 20: if((tptr->msgcount % 60) == 59) {
  2429  00171C  0100               	movlb	0	; () banked
  2430  00171E  EE20 F002          	lfsr	2,2
  2431  001722  0100               	movlb	0	; () banked
  2432  001724  51C1               	movf	timer0_lthread@tptr& (0+255),w,b
  2433  001726  26D9               	addwf	fsr2l,f,c
  2434  001728  0100               	movlb	0	; () banked
  2435  00172A  51C2               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2436  00172C  22DA               	addwfc	fsr2h,f,c
  2437  00172E  0100               	movlb	0	; () banked
  2438  001730  CFDE F0A2          	movff	postinc2,___awmod@dividend
  2439  001734  0100               	movlb	0	; () banked
  2440  001736  CFDD F0A3          	movff	postdec2,___awmod@dividend+1
  2441  00173A  0E00               	movlw	0
  2442  00173C  0100               	movlb	0	; () banked
  2443  00173E  0100               	movlb	0	; () banked
  2444  001740  6FA5               	movwf	(___awmod@divisor+1)& (0+255),b
  2445  001742  0E3C               	movlw	60
  2446  001744  0100               	movlb	0	; () banked
  2447  001746  6FA4               	movwf	___awmod@divisor& (0+255),b
  2448  001748  EC35  F006         	call	___awmod	;wreg free
  2449  00174C  0100               	movlb	0	; () banked
  2450  00174E  0100               	movlb	0	; () banked
  2451  001750  51A2               	movf	?___awmod& (0+255),w,b
  2452  001752  0A3B               	xorlw	59
  2453  001754  0100               	movlb	0	; () banked
  2454  001756  11A3               	iorwf	(?___awmod+1)& (0+255),w,b
  2455  001758  A4D8               	btfss	status,2,c
  2456  00175A  0012               	return	
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;timer0_thread.c: 21: unsigned char temp[2] = {199,72};
  2460  00175C  C0D2  F0CB         	movff	timer0_lthread@F5149,timer0_lthread@temp
  2461  001760  C0D3  F0CC         	movff	timer0_lthread@F5149+1,timer0_lthread@temp+1
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;timer0_thread.c: 22: sendUARTarr(2,temp);
  2465  001764  0100               	movlb	0	; () banked
  2466  001766  0E00               	movlw	high timer0_lthread@temp
  2467  001768  0100               	movlb	0	; () banked
  2468  00176A  0100               	movlb	0	; () banked
  2469  00176C  6FBD               	movwf	(sendUARTarr@data+1)& (0+255),b
  2470  00176E  0100               	movlb	0	; () banked
  2471  001770  0ECB               	movlw	low timer0_lthread@temp
  2472  001772  0100               	movlb	0	; () banked
  2473  001774  0100               	movlb	0	; () banked
  2474  001776  6FBC               	movwf	sendUARTarr@data& (0+255),b
  2475  001778  0E02               	movlw	2
  2476  00177A  EC0D  F00E         	call	_sendUARTarr
  2477  00177E  0012               	return	
  2478  001780                     __end_of_timer0_lthread:
  2479                           	opt stack 0
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           intcon	equ	0xFF2
  2485                           intcon2	equ	0xFF1
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           indf1	equ	0xFE7
  2489                           postdec1	equ	0xFE5
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           postdec2	equ	0xFDD
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function ___awmod *****************
  2500 ;; Defined at:
  2501 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\awmod.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  dividend        2   34[BANK0 ] int 
  2504 ;;  divisor         2   36[BANK0 ] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  sign            1   40[BANK0 ] unsigned char 
  2507 ;;  counter         1   39[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2   34[BANK0 ] int 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, prodl
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2517 ;;      Params:         0       4       0       0       0
  2518 ;;      Locals:         0       2       0       0       0
  2519 ;;      Temps:          0       1       0       0       0
  2520 ;;      Totals:         0       7       0       0       0
  2521 ;;Total ram usage:        7 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:   10
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_timer0_lthread
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text6
  2532  000C6A                     __ptext6:
  2533                           	opt stack 0
  2534  000C6A                     ___awmod:
  2535                           	opt stack 19
  2536                           
  2537                           ;incstack = 0
  2538  000C6A  0100               	movlb	0	; () banked
  2539  000C6C  6FA6               	movwf	??___awmod& (0+255),b
  2540  000C6E  0E00               	movlw	0
  2541  000C70  0100               	movlb	0	; () banked
  2542  000C72  0100               	movlb	0	; () banked
  2543  000C74  6FA8               	movwf	___awmod@sign& (0+255),b
  2544  000C76  0100               	movlb	0	; () banked
  2545  000C78  51A6               	movf	??___awmod& (0+255),w,b
  2546                           
  2547                           ; BSR set to: 0
  2548  000C7A  0100               	movlb	0	; () banked
  2549  000C7C  0100               	movlb	0	; () banked
  2550  000C7E  51A3               	movf	(___awmod@dividend+1)& (0+255),w,b
  2551  000C80  0A80               	xorlw	128
  2552  000C82  6EF3               	movwf	prodl,c
  2553  000C84  0E80               	movlw	128
  2554  000C86  5CF3               	subwf	prodl,w,c
  2555  000C88  0E00               	movlw	0
  2556  000C8A  B4D8               	btfsc	status,2,c
  2557  000C8C  5DA2               	subwf	___awmod@dividend& (0+255),w,b
  2558  000C8E  B0D8               	btfsc	status,0,c
  2559  000C90  D00F               	goto	l2962
  2560                           
  2561                           ; BSR set to: 0
  2562  000C92  0100               	movlb	0	; () banked
  2563  000C94  0100               	movlb	0	; () banked
  2564  000C96  6DA2               	negf	___awmod@dividend& (0+255),b
  2565  000C98  0100               	movlb	0	; () banked
  2566  000C9A  1FA3               	comf	(___awmod@dividend+1)& (0+255),f,b
  2567  000C9C  B0D8               	btfsc	status,0,c
  2568  000C9E  2BA3               	incf	(___awmod@dividend+1)& (0+255),f,b
  2569                           
  2570                           ; BSR set to: 0
  2571  000CA0  0100               	movlb	0	; () banked
  2572  000CA2  6FA6               	movwf	??___awmod& (0+255),b
  2573  000CA4  0E01               	movlw	1
  2574  000CA6  0100               	movlb	0	; () banked
  2575  000CA8  0100               	movlb	0	; () banked
  2576  000CAA  6FA8               	movwf	___awmod@sign& (0+255),b
  2577  000CAC  0100               	movlb	0	; () banked
  2578  000CAE  51A6               	movf	??___awmod& (0+255),w,b
  2579  000CB0                     l2962:
  2580                           
  2581                           ; BSR set to: 0
  2582  000CB0  0100               	movlb	0	; () banked
  2583  000CB2  0100               	movlb	0	; () banked
  2584  000CB4  51A5               	movf	(___awmod@divisor+1)& (0+255),w,b
  2585  000CB6  0A80               	xorlw	128
  2586  000CB8  6EF3               	movwf	prodl,c
  2587  000CBA  0E80               	movlw	128
  2588  000CBC  5CF3               	subwf	prodl,w,c
  2589  000CBE  0E00               	movlw	0
  2590  000CC0  B4D8               	btfsc	status,2,c
  2591  000CC2  5DA4               	subwf	___awmod@divisor& (0+255),w,b
  2592  000CC4  B0D8               	btfsc	status,0,c
  2593  000CC6  D007               	goto	l2966
  2594                           
  2595                           ; BSR set to: 0
  2596  000CC8  0100               	movlb	0	; () banked
  2597  000CCA  0100               	movlb	0	; () banked
  2598  000CCC  6DA4               	negf	___awmod@divisor& (0+255),b
  2599  000CCE  0100               	movlb	0	; () banked
  2600  000CD0  1FA5               	comf	(___awmod@divisor+1)& (0+255),f,b
  2601  000CD2  B0D8               	btfsc	status,0,c
  2602  000CD4  2BA5               	incf	(___awmod@divisor+1)& (0+255),f,b
  2603  000CD6                     l2966:
  2604                           
  2605                           ; BSR set to: 0
  2606  000CD6  0100               	movlb	0	; () banked
  2607  000CD8  0100               	movlb	0	; () banked
  2608  000CDA  51A5               	movf	(___awmod@divisor+1)& (0+255),w,b
  2609  000CDC  11A4               	iorwf	___awmod@divisor& (0+255),w,b
  2610  000CDE  B4D8               	btfsc	status,2,c
  2611  000CE0  D03A               	goto	l2982
  2612                           
  2613                           ; BSR set to: 0
  2614  000CE2  0100               	movlb	0	; () banked
  2615  000CE4  6FA6               	movwf	??___awmod& (0+255),b
  2616  000CE6  0E01               	movlw	1
  2617  000CE8  0100               	movlb	0	; () banked
  2618  000CEA  0100               	movlb	0	; () banked
  2619  000CEC  6FA7               	movwf	___awmod@counter& (0+255),b
  2620  000CEE  0100               	movlb	0	; () banked
  2621  000CF0  51A6               	movf	??___awmod& (0+255),w,b
  2622  000CF2  D009               	goto	l2972
  2623  000CF4                     l2970:
  2624                           
  2625                           ; BSR set to: 0
  2626  000CF4  0100               	movlb	0	; () banked
  2627  000CF6  0100               	movlb	0	; () banked
  2628  000CF8  0100               	movlb	0	; () banked
  2629  000CFA  90D8               	bcf	status,0,c
  2630  000CFC  37A4               	rlcf	___awmod@divisor& (0+255),f,b
  2631  000CFE  37A5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2632  000D00  0100               	movlb	0	; () banked
  2633  000D02  0100               	movlb	0	; () banked
  2634  000D04  2BA7               	incf	___awmod@counter& (0+255),f,b
  2635  000D06                     l2972:
  2636                           
  2637                           ; BSR set to: 0
  2638  000D06  0100               	movlb	0	; () banked
  2639  000D08  0100               	movlb	0	; () banked
  2640  000D0A  AFA5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2641  000D0C  D7F3               	goto	l2970
  2642  000D0E                     l2974:
  2643                           
  2644                           ; BSR set to: 0
  2645  000D0E  0100               	movlb	0	; () banked
  2646  000D10  0100               	movlb	0	; () banked
  2647  000D12  51A4               	movf	___awmod@divisor& (0+255),w,b
  2648  000D14  0100               	movlb	0	; () banked
  2649  000D16  0100               	movlb	0	; () banked
  2650  000D18  5DA2               	subwf	___awmod@dividend& (0+255),w,b
  2651  000D1A  0100               	movlb	0	; () banked
  2652  000D1C  0100               	movlb	0	; () banked
  2653  000D1E  51A5               	movf	(___awmod@divisor+1)& (0+255),w,b
  2654  000D20  0100               	movlb	0	; () banked
  2655  000D22  0100               	movlb	0	; () banked
  2656  000D24  59A3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2657  000D26  A0D8               	btfss	status,0,c
  2658  000D28  D00C               	goto	l2978
  2659                           
  2660                           ; BSR set to: 0
  2661  000D2A  0100               	movlb	0	; () banked
  2662  000D2C  0100               	movlb	0	; () banked
  2663  000D2E  51A4               	movf	___awmod@divisor& (0+255),w,b
  2664  000D30  0100               	movlb	0	; () banked
  2665  000D32  0100               	movlb	0	; () banked
  2666  000D34  5FA2               	subwf	___awmod@dividend& (0+255),f,b
  2667  000D36  0100               	movlb	0	; () banked
  2668  000D38  0100               	movlb	0	; () banked
  2669  000D3A  51A5               	movf	(___awmod@divisor+1)& (0+255),w,b
  2670  000D3C  0100               	movlb	0	; () banked
  2671  000D3E  0100               	movlb	0	; () banked
  2672  000D40  5BA3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2673  000D42                     l2978:
  2674                           
  2675                           ; BSR set to: 0
  2676  000D42  0100               	movlb	0	; () banked
  2677  000D44  0100               	movlb	0	; () banked
  2678  000D46  0100               	movlb	0	; () banked
  2679  000D48  90D8               	bcf	status,0,c
  2680  000D4A  33A5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2681  000D4C  33A4               	rrcf	___awmod@divisor& (0+255),f,b
  2682                           
  2683                           ; BSR set to: 0
  2684  000D4E  0100               	movlb	0	; () banked
  2685  000D50  0100               	movlb	0	; () banked
  2686  000D52  2FA7               	decfsz	___awmod@counter& (0+255),f,b
  2687  000D54  D7DC               	goto	l2974
  2688  000D56                     l2982:
  2689                           
  2690                           ; BSR set to: 0
  2691  000D56  0100               	movlb	0	; () banked
  2692  000D58  0100               	movlb	0	; () banked
  2693  000D5A  51A8               	movf	___awmod@sign& (0+255),w,b
  2694  000D5C  B4D8               	btfsc	status,2,c
  2695  000D5E  D007               	goto	l2986
  2696                           
  2697                           ; BSR set to: 0
  2698  000D60  0100               	movlb	0	; () banked
  2699  000D62  0100               	movlb	0	; () banked
  2700  000D64  6DA2               	negf	___awmod@dividend& (0+255),b
  2701  000D66  0100               	movlb	0	; () banked
  2702  000D68  1FA3               	comf	(___awmod@dividend+1)& (0+255),f,b
  2703  000D6A  B0D8               	btfsc	status,0,c
  2704  000D6C  2BA3               	incf	(___awmod@dividend+1)& (0+255),f,b
  2705  000D6E                     l2986:
  2706                           
  2707                           ; BSR set to: 0
  2708  000D6E  C0A2  F0A2         	movff	___awmod@dividend,?___awmod
  2709  000D72  C0A3  F0A3         	movff	___awmod@dividend+1,?___awmod+1
  2710  000D76  0012               	return	
  2711  000D78                     __end_of___awmod:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodl	equ	0xFF3
  2718                           intcon	equ	0xFF2
  2719                           intcon2	equ	0xFF1
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           indf1	equ	0xFE7
  2723                           postdec1	equ	0xFE5
  2724                           fsr1h	equ	0xFE2
  2725                           fsr1l	equ	0xFE1
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _start_i2c_slave_reply *****************
  2734 ;; Defined at:
  2735 ;;		line 53 in file "src/my_i2c.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  length          1    wreg     unsigned char 
  2738 ;;  msg             2   34[BANK0 ] PTR unsigned char 
  2739 ;;		 -> main@msgbuffer(11), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  length          1   38[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2751 ;;      Params:         0       2       0       0       0
  2752 ;;      Locals:         0       1       0       0       0
  2753 ;;      Temps:          0       2       0       0       0
  2754 ;;      Totals:         0       5       0       0       0
  2755 ;;Total ram usage:        5 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:   10
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text7
  2766  000D78                     __ptext7:
  2767                           	opt stack 0
  2768  000D78                     _start_i2c_slave_reply:
  2769                           	opt stack 20
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;incstack = 0
  2773                           ;start_i2c_slave_reply@length stored from wreg
  2774  000D78  CFE8 F0A6          	movff	wreg,start_i2c_slave_reply@length
  2775                           
  2776                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2777  000D7C  0100               	movlb	0	; () banked
  2778  000D7E  EE20 F019          	lfsr	2,25
  2779  000D82  0100               	movlb	0	; () banked
  2780  000D84  51D4               	movf	_ic_ptr& (0+255),w,b
  2781  000D86  26D9               	addwf	fsr2l,f,c
  2782  000D88  0100               	movlb	0	; () banked
  2783  000D8A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2784  000D8C  22DA               	addwfc	fsr2h,f,c
  2785  000D8E  0E00               	movlw	0
  2786  000D90  6EDF               	movwf	indf2,c
  2787  000D92  D042               	goto	l2762
  2788  000D94                     l2758:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2792  000D94  0100               	movlb	0	; () banked
  2793  000D96  EE20 F019          	lfsr	2,25
  2794  000D9A  0100               	movlb	0	; () banked
  2795  000D9C  51D4               	movf	_ic_ptr& (0+255),w,b
  2796  000D9E  26D9               	addwf	fsr2l,f,c
  2797  000DA0  0100               	movlb	0	; () banked
  2798  000DA2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2799  000DA4  22DA               	addwfc	fsr2h,f,c
  2800  000DA6  50DF               	movf	indf2,w,c
  2801  000DA8  0100               	movlb	0	; () banked
  2802  000DAA  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2803  000DAC  0100               	movlb	0	; () banked
  2804  000DAE  51A4               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2805  000DB0  0D01               	mullw	1
  2806  000DB2  50F3               	movf	prodl,w,c
  2807  000DB4  0100               	movlb	0	; () banked
  2808  000DB6  0100               	movlb	0	; () banked
  2809  000DB8  25A2               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2810  000DBA  6ED9               	movwf	fsr2l,c
  2811  000DBC  50F4               	movf	prodh,w,c
  2812  000DBE  0100               	movlb	0	; () banked
  2813  000DC0  0100               	movlb	0	; () banked
  2814  000DC2  21A3               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2815  000DC4  6EDA               	movwf	fsr2h,c
  2816  000DC6  0100               	movlb	0	; () banked
  2817  000DC8  EE10 F019          	lfsr	1,25
  2818  000DCC  0100               	movlb	0	; () banked
  2819  000DCE  51D4               	movf	_ic_ptr& (0+255),w,b
  2820  000DD0  26E1               	addwf	fsr1l,f,c
  2821  000DD2  0100               	movlb	0	; () banked
  2822  000DD4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2823  000DD6  22E2               	addwfc	fsr1h,f,c
  2824  000DD8  50E7               	movf	indf1,w,c
  2825  000DDA  0100               	movlb	0	; () banked
  2826  000DDC  6FA5               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2827  000DDE  0100               	movlb	0	; () banked
  2828  000DE0  51A5               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2829  000DE2  0D01               	mullw	1
  2830  000DE4  0E0F               	movlw	15
  2831  000DE6  26F3               	addwf	prodl,f,c
  2832  000DE8  0E00               	movlw	0
  2833  000DEA  22F4               	addwfc	prodh,f,c
  2834  000DEC  50F3               	movf	prodl,w,c
  2835  000DEE  0100               	movlb	0	; () banked
  2836  000DF0  0100               	movlb	0	; () banked
  2837  000DF2  25D4               	addwf	_ic_ptr& (0+255),w,b
  2838  000DF4  6EE1               	movwf	fsr1l,c
  2839  000DF6  50F4               	movf	prodh,w,c
  2840  000DF8  0100               	movlb	0	; () banked
  2841  000DFA  0100               	movlb	0	; () banked
  2842  000DFC  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2843  000DFE  6EE2               	movwf	fsr1h,c
  2844  000E00  CFDF FFE7          	movff	indf2,indf1
  2845                           
  2846                           ; BSR set to: 0
  2847  000E04  0100               	movlb	0	; () banked
  2848  000E06  EE20 F019          	lfsr	2,25
  2849  000E0A  0100               	movlb	0	; () banked
  2850  000E0C  51D4               	movf	_ic_ptr& (0+255),w,b
  2851  000E0E  26D9               	addwf	fsr2l,f,c
  2852  000E10  0100               	movlb	0	; () banked
  2853  000E12  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2854  000E14  22DA               	addwfc	fsr2h,f,c
  2855  000E16  2ADF               	incf	indf2,f,c
  2856  000E18                     l2762:
  2857                           
  2858                           ; BSR set to: 0
  2859  000E18  0100               	movlb	0	; () banked
  2860  000E1A  EE20 F019          	lfsr	2,25
  2861  000E1E  0100               	movlb	0	; () banked
  2862  000E20  51D4               	movf	_ic_ptr& (0+255),w,b
  2863  000E22  26D9               	addwf	fsr2l,f,c
  2864  000E24  0100               	movlb	0	; () banked
  2865  000E26  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2866  000E28  22DA               	addwfc	fsr2h,f,c
  2867  000E2A  50DF               	movf	indf2,w,c
  2868  000E2C  0100               	movlb	0	; () banked
  2869  000E2E  6FA4               	movwf	??_start_i2c_slave_reply& (0+255),b
  2870  000E30  0100               	movlb	0	; () banked
  2871  000E32  0100               	movlb	0	; () banked
  2872  000E34  51A6               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2873  000E36  0100               	movlb	0	; () banked
  2874  000E38  5DA4               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2875  000E3A  A0D8               	btfss	status,0,c
  2876  000E3C  D7AB               	goto	l2758
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;my_i2c.c: 57: }
  2880                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2881                           
  2882                           ; BSR set to: 0
  2883  000E3E  0100               	movlb	0	; () banked
  2884  000E40  EE20 F019          	lfsr	2,25
  2885  000E44  0100               	movlb	0	; () banked
  2886  000E46  51D4               	movf	_ic_ptr& (0+255),w,b
  2887  000E48  26D9               	addwf	fsr2l,f,c
  2888  000E4A  0100               	movlb	0	; () banked
  2889  000E4C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2890  000E4E  22DA               	addwfc	fsr2h,f,c
  2891  000E50  0100               	movlb	0	; () banked
  2892  000E52  C0A6  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2893                           
  2894                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2895  000E56  0100               	movlb	0	; () banked
  2896  000E58  EE20 F01A          	lfsr	2,26
  2897  000E5C  0100               	movlb	0	; () banked
  2898  000E5E  51D4               	movf	_ic_ptr& (0+255),w,b
  2899  000E60  26D9               	addwf	fsr2l,f,c
  2900  000E62  0100               	movlb	0	; () banked
  2901  000E64  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2902  000E66  22DA               	addwfc	fsr2h,f,c
  2903  000E68  0E01               	movlw	1
  2904  000E6A  6EDF               	movwf	indf2,c
  2905                           
  2906                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2907  000E6C  0100               	movlb	0	; () banked
  2908  000E6E  EE20 F00F          	lfsr	2,15
  2909  000E72  0100               	movlb	0	; () banked
  2910  000E74  51D4               	movf	_ic_ptr& (0+255),w,b
  2911  000E76  26D9               	addwf	fsr2l,f,c
  2912  000E78  0100               	movlb	0	; () banked
  2913  000E7A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  2914  000E7C  22DA               	addwfc	fsr2h,f,c
  2915  000E7E  50DF               	movf	indf2,w,c
  2916  000E80  6EC9               	movwf	4041,c	;volatile
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2920  000E82  88C6               	bsf	4038,4,c	;volatile
  2921                           
  2922                           ; BSR set to: 0
  2923  000E84  0012               	return	
  2924  000E86                     __end_of_start_i2c_slave_reply:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           intcon2	equ	0xFF1
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           indf1	equ	0xFE7
  2937                           postdec1	equ	0xFE5
  2938                           fsr1h	equ	0xFE2
  2939                           fsr1l	equ	0xFE1
  2940                           indf2	equ	0xFDF
  2941                           postinc2	equ	0xFDE
  2942                           postdec2	equ	0xFDD
  2943                           fsr2h	equ	0xFDA
  2944                           fsr2l	equ	0xFD9
  2945                           status	equ	0xFD8
  2946                           
  2947 ;; *************** function _moveDir *****************
  2948 ;; Defined at:
  2949 ;;		line 44 in file "src/timer1_thread.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  tptr            2   65[BANK0 ] PTR struct __timer1_thre
  2952 ;;		 -> main@t1thread_data(44), 
  2953 ;;  cmDist          2   67[BANK0 ] int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  test            2   69[BANK0 ] unsigned char [2]
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2965 ;;      Params:         0       4       0       0       0
  2966 ;;      Locals:         0       2       0       0       0
  2967 ;;      Temps:          0       0       0       0       0
  2968 ;;      Totals:         0       6       0       0       0
  2969 ;;Total ram usage:        6 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:   14
  2972 ;; This function calls:
  2973 ;;		_WriteTimer1
  2974 ;;		_sendUARTarr
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text8
  2981  0019DA                     __ptext8:
  2982                           	opt stack 0
  2983  0019DA                     _moveDir:
  2984                           	opt stack 16
  2985                           
  2986                           ;timer1_thread.c: 45: tptr->curMove = cmDist;
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;incstack = 0
  2990  0019DA  0100               	movlb	0	; () banked
  2991  0019DC  EE20 F02A          	lfsr	2,42
  2992  0019E0  0100               	movlb	0	; () banked
  2993  0019E2  51C1               	movf	moveDir@tptr& (0+255),w,b
  2994  0019E4  26D9               	addwf	fsr2l,f,c
  2995  0019E6  0100               	movlb	0	; () banked
  2996  0019E8  51C2               	movf	(moveDir@tptr+1)& (0+255),w,b
  2997  0019EA  22DA               	addwfc	fsr2h,f,c
  2998  0019EC  0100               	movlb	0	; () banked
  2999  0019EE  C0C3  FFDE         	movff	moveDir@cmDist,postinc2
  3000  0019F2  0100               	movlb	0	; () banked
  3001  0019F4  C0C4  FFDD         	movff	moveDir@cmDist+1,postdec2
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;timer1_thread.c: 46: unsigned char test[2] = {80,205};
  3005  0019F8  C0D0  F0C5         	movff	moveDir@F5160,moveDir@test
  3006  0019FC  C0D1  F0C6         	movff	moveDir@F5160+1,moveDir@test+1
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;timer1_thread.c: 47: sendUARTarr(2,test);
  3010  001A00  0100               	movlb	0	; () banked
  3011  001A02  0E00               	movlw	high moveDir@test
  3012  001A04  0100               	movlb	0	; () banked
  3013  001A06  0100               	movlb	0	; () banked
  3014  001A08  6FBD               	movwf	(sendUARTarr@data+1)& (0+255),b
  3015  001A0A  0100               	movlb	0	; () banked
  3016  001A0C  0EC5               	movlw	low moveDir@test
  3017  001A0E  0100               	movlb	0	; () banked
  3018  001A10  0100               	movlb	0	; () banked
  3019  001A12  6FBC               	movwf	sendUARTarr@data& (0+255),b
  3020  001A14  0E02               	movlw	2
  3021  001A16  EC0D  F00E         	call	_sendUARTarr
  3022                           
  3023                           ;timer1_thread.c: 48: WriteTimer1(tptr->cmDist);
  3024  001A1A  0100               	movlb	0	; () banked
  3025  001A1C  EE20 F028          	lfsr	2,40
  3026  001A20  0100               	movlb	0	; () banked
  3027  001A22  51C1               	movf	moveDir@tptr& (0+255),w,b
  3028  001A24  26D9               	addwf	fsr2l,f,c
  3029  001A26  0100               	movlb	0	; () banked
  3030  001A28  51C2               	movf	(moveDir@tptr+1)& (0+255),w,b
  3031  001A2A  22DA               	addwfc	fsr2h,f,c
  3032  001A2C  0100               	movlb	0	; () banked
  3033  001A2E  CFDE F0A2          	movff	postinc2,WriteTimer1@timer1
  3034  001A32  0100               	movlb	0	; () banked
  3035  001A34  CFDD F0A3          	movff	postdec2,WriteTimer1@timer1+1
  3036  001A38  ECCD  F00F         	call	_WriteTimer1	;wreg free
  3037  001A3C  0012               	return	
  3038  001A3E                     __end_of_moveDir:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           intcon2	equ	0xFF1
  3048                           postinc0	equ	0xFEE
  3049                           wreg	equ	0xFE8
  3050                           indf1	equ	0xFE7
  3051                           postdec1	equ	0xFE5
  3052                           fsr1h	equ	0xFE2
  3053                           fsr1l	equ	0xFE1
  3054                           indf2	equ	0xFDF
  3055                           postinc2	equ	0xFDE
  3056                           postdec2	equ	0xFDD
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8
  3060                           
  3061 ;; *************** function _sendUARTarr *****************
  3062 ;; Defined at:
  3063 ;;		line 85 in file "src/my_uart.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  length          1    wreg     unsigned char 
  3066 ;;  data            2   60[BANK0 ] PTR unsigned char 
  3067 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), main@ctrl(2), 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  length          1   64[BANK0 ] unsigned char 
  3070 ;;  retval          1   63[BANK0 ] char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      enum E4332
  3073 ;; Registers used:
  3074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3080 ;;      Params:         0       2       0       0       0
  3081 ;;      Locals:         0       2       0       0       0
  3082 ;;      Temps:          0       1       0       0       0
  3083 ;;      Totals:         0       5       0       0       0
  3084 ;;Total ram usage:        5 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:   13
  3087 ;; This function calls:
  3088 ;;		_ToMainLow_sendmsg
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;;		_timer0_lthread
  3092 ;;		_timer1_lthread
  3093 ;;		_moveDir
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text9
  3098  001C1A                     __ptext9:
  3099                           	opt stack 0
  3100  001C1A                     _sendUARTarr:
  3101                           	opt stack 16
  3102                           
  3103                           ;incstack = 0
  3104                           ;sendUARTarr@length stored from wreg
  3105  001C1A  CFE8 F0C0          	movff	wreg,sendUARTarr@length
  3106                           
  3107                           ;my_uart.c: 86: if(length > 10){
  3108  001C1E  0E0A               	movlw	10
  3109  001C20  0100               	movlb	0	; () banked
  3110  001C22  0100               	movlb	0	; () banked
  3111  001C24  65C0               	cpfsgt	sendUARTarr@length& (0+255),b
  3112  001C26  D001               	goto	l2750
  3113  001C28  0012               	return	
  3114  001C2A                     l2750:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;my_uart.c: 89: }
  3118                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  3119  001C2A  0100               	movlb	0	; () banked
  3120  001C2C  6FBE               	movwf	??_sendUARTarr& (0+255),b
  3121  001C2E  0E1F               	movlw	31
  3122  001C30  0100               	movlb	0	; () banked
  3123  001C32  0100               	movlb	0	; () banked
  3124  001C34  6FB8               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  3125  001C36  0100               	movlb	0	; () banked
  3126  001C38  51BE               	movf	??_sendUARTarr& (0+255),w,b
  3127  001C3A  0100               	movlb	0	; () banked
  3128  001C3C  0100               	movlb	0	; () banked
  3129  001C3E  C0BD  F0BA         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  3130  001C42  0100               	movlb	0	; () banked
  3131  001C44  0100               	movlb	0	; () banked
  3132  001C46  C0BC  F0B9         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  3133  001C4A  0100               	movlb	0	; () banked
  3134  001C4C  0100               	movlb	0	; () banked
  3135  001C4E  51C0               	movf	sendUARTarr@length& (0+255),w,b
  3136  001C50  ECE7  F00E         	call	_ToMainLow_sendmsg
  3137  001C54  0100               	movlb	0	; () banked
  3138  001C56  0100               	movlb	0	; () banked
  3139  001C58  6FBF               	movwf	sendUARTarr@retval& (0+255),b
  3140  001C5A  0012               	return	
  3141  001C5C                     __end_of_sendUARTarr:
  3142                           	opt stack 0
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           intcon2	equ	0xFF1
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           indf1	equ	0xFE7
  3154                           postdec1	equ	0xFE5
  3155                           fsr1h	equ	0xFE2
  3156                           fsr1l	equ	0xFE1
  3157                           indf2	equ	0xFDF
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _ToMainLow_sendmsg *****************
  3165 ;; Defined at:
  3166 ;;		line 103 in file "src/messages.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  length          1    wreg     unsigned char 
  3169 ;;  msgtype         1   56[BANK0 ] unsigned char 
  3170 ;;  data            2   57[BANK0 ] PTR void 
  3171 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  3172 ;;		 -> main@ctrl(2), main@uc(5), NULL(0), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  length          1   59[BANK0 ] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      char 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3184 ;;      Params:         0       3       0       0       0
  3185 ;;      Locals:         0       1       0       0       0
  3186 ;;      Temps:          0       0       0       0       0
  3187 ;;      Totals:         0       4       0       0       0
  3188 ;;Total ram usage:        4 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   12
  3191 ;; This function calls:
  3192 ;;		_send_msg
  3193 ;; This function is called by:
  3194 ;;		_sendUARTarr
  3195 ;;		_sendUARTbyte
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text10
  3200  001DCE                     __ptext10:
  3201                           	opt stack 0
  3202  001DCE                     _ToMainLow_sendmsg:
  3203                           	opt stack 16
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;incstack = 0
  3207                           ;ToMainLow_sendmsg@length stored from wreg
  3208  001DCE  CFE8 F0BB          	movff	wreg,ToMainLow_sendmsg@length
  3209                           
  3210                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3211  001DD2  0101               	movlb	1	; () banked
  3212  001DD4  0E01               	movlw	high _ToMainLow_MQ
  3213  001DD6  0100               	movlb	0	; () banked
  3214  001DD8  0100               	movlb	0	; () banked
  3215  001DDA  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  3216  001DDC  0101               	movlb	1	; () banked
  3217  001DDE  0EA3               	movlw	low _ToMainLow_MQ
  3218  001DE0  0100               	movlb	0	; () banked
  3219  001DE2  0100               	movlb	0	; () banked
  3220  001DE4  6FAC               	movwf	send_msg@qptr& (0+255),b
  3221  001DE6  C0BB  F0AE         	movff	ToMainLow_sendmsg@length,send_msg@length
  3222  001DEA  C0B8  F0AF         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3223  001DEE  0100               	movlb	0	; () banked
  3224  001DF0  0100               	movlb	0	; () banked
  3225  001DF2  C0BA  F0B1         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3226  001DF6  0100               	movlb	0	; () banked
  3227  001DF8  0100               	movlb	0	; () banked
  3228  001DFA  C0B9  F0B0         	movff	ToMainLow_sendmsg@data,send_msg@data
  3229  001DFE  EC43  F007         	call	_send_msg	;wreg free
  3230  001E02  0012               	return	
  3231  001E04                     __end_of_ToMainLow_sendmsg:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           intcon	equ	0xFF2
  3240                           intcon2	equ	0xFF1
  3241                           postinc0	equ	0xFEE
  3242                           wreg	equ	0xFE8
  3243                           indf1	equ	0xFE7
  3244                           postdec1	equ	0xFE5
  3245                           fsr1h	equ	0xFE2
  3246                           fsr1l	equ	0xFE1
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _send_msg *****************
  3255 ;; Defined at:
  3256 ;;		line 24 in file "src/messages.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  qptr            2   44[BANK0 ] PTR struct __msg_queue
  3259 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3260 ;;  length          1   46[BANK0 ] unsigned char 
  3261 ;;  msgtype         1   47[BANK0 ] unsigned char 
  3262 ;;  data            2   48[BANK0 ] PTR void 
  3263 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  3264 ;;		 -> i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  3265 ;;		 -> main@uc(5), NULL(0), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  qmsg            2   54[BANK0 ] PTR struct __msg
  3268 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3269 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3270 ;;  tlength         2   51[BANK0 ] unsigned int 
  3271 ;;  slot            1   53[BANK0 ] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      char 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3281 ;;      Params:         0       6       0       0       0
  3282 ;;      Locals:         0       5       0       0       0
  3283 ;;      Temps:          0       1       0       0       0
  3284 ;;      Totals:         0      12       0       0       0
  3285 ;;Total ram usage:       12 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:   11
  3288 ;; This function calls:
  3289 ;;		_memcpy
  3290 ;; This function is called by:
  3291 ;;		_ToMainLow_sendmsg
  3292 ;;		_FromMainLow_sendmsg
  3293 ;;		_FromMainHigh_sendmsg
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text11
  3298  000E86                     __ptext11:
  3299                           	opt stack 0
  3300  000E86                     _send_msg:
  3301                           	opt stack 17
  3302                           
  3303                           ;messages.c: 25: unsigned char slot;
  3304                           ;messages.c: 27: msg *qmsg;
  3305                           ;messages.c: 28: size_t tlength = length;
  3306                           
  3307                           ;incstack = 0
  3308  000E86  0100               	movlb	0	; () banked
  3309  000E88  0100               	movlb	0	; () banked
  3310  000E8A  C0AE  F0B3         	movff	send_msg@length,send_msg@tlength
  3311  000E8E  0100               	movlb	0	; () banked
  3312  000E90  0100               	movlb	0	; () banked
  3313  000E92  6BB4               	clrf	(send_msg@tlength+1)& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3317  000E94  0100               	movlb	0	; () banked
  3318  000E96  EE20 F034          	lfsr	2,52
  3319  000E9A  0100               	movlb	0	; () banked
  3320  000E9C  51AC               	movf	send_msg@qptr& (0+255),w,b
  3321  000E9E  26D9               	addwf	fsr2l,f,c
  3322  000EA0  0100               	movlb	0	; () banked
  3323  000EA2  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3324  000EA4  22DA               	addwfc	fsr2h,f,c
  3325  000EA6  50DF               	movf	indf2,w,c
  3326  000EA8  0100               	movlb	0	; () banked
  3327  000EAA  0100               	movlb	0	; () banked
  3328  000EAC  6FB5               	movwf	send_msg@slot& (0+255),b
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3332  000EAE  0100               	movlb	0	; () banked
  3333  000EB0  0100               	movlb	0	; () banked
  3334  000EB2  51B5               	movf	send_msg@slot& (0+255),w,b
  3335  000EB4  0D0D               	mullw	13
  3336  000EB6  50F3               	movf	prodl,w,c
  3337  000EB8  0100               	movlb	0	; () banked
  3338  000EBA  0100               	movlb	0	; () banked
  3339  000EBC  25AC               	addwf	send_msg@qptr& (0+255),w,b
  3340  000EBE  0100               	movlb	0	; () banked
  3341  000EC0  0100               	movlb	0	; () banked
  3342  000EC2  6FB6               	movwf	send_msg@qmsg& (0+255),b
  3343  000EC4  50F4               	movf	prodh,w,c
  3344  000EC6  0100               	movlb	0	; () banked
  3345  000EC8  0100               	movlb	0	; () banked
  3346  000ECA  21AD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3347  000ECC  0100               	movlb	0	; () banked
  3348  000ECE  6FB7               	movwf	(send_msg@qmsg+1)& (0+255),b
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;messages.c: 41: if (qmsg->full != 0) {
  3352  000ED0  C0B6  FFD9         	movff	send_msg@qmsg,fsr2l
  3353  000ED4  C0B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3354  000ED8  50DF               	movf	indf2,w,c
  3355  000EDA  B4D8               	btfsc	status,2,c
  3356  000EDC  D002               	goto	l2834
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;messages.c: 42: return (-1);
  3360  000EDE  0EFF               	movlw	255
  3361  000EE0  0012               	return	
  3362  000EE2                     l2834:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;messages.c: 43: }
  3366                           ;messages.c: 46: qmsg->length = length;
  3367  000EE2  0100               	movlb	0	; () banked
  3368  000EE4  EE20 F001          	lfsr	2,1
  3369  000EE8  0100               	movlb	0	; () banked
  3370  000EEA  51B6               	movf	send_msg@qmsg& (0+255),w,b
  3371  000EEC  26D9               	addwf	fsr2l,f,c
  3372  000EEE  0100               	movlb	0	; () banked
  3373  000EF0  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3374  000EF2  22DA               	addwfc	fsr2h,f,c
  3375  000EF4  0100               	movlb	0	; () banked
  3376  000EF6  C0AE  FFDF         	movff	send_msg@length,indf2
  3377                           
  3378                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3379  000EFA  0100               	movlb	0	; () banked
  3380  000EFC  EE20 F002          	lfsr	2,2
  3381  000F00  0100               	movlb	0	; () banked
  3382  000F02  51B6               	movf	send_msg@qmsg& (0+255),w,b
  3383  000F04  26D9               	addwf	fsr2l,f,c
  3384  000F06  0100               	movlb	0	; () banked
  3385  000F08  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3386  000F0A  22DA               	addwfc	fsr2h,f,c
  3387  000F0C  0100               	movlb	0	; () banked
  3388  000F0E  C0AF  FFDF         	movff	send_msg@msgtype,indf2
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3392  000F12  0E03               	movlw	3
  3393  000F14  0100               	movlb	0	; () banked
  3394  000F16  0100               	movlb	0	; () banked
  3395  000F18  25B6               	addwf	send_msg@qmsg& (0+255),w,b
  3396  000F1A  0100               	movlb	0	; () banked
  3397  000F1C  0100               	movlb	0	; () banked
  3398  000F1E  6FA2               	movwf	memcpy@d1& (0+255),b
  3399  000F20  0E00               	movlw	0
  3400  000F22  0100               	movlb	0	; () banked
  3401  000F24  0100               	movlb	0	; () banked
  3402  000F26  21B7               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3403  000F28  0100               	movlb	0	; () banked
  3404  000F2A  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  3405  000F2C  0100               	movlb	0	; () banked
  3406  000F2E  0100               	movlb	0	; () banked
  3407  000F30  C0B1  F0A5         	movff	send_msg@data+1,memcpy@s1+1
  3408  000F34  0100               	movlb	0	; () banked
  3409  000F36  0100               	movlb	0	; () banked
  3410  000F38  C0B0  F0A4         	movff	send_msg@data,memcpy@s1
  3411  000F3C  C0B3  F0A6         	movff	send_msg@tlength,memcpy@n
  3412  000F40  C0B4  F0A7         	movff	send_msg@tlength+1,memcpy@n+1
  3413  000F44  EC1F  F00D         	call	_memcpy	;wreg free
  3414                           
  3415                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3416  000F48  0100               	movlb	0	; () banked
  3417  000F4A  EE20 F034          	lfsr	2,52
  3418  000F4E  0100               	movlb	0	; () banked
  3419  000F50  51AC               	movf	send_msg@qptr& (0+255),w,b
  3420  000F52  26D9               	addwf	fsr2l,f,c
  3421  000F54  0100               	movlb	0	; () banked
  3422  000F56  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3423  000F58  22DA               	addwfc	fsr2h,f,c
  3424  000F5A  0100               	movlb	0	; () banked
  3425  000F5C  EE10 F034          	lfsr	1,52
  3426  000F60  0100               	movlb	0	; () banked
  3427  000F62  51AC               	movf	send_msg@qptr& (0+255),w,b
  3428  000F64  26E1               	addwf	fsr1l,f,c
  3429  000F66  0100               	movlb	0	; () banked
  3430  000F68  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3431  000F6A  22E2               	addwfc	fsr1h,f,c
  3432  000F6C  50E7               	movf	indf1,w,c
  3433  000F6E  0100               	movlb	0	; () banked
  3434  000F70  6FB2               	movwf	??_send_msg& (0+255),b
  3435  000F72  0100               	movlb	0	; () banked
  3436  000F74  29B2               	incf	??_send_msg& (0+255),w,b
  3437  000F76  0B03               	andlw	3
  3438  000F78  6EDF               	movwf	indf2,c
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;messages.c: 59: qmsg->full = 1;
  3442  000F7A  C0B6  FFD9         	movff	send_msg@qmsg,fsr2l
  3443  000F7E  C0B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3444  000F82  0E01               	movlw	1
  3445  000F84  6EDF               	movwf	indf2,c
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;messages.c: 60: return (1);
  3449  000F86  0E01               	movlw	1
  3450  000F88  0012               	return	
  3451  000F8A                     __end_of_send_msg:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           prodh	equ	0xFF4
  3458                           prodl	equ	0xFF3
  3459                           intcon	equ	0xFF2
  3460                           intcon2	equ	0xFF1
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postdec1	equ	0xFE5
  3465                           fsr1h	equ	0xFE2
  3466                           fsr1l	equ	0xFE1
  3467                           indf2	equ	0xFDF
  3468                           postinc2	equ	0xFDE
  3469                           postdec2	equ	0xFDD
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _WriteTimer1 *****************
  3475 ;; Defined at:
  3476 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  timer1          2   34[BANK0 ] unsigned int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  timer           2   36[BANK0 ] struct Timers
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		None
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3490 ;;      Params:         0       2       0       0       0
  3491 ;;      Locals:         0       2       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         0       4       0       0       0
  3494 ;;Total ram usage:        4 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:   10
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_timer1_lthread
  3501 ;;		_moveDir
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text12
  3506  001F9A                     __ptext12:
  3507                           	opt stack 0
  3508  001F9A                     _WriteTimer1:
  3509                           	opt stack 19
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;incstack = 0
  3513  001F9A  C0A2  F0A4         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3514  001F9E  C0A3  F0A5         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3515  001FA2  C0A5  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3516  001FA6  C0A4  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3517  001FAA  0012               	return	
  3518  001FAC                     __end_of_WriteTimer1:
  3519                           	opt stack 0
  3520                           tblptru	equ	0xFF8
  3521                           tblptrh	equ	0xFF7
  3522                           tblptrl	equ	0xFF6
  3523                           tablat	equ	0xFF5
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           intcon	equ	0xFF2
  3527                           intcon2	equ	0xFF1
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           indf1	equ	0xFE7
  3531                           postdec1	equ	0xFE5
  3532                           fsr1h	equ	0xFE2
  3533                           fsr1l	equ	0xFE1
  3534                           indf2	equ	0xFDF
  3535                           postinc2	equ	0xFDE
  3536                           postdec2	equ	0xFDD
  3537                           fsr2h	equ	0xFDA
  3538                           fsr2l	equ	0xFD9
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _init_uart_recv *****************
  3542 ;; Defined at:
  3543 ;;		line 80 in file "src/my_uart.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  uc              2   34[BANK0 ] PTR struct __uart_comm
  3546 ;;		 -> main@uc(5), 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3558 ;;      Params:         0       2       0       0       0
  3559 ;;      Locals:         0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0
  3561 ;;      Totals:         0       2       0       0       0
  3562 ;;Total ram usage:        2 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:   10
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text13
  3573  001F2C                     __ptext13:
  3574                           	opt stack 0
  3575  001F2C                     _init_uart_recv:
  3576                           	opt stack 20
  3577                           
  3578                           ;my_uart.c: 81: uc_ptr = uc;
  3579                           
  3580                           ;incstack = 0
  3581  001F2C  0100               	movlb	0	; () banked
  3582  001F2E  C0A3  F048         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3583  001F32  0100               	movlb	0	; () banked
  3584  001F34  C0A2  F047         	movff	init_uart_recv@uc,_uc_ptr
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3588  001F38  EE20 F004          	lfsr	2,4
  3589  001F3C  5047               	movf	_uc_ptr,w,c
  3590  001F3E  26D9               	addwf	fsr2l,f,c
  3591  001F40  5048               	movf	_uc_ptr+1,w,c
  3592  001F42  22DA               	addwfc	fsr2h,f,c
  3593  001F44  0E00               	movlw	0
  3594  001F46  6EDF               	movwf	indf2,c
  3595                           
  3596                           ; BSR set to: 0
  3597  001F48  0012               	return	
  3598  001F4A                     __end_of_init_uart_recv:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           intcon2	equ	0xFF1
  3608                           postinc0	equ	0xFEE
  3609                           wreg	equ	0xFE8
  3610                           indf1	equ	0xFE7
  3611                           postdec1	equ	0xFE5
  3612                           fsr1h	equ	0xFE2
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           postdec2	equ	0xFDD
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _init_uart_lthread *****************
  3622 ;; Defined at:
  3623 ;;		line 7 in file "src/uart_thread.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  uptr            2   34[BANK0 ] PTR struct __uart_thread
  3626 ;;		 -> main@uthread_data(10), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		None
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3638 ;;      Params:         0       2       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0
  3641 ;;      Totals:         0       2       0       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:   10
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text14
  3653  001FDC                     __ptext14:
  3654                           	opt stack 0
  3655  001FDC                     _init_uart_lthread:
  3656                           	opt stack 20
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;incstack = 0
  3660  001FDC  0012               	return	
  3661  001FDE                     __end_of_init_uart_lthread:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           prodh	equ	0xFF4
  3668                           prodl	equ	0xFF3
  3669                           intcon	equ	0xFF2
  3670                           intcon2	equ	0xFF1
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           indf1	equ	0xFE7
  3674                           postdec1	equ	0xFE5
  3675                           fsr1h	equ	0xFE2
  3676                           fsr1l	equ	0xFE1
  3677                           indf2	equ	0xFDF
  3678                           postinc2	equ	0xFDE
  3679                           postdec2	equ	0xFDD
  3680                           fsr2h	equ	0xFDA
  3681                           fsr2l	equ	0xFD9
  3682                           status	equ	0xFD8
  3683                           
  3684 ;; *************** function _init_timer1_lthread *****************
  3685 ;; Defined at:
  3686 ;;		line 7 in file "src/timer1_thread.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  tptr            2   34[BANK0 ] PTR struct __timer1_thre
  3689 ;;		 -> main@t1thread_data(44), 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;		None               void
  3694 ;; Registers used:
  3695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3701 ;;      Params:         0       2       0       0       0
  3702 ;;      Locals:         0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         0       2       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:   10
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text15
  3716  0012F0                     __ptext15:
  3717                           	opt stack 0
  3718  0012F0                     _init_timer1_lthread:
  3719                           	opt stack 20
  3720                           
  3721                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  3722                           
  3723                           ;incstack = 0
  3724  0012F0  C0A2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3725  0012F4  C0A3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3726  0012F8  0E00               	movlw	0
  3727  0012FA  6EDE               	movwf	postinc2,c
  3728  0012FC  0E00               	movlw	0
  3729  0012FE  6EDD               	movwf	postdec2,c
  3730                           
  3731                           ;timer1_thread.c: 9: tptr->ctrl[0] = 182;
  3732  001300  0100               	movlb	0	; () banked
  3733  001302  EE20 F002          	lfsr	2,2
  3734  001306  0100               	movlb	0	; () banked
  3735  001308  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3736  00130A  26D9               	addwf	fsr2l,f,c
  3737  00130C  0100               	movlb	0	; () banked
  3738  00130E  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3739  001310  22DA               	addwfc	fsr2h,f,c
  3740  001312  0EB6               	movlw	182
  3741  001314  6EDF               	movwf	indf2,c
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;timer1_thread.c: 10: tptr->ctrl[1] = 54;
  3745  001316  0100               	movlb	0	; () banked
  3746  001318  EE20 F003          	lfsr	2,3
  3747  00131C  0100               	movlb	0	; () banked
  3748  00131E  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3749  001320  26D9               	addwf	fsr2l,f,c
  3750  001322  0100               	movlb	0	; () banked
  3751  001324  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3752  001326  22DA               	addwfc	fsr2h,f,c
  3753  001328  0E36               	movlw	54
  3754  00132A  6EDF               	movwf	indf2,c
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;timer1_thread.c: 11: tptr->prevPos[0] = 0;
  3758  00132C  0100               	movlb	0	; () banked
  3759  00132E  EE20 F024          	lfsr	2,36
  3760  001332  0100               	movlb	0	; () banked
  3761  001334  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3762  001336  26D9               	addwf	fsr2l,f,c
  3763  001338  0100               	movlb	0	; () banked
  3764  00133A  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3765  00133C  22DA               	addwfc	fsr2h,f,c
  3766  00133E  0E00               	movlw	0
  3767  001340  6EDF               	movwf	indf2,c
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;timer1_thread.c: 12: tptr->prevPos[1] = 0;
  3771  001342  0100               	movlb	0	; () banked
  3772  001344  EE20 F025          	lfsr	2,37
  3773  001348  0100               	movlb	0	; () banked
  3774  00134A  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3775  00134C  26D9               	addwf	fsr2l,f,c
  3776  00134E  0100               	movlb	0	; () banked
  3777  001350  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3778  001352  22DA               	addwfc	fsr2h,f,c
  3779  001354  0E00               	movlw	0
  3780  001356  6EDF               	movwf	indf2,c
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;timer1_thread.c: 13: tptr->current_position = 0;
  3784  001358  0100               	movlb	0	; () banked
  3785  00135A  EE20 F026          	lfsr	2,38
  3786  00135E  0100               	movlb	0	; () banked
  3787  001360  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3788  001362  26D9               	addwf	fsr2l,f,c
  3789  001364  0100               	movlb	0	; () banked
  3790  001366  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3791  001368  22DA               	addwfc	fsr2h,f,c
  3792  00136A  0E00               	movlw	0
  3793  00136C  6EDF               	movwf	indf2,c
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;timer1_thread.c: 14: tptr->direction = 0;
  3797  00136E  0100               	movlb	0	; () banked
  3798  001370  EE20 F027          	lfsr	2,39
  3799  001374  0100               	movlb	0	; () banked
  3800  001376  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3801  001378  26D9               	addwf	fsr2l,f,c
  3802  00137A  0100               	movlb	0	; () banked
  3803  00137C  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3804  00137E  22DA               	addwfc	fsr2h,f,c
  3805  001380  0E00               	movlw	0
  3806  001382  6EDF               	movwf	indf2,c
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;timer1_thread.c: 15: tptr->cmDist = 65535-78;
  3810  001384  0100               	movlb	0	; () banked
  3811  001386  EE20 F028          	lfsr	2,40
  3812  00138A  0100               	movlb	0	; () banked
  3813  00138C  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3814  00138E  26D9               	addwf	fsr2l,f,c
  3815  001390  0100               	movlb	0	; () banked
  3816  001392  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3817  001394  22DA               	addwfc	fsr2h,f,c
  3818  001396  0EB1               	movlw	177
  3819  001398  6EDE               	movwf	postinc2,c
  3820  00139A  0EFF               	movlw	255
  3821  00139C  6EDD               	movwf	postdec2,c
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;timer1_thread.c: 16: tptr->curMove = 0;
  3825  00139E  0100               	movlb	0	; () banked
  3826  0013A0  EE20 F02A          	lfsr	2,42
  3827  0013A4  0100               	movlb	0	; () banked
  3828  0013A6  51A2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3829  0013A8  26D9               	addwf	fsr2l,f,c
  3830  0013AA  0100               	movlb	0	; () banked
  3831  0013AC  51A3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3832  0013AE  22DA               	addwfc	fsr2h,f,c
  3833  0013B0  0E00               	movlw	0
  3834  0013B2  6EDE               	movwf	postinc2,c
  3835  0013B4  0E00               	movlw	0
  3836  0013B6  6EDD               	movwf	postdec2,c
  3837                           
  3838                           ; BSR set to: 0
  3839  0013B8  0012               	return	
  3840  0013BA                     __end_of_init_timer1_lthread:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodh	equ	0xFF4
  3847                           prodl	equ	0xFF3
  3848                           intcon	equ	0xFF2
  3849                           intcon2	equ	0xFF1
  3850                           postinc0	equ	0xFEE
  3851                           wreg	equ	0xFE8
  3852                           indf1	equ	0xFE7
  3853                           postdec1	equ	0xFE5
  3854                           fsr1h	equ	0xFE2
  3855                           fsr1l	equ	0xFE1
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function _init_timer0_lthread *****************
  3864 ;; Defined at:
  3865 ;;		line 10 in file "src/timer0_thread.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  tptr            2   34[BANK0 ] PTR struct __timer0_thre
  3868 ;;		 -> main@t0thread_data(4), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;		None               void
  3873 ;; Registers used:
  3874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3880 ;;      Params:         0       2       0       0       0
  3881 ;;      Locals:         0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0
  3883 ;;      Totals:         0       2       0       0       0
  3884 ;;Total ram usage:        2 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:   10
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text16
  3895  001F68                     __ptext16:
  3896                           	opt stack 0
  3897  001F68                     _init_timer0_lthread:
  3898                           	opt stack 20
  3899                           
  3900                           ;timer0_thread.c: 11: tptr->msgcount = 0;
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;incstack = 0
  3904  001F68  0100               	movlb	0	; () banked
  3905  001F6A  EE20 F002          	lfsr	2,2
  3906  001F6E  0100               	movlb	0	; () banked
  3907  001F70  51A2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3908  001F72  26D9               	addwf	fsr2l,f,c
  3909  001F74  0100               	movlb	0	; () banked
  3910  001F76  51A3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3911  001F78  22DA               	addwfc	fsr2h,f,c
  3912  001F7A  0E00               	movlw	0
  3913  001F7C  6EDE               	movwf	postinc2,c
  3914  001F7E  0E00               	movlw	0
  3915  001F80  6EDD               	movwf	postdec2,c
  3916                           
  3917                           ; BSR set to: 0
  3918  001F82  0012               	return	
  3919  001F84                     __end_of_init_timer0_lthread:
  3920                           	opt stack 0
  3921                           tblptru	equ	0xFF8
  3922                           tblptrh	equ	0xFF7
  3923                           tblptrl	equ	0xFF6
  3924                           tablat	equ	0xFF5
  3925                           prodh	equ	0xFF4
  3926                           prodl	equ	0xFF3
  3927                           intcon	equ	0xFF2
  3928                           intcon2	equ	0xFF1
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           indf1	equ	0xFE7
  3932                           postdec1	equ	0xFE5
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           postdec2	equ	0xFDD
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _init_queues *****************
  3943 ;; Defined at:
  3944 ;;		line 194 in file "src/messages.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;		None               void
  3951 ;; Registers used:
  3952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       1       0       0       0
  3961 ;;      Totals:         0       1       0       0       0
  3962 ;;Total ram usage:        1 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:   11
  3965 ;; This function calls:
  3966 ;;		_init_queue
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text17
  3973  001902                     __ptext17:
  3974                           	opt stack 0
  3975  001902                     _init_queues:
  3976                           	opt stack 19
  3977                           
  3978                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;incstack = 0
  3982  001902  0100               	movlb	0	; () banked
  3983  001904  6FA6               	movwf	??_init_queues& (0+255),b
  3984  001906  0E00               	movlw	0
  3985  001908  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3986  00190A  0100               	movlb	0	; () banked
  3987  00190C  51A6               	movf	??_init_queues& (0+255),w,b
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3991  00190E  0101               	movlb	1	; () banked
  3992  001910  0E01               	movlw	high _ToMainLow_MQ
  3993  001912  0100               	movlb	0	; () banked
  3994  001914  0100               	movlb	0	; () banked
  3995  001916  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  3996  001918  0101               	movlb	1	; () banked
  3997  00191A  0EA3               	movlw	low _ToMainLow_MQ
  3998  00191C  0100               	movlb	0	; () banked
  3999  00191E  0100               	movlb	0	; () banked
  4000  001920  6FA2               	movwf	init_queue@qptr& (0+255),b
  4001  001922  EC44  F00C         	call	_init_queue	;wreg free
  4002                           
  4003                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4004  001926  0101               	movlb	1	; () banked
  4005  001928  0E01               	movlw	high _ToMainHigh_MQ
  4006  00192A  0100               	movlb	0	; () banked
  4007  00192C  0100               	movlb	0	; () banked
  4008  00192E  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  4009  001930  0101               	movlb	1	; () banked
  4010  001932  0E6D               	movlw	low _ToMainHigh_MQ
  4011  001934  0100               	movlb	0	; () banked
  4012  001936  0100               	movlb	0	; () banked
  4013  001938  6FA2               	movwf	init_queue@qptr& (0+255),b
  4014  00193A  EC44  F00C         	call	_init_queue	;wreg free
  4015                           
  4016                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4017  00193E  0102               	movlb	2	; () banked
  4018  001940  0E02               	movlw	high _FromMainLow_MQ
  4019  001942  0100               	movlb	0	; () banked
  4020  001944  0100               	movlb	0	; () banked
  4021  001946  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  4022  001948  0102               	movlb	2	; () banked
  4023  00194A  0E36               	movlw	low _FromMainLow_MQ
  4024  00194C  0100               	movlb	0	; () banked
  4025  00194E  0100               	movlb	0	; () banked
  4026  001950  6FA2               	movwf	init_queue@qptr& (0+255),b
  4027  001952  EC44  F00C         	call	_init_queue	;wreg free
  4028                           
  4029                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4030  001956  0102               	movlb	2	; () banked
  4031  001958  0E02               	movlw	high _FromMainHigh_MQ
  4032  00195A  0100               	movlb	0	; () banked
  4033  00195C  0100               	movlb	0	; () banked
  4034  00195E  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  4035  001960  0102               	movlb	2	; () banked
  4036  001962  0E00               	movlw	low _FromMainHigh_MQ
  4037  001964  0100               	movlb	0	; () banked
  4038  001966  0100               	movlb	0	; () banked
  4039  001968  6FA2               	movwf	init_queue@qptr& (0+255),b
  4040  00196A  EC44  F00C         	call	_init_queue	;wreg free
  4041  00196E  0012               	return	
  4042  001970                     __end_of_init_queues:
  4043                           	opt stack 0
  4044                           tblptru	equ	0xFF8
  4045                           tblptrh	equ	0xFF7
  4046                           tblptrl	equ	0xFF6
  4047                           tablat	equ	0xFF5
  4048                           prodh	equ	0xFF4
  4049                           prodl	equ	0xFF3
  4050                           intcon	equ	0xFF2
  4051                           intcon2	equ	0xFF1
  4052                           postinc0	equ	0xFEE
  4053                           wreg	equ	0xFE8
  4054                           indf1	equ	0xFE7
  4055                           postdec1	equ	0xFE5
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           postinc2	equ	0xFDE
  4060                           postdec2	equ	0xFDD
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _init_queue *****************
  4066 ;; Defined at:
  4067 ;;		line 14 in file "src/messages.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  qptr            2   34[BANK0 ] PTR struct __msg_queue
  4070 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  i               1   37[BANK0 ] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;		None               void
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4082 ;;      Params:         0       2       0       0       0
  4083 ;;      Locals:         0       1       0       0       0
  4084 ;;      Temps:          0       1       0       0       0
  4085 ;;      Totals:         0       4       0       0       0
  4086 ;;Total ram usage:        4 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:   10
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_init_queues
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text18
  4097  001888                     __ptext18:
  4098                           	opt stack 0
  4099  001888                     _init_queue:
  4100                           	opt stack 19
  4101                           
  4102                           ;messages.c: 15: unsigned char i;
  4103                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4104                           
  4105                           ;incstack = 0
  4106  001888  0100               	movlb	0	; () banked
  4107  00188A  EE20 F034          	lfsr	2,52
  4108  00188E  0100               	movlb	0	; () banked
  4109  001890  51A2               	movf	init_queue@qptr& (0+255),w,b
  4110  001892  26D9               	addwf	fsr2l,f,c
  4111  001894  0100               	movlb	0	; () banked
  4112  001896  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  4113  001898  22DA               	addwfc	fsr2h,f,c
  4114  00189A  0E00               	movlw	0
  4115  00189C  6EDF               	movwf	indf2,c
  4116                           
  4117                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4118  00189E  0100               	movlb	0	; () banked
  4119  0018A0  EE20 F035          	lfsr	2,53
  4120  0018A4  0100               	movlb	0	; () banked
  4121  0018A6  51A2               	movf	init_queue@qptr& (0+255),w,b
  4122  0018A8  26D9               	addwf	fsr2l,f,c
  4123  0018AA  0100               	movlb	0	; () banked
  4124  0018AC  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  4125  0018AE  22DA               	addwfc	fsr2h,f,c
  4126  0018B0  0E00               	movlw	0
  4127  0018B2  6EDF               	movwf	indf2,c
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4131  0018B4  0100               	movlb	0	; () banked
  4132  0018B6  6FA4               	movwf	??_init_queue& (0+255),b
  4133  0018B8  0E00               	movlw	0
  4134  0018BA  0100               	movlb	0	; () banked
  4135  0018BC  0100               	movlb	0	; () banked
  4136  0018BE  6FA5               	movwf	init_queue@i& (0+255),b
  4137  0018C0  0100               	movlb	0	; () banked
  4138  0018C2  51A4               	movf	??_init_queue& (0+255),w,b
  4139                           
  4140                           ; BSR set to: 0
  4141  0018C4  0E03               	movlw	3
  4142  0018C6  0100               	movlb	0	; () banked
  4143  0018C8  0100               	movlb	0	; () banked
  4144  0018CA  65A5               	cpfsgt	init_queue@i& (0+255),b
  4145  0018CC  D001               	goto	l2816
  4146  0018CE  0012               	return	
  4147  0018D0                     l2816:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;messages.c: 20: qptr->queue[i].full = 0;
  4151  0018D0  0100               	movlb	0	; () banked
  4152  0018D2  0100               	movlb	0	; () banked
  4153  0018D4  51A5               	movf	init_queue@i& (0+255),w,b
  4154  0018D6  0D0D               	mullw	13
  4155  0018D8  50F3               	movf	prodl,w,c
  4156  0018DA  0100               	movlb	0	; () banked
  4157  0018DC  0100               	movlb	0	; () banked
  4158  0018DE  25A2               	addwf	init_queue@qptr& (0+255),w,b
  4159  0018E0  6ED9               	movwf	fsr2l,c
  4160  0018E2  50F4               	movf	prodh,w,c
  4161  0018E4  0100               	movlb	0	; () banked
  4162  0018E6  0100               	movlb	0	; () banked
  4163  0018E8  21A3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4164  0018EA  6EDA               	movwf	fsr2h,c
  4165  0018EC  0E00               	movlw	0
  4166  0018EE  6EDF               	movwf	indf2,c
  4167                           
  4168                           ; BSR set to: 0
  4169  0018F0  0100               	movlb	0	; () banked
  4170  0018F2  0100               	movlb	0	; () banked
  4171  0018F4  2BA5               	incf	init_queue@i& (0+255),f,b
  4172                           
  4173                           ; BSR set to: 0
  4174  0018F6  0E03               	movlw	3
  4175  0018F8  0100               	movlb	0	; () banked
  4176  0018FA  0100               	movlb	0	; () banked
  4177  0018FC  65A5               	cpfsgt	init_queue@i& (0+255),b
  4178  0018FE  D7E8               	goto	l2816
  4179  001900  0012               	return	
  4180  001902                     __end_of_init_queue:
  4181                           	opt stack 0
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           prodh	equ	0xFF4
  4187                           prodl	equ	0xFF3
  4188                           intcon	equ	0xFF2
  4189                           intcon2	equ	0xFF1
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           indf1	equ	0xFE7
  4193                           postdec1	equ	0xFE5
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _init_i2c *****************
  4204 ;; Defined at:
  4205 ;;		line 268 in file "src/my_i2c.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  ic              2   34[BANK0 ] PTR struct __i2c_comm
  4208 ;;		 -> main@ic(28), 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4220 ;;      Params:         0       2       0       0       0
  4221 ;;      Locals:         0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0
  4223 ;;      Totals:         0       2       0       0       0
  4224 ;;Total ram usage:        2 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:   10
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text19
  4235  001970                     __ptext19:
  4236                           	opt stack 0
  4237  001970                     _init_i2c:
  4238                           	opt stack 20
  4239                           
  4240                           ;my_i2c.c: 269: ic_ptr = ic;
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;incstack = 0
  4244  001970  0100               	movlb	0	; () banked
  4245  001972  0100               	movlb	0	; () banked
  4246  001974  C0A3  F0D5         	movff	init_i2c@ic+1,_ic_ptr+1
  4247  001978  0100               	movlb	0	; () banked
  4248  00197A  0100               	movlb	0	; () banked
  4249  00197C  C0A2  F0D4         	movff	init_i2c@ic,_ic_ptr
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  4253  001980  0100               	movlb	0	; () banked
  4254  001982  EE20 F00A          	lfsr	2,10
  4255  001986  0100               	movlb	0	; () banked
  4256  001988  51D4               	movf	_ic_ptr& (0+255),w,b
  4257  00198A  26D9               	addwf	fsr2l,f,c
  4258  00198C  0100               	movlb	0	; () banked
  4259  00198E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  4260  001990  22DA               	addwfc	fsr2h,f,c
  4261  001992  0E00               	movlw	0
  4262  001994  6EDF               	movwf	indf2,c
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  4266  001996  0100               	movlb	0	; () banked
  4267  001998  EE20 F00B          	lfsr	2,11
  4268  00199C  0100               	movlb	0	; () banked
  4269  00199E  51D4               	movf	_ic_ptr& (0+255),w,b
  4270  0019A0  26D9               	addwf	fsr2l,f,c
  4271  0019A2  0100               	movlb	0	; () banked
  4272  0019A4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  4273  0019A6  22DA               	addwfc	fsr2h,f,c
  4274  0019A8  0E00               	movlw	0
  4275  0019AA  6EDF               	movwf	indf2,c
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  4279  0019AC  0100               	movlb	0	; () banked
  4280  0019AE  EE20 F00C          	lfsr	2,12
  4281  0019B2  0100               	movlb	0	; () banked
  4282  0019B4  51D4               	movf	_ic_ptr& (0+255),w,b
  4283  0019B6  26D9               	addwf	fsr2l,f,c
  4284  0019B8  0100               	movlb	0	; () banked
  4285  0019BA  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  4286  0019BC  22DA               	addwfc	fsr2h,f,c
  4287  0019BE  0E05               	movlw	5
  4288  0019C0  6EDF               	movwf	indf2,c
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  4292  0019C2  0100               	movlb	0	; () banked
  4293  0019C4  EE20 F00E          	lfsr	2,14
  4294  0019C8  0100               	movlb	0	; () banked
  4295  0019CA  51D4               	movf	_ic_ptr& (0+255),w,b
  4296  0019CC  26D9               	addwf	fsr2l,f,c
  4297  0019CE  0100               	movlb	0	; () banked
  4298  0019D0  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  4299  0019D2  22DA               	addwfc	fsr2h,f,c
  4300  0019D4  0E00               	movlw	0
  4301  0019D6  6EDF               	movwf	indf2,c
  4302                           
  4303                           ; BSR set to: 0
  4304  0019D8  0012               	return	
  4305  0019DA                     __end_of_init_i2c:
  4306                           	opt stack 0
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           intcon2	equ	0xFF1
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           indf1	equ	0xFE7
  4318                           postdec1	equ	0xFE5
  4319                           fsr1h	equ	0xFE2
  4320                           fsr1l	equ	0xFE1
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function _i2c_configure_slave *****************
  4329 ;; Defined at:
  4330 ;;		line 279 in file "src/my_i2c.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  addr            1    wreg     unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  addr            1   34[BANK0 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;		None               void
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4344 ;;      Params:         0       0       0       0       0
  4345 ;;      Locals:         0       1       0       0       0
  4346 ;;      Temps:          0       0       0       0       0
  4347 ;;      Totals:         0       1       0       0       0
  4348 ;;Total ram usage:        1 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:   10
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text20
  4359  001E92                     __ptext20:
  4360                           	opt stack 0
  4361  001E92                     _i2c_configure_slave:
  4362                           	opt stack 20
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;incstack = 0
  4366                           ;i2c_configure_slave@addr stored from wreg
  4367  001E92  CFE8 F0A2          	movff	wreg,i2c_configure_slave@addr
  4368                           
  4369                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4370  001E96  8694               	bsf	3988,3,c	;volatile
  4371                           
  4372                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4373  001E98  8894               	bsf	3988,4,c	;volatile
  4374                           
  4375                           ;my_i2c.c: 297: SSPADD = addr;
  4376  001E9A  C0A2  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4377                           
  4378                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4379  001E9E  0E00               	movlw	0
  4380  001EA0  6EC7               	movwf	4039,c	;volatile
  4381                           
  4382                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4383  001EA2  0E00               	movlw	0
  4384  001EA4  6EC6               	movwf	4038,c	;volatile
  4385                           
  4386                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4387  001EA6  0E00               	movlw	0
  4388  001EA8  6EC5               	movwf	4037,c	;volatile
  4389                           
  4390                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4391  001EAA  0E0E               	movlw	14
  4392  001EAC  12C6               	iorwf	4038,f,c	;volatile
  4393                           
  4394                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4395  001EAE  8EC7               	bsf	4039,7,c	;volatile
  4396                           
  4397                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4398  001EB0  8694               	bsf	3988,3,c	;volatile
  4399                           
  4400                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4401  001EB2  8894               	bsf	3988,4,c	;volatile
  4402                           
  4403                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4404  001EB4  80C5               	bsf	4037,0,c	;volatile
  4405                           
  4406                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4407  001EB6  8AC6               	bsf	4038,5,c	;volatile
  4408  001EB8  0012               	return	
  4409  001EBA                     __end_of_i2c_configure_slave:
  4410                           	opt stack 0
  4411                           tblptru	equ	0xFF8
  4412                           tblptrh	equ	0xFF7
  4413                           tblptrl	equ	0xFF6
  4414                           tablat	equ	0xFF5
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           intcon2	equ	0xFF1
  4419                           postinc0	equ	0xFEE
  4420                           wreg	equ	0xFE8
  4421                           indf1	equ	0xFE7
  4422                           postdec1	equ	0xFE5
  4423                           fsr1h	equ	0xFE2
  4424                           fsr1l	equ	0xFE1
  4425                           indf2	equ	0xFDF
  4426                           postinc2	equ	0xFDE
  4427                           postdec2	equ	0xFDD
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _enable_interrupts *****************
  4433 ;; Defined at:
  4434 ;;		line 14 in file "src/interrupts.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		None
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4448 ;;      Params:         0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0
  4451 ;;      Totals:         0       0       0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:   10
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text21
  4463  001FCA                     __ptext21:
  4464                           	opt stack 0
  4465  001FCA                     _enable_interrupts:
  4466                           	opt stack 20
  4467                           
  4468                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  4469                           
  4470                           ;incstack = 0
  4471  001FCA  8ED0               	bsf	4048,7,c	;volatile
  4472                           
  4473                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  4474  001FCC  8EF2               	bsf	intcon,7,c	;volatile
  4475                           
  4476                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  4477  001FCE  8CF2               	bsf	intcon,6,c	;volatile
  4478  001FD0  0012               	return	
  4479  001FD2                     __end_of_enable_interrupts:
  4480                           	opt stack 0
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           intcon2	equ	0xFF1
  4489                           postinc0	equ	0xFEE
  4490                           wreg	equ	0xFE8
  4491                           indf1	equ	0xFE7
  4492                           postdec1	equ	0xFE5
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function _block_on_To_msgqueues *****************
  4503 ;; Defined at:
  4504 ;;		line 258 in file "src/messages.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;		None               void
  4511 ;; Registers used:
  4512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4518 ;;      Params:         0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0
  4520 ;;      Temps:          0       1       0       0       0
  4521 ;;      Totals:         0       1       0       0       0
  4522 ;;Total ram usage:        1 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:   13
  4525 ;; This function calls:
  4526 ;;		_Delay1KTCYx
  4527 ;;		_check_msg
  4528 ;;		_in_main
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text22
  4535  00180A                     __ptext22:
  4536                           	opt stack 0
  4537  00180A                     _block_on_To_msgqueues:
  4538                           	opt stack 17
  4539                           
  4540                           ;messages.c: 259: if (!in_main()) {
  4541                           
  4542                           ;incstack = 0
  4543  00180A  ECEB  F00D         	call	_in_main	;wreg free
  4544  00180E  0100               	movlb	0	; () banked
  4545  001810  0100               	movlb	0	; () banked
  4546  001812  51A7               	movf	(?_in_main+1)& (0+255),w,b
  4547  001814  0100               	movlb	0	; () banked
  4548  001816  11A6               	iorwf	?_in_main& (0+255),w,b
  4549  001818  B4D8               	btfsc	status,2,c
  4550  00181A  0012               	return	
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;messages.c: 261: }
  4554                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4555                           
  4556                           ; BSR set to: 0
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;messages.c: 260: return;
  4560  00181C  0100               	movlb	0	; () banked
  4561  00181E  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  4562  001820  0E01               	movlw	1
  4563  001822  6E49               	movwf	_MQ_Main_Willing_to_block,c
  4564  001824  0100               	movlb	0	; () banked
  4565  001826  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4566  001828                     l2718:
  4567                           
  4568                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4569  001828  0101               	movlb	1	; () banked
  4570  00182A  0E01               	movlw	high _ToMainHigh_MQ
  4571  00182C  0100               	movlb	0	; () banked
  4572  00182E  0100               	movlb	0	; () banked
  4573  001830  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  4574  001832  0101               	movlb	1	; () banked
  4575  001834  0E6D               	movlw	low _ToMainHigh_MQ
  4576  001836  0100               	movlb	0	; () banked
  4577  001838  0100               	movlb	0	; () banked
  4578  00183A  6FA2               	movwf	check_msg@qptr& (0+255),b
  4579  00183C  EC02  F00F         	call	_check_msg	;wreg free
  4580  001840  0900               	iorlw	0
  4581  001842  B4D8               	btfsc	status,2,c
  4582  001844  D007               	goto	l2724
  4583                           
  4584                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4585  001846  0100               	movlb	0	; () banked
  4586  001848  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  4587  00184A  0E00               	movlw	0
  4588  00184C  6E49               	movwf	_MQ_Main_Willing_to_block,c
  4589  00184E  0100               	movlb	0	; () banked
  4590  001850  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4591  001852  0012               	return	
  4592  001854                     l2724:
  4593                           
  4594                           ;messages.c: 271: }
  4595                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4596  001854  0101               	movlb	1	; () banked
  4597  001856  0E01               	movlw	high _ToMainLow_MQ
  4598  001858  0100               	movlb	0	; () banked
  4599  00185A  0100               	movlb	0	; () banked
  4600  00185C  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  4601  00185E  0101               	movlb	1	; () banked
  4602  001860  0EA3               	movlw	low _ToMainLow_MQ
  4603  001862  0100               	movlb	0	; () banked
  4604  001864  0100               	movlb	0	; () banked
  4605  001866  6FA2               	movwf	check_msg@qptr& (0+255),b
  4606  001868  EC02  F00F         	call	_check_msg	;wreg free
  4607  00186C  0900               	iorlw	0
  4608  00186E  B4D8               	btfsc	status,2,c
  4609  001870  D007               	goto	l2730
  4610                           
  4611                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4612  001872  0100               	movlb	0	; () banked
  4613  001874  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  4614  001876  0E00               	movlw	0
  4615  001878  6E49               	movwf	_MQ_Main_Willing_to_block,c
  4616  00187A  0100               	movlb	0	; () banked
  4617  00187C  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4618  00187E  0012               	return	
  4619  001880                     l2730:
  4620                           
  4621                           ;messages.c: 278: }
  4622                           ;messages.c: 279: Delay1KTCYx(10);
  4623  001880  0E0A               	movlw	10
  4624  001882  ECC2  F00F         	call	_Delay1KTCYx
  4625  001886  D7D0               	goto	l2718
  4626  001888                     __end_of_block_on_To_msgqueues:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           intcon2	equ	0xFF1
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           indf1	equ	0xFE7
  4639                           postdec1	equ	0xFE5
  4640                           fsr1h	equ	0xFE2
  4641                           fsr1l	equ	0xFE1
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _in_main *****************
  4650 ;; Defined at:
  4651 ;;		line 40 in file "src/interrupts.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2   38[BANK0 ] int 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4665 ;;      Params:         0       2       0       0       0
  4666 ;;      Locals:         0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0
  4668 ;;      Totals:         0       2       0       0       0
  4669 ;;Total ram usage:        2 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:   12
  4672 ;; This function calls:
  4673 ;;		_in_high_int
  4674 ;;		_in_low_int
  4675 ;; This function is called by:
  4676 ;;		_block_on_To_msgqueues
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text23
  4681  001BD6                     __ptext23:
  4682                           	opt stack 0
  4683  001BD6                     _in_main:
  4684                           	opt stack 17
  4685                           
  4686                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  4687                           
  4688                           ;incstack = 0
  4689  001BD6  ECC8  F00D         	call	_in_low_int	;wreg free
  4690  001BDA  0100               	movlb	0	; () banked
  4691  001BDC  0100               	movlb	0	; () banked
  4692  001BDE  51A5               	movf	(?_in_low_int+1)& (0+255),w,b
  4693  001BE0  0100               	movlb	0	; () banked
  4694  001BE2  11A4               	iorwf	?_in_low_int& (0+255),w,b
  4695  001BE4  A4D8               	btfss	status,2,c
  4696  001BE6  D011               	goto	l2284
  4697                           
  4698                           ; BSR set to: 0
  4699  001BE8  ECD6  F00F         	call	_in_high_int	;wreg free
  4700  001BEC  0100               	movlb	0	; () banked
  4701  001BEE  0100               	movlb	0	; () banked
  4702  001BF0  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  4703  001BF2  0100               	movlb	0	; () banked
  4704  001BF4  11A2               	iorwf	?_in_high_int& (0+255),w,b
  4705  001BF6  A4D8               	btfss	status,2,c
  4706  001BF8  D008               	goto	l2284
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;interrupts.c: 42: return (1);
  4710  001BFA  0E00               	movlw	0
  4711  001BFC  0100               	movlb	0	; () banked
  4712  001BFE  0100               	movlb	0	; () banked
  4713  001C00  6FA7               	movwf	(?_in_main+1)& (0+255),b
  4714  001C02  0E01               	movlw	1
  4715  001C04  0100               	movlb	0	; () banked
  4716  001C06  6FA6               	movwf	?_in_main& (0+255),b
  4717  001C08  0012               	return	
  4718  001C0A                     l2284:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;interrupts.c: 44: return (0);
  4722  001C0A  0E00               	movlw	0
  4723  001C0C  0100               	movlb	0	; () banked
  4724  001C0E  0100               	movlb	0	; () banked
  4725  001C10  6FA7               	movwf	(?_in_main+1)& (0+255),b
  4726  001C12  0E00               	movlw	0
  4727  001C14  0100               	movlb	0	; () banked
  4728  001C16  6FA6               	movwf	?_in_main& (0+255),b
  4729  001C18  0012               	return	
  4730  001C1A                     __end_of_in_main:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           intcon2	equ	0xFF1
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           indf1	equ	0xFE7
  4743                           postdec1	equ	0xFE5
  4744                           fsr1h	equ	0xFE2
  4745                           fsr1l	equ	0xFE1
  4746                           indf2	equ	0xFDF
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           fsr2h	equ	0xFDA
  4750                           fsr2l	equ	0xFD9
  4751                           status	equ	0xFD8
  4752                           
  4753 ;; *************** function _in_low_int *****************
  4754 ;; Defined at:
  4755 ;;		line 30 in file "src/interrupts.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2   36[BANK0 ] int 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4769 ;;      Params:         0       2       0       0       0
  4770 ;;      Locals:         0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0
  4772 ;;      Totals:         0       2       0       0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   11
  4776 ;; This function calls:
  4777 ;;		_in_high_int
  4778 ;; This function is called by:
  4779 ;;		_in_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text24
  4784  001B90                     __ptext24:
  4785                           	opt stack 0
  4786  001B90                     _in_low_int:
  4787                           	opt stack 17
  4788                           
  4789                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;incstack = 0
  4793  001B90  ACF2               	btfss	intcon,6,c	;volatile
  4794  001B92  D008               	goto	l2262
  4795                           
  4796                           ;interrupts.c: 32: return (0);
  4797  001B94  0E00               	movlw	0
  4798  001B96  0100               	movlb	0	; () banked
  4799  001B98  0100               	movlb	0	; () banked
  4800  001B9A  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4801  001B9C  0E00               	movlw	0
  4802  001B9E  0100               	movlb	0	; () banked
  4803  001BA0  6FA4               	movwf	?_in_low_int& (0+255),b
  4804  001BA2  0012               	return	
  4805  001BA4                     l2262:
  4806  001BA4  ECD6  F00F         	call	_in_high_int	;wreg free
  4807  001BA8  0100               	movlb	0	; () banked
  4808  001BAA  0100               	movlb	0	; () banked
  4809  001BAC  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  4810  001BAE  0100               	movlb	0	; () banked
  4811  001BB0  11A2               	iorwf	?_in_high_int& (0+255),w,b
  4812  001BB2  B4D8               	btfsc	status,2,c
  4813  001BB4  D008               	goto	l2270
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;interrupts.c: 34: return (0);
  4817  001BB6  0E00               	movlw	0
  4818  001BB8  0100               	movlb	0	; () banked
  4819  001BBA  0100               	movlb	0	; () banked
  4820  001BBC  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4821  001BBE  0E00               	movlw	0
  4822  001BC0  0100               	movlb	0	; () banked
  4823  001BC2  6FA4               	movwf	?_in_low_int& (0+255),b
  4824  001BC4  0012               	return	
  4825  001BC6                     l2270:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;interrupts.c: 36: return (1);
  4829  001BC6  0E00               	movlw	0
  4830  001BC8  0100               	movlb	0	; () banked
  4831  001BCA  0100               	movlb	0	; () banked
  4832  001BCC  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  4833  001BCE  0E01               	movlw	1
  4834  001BD0  0100               	movlb	0	; () banked
  4835  001BD2  6FA4               	movwf	?_in_low_int& (0+255),b
  4836  001BD4  0012               	return	
  4837  001BD6                     __end_of_in_low_int:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           intcon2	equ	0xFF1
  4847                           postinc0	equ	0xFEE
  4848                           wreg	equ	0xFE8
  4849                           indf1	equ	0xFE7
  4850                           postdec1	equ	0xFE5
  4851                           fsr1h	equ	0xFE2
  4852                           fsr1l	equ	0xFE1
  4853                           indf2	equ	0xFDF
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _in_high_int *****************
  4861 ;; Defined at:
  4862 ;;		line 22 in file "src/interrupts.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2   34[BANK0 ] int 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4876 ;;      Params:         0       2       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0
  4879 ;;      Totals:         0       2       0       0       0
  4880 ;;Total ram usage:        2 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   10
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_in_low_int
  4887 ;;		_in_main
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text25
  4892  001FAC                     __ptext25:
  4893                           	opt stack 0
  4894  001FAC                     _in_high_int:
  4895                           	opt stack 17
  4896                           
  4897                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;incstack = 0
  4901  001FAC  0E00               	movlw	0
  4902  001FAE  AEF2               	btfss	intcon,7,c	;volatile
  4903  001FB0  0E01               	movlw	1
  4904  001FB2  0100               	movlb	0	; () banked
  4905  001FB4  0100               	movlb	0	; () banked
  4906  001FB6  6FA2               	movwf	?_in_high_int& (0+255),b
  4907  001FB8  0100               	movlb	0	; () banked
  4908  001FBA  6BA3               	clrf	(?_in_high_int+1)& (0+255),b
  4909  001FBC  0012               	return	
  4910  001FBE                     __end_of_in_high_int:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           intcon2	equ	0xFF1
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           indf1	equ	0xFE7
  4923                           postdec1	equ	0xFE5
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _check_msg *****************
  4934 ;; Defined at:
  4935 ;;		line 222 in file "src/messages.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  qptr            2   34[BANK0 ] PTR struct __msg_queue
  4938 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      unsigned char 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4950 ;;      Params:         0       2       0       0       0
  4951 ;;      Locals:         0       0       0       0       0
  4952 ;;      Temps:          0       1       0       0       0
  4953 ;;      Totals:         0       3       0       0       0
  4954 ;;Total ram usage:        3 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:   10
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_block_on_To_msgqueues
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text26
  4965  001E04                     __ptext26:
  4966                           	opt stack 0
  4967  001E04                     _check_msg:
  4968                           	opt stack 19
  4969                           
  4970                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;incstack = 0
  4974  001E04  0100               	movlb	0	; () banked
  4975  001E06  EE20 F035          	lfsr	2,53
  4976  001E0A  0100               	movlb	0	; () banked
  4977  001E0C  51A2               	movf	check_msg@qptr& (0+255),w,b
  4978  001E0E  26D9               	addwf	fsr2l,f,c
  4979  001E10  0100               	movlb	0	; () banked
  4980  001E12  51A3               	movf	(check_msg@qptr+1)& (0+255),w,b
  4981  001E14  22DA               	addwfc	fsr2h,f,c
  4982  001E16  50DF               	movf	indf2,w,c
  4983  001E18  0100               	movlb	0	; () banked
  4984  001E1A  6FA4               	movwf	??_check_msg& (0+255),b
  4985  001E1C  0100               	movlb	0	; () banked
  4986  001E1E  51A4               	movf	??_check_msg& (0+255),w,b
  4987  001E20  0D0D               	mullw	13
  4988  001E22  50F3               	movf	prodl,w,c
  4989  001E24  0100               	movlb	0	; () banked
  4990  001E26  0100               	movlb	0	; () banked
  4991  001E28  25A2               	addwf	check_msg@qptr& (0+255),w,b
  4992  001E2A  6ED9               	movwf	fsr2l,c
  4993  001E2C  50F4               	movf	prodh,w,c
  4994  001E2E  0100               	movlb	0	; () banked
  4995  001E30  0100               	movlb	0	; () banked
  4996  001E32  21A3               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4997  001E34  6EDA               	movwf	fsr2h,c
  4998  001E36  50DF               	movf	indf2,w,c
  4999  001E38  0012               	return	
  5000  001E3A                     __end_of_check_msg:
  5001                           	opt stack 0
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           intcon2	equ	0xFF1
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           indf1	equ	0xFE7
  5013                           postdec1	equ	0xFE5
  5014                           fsr1h	equ	0xFE2
  5015                           fsr1l	equ	0xFE1
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023 ;; *************** function _Delay1KTCYx *****************
  5024 ;; Defined at:
  5025 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  unit            1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  unit            1   34[BANK0 ] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5039 ;;      Params:         0       0       0       0       0
  5040 ;;      Locals:         0       1       0       0       0
  5041 ;;      Temps:          0       0       0       0       0
  5042 ;;      Totals:         0       1       0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:   10
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_block_on_To_msgqueues
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text27
  5054  001F84                     __ptext27:
  5055                           	opt stack 0
  5056  001F84                     _Delay1KTCYx:
  5057                           	opt stack 19
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;incstack = 0
  5061                           ;Delay1KTCYx@unit stored from wreg
  5062  001F84  CFE8 F0A2          	movff	wreg,Delay1KTCYx@unit
  5063  001F88                     l742:
  5064  001F88  0EFA               	movlw	250
  5065  001F8A                     u2527:
  5066  001F8A  F000               	nop	
  5067  001F8C  2EE8               	decfsz	wreg,f,c
  5068  001F8E  D7FD               	goto	u2527
  5069  001F90  0100               	movlb	0	; () banked
  5070  001F92  0100               	movlb	0	; () banked
  5071  001F94  2FA2               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  5072  001F96  D7F8               	goto	l742
  5073  001F98  0012               	return	
  5074  001F9A                     __end_of_Delay1KTCYx:
  5075                           	opt stack 0
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           prodh	equ	0xFF4
  5081                           prodl	equ	0xFF3
  5082                           intcon	equ	0xFF2
  5083                           intcon2	equ	0xFF1
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           indf1	equ	0xFE7
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           fsr2h	equ	0xFDA
  5094                           fsr2l	equ	0xFD9
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _ToMainLow_recvmsg *****************
  5098 ;; Defined at:
  5099 ;;		line 112 in file "src/messages.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  maxlength       1    wreg     unsigned char 
  5102 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  5103 ;;		 -> main@msgtype(1), 
  5104 ;;  data            2   60[BANK0 ] PTR void 
  5105 ;;		 -> main@msgbuffer(11), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  maxlength       1   62[BANK0 ] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      char 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5117 ;;      Params:         0       4       0       0       0
  5118 ;;      Locals:         0       1       0       0       0
  5119 ;;      Temps:          0       0       0       0       0
  5120 ;;      Totals:         0       5       0       0       0
  5121 ;;Total ram usage:        5 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:   12
  5124 ;; This function calls:
  5125 ;;		_recv_msg
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text28
  5132  001C5C                     __ptext28:
  5133                           	opt stack 0
  5134  001C5C                     _ToMainLow_recvmsg:
  5135                           	opt stack 18
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;incstack = 0
  5139                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5140  001C5C  CFE8 F0BE          	movff	wreg,ToMainLow_recvmsg@maxlength
  5141                           
  5142                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5143  001C60  0101               	movlb	1	; () banked
  5144  001C62  0E01               	movlw	high _ToMainLow_MQ
  5145  001C64  0100               	movlb	0	; () banked
  5146  001C66  0100               	movlb	0	; () banked
  5147  001C68  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  5148  001C6A  0101               	movlb	1	; () banked
  5149  001C6C  0EA3               	movlw	low _ToMainLow_MQ
  5150  001C6E  0100               	movlb	0	; () banked
  5151  001C70  0100               	movlb	0	; () banked
  5152  001C72  6FAC               	movwf	recv_msg@qptr& (0+255),b
  5153  001C74  C0BE  F0AE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5154  001C78  0100               	movlb	0	; () banked
  5155  001C7A  0100               	movlb	0	; () banked
  5156  001C7C  C0BB  F0B0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5157  001C80  0100               	movlb	0	; () banked
  5158  001C82  0100               	movlb	0	; () banked
  5159  001C84  C0BA  F0AF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5160  001C88  0100               	movlb	0	; () banked
  5161  001C8A  0100               	movlb	0	; () banked
  5162  001C8C  C0BD  F0B2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5163  001C90  0100               	movlb	0	; () banked
  5164  001C92  0100               	movlb	0	; () banked
  5165  001C94  C0BC  F0B1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5166  001C98  EC9A  F005         	call	_recv_msg	;wreg free
  5167  001C9C  0012               	return	
  5168  001C9E                     __end_of_ToMainLow_recvmsg:
  5169                           	opt stack 0
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           intcon2	equ	0xFF1
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           indf1	equ	0xFE7
  5181                           postdec1	equ	0xFE5
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function _ToMainHigh_recvmsg *****************
  5192 ;; Defined at:
  5193 ;;		line 135 in file "src/messages.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  maxlength       1    wreg     unsigned char 
  5196 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  5197 ;;		 -> main@msgtype(1), 
  5198 ;;  data            2   60[BANK0 ] PTR void 
  5199 ;;		 -> main@msgbuffer(11), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  maxlength       1   62[BANK0 ] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      char 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5211 ;;      Params:         0       4       0       0       0
  5212 ;;      Locals:         0       1       0       0       0
  5213 ;;      Temps:          0       0       0       0       0
  5214 ;;      Totals:         0       5       0       0       0
  5215 ;;Total ram usage:        5 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:   12
  5218 ;; This function calls:
  5219 ;;		_recv_msg
  5220 ;; This function is called by:
  5221 ;;		_main
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text29
  5226  001C9E                     __ptext29:
  5227                           	opt stack 0
  5228  001C9E                     _ToMainHigh_recvmsg:
  5229                           	opt stack 18
  5230                           
  5231                           ;incstack = 0
  5232                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5233  001C9E  CFE8 F0BE          	movff	wreg,ToMainHigh_recvmsg@maxlength
  5234                           
  5235                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5236  001CA2  0101               	movlb	1	; () banked
  5237  001CA4  0E01               	movlw	high _ToMainHigh_MQ
  5238  001CA6  0100               	movlb	0	; () banked
  5239  001CA8  0100               	movlb	0	; () banked
  5240  001CAA  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  5241  001CAC  0101               	movlb	1	; () banked
  5242  001CAE  0E6D               	movlw	low _ToMainHigh_MQ
  5243  001CB0  0100               	movlb	0	; () banked
  5244  001CB2  0100               	movlb	0	; () banked
  5245  001CB4  6FAC               	movwf	recv_msg@qptr& (0+255),b
  5246  001CB6  C0BE  F0AE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5247  001CBA  0100               	movlb	0	; () banked
  5248  001CBC  0100               	movlb	0	; () banked
  5249  001CBE  C0BB  F0B0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5250  001CC2  0100               	movlb	0	; () banked
  5251  001CC4  0100               	movlb	0	; () banked
  5252  001CC6  C0BA  F0AF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5253  001CCA  0100               	movlb	0	; () banked
  5254  001CCC  0100               	movlb	0	; () banked
  5255  001CCE  C0BD  F0B2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5256  001CD2  0100               	movlb	0	; () banked
  5257  001CD4  0100               	movlb	0	; () banked
  5258  001CD6  C0BC  F0B1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5259  001CDA  EC9A  F005         	call	_recv_msg	;wreg free
  5260  001CDE  0012               	return	
  5261  001CE0                     __end_of_ToMainHigh_recvmsg:
  5262                           	opt stack 0
  5263                           tblptru	equ	0xFF8
  5264                           tblptrh	equ	0xFF7
  5265                           tblptrl	equ	0xFF6
  5266                           tablat	equ	0xFF5
  5267                           prodh	equ	0xFF4
  5268                           prodl	equ	0xFF3
  5269                           intcon	equ	0xFF2
  5270                           intcon2	equ	0xFF1
  5271                           postinc0	equ	0xFEE
  5272                           wreg	equ	0xFE8
  5273                           indf1	equ	0xFE7
  5274                           postdec1	equ	0xFE5
  5275                           fsr1h	equ	0xFE2
  5276                           fsr1l	equ	0xFE1
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _recv_msg *****************
  5285 ;; Defined at:
  5286 ;;		line 63 in file "src/messages.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  qptr            2   44[BANK0 ] PTR struct __msg_queue
  5289 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5290 ;;  maxlength       1   46[BANK0 ] unsigned char 
  5291 ;;  msgtype         2   47[BANK0 ] PTR unsigned char 
  5292 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5293 ;;  data            2   49[BANK0 ] PTR void 
  5294 ;;		 -> main@msgbuffer(11), NULL(0), 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  qmsg            2   56[BANK0 ] PTR struct __msg
  5297 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5298 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5299 ;;  tlength         2   54[BANK0 ] unsigned int 
  5300 ;;  slot            1   53[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      char 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5310 ;;      Params:         0       7       0       0       0
  5311 ;;      Locals:         0       5       0       0       0
  5312 ;;      Temps:          0       2       0       0       0
  5313 ;;      Totals:         0      14       0       0       0
  5314 ;;Total ram usage:       14 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:   11
  5317 ;; This function calls:
  5318 ;;		_memcpy
  5319 ;; This function is called by:
  5320 ;;		_ToMainLow_recvmsg
  5321 ;;		_ToMainHigh_recvmsg
  5322 ;;		_FromMainHigh_recvmsg
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text30
  5327  000B34                     __ptext30:
  5328                           	opt stack 0
  5329  000B34                     _recv_msg:
  5330                           	opt stack 18
  5331                           
  5332                           ;messages.c: 64: unsigned char slot;
  5333                           ;messages.c: 68: msg *qmsg;
  5334                           ;messages.c: 69: size_t tlength;
  5335                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5336                           
  5337                           ;incstack = 0
  5338  000B34  0100               	movlb	0	; () banked
  5339  000B36  EE20 F035          	lfsr	2,53
  5340  000B3A  0100               	movlb	0	; () banked
  5341  000B3C  51AC               	movf	recv_msg@qptr& (0+255),w,b
  5342  000B3E  26D9               	addwf	fsr2l,f,c
  5343  000B40  0100               	movlb	0	; () banked
  5344  000B42  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5345  000B44  22DA               	addwfc	fsr2h,f,c
  5346  000B46  50DF               	movf	indf2,w,c
  5347  000B48  0100               	movlb	0	; () banked
  5348  000B4A  0100               	movlb	0	; () banked
  5349  000B4C  6FB5               	movwf	recv_msg@slot& (0+255),b
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5353  000B4E  0100               	movlb	0	; () banked
  5354  000B50  0100               	movlb	0	; () banked
  5355  000B52  51B5               	movf	recv_msg@slot& (0+255),w,b
  5356  000B54  0D0D               	mullw	13
  5357  000B56  50F3               	movf	prodl,w,c
  5358  000B58  0100               	movlb	0	; () banked
  5359  000B5A  0100               	movlb	0	; () banked
  5360  000B5C  25AC               	addwf	recv_msg@qptr& (0+255),w,b
  5361  000B5E  0100               	movlb	0	; () banked
  5362  000B60  0100               	movlb	0	; () banked
  5363  000B62  6FB8               	movwf	recv_msg@qmsg& (0+255),b
  5364  000B64  50F4               	movf	prodh,w,c
  5365  000B66  0100               	movlb	0	; () banked
  5366  000B68  0100               	movlb	0	; () banked
  5367  000B6A  21AD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5368  000B6C  0100               	movlb	0	; () banked
  5369  000B6E  6FB9               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;messages.c: 74: if (qmsg->full == 1) {
  5373  000B70  0E01               	movlw	1
  5374  000B72  C0B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  5375  000B76  C0B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5376  000B7A  62DF               	cpfseq	indf2,c
  5377  000B7C  D074               	goto	l2884
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5381  000B7E  0100               	movlb	0	; () banked
  5382  000B80  EE20 F001          	lfsr	2,1
  5383  000B84  0100               	movlb	0	; () banked
  5384  000B86  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  5385  000B88  26D9               	addwf	fsr2l,f,c
  5386  000B8A  0100               	movlb	0	; () banked
  5387  000B8C  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5388  000B8E  22DA               	addwfc	fsr2h,f,c
  5389  000B90  50DF               	movf	indf2,w,c
  5390  000B92  0100               	movlb	0	; () banked
  5391  000B94  0100               	movlb	0	; () banked
  5392  000B96  5DAE               	subwf	recv_msg@maxlength& (0+255),w,b
  5393  000B98  B0D8               	btfsc	status,0,c
  5394  000B9A  D002               	goto	l2868
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;messages.c: 77: return (-3);
  5398  000B9C  0EFD               	movlw	253
  5399  000B9E  0012               	return	
  5400  000BA0                     l2868:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;messages.c: 78: }
  5404                           ;messages.c: 80: tlength = qmsg->length;
  5405  000BA0  0100               	movlb	0	; () banked
  5406  000BA2  EE20 F001          	lfsr	2,1
  5407  000BA6  0100               	movlb	0	; () banked
  5408  000BA8  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  5409  000BAA  26D9               	addwf	fsr2l,f,c
  5410  000BAC  0100               	movlb	0	; () banked
  5411  000BAE  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5412  000BB0  22DA               	addwfc	fsr2h,f,c
  5413  000BB2  50DF               	movf	indf2,w,c
  5414  000BB4  0100               	movlb	0	; () banked
  5415  000BB6  6FB3               	movwf	??_recv_msg& (0+255),b
  5416  000BB8  0100               	movlb	0	; () banked
  5417  000BBA  51B3               	movf	??_recv_msg& (0+255),w,b
  5418  000BBC  0100               	movlb	0	; () banked
  5419  000BBE  0100               	movlb	0	; () banked
  5420  000BC0  6FB6               	movwf	recv_msg@tlength& (0+255),b
  5421  000BC2  0100               	movlb	0	; () banked
  5422  000BC4  6BB7               	clrf	(recv_msg@tlength+1)& (0+255),b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5426  000BC6  0100               	movlb	0	; () banked
  5427  000BC8  0100               	movlb	0	; () banked
  5428  000BCA  C0B2  F0A3         	movff	recv_msg@data+1,memcpy@d1+1
  5429  000BCE  0100               	movlb	0	; () banked
  5430  000BD0  0100               	movlb	0	; () banked
  5431  000BD2  C0B1  F0A2         	movff	recv_msg@data,memcpy@d1
  5432  000BD6  0E03               	movlw	3
  5433  000BD8  0100               	movlb	0	; () banked
  5434  000BDA  0100               	movlb	0	; () banked
  5435  000BDC  25B8               	addwf	recv_msg@qmsg& (0+255),w,b
  5436  000BDE  0100               	movlb	0	; () banked
  5437  000BE0  6FB3               	movwf	??_recv_msg& (0+255),b
  5438  000BE2  0E00               	movlw	0
  5439  000BE4  0100               	movlb	0	; () banked
  5440  000BE6  0100               	movlb	0	; () banked
  5441  000BE8  21B9               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5442  000BEA  0100               	movlb	0	; () banked
  5443  000BEC  6FB4               	movwf	(??_recv_msg+1)& (0+255),b
  5444  000BEE  C0B3  F0A4         	movff	??_recv_msg,memcpy@s1
  5445  000BF2  C0B4  F0A5         	movff	??_recv_msg+1,memcpy@s1+1
  5446  000BF6  C0B6  F0A6         	movff	recv_msg@tlength,memcpy@n
  5447  000BFA  C0B7  F0A7         	movff	recv_msg@tlength+1,memcpy@n+1
  5448  000BFE  EC1F  F00D         	call	_memcpy	;wreg free
  5449                           
  5450                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5451  000C02  0100               	movlb	0	; () banked
  5452  000C04  EE20 F035          	lfsr	2,53
  5453  000C08  0100               	movlb	0	; () banked
  5454  000C0A  51AC               	movf	recv_msg@qptr& (0+255),w,b
  5455  000C0C  26D9               	addwf	fsr2l,f,c
  5456  000C0E  0100               	movlb	0	; () banked
  5457  000C10  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5458  000C12  22DA               	addwfc	fsr2h,f,c
  5459  000C14  0100               	movlb	0	; () banked
  5460  000C16  EE10 F035          	lfsr	1,53
  5461  000C1A  0100               	movlb	0	; () banked
  5462  000C1C  51AC               	movf	recv_msg@qptr& (0+255),w,b
  5463  000C1E  26E1               	addwf	fsr1l,f,c
  5464  000C20  0100               	movlb	0	; () banked
  5465  000C22  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5466  000C24  22E2               	addwfc	fsr1h,f,c
  5467  000C26  50E7               	movf	indf1,w,c
  5468  000C28  0100               	movlb	0	; () banked
  5469  000C2A  6FB3               	movwf	??_recv_msg& (0+255),b
  5470  000C2C  0100               	movlb	0	; () banked
  5471  000C2E  29B3               	incf	??_recv_msg& (0+255),w,b
  5472  000C30  0B03               	andlw	3
  5473  000C32  6EDF               	movwf	indf2,c
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5477  000C34  0100               	movlb	0	; () banked
  5478  000C36  EE20 F002          	lfsr	2,2
  5479  000C3A  0100               	movlb	0	; () banked
  5480  000C3C  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  5481  000C3E  26D9               	addwf	fsr2l,f,c
  5482  000C40  0100               	movlb	0	; () banked
  5483  000C42  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5484  000C44  22DA               	addwfc	fsr2h,f,c
  5485  000C46  C0AF  FFE1         	movff	recv_msg@msgtype,fsr1l
  5486  000C4A  C0B0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5487  000C4E  CFDF FFE7          	movff	indf2,indf1
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;messages.c: 91: qmsg->full = 0;
  5491  000C52  C0B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  5492  000C56  C0B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5493  000C5A  0E00               	movlw	0
  5494  000C5C  6EDF               	movwf	indf2,c
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;messages.c: 92: return (tlength);
  5498  000C5E  0100               	movlb	0	; () banked
  5499  000C60  0100               	movlb	0	; () banked
  5500  000C62  51B6               	movf	recv_msg@tlength& (0+255),w,b
  5501  000C64  0012               	return	
  5502  000C66                     l2884:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;messages.c: 94: return (-4);
  5506  000C66  0EFC               	movlw	252
  5507  000C68  0012               	return	
  5508  000C6A                     __end_of_recv_msg:
  5509                           	opt stack 0
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           prodh	equ	0xFF4
  5515                           prodl	equ	0xFF3
  5516                           intcon	equ	0xFF2
  5517                           intcon2	equ	0xFF1
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           indf1	equ	0xFE7
  5521                           postdec1	equ	0xFE5
  5522                           fsr1h	equ	0xFE2
  5523                           fsr1l	equ	0xFE1
  5524                           indf2	equ	0xFDF
  5525                           postinc2	equ	0xFDE
  5526                           postdec2	equ	0xFDD
  5527                           fsr2h	equ	0xFDA
  5528                           fsr2l	equ	0xFD9
  5529                           status	equ	0xFD8
  5530                           
  5531 ;; *************** function _memcpy *****************
  5532 ;; Defined at:
  5533 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  d1              2   34[BANK0 ] PTR void 
  5536 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5537 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5538 ;;		 -> main@msgbuffer(11), NULL(0), 
  5539 ;;  s1              2   36[BANK0 ] PTR const void 
  5540 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5541 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5542 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  5543 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5544 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  5545 ;;		 -> main@uc(5), NULL(0), 
  5546 ;;  n               2   38[BANK0 ] unsigned int 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  s               2   42[BANK0 ] PTR const unsigned char 
  5549 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5550 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5551 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  5552 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5553 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  5554 ;;		 -> main@uc(5), NULL(0), 
  5555 ;;  d               2   40[BANK0 ] PTR unsigned char 
  5556 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5557 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5558 ;;		 -> main@msgbuffer(11), NULL(0), 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  2   34[BANK0 ] PTR void 
  5561 ;; Registers used:
  5562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5568 ;;      Params:         0       6       0       0       0
  5569 ;;      Locals:         0       4       0       0       0
  5570 ;;      Temps:          0       0       0       0       0
  5571 ;;      Totals:         0      10       0       0       0
  5572 ;;Total ram usage:       10 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:   10
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_send_msg
  5579 ;;		_recv_msg
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text31
  5584  001A3E                     __ptext31:
  5585                           	opt stack 0
  5586  001A3E                     _memcpy:
  5587                           	opt stack 17
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;incstack = 0
  5591  001A3E  0100               	movlb	0	; () banked
  5592  001A40  0100               	movlb	0	; () banked
  5593  001A42  C0A5  F0AB         	movff	memcpy@s1+1,memcpy@s+1
  5594  001A46  0100               	movlb	0	; () banked
  5595  001A48  0100               	movlb	0	; () banked
  5596  001A4A  C0A4  F0AA         	movff	memcpy@s1,memcpy@s
  5597  001A4E  0100               	movlb	0	; () banked
  5598  001A50  0100               	movlb	0	; () banked
  5599  001A52  C0A3  F0A9         	movff	memcpy@d1+1,memcpy@d+1
  5600  001A56  0100               	movlb	0	; () banked
  5601  001A58  0100               	movlb	0	; () banked
  5602  001A5A  C0A2  F0A8         	movff	memcpy@d1,memcpy@d
  5603  001A5E  D012               	goto	l2854
  5604  001A60                     l2848:
  5605                           
  5606                           ; BSR set to: 0
  5607  001A60  C0AA  FFD9         	movff	memcpy@s,fsr2l
  5608  001A64  C0AB  FFDA         	movff	memcpy@s+1,fsr2h
  5609  001A68  C0A8  FFE1         	movff	memcpy@d,fsr1l
  5610  001A6C  C0A9  FFE2         	movff	memcpy@d+1,fsr1h
  5611  001A70  CFDF FFE7          	movff	indf2,indf1
  5612                           
  5613                           ; BSR set to: 0
  5614  001A74  0100               	movlb	0	; () banked
  5615  001A76  0100               	movlb	0	; () banked
  5616  001A78  4BAA               	infsnz	memcpy@s& (0+255),f,b
  5617  001A7A  2BAB               	incf	(memcpy@s+1)& (0+255),f,b
  5618                           
  5619                           ; BSR set to: 0
  5620  001A7C  0100               	movlb	0	; () banked
  5621  001A7E  0100               	movlb	0	; () banked
  5622  001A80  4BA8               	infsnz	memcpy@d& (0+255),f,b
  5623  001A82  2BA9               	incf	(memcpy@d+1)& (0+255),f,b
  5624  001A84                     l2854:
  5625                           
  5626                           ; BSR set to: 0
  5627  001A84  0100               	movlb	0	; () banked
  5628  001A86  0100               	movlb	0	; () banked
  5629  001A88  07A6               	decf	memcpy@n& (0+255),f,b
  5630  001A8A  A0D8               	btfss	status,0,c
  5631  001A8C  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  5632  001A8E  0100               	movlb	0	; () banked
  5633  001A90  29A6               	incf	memcpy@n& (0+255),w,b
  5634  001A92  B4D8               	btfsc	status,2,c
  5635  001A94  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  5636  001A96  B4D8               	btfsc	status,2,c
  5637                           
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;	Return value of _memcpy is never used
  5642  001A98  0012               	return	
  5643  001A9A  D7E2               	goto	l2848
  5644  001A9C                     __end_of_memcpy:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           indf1	equ	0xFE7
  5657                           postdec1	equ	0xFE5
  5658                           fsr1h	equ	0xFE2
  5659                           fsr1l	equ	0xFE1
  5660                           indf2	equ	0xFDF
  5661                           postinc2	equ	0xFDE
  5662                           postdec2	equ	0xFDD
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _OpenUSART *****************
  5668 ;; Defined at:
  5669 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  config          1    wreg     unsigned char 
  5672 ;;  spbrg           2   34[BANK0 ] unsigned int 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  config          1   39[BANK0 ] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;		None               void
  5677 ;; Registers used:
  5678 ;;		wreg, status,2
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5684 ;;      Params:         0       2       0       0       0
  5685 ;;      Locals:         0       1       0       0       0
  5686 ;;      Temps:          0       3       0       0       0
  5687 ;;      Totals:         0       6       0       0       0
  5688 ;;Total ram usage:        6 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:   10
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_main
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text32
  5699  001662                     __ptext32:
  5700                           	opt stack 0
  5701  001662                     _OpenUSART:
  5702                           	opt stack 20
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;incstack = 0
  5706                           ;OpenUSART@config stored from wreg
  5707  001662  CFE8 F0A7          	movff	wreg,OpenUSART@config
  5708  001666  0E00               	movlw	0
  5709  001668  6EAC               	movwf	4012,c	;volatile
  5710  00166A  0E00               	movlw	0
  5711  00166C  6EAB               	movwf	4011,c	;volatile
  5712  00166E  0100               	movlb	0	; () banked
  5713  001670  0100               	movlb	0	; () banked
  5714  001672  B1A7               	btfsc	OpenUSART@config& (0+255),0,b
  5715                           
  5716                           ; BSR set to: 0
  5717  001674  88AC               	bsf	4012,4,c	;volatile
  5718                           
  5719                           ; BSR set to: 0
  5720                           
  5721                           ; BSR set to: 0
  5722  001676  0100               	movlb	0	; () banked
  5723  001678  0100               	movlb	0	; () banked
  5724  00167A  A3A7               	btfss	OpenUSART@config& (0+255),1,b
  5725  00167C  D002               	goto	l2642
  5726                           
  5727                           ; BSR set to: 0
  5728  00167E  8CAC               	bsf	4012,6,c	;volatile
  5729  001680  8CAB               	bsf	4011,6,c	;volatile
  5730  001682                     l2642:
  5731                           
  5732                           ; BSR set to: 0
  5733  001682  0100               	movlb	0	; () banked
  5734  001684  0100               	movlb	0	; () banked
  5735  001686  B5A7               	btfsc	OpenUSART@config& (0+255),2,b
  5736                           
  5737                           ; BSR set to: 0
  5738  001688  8EAC               	bsf	4012,7,c	;volatile
  5739                           
  5740                           ; BSR set to: 0
  5741                           
  5742                           ; BSR set to: 0
  5743  00168A  0100               	movlb	0	; () banked
  5744  00168C  0100               	movlb	0	; () banked
  5745  00168E  A7A7               	btfss	OpenUSART@config& (0+255),3,b
  5746  001690  D002               	goto	l509
  5747                           
  5748                           ; BSR set to: 0
  5749  001692  88AB               	bsf	4011,4,c	;volatile
  5750  001694  D001               	goto	l2650
  5751  001696                     l509:
  5752                           
  5753                           ; BSR set to: 0
  5754  001696  8AAB               	bsf	4011,5,c	;volatile
  5755  001698                     l2650:
  5756                           
  5757                           ; BSR set to: 0
  5758  001698  0100               	movlb	0	; () banked
  5759  00169A  0100               	movlb	0	; () banked
  5760  00169C  B9A7               	btfsc	OpenUSART@config& (0+255),4,b
  5761                           
  5762                           ; BSR set to: 0
  5763  00169E  84AC               	bsf	4012,2,c	;volatile
  5764                           
  5765                           ; BSR set to: 0
  5766  0016A0  989E               	bcf	3998,4,c	;volatile
  5767                           
  5768                           ; BSR set to: 0
  5769  0016A2  0100               	movlb	0	; () banked
  5770  0016A4  0100               	movlb	0	; () banked
  5771  0016A6  BBA7               	btfsc	OpenUSART@config& (0+255),5,b
  5772                           
  5773                           ; BSR set to: 0
  5774  0016A8  86AB               	bsf	4011,3,c	;volatile
  5775                           
  5776                           ; BSR set to: 0
  5777                           
  5778                           ; BSR set to: 0
  5779  0016AA  0100               	movlb	0	; () banked
  5780  0016AC  0100               	movlb	0	; () banked
  5781  0016AE  ADA7               	btfss	OpenUSART@config& (0+255),6,b
  5782  0016B0  D002               	goto	l513
  5783                           
  5784                           ; BSR set to: 0
  5785  0016B2  8A9D               	bsf	3997,5,c	;volatile
  5786  0016B4  D001               	goto	l514
  5787  0016B6                     l513:
  5788                           
  5789                           ; BSR set to: 0
  5790  0016B6  9A9D               	bcf	3997,5,c	;volatile
  5791  0016B8                     l514:
  5792                           
  5793                           ; BSR set to: 0
  5794  0016B8  9A9E               	bcf	3998,5,c	;volatile
  5795                           
  5796                           ; BSR set to: 0
  5797  0016BA  0100               	movlb	0	; () banked
  5798  0016BC  0100               	movlb	0	; () banked
  5799  0016BE  AFA7               	btfss	OpenUSART@config& (0+255),7,b
  5800  0016C0  D002               	goto	l515
  5801                           
  5802                           ; BSR set to: 0
  5803  0016C2  889D               	bsf	3997,4,c	;volatile
  5804  0016C4  D001               	goto	l516
  5805  0016C6                     l515:
  5806                           
  5807                           ; BSR set to: 0
  5808  0016C6  989D               	bcf	3997,4,c	;volatile
  5809  0016C8                     l516:
  5810                           
  5811                           ; BSR set to: 0
  5812  0016C8  C0A2  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5813                           
  5814                           ; BSR set to: 0
  5815  0016CC  0100               	movlb	0	; () banked
  5816  0016CE  C0A3  F0A4         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5817  0016D2  C0A4  F0A5         	movff	??_OpenUSART,??_OpenUSART+1
  5818  0016D6  0100               	movlb	0	; () banked
  5819  0016D8  6BA6               	clrf	(??_OpenUSART+2)& (0+255),b
  5820  0016DA  0100               	movlb	0	; () banked
  5821  0016DC  51A5               	movf	(??_OpenUSART+1)& (0+255),w,b
  5822  0016DE  6EB0               	movwf	4016,c	;volatile
  5823                           
  5824                           ; BSR set to: 0
  5825  0016E0  8AAC               	bsf	4012,5,c	;volatile
  5826                           
  5827                           ; BSR set to: 0
  5828  0016E2  8EAB               	bsf	4011,7,c	;volatile
  5829                           
  5830                           ; BSR set to: 0
  5831  0016E4  9C94               	bcf	3988,6,c	;volatile
  5832                           
  5833                           ; BSR set to: 0
  5834  0016E6  8E94               	bsf	3988,7,c	;volatile
  5835                           
  5836                           ; BSR set to: 0
  5837  0016E8  A8AC               	btfss	4012,4,c	;volatile
  5838  0016EA  0012               	return	
  5839                           
  5840                           ; BSR set to: 0
  5841  0016EC  BEAC               	btfsc	4012,7,c	;volatile
  5842  0016EE  0012               	return	
  5843                           
  5844                           ; BSR set to: 0
  5845  0016F0  8C94               	bsf	3988,6,c	;volatile
  5846  0016F2  0012               	return	
  5847  0016F4                     __end_of_OpenUSART:
  5848                           	opt stack 0
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           intcon	equ	0xFF2
  5856                           intcon2	equ	0xFF1
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           indf1	equ	0xFE7
  5860                           postdec1	equ	0xFE5
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function _OpenTimer1 *****************
  5871 ;; Defined at:
  5872 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  config          1    wreg     unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  config          1   34[BANK0 ] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;		None               void
  5879 ;; Registers used:
  5880 ;;		wreg, status,2, status,0
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5886 ;;      Params:         0       0       0       0       0
  5887 ;;      Locals:         0       1       0       0       0
  5888 ;;      Temps:          0       0       0       0       0
  5889 ;;      Totals:         0       1       0       0       0
  5890 ;;Total ram usage:        1 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:   10
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_main
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text33
  5901  001D60                     __ptext33:
  5902                           	opt stack 0
  5903  001D60                     _OpenTimer1:
  5904                           	opt stack 20
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;incstack = 0
  5908                           ;OpenTimer1@config stored from wreg
  5909  001D60  CFE8 F0A2          	movff	wreg,OpenTimer1@config
  5910  001D64  0100               	movlb	0	; () banked
  5911  001D66  0100               	movlb	0	; () banked
  5912  001D68  51A2               	movf	OpenTimer1@config& (0+255),w,b
  5913  001D6A  0B7E               	andlw	126
  5914  001D6C  6ECD               	movwf	4045,c	;volatile
  5915                           
  5916                           ; BSR set to: 0
  5917  001D6E  0100               	movlb	0	; () banked
  5918  001D70  0100               	movlb	0	; () banked
  5919  001D72  ADA2               	btfss	OpenTimer1@config& (0+255),6,b
  5920  001D74  D002               	goto	l472
  5921                           
  5922                           ; BSR set to: 0
  5923  001D76  8ECD               	bsf	4045,7,c	;volatile
  5924  001D78  D001               	goto	l2624
  5925  001D7A                     l472:
  5926                           
  5927                           ; BSR set to: 0
  5928  001D7A  9ECD               	bcf	4045,7,c	;volatile
  5929  001D7C                     l2624:
  5930                           
  5931                           ; BSR set to: 0
  5932  001D7C  0E00               	movlw	0
  5933  001D7E  6ECF               	movwf	4047,c	;volatile
  5934  001D80  0E00               	movlw	0
  5935  001D82  6ECE               	movwf	4046,c	;volatile
  5936                           
  5937                           ; BSR set to: 0
  5938  001D84  909E               	bcf	3998,0,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941  001D86  0100               	movlb	0	; () banked
  5942  001D88  0100               	movlb	0	; () banked
  5943  001D8A  AFA2               	btfss	OpenTimer1@config& (0+255),7,b
  5944  001D8C  D002               	goto	l474
  5945                           
  5946                           ; BSR set to: 0
  5947  001D8E  809D               	bsf	3997,0,c	;volatile
  5948  001D90  D001               	goto	l475
  5949  001D92                     l474:
  5950                           
  5951                           ; BSR set to: 0
  5952  001D92  909D               	bcf	3997,0,c	;volatile
  5953  001D94                     l475:
  5954                           
  5955                           ; BSR set to: 0
  5956  001D94  80CD               	bsf	4045,0,c	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959  001D96  0012               	return	
  5960  001D98                     __end_of_OpenTimer1:
  5961                           	opt stack 0
  5962                           tblptru	equ	0xFF8
  5963                           tblptrh	equ	0xFF7
  5964                           tblptrl	equ	0xFF6
  5965                           tablat	equ	0xFF5
  5966                           prodh	equ	0xFF4
  5967                           prodl	equ	0xFF3
  5968                           intcon	equ	0xFF2
  5969                           intcon2	equ	0xFF1
  5970                           postinc0	equ	0xFEE
  5971                           wreg	equ	0xFE8
  5972                           indf1	equ	0xFE7
  5973                           postdec1	equ	0xFE5
  5974                           fsr1h	equ	0xFE2
  5975                           fsr1l	equ	0xFE1
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           postdec2	equ	0xFDD
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _InterruptHandlerLow *****************
  5984 ;; Defined at:
  5985 ;;		line 129 in file "src/interrupts.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;		None               void
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5999 ;;      Params:         0       0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0
  6001 ;;      Temps:         18       0       0       0       0
  6002 ;;      Totals:        18       0       0       0       0
  6003 ;;Total ram usage:       18 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    9
  6006 ;; This function calls:
  6007 ;;		_uart_recv_int_handler
  6008 ;;		_uart_trans_int_handler
  6009 ;;		i1_ToMainLow_sendmsg
  6010 ;; This function is called by:
  6011 ;;		Interrupt level 1
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	intcodelo
  6016  000018                     __pintcodelo:
  6017                           	opt stack 0
  6018  000018                     _InterruptHandlerLow:
  6019                           	opt stack 16
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;incstack = 0
  6023  000018  CFD8 F025          	movff	status,??_InterruptHandlerLow+1
  6024  00001C  CFE8 F026          	movff	wreg,??_InterruptHandlerLow+2
  6025  000020  CFE0 F027          	movff	bsr,??_InterruptHandlerLow+3
  6026  000024  CFFA F028          	movff	pclath,??_InterruptHandlerLow+4
  6027  000028  CFFB F029          	movff	pclatu,??_InterruptHandlerLow+5
  6028  00002C  CFE9 F02A          	movff	fsr0l,??_InterruptHandlerLow+6
  6029  000030  CFEA F02B          	movff	fsr0h,??_InterruptHandlerLow+7
  6030  000034  CFE1 F02C          	movff	fsr1l,??_InterruptHandlerLow+8
  6031  000038  CFE2 F02D          	movff	fsr1h,??_InterruptHandlerLow+9
  6032  00003C  CFD9 F02E          	movff	fsr2l,??_InterruptHandlerLow+10
  6033  000040  CFDA F02F          	movff	fsr2h,??_InterruptHandlerLow+11
  6034  000044  CFF3 F030          	movff	prodl,??_InterruptHandlerLow+12
  6035  000048  CFF4 F031          	movff	prodh,??_InterruptHandlerLow+13
  6036  00004C  CFF6 F032          	movff	tblptrl,??_InterruptHandlerLow+14
  6037  000050  CFF7 F033          	movff	tblptrh,??_InterruptHandlerLow+15
  6038  000054  CFF8 F034          	movff	tblptru,??_InterruptHandlerLow+16
  6039  000058  CFF5 F035          	movff	tablat,??_InterruptHandlerLow+17
  6040                           
  6041                           ;interrupts.c: 131: if (PIR1bits.TMR1IF) {
  6042  00005C  A09E               	btfss	3998,0,c	;volatile
  6043  00005E  D00C               	goto	i1l3184
  6044                           
  6045                           ;interrupts.c: 132: PIR1bits.TMR1IF = 0;
  6046  000060  909E               	bcf	3998,0,c	;volatile
  6047                           
  6048                           ;interrupts.c: 133: ToMainLow_sendmsg(0, 11, (void *)0);
  6049  000062  6E24               	movwf	??_InterruptHandlerLow& (0+255),c
  6050  000064  0E0B               	movlw	11
  6051  000066  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6052  000068  5024               	movf	??_InterruptHandlerLow& (0+255),w,c
  6053  00006A  0E00               	movlw	0
  6054  00006C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6055  00006E  0E00               	movlw	0
  6056  000070  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6057  000072  0E00               	movlw	0
  6058  000074  EC71  F00F         	call	i1_ToMainLow_sendmsg
  6059  000078                     i1l3184:
  6060                           
  6061                           ;interrupts.c: 134: }
  6062                           ;interrupts.c: 137: if (PIR1bits.RCIF) {
  6063  000078  AA9E               	btfss	3998,5,c	;volatile
  6064  00007A  D003               	goto	i1l3190
  6065                           
  6066                           ;interrupts.c: 138: PIR1bits.RCIF = 0;
  6067  00007C  9A9E               	bcf	3998,5,c	;volatile
  6068                           
  6069                           ;interrupts.c: 139: uart_recv_int_handler();
  6070  00007E  EC96  F00A         	call	_uart_recv_int_handler	;wreg free
  6071  000082                     i1l3190:
  6072                           
  6073                           ;interrupts.c: 140: }
  6074                           ;interrupts.c: 143: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  6075  000082  B89E               	btfsc	3998,4,c	;volatile
  6076  000084  A89D               	btfss	3997,4,c	;volatile
  6077  000086  D002               	goto	i1l59
  6078                           
  6079                           ;interrupts.c: 144: uart_trans_int_handler();
  6080  000088  EC4E  F00D         	call	_uart_trans_int_handler	;wreg free
  6081  00008C                     i1l59:
  6082  00008C  C035  FFF5         	movff	??_InterruptHandlerLow+17,tablat
  6083  000090  C034  FFF8         	movff	??_InterruptHandlerLow+16,tblptru
  6084  000094  C033  FFF7         	movff	??_InterruptHandlerLow+15,tblptrh
  6085  000098  C032  FFF6         	movff	??_InterruptHandlerLow+14,tblptrl
  6086  00009C  C031  FFF4         	movff	??_InterruptHandlerLow+13,prodh
  6087  0000A0  C030  FFF3         	movff	??_InterruptHandlerLow+12,prodl
  6088  0000A4  C02F  FFDA         	movff	??_InterruptHandlerLow+11,fsr2h
  6089  0000A8  C02E  FFD9         	movff	??_InterruptHandlerLow+10,fsr2l
  6090  0000AC  C02D  FFE2         	movff	??_InterruptHandlerLow+9,fsr1h
  6091  0000B0  C02C  FFE1         	movff	??_InterruptHandlerLow+8,fsr1l
  6092  0000B4  C02B  FFEA         	movff	??_InterruptHandlerLow+7,fsr0h
  6093  0000B8  C02A  FFE9         	movff	??_InterruptHandlerLow+6,fsr0l
  6094  0000BC  C029  FFFB         	movff	??_InterruptHandlerLow+5,pclatu
  6095  0000C0  C028  FFFA         	movff	??_InterruptHandlerLow+4,pclath
  6096  0000C4  C027  FFE0         	movff	??_InterruptHandlerLow+3,bsr
  6097  0000C8  C026  FFE8         	movff	??_InterruptHandlerLow+2,wreg
  6098  0000CC  C025  FFD8         	movff	??_InterruptHandlerLow+1,status
  6099  0000D0  0010               	retfie	
  6100  0000D2                     __end_of_InterruptHandlerLow:
  6101                           	opt stack 0
  6102                           pclatu	equ	0xFFB
  6103                           pclath	equ	0xFFA
  6104                           tblptru	equ	0xFF8
  6105                           tblptrh	equ	0xFF7
  6106                           tblptrl	equ	0xFF6
  6107                           tablat	equ	0xFF5
  6108                           prodh	equ	0xFF4
  6109                           prodl	equ	0xFF3
  6110                           intcon	equ	0xFF2
  6111                           intcon2	equ	0xFF1
  6112                           postinc0	equ	0xFEE
  6113                           fsr0h	equ	0xFEA
  6114                           fsr0l	equ	0xFE9
  6115                           wreg	equ	0xFE8
  6116                           indf1	equ	0xFE7
  6117                           postdec1	equ	0xFE5
  6118                           fsr1h	equ	0xFE2
  6119                           fsr1l	equ	0xFE1
  6120                           bsr	equ	0xFE0
  6121                           indf2	equ	0xFDF
  6122                           postinc2	equ	0xFDE
  6123                           postdec2	equ	0xFDD
  6124                           fsr2h	equ	0xFDA
  6125                           fsr2l	equ	0xFD9
  6126                           status	equ	0xFD8
  6127                           
  6128 ;; *************** function _uart_trans_int_handler *****************
  6129 ;; Defined at:
  6130 ;;		line 11 in file "src/my_uart.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  data            2   30[COMRAM] PTR unsigned char 
  6135 ;;		 -> NULL(0), 
  6136 ;;  length          1   34[COMRAM] char 
  6137 ;;  curIndex        1   33[COMRAM] unsigned char 
  6138 ;;  msgtype         1   32[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;		None               void
  6141 ;; Registers used:
  6142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6148 ;;      Params:         0       0       0       0       0
  6149 ;;      Locals:         5       0       0       0       0
  6150 ;;      Temps:          1       0       0       0       0
  6151 ;;      Totals:         6       0       0       0       0
  6152 ;;Total ram usage:        6 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    8
  6155 ;; This function calls:
  6156 ;;		_FromMainLow_recvmsg
  6157 ;; This function is called by:
  6158 ;;		_InterruptHandlerLow
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text35
  6163  001A9C                     __ptext35:
  6164                           	opt stack 0
  6165  001A9C                     _uart_trans_int_handler:
  6166                           	opt stack 16
  6167                           
  6168                           ;my_uart.c: 13: unsigned char* data = (0);
  6169                           
  6170                           ;incstack = 0
  6171  001A9C  0E00               	movlw	0
  6172  001A9E  6E20               	movwf	uart_trans_int_handler@data+1,c
  6173  001AA0  0E00               	movlw	0
  6174  001AA2  6E1F               	movwf	uart_trans_int_handler@data,c
  6175                           
  6176                           ;my_uart.c: 14: unsigned char msgtype;
  6177                           ;my_uart.c: 15: unsigned char curIndex;
  6178                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  6179  001AA4  0E00               	movlw	high uart_trans_int_handler@msgtype
  6180  001AA6  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  6181  001AA8  0E21               	movlw	low uart_trans_int_handler@msgtype
  6182  001AAA  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  6183  001AAC  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  6184  001AB0  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  6185  001AB4  0E0A               	movlw	10
  6186  001AB6  EC5D  F00F         	call	_FromMainLow_recvmsg
  6187  001ABA  6E23               	movwf	uart_trans_int_handler@length,c
  6188                           
  6189                           ;my_uart.c: 17: if (length < 0) {
  6190  001ABC  BE23               	btfsc	uart_trans_int_handler@length,7,c
  6191  001ABE  D019               	goto	i1l372
  6192                           
  6193                           ;my_uart.c: 26: curIndex = 0;
  6194                           
  6195                           ;my_uart.c: 24: }
  6196                           ;my_uart.c: 25: } else {
  6197                           
  6198                           ;my_uart.c: 22: else{
  6199                           
  6200                           ;my_uart.c: 21: }
  6201  001AC0  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  6202  001AC2  0E00               	movlw	0
  6203  001AC4  6E22               	movwf	uart_trans_int_handler@curIndex,c
  6204  001AC6  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  6205                           
  6206                           ;my_uart.c: 27: while(curIndex < length){
  6207  001AC8  D00D               	goto	i1l3176
  6208  001ACA                     i1l375:
  6209  001ACA  A2AC               	btfss	4012,1,c	;volatile
  6210  001ACC  D7FE               	goto	i1l375
  6211                           
  6212                           ;my_uart.c: 33: TXREG = data[curIndex];
  6213  001ACE  5022               	movf	uart_trans_int_handler@curIndex,w,c
  6214  001AD0  0D01               	mullw	1
  6215  001AD2  50F3               	movf	prodl,w,c
  6216  001AD4  241F               	addwf	uart_trans_int_handler@data,w,c
  6217  001AD6  6ED9               	movwf	fsr2l,c
  6218  001AD8  50F4               	movf	prodh,w,c
  6219  001ADA  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  6220  001ADC  6EDA               	movwf	fsr2h,c
  6221  001ADE  50DF               	movf	indf2,w,c
  6222  001AE0  6EAD               	movwf	4013,c	;volatile
  6223                           
  6224                           ;my_uart.c: 35: curIndex++;
  6225  001AE2  2A22               	incf	uart_trans_int_handler@curIndex,f,c
  6226  001AE4                     i1l3176:
  6227  001AE4  5022               	movf	uart_trans_int_handler@curIndex,w,c
  6228  001AE6  BE23               	btfsc	uart_trans_int_handler@length,7,c
  6229  001AE8  D004               	goto	i1l372
  6230  001AEA  0AFF               	xorlw	255
  6231  001AEC  2423               	addwf	uart_trans_int_handler@length,w,c
  6232  001AEE  B0D8               	btfsc	status,0,c
  6233  001AF0  D7EC               	goto	i1l375
  6234  001AF2                     i1l372:
  6235                           
  6236                           ;my_uart.c: 36: }
  6237                           ;my_uart.c: 37: }
  6238                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  6239  001AF2  989D               	bcf	3997,4,c	;volatile
  6240  001AF4  0012               	return	
  6241  001AF6                     __end_of_uart_trans_int_handler:
  6242                           	opt stack 0
  6243                           pclatu	equ	0xFFB
  6244                           pclath	equ	0xFFA
  6245                           tblptru	equ	0xFF8
  6246                           tblptrh	equ	0xFF7
  6247                           tblptrl	equ	0xFF6
  6248                           tablat	equ	0xFF5
  6249                           prodh	equ	0xFF4
  6250                           prodl	equ	0xFF3
  6251                           intcon	equ	0xFF2
  6252                           intcon2	equ	0xFF1
  6253                           postinc0	equ	0xFEE
  6254                           fsr0h	equ	0xFEA
  6255                           fsr0l	equ	0xFE9
  6256                           wreg	equ	0xFE8
  6257                           indf1	equ	0xFE7
  6258                           postdec1	equ	0xFE5
  6259                           fsr1h	equ	0xFE2
  6260                           fsr1l	equ	0xFE1
  6261                           bsr	equ	0xFE0
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _FromMainLow_recvmsg *****************
  6270 ;; Defined at:
  6271 ;;		line 159 in file "src/messages.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  maxlength       1    wreg     unsigned char 
  6274 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6275 ;;		 -> uart_trans_int_handler@msgtype(1), 
  6276 ;;  data            2   26[COMRAM] PTR void 
  6277 ;;		 -> NULL(0), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  maxlength       1   28[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      char 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6289 ;;      Params:         4       0       0       0       0
  6290 ;;      Locals:         1       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0
  6292 ;;      Totals:         5       0       0       0       0
  6293 ;;Total ram usage:        5 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    7
  6296 ;; This function calls:
  6297 ;;		i1_recv_msg
  6298 ;; This function is called by:
  6299 ;;		_uart_trans_int_handler
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text36
  6304  001EBA                     __ptext36:
  6305                           	opt stack 0
  6306  001EBA                     _FromMainLow_recvmsg:
  6307                           	opt stack 16
  6308                           
  6309                           ;incstack = 0
  6310                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6311  001EBA  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  6312                           
  6313                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6314  001EBE  0102               	movlb	2	; () banked
  6315  001EC0  0E02               	movlw	high _FromMainLow_MQ
  6316  001EC2  6E0C               	movwf	i1recv_msg@qptr+1,c
  6317  001EC4  0102               	movlb	2	; () banked
  6318  001EC6  0E36               	movlw	low _FromMainLow_MQ
  6319  001EC8  6E0B               	movwf	i1recv_msg@qptr,c
  6320  001ECA  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  6321  001ECE  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  6322  001ED2  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  6323  001ED6  6A11               	clrf	i1recv_msg@data+1,c
  6324  001ED8  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  6325  001EDC  ECA6  F008         	call	i1_recv_msg	;wreg free
  6326  001EE0  0012               	return	
  6327  001EE2                     __end_of_FromMainLow_recvmsg:
  6328                           	opt stack 0
  6329                           pclatu	equ	0xFFB
  6330                           pclath	equ	0xFFA
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           prodh	equ	0xFF4
  6336                           prodl	equ	0xFF3
  6337                           intcon	equ	0xFF2
  6338                           intcon2	equ	0xFF1
  6339                           postinc0	equ	0xFEE
  6340                           fsr0h	equ	0xFEA
  6341                           fsr0l	equ	0xFE9
  6342                           wreg	equ	0xFE8
  6343                           indf1	equ	0xFE7
  6344                           postdec1	equ	0xFE5
  6345                           fsr1h	equ	0xFE2
  6346                           fsr1l	equ	0xFE1
  6347                           bsr	equ	0xFE0
  6348                           indf2	equ	0xFDF
  6349                           postinc2	equ	0xFDE
  6350                           postdec2	equ	0xFDD
  6351                           fsr2h	equ	0xFDA
  6352                           fsr2l	equ	0xFD9
  6353                           status	equ	0xFD8
  6354                           
  6355 ;; *************** function i1_recv_msg *****************
  6356 ;; Defined at:
  6357 ;;		line 63 in file "src/messages.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6360 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6361 ;;  maxlength       1   12[COMRAM] unsigned char 
  6362 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  6363 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6364 ;;  data            2   15[COMRAM] PTR void 
  6365 ;;		 -> main@msgbuffer(11), NULL(0), 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  6368 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6369 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6370 ;;  recv_msg        2   20[COMRAM] unsigned int 
  6371 ;;  recv_msg        1   19[COMRAM] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      char 
  6374 ;; Registers used:
  6375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6381 ;;      Params:         7       0       0       0       0
  6382 ;;      Locals:         5       0       0       0       0
  6383 ;;      Temps:          2       0       0       0       0
  6384 ;;      Totals:        14       0       0       0       0
  6385 ;;Total ram usage:       14 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    6
  6388 ;; This function calls:
  6389 ;;		i1_memcpy
  6390 ;; This function is called by:
  6391 ;;		_FromMainLow_recvmsg
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text37
  6396  00114C                     __ptext37:
  6397                           	opt stack 0
  6398  00114C                     i1_recv_msg:
  6399                           	opt stack 16
  6400                           
  6401                           ;messages.c: 64: unsigned char slot;
  6402                           ;messages.c: 68: msg *qmsg;
  6403                           ;messages.c: 69: size_t tlength;
  6404                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6405                           
  6406                           ;incstack = 0
  6407  00114C  EE20 F035          	lfsr	2,53
  6408  001150  500B               	movf	i1recv_msg@qptr,w,c
  6409  001152  26D9               	addwf	fsr2l,f,c
  6410  001154  500C               	movf	i1recv_msg@qptr+1,w,c
  6411  001156  22DA               	addwfc	fsr2h,f,c
  6412  001158  50DF               	movf	indf2,w,c
  6413  00115A  6E14               	movwf	i1recv_msg@slot,c
  6414                           
  6415                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6416  00115C  5014               	movf	i1recv_msg@slot,w,c
  6417  00115E  0D0D               	mullw	13
  6418  001160  50F3               	movf	prodl,w,c
  6419  001162  240B               	addwf	i1recv_msg@qptr,w,c
  6420  001164  6E17               	movwf	i1recv_msg@qmsg,c
  6421  001166  50F4               	movf	prodh,w,c
  6422  001168  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6423  00116A  6E18               	movwf	i1recv_msg@qmsg+1,c
  6424                           
  6425                           ;messages.c: 74: if (qmsg->full == 1) {
  6426  00116C  0E01               	movlw	1
  6427  00116E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6428  001172  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6429  001176  62DF               	cpfseq	indf2,c
  6430  001178  D050               	goto	i1l3130
  6431                           
  6432                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6433  00117A  EE20 F001          	lfsr	2,1
  6434  00117E  5017               	movf	i1recv_msg@qmsg,w,c
  6435  001180  26D9               	addwf	fsr2l,f,c
  6436  001182  5018               	movf	i1recv_msg@qmsg+1,w,c
  6437  001184  22DA               	addwfc	fsr2h,f,c
  6438  001186  50DF               	movf	indf2,w,c
  6439  001188  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6440  00118A  B0D8               	btfsc	status,0,c
  6441  00118C  D002               	goto	i1l3114
  6442                           
  6443                           ;messages.c: 77: return (-3);
  6444  00118E  0EFD               	movlw	253
  6445  001190  0012               	return	
  6446  001192                     i1l3114:
  6447                           
  6448                           ;messages.c: 78: }
  6449                           ;messages.c: 80: tlength = qmsg->length;
  6450  001192  EE20 F001          	lfsr	2,1
  6451  001196  5017               	movf	i1recv_msg@qmsg,w,c
  6452  001198  26D9               	addwf	fsr2l,f,c
  6453  00119A  5018               	movf	i1recv_msg@qmsg+1,w,c
  6454  00119C  22DA               	addwfc	fsr2h,f,c
  6455  00119E  50DF               	movf	indf2,w,c
  6456  0011A0  6E12               	movwf	??i1_recv_msg& (0+255),c
  6457  0011A2  5012               	movf	??i1_recv_msg,w,c
  6458  0011A4  6E15               	movwf	i1recv_msg@tlength,c
  6459  0011A6  6A16               	clrf	i1recv_msg@tlength+1,c
  6460                           
  6461                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6462  0011A8  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6463  0011AC  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6464  0011B0  0E03               	movlw	3
  6465  0011B2  2417               	addwf	i1recv_msg@qmsg,w,c
  6466  0011B4  6E12               	movwf	??i1_recv_msg& (0+255),c
  6467  0011B6  0E00               	movlw	0
  6468  0011B8  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6469  0011BA  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6470  0011BC  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6471  0011C0  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6472  0011C4  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6473  0011C8  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6474  0011CC  EC70  F00E         	call	i1_memcpy	;wreg free
  6475                           
  6476                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6477  0011D0  EE20 F035          	lfsr	2,53
  6478  0011D4  500B               	movf	i1recv_msg@qptr,w,c
  6479  0011D6  26D9               	addwf	fsr2l,f,c
  6480  0011D8  500C               	movf	i1recv_msg@qptr+1,w,c
  6481  0011DA  22DA               	addwfc	fsr2h,f,c
  6482  0011DC  EE10 F035          	lfsr	1,53
  6483  0011E0  500B               	movf	i1recv_msg@qptr,w,c
  6484  0011E2  26E1               	addwf	fsr1l,f,c
  6485  0011E4  500C               	movf	i1recv_msg@qptr+1,w,c
  6486  0011E6  22E2               	addwfc	fsr1h,f,c
  6487  0011E8  50E7               	movf	indf1,w,c
  6488  0011EA  6E12               	movwf	??i1_recv_msg& (0+255),c
  6489  0011EC  2812               	incf	??i1_recv_msg,w,c
  6490  0011EE  0B03               	andlw	3
  6491  0011F0  6EDF               	movwf	indf2,c
  6492                           
  6493                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6494  0011F2  EE20 F002          	lfsr	2,2
  6495  0011F6  5017               	movf	i1recv_msg@qmsg,w,c
  6496  0011F8  26D9               	addwf	fsr2l,f,c
  6497  0011FA  5018               	movf	i1recv_msg@qmsg+1,w,c
  6498  0011FC  22DA               	addwfc	fsr2h,f,c
  6499  0011FE  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6500  001202  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6501  001206  CFDF FFE7          	movff	indf2,indf1
  6502                           
  6503                           ;messages.c: 91: qmsg->full = 0;
  6504  00120A  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6505  00120E  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6506  001212  0E00               	movlw	0
  6507  001214  6EDF               	movwf	indf2,c
  6508                           
  6509                           ;messages.c: 92: return (tlength);
  6510  001216  5015               	movf	i1recv_msg@tlength,w,c
  6511  001218  0012               	return	
  6512  00121A                     i1l3130:
  6513                           
  6514                           ;messages.c: 94: return (-4);
  6515  00121A  0EFC               	movlw	252
  6516  00121C  0012               	return	
  6517  00121E                     __end_ofi1_recv_msg:
  6518                           	opt stack 0
  6519                           pclatu	equ	0xFFB
  6520                           pclath	equ	0xFFA
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           intcon	equ	0xFF2
  6528                           intcon2	equ	0xFF1
  6529                           postinc0	equ	0xFEE
  6530                           fsr0h	equ	0xFEA
  6531                           fsr0l	equ	0xFE9
  6532                           wreg	equ	0xFE8
  6533                           indf1	equ	0xFE7
  6534                           postdec1	equ	0xFE5
  6535                           fsr1h	equ	0xFE2
  6536                           fsr1l	equ	0xFE1
  6537                           bsr	equ	0xFE0
  6538                           indf2	equ	0xFDF
  6539                           postinc2	equ	0xFDE
  6540                           postdec2	equ	0xFDD
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function _uart_recv_int_handler *****************
  6546 ;; Defined at:
  6547 ;;		line 42 in file "src/my_uart.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;		None               void
  6554 ;; Registers used:
  6555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6561 ;;      Params:         0       0       0       0       0
  6562 ;;      Locals:         0       0       0       0       0
  6563 ;;      Temps:          1       0       0       0       0
  6564 ;;      Totals:         1       0       0       0       0
  6565 ;;Total ram usage:        1 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    8
  6568 ;; This function calls:
  6569 ;;		_ReadUSART
  6570 ;;		i1_ToMainLow_sendmsg
  6571 ;; This function is called by:
  6572 ;;		_InterruptHandlerLow
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text38
  6577  00152C                     __ptext38:
  6578                           	opt stack 0
  6579  00152C                     _uart_recv_int_handler:
  6580                           	opt stack 16
  6581                           
  6582                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6583                           
  6584                           ;incstack = 0
  6585  00152C  AA9E               	btfss	3998,5,c	;volatile
  6586  00152E  D03C               	goto	i1l3154
  6587                           
  6588                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6589  001530  EE20 F004          	lfsr	2,4
  6590  001534  5047               	movf	_uc_ptr,w,c
  6591  001536  26D9               	addwf	fsr2l,f,c
  6592  001538  5048               	movf	_uc_ptr+1,w,c
  6593  00153A  22DA               	addwfc	fsr2h,f,c
  6594  00153C  50DF               	movf	indf2,w,c
  6595  00153E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6596  001540  501B               	movf	??_uart_recv_int_handler,w,c
  6597  001542  0D01               	mullw	1
  6598  001544  50F3               	movf	prodl,w,c
  6599  001546  2447               	addwf	_uc_ptr,w,c
  6600  001548  6ED9               	movwf	fsr2l,c
  6601  00154A  50F4               	movf	prodh,w,c
  6602  00154C  2048               	addwfc	_uc_ptr+1,w,c
  6603  00154E  6EDA               	movwf	fsr2h,c
  6604  001550  ECA5  F00F         	call	_ReadUSART	;wreg free
  6605  001554  6EDF               	movwf	indf2,c
  6606                           
  6607                           ;my_uart.c: 56: uc_ptr->buflen++;
  6608  001556  EE20 F004          	lfsr	2,4
  6609  00155A  5047               	movf	_uc_ptr,w,c
  6610  00155C  26D9               	addwf	fsr2l,f,c
  6611  00155E  5048               	movf	_uc_ptr+1,w,c
  6612  001560  22DA               	addwfc	fsr2h,f,c
  6613  001562  2ADF               	incf	indf2,f,c
  6614                           
  6615                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6616  001564  EE20 F004          	lfsr	2,4
  6617  001568  5047               	movf	_uc_ptr,w,c
  6618  00156A  26D9               	addwf	fsr2l,f,c
  6619  00156C  5048               	movf	_uc_ptr+1,w,c
  6620  00156E  22DA               	addwfc	fsr2h,f,c
  6621  001570  0E04               	movlw	4
  6622  001572  62DF               	cpfseq	indf2,c
  6623  001574  D019               	goto	i1l3154
  6624                           
  6625                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6626  001576  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6627  001578  0E20               	movlw	32
  6628  00157A  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6629  00157C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6630  00157E  C048  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6631  001582  C047  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6632  001586  EE20 F004          	lfsr	2,4
  6633  00158A  5047               	movf	_uc_ptr,w,c
  6634  00158C  26D9               	addwf	fsr2l,f,c
  6635  00158E  5048               	movf	_uc_ptr+1,w,c
  6636  001590  22DA               	addwfc	fsr2h,f,c
  6637  001592  50DF               	movf	indf2,w,c
  6638  001594  EC71  F00F         	call	i1_ToMainLow_sendmsg
  6639                           
  6640                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6641  001598  EE20 F004          	lfsr	2,4
  6642  00159C  5047               	movf	_uc_ptr,w,c
  6643  00159E  26D9               	addwf	fsr2l,f,c
  6644  0015A0  5048               	movf	_uc_ptr+1,w,c
  6645  0015A2  22DA               	addwfc	fsr2h,f,c
  6646  0015A4  0E00               	movlw	0
  6647  0015A6  6EDF               	movwf	indf2,c
  6648  0015A8                     i1l3154:
  6649                           
  6650                           ;my_uart.c: 61: }
  6651                           ;my_uart.c: 62: }
  6652                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6653  0015A8  A64A               	btfss	_USART_Status,3,c
  6654  0015AA  0012               	return	
  6655                           
  6656                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6657  0015AC  98AB               	bcf	4011,4,c	;volatile
  6658                           
  6659                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6660  0015AE  88AB               	bsf	4011,4,c	;volatile
  6661                           
  6662                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6663  0015B0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6664  0015B2  0E1E               	movlw	30
  6665  0015B4  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6666  0015B6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6667  0015B8  0E00               	movlw	0
  6668  0015BA  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6669  0015BC  0E00               	movlw	0
  6670  0015BE  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6671  0015C0  0E00               	movlw	0
  6672  0015C2  EC71  F00F         	call	i1_ToMainLow_sendmsg
  6673  0015C6  0012               	return	
  6674  0015C8                     __end_of_uart_recv_int_handler:
  6675                           	opt stack 0
  6676                           pclatu	equ	0xFFB
  6677                           pclath	equ	0xFFA
  6678                           tblptru	equ	0xFF8
  6679                           tblptrh	equ	0xFF7
  6680                           tblptrl	equ	0xFF6
  6681                           tablat	equ	0xFF5
  6682                           prodh	equ	0xFF4
  6683                           prodl	equ	0xFF3
  6684                           intcon	equ	0xFF2
  6685                           intcon2	equ	0xFF1
  6686                           postinc0	equ	0xFEE
  6687                           fsr0h	equ	0xFEA
  6688                           fsr0l	equ	0xFE9
  6689                           wreg	equ	0xFE8
  6690                           indf1	equ	0xFE7
  6691                           postdec1	equ	0xFE5
  6692                           fsr1h	equ	0xFE2
  6693                           fsr1l	equ	0xFE1
  6694                           bsr	equ	0xFE0
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function i1_ToMainLow_sendmsg *****************
  6703 ;; Defined at:
  6704 ;;		line 103 in file "src/messages.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  length          1    wreg     unsigned char 
  6707 ;;  msgtype         1   22[COMRAM] unsigned char 
  6708 ;;  data            2   23[COMRAM] PTR void 
  6709 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  6710 ;;		 -> main@ctrl(2), main@uc(5), NULL(0), 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  length          1   25[COMRAM] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      char 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6722 ;;      Params:         3       0       0       0       0
  6723 ;;      Locals:         1       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0
  6725 ;;      Totals:         4       0       0       0       0
  6726 ;;Total ram usage:        4 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    7
  6729 ;; This function calls:
  6730 ;;		i1_send_msg
  6731 ;; This function is called by:
  6732 ;;		_InterruptHandlerLow
  6733 ;;		_uart_recv_int_handler
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text39
  6738  001EE2                     __ptext39:
  6739                           	opt stack 0
  6740  001EE2                     i1_ToMainLow_sendmsg:
  6741                           	opt stack 17
  6742                           
  6743                           ;incstack = 0
  6744                           ;i1ToMainLow_sendmsg@length stored from wreg
  6745  001EE2  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6746                           
  6747                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6748                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6749  001EE6  0101               	movlb	1	; () banked
  6750  001EE8  0E01               	movlw	high _ToMainLow_MQ
  6751  001EEA  6E0C               	movwf	i1send_msg@qptr+1,c
  6752  001EEC  0101               	movlb	1	; () banked
  6753  001EEE  0EA3               	movlw	low _ToMainLow_MQ
  6754  001EF0  6E0B               	movwf	i1send_msg@qptr,c
  6755  001EF2  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6756  001EF6  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6757  001EFA  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6758  001EFE  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6759  001F02  EC41  F00A         	call	i1_send_msg	;wreg free
  6760  001F06  0012               	return	
  6761  001F08                     __end_ofi1_ToMainLow_sendmsg:
  6762                           	opt stack 0
  6763                           pclatu	equ	0xFFB
  6764                           pclath	equ	0xFFA
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           intcon	equ	0xFF2
  6772                           intcon2	equ	0xFF1
  6773                           postinc0	equ	0xFEE
  6774                           fsr0h	equ	0xFEA
  6775                           fsr0l	equ	0xFE9
  6776                           wreg	equ	0xFE8
  6777                           indf1	equ	0xFE7
  6778                           postdec1	equ	0xFE5
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           bsr	equ	0xFE0
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function i1_send_msg *****************
  6790 ;; Defined at:
  6791 ;;		line 24 in file "src/messages.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6794 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6795 ;;  length          1   12[COMRAM] unsigned char 
  6796 ;;  msgtype         1   13[COMRAM] unsigned char 
  6797 ;;  data            2   14[COMRAM] PTR void 
  6798 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  6799 ;;		 -> i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  6800 ;;		 -> main@uc(5), NULL(0), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6803 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6804 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6805 ;;  send_msg        2   17[COMRAM] unsigned int 
  6806 ;;  send_msg        1   19[COMRAM] unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      char 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6816 ;;      Params:         6       0       0       0       0
  6817 ;;      Locals:         5       0       0       0       0
  6818 ;;      Temps:          1       0       0       0       0
  6819 ;;      Totals:        12       0       0       0       0
  6820 ;;Total ram usage:       12 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    6
  6823 ;; This function calls:
  6824 ;;		i1_memcpy
  6825 ;; This function is called by:
  6826 ;;		i1_ToMainLow_sendmsg
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text40
  6831  001482                     __ptext40:
  6832                           	opt stack 0
  6833  001482                     i1_send_msg:
  6834                           	opt stack 17
  6835                           
  6836                           ;messages.c: 25: unsigned char slot;
  6837                           ;messages.c: 27: msg *qmsg;
  6838                           ;messages.c: 28: size_t tlength = length;
  6839                           
  6840                           ;incstack = 0
  6841  001482  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6842  001486  6A13               	clrf	i1send_msg@tlength+1,c
  6843                           
  6844                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6845  001488  EE20 F034          	lfsr	2,52
  6846  00148C  500B               	movf	i1send_msg@qptr,w,c
  6847  00148E  26D9               	addwf	fsr2l,f,c
  6848  001490  500C               	movf	i1send_msg@qptr+1,w,c
  6849  001492  22DA               	addwfc	fsr2h,f,c
  6850  001494  50DF               	movf	indf2,w,c
  6851  001496  6E14               	movwf	i1send_msg@slot,c
  6852                           
  6853                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6854  001498  5014               	movf	i1send_msg@slot,w,c
  6855  00149A  0D0D               	mullw	13
  6856  00149C  50F3               	movf	prodl,w,c
  6857  00149E  240B               	addwf	i1send_msg@qptr,w,c
  6858  0014A0  6E15               	movwf	i1send_msg@qmsg,c
  6859  0014A2  50F4               	movf	prodh,w,c
  6860  0014A4  200C               	addwfc	i1send_msg@qptr+1,w,c
  6861  0014A6  6E16               	movwf	i1send_msg@qmsg+1,c
  6862                           
  6863                           ;messages.c: 41: if (qmsg->full != 0) {
  6864  0014A8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6865  0014AC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6866  0014B0  50DF               	movf	indf2,w,c
  6867  0014B2  B4D8               	btfsc	status,2,c
  6868  0014B4  D002               	goto	i1l3090
  6869                           
  6870                           ;messages.c: 42: return (-1);
  6871  0014B6  0EFF               	movlw	255
  6872  0014B8  0012               	return	
  6873  0014BA                     i1l3090:
  6874                           
  6875                           ;messages.c: 43: }
  6876                           ;messages.c: 46: qmsg->length = length;
  6877  0014BA  EE20 F001          	lfsr	2,1
  6878  0014BE  5015               	movf	i1send_msg@qmsg,w,c
  6879  0014C0  26D9               	addwf	fsr2l,f,c
  6880  0014C2  5016               	movf	i1send_msg@qmsg+1,w,c
  6881  0014C4  22DA               	addwfc	fsr2h,f,c
  6882  0014C6  C00D  FFDF         	movff	i1send_msg@length,indf2
  6883                           
  6884                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6885  0014CA  EE20 F002          	lfsr	2,2
  6886  0014CE  5015               	movf	i1send_msg@qmsg,w,c
  6887  0014D0  26D9               	addwf	fsr2l,f,c
  6888  0014D2  5016               	movf	i1send_msg@qmsg+1,w,c
  6889  0014D4  22DA               	addwfc	fsr2h,f,c
  6890  0014D6  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6891                           
  6892                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6893  0014DA  0E03               	movlw	3
  6894  0014DC  2415               	addwf	i1send_msg@qmsg,w,c
  6895  0014DE  6E01               	movwf	i1memcpy@d1,c
  6896  0014E0  0E00               	movlw	0
  6897  0014E2  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6898  0014E4  6E02               	movwf	i1memcpy@d1+1,c
  6899  0014E6  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6900  0014EA  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6901  0014EE  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6902  0014F2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6903  0014F6  EC70  F00E         	call	i1_memcpy	;wreg free
  6904                           
  6905                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6906  0014FA  EE20 F034          	lfsr	2,52
  6907  0014FE  500B               	movf	i1send_msg@qptr,w,c
  6908  001500  26D9               	addwf	fsr2l,f,c
  6909  001502  500C               	movf	i1send_msg@qptr+1,w,c
  6910  001504  22DA               	addwfc	fsr2h,f,c
  6911  001506  EE10 F034          	lfsr	1,52
  6912  00150A  500B               	movf	i1send_msg@qptr,w,c
  6913  00150C  26E1               	addwf	fsr1l,f,c
  6914  00150E  500C               	movf	i1send_msg@qptr+1,w,c
  6915  001510  22E2               	addwfc	fsr1h,f,c
  6916  001512  50E7               	movf	indf1,w,c
  6917  001514  6E11               	movwf	??i1_send_msg& (0+255),c
  6918  001516  2811               	incf	??i1_send_msg,w,c
  6919  001518  0B03               	andlw	3
  6920  00151A  6EDF               	movwf	indf2,c
  6921                           
  6922                           ;messages.c: 59: qmsg->full = 1;
  6923  00151C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6924  001520  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6925  001524  0E01               	movlw	1
  6926  001526  6EDF               	movwf	indf2,c
  6927                           
  6928                           ;messages.c: 60: return (1);
  6929  001528  0E01               	movlw	1
  6930  00152A  0012               	return	
  6931  00152C                     __end_ofi1_send_msg:
  6932                           	opt stack 0
  6933                           pclatu	equ	0xFFB
  6934                           pclath	equ	0xFFA
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           postinc0	equ	0xFEE
  6944                           fsr0h	equ	0xFEA
  6945                           fsr0l	equ	0xFE9
  6946                           wreg	equ	0xFE8
  6947                           indf1	equ	0xFE7
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           bsr	equ	0xFE0
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function i1_memcpy *****************
  6960 ;; Defined at:
  6961 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  d1              2    0[COMRAM] PTR void 
  6964 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6965 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6966 ;;		 -> main@msgbuffer(11), NULL(0), 
  6967 ;;  s1              2    2[COMRAM] PTR const void 
  6968 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6969 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6970 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  6971 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6972 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  6973 ;;		 -> main@uc(5), NULL(0), 
  6974 ;;  n               2    4[COMRAM] unsigned int 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6977 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6978 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6979 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  6980 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6981 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  6982 ;;		 -> main@uc(5), NULL(0), 
  6983 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6984 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6985 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6986 ;;		 -> main@msgbuffer(11), NULL(0), 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2    0[COMRAM] PTR void 
  6989 ;; Registers used:
  6990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6996 ;;      Params:         6       0       0       0       0
  6997 ;;      Locals:         4       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0
  6999 ;;      Totals:        10       0       0       0       0
  7000 ;;Total ram usage:       10 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    5
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		i1_send_msg
  7007 ;;		i1_recv_msg
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text41
  7012  001CE0                     __ptext41:
  7013                           	opt stack 0
  7014  001CE0                     i1_memcpy:
  7015                           	opt stack 17
  7016                           
  7017                           ;incstack = 0
  7018  001CE0  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7019  001CE4  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7020  001CE8  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7021  001CEC  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7022  001CF0  D00E               	goto	i1l3066
  7023  001CF2                     i1l3060:
  7024  001CF2  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7025  001CF6  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7026  001CFA  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7027  001CFE  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7028  001D02  CFDF FFE7          	movff	indf2,indf1
  7029  001D06  4A09               	infsnz	i1memcpy@s,f,c
  7030  001D08  2A0A               	incf	i1memcpy@s+1,f,c
  7031  001D0A  4A07               	infsnz	i1memcpy@d,f,c
  7032  001D0C  2A08               	incf	i1memcpy@d+1,f,c
  7033  001D0E                     i1l3066:
  7034  001D0E  0605               	decf	i1memcpy@n,f,c
  7035  001D10  A0D8               	btfss	status,0,c
  7036  001D12  0606               	decf	i1memcpy@n+1,f,c
  7037  001D14  2805               	incf	i1memcpy@n& (0+255),w,c
  7038  001D16  B4D8               	btfsc	status,2,c
  7039  001D18  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7040  001D1A  B4D8               	btfsc	status,2,c
  7041                           
  7042                           ;	Return value of i1_memcpy is never used
  7043  001D1C  0012               	return	
  7044  001D1E  D7E9               	goto	i1l3060
  7045  001D20                     __end_ofi1_memcpy:
  7046                           	opt stack 0
  7047                           pclatu	equ	0xFFB
  7048                           pclath	equ	0xFFA
  7049                           tblptru	equ	0xFF8
  7050                           tblptrh	equ	0xFF7
  7051                           tblptrl	equ	0xFF6
  7052                           tablat	equ	0xFF5
  7053                           prodh	equ	0xFF4
  7054                           prodl	equ	0xFF3
  7055                           intcon	equ	0xFF2
  7056                           intcon2	equ	0xFF1
  7057                           postinc0	equ	0xFEE
  7058                           fsr0h	equ	0xFEA
  7059                           fsr0l	equ	0xFE9
  7060                           wreg	equ	0xFE8
  7061                           indf1	equ	0xFE7
  7062                           postdec1	equ	0xFE5
  7063                           fsr1h	equ	0xFE2
  7064                           fsr1l	equ	0xFE1
  7065                           bsr	equ	0xFE0
  7066                           indf2	equ	0xFDF
  7067                           postinc2	equ	0xFDE
  7068                           postdec2	equ	0xFDD
  7069                           fsr2h	equ	0xFDA
  7070                           fsr2l	equ	0xFD9
  7071                           status	equ	0xFD8
  7072                           
  7073 ;; *************** function _ReadUSART *****************
  7074 ;; Defined at:
  7075 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  data            1    0[COMRAM] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7089 ;;      Params:         0       0       0       0       0
  7090 ;;      Locals:         1       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0
  7092 ;;      Totals:         1       0       0       0       0
  7093 ;;Total ram usage:        1 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    5
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_uart_recv_int_handler
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text42
  7104  001F4A                     __ptext42:
  7105                           	opt stack 0
  7106  001F4A                     _ReadUSART:
  7107                           	opt stack 18
  7108                           
  7109                           ;incstack = 0
  7110  001F4A  0EF2               	movlw	242
  7111  001F4C  164A               	andwf	_USART_Status,f,c
  7112  001F4E  ACAB               	btfss	4011,6,c	;volatile
  7113  001F50  D003               	goto	i1l527
  7114  001F52  904A               	bcf	_USART_Status,0,c
  7115  001F54  B0AB               	btfsc	4011,0,c	;volatile
  7116  001F56  804A               	bsf	_USART_Status,0,c
  7117  001F58                     i1l527:
  7118  001F58  B4AB               	btfsc	4011,2,c	;volatile
  7119  001F5A  844A               	bsf	_USART_Status,2,c
  7120  001F5C  B2AB               	btfsc	4011,1,c	;volatile
  7121  001F5E  864A               	bsf	_USART_Status,3,c
  7122  001F60  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7123  001F64  5001               	movf	ReadUSART@data,w,c
  7124  001F66  0012               	return	
  7125  001F68                     __end_of_ReadUSART:
  7126                           	opt stack 0
  7127                           pclatu	equ	0xFFB
  7128                           pclath	equ	0xFFA
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           intcon2	equ	0xFF1
  7137                           postinc0	equ	0xFEE
  7138                           fsr0h	equ	0xFEA
  7139                           fsr0l	equ	0xFE9
  7140                           wreg	equ	0xFE8
  7141                           indf1	equ	0xFE7
  7142                           postdec1	equ	0xFE5
  7143                           fsr1h	equ	0xFE2
  7144                           fsr1l	equ	0xFE1
  7145                           bsr	equ	0xFE0
  7146                           indf2	equ	0xFDF
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function _InterruptHandlerHigh *****************
  7154 ;; Defined at:
  7155 ;;		line 83 in file "src/interrupts.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;		None               void
  7162 ;; Registers used:
  7163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7169 ;;      Params:         0       0       0       0       0
  7170 ;;      Locals:         0       0       0       0       0
  7171 ;;      Temps:          0      14       0       0       0
  7172 ;;      Totals:         0      14       0       0       0
  7173 ;;Total ram usage:       14 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    4
  7176 ;; This function calls:
  7177 ;;		_SleepIfOkay
  7178 ;;		_i2c_int_handler
  7179 ;;		_timer0_int_handler
  7180 ;; This function is called by:
  7181 ;;		Interrupt level 2
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	intcode
  7186  000008                     __pintcode:
  7187                           	opt stack 0
  7188  000008                     _InterruptHandlerHigh:
  7189                           	opt stack 16
  7190                           
  7191                           ;incstack = 0
  7192  000008  CFFA F094          	movff	pclath,??_InterruptHandlerHigh
  7193  00000C  CFFB F095          	movff	pclatu,??_InterruptHandlerHigh+1
  7194  000010  EFE4  F00A         	goto	int_func
  7195                           pclatu	equ	0xFFB
  7196                           pclath	equ	0xFFA
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           intcon2	equ	0xFF1
  7205                           postinc0	equ	0xFEE
  7206                           fsr0h	equ	0xFEA
  7207                           fsr0l	equ	0xFE9
  7208                           wreg	equ	0xFE8
  7209                           indf1	equ	0xFE7
  7210                           postdec1	equ	0xFE5
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           bsr	equ	0xFE0
  7214                           indf2	equ	0xFDF
  7215                           postinc2	equ	0xFDE
  7216                           postdec2	equ	0xFDD
  7217                           fsr2h	equ	0xFDA
  7218                           fsr2l	equ	0xFD9
  7219                           status	equ	0xFD8
  7220                           
  7221                           	psect	intcode_body
  7222  0015C8                     __pintcode_body:
  7223                           	opt stack 16
  7224  0015C8                     int_func:
  7225                           	opt stack 16
  7226  0015C8  CFE9 F096          	movff	fsr0l,??_InterruptHandlerHigh+2
  7227  0015CC  CFEA F097          	movff	fsr0h,??_InterruptHandlerHigh+3
  7228  0015D0  CFE1 F098          	movff	fsr1l,??_InterruptHandlerHigh+4
  7229  0015D4  CFE2 F099          	movff	fsr1h,??_InterruptHandlerHigh+5
  7230  0015D8  CFD9 F09A          	movff	fsr2l,??_InterruptHandlerHigh+6
  7231  0015DC  CFDA F09B          	movff	fsr2h,??_InterruptHandlerHigh+7
  7232  0015E0  CFF3 F09C          	movff	prodl,??_InterruptHandlerHigh+8
  7233  0015E4  CFF4 F09D          	movff	prodh,??_InterruptHandlerHigh+9
  7234  0015E8  CFF6 F09E          	movff	tblptrl,??_InterruptHandlerHigh+10
  7235  0015EC  CFF7 F09F          	movff	tblptrh,??_InterruptHandlerHigh+11
  7236  0015F0  CFF8 F0A0          	movff	tblptru,??_InterruptHandlerHigh+12
  7237  0015F4  CFF5 F0A1          	movff	tablat,??_InterruptHandlerHigh+13
  7238                           
  7239                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  7240  0015F8  A69E               	btfss	3998,3,c	;volatile
  7241  0015FA  D003               	goto	i2l3202
  7242                           
  7243                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  7244  0015FC  969E               	bcf	3998,3,c	;volatile
  7245                           
  7246                           ;interrupts.c: 92: i2c_int_handler();
  7247  0015FE  EC6B  F000         	call	_i2c_int_handler	;wreg free
  7248  001602                     i2l3202:
  7249                           
  7250                           ;interrupts.c: 93: }
  7251                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  7252  001602  A4F2               	btfss	intcon,2,c	;volatile
  7253  001604  D003               	goto	i2l3208
  7254                           
  7255                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  7256  001606  94F2               	bcf	intcon,2,c	;volatile
  7257                           
  7258                           ;interrupts.c: 99: timer0_int_handler();
  7259  001608  ECEF  F00F         	call	_timer0_int_handler	;wreg free
  7260  00160C                     i2l3208:
  7261                           
  7262                           ;interrupts.c: 100: }
  7263                           ;interrupts.c: 102: if(INTCONbits.RBIF){
  7264  00160C  A0F2               	btfss	intcon,0,c	;volatile
  7265  00160E  D00A               	goto	i2l3214
  7266                           
  7267                           ;interrupts.c: 103: INTCONbits.RBIF = 0;
  7268  001610  90F2               	bcf	intcon,0,c	;volatile
  7269                           
  7270                           ;interrupts.c: 104: LATB = 0;
  7271  001612  0E00               	movlw	0
  7272  001614  6E8A               	movwf	3978,c	;volatile
  7273                           
  7274                           ;interrupts.c: 105: LATA = !PORTA;
  7275  001616  5080               	movf	3968,w,c	;volatile
  7276  001618  A4D8               	btfss	status,2,c
  7277  00161A  D002               	goto	i2u223_40
  7278  00161C  0E01               	movlw	1
  7279  00161E  D001               	goto	i2u223_46
  7280  001620                     i2u223_40:
  7281  001620  0E00               	movlw	0
  7282  001622                     i2u223_46:
  7283  001622  6E89               	movwf	3977,c	;volatile
  7284  001624                     i2l3214:
  7285                           
  7286                           ;interrupts.c: 107: }
  7287                           ;interrupts.c: 116: SleepIfOkay();
  7288  001624  EC7B  F00D         	call	_SleepIfOkay	;wreg free
  7289  001628  C0A1  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7290  00162C  C0A0  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7291  001630  C09F  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7292  001634  C09E  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7293  001638  C09D  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7294  00163C  C09C  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7295  001640  C09B  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7296  001644  C09A  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7297  001648  C099  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7298  00164C  C098  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7299  001650  C097  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7300  001654  C096  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7301  001658  C095  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7302  00165C  C094  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7303  001660  0011               	retfie		f
  7304  001662                     __end_of_InterruptHandlerHigh:
  7305                           	opt stack 0
  7306                           pclatu	equ	0xFFB
  7307                           pclath	equ	0xFFA
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           intcon	equ	0xFF2
  7315                           intcon2	equ	0xFF1
  7316                           postinc0	equ	0xFEE
  7317                           fsr0h	equ	0xFEA
  7318                           fsr0l	equ	0xFE9
  7319                           wreg	equ	0xFE8
  7320                           indf1	equ	0xFE7
  7321                           postdec1	equ	0xFE5
  7322                           fsr1h	equ	0xFE2
  7323                           fsr1l	equ	0xFE1
  7324                           bsr	equ	0xFE0
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           postdec2	equ	0xFDD
  7328                           fsr2h	equ	0xFDA
  7329                           fsr2l	equ	0xFD9
  7330                           status	equ	0xFD8
  7331                           
  7332 ;; *************** function _timer0_int_handler *****************
  7333 ;; Defined at:
  7334 ;;		line 17 in file "src/user_interrupts.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  msgtype         2    0        int 
  7339 ;;  length          2    0        int 
  7340 ;;  val             2    0        unsigned int 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;		None               void
  7343 ;; Registers used:
  7344 ;;		None
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7350 ;;      Params:         0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0
  7353 ;;      Totals:         0       0       0       0       0
  7354 ;;Total ram usage:        0 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_InterruptHandlerHigh
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text44
  7364  001FDE                     __ptext44:
  7365                           	opt stack 0
  7366  001FDE                     _timer0_int_handler:
  7367                           	opt stack 19
  7368                           
  7369                           ;incstack = 0
  7370  001FDE  0012               	return	
  7371  001FE0                     __end_of_timer0_int_handler:
  7372                           	opt stack 0
  7373                           pclatu	equ	0xFFB
  7374                           pclath	equ	0xFFA
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           prodh	equ	0xFF4
  7380                           prodl	equ	0xFF3
  7381                           intcon	equ	0xFF2
  7382                           intcon2	equ	0xFF1
  7383                           postinc0	equ	0xFEE
  7384                           fsr0h	equ	0xFEA
  7385                           fsr0l	equ	0xFE9
  7386                           wreg	equ	0xFE8
  7387                           indf1	equ	0xFE7
  7388                           postdec1	equ	0xFE5
  7389                           fsr1h	equ	0xFE2
  7390                           fsr1l	equ	0xFE1
  7391                           bsr	equ	0xFE0
  7392                           indf2	equ	0xFDF
  7393                           postinc2	equ	0xFDE
  7394                           postdec2	equ	0xFDD
  7395                           fsr2h	equ	0xFDA
  7396                           fsr2l	equ	0xFD9
  7397                           status	equ	0xFD8
  7398                           
  7399 ;; *************** function _i2c_int_handler *****************
  7400 ;; Defined at:
  7401 ;;		line 100 in file "src/my_i2c.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  error_buf       3   11[BANK0 ] unsigned char [3]
  7406 ;;  data_read       1   19[BANK0 ] unsigned char 
  7407 ;;  msg_ready       1   18[BANK0 ] unsigned char 
  7408 ;;  msg_to_send     1   17[BANK0 ] unsigned char 
  7409 ;;  i2c_data        1   16[BANK0 ] unsigned char 
  7410 ;;  overrun_erro    1   15[BANK0 ] unsigned char 
  7411 ;;  data_written    1   14[BANK0 ] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;		None               void
  7414 ;; Registers used:
  7415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7421 ;;      Params:         0       0       0       0       0
  7422 ;;      Locals:         0       9       0       0       0
  7423 ;;      Temps:          0       2       0       0       0
  7424 ;;      Totals:         0      11       0       0       0
  7425 ;;Total ram usage:       11 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    3
  7428 ;; This function calls:
  7429 ;;		_ToMainHigh_sendmsg
  7430 ;;		_handle_start
  7431 ;; This function is called by:
  7432 ;;		_InterruptHandlerHigh
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text45
  7437  0000D6                     __ptext45:
  7438                           	opt stack 0
  7439  0000D6                     _i2c_int_handler:
  7440                           	opt stack 16
  7441                           
  7442                           ;my_i2c.c: 101: unsigned char i2c_data;
  7443                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7444                           
  7445                           ;incstack = 0
  7446  0000D6  0100               	movlb	0	; () banked
  7447  0000D8  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7448  0000DA  0E00               	movlw	0
  7449  0000DC  0100               	movlb	0	; () banked
  7450  0000DE  0100               	movlb	0	; () banked
  7451  0000E0  6F93               	movwf	i2c_int_handler@data_read& (0+255),b
  7452  0000E2  0100               	movlb	0	; () banked
  7453  0000E4  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7454                           
  7455                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7456  0000E6  0100               	movlb	0	; () banked
  7457  0000E8  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7458  0000EA  0E00               	movlw	0
  7459  0000EC  0100               	movlb	0	; () banked
  7460  0000EE  0100               	movlb	0	; () banked
  7461  0000F0  6F8E               	movwf	i2c_int_handler@data_written& (0+255),b
  7462  0000F2  0100               	movlb	0	; () banked
  7463  0000F4  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7464                           
  7465                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7466  0000F6  0100               	movlb	0	; () banked
  7467  0000F8  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7468  0000FA  0E00               	movlw	0
  7469  0000FC  0100               	movlb	0	; () banked
  7470  0000FE  0100               	movlb	0	; () banked
  7471  000100  6F92               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7472  000102  0100               	movlb	0	; () banked
  7473  000104  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7474                           
  7475                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7476  000106  0100               	movlb	0	; () banked
  7477  000108  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7478  00010A  0E00               	movlw	0
  7479  00010C  0100               	movlb	0	; () banked
  7480  00010E  0100               	movlb	0	; () banked
  7481  000110  6F91               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7482  000112  0100               	movlb	0	; () banked
  7483  000114  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7484                           
  7485                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7486  000116  0100               	movlb	0	; () banked
  7487  000118  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7488  00011A  0E00               	movlw	0
  7489  00011C  0100               	movlb	0	; () banked
  7490  00011E  0100               	movlb	0	; () banked
  7491  000120  6F8F               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7492  000122  0100               	movlb	0	; () banked
  7493  000124  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7497                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7498  000126  ACC6               	btfss	4038,6,c	;volatile
  7499  000128  D029               	goto	i2l3230
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7503  00012A  9CC6               	bcf	4038,6,c	;volatile
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7507  00012C  0100               	movlb	0	; () banked
  7508  00012E  EE20 F00C          	lfsr	2,12
  7509  000132  0100               	movlb	0	; () banked
  7510  000134  51D4               	movf	_ic_ptr& (0+255),w,b
  7511  000136  26D9               	addwf	fsr2l,f,c
  7512  000138  0100               	movlb	0	; () banked
  7513  00013A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7514  00013C  22DA               	addwfc	fsr2h,f,c
  7515  00013E  0E05               	movlw	5
  7516  000140  6EDF               	movwf	indf2,c
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 116: overrun_error = 1;
  7520  000142  0100               	movlb	0	; () banked
  7521  000144  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7522  000146  0E01               	movlw	1
  7523  000148  0100               	movlb	0	; () banked
  7524  00014A  0100               	movlb	0	; () banked
  7525  00014C  6F8F               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7526  00014E  0100               	movlb	0	; () banked
  7527  000150  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7531  000152  0100               	movlb	0	; () banked
  7532  000154  EE20 F00E          	lfsr	2,14
  7533  000158  0100               	movlb	0	; () banked
  7534  00015A  51D4               	movf	_ic_ptr& (0+255),w,b
  7535  00015C  26D9               	addwf	fsr2l,f,c
  7536  00015E  0100               	movlb	0	; () banked
  7537  000160  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7538  000162  22DA               	addwfc	fsr2h,f,c
  7539  000164  2ADF               	incf	indf2,f,c
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7543  000166  0100               	movlb	0	; () banked
  7544  000168  EE20 F00D          	lfsr	2,13
  7545  00016C  0100               	movlb	0	; () banked
  7546  00016E  51D4               	movf	_ic_ptr& (0+255),w,b
  7547  000170  26D9               	addwf	fsr2l,f,c
  7548  000172  0100               	movlb	0	; () banked
  7549  000174  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7550  000176  22DA               	addwfc	fsr2h,f,c
  7551  000178  0E04               	movlw	4
  7552  00017A  6EDF               	movwf	indf2,c
  7553  00017C                     i2l3230:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;my_i2c.c: 119: }
  7557                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7558  00017C  A0C7               	btfss	4039,0,c	;volatile
  7559  00017E  D00A               	goto	i2l3236
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7563  000180  CFC9 F090          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;my_i2c.c: 123: data_read = 1;
  7567  000184  0100               	movlb	0	; () banked
  7568  000186  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7569  000188  0E01               	movlw	1
  7570  00018A  0100               	movlb	0	; () banked
  7571  00018C  0100               	movlb	0	; () banked
  7572  00018E  6F93               	movwf	i2c_int_handler@data_read& (0+255),b
  7573  000190  0100               	movlb	0	; () banked
  7574  000192  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7575  000194                     i2l3236:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;my_i2c.c: 124: }
  7579                           ;my_i2c.c: 126: if (!overrun_error) {
  7580  000194  0100               	movlb	0	; () banked
  7581  000196  0100               	movlb	0	; () banked
  7582  000198  678F               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7583  00019A  D1CE               	goto	i2l299
  7584  00019C  D1B7               	goto	i2l3324
  7585  00019E                     i2l301:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;my_i2c.c: 129: {
  7589                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7590  00019E  A6C7               	btfss	4039,3,c	;volatile
  7591  0001A0  D1CB               	goto	i2l299
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;my_i2c.c: 132: handle_start(data_read);
  7595  0001A2  0100               	movlb	0	; () banked
  7596  0001A4  0100               	movlb	0	; () banked
  7597  0001A6  5193               	movf	i2c_int_handler@data_read& (0+255),w,b
  7598  0001A8  ECDD  F009         	call	_handle_start
  7599                           
  7600                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7601  0001AC  0100               	movlb	0	; () banked
  7602  0001AE  EE20 F00C          	lfsr	2,12
  7603  0001B2  0100               	movlb	0	; () banked
  7604  0001B4  51D4               	movf	_ic_ptr& (0+255),w,b
  7605  0001B6  26D9               	addwf	fsr2l,f,c
  7606  0001B8  0100               	movlb	0	; () banked
  7607  0001BA  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7608  0001BC  22DA               	addwfc	fsr2h,f,c
  7609  0001BE  0E08               	movlw	8
  7610  0001C0  62DF               	cpfseq	indf2,c
  7611  0001C2  D1BA               	goto	i2l299
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;my_i2c.c: 135: data_read = 0;
  7615  0001C4  0100               	movlb	0	; () banked
  7616  0001C6  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7617  0001C8  0E00               	movlw	0
  7618  0001CA  0100               	movlb	0	; () banked
  7619  0001CC  0100               	movlb	0	; () banked
  7620  0001CE  6F93               	movwf	i2c_int_handler@data_read& (0+255),b
  7621  0001D0  0100               	movlb	0	; () banked
  7622  0001D2  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7623                           
  7624                           ;my_i2c.c: 136: msg_to_send = 1;
  7625  0001D4  0100               	movlb	0	; () banked
  7626  0001D6  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7627  0001D8  0E01               	movlw	1
  7628  0001DA  0100               	movlb	0	; () banked
  7629  0001DC  0100               	movlb	0	; () banked
  7630  0001DE  6F91               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7631  0001E0  D187               	goto	L11
  7632  0001E2                     i2l305:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;my_i2c.c: 142: {
  7636                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7637  0001E2  A8C7               	btfss	4039,4,c	;volatile
  7638  0001E4  D030               	goto	i2l3256
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7642  0001E6  0100               	movlb	0	; () banked
  7643  0001E8  EE20 F00B          	lfsr	2,11
  7644  0001EC  0100               	movlb	0	; () banked
  7645  0001EE  51D4               	movf	_ic_ptr& (0+255),w,b
  7646  0001F0  26D9               	addwf	fsr2l,f,c
  7647  0001F2  0100               	movlb	0	; () banked
  7648  0001F4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7649  0001F6  22DA               	addwfc	fsr2h,f,c
  7650  0001F8  2ADF               	incf	indf2,f,c
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;my_i2c.c: 148: if (data_read) {
  7654  0001FA  0100               	movlb	0	; () banked
  7655  0001FC  0100               	movlb	0	; () banked
  7656  0001FE  5193               	movf	i2c_int_handler@data_read& (0+255),w,b
  7657  000200  B4D8               	btfsc	status,2,c
  7658  000202  D179               	goto	L13
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7662  000204  BAC7               	btfsc	4039,5,c	;volatile
  7663  000206  D009               	goto	i2l3254
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 150: msg_ready = 1;
  7667  000208  0100               	movlb	0	; () banked
  7668  00020A  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7669  00020C  0E01               	movlw	1
  7670  00020E  0100               	movlb	0	; () banked
  7671  000210  0100               	movlb	0	; () banked
  7672  000212  6F92               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7673  000214  0100               	movlb	0	; () banked
  7674  000216  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7675                           
  7676                           ;my_i2c.c: 151: } else {
  7677  000218  D16E               	goto	L13
  7678  00021A                     i2l3254:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7682  00021A  0100               	movlb	0	; () banked
  7683  00021C  EE20 F00E          	lfsr	2,14
  7684  000220  0100               	movlb	0	; () banked
  7685  000222  51D4               	movf	_ic_ptr& (0+255),w,b
  7686  000224  26D9               	addwf	fsr2l,f,c
  7687  000226  0100               	movlb	0	; () banked
  7688  000228  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7689  00022A  22DA               	addwfc	fsr2h,f,c
  7690  00022C  2ADF               	incf	indf2,f,c
  7691                           
  7692                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7693  00022E  0100               	movlb	0	; () banked
  7694  000230  EE20 F00D          	lfsr	2,13
  7695  000234  0100               	movlb	0	; () banked
  7696  000236  51D4               	movf	_ic_ptr& (0+255),w,b
  7697  000238  26D9               	addwf	fsr2l,f,c
  7698  00023A  0100               	movlb	0	; () banked
  7699  00023C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7700  00023E  22DA               	addwfc	fsr2h,f,c
  7701  000240  0E06               	movlw	6
  7702  000242  6EDF               	movwf	indf2,c
  7703                           
  7704                           ; BSR set to: 0
  7705  000244  D158               	goto	L13
  7706  000246                     i2l3256:
  7707                           
  7708                           ; BSR set to: 0
  7709  000246  0100               	movlb	0	; () banked
  7710  000248  0100               	movlb	0	; () banked
  7711  00024A  5193               	movf	i2c_int_handler@data_read& (0+255),w,b
  7712  00024C  B4D8               	btfsc	status,2,c
  7713  00024E  D174               	goto	i2l299
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7717  000250  0100               	movlb	0	; () banked
  7718  000252  EE20 F00B          	lfsr	2,11
  7719  000256  0100               	movlb	0	; () banked
  7720  000258  51D4               	movf	_ic_ptr& (0+255),w,b
  7721  00025A  26D9               	addwf	fsr2l,f,c
  7722  00025C  0100               	movlb	0	; () banked
  7723  00025E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7724  000260  22DA               	addwfc	fsr2h,f,c
  7725  000262  2ADF               	incf	indf2,f,c
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7729  000264  BAC7               	btfsc	4039,5,c	;volatile
  7730  000266  D019               	goto	i2l3272
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7734  000268  B4C7               	btfsc	4039,2,c	;volatile
  7735  00026A  D00B               	goto	i2l3266
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7739  00026C  0100               	movlb	0	; () banked
  7740  00026E  EE20 F00C          	lfsr	2,12
  7741  000272  0100               	movlb	0	; () banked
  7742  000274  51D4               	movf	_ic_ptr& (0+255),w,b
  7743  000276  26D9               	addwf	fsr2l,f,c
  7744  000278  0100               	movlb	0	; () banked
  7745  00027A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  00027C  22DA               	addwfc	fsr2h,f,c
  7747  00027E  0E07               	movlw	7
  7748  000280  D076               	goto	L10
  7749  000282                     i2l3266:
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7753  000282  0100               	movlb	0	; () banked
  7754  000284  EE20 F00C          	lfsr	2,12
  7755  000288  0100               	movlb	0	; () banked
  7756  00028A  51D4               	movf	_ic_ptr& (0+255),w,b
  7757  00028C  26D9               	addwf	fsr2l,f,c
  7758  00028E  0100               	movlb	0	; () banked
  7759  000290  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7760  000292  22DA               	addwfc	fsr2h,f,c
  7761  000294  0E08               	movlw	8
  7762  000296  6EDF               	movwf	indf2,c
  7763  000298  D11D               	goto	L14
  7764  00029A                     i2l3272:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7768  00029A  0100               	movlb	0	; () banked
  7769  00029C  EE20 F00E          	lfsr	2,14
  7770  0002A0  0100               	movlb	0	; () banked
  7771  0002A2  51D4               	movf	_ic_ptr& (0+255),w,b
  7772  0002A4  26D9               	addwf	fsr2l,f,c
  7773  0002A6  0100               	movlb	0	; () banked
  7774  0002A8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7775  0002AA  22DA               	addwfc	fsr2h,f,c
  7776  0002AC  2ADF               	incf	indf2,f,c
  7777                           
  7778                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7779  0002AE  0100               	movlb	0	; () banked
  7780  0002B0  EE20 F00C          	lfsr	2,12
  7781  0002B4  0100               	movlb	0	; () banked
  7782  0002B6  51D4               	movf	_ic_ptr& (0+255),w,b
  7783  0002B8  26D9               	addwf	fsr2l,f,c
  7784  0002BA  0100               	movlb	0	; () banked
  7785  0002BC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7786  0002BE  22DA               	addwfc	fsr2h,f,c
  7787  0002C0  0E05               	movlw	5
  7788  0002C2  6EDF               	movwf	indf2,c
  7789                           
  7790                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7791  0002C4  0100               	movlb	0	; () banked
  7792  0002C6  EE20 F00D          	lfsr	2,13
  7793  0002CA  0100               	movlb	0	; () banked
  7794  0002CC  51D4               	movf	_ic_ptr& (0+255),w,b
  7795  0002CE  26D9               	addwf	fsr2l,f,c
  7796  0002D0  0100               	movlb	0	; () banked
  7797  0002D2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7798  0002D4  22DA               	addwfc	fsr2h,f,c
  7799  0002D6  0E06               	movlw	6
  7800  0002D8  D04A               	goto	L10
  7801  0002DA                     i2l3274:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 177: {
  7805                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7806  0002DA  0100               	movlb	0	; () banked
  7807  0002DC  EE20 F01A          	lfsr	2,26
  7808  0002E0  0100               	movlb	0	; () banked
  7809  0002E2  51D4               	movf	_ic_ptr& (0+255),w,b
  7810  0002E4  26D9               	addwf	fsr2l,f,c
  7811  0002E6  0100               	movlb	0	; () banked
  7812  0002E8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7813  0002EA  22DA               	addwfc	fsr2h,f,c
  7814  0002EC  50DF               	movf	indf2,w,c
  7815  0002EE  0100               	movlb	0	; () banked
  7816  0002F0  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7817  0002F2  0100               	movlb	0	; () banked
  7818  0002F4  EE20 F019          	lfsr	2,25
  7819  0002F8  0100               	movlb	0	; () banked
  7820  0002FA  51D4               	movf	_ic_ptr& (0+255),w,b
  7821  0002FC  26D9               	addwf	fsr2l,f,c
  7822  0002FE  0100               	movlb	0	; () banked
  7823  000300  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7824  000302  22DA               	addwfc	fsr2h,f,c
  7825  000304  50DF               	movf	indf2,w,c
  7826  000306  0100               	movlb	0	; () banked
  7827  000308  5D89               	subwf	??_i2c_int_handler& (0+255),w,b
  7828  00030A  B0D8               	btfsc	status,0,c
  7829  00030C  D0F4               	goto	L13
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7833  00030E  0100               	movlb	0	; () banked
  7834  000310  EE20 F01A          	lfsr	2,26
  7835  000314  0100               	movlb	0	; () banked
  7836  000316  51D4               	movf	_ic_ptr& (0+255),w,b
  7837  000318  26D9               	addwf	fsr2l,f,c
  7838  00031A  0100               	movlb	0	; () banked
  7839  00031C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7840  00031E  22DA               	addwfc	fsr2h,f,c
  7841  000320  50DF               	movf	indf2,w,c
  7842  000322  0100               	movlb	0	; () banked
  7843  000324  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7844  000326  0100               	movlb	0	; () banked
  7845  000328  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7846  00032A  0D01               	mullw	1
  7847  00032C  0E0F               	movlw	15
  7848  00032E  26F3               	addwf	prodl,f,c
  7849  000330  0E00               	movlw	0
  7850  000332  22F4               	addwfc	prodh,f,c
  7851  000334  50F3               	movf	prodl,w,c
  7852  000336  0100               	movlb	0	; () banked
  7853  000338  0100               	movlb	0	; () banked
  7854  00033A  25D4               	addwf	_ic_ptr& (0+255),w,b
  7855  00033C  6ED9               	movwf	fsr2l,c
  7856  00033E  50F4               	movf	prodh,w,c
  7857  000340  0100               	movlb	0	; () banked
  7858  000342  0100               	movlb	0	; () banked
  7859  000344  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7860  000346  6EDA               	movwf	fsr2h,c
  7861  000348  50DF               	movf	indf2,w,c
  7862  00034A  6EC9               	movwf	4041,c	;volatile
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7866  00034C  0100               	movlb	0	; () banked
  7867  00034E  EE20 F01A          	lfsr	2,26
  7868  000352  0100               	movlb	0	; () banked
  7869  000354  51D4               	movf	_ic_ptr& (0+255),w,b
  7870  000356  26D9               	addwf	fsr2l,f,c
  7871  000358  0100               	movlb	0	; () banked
  7872  00035A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7873  00035C  22DA               	addwfc	fsr2h,f,c
  7874  00035E  2ADF               	incf	indf2,f,c
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;my_i2c.c: 181: data_written = 1;
  7878  000360  0100               	movlb	0	; () banked
  7879  000362  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7880  000364  0E01               	movlw	1
  7881  000366  0100               	movlb	0	; () banked
  7882  000368  0100               	movlb	0	; () banked
  7883  00036A  6F8E               	movwf	i2c_int_handler@data_written& (0+255),b
  7884  00036C  D0C1               	goto	L11
  7885  00036E                     L10:
  7886  00036E  6EDF               	movwf	indf2,c
  7887  000370  D0E3               	goto	i2l299
  7888  000372                     i2l319:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;my_i2c.c: 189: {
  7892                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7893  000372  A8C7               	btfss	4039,4,c	;volatile
  7894  000374  D062               	goto	i2l3302
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7898  000376  0100               	movlb	0	; () banked
  7899  000378  EE20 F00B          	lfsr	2,11
  7900  00037C  0100               	movlb	0	; () banked
  7901  00037E  51D4               	movf	_ic_ptr& (0+255),w,b
  7902  000380  26D9               	addwf	fsr2l,f,c
  7903  000382  0100               	movlb	0	; () banked
  7904  000384  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7905  000386  22DA               	addwfc	fsr2h,f,c
  7906  000388  2ADF               	incf	indf2,f,c
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;my_i2c.c: 194: if (data_read) {
  7910  00038A  0100               	movlb	0	; () banked
  7911  00038C  0100               	movlb	0	; () banked
  7912  00038E  5193               	movf	i2c_int_handler@data_read& (0+255),w,b
  7913  000390  B4D8               	btfsc	status,2,c
  7914  000392  D04A               	goto	i2l3298
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7918  000394  AAC7               	btfss	4039,5,c	;volatile
  7919  000396  D027               	goto	i2l3296
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7923  000398  0100               	movlb	0	; () banked
  7924  00039A  EE20 F00A          	lfsr	2,10
  7925  00039E  0100               	movlb	0	; () banked
  7926  0003A0  51D4               	movf	_ic_ptr& (0+255),w,b
  7927  0003A2  26D9               	addwf	fsr2l,f,c
  7928  0003A4  0100               	movlb	0	; () banked
  7929  0003A6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7930  0003A8  22DA               	addwfc	fsr2h,f,c
  7931  0003AA  50DF               	movf	indf2,w,c
  7932  0003AC  0100               	movlb	0	; () banked
  7933  0003AE  6F89               	movwf	??_i2c_int_handler& (0+255),b
  7934  0003B0  0100               	movlb	0	; () banked
  7935  0003B2  5189               	movf	??_i2c_int_handler& (0+255),w,b
  7936  0003B4  0D01               	mullw	1
  7937  0003B6  50F3               	movf	prodl,w,c
  7938  0003B8  0100               	movlb	0	; () banked
  7939  0003BA  0100               	movlb	0	; () banked
  7940  0003BC  25D4               	addwf	_ic_ptr& (0+255),w,b
  7941  0003BE  6ED9               	movwf	fsr2l,c
  7942  0003C0  50F4               	movf	prodh,w,c
  7943  0003C2  0100               	movlb	0	; () banked
  7944  0003C4  0100               	movlb	0	; () banked
  7945  0003C6  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7946  0003C8  6EDA               	movwf	fsr2h,c
  7947  0003CA  0100               	movlb	0	; () banked
  7948  0003CC  C090  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7952  0003D0  0100               	movlb	0	; () banked
  7953  0003D2  EE20 F00A          	lfsr	2,10
  7954  0003D6  0100               	movlb	0	; () banked
  7955  0003D8  51D4               	movf	_ic_ptr& (0+255),w,b
  7956  0003DA  26D9               	addwf	fsr2l,f,c
  7957  0003DC  0100               	movlb	0	; () banked
  7958  0003DE  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7959  0003E0  22DA               	addwfc	fsr2h,f,c
  7960  0003E2  2ADF               	incf	indf2,f,c
  7961  0003E4  D021               	goto	i2l3298
  7962  0003E6                     i2l3296:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7966  0003E6  0100               	movlb	0	; () banked
  7967  0003E8  EE20 F00E          	lfsr	2,14
  7968  0003EC  0100               	movlb	0	; () banked
  7969  0003EE  51D4               	movf	_ic_ptr& (0+255),w,b
  7970  0003F0  26D9               	addwf	fsr2l,f,c
  7971  0003F2  0100               	movlb	0	; () banked
  7972  0003F4  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7973  0003F6  22DA               	addwfc	fsr2h,f,c
  7974  0003F8  2ADF               	incf	indf2,f,c
  7975                           
  7976                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7977  0003FA  0100               	movlb	0	; () banked
  7978  0003FC  EE20 F00D          	lfsr	2,13
  7979  000400  0100               	movlb	0	; () banked
  7980  000402  51D4               	movf	_ic_ptr& (0+255),w,b
  7981  000404  26D9               	addwf	fsr2l,f,c
  7982  000406  0100               	movlb	0	; () banked
  7983  000408  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  00040A  22DA               	addwfc	fsr2h,f,c
  7985  00040C  0E06               	movlw	6
  7986  00040E  6EDF               	movwf	indf2,c
  7987                           
  7988                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7989  000410  0100               	movlb	0	; () banked
  7990  000412  EE20 F00C          	lfsr	2,12
  7991  000416  0100               	movlb	0	; () banked
  7992  000418  51D4               	movf	_ic_ptr& (0+255),w,b
  7993  00041A  26D9               	addwf	fsr2l,f,c
  7994  00041C  0100               	movlb	0	; () banked
  7995  00041E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  7996  000420  22DA               	addwfc	fsr2h,f,c
  7997  000422  0E05               	movlw	5
  7998  000424  6EDF               	movwf	indf2,c
  7999  000426  D067               	goto	L13
  8000  000428                     i2l3298:
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;my_i2c.c: 205: msg_ready = 1;
  8004  000428  0100               	movlb	0	; () banked
  8005  00042A  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8006  00042C  0E01               	movlw	1
  8007  00042E  0100               	movlb	0	; () banked
  8008  000430  0100               	movlb	0	; () banked
  8009  000432  6F92               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8010  000434  0100               	movlb	0	; () banked
  8011  000436  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8012                           
  8013                           ; BSR set to: 0
  8014  000438  D05E               	goto	L13
  8015  00043A                     i2l3302:
  8016                           
  8017                           ; BSR set to: 0
  8018  00043A  0100               	movlb	0	; () banked
  8019  00043C  0100               	movlb	0	; () banked
  8020  00043E  5193               	movf	i2c_int_handler@data_read& (0+255),w,b
  8021  000440  B4D8               	btfsc	status,2,c
  8022  000442  D07A               	goto	i2l299
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;my_i2c.c: 209: ic_ptr->event_count++;
  8026  000444  0100               	movlb	0	; () banked
  8027  000446  EE20 F00B          	lfsr	2,11
  8028  00044A  0100               	movlb	0	; () banked
  8029  00044C  51D4               	movf	_ic_ptr& (0+255),w,b
  8030  00044E  26D9               	addwf	fsr2l,f,c
  8031  000450  0100               	movlb	0	; () banked
  8032  000452  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8033  000454  22DA               	addwfc	fsr2h,f,c
  8034  000456  2ADF               	incf	indf2,f,c
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  8038  000458  AAC7               	btfss	4039,5,c	;volatile
  8039  00045A  D027               	goto	i2l327
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8043  00045C  0100               	movlb	0	; () banked
  8044  00045E  EE20 F00A          	lfsr	2,10
  8045  000462  0100               	movlb	0	; () banked
  8046  000464  51D4               	movf	_ic_ptr& (0+255),w,b
  8047  000466  26D9               	addwf	fsr2l,f,c
  8048  000468  0100               	movlb	0	; () banked
  8049  00046A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8050  00046C  22DA               	addwfc	fsr2h,f,c
  8051  00046E  50DF               	movf	indf2,w,c
  8052  000470  0100               	movlb	0	; () banked
  8053  000472  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8054  000474  0100               	movlb	0	; () banked
  8055  000476  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8056  000478  0D01               	mullw	1
  8057  00047A  50F3               	movf	prodl,w,c
  8058  00047C  0100               	movlb	0	; () banked
  8059  00047E  0100               	movlb	0	; () banked
  8060  000480  25D4               	addwf	_ic_ptr& (0+255),w,b
  8061  000482  6ED9               	movwf	fsr2l,c
  8062  000484  50F4               	movf	prodh,w,c
  8063  000486  0100               	movlb	0	; () banked
  8064  000488  0100               	movlb	0	; () banked
  8065  00048A  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8066  00048C  6EDA               	movwf	fsr2h,c
  8067  00048E  0100               	movlb	0	; () banked
  8068  000490  C090  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;my_i2c.c: 212: ic_ptr->buflen++;
  8072  000494  0100               	movlb	0	; () banked
  8073  000496  EE20 F00A          	lfsr	2,10
  8074  00049A  0100               	movlb	0	; () banked
  8075  00049C  51D4               	movf	_ic_ptr& (0+255),w,b
  8076  00049E  26D9               	addwf	fsr2l,f,c
  8077  0004A0  0100               	movlb	0	; () banked
  8078  0004A2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8079  0004A4  22DA               	addwfc	fsr2h,f,c
  8080  0004A6  2ADF               	incf	indf2,f,c
  8081                           
  8082                           ;my_i2c.c: 213: } else {
  8083  0004A8  D047               	goto	i2l299
  8084  0004AA                     i2l327:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  8088  0004AA  A4C7               	btfss	4039,2,c	;volatile
  8089  0004AC  D6B6               	goto	i2l3254
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  8093  0004AE  0100               	movlb	0	; () banked
  8094  0004B0  EE20 F00C          	lfsr	2,12
  8095  0004B4  0100               	movlb	0	; () banked
  8096  0004B6  51D4               	movf	_ic_ptr& (0+255),w,b
  8097  0004B8  26D9               	addwf	fsr2l,f,c
  8098  0004BA  0100               	movlb	0	; () banked
  8099  0004BC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8100  0004BE  22DA               	addwfc	fsr2h,f,c
  8101  0004C0  0E08               	movlw	8
  8102  0004C2  6EDF               	movwf	indf2,c
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;my_i2c.c: 216: msg_ready = 1;
  8106  0004C4  0100               	movlb	0	; () banked
  8107  0004C6  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8108  0004C8  0E01               	movlw	1
  8109  0004CA  0100               	movlb	0	; () banked
  8110  0004CC  0100               	movlb	0	; () banked
  8111  0004CE  6F92               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8112  0004D0  0100               	movlb	0	; () banked
  8113  0004D2  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8114  0004D4                     L14:
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;my_i2c.c: 217: msg_to_send = 1;
  8118  0004D4  0100               	movlb	0	; () banked
  8119  0004D6  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8120  0004D8  0E01               	movlw	1
  8121  0004DA  0100               	movlb	0	; () banked
  8122  0004DC  0100               	movlb	0	; () banked
  8123  0004DE  6F91               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8124  0004E0  0100               	movlb	0	; () banked
  8125  0004E2  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;my_i2c.c: 219: data_read = 0;
  8129  0004E4  0100               	movlb	0	; () banked
  8130  0004E6  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8131  0004E8  0E00               	movlw	0
  8132  0004EA  0100               	movlb	0	; () banked
  8133  0004EC  0100               	movlb	0	; () banked
  8134  0004EE  6F93               	movwf	i2c_int_handler@data_read& (0+255),b
  8135  0004F0                     L11:
  8136  0004F0  0100               	movlb	0	; () banked
  8137  0004F2  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8138                           
  8139                           ;my_i2c.c: 220: } else {
  8140  0004F4  D021               	goto	i2l299
  8141  0004F6                     L13:
  8142                           
  8143                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8144  0004F6  0100               	movlb	0	; () banked
  8145  0004F8  EE20 F00C          	lfsr	2,12
  8146  0004FC  0100               	movlb	0	; () banked
  8147  0004FE  51D4               	movf	_ic_ptr& (0+255),w,b
  8148  000500  26D9               	addwf	fsr2l,f,c
  8149  000502  0100               	movlb	0	; () banked
  8150  000504  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8151  000506  22DA               	addwfc	fsr2h,f,c
  8152  000508  0E05               	movlw	5
  8153  00050A  D731               	goto	L10
  8154  00050C                     i2l3324:
  8155                           
  8156                           ; BSR set to: 0
  8157  00050C  0100               	movlb	0	; () banked
  8158  00050E  EE20 F00C          	lfsr	2,12
  8159  000512  0100               	movlb	0	; () banked
  8160  000514  51D4               	movf	_ic_ptr& (0+255),w,b
  8161  000516  26D9               	addwf	fsr2l,f,c
  8162  000518  0100               	movlb	0	; () banked
  8163  00051A  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8164  00051C  22DA               	addwfc	fsr2h,f,c
  8165  00051E  50DF               	movf	indf2,w,c
  8166                           
  8167                           ; Switch size 1, requested type "space"
  8168                           ; Number of cases is 4, Range of values is 5 to 8
  8169                           ; switch strategies available:
  8170                           ; Name         Instructions Cycles
  8171                           ; simple_byte           13     7 (average)
  8172                           ;	Chosen strategy is simple_byte
  8173  000520  0A05               	xorlw	5	; case 5
  8174  000522  B4D8               	btfsc	status,2,c
  8175  000524  D63C               	goto	i2l301
  8176  000526  0A03               	xorlw	3	; case 6
  8177  000528  B4D8               	btfsc	status,2,c
  8178  00052A  D65B               	goto	i2l305
  8179  00052C  0A01               	xorlw	1	; case 7
  8180  00052E  B4D8               	btfsc	status,2,c
  8181  000530  D720               	goto	i2l319
  8182  000532  0A0F               	xorlw	15	; case 8
  8183  000534  B4D8               	btfsc	status,2,c
  8184  000536  D6D1               	goto	i2l3274
  8185  000538                     i2l299:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;my_i2c.c: 230: }
  8189                           ;my_i2c.c: 233: if (data_read || data_written) {
  8190  000538  0100               	movlb	0	; () banked
  8191  00053A  0100               	movlb	0	; () banked
  8192  00053C  6793               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8193  00053E  D005               	goto	i2l333
  8194                           
  8195                           ; BSR set to: 0
  8196  000540  0100               	movlb	0	; () banked
  8197  000542  0100               	movlb	0	; () banked
  8198  000544  518E               	movf	i2c_int_handler@data_written& (0+255),w,b
  8199  000546  B4D8               	btfsc	status,2,c
  8200  000548  D002               	goto	i2l3330
  8201  00054A                     i2l333:
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8205  00054A  A8C6               	btfss	4038,4,c	;volatile
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8209  00054C  88C6               	bsf	4038,4,c	;volatile
  8210  00054E                     i2l3330:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;my_i2c.c: 237: }
  8214                           ;my_i2c.c: 238: }
  8215                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8216  00054E  0100               	movlb	0	; () banked
  8217  000550  EE20 F00A          	lfsr	2,10
  8218  000554  0100               	movlb	0	; () banked
  8219  000556  51D4               	movf	_ic_ptr& (0+255),w,b
  8220  000558  26D9               	addwf	fsr2l,f,c
  8221  00055A  0100               	movlb	0	; () banked
  8222  00055C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8223  00055E  22DA               	addwfc	fsr2h,f,c
  8224  000560  0E08               	movlw	8
  8225  000562  64DF               	cpfsgt	indf2,c
  8226  000564  D024               	goto	i2l3336
  8227                           
  8228                           ; BSR set to: 0
  8229  000566  0100               	movlb	0	; () banked
  8230  000568  0100               	movlb	0	; () banked
  8231  00056A  6792               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8232  00056C  D020               	goto	i2l3336
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8236  00056E  0100               	movlb	0	; () banked
  8237  000570  EE20 F00C          	lfsr	2,12
  8238  000574  0100               	movlb	0	; () banked
  8239  000576  51D4               	movf	_ic_ptr& (0+255),w,b
  8240  000578  26D9               	addwf	fsr2l,f,c
  8241  00057A  0100               	movlb	0	; () banked
  8242  00057C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8243  00057E  22DA               	addwfc	fsr2h,f,c
  8244  000580  0E05               	movlw	5
  8245  000582  6EDF               	movwf	indf2,c
  8246                           
  8247                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8248  000584  0100               	movlb	0	; () banked
  8249  000586  EE20 F00E          	lfsr	2,14
  8250  00058A  0100               	movlb	0	; () banked
  8251  00058C  51D4               	movf	_ic_ptr& (0+255),w,b
  8252  00058E  26D9               	addwf	fsr2l,f,c
  8253  000590  0100               	movlb	0	; () banked
  8254  000592  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8255  000594  22DA               	addwfc	fsr2h,f,c
  8256  000596  2ADF               	incf	indf2,f,c
  8257                           
  8258                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8259  000598  0100               	movlb	0	; () banked
  8260  00059A  EE20 F00D          	lfsr	2,13
  8261  00059E  0100               	movlb	0	; () banked
  8262  0005A0  51D4               	movf	_ic_ptr& (0+255),w,b
  8263  0005A2  26D9               	addwf	fsr2l,f,c
  8264  0005A4  0100               	movlb	0	; () banked
  8265  0005A6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8266  0005A8  22DA               	addwfc	fsr2h,f,c
  8267  0005AA  0E07               	movlw	7
  8268  0005AC  6EDF               	movwf	indf2,c
  8269  0005AE                     i2l3336:
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;my_i2c.c: 245: }
  8273                           ;my_i2c.c: 247: if (msg_ready) {
  8274  0005AE  0100               	movlb	0	; () banked
  8275  0005B0  0100               	movlb	0	; () banked
  8276  0005B2  5192               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8277  0005B4  B4D8               	btfsc	status,2,c
  8278  0005B6  D048               	goto	i2l3344
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8282  0005B8  0100               	movlb	0	; () banked
  8283  0005BA  EE20 F00B          	lfsr	2,11
  8284  0005BE  0100               	movlb	0	; () banked
  8285  0005C0  51D4               	movf	_ic_ptr& (0+255),w,b
  8286  0005C2  26D9               	addwf	fsr2l,f,c
  8287  0005C4  0100               	movlb	0	; () banked
  8288  0005C6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8289  0005C8  22DA               	addwfc	fsr2h,f,c
  8290  0005CA  0100               	movlb	0	; () banked
  8291  0005CC  EE10 F00A          	lfsr	1,10
  8292  0005D0  0100               	movlb	0	; () banked
  8293  0005D2  51D4               	movf	_ic_ptr& (0+255),w,b
  8294  0005D4  26E1               	addwf	fsr1l,f,c
  8295  0005D6  0100               	movlb	0	; () banked
  8296  0005D8  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8297  0005DA  22E2               	addwfc	fsr1h,f,c
  8298  0005DC  50E7               	movf	indf1,w,c
  8299  0005DE  0100               	movlb	0	; () banked
  8300  0005E0  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8301  0005E2  0100               	movlb	0	; () banked
  8302  0005E4  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8303  0005E6  0D01               	mullw	1
  8304  0005E8  50F3               	movf	prodl,w,c
  8305  0005EA  0100               	movlb	0	; () banked
  8306  0005EC  0100               	movlb	0	; () banked
  8307  0005EE  25D4               	addwf	_ic_ptr& (0+255),w,b
  8308  0005F0  6EE1               	movwf	fsr1l,c
  8309  0005F2  50F4               	movf	prodh,w,c
  8310  0005F4  0100               	movlb	0	; () banked
  8311  0005F6  0100               	movlb	0	; () banked
  8312  0005F8  21D5               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8313  0005FA  6EE2               	movwf	fsr1h,c
  8314  0005FC  CFDF FFE7          	movff	indf2,indf1
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8318  000600  0100               	movlb	0	; () banked
  8319  000602  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8320  000604  0E28               	movlw	40
  8321  000606  0100               	movlb	0	; () banked
  8322  000608  0100               	movlb	0	; () banked
  8323  00060A  6F85               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8324  00060C  0100               	movlb	0	; () banked
  8325  00060E  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8326  000610  0100               	movlb	0	; () banked
  8327  000612  0100               	movlb	0	; () banked
  8328  000614  C0D5  F087         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8329  000618  0100               	movlb	0	; () banked
  8330  00061A  0100               	movlb	0	; () banked
  8331  00061C  C0D4  F086         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8332  000620  0100               	movlb	0	; () banked
  8333  000622  EE20 F00A          	lfsr	2,10
  8334  000626  0100               	movlb	0	; () banked
  8335  000628  51D4               	movf	_ic_ptr& (0+255),w,b
  8336  00062A  26D9               	addwf	fsr2l,f,c
  8337  00062C  0100               	movlb	0	; () banked
  8338  00062E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8339  000630  22DA               	addwfc	fsr2h,f,c
  8340  000632  50DF               	movf	indf2,w,c
  8341  000634  0100               	movlb	0	; () banked
  8342  000636  6F8A               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8343  000638  0100               	movlb	0	; () banked
  8344  00063A  298A               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8345  00063C  EC34  F00F         	call	_ToMainHigh_sendmsg
  8346                           
  8347                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8348  000640  0100               	movlb	0	; () banked
  8349  000642  EE20 F00A          	lfsr	2,10
  8350  000646  D04B               	goto	L12
  8351  000648                     i2l3344:
  8352                           
  8353                           ; BSR set to: 0
  8354  000648  0100               	movlb	0	; () banked
  8355  00064A  EE20 F00E          	lfsr	2,14
  8356  00064E  0100               	movlb	0	; () banked
  8357  000650  51D4               	movf	_ic_ptr& (0+255),w,b
  8358  000652  26D9               	addwf	fsr2l,f,c
  8359  000654  0100               	movlb	0	; () banked
  8360  000656  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8361  000658  22DA               	addwfc	fsr2h,f,c
  8362  00065A  50DF               	movf	indf2,w,c
  8363  00065C  B4D8               	btfsc	status,2,c
  8364  00065E  D047               	goto	i2l3352
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8368  000660  0100               	movlb	0	; () banked
  8369  000662  EE20 F00E          	lfsr	2,14
  8370  000666  0100               	movlb	0	; () banked
  8371  000668  51D4               	movf	_ic_ptr& (0+255),w,b
  8372  00066A  26D9               	addwf	fsr2l,f,c
  8373  00066C  0100               	movlb	0	; () banked
  8374  00066E  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8375  000670  22DA               	addwfc	fsr2h,f,c
  8376  000672  50DF               	movf	indf2,w,c
  8377  000674  0100               	movlb	0	; () banked
  8378  000676  0100               	movlb	0	; () banked
  8379  000678  6F8B               	movwf	i2c_int_handler@error_buf& (0+255),b
  8380                           
  8381                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8382  00067A  0100               	movlb	0	; () banked
  8383  00067C  EE20 F00D          	lfsr	2,13
  8384  000680  0100               	movlb	0	; () banked
  8385  000682  51D4               	movf	_ic_ptr& (0+255),w,b
  8386  000684  26D9               	addwf	fsr2l,f,c
  8387  000686  0100               	movlb	0	; () banked
  8388  000688  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8389  00068A  22DA               	addwfc	fsr2h,f,c
  8390  00068C  50DF               	movf	indf2,w,c
  8391  00068E  0100               	movlb	0	; () banked
  8392  000690  0100               	movlb	0	; () banked
  8393  000692  6F8C               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8394                           
  8395                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8396  000694  0100               	movlb	0	; () banked
  8397  000696  EE20 F00B          	lfsr	2,11
  8398  00069A  0100               	movlb	0	; () banked
  8399  00069C  51D4               	movf	_ic_ptr& (0+255),w,b
  8400  00069E  26D9               	addwf	fsr2l,f,c
  8401  0006A0  0100               	movlb	0	; () banked
  8402  0006A2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8403  0006A4  22DA               	addwfc	fsr2h,f,c
  8404  0006A6  50DF               	movf	indf2,w,c
  8405  0006A8  0100               	movlb	0	; () banked
  8406  0006AA  0100               	movlb	0	; () banked
  8407  0006AC  6F8D               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8411  0006AE  0100               	movlb	0	; () banked
  8412  0006B0  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8413  0006B2  0E29               	movlw	41
  8414  0006B4  0100               	movlb	0	; () banked
  8415  0006B6  0100               	movlb	0	; () banked
  8416  0006B8  6F85               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8417  0006BA  0100               	movlb	0	; () banked
  8418  0006BC  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8419  0006BE  0100               	movlb	0	; () banked
  8420  0006C0  0E00               	movlw	high i2c_int_handler@error_buf
  8421  0006C2  0100               	movlb	0	; () banked
  8422  0006C4  0100               	movlb	0	; () banked
  8423  0006C6  6F87               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8424  0006C8  0100               	movlb	0	; () banked
  8425  0006CA  0E8B               	movlw	low i2c_int_handler@error_buf
  8426  0006CC  0100               	movlb	0	; () banked
  8427  0006CE  0100               	movlb	0	; () banked
  8428  0006D0  6F86               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8429  0006D2  0E03               	movlw	3
  8430  0006D4  EC34  F00F         	call	_ToMainHigh_sendmsg
  8431                           
  8432                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8433  0006D8  0100               	movlb	0	; () banked
  8434  0006DA  EE20 F00E          	lfsr	2,14
  8435  0006DE                     L12:
  8436  0006DE  0100               	movlb	0	; () banked
  8437  0006E0  51D4               	movf	_ic_ptr& (0+255),w,b
  8438  0006E2  26D9               	addwf	fsr2l,f,c
  8439  0006E4  0100               	movlb	0	; () banked
  8440  0006E6  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8441  0006E8  22DA               	addwfc	fsr2h,f,c
  8442  0006EA  0E00               	movlw	0
  8443  0006EC  6EDF               	movwf	indf2,c
  8444  0006EE                     i2l3352:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;my_i2c.c: 257: }
  8448                           ;my_i2c.c: 258: if (msg_to_send) {
  8449  0006EE  0100               	movlb	0	; () banked
  8450  0006F0  0100               	movlb	0	; () banked
  8451  0006F2  5191               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8452  0006F4  B4D8               	btfsc	status,2,c
  8453  0006F6  0012               	return	
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8457  0006F8  0100               	movlb	0	; () banked
  8458  0006FA  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8459  0006FC  0E2A               	movlw	42
  8460  0006FE  0100               	movlb	0	; () banked
  8461  000700  0100               	movlb	0	; () banked
  8462  000702  6F85               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8463  000704  0100               	movlb	0	; () banked
  8464  000706  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8465  000708  0100               	movlb	0	; () banked
  8466  00070A  0100               	movlb	0	; () banked
  8467  00070C  C0D5  F087         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8468  000710  0100               	movlb	0	; () banked
  8469  000712  0100               	movlb	0	; () banked
  8470  000714  C0D4  F086         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8471  000718  0E00               	movlw	0
  8472  00071A  EC34  F00F         	call	_ToMainHigh_sendmsg
  8473                           
  8474                           ;my_i2c.c: 261: msg_to_send = 0;
  8475  00071E  0100               	movlb	0	; () banked
  8476  000720  6F89               	movwf	??_i2c_int_handler& (0+255),b
  8477  000722  0E00               	movlw	0
  8478  000724  0100               	movlb	0	; () banked
  8479  000726  0100               	movlb	0	; () banked
  8480  000728  6F91               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8481  00072A  0100               	movlb	0	; () banked
  8482  00072C  5189               	movf	??_i2c_int_handler& (0+255),w,b
  8483  00072E  0012               	return	
  8484  000730                     __end_of_i2c_int_handler:
  8485                           	opt stack 0
  8486                           pclatu	equ	0xFFB
  8487                           pclath	equ	0xFFA
  8488                           tblptru	equ	0xFF8
  8489                           tblptrh	equ	0xFF7
  8490                           tblptrl	equ	0xFF6
  8491                           tablat	equ	0xFF5
  8492                           prodh	equ	0xFF4
  8493                           prodl	equ	0xFF3
  8494                           intcon	equ	0xFF2
  8495                           intcon2	equ	0xFF1
  8496                           postinc0	equ	0xFEE
  8497                           fsr0h	equ	0xFEA
  8498                           fsr0l	equ	0xFE9
  8499                           wreg	equ	0xFE8
  8500                           indf1	equ	0xFE7
  8501                           postdec1	equ	0xFE5
  8502                           fsr1h	equ	0xFE2
  8503                           fsr1l	equ	0xFE1
  8504                           bsr	equ	0xFE0
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           postdec2	equ	0xFDD
  8508                           fsr2h	equ	0xFDA
  8509                           fsr2l	equ	0xFD9
  8510                           status	equ	0xFD8
  8511                           
  8512 ;; *************** function _handle_start *****************
  8513 ;; Defined at:
  8514 ;;		line 71 in file "src/my_i2c.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  data_read       1    wreg     unsigned char 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;  data_read       1   53[COMRAM] unsigned char 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;		None               void
  8521 ;; Registers used:
  8522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8528 ;;      Params:         0       0       0       0       0
  8529 ;;      Locals:         1       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0
  8531 ;;      Totals:         1       0       0       0       0
  8532 ;;Total ram usage:        1 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_i2c_int_handler
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text46
  8542  0013BA                     __ptext46:
  8543                           	opt stack 0
  8544  0013BA                     _handle_start:
  8545                           	opt stack 18
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;incstack = 0
  8549                           ;handle_start@data_read stored from wreg
  8550  0013BA  CFE8 F036          	movff	wreg,handle_start@data_read
  8551                           
  8552                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8553  0013BE  0100               	movlb	0	; () banked
  8554  0013C0  EE20 F00B          	lfsr	2,11
  8555  0013C4  0100               	movlb	0	; () banked
  8556  0013C6  51D4               	movf	_ic_ptr& (0+255),w,b
  8557  0013C8  26D9               	addwf	fsr2l,f,c
  8558  0013CA  0100               	movlb	0	; () banked
  8559  0013CC  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8560  0013CE  22DA               	addwfc	fsr2h,f,c
  8561  0013D0  0E01               	movlw	1
  8562  0013D2  6EDF               	movwf	indf2,c
  8563                           
  8564                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8565  0013D4  0100               	movlb	0	; () banked
  8566  0013D6  EE20 F00A          	lfsr	2,10
  8567  0013DA  0100               	movlb	0	; () banked
  8568  0013DC  51D4               	movf	_ic_ptr& (0+255),w,b
  8569  0013DE  26D9               	addwf	fsr2l,f,c
  8570  0013E0  0100               	movlb	0	; () banked
  8571  0013E2  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8572  0013E4  22DA               	addwfc	fsr2h,f,c
  8573  0013E6  0E00               	movlw	0
  8574  0013E8  6EDF               	movwf	indf2,c
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;my_i2c.c: 75: if (data_read) {
  8578  0013EA  5036               	movf	handle_start@data_read,w,c
  8579  0013EC  B4D8               	btfsc	status,2,c
  8580  0013EE  D03D               	goto	i2l2926
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8584  0013F0  AAC7               	btfss	4039,5,c	;volatile
  8585  0013F2  D021               	goto	i2l289
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8589  0013F4  0100               	movlb	0	; () banked
  8590  0013F6  EE20 F00C          	lfsr	2,12
  8591  0013FA  0100               	movlb	0	; () banked
  8592  0013FC  51D4               	movf	_ic_ptr& (0+255),w,b
  8593  0013FE  26D9               	addwf	fsr2l,f,c
  8594  001400  0100               	movlb	0	; () banked
  8595  001402  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8596  001404  22DA               	addwfc	fsr2h,f,c
  8597  001406  0E05               	movlw	5
  8598  001408  6EDF               	movwf	indf2,c
  8599                           
  8600                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8601  00140A  0100               	movlb	0	; () banked
  8602  00140C  EE20 F00E          	lfsr	2,14
  8603  001410  0100               	movlb	0	; () banked
  8604  001412  51D4               	movf	_ic_ptr& (0+255),w,b
  8605  001414  26D9               	addwf	fsr2l,f,c
  8606  001416  0100               	movlb	0	; () banked
  8607  001418  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8608  00141A  22DA               	addwfc	fsr2h,f,c
  8609  00141C  2ADF               	incf	indf2,f,c
  8610                           
  8611                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8612  00141E  0100               	movlb	0	; () banked
  8613  001420  EE20 F00D          	lfsr	2,13
  8614  001424  0100               	movlb	0	; () banked
  8615  001426  51D4               	movf	_ic_ptr& (0+255),w,b
  8616  001428  26D9               	addwf	fsr2l,f,c
  8617  00142A  0100               	movlb	0	; () banked
  8618  00142C  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8619  00142E  22DA               	addwfc	fsr2h,f,c
  8620  001430  0E05               	movlw	5
  8621  001432  6EDF               	movwf	indf2,c
  8622                           
  8623                           ;my_i2c.c: 82: } else {
  8624  001434  0012               	return	
  8625  001436                     i2l289:
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8629  001436  A4C7               	btfss	4039,2,c	;volatile
  8630  001438  D00C               	goto	i2l2924
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8634  00143A  0100               	movlb	0	; () banked
  8635  00143C  EE20 F00C          	lfsr	2,12
  8636  001440  0100               	movlb	0	; () banked
  8637  001442  51D4               	movf	_ic_ptr& (0+255),w,b
  8638  001444  26D9               	addwf	fsr2l,f,c
  8639  001446  0100               	movlb	0	; () banked
  8640  001448  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8641  00144A  22DA               	addwfc	fsr2h,f,c
  8642  00144C  0E08               	movlw	8
  8643  00144E  6EDF               	movwf	indf2,c
  8644                           
  8645                           ;my_i2c.c: 85: } else {
  8646  001450  0012               	return	
  8647  001452                     i2l2924:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8651  001452  0100               	movlb	0	; () banked
  8652  001454  EE20 F00C          	lfsr	2,12
  8653  001458  0100               	movlb	0	; () banked
  8654  00145A  51D4               	movf	_ic_ptr& (0+255),w,b
  8655  00145C  26D9               	addwf	fsr2l,f,c
  8656  00145E  0100               	movlb	0	; () banked
  8657  001460  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8658  001462  22DA               	addwfc	fsr2h,f,c
  8659  001464  0E07               	movlw	7
  8660  001466  6EDF               	movwf	indf2,c
  8661  001468  0012               	return	
  8662  00146A                     i2l2926:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8666  00146A  0100               	movlb	0	; () banked
  8667  00146C  EE20 F00C          	lfsr	2,12
  8668  001470  0100               	movlb	0	; () banked
  8669  001472  51D4               	movf	_ic_ptr& (0+255),w,b
  8670  001474  26D9               	addwf	fsr2l,f,c
  8671  001476  0100               	movlb	0	; () banked
  8672  001478  51D5               	movf	(_ic_ptr+1)& (0+255),w,b
  8673  00147A  22DA               	addwfc	fsr2h,f,c
  8674  00147C  0E06               	movlw	6
  8675  00147E  6EDF               	movwf	indf2,c
  8676  001480  0012               	return	
  8677  001482                     __end_of_handle_start:
  8678                           	opt stack 0
  8679                           pclatu	equ	0xFFB
  8680                           pclath	equ	0xFFA
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           postinc0	equ	0xFEE
  8690                           fsr0h	equ	0xFEA
  8691                           fsr0l	equ	0xFE9
  8692                           wreg	equ	0xFE8
  8693                           indf1	equ	0xFE7
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           bsr	equ	0xFE0
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _ToMainHigh_sendmsg *****************
  8706 ;; Defined at:
  8707 ;;		line 126 in file "src/messages.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  length          1    wreg     unsigned char 
  8710 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8711 ;;  data            2    6[BANK0 ] PTR void 
  8712 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  length          1    8[BANK0 ] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      char 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8724 ;;      Params:         0       3       0       0       0
  8725 ;;      Locals:         0       1       0       0       0
  8726 ;;      Temps:          0       0       0       0       0
  8727 ;;      Totals:         0       4       0       0       0
  8728 ;;Total ram usage:        4 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    2
  8731 ;; This function calls:
  8732 ;;		i2_send_msg
  8733 ;; This function is called by:
  8734 ;;		_i2c_int_handler
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text47
  8739  001E68                     __ptext47:
  8740                           	opt stack 0
  8741  001E68                     _ToMainHigh_sendmsg:
  8742                           	opt stack 16
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;incstack = 0
  8746                           ;ToMainHigh_sendmsg@length stored from wreg
  8747  001E68  CFE8 F088          	movff	wreg,ToMainHigh_sendmsg@length
  8748                           
  8749                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8750                           ;	Return value of _ToMainHigh_sendmsg is never used
  8751  001E6C  0101               	movlb	1	; () banked
  8752  001E6E  0E01               	movlw	high _ToMainHigh_MQ
  8753  001E70  6E41               	movwf	i2send_msg@qptr+1,c
  8754  001E72  0101               	movlb	1	; () banked
  8755  001E74  0E6D               	movlw	low _ToMainHigh_MQ
  8756  001E76  6E40               	movwf	i2send_msg@qptr,c
  8757  001E78  C088  F042         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8758  001E7C  C085  F043         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8759  001E80  0100               	movlb	0	; () banked
  8760  001E82  C087  F045         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8761  001E86  0100               	movlb	0	; () banked
  8762  001E88  C086  F044         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8763  001E8C  EC0F  F009         	call	i2_send_msg	;wreg free
  8764  001E90  0012               	return	
  8765  001E92                     __end_of_ToMainHigh_sendmsg:
  8766                           	opt stack 0
  8767                           pclatu	equ	0xFFB
  8768                           pclath	equ	0xFFA
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           prodh	equ	0xFF4
  8774                           prodl	equ	0xFF3
  8775                           intcon	equ	0xFF2
  8776                           intcon2	equ	0xFF1
  8777                           postinc0	equ	0xFEE
  8778                           fsr0h	equ	0xFEA
  8779                           fsr0l	equ	0xFE9
  8780                           wreg	equ	0xFE8
  8781                           indf1	equ	0xFE7
  8782                           postdec1	equ	0xFE5
  8783                           fsr1h	equ	0xFE2
  8784                           fsr1l	equ	0xFE1
  8785                           bsr	equ	0xFE0
  8786                           indf2	equ	0xFDF
  8787                           postinc2	equ	0xFDE
  8788                           postdec2	equ	0xFDD
  8789                           fsr2h	equ	0xFDA
  8790                           fsr2l	equ	0xFD9
  8791                           status	equ	0xFD8
  8792                           
  8793 ;; *************** function i2_send_msg *****************
  8794 ;; Defined at:
  8795 ;;		line 24 in file "src/messages.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  qptr            2   63[COMRAM] PTR struct __msg_queue
  8798 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8799 ;;  length          1   65[COMRAM] unsigned char 
  8800 ;;  msgtype         1   66[COMRAM] unsigned char 
  8801 ;;  data            2   67[COMRAM] PTR void 
  8802 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  8803 ;;		 -> i2c_int_handler@error_buf(3), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  8804 ;;		 -> main@uc(5), NULL(0), 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8807 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8808 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8809 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8810 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      char 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8820 ;;      Params:         6       0       0       0       0
  8821 ;;      Locals:         0       5       0       0       0
  8822 ;;      Temps:          1       0       0       0       0
  8823 ;;      Totals:         7       5       0       0       0
  8824 ;;Total ram usage:       12 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    1
  8827 ;; This function calls:
  8828 ;;		i2_memcpy
  8829 ;; This function is called by:
  8830 ;;		_ToMainHigh_sendmsg
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           	psect	text48
  8835  00121E                     __ptext48:
  8836                           	opt stack 0
  8837  00121E                     i2_send_msg:
  8838                           	opt stack 16
  8839                           
  8840                           ;messages.c: 25: unsigned char slot;
  8841                           ;messages.c: 27: msg *qmsg;
  8842                           ;messages.c: 28: size_t tlength = length;
  8843                           
  8844                           ;incstack = 0
  8845  00121E  0100               	movlb	0	; () banked
  8846  001220  C042  F080         	movff	i2send_msg@length,i2send_msg@tlength
  8847  001224  0100               	movlb	0	; () banked
  8848  001226  0100               	movlb	0	; () banked
  8849  001228  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8853  00122A  EE20 F034          	lfsr	2,52
  8854  00122E  5040               	movf	i2send_msg@qptr,w,c
  8855  001230  26D9               	addwf	fsr2l,f,c
  8856  001232  5041               	movf	i2send_msg@qptr+1,w,c
  8857  001234  22DA               	addwfc	fsr2h,f,c
  8858  001236  50DF               	movf	indf2,w,c
  8859  001238  0100               	movlb	0	; () banked
  8860  00123A  0100               	movlb	0	; () banked
  8861  00123C  6F82               	movwf	i2send_msg@slot& (0+255),b
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8865  00123E  0100               	movlb	0	; () banked
  8866  001240  0100               	movlb	0	; () banked
  8867  001242  5182               	movf	i2send_msg@slot& (0+255),w,b
  8868  001244  0D0D               	mullw	13
  8869  001246  50F3               	movf	prodl,w,c
  8870  001248  2440               	addwf	i2send_msg@qptr,w,c
  8871  00124A  0100               	movlb	0	; () banked
  8872  00124C  0100               	movlb	0	; () banked
  8873  00124E  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  8874  001250  50F4               	movf	prodh,w,c
  8875  001252  2041               	addwfc	i2send_msg@qptr+1,w,c
  8876  001254  0100               	movlb	0	; () banked
  8877  001256  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;messages.c: 41: if (qmsg->full != 0) {
  8881  001258  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8882  00125C  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8883  001260  50DF               	movf	indf2,w,c
  8884  001262  B4D8               	btfsc	status,2,c
  8885  001264  D002               	goto	i2l3374
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;messages.c: 42: return (-1);
  8889  001266  0EFF               	movlw	255
  8890  001268  0012               	return	
  8891  00126A                     i2l3374:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;messages.c: 43: }
  8895                           ;messages.c: 46: qmsg->length = length;
  8896  00126A  0100               	movlb	0	; () banked
  8897  00126C  EE20 F001          	lfsr	2,1
  8898  001270  0100               	movlb	0	; () banked
  8899  001272  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8900  001274  26D9               	addwf	fsr2l,f,c
  8901  001276  0100               	movlb	0	; () banked
  8902  001278  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8903  00127A  22DA               	addwfc	fsr2h,f,c
  8904  00127C  C042  FFDF         	movff	i2send_msg@length,indf2
  8905                           
  8906                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8907  001280  0100               	movlb	0	; () banked
  8908  001282  EE20 F002          	lfsr	2,2
  8909  001286  0100               	movlb	0	; () banked
  8910  001288  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8911  00128A  26D9               	addwf	fsr2l,f,c
  8912  00128C  0100               	movlb	0	; () banked
  8913  00128E  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8914  001290  22DA               	addwfc	fsr2h,f,c
  8915  001292  C043  FFDF         	movff	i2send_msg@msgtype,indf2
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8919  001296  0E03               	movlw	3
  8920  001298  0100               	movlb	0	; () banked
  8921  00129A  0100               	movlb	0	; () banked
  8922  00129C  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  8923  00129E  6E36               	movwf	i2memcpy@d1,c
  8924  0012A0  0E00               	movlw	0
  8925  0012A2  0100               	movlb	0	; () banked
  8926  0012A4  0100               	movlb	0	; () banked
  8927  0012A6  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8928  0012A8  6E37               	movwf	i2memcpy@d1+1,c
  8929  0012AA  C045  F039         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8930  0012AE  C044  F038         	movff	i2send_msg@data,i2memcpy@s1
  8931  0012B2  C080  F03A         	movff	i2send_msg@tlength,i2memcpy@n
  8932  0012B6  C081  F03B         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8933  0012BA  EC90  F00E         	call	i2_memcpy	;wreg free
  8934                           
  8935                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8936  0012BE  EE20 F034          	lfsr	2,52
  8937  0012C2  5040               	movf	i2send_msg@qptr,w,c
  8938  0012C4  26D9               	addwf	fsr2l,f,c
  8939  0012C6  5041               	movf	i2send_msg@qptr+1,w,c
  8940  0012C8  22DA               	addwfc	fsr2h,f,c
  8941  0012CA  EE10 F034          	lfsr	1,52
  8942  0012CE  5040               	movf	i2send_msg@qptr,w,c
  8943  0012D0  26E1               	addwf	fsr1l,f,c
  8944  0012D2  5041               	movf	i2send_msg@qptr+1,w,c
  8945  0012D4  22E2               	addwfc	fsr1h,f,c
  8946  0012D6  50E7               	movf	indf1,w,c
  8947  0012D8  6E46               	movwf	??i2_send_msg& (0+255),c
  8948  0012DA  2846               	incf	??i2_send_msg,w,c
  8949  0012DC  0B03               	andlw	3
  8950  0012DE  6EDF               	movwf	indf2,c
  8951                           
  8952                           ;messages.c: 59: qmsg->full = 1;
  8953  0012E0  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8954  0012E4  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8955  0012E8  0E01               	movlw	1
  8956  0012EA  6EDF               	movwf	indf2,c
  8957                           
  8958                           ;messages.c: 60: return (1);
  8959  0012EC  0E01               	movlw	1
  8960  0012EE  0012               	return	
  8961  0012F0                     __end_ofi2_send_msg:
  8962                           	opt stack 0
  8963                           pclatu	equ	0xFFB
  8964                           pclath	equ	0xFFA
  8965                           tblptru	equ	0xFF8
  8966                           tblptrh	equ	0xFF7
  8967                           tblptrl	equ	0xFF6
  8968                           tablat	equ	0xFF5
  8969                           prodh	equ	0xFF4
  8970                           prodl	equ	0xFF3
  8971                           intcon	equ	0xFF2
  8972                           intcon2	equ	0xFF1
  8973                           postinc0	equ	0xFEE
  8974                           fsr0h	equ	0xFEA
  8975                           fsr0l	equ	0xFE9
  8976                           wreg	equ	0xFE8
  8977                           indf1	equ	0xFE7
  8978                           postdec1	equ	0xFE5
  8979                           fsr1h	equ	0xFE2
  8980                           fsr1l	equ	0xFE1
  8981                           bsr	equ	0xFE0
  8982                           indf2	equ	0xFDF
  8983                           postinc2	equ	0xFDE
  8984                           postdec2	equ	0xFDD
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function i2_memcpy *****************
  8990 ;; Defined at:
  8991 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  d1              2   53[COMRAM] PTR void 
  8994 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8995 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8996 ;;		 -> main@msgbuffer(11), NULL(0), 
  8997 ;;  s1              2   55[COMRAM] PTR const void 
  8998 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8999 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9000 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  9001 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9002 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  9003 ;;		 -> main@uc(5), NULL(0), 
  9004 ;;  n               2   57[COMRAM] unsigned int 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;  memcpy          2   61[COMRAM] PTR const unsigned char 
  9007 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9008 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9009 ;;		 -> moveDir@test(2), timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), 
  9010 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9011 ;;		 -> ToMainLow_MQ(54), main@ctrl(2), main@uthread_data(10), main@ic(28), 
  9012 ;;		 -> main@uc(5), NULL(0), 
  9013 ;;  memcpy          2   59[COMRAM] PTR unsigned char 
  9014 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9015 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9016 ;;		 -> main@msgbuffer(11), NULL(0), 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  2   53[COMRAM] PTR void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9026 ;;      Params:         6       0       0       0       0
  9027 ;;      Locals:         4       0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0
  9029 ;;      Totals:        10       0       0       0       0
  9030 ;;Total ram usage:       10 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		i2_send_msg
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text49
  9040  001D20                     __ptext49:
  9041                           	opt stack 0
  9042  001D20                     i2_memcpy:
  9043                           	opt stack 16
  9044                           
  9045                           ;incstack = 0
  9046  001D20  C039  F03F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9047  001D24  C038  F03E         	movff	i2memcpy@s1,i2memcpy@s
  9048  001D28  C037  F03D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9049  001D2C  C036  F03C         	movff	i2memcpy@d1,i2memcpy@d
  9050  001D30  D00E               	goto	i2l3394
  9051  001D32                     i2l3388:
  9052  001D32  C03E  FFD9         	movff	i2memcpy@s,fsr2l
  9053  001D36  C03F  FFDA         	movff	i2memcpy@s+1,fsr2h
  9054  001D3A  C03C  FFE1         	movff	i2memcpy@d,fsr1l
  9055  001D3E  C03D  FFE2         	movff	i2memcpy@d+1,fsr1h
  9056  001D42  CFDF FFE7          	movff	indf2,indf1
  9057  001D46  4A3E               	infsnz	i2memcpy@s,f,c
  9058  001D48  2A3F               	incf	i2memcpy@s+1,f,c
  9059  001D4A  4A3C               	infsnz	i2memcpy@d,f,c
  9060  001D4C  2A3D               	incf	i2memcpy@d+1,f,c
  9061  001D4E                     i2l3394:
  9062  001D4E  063A               	decf	i2memcpy@n,f,c
  9063  001D50  A0D8               	btfss	status,0,c
  9064  001D52  063B               	decf	i2memcpy@n+1,f,c
  9065  001D54  283A               	incf	i2memcpy@n& (0+255),w,c
  9066  001D56  B4D8               	btfsc	status,2,c
  9067  001D58  283B               	incf	(i2memcpy@n+1)& (0+255),w,c
  9068  001D5A  B4D8               	btfsc	status,2,c
  9069                           
  9070                           ;	Return value of i2_memcpy is never used
  9071  001D5C  0012               	return	
  9072  001D5E  D7E9               	goto	i2l3388
  9073  001D60                     __end_ofi2_memcpy:
  9074                           	opt stack 0
  9075                           pclatu	equ	0xFFB
  9076                           pclath	equ	0xFFA
  9077                           tblptru	equ	0xFF8
  9078                           tblptrh	equ	0xFF7
  9079                           tblptrl	equ	0xFF6
  9080                           tablat	equ	0xFF5
  9081                           prodh	equ	0xFF4
  9082                           prodl	equ	0xFF3
  9083                           intcon	equ	0xFF2
  9084                           intcon2	equ	0xFF1
  9085                           postinc0	equ	0xFEE
  9086                           fsr0h	equ	0xFEA
  9087                           fsr0l	equ	0xFE9
  9088                           wreg	equ	0xFE8
  9089                           indf1	equ	0xFE7
  9090                           postdec1	equ	0xFE5
  9091                           fsr1h	equ	0xFE2
  9092                           fsr1l	equ	0xFE1
  9093                           bsr	equ	0xFE0
  9094                           indf2	equ	0xFDF
  9095                           postinc2	equ	0xFDE
  9096                           postdec2	equ	0xFDD
  9097                           fsr2h	equ	0xFDA
  9098                           fsr2l	equ	0xFD9
  9099                           status	equ	0xFD8
  9100                           
  9101 ;; *************** function _SleepIfOkay *****************
  9102 ;; Defined at:
  9103 ;;		line 228 in file "src/messages.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;		None               void
  9110 ;; Registers used:
  9111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9117 ;;      Params:         0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    2
  9124 ;; This function calls:
  9125 ;;		_enter_sleep_mode
  9126 ;;		i2_check_msg
  9127 ;;		i2_in_high_int
  9128 ;;		i2_in_low_int
  9129 ;; This function is called by:
  9130 ;;		_InterruptHandlerHigh
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text50
  9135  001AF6                     __ptext50:
  9136                           	opt stack 0
  9137  001AF6                     _SleepIfOkay:
  9138                           	opt stack 17
  9139                           
  9140                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9141                           
  9142                           ;incstack = 0
  9143  001AF6  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  9144  001AF8  D001               	goto	i2l2454
  9145  001AFA  0012               	return	
  9146  001AFC                     i2l2454:
  9147                           
  9148                           ;messages.c: 232: }
  9149                           ;messages.c: 235: if (in_low_int()) {
  9150  001AFC  EC1D  F00F         	call	i2_in_low_int	;wreg free
  9151  001B00  5039               	movf	?i2_in_low_int+1,w,c
  9152  001B02  1038               	iorwf	?i2_in_low_int,w,c
  9153  001B04  A4D8               	btfss	status,2,c
  9154  001B06  0012               	return	
  9155                           
  9156                           ;messages.c: 237: }
  9157                           ;messages.c: 240: if (!in_high_int()) {
  9158                           
  9159                           ;messages.c: 236: return;
  9160  001B08  ECDF  F00F         	call	i2_in_high_int	;wreg free
  9161  001B0C  5037               	movf	?i2_in_high_int+1,w,c
  9162  001B0E  1036               	iorwf	?i2_in_high_int,w,c
  9163  001B10  B4D8               	btfsc	status,2,c
  9164  001B12  0012               	return	
  9165                           
  9166                           ;messages.c: 242: }
  9167                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9168                           
  9169                           ;messages.c: 241: return;
  9170  001B14  0101               	movlb	1	; () banked
  9171  001B16  0E01               	movlw	high _ToMainHigh_MQ
  9172  001B18  6E37               	movwf	i2check_msg@qptr+1,c
  9173  001B1A  0101               	movlb	1	; () banked
  9174  001B1C  0E6D               	movlw	low _ToMainHigh_MQ
  9175  001B1E  6E36               	movwf	i2check_msg@qptr,c
  9176  001B20  EC84  F00F         	call	i2_check_msg	;wreg free
  9177  001B24  0900               	iorlw	0
  9178  001B26  A4D8               	btfss	status,2,c
  9179  001B28  0012               	return	
  9180                           
  9181                           ;messages.c: 249: }
  9182                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9183                           
  9184                           ;messages.c: 248: return;
  9185  001B2A  0101               	movlb	1	; () banked
  9186  001B2C  0E01               	movlw	high _ToMainLow_MQ
  9187  001B2E  6E37               	movwf	i2check_msg@qptr+1,c
  9188  001B30  0101               	movlb	1	; () banked
  9189  001B32  0EA3               	movlw	low _ToMainLow_MQ
  9190  001B34  6E36               	movwf	i2check_msg@qptr,c
  9191  001B36  EC84  F00F         	call	i2_check_msg	;wreg free
  9192  001B3A  0900               	iorlw	0
  9193  001B3C  B4D8               	btfsc	status,2,c
  9194                           
  9195                           ;messages.c: 252: }
  9196                           ;messages.c: 253: enter_sleep_mode();
  9197                           
  9198                           ;messages.c: 251: return;
  9199  001B3E  ECE9  F00F         	call	_enter_sleep_mode	;wreg free
  9200  001B42  0012               	return	
  9201  001B44                     __end_of_SleepIfOkay:
  9202                           	opt stack 0
  9203                           pclatu	equ	0xFFB
  9204                           pclath	equ	0xFFA
  9205                           tblptru	equ	0xFF8
  9206                           tblptrh	equ	0xFF7
  9207                           tblptrl	equ	0xFF6
  9208                           tablat	equ	0xFF5
  9209                           prodh	equ	0xFF4
  9210                           prodl	equ	0xFF3
  9211                           intcon	equ	0xFF2
  9212                           intcon2	equ	0xFF1
  9213                           postinc0	equ	0xFEE
  9214                           fsr0h	equ	0xFEA
  9215                           fsr0l	equ	0xFE9
  9216                           wreg	equ	0xFE8
  9217                           indf1	equ	0xFE7
  9218                           postdec1	equ	0xFE5
  9219                           fsr1h	equ	0xFE2
  9220                           fsr1l	equ	0xFE1
  9221                           bsr	equ	0xFE0
  9222                           indf2	equ	0xFDF
  9223                           postinc2	equ	0xFDE
  9224                           postdec2	equ	0xFDD
  9225                           fsr2h	equ	0xFDA
  9226                           fsr2l	equ	0xFD9
  9227                           status	equ	0xFD8
  9228                           
  9229 ;; *************** function i2_in_low_int *****************
  9230 ;; Defined at:
  9231 ;;		line 30 in file "src/interrupts.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;		None
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  2   55[COMRAM] int 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9245 ;;      Params:         2       0       0       0       0
  9246 ;;      Locals:         0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0
  9248 ;;      Totals:         2       0       0       0       0
  9249 ;;Total ram usage:        2 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    1
  9252 ;; This function calls:
  9253 ;;		i2_in_high_int
  9254 ;; This function is called by:
  9255 ;;		_SleepIfOkay
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text51
  9260  001E3A                     __ptext51:
  9261                           	opt stack 0
  9262  001E3A                     i2_in_low_int:
  9263                           	opt stack 17
  9264                           
  9265                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9266                           
  9267                           ;incstack = 0
  9268  001E3A  ACF2               	btfss	intcon,6,c	;volatile
  9269  001E3C  D005               	goto	i2l3018
  9270                           
  9271                           ;interrupts.c: 32: return (0);
  9272  001E3E  0E00               	movlw	0
  9273  001E40  6E39               	movwf	?i2_in_low_int+1,c
  9274  001E42  0E00               	movlw	0
  9275  001E44  6E38               	movwf	?i2_in_low_int,c
  9276  001E46  0012               	return	
  9277  001E48                     i2l3018:
  9278  001E48  ECDF  F00F         	call	i2_in_high_int	;wreg free
  9279  001E4C  5037               	movf	?i2_in_high_int+1,w,c
  9280  001E4E  1036               	iorwf	?i2_in_high_int,w,c
  9281  001E50  B4D8               	btfsc	status,2,c
  9282  001E52  D005               	goto	i2l3026
  9283                           
  9284                           ;interrupts.c: 34: return (0);
  9285  001E54  0E00               	movlw	0
  9286  001E56  6E39               	movwf	?i2_in_low_int+1,c
  9287  001E58  0E00               	movlw	0
  9288  001E5A  6E38               	movwf	?i2_in_low_int,c
  9289  001E5C  0012               	return	
  9290  001E5E                     i2l3026:
  9291                           
  9292                           ;interrupts.c: 36: return (1);
  9293  001E5E  0E00               	movlw	0
  9294  001E60  6E39               	movwf	?i2_in_low_int+1,c
  9295  001E62  0E01               	movlw	1
  9296  001E64  6E38               	movwf	?i2_in_low_int,c
  9297  001E66  0012               	return	
  9298  001E68                     __end_ofi2_in_low_int:
  9299                           	opt stack 0
  9300                           pclatu	equ	0xFFB
  9301                           pclath	equ	0xFFA
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           intcon2	equ	0xFF1
  9310                           postinc0	equ	0xFEE
  9311                           fsr0h	equ	0xFEA
  9312                           fsr0l	equ	0xFE9
  9313                           wreg	equ	0xFE8
  9314                           indf1	equ	0xFE7
  9315                           postdec1	equ	0xFE5
  9316                           fsr1h	equ	0xFE2
  9317                           fsr1l	equ	0xFE1
  9318                           bsr	equ	0xFE0
  9319                           indf2	equ	0xFDF
  9320                           postinc2	equ	0xFDE
  9321                           postdec2	equ	0xFDD
  9322                           fsr2h	equ	0xFDA
  9323                           fsr2l	equ	0xFD9
  9324                           status	equ	0xFD8
  9325                           
  9326 ;; *************** function i2_in_high_int *****************
  9327 ;; Defined at:
  9328 ;;		line 22 in file "src/interrupts.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  2   53[COMRAM] int 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9342 ;;      Params:         2       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0
  9345 ;;      Totals:         2       0       0       0       0
  9346 ;;Total ram usage:        2 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_SleepIfOkay
  9352 ;;		i2_in_low_int
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text52
  9357  001FBE                     __ptext52:
  9358                           	opt stack 0
  9359  001FBE                     i2_in_high_int:
  9360                           	opt stack 17
  9361                           
  9362                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9363                           
  9364                           ;incstack = 0
  9365  001FBE  0E00               	movlw	0
  9366  001FC0  AEF2               	btfss	intcon,7,c	;volatile
  9367  001FC2  0E01               	movlw	1
  9368  001FC4  6E36               	movwf	?i2_in_high_int,c
  9369  001FC6  6A37               	clrf	?i2_in_high_int+1,c
  9370  001FC8  0012               	return	
  9371  001FCA                     __end_ofi2_in_high_int:
  9372                           	opt stack 0
  9373                           pclatu	equ	0xFFB
  9374                           pclath	equ	0xFFA
  9375                           tblptru	equ	0xFF8
  9376                           tblptrh	equ	0xFF7
  9377                           tblptrl	equ	0xFF6
  9378                           tablat	equ	0xFF5
  9379                           prodh	equ	0xFF4
  9380                           prodl	equ	0xFF3
  9381                           intcon	equ	0xFF2
  9382                           intcon2	equ	0xFF1
  9383                           postinc0	equ	0xFEE
  9384                           fsr0h	equ	0xFEA
  9385                           fsr0l	equ	0xFE9
  9386                           wreg	equ	0xFE8
  9387                           indf1	equ	0xFE7
  9388                           postdec1	equ	0xFE5
  9389                           fsr1h	equ	0xFE2
  9390                           fsr1l	equ	0xFE1
  9391                           bsr	equ	0xFE0
  9392                           indf2	equ	0xFDF
  9393                           postinc2	equ	0xFDE
  9394                           postdec2	equ	0xFDD
  9395                           fsr2h	equ	0xFDA
  9396                           fsr2l	equ	0xFD9
  9397                           status	equ	0xFD8
  9398                           
  9399 ;; *************** function i2_check_msg *****************
  9400 ;; Defined at:
  9401 ;;		line 222 in file "src/messages.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  qptr            2   53[COMRAM] PTR struct __msg_queue
  9404 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      unsigned char 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9416 ;;      Params:         2       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0
  9418 ;;      Temps:          1       0       0       0       0
  9419 ;;      Totals:         3       0       0       0       0
  9420 ;;Total ram usage:        3 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_SleepIfOkay
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text53
  9430  001F08                     __ptext53:
  9431                           	opt stack 0
  9432  001F08                     i2_check_msg:
  9433                           	opt stack 18
  9434                           
  9435                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9436                           
  9437                           ;incstack = 0
  9438  001F08  EE20 F035          	lfsr	2,53
  9439  001F0C  5036               	movf	i2check_msg@qptr,w,c
  9440  001F0E  26D9               	addwf	fsr2l,f,c
  9441  001F10  5037               	movf	i2check_msg@qptr+1,w,c
  9442  001F12  22DA               	addwfc	fsr2h,f,c
  9443  001F14  50DF               	movf	indf2,w,c
  9444  001F16  6E38               	movwf	??i2_check_msg& (0+255),c
  9445  001F18  5038               	movf	??i2_check_msg,w,c
  9446  001F1A  0D0D               	mullw	13
  9447  001F1C  50F3               	movf	prodl,w,c
  9448  001F1E  2436               	addwf	i2check_msg@qptr,w,c
  9449  001F20  6ED9               	movwf	fsr2l,c
  9450  001F22  50F4               	movf	prodh,w,c
  9451  001F24  2037               	addwfc	i2check_msg@qptr+1,w,c
  9452  001F26  6EDA               	movwf	fsr2h,c
  9453  001F28  50DF               	movf	indf2,w,c
  9454  001F2A  0012               	return	
  9455  001F2C                     __end_ofi2_check_msg:
  9456                           	opt stack 0
  9457                           pclatu	equ	0xFFB
  9458                           pclath	equ	0xFFA
  9459                           tblptru	equ	0xFF8
  9460                           tblptrh	equ	0xFF7
  9461                           tblptrl	equ	0xFF6
  9462                           tablat	equ	0xFF5
  9463                           prodh	equ	0xFF4
  9464                           prodl	equ	0xFF3
  9465                           intcon	equ	0xFF2
  9466                           intcon2	equ	0xFF1
  9467                           postinc0	equ	0xFEE
  9468                           fsr0h	equ	0xFEA
  9469                           fsr0l	equ	0xFE9
  9470                           wreg	equ	0xFE8
  9471                           indf1	equ	0xFE7
  9472                           postdec1	equ	0xFE5
  9473                           fsr1h	equ	0xFE2
  9474                           fsr1l	equ	0xFE1
  9475                           bsr	equ	0xFE0
  9476                           indf2	equ	0xFDF
  9477                           postinc2	equ	0xFDE
  9478                           postdec2	equ	0xFDD
  9479                           fsr2h	equ	0xFDA
  9480                           fsr2l	equ	0xFD9
  9481                           status	equ	0xFD8
  9482                           
  9483 ;; *************** function _enter_sleep_mode *****************
  9484 ;; Defined at:
  9485 ;;		line 202 in file "src/messages.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;		None               void
  9492 ;; Registers used:
  9493 ;;		None
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9499 ;;      Params:         0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0
  9502 ;;      Totals:         0       0       0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_SleepIfOkay
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text54
  9513  001FD2                     __ptext54:
  9514                           	opt stack 0
  9515  001FD2                     _enter_sleep_mode:
  9516                           	opt stack 18
  9517                           
  9518                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9519                           
  9520                           ;incstack = 0
  9521  001FD2  8ED3               	bsf	4051,7,c	;volatile
  9522  001FD4  0003               	sleep		;# 
  9523  001FD6  0012               	return	
  9524  001FD8                     __end_of_enter_sleep_mode:
  9525                           	opt stack 0
  9526  0000                     pclatu	equ	0xFFB
  9527                           pclath	equ	0xFFA
  9528                           tblptru	equ	0xFF8
  9529                           tblptrh	equ	0xFF7
  9530                           tblptrl	equ	0xFF6
  9531                           tablat	equ	0xFF5
  9532                           prodh	equ	0xFF4
  9533                           prodl	equ	0xFF3
  9534                           intcon	equ	0xFF2
  9535                           intcon2	equ	0xFF1
  9536                           postinc0	equ	0xFEE
  9537                           fsr0h	equ	0xFEA
  9538                           fsr0l	equ	0xFE9
  9539                           wreg	equ	0xFE8
  9540                           indf1	equ	0xFE7
  9541                           postdec1	equ	0xFE5
  9542                           fsr1h	equ	0xFE2
  9543                           fsr1l	equ	0xFE1
  9544                           bsr	equ	0xFE0
  9545                           indf2	equ	0xFDF
  9546                           postinc2	equ	0xFDE
  9547                           postdec2	equ	0xFDD
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           pclatu	equ	0xFFB
  9552                           pclath	equ	0xFFA
  9553                           tblptru	equ	0xFF8
  9554                           tblptrh	equ	0xFF7
  9555                           tblptrl	equ	0xFF6
  9556                           tablat	equ	0xFF5
  9557                           prodh	equ	0xFF4
  9558                           prodl	equ	0xFF3
  9559                           intcon	equ	0xFF2
  9560                           intcon2	equ	0xFF1
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           indf1	equ	0xFE7
  9566                           postdec1	equ	0xFE5
  9567                           fsr1h	equ	0xFE2
  9568                           fsr1l	equ	0xFE1
  9569                           bsr	equ	0xFE0
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           postdec2	equ	0xFDD
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577                           	psect	rparam
  9578  0000                     pclatu	equ	0xFFB
  9579                           pclath	equ	0xFFA
  9580                           tblptru	equ	0xFF8
  9581                           tblptrh	equ	0xFF7
  9582                           tblptrl	equ	0xFF6
  9583                           tablat	equ	0xFF5
  9584                           prodh	equ	0xFF4
  9585                           prodl	equ	0xFF3
  9586                           intcon	equ	0xFF2
  9587                           intcon2	equ	0xFF1
  9588                           postinc0	equ	0xFEE
  9589                           fsr0h	equ	0xFEA
  9590                           fsr0l	equ	0xFE9
  9591                           wreg	equ	0xFE8
  9592                           indf1	equ	0xFE7
  9593                           postdec1	equ	0xFE5
  9594                           fsr1h	equ	0xFE2
  9595                           fsr1l	equ	0xFE1
  9596                           bsr	equ	0xFE0
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           postdec2	equ	0xFDD
  9600                           fsr2h	equ	0xFDA
  9601                           fsr2l	equ	0xFD9
  9602                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         220
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70      74
    BANK0           128     80      88
    BANK1           256    109     217
    BANK2           256      0     108
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    moveDir@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 44
		 -> main@t1thread_data(BANK1[44]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 44
		 -> main@t1thread_data(BANK1[44]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 44
		 -> main@t1thread_data(BANK1[44]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 4
		 -> main@t0thread_data(BANK1[4]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 4
		 -> main@t0thread_data(BANK1[4]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), main@ctrl(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), 
		 -> main@ctrl(BANK1[2]), main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> moveDir@test(BANK0[2]), timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), 
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _moveDir->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               127   127      0   21889
                                             79 BANK0      1     1      0
                                              0 BANK1    109   109      0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                            _moveDir
                        _sendUARTarr
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    2541
                                             60 BANK0     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1951
                                             56 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      14     6      8    3453
                                             65 BANK0     14     6      8
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                             34 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      12     4      8    3351
                                             65 BANK0     12     4      8
                            ___awmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     348
                                             34 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             34 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDir                                              6     2      4    3070
                                             65 BANK0      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          5     3      2    2652
                                             60 BANK0      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2307
                                             56 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1757
                                             44 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     196
                                             34 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     262
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2      86
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             38 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             34 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             34 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             40 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             38 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             36 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             34 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             34 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             34 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             58 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             58 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             44 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             34 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             34 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             34 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 18    18      0    8436
                                             35 COMRAM    18    18      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               6     6      0    2663
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    2477
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    2283
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    2898
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    2875
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2386
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     929
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3744
                                             20 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    11    11      0    3508
                                              9 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             53 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    2902
                                              5 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2347
                                             63 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             53 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             55 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             53 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             53 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _moveDir
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _sendUARTarr
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
     ___awmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      6C       8       42.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100     6D      D9       6       84.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     50      58       4       68.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      4A       1       58.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E7      11        0.0%
DATA                 0      0     1E7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Mar 19 11:04:10 2015

               main@uthread_data 0112         _MQ_Main_Willing_to_block 0049  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1C9E  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1E04  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l141 096C                              l135 08E0  
                            l513 16B6                              l514 16B8  
                            l515 16C6                              l516 16C8  
                            l509 1696                              l472 1D7A  
                            l474 1D92                              l475 1D94  
                            l742 1F88             ?_FromMainLow_sendmsg 00B8  
__size_of_uart_trans_int_handler 005A             __size_of_WriteTimer1 0012  
                   ___awmod@sign 00A8                   _FromMainLow_MQ 0236  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 00A2                 ??_init_uart_recv 00A4  
                           l1054 1800                             l3002 17EC  
                           l2270 1BC6                             l2262 1BA4  
                           l2530 088E                             l2522 084C  
                           l2284 1C0A                             l2532 08E6  
                           l2540 0938                             l2534 08FE  
                           l2542 0950                             l2624 1D7C  
                           l2800 101C                             l2544 0972  
                           l2552 09DC                             l2536 0916  
                           l2560 0A32                             l2650 1698  
                           l2642 1682                             l2730 1880  
                           l2546 09A0                             l2554 09F4  
                           l2724 1854                             l2804 1044  
                           l2572 0B14                             l2548 09BE  
                           l2718 1828                             l2750 1C2A  
                           l2566 0A70                             l2558 0A14  
                           l2816 18D0                             l2568 0AC2  
                           l2834 0EE2                             l2762 0E18  
                           l2780 1128                             l2854 1A84  
                           l2758 0D94                             l2848 1A60  
                           l2970 0CF4                             l2962 0CB0  
                           l2868 0BA0                             l2884 0C66  
                           l2972 0D06                             l2974 0D0E  
                           l2982 0D56                             l2966 0CD6  
                           l2986 0D6E                             l2978 0D42  
                           l2994 179E                             l2996 17B0  
                           l2998 17B8                             _LATA 000F89  
                           _LATB 000F8A                             u2527 1F8A  
                           u1745 1102                             i1l59 008C  
                _FromMainHigh_MQ 0200                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 114C  
                           _main 0730                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 0123  
                     i1_send_msg 1482                             pclat 000FFA  
                    i2_check_msg 1F08                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0036  
                           start 00D2                    __CFG_FOSC2$ON 000000  
                     i2_send_msg 121E        ToMainHigh_recvmsg@msgtype 00BA  
                 send_msg@length 00AE      __size_of_timer0_int_handler 0002  
                    _Delay1KTCYx 1F84            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00BB                            ?_main 0001  
                __end_of___awmod 0D78     __size_ofi1_ToMainLow_sendmsg 0026  
                          _CMCON 000FB4                            _T1CON 000FCD  
          init_uart_lthread@uptr 00A2                  __end_of___lwmod 180A  
                     i1memcpy@d1 0001                            i1l372 1AF2  
                          i2l301 019E                            i1l527 1F58  
                          i1l375 1ACA                            i2l305 01E2  
                          i2l333 054A                            i2l327 04AA  
                          i2l319 0372                            i2l289 1436  
                          i2l299 0538                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR1H 000FCF                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                sendUARTarr@length 00C0  
                     i2memcpy@d1 0036                       i2memcpy@s1 0038  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
              sendUARTarr@retval 00BF                  __end_of_in_main 1C1A  
     ToMainLow_recvmsg@maxlength 00BE          timer0_lthread@msgbuffer 00C7  
                __end_of_moveDir 1A3E          i2c_configure_slave@addr 00A2  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 1A9C                 __end_ofi1_memcpy 1D20  
               __end_ofi2_memcpy 1D60                     ?_sendUARTarr 00BC  
                __initialization 1B44       uart_trans_int_handler@data 001F  
                   __end_of_main 0B34     uart_trans_int_handler@length 0023  
     __size_of_ToMainLow_recvmsg 0042       __size_of_ToMainLow_sendmsg 0036  
          __size_ofi2_in_low_int 002E                           ??_main 00CF  
                send_msg@msgtype 00AF                    __activetblptr 000002  
                send_msg@tlength 00B3       FromMainLow_sendmsg@msgtype 00B8  
           __end_of_handle_start 1482                           _ADCON1 000FC1  
        ??_uart_recv_int_handler 001B                           i1l3114 1192  
                         i1l3130 121A                           i1l3060 1CF2  
                         i1l3066 1D0E                           i1l3090 14BA  
                         i1l3154 15A8                           i1l3190 0082  
                         i1l3176 1AE4                           i1l3184 0078  
                         i2l3026 1E5E                           i2l3018 1E48  
                         i2l3202 1602                           i2l3302 043A  
                         i2l3230 017C                           i2l3214 1624  
                         i2l3208 160C                           i2l3330 054E  
                     _OpenTimer1 1D60                           i2l3324 050C  
                         i2l3236 0194                           i2l2454 1AFC  
                         i2l3254 021A                   __CFG_WDTEN$OFF 000000  
                         i2l3352 06EE                           i2l3344 0648  
                         i2l3336 05AE                           i2l3272 029A  
                         i2l3256 0246                           i2l3274 02DA  
                         i2l3266 0282                           i2l3374 126A  
                         i2l3296 03E6                           i2l3394 1D4E  
                         i2l3298 0428                           i2l3388 1D32  
                         i2l2924 1452                           i2l2926 146A  
    __end_of_i2c_configure_slave 1EBA                    ??_SleepIfOkay 003A  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                      ?i1_send_msg 000B  
  __end_of_start_i2c_slave_reply 0E86               timer0_lthread@temp 00CB  
             timer0_lthread@tptr 00C1          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1E3A                      ?i2_send_msg 0040  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 00D6                        ??___awmod 00A6  
                         _ic_ptr 00D4                        ??___lwmod 00A6  
                  main@msgbuffer 0100                 __end_of_init_i2c 19DA  
               OpenTimer1@config 00A2                           _memcpy 1A3E  
                         clear_0 1B4A                           clear_1 1B56  
                ___awmod@divisor 00A4                           _uc_ptr 0047  
                ___awmod@counter 00A7                           main@ic 0151  
                         main@uc 011E                 __end_of_recv_msg 0C6A  
    start_i2c_slave_reply@length 00A6                        ??_in_main 00A8  
               __end_of_send_msg 0F8A                        ??_moveDir 00C5  
        i2c_int_handler@i2c_data 0090                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00A5         ToMainLow_recvmsg@msgtype 00BA  
           __size_of_in_high_int 0012          FromMainLow_sendmsg@data 00B9  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1FDC  
                     __accesstop 0080          __end_of__initialization 1B86  
     __end_of_ToMainHigh_recvmsg 1CE0       __end_of_ToMainHigh_sendmsg 1E92  
             ?_init_uart_lthread 00A2      __end_of_init_timer0_lthread 1F84  
    __end_of_init_timer1_lthread 13BA              __end_of_SleepIfOkay 1B44  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1FD8  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 00A4  
             __size_of_check_msg 0036                __end_of_ReadUSART 1F68  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 165A  
    __end_of_InterruptHandlerLow 00D2                        ?i2_memcpy 0036  
                  _ToMainHigh_MQ 016D                 _enter_sleep_mode 1FD2  
            __size_ofi2_send_msg 00D2             timer1_lthread@length 00C5  
                  ReadUSART@data 0001                __end_of_OpenUSART 16F4  
                  check_msg@qptr 00A2        __end_of_init_uart_lthread 1FDE  
        ??_block_on_To_msgqueues 00A8             __size_of_init_queues 006E  
                     __pbssBANK0 00D6                       __pbssBANK1 016D  
                     __pbssBANK2 0200                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0022                       __pnvCOMRAM 0047  
            i1_ToMainLow_sendmsg 1EE2          __end_of_i2c_int_handler 0730  
                   ?i2_check_msg 0036               timer1_lthread@temp 00CD  
             timer1_lthread@tptr 00C1             __size_of_sendUARTarr 0042  
              recv_msg@maxlength 00AE                  recv_msg@msgtype 00AF  
                recv_msg@tlength 00B6            __size_of_handle_start 00C8  
                   ?_Delay1KTCYx 0001                          ?_memcpy 00A2  
               WriteTimer1@timer 00A4                    ??_WriteTimer1 00A4  
        __size_of_timer0_lthread 008C             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 00D8                      moveDir@test 00C5  
            timer0_lthread@F5149 00D2                      moveDir@tptr 00C1  
                     ??i1_memcpy 0007                       ??i2_memcpy 003C  
               i1send_msg@length 000D                    i2_in_high_int 1FBE  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1E3A                        ?_init_i2c 00A2  
                    _SleepIfOkay 1AF6                        ?_recv_msg 00AC  
                     _in_low_int 1B90                     _handle_start 13BA  
                        __Hparam 0000                        ?_send_msg 00AC  
                        __Lparam 0000       __end_of_timer0_int_handler 1FE0  
    __end_of_FromMainLow_recvmsg 1EE2      __end_of_FromMainLow_sendmsg 1DCE  
               init_uart_recv@uc 00A2                          ___awmod 0C6A  
                        ___lwmod 1780                  __CFG_STVREN$OFF 000000  
                  moveDir@cmDist 00C3                          __pcinit 1B44  
                __size_of_memcpy 005E                       _init_queue 1888  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer1 0038                          __ptext0 0730  
                        __ptext1 0F8A                          __ptext2 1D98  
                        __ptext3 1074                          __ptext4 1780  
                        __ptext5 16F4                          __ptext6 0C6A  
                        __ptext7 0D78                          __ptext8 19DA  
                        __ptext9 1C1A                uart_lthread@index 00C5  
                        _in_main 1BD6                        _T1CONbits 000FCD  
               ___awmod@dividend 00A2                          _moveDir 19DA  
            __end_of_WriteTimer1 1FAC                   ?i2_in_high_int 0036  
 __end_of_uart_trans_int_handler 1AF6       __size_of_init_uart_lthread 0002  
                 __pintcode_body 15C8             end_of_initialization 1B86  
        timer1_lthread@msgbuffer 00C7   __size_of_uart_recv_int_handler 009C  
                        memcpy@d 00A8                          memcpy@n 00A6  
                        memcpy@s 00AA    __end_of_uart_recv_int_handler 15C8  
                     ??_init_i2c 00A4                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 008E                    __Lmediumconst 0000  
                        int_func 15C8                     ??i1_send_msg 0011  
                  ?_uart_lthread 00BC          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00B3  
                   ??i2_send_msg 0046                       ??_send_msg 00B2  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0085  
             __end_ofi1_recv_msg 121E               __end_ofi1_send_msg 152C  
                      _TRISCbits 000F94               __end_ofi2_send_msg 12F0  
                 ??_uart_lthread 00C4                        _TXSTAbits 000FAC  
                     main@length 0150                      ?_in_low_int 00A4  
          timer0_lthread@msgtype 00C3            _start_i2c_slave_reply 0D78  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 1FD8               _ToMainHigh_recvmsg 1C9E  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1E68  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 16F4                      ?_init_queue 00A2  
                      i2memcpy@d 003C                      _WriteTimer1 1F9A  
                      i2memcpy@n 003A                        i2memcpy@s 003E  
                 _timer1_lthread 1074                   __end_of_memcpy 1A9C  
              _enable_interrupts 1FCA             __size_of_Delay1KTCYx 0016  
            ?_ToMainHigh_recvmsg 00BA                  ??i2_in_high_int 0038  
       i2c_int_handler@data_read 0093              ?_ToMainHigh_sendmsg 0085  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1B44                    ??_in_high_int 00A4  
                      _ReadUSART 1F4A                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 00BB  
            ??_enable_interrupts 00A2                     ??_OpenTimer1 00A2  
 __size_of_block_on_To_msgqueues 007E    __end_of_block_on_To_msgqueues 1888  
                      _OpenUSART 1662     __end_of_InterruptHandlerHigh 1662  
                     init_i2c@ic 00A2             ??_ToMainHigh_recvmsg 00BE  
           ??_ToMainHigh_sendmsg 0047           __end_of_timer0_lthread 1780  
       i2c_int_handler@error_buf 008B                      __pdataBANK0 00D0  
         __end_of_timer1_lthread 114C        __end_of_enable_interrupts 1FD2  
                       ??_memcpy 00A8            timer1_lthread@msgtype 00C3  
   __size_of_init_timer0_lthread 001C     __size_of_init_timer1_lthread 00CA  
             __end_of_OpenTimer1 1D98         i2c_int_handler@msg_ready 0092  
            timer1_lthread@F5156 00D6                      __pbssCOMRAM 0049  
                     ?_ReadUSART 0001                    ??_init_queues 00A6  
                  __pcstackBANK0 0080                    __pcstackBANK1 0100  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00A2  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00A2  
       ToMainLow_sendmsg@msgtype 00B8     __size_of_InterruptHandlerLow 00BA  
            __end_of_in_high_int 1FBE                       ?_OpenUSART 00A2  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00BC  
                   _ToMainLow_MQ 01A3              __size_of_init_queue 007A  
                 _init_uart_recv 1F2C                        _check_msg 1E04  
                      __pnvBANK0 00D4           ?_start_i2c_slave_reply 00A2  
              __size_of_init_i2c 006A                    ??_sendUARTarr 00BE  
                   recv_msg@data 00B1                     recv_msg@qmsg 00B8  
                   recv_msg@slot 00B5                     recv_msg@qptr 00AC  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 0104                         ?___awmod 00A2  
                ?_timer0_lthread 00C1                         ?___lwmod 00A2  
                ?_timer1_lthread 00C1                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00BC                     moveDir@F5160 00D0  
           __end_of_uart_lthread 1074       i2c_int_handler@msg_to_send 0091  
                       ?_in_main 00A6               _timer0_int_handler 1FDE  
              WriteTimer1@timer1 00A2       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 00BE          init_timer0_lthread@tptr 00A2  
                       ?_moveDir 00C1            ToMainLow_sendmsg@data 00B9  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 00BC           __end_of_init_uart_recv 1F4A  
            __end_of_init_queues 1970                  i2check_msg@qptr 0036  
                     ?_check_msg 00A2                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0038  
                       i2u223_40 1620                         i2u223_46 1622  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0086  
    __end_ofi1_ToMainLow_sendmsg 1F08                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
           ??_timer0_int_handler 0036                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1C5C  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0028     __size_of_FromMainLow_sendmsg 0036  
           timer0_lthread@length 00C5                         i1_memcpy 1CE0  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1D20             timer0_lthread@msgval 00C9  
                    _in_high_int 1FAC                     send_msg@data 00B0  
            _i2c_configure_slave 1E92                     send_msg@qmsg 00B6  
                   send_msg@slot 00B5                     send_msg@qptr 00AC  
                sendUARTarr@data 00BC                      _INTCON2bits 000FF1  
          uart_lthread@msgbuffer 00C2                        copy_data0 1B7A  
                ?_init_uart_recv 00A2                      ??_OpenUSART 00A4  
                OpenUSART@config 00A7                   ??i2_in_low_int 003A  
          _uart_recv_int_handler 152C                     ??_in_low_int 00A6  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
       __size_of_i2c_int_handler 065A                 __size_of___awmod 010E  
             ??_enter_sleep_mode 0036                 __size_of___lwmod 008A  
                   ??_init_queue 00A4                     ?_WriteTimer1 00A2  
        ToMainLow_sendmsg@length 00BB                main@t0thread_data 010E  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 0043      ToMainHigh_recvmsg@maxlength 00BE  
              i2send_msg@tlength 0080          init_timer1_lthread@tptr 00A2  
                    _init_queues 1902               __end_of_in_low_int 1BD6  
               __size_of_moveDir 0064                         __ptext10 1DCE  
                       __ptext11 0E86                         __ptext20 1E92  
                       __ptext12 1F9A                         __ptext21 1FCA  
                       __ptext13 1F2C                         __ptext30 0B34  
                       __ptext22 180A                         __ptext14 1FDC  
                       __ptext31 1A3E                         __ptext23 1BD6  
                       __ptext15 12F0                         __ptext40 1482  
                       __ptext32 1662                         __ptext24 1B90  
                       __ptext16 1F68                         __ptext41 1CE0  
                       __ptext33 1D60                         __ptext25 1FAC  
                       __ptext17 1902                         __ptext50 1AF6  
                       __ptext42 1F4A                         __ptext26 1E04  
                       __ptext18 1888                         __ptext51 1E3A  
                       __ptext35 1A9C                         __ptext27 1F84  
                       __ptext19 1970                         __ptext52 1FBE  
                       __ptext44 1FDE                         __ptext36 1EBA  
                       __ptext28 1C5C                         __ptext53 1F08  
                       __ptext45 00D6                         __ptext37 114C  
                       __ptext29 1C9E                         __ptext54 1FD2  
                       __ptext46 13BA                         __ptext38 152C  
                       __ptext47 1E68                         __ptext39 1EE2  
                       __ptext48 121E                         __ptext49 1D20  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 00C0  
            _init_timer0_lthread 1F68               uart_lthread@status 00C4  
                       _init_i2c 1970              _init_timer1_lthread 12F0  
                  __size_of_main 0404                    ??i2_check_msg 0038  
              main@t1thread_data 0124                      ??_check_msg 00A4  
             __end_of_init_queue 1902             __size_of_SleepIfOkay 004E  
                       _recv_msg 0B34            ??_i2c_configure_slave 00A2  
                       _send_msg 0E86                      _sendUARTarr 1C1A  
                 init_queue@qptr 00A2            __size_of_uart_lthread 00EA  
  uart_trans_int_handler@msgtype 0021                    ??_Delay1KTCYx 00A2  
                       main@baud 010B             ?_init_timer0_lthread 00A2  
                       main@ctrl 011C              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00A2         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00A2                         memcpy@d1 00A2  
                       memcpy@s1 00A4            __end_ofi2_in_high_int 1FCA  
   i2c_int_handler@overrun_error 008F                 i2send_msg@length 0042  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00A4  
               ___lwmod@dividend 00A2           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0F8A                   main@UARTConfig 010C  
          _block_on_To_msgqueues 180A                    ?_handle_start 0001  
               ??_timer0_lthread 00C9      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00C9                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0088  
            __end_ofi2_check_msg 1F2C            ??_init_timer0_lthread 00A4  
          ??_init_timer1_lthread 00A4           ??_InterruptHandlerHigh 0094  
              _ToMainLow_recvmsg 1C5C                _ToMainLow_sendmsg 1DCE  
             main@last_reg_recvd 010D                  ___lwmod@divisor 00A4  
           __end_ofi2_in_low_int 1E68               ?_ToMainLow_recvmsg 00BA  
            __end_of_Delay1KTCYx 1F9A                ??_i2c_int_handler 0089  
                ___lwmod@counter 00A7               ?_ToMainLow_sendmsg 00B8  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0044            ??_InterruptHandlerLow 0024  
            ??_ToMainLow_recvmsg 00BE                   i2send_msg@qmsg 0083  
                 i2send_msg@slot 0082                   i2send_msg@qptr 0040  
            ??_ToMainLow_sendmsg 00BB              _FromMainLow_recvmsg 1EBA  
                 ??_handle_start 0036              _FromMainLow_sendmsg 1D98  
                   _USART_Status 004A  
