

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Feb 25 10:40:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  001D78                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for timer0_int_handler@F5104
    88  001D78  58                 	db	88
    89                           
    90                           	psect	idataBANK1
    91  001D74                     __pidataBANK1:
    92                           	opt stack 0
    93                           
    94                           ;initializer for main@F5210
    95  001D74  C8                 	db	200
    96  001D75  4B                 	db	75
    97  0000                     _ADCON1	set	4033
    98  0000                     _CMCON	set	4020
    99  0000                     _INTCONbits	set	4082
   100  0000                     _IPR1bits	set	3999
   101  0000                     _LATA	set	3977
   102  0000                     _LATAbits	set	3977
   103  0000                     _LATB	set	3978
   104  0000                     _OSCCON	set	4051
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _OSCTUNEbits	set	3995
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTA	set	3968
   110  0000                     _PORTB	set	3969
   111  0000                     _RCONbits	set	4048
   112  0000                     _RCREG	set	4014
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _SSPADD	set	4040
   118  0000                     _SSPBUF	set	4041
   119  0000                     _SSPCON1	set	4038
   120  0000                     _SSPCON1bits	set	4038
   121  0000                     _SSPCON2	set	4037
   122  0000                     _SSPCON2bits	set	4037
   123  0000                     _SSPSTAT	set	4039
   124  0000                     _SSPSTATbits	set	4039
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _T1CON	set	4045
   128  0000                     _T1CONbits	set	4045
   129  0000                     _TMR0H	set	4055
   130  0000                     _TMR0L	set	4054
   131  0000                     _TMR1H	set	4047
   132  0000                     _TMR1L	set	4046
   133  0000                     _TRISA	set	3986
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISCbits	set	3988
   136  0000                     _TXREG	set	4013
   137  0000                     _TXSTA	set	4012
   138  0000                     _TXSTAbits	set	4012
   139                           
   140                           	psect	nvCOMRAM
   141  000048                     __pnvCOMRAM:
   142                           	opt stack 0
   143  000048                     _uc_ptr:
   144                           	opt stack 0
   145  000048                     	ds	2
   146                           
   147                           	psect	nvBANK0
   148  0000DC                     __pnvBANK0:
   149                           	opt stack 0
   150  0000DC                     _ic_ptr:
   151                           	opt stack 0
   152  0000DC                     	ds	2
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  001712                     __pcinit:
   158                           	opt stack 0
   159  001712                     start_initialization:
   160                           	opt stack 0
   161  001712                     __initialization:
   162                           	opt stack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (162 bytes)
   165  001712  EE01  F000         	lfsr	0,__pbssBANK1
   166  001716  0EA2               	movlw	162
   167  001718                     clear_0:
   168  001718  6AEE               	clrf	postinc0,c
   169  00171A  06E8               	decf	wreg,f,c
   170  00171C  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (54 bytes)
   173  00171E  EE00  F080         	lfsr	0,__pbssBANK0
   174  001722  0E36               	movlw	54
   175  001724                     clear_1:
   176  001724  6AEE               	clrf	postinc0,c
   177  001726  06E8               	decf	wreg,f,c
   178  001728  E1FD               	bnz	clear_1
   179                           
   180                           ; Clear objects allocated to COMRAM (2 bytes)
   181  00172A  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   182  00172C  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   183                           
   184                           ; Initialize objects allocated to BANK1 (2 bytes)
   185                           ; load TBLPTR registers with __pidataBANK1
   186  00172E  0E74               	movlw	low __pidataBANK1
   187  001730  6EF6               	movwf	tblptrl,c
   188  001732  0E1D               	movlw	high __pidataBANK1
   189  001734  6EF7               	movwf	tblptrh,c
   190  001736  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   191  001738  6EF8               	movwf	tblptru,c
   192  00173A  0009               	tblrd		*+	;fetch initializer
   193  00173C  CFF5 F1C3          	movff	tablat,__pdataBANK1
   194  001740  0009               	tblrd		*+	;fetch initializer
   195  001742  CFF5 F1C4          	movff	tablat,__pdataBANK1+1
   196                           
   197                           ; Initialize objects allocated to BANK0 (1 bytes)
   198                           ; load TBLPTR registers with __pidataBANK0
   199  001746  0E78               	movlw	low __pidataBANK0
   200  001748  6EF6               	movwf	tblptrl,c
   201  00174A  0E1D               	movlw	high __pidataBANK0
   202  00174C  6EF7               	movwf	tblptrh,c
   203  00174E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   204  001750  6EF8               	movwf	tblptru,c
   205  001752  0009               	tblrd		*+	;fetch initializer
   206  001754  CFF5 F0DE          	movff	tablat,__pdataBANK0
   207  001758                     end_of_initialization:
   208                           	opt stack 0
   209  001758                     __end_of__initialization:
   210                           	opt stack 0
   211  001758  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212  00175A  6EF8               	movwf	tblptru,c
   213  00175C  0100               	movlb	0
   214  00175E  EF8F  F003         	goto	_main	;jump to C main() function
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           
   222                           	psect	bssCOMRAM
   223  00004A                     __pbssCOMRAM:
   224                           	opt stack 0
   225  00004A                     _MQ_Main_Willing_to_block:
   226                           	opt stack 0
   227  00004A                     	ds	1
   228  00004B                     _USART_Status:
   229                           	opt stack 0
   230  00004B                     	ds	1
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           	psect	bssBANK0
   239  000080                     __pbssBANK0:
   240                           	opt stack 0
   241  000080                     _ToMainLow_MQ:
   242                           	opt stack 0
   243  000080                     	ds	54
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	dataBANK0
   252  0000DE                     __pdataBANK0:
   253                           	opt stack 0
   254  0000DE                     timer0_int_handler@F5104:
   255                           	opt stack 0
   256  0000DE                     	ds	1
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           tblptrl	equ	0xFF6
   260                           tablat	equ	0xFF5
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt stack 0
   267  000100                     _FromMainHigh_MQ:
   268                           	opt stack 0
   269  000100                     	ds	54
   270  000136                     _FromMainLow_MQ:
   271                           	opt stack 0
   272  000136                     	ds	54
   273  00016C                     _ToMainHigh_MQ:
   274                           	opt stack 0
   275  00016C                     	ds	54
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	dataBANK1
   284  0001C3                     __pdataBANK1:
   285                           	opt stack 0
   286  0001C3                     main@F5210:
   287                           	opt stack 0
   288  0001C3                     	ds	2
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	cstackBANK2
   297  000200                     __pcstackBANK2:
   298                           	opt stack 0
   299  000200                     main@msgbuffer:
   300                           	opt stack 0
   301                           
   302                           ; 11 bytes @ 0x0
   303  000200                     	ds	11
   304  00020B                     main@t0thread_data:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0xB
   308  00020B                     	ds	2
   309  00020D                     main@test:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0xD
   313  00020D                     	ds	2
   314  00020F                     main@last_reg_recvd:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0xF
   318  00020F                     	ds	1
   319  000210                     main@baud:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x10
   323  000210                     	ds	1
   324  000211                     main@UARTConfig:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x11
   328  000211                     	ds	1
   329  000212                     main@uthread_data:
   330                           	opt stack 0
   331                           
   332                           ; 10 bytes @ 0x12
   333  000212                     	ds	10
   334  00021C                     main@t1thread_data:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x1C
   338  00021C                     	ds	2
   339  00021E                     main@uc:
   340                           	opt stack 0
   341                           
   342                           ; 5 bytes @ 0x1E
   343  00021E                     	ds	5
   344  000223                     main@msgtype:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x23
   348  000223                     	ds	1
   349  000224                     main@length:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x24
   353  000224                     	ds	1
   354  000225                     main@ic:
   355                           	opt stack 0
   356                           
   357                           ; 28 bytes @ 0x25
   358  000225                     	ds	28
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           
   366                           	psect	cstackBANK1
   367  0001A2                     __pcstackBANK1:
   368                           	opt stack 0
   369  0001A2                     ?_in_main:
   370                           	opt stack 0
   371  0001A2                     OpenUSART@config:
   372                           	opt stack 0
   373  0001A2                     ___lwmod@counter:
   374                           	opt stack 0
   375  0001A2                     timer0_lthread@tptr:
   376                           	opt stack 0
   377  0001A2                     memcpy@d1:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x0
   381  0001A2                     	ds	2
   382  0001A4                     timer0_lthread@msgtype:
   383                           	opt stack 0
   384  0001A4                     memcpy@s1:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x2
   388  0001A4                     	ds	2
   389  0001A6                     timer0_lthread@length:
   390                           	opt stack 0
   391  0001A6                     memcpy@n:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395  0001A6                     	ds	2
   396  0001A8                     send_msg@qptr:
   397                           	opt stack 0
   398  0001A8                     recv_msg@qptr:
   399                           	opt stack 0
   400  0001A8                     timer0_lthread@msgbuffer:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x6
   404  0001A8                     	ds	2
   405  0001AA                     send_msg@length:
   406                           	opt stack 0
   407  0001AA                     recv_msg@maxlength:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x8
   411  0001AA                     	ds	1
   412  0001AB                     send_msg@msgtype:
   413                           	opt stack 0
   414  0001AB                     recv_msg@msgtype:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x9
   418  0001AB                     	ds	1
   419  0001AC                     send_msg@data:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0xA
   423  0001AC                     	ds	1
   424  0001AD                     recv_msg@data:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0xB
   428  0001AD                     	ds	1
   429  0001AE                     send_msg@tlength:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0xC
   433  0001AE                     	ds	1
   434  0001AF                     ??_recv_msg:
   435                           
   436                           ; 0 bytes @ 0xD
   437  0001AF                     	ds	1
   438  0001B0                     send_msg@slot:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0xE
   442  0001B0                     	ds	1
   443  0001B1                     recv_msg@slot:
   444                           	opt stack 0
   445  0001B1                     send_msg@qmsg:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0xF
   449  0001B1                     	ds	1
   450  0001B2                     recv_msg@tlength:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454  0001B2                     	ds	1
   455  0001B3                     ToMainLow_sendmsg@msgtype:
   456                           	opt stack 0
   457  0001B3                     FromMainLow_sendmsg@msgtype:
   458                           	opt stack 0
   459  0001B3                     FromMainHigh_sendmsg@msgtype:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x11
   463  0001B3                     	ds	1
   464  0001B4                     recv_msg@qmsg:
   465                           	opt stack 0
   466  0001B4                     ToMainLow_sendmsg@data:
   467                           	opt stack 0
   468  0001B4                     FromMainLow_sendmsg@data:
   469                           	opt stack 0
   470  0001B4                     FromMainHigh_sendmsg@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x12
   474  0001B4                     	ds	2
   475  0001B6                     ToMainLow_sendmsg@length:
   476                           	opt stack 0
   477  0001B6                     FromMainLow_sendmsg@length:
   478                           	opt stack 0
   479  0001B6                     FromMainHigh_sendmsg@length:
   480                           	opt stack 0
   481  0001B6                     ToMainLow_recvmsg@msgtype:
   482                           	opt stack 0
   483  0001B6                     ToMainHigh_recvmsg@msgtype:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x14
   487  0001B6                     	ds	1
   488  0001B7                     sendUART@data:
   489                           	opt stack 0
   490  0001B7                     timer1_lthread@tptr:
   491                           	opt stack 0
   492  0001B7                     uart_lthread@uptr:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x15
   496  0001B7                     	ds	1
   497  0001B8                     ToMainLow_recvmsg@data:
   498                           	opt stack 0
   499  0001B8                     ToMainHigh_recvmsg@data:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x16
   503  0001B8                     	ds	1
   504  0001B9                     ??_sendUART:
   505  0001B9                     timer1_lthread@msgtype:
   506                           	opt stack 0
   507  0001B9                     uart_lthread@msgtype:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x17
   511  0001B9                     	ds	1
   512  0001BA                     sendUART@retval:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x18
   516  0001BA                     	ds	1
   517  0001BB                     sendUART@length:
   518                           	opt stack 0
   519  0001BB                     timer1_lthread@length:
   520                           	opt stack 0
   521  0001BB                     uart_lthread@length:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x19
   525  0001BB                     	ds	2
   526  0001BD                     timer1_lthread@msgbuffer:
   527                           	opt stack 0
   528  0001BD                     uart_lthread@msgbuffer:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1B
   532  0001BD                     	ds	2
   533  0001BF                     ??_timer1_lthread:
   534  0001BF                     uart_lthread@status:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x1D
   538  0001BF                     	ds	1
   539  0001C0                     timer1_lthread@retval:
   540                           	opt stack 0
   541  0001C0                     uart_lthread@index:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x1E
   545  0001C0                     	ds	2
   546  0001C2                     ??_main:
   547                           
   548                           ; 0 bytes @ 0x20
   549  0001C2                     	ds	1
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           
   557                           	psect	cstackBANK0
   558  0000B6                     __pcstackBANK0:
   559                           	opt stack 0
   560  0000B6                     i2send_msg@tlength:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x0
   564  0000B6                     	ds	2
   565  0000B8                     i2send_msg@slot:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x2
   569  0000B8                     	ds	1
   570  0000B9                     i2send_msg@qmsg:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x3
   574  0000B9                     	ds	2
   575  0000BB                     ToMainHigh_sendmsg@msgtype:
   576                           	opt stack 0
   577  0000BB                     i2ToMainLow_sendmsg@msgtype:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x5
   581  0000BB                     	ds	1
   582  0000BC                     ToMainHigh_sendmsg@data:
   583                           	opt stack 0
   584  0000BC                     i2ToMainLow_sendmsg@data:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x6
   588  0000BC                     	ds	2
   589  0000BE                     ??_i2c_int_handler:
   590  0000BE                     i2sendUART@data:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x8
   594  0000BE                     	ds	2
   595  0000C0                     i2sendUART@retval:
   596                           	opt stack 0
   597  0000C0                     i2c_int_handler@error_buf:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0xA
   601  0000C0                     	ds	1
   602  0000C1                     i2sendUART@length:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xB
   606  0000C1                     	ds	1
   607  0000C2                     ??_timer0_int_handler:
   608                           
   609                           ; 0 bytes @ 0xC
   610  0000C2                     	ds	1
   611  0000C3                     i2c_int_handler@data_written:
   612                           	opt stack 0
   613  0000C3                     timer0_int_handler@test:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0xD
   617  0000C3                     	ds	1
   618  0000C4                     i2c_int_handler@overrun_error:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0xE
   622  0000C4                     	ds	1
   623  0000C5                     i2c_int_handler@i2c_data:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0xF
   627  0000C5                     	ds	1
   628  0000C6                     i2c_int_handler@msg_to_send:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x10
   632  0000C6                     	ds	1
   633  0000C7                     i2c_int_handler@msg_ready:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x11
   637  0000C7                     	ds	1
   638  0000C8                     i2c_int_handler@data_read:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x12
   642  0000C8                     	ds	1
   643  0000C9                     ??_InterruptHandlerHigh:
   644                           
   645                           ; 0 bytes @ 0x13
   646  0000C9                     	ds	14
   647  0000D7                     ?_in_high_int:
   648                           	opt stack 0
   649  0000D7                     ?___lwmod:
   650                           	opt stack 0
   651  0000D7                     i2c_configure_slave@addr:
   652                           	opt stack 0
   653  0000D7                     OpenTimer0@config:
   654                           	opt stack 0
   655  0000D7                     OpenTimer1@config:
   656                           	opt stack 0
   657  0000D7                     Delay1KTCYx@unit:
   658                           	opt stack 0
   659  0000D7                     init_queue@qptr:
   660                           	opt stack 0
   661  0000D7                     check_msg@qptr:
   662                           	opt stack 0
   663  0000D7                     start_i2c_slave_reply@msg:
   664                           	opt stack 0
   665  0000D7                     init_i2c@ic:
   666                           	opt stack 0
   667  0000D7                     init_uart_recv@uc:
   668                           	opt stack 0
   669  0000D7                     timer0_lthread@msgval:
   670                           	opt stack 0
   671  0000D7                     init_timer1_lthread@tptr:
   672                           	opt stack 0
   673  0000D7                     init_uart_lthread@uptr:
   674                           	opt stack 0
   675  0000D7                     WriteTimer0@timer0:
   676                           	opt stack 0
   677  0000D7                     OpenUSART@spbrg:
   678                           	opt stack 0
   679  0000D7                     ___lwmod@dividend:
   680                           	opt stack 0
   681  0000D7                     memcpy@d:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x21
   685  0000D7                     	ds	2
   686  0000D9                     ??_OpenUSART:
   687  0000D9                     ??_start_i2c_slave_reply:
   688  0000D9                     ??_init_queue:
   689  0000D9                     ??_check_msg:
   690  0000D9                     ?_in_low_int:
   691                           	opt stack 0
   692  0000D9                     WriteTimer0@timer:
   693                           	opt stack 0
   694  0000D9                     ___lwmod@divisor:
   695                           	opt stack 0
   696  0000D9                     memcpy@s:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x23
   700  0000D9                     	ds	1
   701  0000DA                     init_queue@i:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x24
   705  0000DA                     	ds	1
   706  0000DB                     ??_init_queues:
   707  0000DB                     ??_block_on_To_msgqueues:
   708  0000DB                     ??_send_msg:
   709  0000DB                     ??___lwmod:
   710  0000DB                     ToMainLow_recvmsg@maxlength:
   711                           	opt stack 0
   712  0000DB                     ToMainHigh_recvmsg@maxlength:
   713                           	opt stack 0
   714  0000DB                     start_i2c_slave_reply@length:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x25
   718  0000DB                     	ds	1
   719  0000DC                     tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           tblptrl	equ	0xFF6
   722                           tablat	equ	0xFF5
   723                           postinc0	equ	0xFEE
   724                           wreg	equ	0xFE8
   725                           
   726                           ; 0 bytes @ 0x26
   727                           
   728                           	psect	cstackCOMRAM
   729  000001                     __pcstackCOMRAM:
   730                           	opt stack 0
   731  000001                     ?_ReadTimer1:
   732                           	opt stack 0
   733  000001                     ReadUSART@data:
   734                           	opt stack 0
   735  000001                     WriteTimer1@timer1:
   736                           	opt stack 0
   737  000001                     i1memcpy@d1:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x0
   741  000001                     	ds	2
   742  000003                     ReadTimer1@timer:
   743                           	opt stack 0
   744  000003                     WriteTimer1@timer:
   745                           	opt stack 0
   746  000003                     i1memcpy@s1:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x2
   750  000003                     	ds	2
   751  000005                     i1memcpy@n:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x4
   755  000005                     	ds	2
   756  000007                     i1memcpy@d:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x6
   760  000007                     	ds	2
   761  000009                     i1memcpy@s:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x8
   765  000009                     	ds	2
   766  00000B                     i1send_msg@qptr:
   767                           	opt stack 0
   768  00000B                     i1recv_msg@qptr:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0xA
   772  00000B                     	ds	2
   773  00000D                     i1send_msg@length:
   774                           	opt stack 0
   775  00000D                     i1recv_msg@maxlength:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0xC
   779  00000D                     	ds	1
   780  00000E                     i1send_msg@msgtype:
   781                           	opt stack 0
   782  00000E                     i1recv_msg@msgtype:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0xD
   786  00000E                     	ds	1
   787  00000F                     i1send_msg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  00000F                     	ds	1
   792  000010                     i1recv_msg@data:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0xF
   796  000010                     	ds	1
   797  000011                     ??i1_send_msg:
   798                           
   799                           ; 0 bytes @ 0x10
   800  000011                     	ds	1
   801  000012                     ??i1_recv_msg:
   802  000012                     i1send_msg@tlength:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x11
   806  000012                     	ds	2
   807  000014                     i1send_msg@slot:
   808                           	opt stack 0
   809  000014                     i1recv_msg@slot:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x13
   813  000014                     	ds	1
   814  000015                     i1send_msg@qmsg:
   815                           	opt stack 0
   816  000015                     i1recv_msg@tlength:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x14
   820  000015                     	ds	2
   821  000017                     i1ToMainLow_sendmsg@msgtype:
   822                           	opt stack 0
   823  000017                     i1recv_msg@qmsg:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x16
   827  000017                     	ds	1
   828  000018                     i1ToMainLow_sendmsg@data:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x17
   832  000018                     	ds	1
   833  000019                     FromMainLow_recvmsg@msgtype:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x18
   837  000019                     	ds	1
   838  00001A                     i1ToMainLow_sendmsg@length:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x19
   842  00001A                     	ds	1
   843  00001B                     ??_timer1_int_handler:
   844  00001B                     ??_uart_recv_int_handler:
   845  00001B                     FromMainLow_recvmsg@data:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x1A
   849  00001B                     	ds	1
   850  00001C                     timer1_int_handler@result:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x1B
   854  00001C                     	ds	1
   855  00001D                     FromMainLow_recvmsg@maxlength:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x1C
   859  00001D                     	ds	1
   860  00001E                     ??_uart_trans_int_handler:
   861                           
   862                           ; 0 bytes @ 0x1D
   863  00001E                     	ds	1
   864  00001F                     uart_trans_int_handler@data:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1E
   868  00001F                     	ds	2
   869  000021                     uart_trans_int_handler@msgtype:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x20
   873  000021                     	ds	1
   874  000022                     uart_trans_int_handler@curIndex:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x21
   878  000022                     	ds	1
   879  000023                     uart_trans_int_handler@length:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x22
   883  000023                     	ds	1
   884  000024                     ??_InterruptHandlerLow:
   885                           
   886                           ; 0 bytes @ 0x23
   887  000024                     	ds	17
   888  000035                     ?i2_in_high_int:
   889                           	opt stack 0
   890  000035                     handle_start@data_read:
   891                           	opt stack 0
   892  000035                     i2check_msg@qptr:
   893                           	opt stack 0
   894  000035                     i2WriteTimer0@timer0:
   895                           	opt stack 0
   896  000035                     i2memcpy@d1:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x34
   900  000035                     	ds	2
   901  000037                     ??i2_check_msg:
   902  000037                     ?i2_in_low_int:
   903                           	opt stack 0
   904  000037                     i2WriteTimer0@timer:
   905                           	opt stack 0
   906  000037                     i2memcpy@s1:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x36
   910  000037                     	ds	2
   911  000039                     i2memcpy@n:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x38
   915  000039                     	ds	2
   916  00003B                     i2memcpy@d:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x3A
   920  00003B                     	ds	2
   921  00003D                     i2memcpy@s:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x3C
   925  00003D                     	ds	2
   926  00003F                     i2send_msg@qptr:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x3E
   930  00003F                     	ds	2
   931  000041                     i2send_msg@length:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x40
   935  000041                     	ds	1
   936  000042                     i2send_msg@msgtype:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x41
   940  000042                     	ds	1
   941  000043                     i2send_msg@data:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x42
   945  000043                     	ds	2
   946  000045                     ??i2_send_msg:
   947                           
   948                           ; 0 bytes @ 0x44
   949  000045                     	ds	1
   950  000046                     ToMainHigh_sendmsg@length:
   951                           	opt stack 0
   952  000046                     i2ToMainLow_sendmsg@length:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x45
   956  000046                     	ds	1
   957  000047                     ??i2_sendUART:
   958                           
   959                           ; 0 bytes @ 0x46
   960  000047                     	ds	1
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           
   968 ;;
   969 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   970 ;;
   971 ;; *************** function _main *****************
   972 ;; Defined at:
   973 ;;		line 139 in file "src/main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  ic             28   37[BANK2 ] struct __i2c_comm
   978 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   979 ;;  uthread_data   10   18[BANK2 ] struct __uart_thread_str
   980 ;;  uc              5   30[BANK2 ] struct __uart_comm
   981 ;;  t1thread_dat    2   28[BANK2 ] struct __timer1_thread_s
   982 ;;  test            2   13[BANK2 ] unsigned char [2]
   983 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   984 ;;  length          1   36[BANK2 ] char 
   985 ;;  msgtype         1   35[BANK2 ] unsigned char 
   986 ;;  UARTConfig      1   17[BANK2 ] unsigned char 
   987 ;;  baud            1   16[BANK2 ] unsigned char 
   988 ;;  last_reg_rec    1   15[BANK2 ] unsigned char 
   989 ;;  i               1    0        unsigned char 
   990 ;;  c               1    0        unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0      65       0
  1002 ;;      Temps:          0       0       1       0       0
  1003 ;;      Totals:         0       0       1      65       0
  1004 ;;Total ram usage:       66 bytes
  1005 ;; Hardware stack levels required when called:   15
  1006 ;; This function calls:
  1007 ;;		_OpenTimer0
  1008 ;;		_OpenTimer1
  1009 ;;		_OpenUSART
  1010 ;;		_ToMainHigh_recvmsg
  1011 ;;		_ToMainLow_recvmsg
  1012 ;;		_WriteTimer0
  1013 ;;		_block_on_To_msgqueues
  1014 ;;		_enable_interrupts
  1015 ;;		_i2c_configure_slave
  1016 ;;		_init_i2c
  1017 ;;		_init_queues
  1018 ;;		_init_timer1_lthread
  1019 ;;		_init_uart_lthread
  1020 ;;		_init_uart_recv
  1021 ;;		_sendUART
  1022 ;;		_start_i2c_slave_reply
  1023 ;;		_timer0_lthread
  1024 ;;		_timer1_lthread
  1025 ;;		_uart_lthread
  1026 ;; This function is called by:
  1027 ;;		Startup code after reset
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text0
  1032  00071E                     __ptext0:
  1033                           	opt stack 0
  1034  00071E                     _main:
  1035                           	opt stack 16
  1036                           
  1037                           ;main.c: 140: char c;
  1038                           ;main.c: 141: signed char length;
  1039                           ;main.c: 142: unsigned char msgtype;
  1040                           ;main.c: 143: unsigned char last_reg_recvd;
  1041                           ;main.c: 144: unsigned char baud, UARTConfig;
  1042                           ;main.c: 145: uart_comm uc;
  1043                           ;main.c: 146: i2c_comm ic;
  1044                           ;main.c: 147: unsigned char msgbuffer[10 + 1];
  1045                           ;main.c: 148: unsigned char i;
  1046                           ;main.c: 149: uart_thread_struct uthread_data;
  1047                           ;main.c: 150: timer1_thread_struct t1thread_data;
  1048                           ;main.c: 151: timer0_thread_struct t0thread_data;
  1049                           ;main.c: 154: PORTA = 0x0;
  1050                           
  1051                           ;incstack = 0
  1052  00071E  0E00               	movlw	0
  1053  000720  6E80               	movwf	3968,c	;volatile
  1054                           
  1055                           ;main.c: 155: LATA = 0x0;
  1056  000722  0E00               	movlw	0
  1057  000724  6E89               	movwf	3977,c	;volatile
  1058                           
  1059                           ;main.c: 156: ADCON1 = 0x0F;
  1060  000726  0E0F               	movlw	15
  1061  000728  6EC1               	movwf	4033,c	;volatile
  1062                           
  1063                           ;main.c: 157: CMCON = 0x07;
  1064  00072A  0E07               	movlw	7
  1065  00072C  6EB4               	movwf	4020,c	;volatile
  1066                           
  1067                           ;main.c: 158: TRISA = 0x00;
  1068  00072E  0E00               	movlw	0
  1069  000730  6E92               	movwf	3986,c	;volatile
  1070                           
  1071                           ;main.c: 161: PORTB = 0x0;
  1072  000732  0E00               	movlw	0
  1073  000734  6E81               	movwf	3969,c	;volatile
  1074                           
  1075                           ;main.c: 162: LATB = 0x0;
  1076  000736  0E00               	movlw	0
  1077  000738  6E8A               	movwf	3978,c	;volatile
  1078                           
  1079                           ;main.c: 163: TRISB = 0xFF;
  1080  00073A  6893               	setf	3987,c	;volatile
  1081                           
  1082                           ;main.c: 171: OSCCON = 0x82;
  1083  00073C  0E82               	movlw	130
  1084  00073E  6ED3               	movwf	4051,c	;volatile
  1085                           
  1086                           ;main.c: 172: OSCTUNEbits.PLLEN = 0;
  1087  000740  9C9B               	bcf	3995,6,c	;volatile
  1088                           
  1089                           ;main.c: 185: init_uart_recv(&uc);
  1090  000742  0102               	movlb	2	; () banked
  1091  000744  0E02               	movlw	high main@uc
  1092  000746  0100               	movlb	0	; () banked
  1093  000748  0100               	movlb	0	; () banked
  1094  00074A  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1095  00074C  0102               	movlb	2	; () banked
  1096  00074E  0E1E               	movlw	low main@uc
  1097  000750  0100               	movlb	0	; () banked
  1098  000752  0100               	movlb	0	; () banked
  1099  000754  6FD7               	movwf	init_uart_recv@uc& (0+255),b
  1100  000756  EC45  F00E         	call	_init_uart_recv	;wreg free
  1101                           
  1102                           ;main.c: 188: init_i2c(&ic);
  1103  00075A  0102               	movlb	2	; () banked
  1104  00075C  0E02               	movlw	high main@ic
  1105  00075E  0100               	movlb	0	; () banked
  1106  000760  0100               	movlb	0	; () banked
  1107  000762  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
  1108  000764  0102               	movlb	2	; () banked
  1109  000766  0E25               	movlw	low main@ic
  1110  000768  0100               	movlb	0	; () banked
  1111  00076A  0100               	movlb	0	; () banked
  1112  00076C  6FD7               	movwf	init_i2c@ic& (0+255),b
  1113  00076E  ECF8  F00A         	call	_init_i2c	;wreg free
  1114                           
  1115                           ;main.c: 191: init_timer1_lthread(&t1thread_data);
  1116  000772  0102               	movlb	2	; () banked
  1117  000774  0E02               	movlw	high main@t1thread_data
  1118  000776  0100               	movlb	0	; () banked
  1119  000778  0100               	movlb	0	; () banked
  1120  00077A  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1121  00077C  0102               	movlb	2	; () banked
  1122  00077E  0E1C               	movlw	low main@t1thread_data
  1123  000780  0100               	movlb	0	; () banked
  1124  000782  0100               	movlb	0	; () banked
  1125  000784  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
  1126  000786  EC77  F00E         	call	_init_timer1_lthread	;wreg free
  1127                           
  1128                           ;main.c: 194: init_uart_lthread(&uthread_data);
  1129  00078A  0102               	movlb	2	; () banked
  1130  00078C  0E02               	movlw	high main@uthread_data
  1131  00078E  0100               	movlb	0	; () banked
  1132  000790  0100               	movlb	0	; () banked
  1133  000792  6FD8               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1134  000794  0102               	movlb	2	; () banked
  1135  000796  0E12               	movlw	low main@uthread_data
  1136  000798  0100               	movlb	0	; () banked
  1137  00079A  0100               	movlb	0	; () banked
  1138  00079C  6FD7               	movwf	init_uart_lthread@uptr& (0+255),b
  1139  00079E  ECBB  F00E         	call	_init_uart_lthread	;wreg free
  1140                           
  1141                           ;main.c: 198: init_queues();
  1142  0007A2  ECC1  F00A         	call	_init_queues	;wreg free
  1143                           
  1144                           ;main.c: 201: TRISB = 0x0;
  1145  0007A6  0E00               	movlw	0
  1146  0007A8  6E93               	movwf	3987,c	;volatile
  1147                           
  1148                           ;main.c: 202: LATB = 0x0;
  1149  0007AA  0E00               	movlw	0
  1150  0007AC  6E8A               	movwf	3978,c	;volatile
  1151                           
  1152                           ;main.c: 206: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1153  0007AE  0EAF               	movlw	175
  1154  0007B0  ECB9  F00D         	call	_OpenTimer0
  1155                           
  1156                           ;main.c: 207: WriteTimer0(65500);
  1157  0007B4  0EFF               	movlw	255
  1158  0007B6  0100               	movlb	0	; () banked
  1159  0007B8  0100               	movlb	0	; () banked
  1160  0007BA  6FD8               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  1161  0007BC  0EDC               	movlw	220
  1162  0007BE  0100               	movlb	0	; () banked
  1163  0007C0  6FD7               	movwf	WriteTimer0@timer0& (0+255),b
  1164  0007C2  EC89  F00E         	call	_WriteTimer0	;wreg free
  1165                           
  1166                           ;main.c: 212: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1167  0007C6  0EF5               	movlw	245
  1168  0007C8  EC02  F00D         	call	_OpenTimer1
  1169                           
  1170                           ;main.c: 221: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 ;
  1171  0007CC  0101               	movlb	1	; () banked
  1172  0007CE  6FC2               	movwf	??_main& (0+255),b
  1173  0007D0  0EFC               	movlw	252
  1174  0007D2  0102               	movlb	2	; () banked
  1175  0007D4  0102               	movlb	2	; () banked
  1176  0007D6  6F11               	movwf	main@UARTConfig& (0+255),b
  1177  0007D8  0101               	movlb	1	; () banked
  1178  0007DA  51C2               	movf	??_main& (0+255),w,b
  1179                           
  1180                           ; BSR set to: 1
  1181                           ;main.c: 222: baud = 77;
  1182  0007DC  0101               	movlb	1	; () banked
  1183  0007DE  6FC2               	movwf	??_main& (0+255),b
  1184  0007E0  0E4D               	movlw	77
  1185  0007E2  0102               	movlb	2	; () banked
  1186  0007E4  0102               	movlb	2	; () banked
  1187  0007E6  6F10               	movwf	main@baud& (0+255),b
  1188  0007E8  0101               	movlb	1	; () banked
  1189  0007EA  51C2               	movf	??_main& (0+255),w,b
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 223: OpenUSART(UARTConfig,baud);
  1193  0007EC  0102               	movlb	2	; () banked
  1194  0007EE  0100               	movlb	0	; () banked
  1195  0007F0  C210  F0D7         	movff	main@baud,OpenUSART@spbrg
  1196  0007F4  0100               	movlb	0	; () banked
  1197  0007F6  0100               	movlb	0	; () banked
  1198  0007F8  6BD8               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1199  0007FA  0102               	movlb	2	; () banked
  1200  0007FC  0102               	movlb	2	; () banked
  1201  0007FE  5111               	movf	main@UARTConfig& (0+255),w,b
  1202  000800  EC3D  F009         	call	_OpenUSART
  1203                           
  1204                           ;main.c: 229: IPR1bits.TMR1IP = 0;
  1205  000804  909F               	bcf	3999,0,c	;volatile
  1206                           
  1207                           ;main.c: 231: IPR1bits.RCIP = 0;
  1208  000806  9A9F               	bcf	3999,5,c	;volatile
  1209                           
  1210                           ;main.c: 233: IPR1bits.TXIP = 0;
  1211  000808  989F               	bcf	3999,4,c	;volatile
  1212                           
  1213                           ;main.c: 235: IPR1bits.SSPIP = 1;
  1214  00080A  869F               	bsf	3999,3,c	;volatile
  1215                           
  1216                           ;main.c: 244: i2c_configure_slave(0x9E);
  1217  00080C  0E9E               	movlw	158
  1218  00080E  ECF8  F00D         	call	_i2c_configure_slave
  1219                           
  1220                           ;main.c: 259: PIE1bits.SSPIE = 1;
  1221  000812  869D               	bsf	3997,3,c	;volatile
  1222                           
  1223                           ;main.c: 263: enable_interrupts();
  1224  000814  ECB3  F00E         	call	_enable_interrupts	;wreg free
  1225                           
  1226                           ;main.c: 277: unsigned char test[2] = {200,75};
  1227  000818  C1C3  F20D         	movff	main@F5210,main@test
  1228  00081C  C1C4  F20E         	movff	main@F5210+1,main@test+1
  1229                           
  1230                           ;main.c: 278: sendUART(2,test);
  1231  000820  0102               	movlb	2	; () banked
  1232  000822  0E02               	movlw	high main@test
  1233  000824  0101               	movlb	1	; () banked
  1234  000826  0101               	movlb	1	; () banked
  1235  000828  6FB8               	movwf	(sendUART@data+1)& (0+255),b
  1236  00082A  0102               	movlb	2	; () banked
  1237  00082C  0E0D               	movlw	low main@test
  1238  00082E  0101               	movlb	1	; () banked
  1239  000830  0101               	movlb	1	; () banked
  1240  000832  6FB7               	movwf	sendUART@data& (0+255),b
  1241  000834  0E02               	movlw	2
  1242  000836  EC40  F00C         	call	_sendUART
  1243  00083A                     l3356:
  1244                           
  1245                           ;main.c: 289: block_on_To_msgqueues();
  1246  00083A  EC0C  F00A         	call	_block_on_To_msgqueues	;wreg free
  1247                           
  1248                           ;main.c: 296: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1249  00083E  0102               	movlb	2	; () banked
  1250  000840  0E02               	movlw	high main@msgtype
  1251  000842  0101               	movlb	1	; () banked
  1252  000844  0101               	movlb	1	; () banked
  1253  000846  6FB7               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1254  000848  0102               	movlb	2	; () banked
  1255  00084A  0E23               	movlw	low main@msgtype
  1256  00084C  0101               	movlb	1	; () banked
  1257  00084E  0101               	movlb	1	; () banked
  1258  000850  6FB6               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1259  000852  0102               	movlb	2	; () banked
  1260  000854  0E02               	movlw	high main@msgbuffer
  1261  000856  0101               	movlb	1	; () banked
  1262  000858  0101               	movlb	1	; () banked
  1263  00085A  6FB9               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1264  00085C  0102               	movlb	2	; () banked
  1265  00085E  0E00               	movlw	low main@msgbuffer
  1266  000860  0101               	movlb	1	; () banked
  1267  000862  0101               	movlb	1	; () banked
  1268  000864  6FB8               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1269  000866  0E0A               	movlw	10
  1270  000868  EC82  F00C         	call	_ToMainHigh_recvmsg
  1271  00086C  0102               	movlb	2	; () banked
  1272  00086E  0102               	movlb	2	; () banked
  1273  000870  6F24               	movwf	main@length& (0+255),b
  1274                           
  1275                           ; BSR set to: 2
  1276                           ;main.c: 297: if (length < 0) {
  1277  000872  0102               	movlb	2	; () banked
  1278  000874  0102               	movlb	2	; () banked
  1279  000876  BF24               	btfsc	main@length& (0+255),7,b
  1280  000878  D08D               	goto	l3382
  1281  00087A  D07D               	goto	l3380
  1282  00087C                     l3364:
  1283                           
  1284                           ; BSR set to: 2
  1285                           ;main.c: 305: {
  1286                           ;main.c: 306: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1287  00087C  0102               	movlb	2	; () banked
  1288  00087E  0E02               	movlw	high main@t0thread_data
  1289  000880  0101               	movlb	1	; () banked
  1290  000882  0101               	movlb	1	; () banked
  1291  000884  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1292  000886  0102               	movlb	2	; () banked
  1293  000888  0E0B               	movlw	low main@t0thread_data
  1294  00088A  0101               	movlb	1	; () banked
  1295  00088C  0101               	movlb	1	; () banked
  1296  00088E  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1297  000890  0102               	movlb	2	; () banked
  1298  000892  0101               	movlb	1	; () banked
  1299  000894  C223  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1300  000898  0101               	movlb	1	; () banked
  1301  00089A  0101               	movlb	1	; () banked
  1302  00089C  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1303  00089E  0102               	movlb	2	; () banked
  1304  0008A0  0102               	movlb	2	; () banked
  1305  0008A2  5124               	movf	main@length& (0+255),w,b
  1306  0008A4  0101               	movlb	1	; () banked
  1307  0008A6  0101               	movlb	1	; () banked
  1308  0008A8  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1309  0008AA  0101               	movlb	1	; () banked
  1310  0008AC  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1311  0008AE  0101               	movlb	1	; () banked
  1312  0008B0  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1313  0008B2  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1314  0008B4  0102               	movlb	2	; () banked
  1315  0008B6  0E02               	movlw	high main@msgbuffer
  1316  0008B8  0101               	movlb	1	; () banked
  1317  0008BA  0101               	movlb	1	; () banked
  1318  0008BC  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1319  0008BE  0102               	movlb	2	; () banked
  1320  0008C0  0E00               	movlw	low main@msgbuffer
  1321  0008C2  0101               	movlb	1	; () banked
  1322  0008C4  0101               	movlb	1	; () banked
  1323  0008C6  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1324  0008C8  EC6E  F00E         	call	_timer0_lthread	;wreg free
  1325                           
  1326                           ;main.c: 307: break;
  1327  0008CC  D063               	goto	l3382
  1328  0008CE                     l127:
  1329                           
  1330                           ;main.c: 310: case 41:
  1331                           ;main.c: 311: {
  1332                           ;main.c: 314: last_reg_recvd = msgbuffer[0];
  1333  0008CE  C200  F20F         	movff	main@msgbuffer,main@last_reg_recvd
  1334                           
  1335                           ;main.c: 315: break;
  1336  0008D2  D060               	goto	l3382
  1337  0008D4                     l3366:
  1338                           
  1339                           ;main.c: 328: {
  1340                           ;main.c: 329: length = 2;
  1341  0008D4  0101               	movlb	1	; () banked
  1342  0008D6  6FC2               	movwf	??_main& (0+255),b
  1343  0008D8  0E02               	movlw	2
  1344  0008DA  0102               	movlb	2	; () banked
  1345  0008DC  0102               	movlb	2	; () banked
  1346  0008DE  6F24               	movwf	main@length& (0+255),b
  1347  0008E0  0101               	movlb	1	; () banked
  1348  0008E2  51C2               	movf	??_main& (0+255),w,b
  1349                           
  1350                           ;main.c: 330: msgbuffer[0] = 0x55;
  1351  0008E4  0101               	movlb	1	; () banked
  1352  0008E6  6FC2               	movwf	??_main& (0+255),b
  1353  0008E8  0E55               	movlw	85
  1354  0008EA  0102               	movlb	2	; () banked
  1355  0008EC  0102               	movlb	2	; () banked
  1356  0008EE  6F00               	movwf	main@msgbuffer& (0+255),b
  1357  0008F0  0101               	movlb	1	; () banked
  1358  0008F2  51C2               	movf	??_main& (0+255),w,b
  1359                           
  1360                           ;main.c: 331: msgbuffer[1] = 0xAA;
  1361  0008F4  0101               	movlb	1	; () banked
  1362  0008F6  6FC2               	movwf	??_main& (0+255),b
  1363  0008F8  0EAA               	movlw	170
  1364  0008FA  0102               	movlb	2	; () banked
  1365  0008FC  0102               	movlb	2	; () banked
  1366  0008FE  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1367  000900  D00C               	goto	L1
  1368  000902                     l3368:
  1369                           
  1370                           ;main.c: 335: {
  1371                           ;main.c: 336: length = 1;
  1372  000902  0101               	movlb	1	; () banked
  1373  000904  6FC2               	movwf	??_main& (0+255),b
  1374  000906  0E01               	movlw	1
  1375  000908  0102               	movlb	2	; () banked
  1376  00090A  0102               	movlb	2	; () banked
  1377  00090C  6F24               	movwf	main@length& (0+255),b
  1378  00090E  0101               	movlb	1	; () banked
  1379  000910  51C2               	movf	??_main& (0+255),w,b
  1380                           
  1381                           ;main.c: 337: msgbuffer[0] = 0x3A;
  1382  000912  0101               	movlb	1	; () banked
  1383  000914  6FC2               	movwf	??_main& (0+255),b
  1384  000916  0E3A               	movlw	58
  1385  000918  D00E               	goto	L2
  1386  00091A                     L1:
  1387  00091A  0101               	movlb	1	; () banked
  1388  00091C  51C2               	movf	??_main& (0+255),w,b
  1389                           
  1390                           ;main.c: 338: break;
  1391  00091E  D01B               	goto	l3376
  1392  000920                     l3370:
  1393                           
  1394                           ;main.c: 341: {
  1395                           ;main.c: 342: length = 1;
  1396  000920  0101               	movlb	1	; () banked
  1397  000922  6FC2               	movwf	??_main& (0+255),b
  1398  000924  0E01               	movlw	1
  1399  000926  0102               	movlb	2	; () banked
  1400  000928  0102               	movlb	2	; () banked
  1401  00092A  6F24               	movwf	main@length& (0+255),b
  1402  00092C  0101               	movlb	1	; () banked
  1403  00092E  51C2               	movf	??_main& (0+255),w,b
  1404                           
  1405                           ;main.c: 343: msgbuffer[0] = 0xA3;
  1406  000930  0101               	movlb	1	; () banked
  1407  000932  6FC2               	movwf	??_main& (0+255),b
  1408  000934  0EA3               	movlw	163
  1409  000936                     L2:
  1410  000936  0102               	movlb	2	; () banked
  1411  000938  0102               	movlb	2	; () banked
  1412  00093A  6F00               	movwf	main@msgbuffer& (0+255),b
  1413  00093C  D7EE               	goto	L1
  1414  00093E                     l3374:
  1415  00093E  0102               	movlb	2	; () banked
  1416  000940  0102               	movlb	2	; () banked
  1417  000942  510F               	movf	main@last_reg_recvd& (0+255),w,b
  1418                           
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 3, Range of values is 168 to 170
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           10     6 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  000944  0AA8               	xorlw	168	; case 168
  1426  000946  B4D8               	btfsc	status,2,c
  1427  000948  D7DC               	goto	l3368
  1428  00094A  0A01               	xorlw	1	; case 169
  1429  00094C  B4D8               	btfsc	status,2,c
  1430  00094E  D7E8               	goto	l3370
  1431  000950  0A03               	xorlw	3	; case 170
  1432  000952  B4D8               	btfsc	status,2,c
  1433  000954  D7BF               	goto	l3366
  1434  000956                     l3376:
  1435                           
  1436                           ;main.c: 347: start_i2c_slave_reply(length, msgbuffer);
  1437  000956  0102               	movlb	2	; () banked
  1438  000958  0E02               	movlw	high main@msgbuffer
  1439  00095A  0100               	movlb	0	; () banked
  1440  00095C  0100               	movlb	0	; () banked
  1441  00095E  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1442  000960  0102               	movlb	2	; () banked
  1443  000962  0E00               	movlw	low main@msgbuffer
  1444  000964  0100               	movlb	0	; () banked
  1445  000966  0100               	movlb	0	; () banked
  1446  000968  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1447  00096A  0102               	movlb	2	; () banked
  1448  00096C  0102               	movlb	2	; () banked
  1449  00096E  5124               	movf	main@length& (0+255),w,b
  1450  000970  ECE6  F005         	call	_start_i2c_slave_reply
  1451                           
  1452                           ;main.c: 348: break;
  1453  000974  D00F               	goto	l3382
  1454  000976                     l3380:
  1455  000976  0102               	movlb	2	; () banked
  1456  000978  0102               	movlb	2	; () banked
  1457  00097A  5123               	movf	main@msgtype& (0+255),w,b
  1458                           
  1459                           ; Switch size 1, requested type "space"
  1460                           ; Number of cases is 4, Range of values is 10 to 42
  1461                           ; switch strategies available:
  1462                           ; Name         Instructions Cycles
  1463                           ; simple_byte           13     7 (average)
  1464                           ;	Chosen strategy is simple_byte
  1465  00097C  0A0A               	xorlw	10	; case 10
  1466  00097E  B4D8               	btfsc	status,2,c
  1467  000980  D77D               	goto	l3364
  1468  000982  0A22               	xorlw	34	; case 40
  1469  000984  B4D8               	btfsc	status,2,c
  1470  000986  D7A3               	goto	l127
  1471  000988  0A01               	xorlw	1	; case 41
  1472  00098A  B4D8               	btfsc	status,2,c
  1473  00098C  D7A0               	goto	l127
  1474  00098E  0A03               	xorlw	3	; case 42
  1475  000990  B4D8               	btfsc	status,2,c
  1476  000992  D7D5               	goto	l3374
  1477  000994                     l3382:
  1478                           
  1479                           ;main.c: 356: }
  1480                           ;main.c: 359: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1481  000994  0102               	movlb	2	; () banked
  1482  000996  0E02               	movlw	high main@msgtype
  1483  000998  0101               	movlb	1	; () banked
  1484  00099A  0101               	movlb	1	; () banked
  1485  00099C  6FB7               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1486  00099E  0102               	movlb	2	; () banked
  1487  0009A0  0E23               	movlw	low main@msgtype
  1488  0009A2  0101               	movlb	1	; () banked
  1489  0009A4  0101               	movlb	1	; () banked
  1490  0009A6  6FB6               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1491  0009A8  0102               	movlb	2	; () banked
  1492  0009AA  0E02               	movlw	high main@msgbuffer
  1493  0009AC  0101               	movlb	1	; () banked
  1494  0009AE  0101               	movlb	1	; () banked
  1495  0009B0  6FB9               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1496  0009B2  0102               	movlb	2	; () banked
  1497  0009B4  0E00               	movlw	low main@msgbuffer
  1498  0009B6  0101               	movlb	1	; () banked
  1499  0009B8  0101               	movlb	1	; () banked
  1500  0009BA  6FB8               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1501  0009BC  0E0A               	movlw	10
  1502  0009BE  EC61  F00C         	call	_ToMainLow_recvmsg
  1503  0009C2  0102               	movlb	2	; () banked
  1504  0009C4  0102               	movlb	2	; () banked
  1505  0009C6  6F24               	movwf	main@length& (0+255),b
  1506                           
  1507                           ; BSR set to: 2
  1508                           ;main.c: 360: if (length < 0) {
  1509  0009C8  0102               	movlb	2	; () banked
  1510  0009CA  0102               	movlb	2	; () banked
  1511  0009CC  BF24               	btfsc	main@length& (0+255),7,b
  1512  0009CE  D735               	goto	l3356
  1513  0009D0  D052               	goto	l3394
  1514  0009D2                     l3388:
  1515                           
  1516                           ; BSR set to: 2
  1517                           ;main.c: 368: {
  1518                           ;main.c: 369: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1519  0009D2  0102               	movlb	2	; () banked
  1520  0009D4  0E02               	movlw	high main@t1thread_data
  1521  0009D6  0101               	movlb	1	; () banked
  1522  0009D8  0101               	movlb	1	; () banked
  1523  0009DA  6FB8               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1524  0009DC  0102               	movlb	2	; () banked
  1525  0009DE  0E1C               	movlw	low main@t1thread_data
  1526  0009E0  0101               	movlb	1	; () banked
  1527  0009E2  0101               	movlb	1	; () banked
  1528  0009E4  6FB7               	movwf	timer1_lthread@tptr& (0+255),b
  1529  0009E6  0102               	movlb	2	; () banked
  1530  0009E8  0101               	movlb	1	; () banked
  1531  0009EA  C223  F1B9         	movff	main@msgtype,timer1_lthread@msgtype
  1532  0009EE  0101               	movlb	1	; () banked
  1533  0009F0  0101               	movlb	1	; () banked
  1534  0009F2  6BBA               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1535  0009F4  0102               	movlb	2	; () banked
  1536  0009F6  0102               	movlb	2	; () banked
  1537  0009F8  5124               	movf	main@length& (0+255),w,b
  1538  0009FA  0101               	movlb	1	; () banked
  1539  0009FC  0101               	movlb	1	; () banked
  1540  0009FE  6FBB               	movwf	timer1_lthread@length& (0+255),b
  1541  000A00  0101               	movlb	1	; () banked
  1542  000A02  6BBC               	clrf	(timer1_lthread@length+1)& (0+255),b
  1543  000A04  0101               	movlb	1	; () banked
  1544  000A06  BFBB               	btfsc	timer1_lthread@length& (0+255),7,b
  1545  000A08  07BC               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1546  000A0A  0102               	movlb	2	; () banked
  1547  000A0C  0E02               	movlw	high main@msgbuffer
  1548  000A0E  0101               	movlb	1	; () banked
  1549  000A10  0101               	movlb	1	; () banked
  1550  000A12  6FBE               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1551  000A14  0102               	movlb	2	; () banked
  1552  000A16  0E00               	movlw	low main@msgbuffer
  1553  000A18  0101               	movlb	1	; () banked
  1554  000A1A  0101               	movlb	1	; () banked
  1555  000A1C  6FBD               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1556  000A1E  EC88  F00A         	call	_timer1_lthread	;wreg free
  1557                           
  1558                           ;main.c: 370: break;
  1559  000A22  D70B               	goto	l3356
  1560  000A24                     l3390:
  1561                           
  1562                           ;main.c: 373: case 31:
  1563                           ;main.c: 374: case 32:
  1564                           ;main.c: 375: {
  1565                           ;main.c: 376: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1566  000A24  0102               	movlb	2	; () banked
  1567  000A26  0E02               	movlw	high main@uthread_data
  1568  000A28  0101               	movlb	1	; () banked
  1569  000A2A  0101               	movlb	1	; () banked
  1570  000A2C  6FB8               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1571  000A2E  0102               	movlb	2	; () banked
  1572  000A30  0E12               	movlw	low main@uthread_data
  1573  000A32  0101               	movlb	1	; () banked
  1574  000A34  0101               	movlb	1	; () banked
  1575  000A36  6FB7               	movwf	uart_lthread@uptr& (0+255),b
  1576  000A38  0102               	movlb	2	; () banked
  1577  000A3A  0101               	movlb	1	; () banked
  1578  000A3C  C223  F1B9         	movff	main@msgtype,uart_lthread@msgtype
  1579  000A40  0101               	movlb	1	; () banked
  1580  000A42  0101               	movlb	1	; () banked
  1581  000A44  6BBA               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1582  000A46  0102               	movlb	2	; () banked
  1583  000A48  0102               	movlb	2	; () banked
  1584  000A4A  5124               	movf	main@length& (0+255),w,b
  1585  000A4C  0101               	movlb	1	; () banked
  1586  000A4E  0101               	movlb	1	; () banked
  1587  000A50  6FBB               	movwf	uart_lthread@length& (0+255),b
  1588  000A52  0101               	movlb	1	; () banked
  1589  000A54  6BBC               	clrf	(uart_lthread@length+1)& (0+255),b
  1590  000A56  0101               	movlb	1	; () banked
  1591  000A58  BFBB               	btfsc	uart_lthread@length& (0+255),7,b
  1592  000A5A  07BC               	decf	(uart_lthread@length+1)& (0+255),f,b
  1593  000A5C  0102               	movlb	2	; () banked
  1594  000A5E  0E02               	movlw	high main@msgbuffer
  1595  000A60  0101               	movlb	1	; () banked
  1596  000A62  0101               	movlb	1	; () banked
  1597  000A64  6FBE               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1598  000A66  0102               	movlb	2	; () banked
  1599  000A68  0E00               	movlw	low main@msgbuffer
  1600  000A6A  0101               	movlb	1	; () banked
  1601  000A6C  0101               	movlb	1	; () banked
  1602  000A6E  6FBD               	movwf	uart_lthread@msgbuffer& (0+255),b
  1603  000A70  ECEF  F006         	call	_uart_lthread	;wreg free
  1604                           
  1605                           ;main.c: 377: break;
  1606  000A74  D6E2               	goto	l3356
  1607  000A76                     l3394:
  1608  000A76  0102               	movlb	2	; () banked
  1609  000A78  0102               	movlb	2	; () banked
  1610  000A7A  5123               	movf	main@msgtype& (0+255),w,b
  1611                           
  1612                           ; Switch size 1, requested type "space"
  1613                           ; Number of cases is 4, Range of values is 11 to 32
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte           13     7 (average)
  1617                           ;	Chosen strategy is simple_byte
  1618  000A7C  0A0B               	xorlw	11	; case 11
  1619  000A7E  B4D8               	btfsc	status,2,c
  1620  000A80  D7A8               	goto	l3388
  1621  000A82  0A15               	xorlw	21	; case 30
  1622  000A84  B4D8               	btfsc	status,2,c
  1623  000A86  D7CE               	goto	l3390
  1624  000A88  0A01               	xorlw	1	; case 31
  1625  000A8A  B4D8               	btfsc	status,2,c
  1626  000A8C  D7CB               	goto	l3390
  1627  000A8E  0A3F               	xorlw	63	; case 32
  1628  000A90  B4D8               	btfsc	status,2,c
  1629  000A92  D7C8               	goto	l3390
  1630  000A94  D6D2               	goto	l3356
  1631  000A96                     __end_of_main:
  1632                           	opt stack 0
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _uart_lthread *****************
  1642 ;; Defined at:
  1643 ;;		line 12 in file "src/uart_thread.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  uptr            2   21[BANK1 ] PTR struct __uart_thread
  1646 ;;		 -> main@uthread_data(10), 
  1647 ;;  msgtype         2   23[BANK1 ] int 
  1648 ;;  length          2   25[BANK1 ] int 
  1649 ;;  msgbuffer       2   27[BANK1 ] PTR unsigned char 
  1650 ;;		 -> main@msgbuffer(11), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  index           2   30[BANK1 ] int 
  1653 ;;  status          1   29[BANK1 ] char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   21[BANK1 ] int 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1663 ;;      Params:         0       0       8       0       0
  1664 ;;      Locals:         0       0       3       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         0       0      11       0       0
  1667 ;;Total ram usage:       11 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:   14
  1670 ;; This function calls:
  1671 ;;		_FromMainLow_sendmsg
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text1
  1678  000DDE                     __ptext1:
  1679                           	opt stack 0
  1680  000DDE                     _uart_lthread:
  1681                           	opt stack 16
  1682                           
  1683                           ;uart_thread.c: 13: if (msgtype == 30) {
  1684                           
  1685                           ; BSR set to: 2
  1686                           ;incstack = 0
  1687  000DDE  0101               	movlb	1	; () banked
  1688  000DE0  0101               	movlb	1	; () banked
  1689  000DE2  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1690  000DE4  0A1E               	xorlw	30
  1691  000DE6  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1692  000DE8  B4D8               	btfsc	status,2,c
  1693  000DEA  0012               	return	
  1694                           
  1695                           ; BSR set to: 1
  1696                           ;uart_thread.c: 16: else if(msgtype == 31){
  1697                           
  1698                           ; BSR set to: 1
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;uart_thread.c: 15: }
  1702  000DEC  0101               	movlb	1	; () banked
  1703  000DEE  0101               	movlb	1	; () banked
  1704  000DF0  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1705  000DF2  0A1F               	xorlw	31
  1706  000DF4  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1707  000DF6  A4D8               	btfss	status,2,c
  1708  000DF8  D04F               	goto	l3604
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;uart_thread.c: 18: int index = 0;
  1712  000DFA  0E00               	movlw	0
  1713  000DFC  0101               	movlb	1	; () banked
  1714  000DFE  0101               	movlb	1	; () banked
  1715  000E00  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1716  000E02  0E00               	movlw	0
  1717  000E04  0101               	movlb	1	; () banked
  1718  000E06  6FC0               	movwf	uart_lthread@index& (0+255),b
  1719                           
  1720                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1721  000E08  0E00               	movlw	0
  1722  000E0A  0101               	movlb	1	; () banked
  1723  000E0C  0101               	movlb	1	; () banked
  1724  000E0E  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1725  000E10  0E00               	movlw	0
  1726  000E12  0101               	movlb	1	; () banked
  1727  000E14  6FC0               	movwf	uart_lthread@index& (0+255),b
  1728  000E16                     
  1729                           ; BSR set to: 1
  1730  000E16  0101               	movlb	1	; () banked
  1731  000E18  0101               	movlb	1	; () banked
  1732  000E1A  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1733  000E1C  0A80               	xorlw	128
  1734  000E1E  0F80               	addlw	-128
  1735  000E20  0E0A               	movlw	10
  1736  000E22  B4D8               	btfsc	status,2,c
  1737  000E24  5DC0               	subwf	uart_lthread@index& (0+255),w,b
  1738  000E26  B0D8               	btfsc	status,0,c
  1739  000E28  D023               	goto	l3600
  1740                           
  1741                           ; BSR set to: 1
  1742                           
  1743                           ; BSR set to: 1
  1744                           
  1745                           ; BSR set to: 1
  1746  000E2A  0101               	movlb	1	; () banked
  1747  000E2C  0101               	movlb	1	; () banked
  1748  000E2E  51C0               	movf	uart_lthread@index& (0+255),w,b
  1749  000E30  0101               	movlb	1	; () banked
  1750  000E32  0101               	movlb	1	; () banked
  1751  000E34  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1752  000E36  6ED9               	movwf	fsr2l,c
  1753  000E38  0101               	movlb	1	; () banked
  1754  000E3A  0101               	movlb	1	; () banked
  1755  000E3C  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1756  000E3E  0101               	movlb	1	; () banked
  1757  000E40  0101               	movlb	1	; () banked
  1758  000E42  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1759  000E44  6EDA               	movwf	fsr2h,c
  1760  000E46  0101               	movlb	1	; () banked
  1761  000E48  0101               	movlb	1	; () banked
  1762  000E4A  51C0               	movf	uart_lthread@index& (0+255),w,b
  1763  000E4C  0101               	movlb	1	; () banked
  1764  000E4E  0101               	movlb	1	; () banked
  1765  000E50  25B7               	addwf	uart_lthread@uptr& (0+255),w,b
  1766  000E52  6EE1               	movwf	fsr1l,c
  1767  000E54  0101               	movlb	1	; () banked
  1768  000E56  0101               	movlb	1	; () banked
  1769  000E58  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1770  000E5A  0101               	movlb	1	; () banked
  1771  000E5C  0101               	movlb	1	; () banked
  1772  000E5E  21B8               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1773  000E60  6EE2               	movwf	fsr1h,c
  1774  000E62  CFDF FFE7          	movff	indf2,indf1
  1775                           
  1776                           ; BSR set to: 1
  1777  000E66  0101               	movlb	1	; () banked
  1778  000E68  0101               	movlb	1	; () banked
  1779  000E6A  4BC0               	infsnz	uart_lthread@index& (0+255),f,b
  1780  000E6C  2BC1               	incf	(uart_lthread@index+1)& (0+255),f,b
  1781  000E6E  D7D3               	goto	L3
  1782  000E70                     l3600:
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1786  000E70  C1B9  F1B3         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1787  000E74  0101               	movlb	1	; () banked
  1788  000E76  0101               	movlb	1	; () banked
  1789  000E78  C1B8  F1B5         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1790  000E7C  0101               	movlb	1	; () banked
  1791  000E7E  0101               	movlb	1	; () banked
  1792  000E80  C1B7  F1B4         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1793  000E84  0101               	movlb	1	; () banked
  1794  000E86  0101               	movlb	1	; () banked
  1795  000E88  51BB               	movf	uart_lthread@length& (0+255),w,b
  1796  000E8A  EC1E  F00D         	call	_FromMainLow_sendmsg
  1797  000E8E  0101               	movlb	1	; () banked
  1798  000E90  0101               	movlb	1	; () banked
  1799  000E92  6FBF               	movwf	uart_lthread@status& (0+255),b
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;uart_thread.c: 25: }
  1803                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1804                           
  1805                           ; BSR set to: 1
  1806  000E94  889D               	bsf	3997,4,c	;volatile
  1807                           
  1808                           ;uart_thread.c: 29: }
  1809  000E96  0012               	return	
  1810  000E98                     l3604:
  1811                           
  1812                           ; BSR set to: 1
  1813                           ;uart_thread.c: 30: else if(msgtype == 32){
  1814  000E98  0101               	movlb	1	; () banked
  1815  000E9A  0101               	movlb	1	; () banked
  1816  000E9C  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1817  000E9E  0A20               	xorlw	32
  1818  000EA0  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1819  000EA2  A4D8               	btfss	status,2,c
  1820  000EA4  0012               	return	
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1824  000EA6  0101               	movlb	1	; () banked
  1825  000EA8  0101               	movlb	1	; () banked
  1826  000EAA  51BB               	movf	uart_lthread@length& (0+255),w,b
  1827  000EAC  0101               	movlb	1	; () banked
  1828  000EAE  0101               	movlb	1	; () banked
  1829  000EB0  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1830  000EB2  6ED9               	movwf	fsr2l,c
  1831  000EB4  0101               	movlb	1	; () banked
  1832  000EB6  0101               	movlb	1	; () banked
  1833  000EB8  51BC               	movf	(uart_lthread@length+1)& (0+255),w,b
  1834  000EBA  0101               	movlb	1	; () banked
  1835  000EBC  0101               	movlb	1	; () banked
  1836  000EBE  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1837  000EC0  6EDA               	movwf	fsr2h,c
  1838  000EC2  0E00               	movlw	0
  1839  000EC4  6EDF               	movwf	indf2,c
  1840  000EC6  0012               	return	
  1841  000EC8                     __end_of_uart_lthread:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           indf1	equ	0xFE7
  1850                           fsr1h	equ	0xFE2
  1851                           fsr1l	equ	0xFE1
  1852                           indf2	equ	0xFDF
  1853                           fsr2h	equ	0xFDA
  1854                           fsr2l	equ	0xFD9
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _FromMainLow_sendmsg *****************
  1858 ;; Defined at:
  1859 ;;		line 150 in file "src/messages.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  length          1    wreg     unsigned char 
  1862 ;;  msgtype         1   17[BANK1 ] unsigned char 
  1863 ;;  data            2   18[BANK1 ] PTR void 
  1864 ;;		 -> main@uthread_data(10), 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  length          1   20[BANK1 ] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      char 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1876 ;;      Params:         0       0       3       0       0
  1877 ;;      Locals:         0       0       1       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         0       0       4       0       0
  1880 ;;Total ram usage:        4 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:   13
  1883 ;; This function calls:
  1884 ;;		_send_msg
  1885 ;; This function is called by:
  1886 ;;		_uart_lthread
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text2
  1891  001A3C                     __ptext2:
  1892                           	opt stack 0
  1893  001A3C                     _FromMainLow_sendmsg:
  1894                           	opt stack 16
  1895                           
  1896                           ; BSR set to: 1
  1897                           ;incstack = 0
  1898                           ;FromMainLow_sendmsg@length stored from wreg
  1899  001A3C  CFE8 F1B6          	movff	wreg,FromMainLow_sendmsg@length
  1900                           
  1901                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1902  001A40  0101               	movlb	1	; () banked
  1903  001A42  0E01               	movlw	high _FromMainLow_MQ
  1904  001A44  0101               	movlb	1	; () banked
  1905  001A46  0101               	movlb	1	; () banked
  1906  001A48  6FA9               	movwf	(send_msg@qptr+1)& (0+255),b
  1907  001A4A  0101               	movlb	1	; () banked
  1908  001A4C  0E36               	movlw	low _FromMainLow_MQ
  1909  001A4E  0101               	movlb	1	; () banked
  1910  001A50  0101               	movlb	1	; () banked
  1911  001A52  6FA8               	movwf	send_msg@qptr& (0+255),b
  1912  001A54  C1B6  F1AA         	movff	FromMainLow_sendmsg@length,send_msg@length
  1913  001A58  C1B3  F1AB         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1914  001A5C  0101               	movlb	1	; () banked
  1915  001A5E  0101               	movlb	1	; () banked
  1916  001A60  C1B5  F1AD         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1917  001A64  0101               	movlb	1	; () banked
  1918  001A66  0101               	movlb	1	; () banked
  1919  001A68  C1B4  F1AC         	movff	FromMainLow_sendmsg@data,send_msg@data
  1920  001A6C  EC6D  F006         	call	_send_msg	;wreg free
  1921  001A70  0012               	return	
  1922  001A72                     __end_of_FromMainLow_sendmsg:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           indf1	equ	0xFE7
  1931                           fsr1h	equ	0xFE2
  1932                           fsr1l	equ	0xFE1
  1933                           indf2	equ	0xFDF
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _timer1_lthread *****************
  1939 ;; Defined at:
  1940 ;;		line 14 in file "src/timer1_thread.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  tptr            2   21[BANK1 ] PTR struct __timer1_thre
  1943 ;;		 -> main@t1thread_data(2), 
  1944 ;;  msgtype         2   23[BANK1 ] int 
  1945 ;;  length          2   25[BANK1 ] int 
  1946 ;;  msgbuffer       2   27[BANK1 ] PTR unsigned char 
  1947 ;;		 -> main@msgbuffer(11), 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  retval          1   30[BANK1 ] char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2   21[BANK1 ] int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1959 ;;      Params:         0       0       8       0       0
  1960 ;;      Locals:         0       0       1       0       0
  1961 ;;      Temps:          0       0       1       0       0
  1962 ;;      Totals:         0       0      10       0       0
  1963 ;;Total ram usage:       10 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:   14
  1966 ;; This function calls:
  1967 ;;		_FromMainHigh_sendmsg
  1968 ;;		___lwmod
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text3
  1975  001510                     __ptext3:
  1976                           	opt stack 0
  1977  001510                     _timer1_lthread:
  1978                           	opt stack 16
  1979                           
  1980                           ;timer1_thread.c: 15: signed char retval;
  1981                           ;timer1_thread.c: 17: tptr->msgcount++;
  1982                           
  1983                           ;incstack = 0
  1984  001510  C1B7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1985  001514  C1B8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1986  001518  2ADE               	incf	postinc2,f,c
  1987  00151A  0E00               	movlw	0
  1988  00151C  22DD               	addwfc	postdec2,f,c
  1989                           
  1990                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1991  00151E  C1B7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1992  001522  C1B8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1993  001526  0100               	movlb	0	; () banked
  1994  001528  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  1995  00152C  0100               	movlb	0	; () banked
  1996  00152E  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  1997  001532  0E00               	movlw	0
  1998  001534  0100               	movlb	0	; () banked
  1999  001536  0100               	movlb	0	; () banked
  2000  001538  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  2001  00153A  0E0A               	movlw	10
  2002  00153C  0100               	movlb	0	; () banked
  2003  00153E  6FD9               	movwf	___lwmod@divisor& (0+255),b
  2004  001540  EC86  F009         	call	___lwmod	;wreg free
  2005  001544  0100               	movlb	0	; () banked
  2006  001546  0100               	movlb	0	; () banked
  2007  001548  51D7               	movf	?___lwmod& (0+255),w,b
  2008  00154A  0A09               	xorlw	9
  2009  00154C  0100               	movlb	0	; () banked
  2010  00154E  11D8               	iorwf	(?___lwmod+1)& (0+255),w,b
  2011  001550  A4D8               	btfss	status,2,c
  2012  001552  0012               	return	
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2016  001554  0101               	movlb	1	; () banked
  2017  001556  6FBF               	movwf	??_timer1_lthread& (0+255),b
  2018  001558  0E14               	movlw	20
  2019  00155A  0101               	movlb	1	; () banked
  2020  00155C  0101               	movlb	1	; () banked
  2021  00155E  6FB3               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2022  001560  0101               	movlb	1	; () banked
  2023  001562  51BF               	movf	??_timer1_lthread& (0+255),w,b
  2024  001564  0101               	movlb	1	; () banked
  2025  001566  0101               	movlb	1	; () banked
  2026  001568  C1B8  F1B5         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2027  00156C  0101               	movlb	1	; () banked
  2028  00156E  0101               	movlb	1	; () banked
  2029  001570  C1B7  F1B4         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2030  001574  0E02               	movlw	2
  2031  001576  EC39  F00D         	call	_FromMainHigh_sendmsg
  2032  00157A  0101               	movlb	1	; () banked
  2033  00157C  0101               	movlb	1	; () banked
  2034  00157E  6FC0               	movwf	timer1_lthread@retval& (0+255),b
  2035  001580  0012               	return	
  2036  001582                     __end_of_timer1_lthread:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           indf1	equ	0xFE7
  2045                           fsr1h	equ	0xFE2
  2046                           fsr1l	equ	0xFE1
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function ___lwmod *****************
  2055 ;; Defined at:
  2056 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  dividend        2   33[BANK0 ] unsigned int 
  2059 ;;  divisor         2   35[BANK0 ] unsigned int 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  counter         1    0[BANK1 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  2   33[BANK0 ] unsigned int 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2071 ;;      Params:         0       4       0       0       0
  2072 ;;      Locals:         0       0       1       0       0
  2073 ;;      Temps:          0       1       0       0       0
  2074 ;;      Totals:         0       5       1       0       0
  2075 ;;Total ram usage:        6 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:   11
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_timer1_lthread
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text4
  2086  00130C                     __ptext4:
  2087                           	opt stack 0
  2088  00130C                     ___lwmod:
  2089                           	opt stack 18
  2090                           
  2091                           ;incstack = 0
  2092  00130C  0100               	movlb	0	; () banked
  2093  00130E  0100               	movlb	0	; () banked
  2094  001310  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2095  001312  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  2096  001314  B4D8               	btfsc	status,2,c
  2097  001316  D03A               	goto	l1056
  2098                           
  2099                           ; BSR set to: 0
  2100  001318  0100               	movlb	0	; () banked
  2101  00131A  6FDB               	movwf	??___lwmod& (0+255),b
  2102  00131C  0E01               	movlw	1
  2103  00131E  0101               	movlb	1	; () banked
  2104  001320  0101               	movlb	1	; () banked
  2105  001322  6FA2               	movwf	___lwmod@counter& (0+255),b
  2106  001324  0100               	movlb	0	; () banked
  2107  001326  51DB               	movf	??___lwmod& (0+255),w,b
  2108  001328  D009               	goto	l3752
  2109  00132A                     l3750:
  2110                           
  2111                           ; BSR set to: 0
  2112  00132A  0100               	movlb	0	; () banked
  2113  00132C  0100               	movlb	0	; () banked
  2114  00132E  0100               	movlb	0	; () banked
  2115  001330  90D8               	bcf	status,0,c
  2116  001332  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  2117  001334  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2118  001336  0101               	movlb	1	; () banked
  2119  001338  0101               	movlb	1	; () banked
  2120  00133A  2BA2               	incf	___lwmod@counter& (0+255),f,b
  2121  00133C                     l3752:
  2122  00133C  0100               	movlb	0	; () banked
  2123  00133E  0100               	movlb	0	; () banked
  2124  001340  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2125  001342  D7F3               	goto	l3750
  2126  001344                     l3754:
  2127  001344  0100               	movlb	0	; () banked
  2128  001346  0100               	movlb	0	; () banked
  2129  001348  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2130  00134A  0100               	movlb	0	; () banked
  2131  00134C  0100               	movlb	0	; () banked
  2132  00134E  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  2133  001350  0100               	movlb	0	; () banked
  2134  001352  0100               	movlb	0	; () banked
  2135  001354  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2136  001356  0100               	movlb	0	; () banked
  2137  001358  0100               	movlb	0	; () banked
  2138  00135A  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2139  00135C  A0D8               	btfss	status,0,c
  2140  00135E  D00C               	goto	l3758
  2141                           
  2142                           ; BSR set to: 0
  2143  001360  0100               	movlb	0	; () banked
  2144  001362  0100               	movlb	0	; () banked
  2145  001364  51D9               	movf	___lwmod@divisor& (0+255),w,b
  2146  001366  0100               	movlb	0	; () banked
  2147  001368  0100               	movlb	0	; () banked
  2148  00136A  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  2149  00136C  0100               	movlb	0	; () banked
  2150  00136E  0100               	movlb	0	; () banked
  2151  001370  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2152  001372  0100               	movlb	0	; () banked
  2153  001374  0100               	movlb	0	; () banked
  2154  001376  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2155  001378                     l3758:
  2156                           
  2157                           ; BSR set to: 0
  2158  001378  0100               	movlb	0	; () banked
  2159  00137A  0100               	movlb	0	; () banked
  2160  00137C  0100               	movlb	0	; () banked
  2161  00137E  90D8               	bcf	status,0,c
  2162  001380  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2163  001382  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  2164                           
  2165                           ; BSR set to: 0
  2166  001384  0101               	movlb	1	; () banked
  2167  001386  0101               	movlb	1	; () banked
  2168  001388  2FA2               	decfsz	___lwmod@counter& (0+255),f,b
  2169  00138A  D7DC               	goto	l3754
  2170  00138C                     l1056:
  2171  00138C  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  2172  001390  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  2173  001394  0012               	return	
  2174  001396                     __end_of___lwmod:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           indf1	equ	0xFE7
  2183                           fsr1h	equ	0xFE2
  2184                           fsr1l	equ	0xFE1
  2185                           indf2	equ	0xFDF
  2186                           postinc2	equ	0xFDE
  2187                           postdec2	equ	0xFDD
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _FromMainHigh_sendmsg *****************
  2193 ;; Defined at:
  2194 ;;		line 174 in file "src/messages.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  length          1    wreg     unsigned char 
  2197 ;;  msgtype         1   17[BANK1 ] unsigned char 
  2198 ;;  data            2   18[BANK1 ] PTR void 
  2199 ;;		 -> main@t1thread_data(2), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  length          1   20[BANK1 ] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      char 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2211 ;;      Params:         0       0       3       0       0
  2212 ;;      Locals:         0       0       1       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         0       0       4       0       0
  2215 ;;Total ram usage:        4 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:   13
  2218 ;; This function calls:
  2219 ;;		_send_msg
  2220 ;; This function is called by:
  2221 ;;		_timer1_lthread
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text5
  2226  001A72                     __ptext5:
  2227                           	opt stack 0
  2228  001A72                     _FromMainHigh_sendmsg:
  2229                           	opt stack 16
  2230                           
  2231                           ;incstack = 0
  2232                           ;FromMainHigh_sendmsg@length stored from wreg
  2233  001A72  CFE8 F1B6          	movff	wreg,FromMainHigh_sendmsg@length
  2234                           
  2235                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2236  001A76  0101               	movlb	1	; () banked
  2237  001A78  0E01               	movlw	high _FromMainHigh_MQ
  2238  001A7A  0101               	movlb	1	; () banked
  2239  001A7C  0101               	movlb	1	; () banked
  2240  001A7E  6FA9               	movwf	(send_msg@qptr+1)& (0+255),b
  2241  001A80  0101               	movlb	1	; () banked
  2242  001A82  0E00               	movlw	low _FromMainHigh_MQ
  2243  001A84  0101               	movlb	1	; () banked
  2244  001A86  0101               	movlb	1	; () banked
  2245  001A88  6FA8               	movwf	send_msg@qptr& (0+255),b
  2246  001A8A  C1B6  F1AA         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2247  001A8E  C1B3  F1AB         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2248  001A92  0101               	movlb	1	; () banked
  2249  001A94  0101               	movlb	1	; () banked
  2250  001A96  C1B5  F1AD         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2251  001A9A  0101               	movlb	1	; () banked
  2252  001A9C  0101               	movlb	1	; () banked
  2253  001A9E  C1B4  F1AC         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2254  001AA2  EC6D  F006         	call	_send_msg	;wreg free
  2255  001AA6  0012               	return	
  2256  001AA8                     __end_of_FromMainHigh_sendmsg:
  2257                           	opt stack 0
  2258                           tblptru	equ	0xFF8
  2259                           tblptrh	equ	0xFF7
  2260                           tblptrl	equ	0xFF6
  2261                           tablat	equ	0xFF5
  2262                           postinc0	equ	0xFEE
  2263                           wreg	equ	0xFE8
  2264                           indf1	equ	0xFE7
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _timer0_lthread *****************
  2275 ;; Defined at:
  2276 ;;		line 9 in file "src/timer0_thread.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2279 ;;		 -> main@t0thread_data(2), 
  2280 ;;  msgtype         2    2[BANK1 ] int 
  2281 ;;  length          2    4[BANK1 ] int 
  2282 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2283 ;;		 -> main@msgbuffer(11), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2286 ;;		 -> main@msgbuffer(11), 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2    0[BANK1 ] int 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2296 ;;      Params:         0       0       8       0       0
  2297 ;;      Locals:         0       2       0       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         0       2       8       0       0
  2300 ;;Total ram usage:       10 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:   11
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text6
  2311  001CDC                     __ptext6:
  2312                           	opt stack 0
  2313  001CDC                     _timer0_lthread:
  2314                           	opt stack 19
  2315                           
  2316                           ;timer0_thread.c: 10: unsigned int *msgval;
  2317                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2318                           
  2319                           ;incstack = 0
  2320  001CDC  0101               	movlb	1	; () banked
  2321  001CDE  0100               	movlb	0	; () banked
  2322  001CE0  C1A9  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2323  001CE4  0101               	movlb	1	; () banked
  2324  001CE6  0100               	movlb	0	; () banked
  2325  001CE8  C1A8  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2326                           
  2327                           ; BSR set to: 0
  2328  001CEC  0012               	return	
  2329  001CEE                     __end_of_timer0_lthread:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           indf1	equ	0xFE7
  2338                           fsr1h	equ	0xFE2
  2339                           fsr1l	equ	0xFE1
  2340                           indf2	equ	0xFDF
  2341                           postinc2	equ	0xFDE
  2342                           postdec2	equ	0xFDD
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _start_i2c_slave_reply *****************
  2348 ;; Defined at:
  2349 ;;		line 53 in file "src/my_i2c.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  length          1    wreg     unsigned char 
  2352 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  2353 ;;		 -> main@msgbuffer(11), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  length          1   37[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2365 ;;      Params:         0       2       0       0       0
  2366 ;;      Locals:         0       1       0       0       0
  2367 ;;      Temps:          0       2       0       0       0
  2368 ;;      Totals:         0       5       0       0       0
  2369 ;;Total ram usage:        5 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:   11
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text7
  2380  000BCC                     __ptext7:
  2381                           	opt stack 0
  2382  000BCC                     _start_i2c_slave_reply:
  2383                           	opt stack 19
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387                           ;start_i2c_slave_reply@length stored from wreg
  2388  000BCC  CFE8 F0DB          	movff	wreg,start_i2c_slave_reply@length
  2389                           
  2390                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2391  000BD0  0100               	movlb	0	; () banked
  2392  000BD2  EE20 F019          	lfsr	2,25
  2393  000BD6  0100               	movlb	0	; () banked
  2394  000BD8  51DC               	movf	_ic_ptr& (0+255),w,b
  2395  000BDA  26D9               	addwf	fsr2l,f,c
  2396  000BDC  0100               	movlb	0	; () banked
  2397  000BDE  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2398  000BE0  22DA               	addwfc	fsr2h,f,c
  2399  000BE2  0E00               	movlw	0
  2400  000BE4  6EDF               	movwf	indf2,c
  2401  000BE6  D042               	goto	l3564
  2402  000BE8                     l3560:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2406  000BE8  0100               	movlb	0	; () banked
  2407  000BEA  EE20 F019          	lfsr	2,25
  2408  000BEE  0100               	movlb	0	; () banked
  2409  000BF0  51DC               	movf	_ic_ptr& (0+255),w,b
  2410  000BF2  26D9               	addwf	fsr2l,f,c
  2411  000BF4  0100               	movlb	0	; () banked
  2412  000BF6  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2413  000BF8  22DA               	addwfc	fsr2h,f,c
  2414  000BFA  50DF               	movf	indf2,w,c
  2415  000BFC  0100               	movlb	0	; () banked
  2416  000BFE  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2417  000C00  0100               	movlb	0	; () banked
  2418  000C02  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2419  000C04  0D01               	mullw	1
  2420  000C06  50F3               	movf	prodl,w,c
  2421  000C08  0100               	movlb	0	; () banked
  2422  000C0A  0100               	movlb	0	; () banked
  2423  000C0C  25D7               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2424  000C0E  6ED9               	movwf	fsr2l,c
  2425  000C10  50F4               	movf	prodh,w,c
  2426  000C12  0100               	movlb	0	; () banked
  2427  000C14  0100               	movlb	0	; () banked
  2428  000C16  21D8               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2429  000C18  6EDA               	movwf	fsr2h,c
  2430  000C1A  0100               	movlb	0	; () banked
  2431  000C1C  EE10 F019          	lfsr	1,25
  2432  000C20  0100               	movlb	0	; () banked
  2433  000C22  51DC               	movf	_ic_ptr& (0+255),w,b
  2434  000C24  26E1               	addwf	fsr1l,f,c
  2435  000C26  0100               	movlb	0	; () banked
  2436  000C28  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2437  000C2A  22E2               	addwfc	fsr1h,f,c
  2438  000C2C  50E7               	movf	indf1,w,c
  2439  000C2E  0100               	movlb	0	; () banked
  2440  000C30  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2441  000C32  0100               	movlb	0	; () banked
  2442  000C34  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2443  000C36  0D01               	mullw	1
  2444  000C38  0E0F               	movlw	15
  2445  000C3A  26F3               	addwf	prodl,f,c
  2446  000C3C  0E00               	movlw	0
  2447  000C3E  22F4               	addwfc	prodh,f,c
  2448  000C40  50F3               	movf	prodl,w,c
  2449  000C42  0100               	movlb	0	; () banked
  2450  000C44  0100               	movlb	0	; () banked
  2451  000C46  25DC               	addwf	_ic_ptr& (0+255),w,b
  2452  000C48  6EE1               	movwf	fsr1l,c
  2453  000C4A  50F4               	movf	prodh,w,c
  2454  000C4C  0100               	movlb	0	; () banked
  2455  000C4E  0100               	movlb	0	; () banked
  2456  000C50  21DD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2457  000C52  6EE2               	movwf	fsr1h,c
  2458  000C54  CFDF FFE7          	movff	indf2,indf1
  2459                           
  2460                           ; BSR set to: 0
  2461  000C58  0100               	movlb	0	; () banked
  2462  000C5A  EE20 F019          	lfsr	2,25
  2463  000C5E  0100               	movlb	0	; () banked
  2464  000C60  51DC               	movf	_ic_ptr& (0+255),w,b
  2465  000C62  26D9               	addwf	fsr2l,f,c
  2466  000C64  0100               	movlb	0	; () banked
  2467  000C66  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2468  000C68  22DA               	addwfc	fsr2h,f,c
  2469  000C6A  2ADF               	incf	indf2,f,c
  2470  000C6C                     l3564:
  2471                           
  2472                           ; BSR set to: 0
  2473  000C6C  0100               	movlb	0	; () banked
  2474  000C6E  EE20 F019          	lfsr	2,25
  2475  000C72  0100               	movlb	0	; () banked
  2476  000C74  51DC               	movf	_ic_ptr& (0+255),w,b
  2477  000C76  26D9               	addwf	fsr2l,f,c
  2478  000C78  0100               	movlb	0	; () banked
  2479  000C7A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2480  000C7C  22DA               	addwfc	fsr2h,f,c
  2481  000C7E  50DF               	movf	indf2,w,c
  2482  000C80  0100               	movlb	0	; () banked
  2483  000C82  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2484  000C84  0100               	movlb	0	; () banked
  2485  000C86  0100               	movlb	0	; () banked
  2486  000C88  51DB               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2487  000C8A  0100               	movlb	0	; () banked
  2488  000C8C  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2489  000C8E  A0D8               	btfss	status,0,c
  2490  000C90  D7AB               	goto	l3560
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;my_i2c.c: 57: }
  2494                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2495                           
  2496                           ; BSR set to: 0
  2497  000C92  0100               	movlb	0	; () banked
  2498  000C94  EE20 F019          	lfsr	2,25
  2499  000C98  0100               	movlb	0	; () banked
  2500  000C9A  51DC               	movf	_ic_ptr& (0+255),w,b
  2501  000C9C  26D9               	addwf	fsr2l,f,c
  2502  000C9E  0100               	movlb	0	; () banked
  2503  000CA0  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2504  000CA2  22DA               	addwfc	fsr2h,f,c
  2505  000CA4  0100               	movlb	0	; () banked
  2506  000CA6  C0DB  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2507                           
  2508                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2509  000CAA  0100               	movlb	0	; () banked
  2510  000CAC  EE20 F01A          	lfsr	2,26
  2511  000CB0  0100               	movlb	0	; () banked
  2512  000CB2  51DC               	movf	_ic_ptr& (0+255),w,b
  2513  000CB4  26D9               	addwf	fsr2l,f,c
  2514  000CB6  0100               	movlb	0	; () banked
  2515  000CB8  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2516  000CBA  22DA               	addwfc	fsr2h,f,c
  2517  000CBC  0E01               	movlw	1
  2518  000CBE  6EDF               	movwf	indf2,c
  2519                           
  2520                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2521  000CC0  0100               	movlb	0	; () banked
  2522  000CC2  EE20 F00F          	lfsr	2,15
  2523  000CC6  0100               	movlb	0	; () banked
  2524  000CC8  51DC               	movf	_ic_ptr& (0+255),w,b
  2525  000CCA  26D9               	addwf	fsr2l,f,c
  2526  000CCC  0100               	movlb	0	; () banked
  2527  000CCE  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  2528  000CD0  22DA               	addwfc	fsr2h,f,c
  2529  000CD2  50DF               	movf	indf2,w,c
  2530  000CD4  6EC9               	movwf	4041,c	;volatile
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2534  000CD6  88C6               	bsf	4038,4,c	;volatile
  2535                           
  2536                           ; BSR set to: 0
  2537  000CD8  0012               	return	
  2538  000CDA                     __end_of_start_i2c_slave_reply:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           prodh	equ	0xFF4
  2545                           prodl	equ	0xFF3
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           indf1	equ	0xFE7
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           indf2	equ	0xFDF
  2552                           postinc2	equ	0xFDE
  2553                           postdec2	equ	0xFDD
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8
  2557                           
  2558 ;; *************** function _sendUART *****************
  2559 ;; Defined at:
  2560 ;;		line 85 in file "src/my_uart.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  length          1    wreg     unsigned char 
  2563 ;;  data            2   21[BANK1 ] PTR unsigned char 
  2564 ;;		 -> timer0_int_handler@test(1), main@test(2), 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  length          1   25[BANK1 ] unsigned char 
  2567 ;;  retval          1   24[BANK1 ] char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      enum E4332
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2577 ;;      Params:         0       0       2       0       0
  2578 ;;      Locals:         0       0       2       0       0
  2579 ;;      Temps:          0       0       1       0       0
  2580 ;;      Totals:         0       0       5       0       0
  2581 ;;Total ram usage:        5 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:   14
  2584 ;; This function calls:
  2585 ;;		_ToMainLow_sendmsg
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text8
  2592  001880                     __ptext8:
  2593                           	opt stack 0
  2594  001880                     _sendUART:
  2595                           	opt stack 16
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;incstack = 0
  2599                           ;sendUART@length stored from wreg
  2600  001880  CFE8 F1BB          	movff	wreg,sendUART@length
  2601                           
  2602                           ;my_uart.c: 86: if(length > 10){
  2603  001884  0E0A               	movlw	10
  2604  001886  0101               	movlb	1	; () banked
  2605  001888  0101               	movlb	1	; () banked
  2606  00188A  65BB               	cpfsgt	sendUART@length& (0+255),b
  2607  00188C  D001               	goto	l3526
  2608  00188E  0012               	return	
  2609  001890                     l3526:
  2610                           
  2611                           ; BSR set to: 1
  2612                           ;my_uart.c: 89: }
  2613                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2614  001890  0101               	movlb	1	; () banked
  2615  001892  6FB9               	movwf	??_sendUART& (0+255),b
  2616  001894  0E1F               	movlw	31
  2617  001896  0101               	movlb	1	; () banked
  2618  001898  0101               	movlb	1	; () banked
  2619  00189A  6FB3               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2620  00189C  0101               	movlb	1	; () banked
  2621  00189E  51B9               	movf	??_sendUART& (0+255),w,b
  2622  0018A0  0101               	movlb	1	; () banked
  2623  0018A2  0101               	movlb	1	; () banked
  2624  0018A4  C1B8  F1B5         	movff	sendUART@data+1,ToMainLow_sendmsg@data+1
  2625  0018A8  0101               	movlb	1	; () banked
  2626  0018AA  0101               	movlb	1	; () banked
  2627  0018AC  C1B7  F1B4         	movff	sendUART@data,ToMainLow_sendmsg@data
  2628  0018B0  0101               	movlb	1	; () banked
  2629  0018B2  0101               	movlb	1	; () banked
  2630  0018B4  51BB               	movf	sendUART@length& (0+255),w,b
  2631  0018B6  EC54  F00D         	call	_ToMainLow_sendmsg
  2632  0018BA  0101               	movlb	1	; () banked
  2633  0018BC  0101               	movlb	1	; () banked
  2634  0018BE  6FBA               	movwf	sendUART@retval& (0+255),b
  2635  0018C0  0012               	return	
  2636  0018C2                     __end_of_sendUART:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           indf1	equ	0xFE7
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           indf2	equ	0xFDF
  2650                           postinc2	equ	0xFDE
  2651                           postdec2	equ	0xFDD
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _ToMainLow_sendmsg *****************
  2657 ;; Defined at:
  2658 ;;		line 103 in file "src/messages.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  length          1    wreg     unsigned char 
  2661 ;;  msgtype         1   17[BANK1 ] unsigned char 
  2662 ;;  data            2   18[BANK1 ] PTR void 
  2663 ;;		 -> timer0_int_handler@test(1), NULL(0), main@test(2), main@uc(5), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  length          1   20[BANK1 ] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      char 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2675 ;;      Params:         0       0       3       0       0
  2676 ;;      Locals:         0       0       1       0       0
  2677 ;;      Temps:          0       0       0       0       0
  2678 ;;      Totals:         0       0       4       0       0
  2679 ;;Total ram usage:        4 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:   13
  2682 ;; This function calls:
  2683 ;;		_send_msg
  2684 ;; This function is called by:
  2685 ;;		_sendUART
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text9
  2690  001AA8                     __ptext9:
  2691                           	opt stack 0
  2692  001AA8                     _ToMainLow_sendmsg:
  2693                           	opt stack 16
  2694                           
  2695                           ; BSR set to: 1
  2696                           ;incstack = 0
  2697                           ;ToMainLow_sendmsg@length stored from wreg
  2698  001AA8  CFE8 F1B6          	movff	wreg,ToMainLow_sendmsg@length
  2699                           
  2700                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2701  001AAC  0100               	movlb	0	; () banked
  2702  001AAE  0E00               	movlw	high _ToMainLow_MQ
  2703  001AB0  0101               	movlb	1	; () banked
  2704  001AB2  0101               	movlb	1	; () banked
  2705  001AB4  6FA9               	movwf	(send_msg@qptr+1)& (0+255),b
  2706  001AB6  0100               	movlb	0	; () banked
  2707  001AB8  0E80               	movlw	low _ToMainLow_MQ
  2708  001ABA  0101               	movlb	1	; () banked
  2709  001ABC  0101               	movlb	1	; () banked
  2710  001ABE  6FA8               	movwf	send_msg@qptr& (0+255),b
  2711  001AC0  C1B6  F1AA         	movff	ToMainLow_sendmsg@length,send_msg@length
  2712  001AC4  C1B3  F1AB         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2713  001AC8  0101               	movlb	1	; () banked
  2714  001ACA  0101               	movlb	1	; () banked
  2715  001ACC  C1B5  F1AD         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2716  001AD0  0101               	movlb	1	; () banked
  2717  001AD2  0101               	movlb	1	; () banked
  2718  001AD4  C1B4  F1AC         	movff	ToMainLow_sendmsg@data,send_msg@data
  2719  001AD8  EC6D  F006         	call	_send_msg	;wreg free
  2720  001ADC  0012               	return	
  2721  001ADE                     __end_of_ToMainLow_sendmsg:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           tblptrh	equ	0xFF7
  2725                           tblptrl	equ	0xFF6
  2726                           tablat	equ	0xFF5
  2727                           prodh	equ	0xFF4
  2728                           prodl	equ	0xFF3
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           indf1	equ	0xFE7
  2732                           fsr1h	equ	0xFE2
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _send_msg *****************
  2742 ;; Defined at:
  2743 ;;		line 24 in file "src/messages.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  qptr            2    6[BANK1 ] PTR struct __msg_queue
  2746 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2747 ;;  length          1    8[BANK1 ] unsigned char 
  2748 ;;  msgtype         1    9[BANK1 ] unsigned char 
  2749 ;;  data            2   10[BANK1 ] PTR void 
  2750 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), main@test(2), 
  2751 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  qmsg            2   15[BANK1 ] PTR struct __msg
  2754 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2755 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2756 ;;  tlength         2   12[BANK1 ] unsigned int 
  2757 ;;  slot            1   14[BANK1 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      char 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2767 ;;      Params:         0       0       6       0       0
  2768 ;;      Locals:         0       0       5       0       0
  2769 ;;      Temps:          0       1       0       0       0
  2770 ;;      Totals:         0       1      11       0       0
  2771 ;;Total ram usage:       12 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:   12
  2774 ;; This function calls:
  2775 ;;		_memcpy
  2776 ;; This function is called by:
  2777 ;;		_ToMainLow_sendmsg
  2778 ;;		_FromMainLow_sendmsg
  2779 ;;		_FromMainHigh_sendmsg
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text10
  2784  000CDA                     __ptext10:
  2785                           	opt stack 0
  2786  000CDA                     _send_msg:
  2787                           	opt stack 16
  2788                           
  2789                           ;messages.c: 25: unsigned char slot;
  2790                           ;messages.c: 27: msg *qmsg;
  2791                           ;messages.c: 28: size_t tlength = length;
  2792                           
  2793                           ;incstack = 0
  2794  000CDA  0101               	movlb	1	; () banked
  2795  000CDC  0101               	movlb	1	; () banked
  2796  000CDE  C1AA  F1AE         	movff	send_msg@length,send_msg@tlength
  2797  000CE2  0101               	movlb	1	; () banked
  2798  000CE4  0101               	movlb	1	; () banked
  2799  000CE6  6BAF               	clrf	(send_msg@tlength+1)& (0+255),b
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2803  000CE8  0101               	movlb	1	; () banked
  2804  000CEA  EE20 F034          	lfsr	2,52
  2805  000CEE  0101               	movlb	1	; () banked
  2806  000CF0  51A8               	movf	send_msg@qptr& (0+255),w,b
  2807  000CF2  26D9               	addwf	fsr2l,f,c
  2808  000CF4  0101               	movlb	1	; () banked
  2809  000CF6  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  2810  000CF8  22DA               	addwfc	fsr2h,f,c
  2811  000CFA  50DF               	movf	indf2,w,c
  2812  000CFC  0101               	movlb	1	; () banked
  2813  000CFE  0101               	movlb	1	; () banked
  2814  000D00  6FB0               	movwf	send_msg@slot& (0+255),b
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2818  000D02  0101               	movlb	1	; () banked
  2819  000D04  0101               	movlb	1	; () banked
  2820  000D06  51B0               	movf	send_msg@slot& (0+255),w,b
  2821  000D08  0D0D               	mullw	13
  2822  000D0A  50F3               	movf	prodl,w,c
  2823  000D0C  0101               	movlb	1	; () banked
  2824  000D0E  0101               	movlb	1	; () banked
  2825  000D10  25A8               	addwf	send_msg@qptr& (0+255),w,b
  2826  000D12  0101               	movlb	1	; () banked
  2827  000D14  0101               	movlb	1	; () banked
  2828  000D16  6FB1               	movwf	send_msg@qmsg& (0+255),b
  2829  000D18  50F4               	movf	prodh,w,c
  2830  000D1A  0101               	movlb	1	; () banked
  2831  000D1C  0101               	movlb	1	; () banked
  2832  000D1E  21A9               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2833  000D20  0101               	movlb	1	; () banked
  2834  000D22  6FB2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2835                           
  2836                           ; BSR set to: 1
  2837                           ;messages.c: 41: if (qmsg->full != 0) {
  2838  000D24  C1B1  FFD9         	movff	send_msg@qmsg,fsr2l
  2839  000D28  C1B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2840  000D2C  50DF               	movf	indf2,w,c
  2841  000D2E  B4D8               	btfsc	status,2,c
  2842  000D30  D002               	goto	l3634
  2843                           
  2844                           ; BSR set to: 1
  2845                           ;messages.c: 42: return (-1);
  2846  000D32  0EFF               	movlw	255
  2847  000D34  0012               	return	
  2848  000D36                     l3634:
  2849                           
  2850                           ; BSR set to: 1
  2851                           ;messages.c: 43: }
  2852                           ;messages.c: 46: qmsg->length = length;
  2853  000D36  0101               	movlb	1	; () banked
  2854  000D38  EE20 F001          	lfsr	2,1
  2855  000D3C  0101               	movlb	1	; () banked
  2856  000D3E  51B1               	movf	send_msg@qmsg& (0+255),w,b
  2857  000D40  26D9               	addwf	fsr2l,f,c
  2858  000D42  0101               	movlb	1	; () banked
  2859  000D44  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2860  000D46  22DA               	addwfc	fsr2h,f,c
  2861  000D48  0101               	movlb	1	; () banked
  2862  000D4A  C1AA  FFDF         	movff	send_msg@length,indf2
  2863                           
  2864                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2865  000D4E  0101               	movlb	1	; () banked
  2866  000D50  EE20 F002          	lfsr	2,2
  2867  000D54  0101               	movlb	1	; () banked
  2868  000D56  51B1               	movf	send_msg@qmsg& (0+255),w,b
  2869  000D58  26D9               	addwf	fsr2l,f,c
  2870  000D5A  0101               	movlb	1	; () banked
  2871  000D5C  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2872  000D5E  22DA               	addwfc	fsr2h,f,c
  2873  000D60  0101               	movlb	1	; () banked
  2874  000D62  C1AB  FFDF         	movff	send_msg@msgtype,indf2
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2878  000D66  0E03               	movlw	3
  2879  000D68  0101               	movlb	1	; () banked
  2880  000D6A  0101               	movlb	1	; () banked
  2881  000D6C  25B1               	addwf	send_msg@qmsg& (0+255),w,b
  2882  000D6E  0101               	movlb	1	; () banked
  2883  000D70  0101               	movlb	1	; () banked
  2884  000D72  6FA2               	movwf	memcpy@d1& (0+255),b
  2885  000D74  0E00               	movlw	0
  2886  000D76  0101               	movlb	1	; () banked
  2887  000D78  0101               	movlb	1	; () banked
  2888  000D7A  21B2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2889  000D7C  0101               	movlb	1	; () banked
  2890  000D7E  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  2891  000D80  0101               	movlb	1	; () banked
  2892  000D82  0101               	movlb	1	; () banked
  2893  000D84  C1AD  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  2894  000D88  0101               	movlb	1	; () banked
  2895  000D8A  0101               	movlb	1	; () banked
  2896  000D8C  C1AC  F1A4         	movff	send_msg@data,memcpy@s1
  2897  000D90  C1AE  F1A6         	movff	send_msg@tlength,memcpy@n
  2898  000D94  C1AF  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  2899  000D98  EC2D  F00B         	call	_memcpy	;wreg free
  2900                           
  2901                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2902  000D9C  0101               	movlb	1	; () banked
  2903  000D9E  EE20 F034          	lfsr	2,52
  2904  000DA2  0101               	movlb	1	; () banked
  2905  000DA4  51A8               	movf	send_msg@qptr& (0+255),w,b
  2906  000DA6  26D9               	addwf	fsr2l,f,c
  2907  000DA8  0101               	movlb	1	; () banked
  2908  000DAA  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  2909  000DAC  22DA               	addwfc	fsr2h,f,c
  2910  000DAE  0101               	movlb	1	; () banked
  2911  000DB0  EE10 F034          	lfsr	1,52
  2912  000DB4  0101               	movlb	1	; () banked
  2913  000DB6  51A8               	movf	send_msg@qptr& (0+255),w,b
  2914  000DB8  26E1               	addwf	fsr1l,f,c
  2915  000DBA  0101               	movlb	1	; () banked
  2916  000DBC  51A9               	movf	(send_msg@qptr+1)& (0+255),w,b
  2917  000DBE  22E2               	addwfc	fsr1h,f,c
  2918  000DC0  50E7               	movf	indf1,w,c
  2919  000DC2  0100               	movlb	0	; () banked
  2920  000DC4  6FDB               	movwf	??_send_msg& (0+255),b
  2921  000DC6  0100               	movlb	0	; () banked
  2922  000DC8  29DB               	incf	??_send_msg& (0+255),w,b
  2923  000DCA  0B03               	andlw	3
  2924  000DCC  6EDF               	movwf	indf2,c
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;messages.c: 59: qmsg->full = 1;
  2928  000DCE  C1B1  FFD9         	movff	send_msg@qmsg,fsr2l
  2929  000DD2  C1B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2930  000DD6  0E01               	movlw	1
  2931  000DD8  6EDF               	movwf	indf2,c
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;messages.c: 60: return (1);
  2935  000DDA  0E01               	movlw	1
  2936  000DDC  0012               	return	
  2937  000DDE                     __end_of_send_msg:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           prodh	equ	0xFF4
  2944                           prodl	equ	0xFF3
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           indf1	equ	0xFE7
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           postinc2	equ	0xFDE
  2952                           postdec2	equ	0xFDD
  2953                           fsr2h	equ	0xFDA
  2954                           fsr2l	equ	0xFD9
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _init_uart_recv *****************
  2958 ;; Defined at:
  2959 ;;		line 80 in file "src/my_uart.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  uc              2   33[BANK0 ] PTR struct __uart_comm
  2962 ;;		 -> main@uc(5), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;		None               void
  2967 ;; Registers used:
  2968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2974 ;;      Params:         0       2       0       0       0
  2975 ;;      Locals:         0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0
  2977 ;;      Totals:         0       2       0       0       0
  2978 ;;Total ram usage:        2 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:   11
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text11
  2989  001C8A                     __ptext11:
  2990                           	opt stack 0
  2991  001C8A                     _init_uart_recv:
  2992                           	opt stack 19
  2993                           
  2994                           ;my_uart.c: 81: uc_ptr = uc;
  2995                           
  2996                           ;incstack = 0
  2997  001C8A  0100               	movlb	0	; () banked
  2998  001C8C  C0D8  F049         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2999  001C90  0100               	movlb	0	; () banked
  3000  001C92  C0D7  F048         	movff	init_uart_recv@uc,_uc_ptr
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3004  001C96  EE20 F004          	lfsr	2,4
  3005  001C9A  5048               	movf	_uc_ptr,w,c
  3006  001C9C  26D9               	addwf	fsr2l,f,c
  3007  001C9E  5049               	movf	_uc_ptr+1,w,c
  3008  001CA0  22DA               	addwfc	fsr2h,f,c
  3009  001CA2  0E00               	movlw	0
  3010  001CA4  6EDF               	movwf	indf2,c
  3011                           
  3012                           ; BSR set to: 0
  3013  001CA6  0012               	return	
  3014  001CA8                     __end_of_init_uart_recv:
  3015                           	opt stack 0
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           prodh	equ	0xFF4
  3021                           prodl	equ	0xFF3
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           indf1	equ	0xFE7
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _init_uart_lthread *****************
  3035 ;; Defined at:
  3036 ;;		line 7 in file "src/uart_thread.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  uptr            2   33[BANK0 ] PTR struct __uart_thread
  3039 ;;		 -> main@uthread_data(10), 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;		None               void
  3044 ;; Registers used:
  3045 ;;		None
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3051 ;;      Params:         0       2       0       0       0
  3052 ;;      Locals:         0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0
  3054 ;;      Totals:         0       2       0       0       0
  3055 ;;Total ram usage:        2 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:   11
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text12
  3066  001D76                     __ptext12:
  3067                           	opt stack 0
  3068  001D76                     _init_uart_lthread:
  3069                           	opt stack 19
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;incstack = 0
  3073  001D76  0012               	return	
  3074  001D78                     __end_of_init_uart_lthread:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           indf1	equ	0xFE7
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _init_timer1_lthread *****************
  3095 ;; Defined at:
  3096 ;;		line 6 in file "src/timer1_thread.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  tptr            2   33[BANK0 ] PTR struct __timer1_thre
  3099 ;;		 -> main@t1thread_data(2), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;		None               void
  3104 ;; Registers used:
  3105 ;;		wreg, fsr2l, fsr2h
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3111 ;;      Params:         0       2       0       0       0
  3112 ;;      Locals:         0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0
  3114 ;;      Totals:         0       2       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:   11
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text13
  3126  001CEE                     __ptext13:
  3127                           	opt stack 0
  3128  001CEE                     _init_timer1_lthread:
  3129                           	opt stack 19
  3130                           
  3131                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3132                           
  3133                           ;incstack = 0
  3134  001CEE  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3135  001CF2  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3136  001CF6  0E00               	movlw	0
  3137  001CF8  6EDE               	movwf	postinc2,c
  3138  001CFA  0E00               	movlw	0
  3139  001CFC  6EDD               	movwf	postdec2,c
  3140  001CFE  0012               	return	
  3141  001D00                     __end_of_init_timer1_lthread:
  3142                           	opt stack 0
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           indf1	equ	0xFE7
  3152                           fsr1h	equ	0xFE2
  3153                           fsr1l	equ	0xFE1
  3154                           indf2	equ	0xFDF
  3155                           postinc2	equ	0xFDE
  3156                           postdec2	equ	0xFDD
  3157                           fsr2h	equ	0xFDA
  3158                           fsr2l	equ	0xFD9
  3159                           status	equ	0xFD8
  3160                           
  3161 ;; *************** function _init_queues *****************
  3162 ;; Defined at:
  3163 ;;		line 194 in file "src/messages.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;		None               void
  3170 ;; Registers used:
  3171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3177 ;;      Params:         0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0
  3179 ;;      Temps:          0       1       0       0       0
  3180 ;;      Totals:         0       1       0       0       0
  3181 ;;Total ram usage:        1 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:   12
  3184 ;; This function calls:
  3185 ;;		_init_queue
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text14
  3192  001582                     __ptext14:
  3193                           	opt stack 0
  3194  001582                     _init_queues:
  3195                           	opt stack 18
  3196                           
  3197                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3198                           
  3199                           ;incstack = 0
  3200  001582  0100               	movlb	0	; () banked
  3201  001584  6FDB               	movwf	??_init_queues& (0+255),b
  3202  001586  0E00               	movlw	0
  3203  001588  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3204  00158A  0100               	movlb	0	; () banked
  3205  00158C  51DB               	movf	??_init_queues& (0+255),w,b
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3209  00158E  0100               	movlb	0	; () banked
  3210  001590  0E00               	movlw	high _ToMainLow_MQ
  3211  001592  0100               	movlb	0	; () banked
  3212  001594  0100               	movlb	0	; () banked
  3213  001596  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3214  001598  0100               	movlb	0	; () banked
  3215  00159A  0E80               	movlw	low _ToMainLow_MQ
  3216  00159C  0100               	movlb	0	; () banked
  3217  00159E  0100               	movlb	0	; () banked
  3218  0015A0  6FD7               	movwf	init_queue@qptr& (0+255),b
  3219  0015A2  EC4B  F00A         	call	_init_queue	;wreg free
  3220                           
  3221                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3222  0015A6  0101               	movlb	1	; () banked
  3223  0015A8  0E01               	movlw	high _ToMainHigh_MQ
  3224  0015AA  0100               	movlb	0	; () banked
  3225  0015AC  0100               	movlb	0	; () banked
  3226  0015AE  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3227  0015B0  0101               	movlb	1	; () banked
  3228  0015B2  0E6C               	movlw	low _ToMainHigh_MQ
  3229  0015B4  0100               	movlb	0	; () banked
  3230  0015B6  0100               	movlb	0	; () banked
  3231  0015B8  6FD7               	movwf	init_queue@qptr& (0+255),b
  3232  0015BA  EC4B  F00A         	call	_init_queue	;wreg free
  3233                           
  3234                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3235  0015BE  0101               	movlb	1	; () banked
  3236  0015C0  0E01               	movlw	high _FromMainLow_MQ
  3237  0015C2  0100               	movlb	0	; () banked
  3238  0015C4  0100               	movlb	0	; () banked
  3239  0015C6  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3240  0015C8  0101               	movlb	1	; () banked
  3241  0015CA  0E36               	movlw	low _FromMainLow_MQ
  3242  0015CC  0100               	movlb	0	; () banked
  3243  0015CE  0100               	movlb	0	; () banked
  3244  0015D0  6FD7               	movwf	init_queue@qptr& (0+255),b
  3245  0015D2  EC4B  F00A         	call	_init_queue	;wreg free
  3246                           
  3247                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3248  0015D6  0101               	movlb	1	; () banked
  3249  0015D8  0E01               	movlw	high _FromMainHigh_MQ
  3250  0015DA  0100               	movlb	0	; () banked
  3251  0015DC  0100               	movlb	0	; () banked
  3252  0015DE  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  3253  0015E0  0101               	movlb	1	; () banked
  3254  0015E2  0E00               	movlw	low _FromMainHigh_MQ
  3255  0015E4  0100               	movlb	0	; () banked
  3256  0015E6  0100               	movlb	0	; () banked
  3257  0015E8  6FD7               	movwf	init_queue@qptr& (0+255),b
  3258  0015EA  EC4B  F00A         	call	_init_queue	;wreg free
  3259  0015EE  0012               	return	
  3260  0015F0                     __end_of_init_queues:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           tblptrh	equ	0xFF7
  3264                           tblptrl	equ	0xFF6
  3265                           tablat	equ	0xFF5
  3266                           prodh	equ	0xFF4
  3267                           prodl	equ	0xFF3
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           postdec2	equ	0xFDD
  3276                           fsr2h	equ	0xFDA
  3277                           fsr2l	equ	0xFD9
  3278                           status	equ	0xFD8
  3279                           
  3280 ;; *************** function _init_queue *****************
  3281 ;; Defined at:
  3282 ;;		line 14 in file "src/messages.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  3285 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  i               1   36[BANK0 ] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3297 ;;      Params:         0       2       0       0       0
  3298 ;;      Locals:         0       1       0       0       0
  3299 ;;      Temps:          0       1       0       0       0
  3300 ;;      Totals:         0       4       0       0       0
  3301 ;;Total ram usage:        4 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:   11
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_init_queues
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text15
  3312  001496                     __ptext15:
  3313                           	opt stack 0
  3314  001496                     _init_queue:
  3315                           	opt stack 18
  3316                           
  3317                           ;messages.c: 15: unsigned char i;
  3318                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3319                           
  3320                           ;incstack = 0
  3321  001496  0100               	movlb	0	; () banked
  3322  001498  EE20 F034          	lfsr	2,52
  3323  00149C  0100               	movlb	0	; () banked
  3324  00149E  51D7               	movf	init_queue@qptr& (0+255),w,b
  3325  0014A0  26D9               	addwf	fsr2l,f,c
  3326  0014A2  0100               	movlb	0	; () banked
  3327  0014A4  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3328  0014A6  22DA               	addwfc	fsr2h,f,c
  3329  0014A8  0E00               	movlw	0
  3330  0014AA  6EDF               	movwf	indf2,c
  3331                           
  3332                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3333  0014AC  0100               	movlb	0	; () banked
  3334  0014AE  EE20 F035          	lfsr	2,53
  3335  0014B2  0100               	movlb	0	; () banked
  3336  0014B4  51D7               	movf	init_queue@qptr& (0+255),w,b
  3337  0014B6  26D9               	addwf	fsr2l,f,c
  3338  0014B8  0100               	movlb	0	; () banked
  3339  0014BA  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3340  0014BC  22DA               	addwfc	fsr2h,f,c
  3341  0014BE  0E00               	movlw	0
  3342  0014C0  6EDF               	movwf	indf2,c
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3346  0014C2  0100               	movlb	0	; () banked
  3347  0014C4  6FD9               	movwf	??_init_queue& (0+255),b
  3348  0014C6  0E00               	movlw	0
  3349  0014C8  0100               	movlb	0	; () banked
  3350  0014CA  0100               	movlb	0	; () banked
  3351  0014CC  6FDA               	movwf	init_queue@i& (0+255),b
  3352  0014CE  0100               	movlb	0	; () banked
  3353  0014D0  51D9               	movf	??_init_queue& (0+255),w,b
  3354                           
  3355                           ; BSR set to: 0
  3356  0014D2  0E03               	movlw	3
  3357  0014D4  0100               	movlb	0	; () banked
  3358  0014D6  0100               	movlb	0	; () banked
  3359  0014D8  65DA               	cpfsgt	init_queue@i& (0+255),b
  3360  0014DA  D001               	goto	l3616
  3361  0014DC  0012               	return	
  3362  0014DE                     l3616:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;messages.c: 20: qptr->queue[i].full = 0;
  3366  0014DE  0100               	movlb	0	; () banked
  3367  0014E0  0100               	movlb	0	; () banked
  3368  0014E2  51DA               	movf	init_queue@i& (0+255),w,b
  3369  0014E4  0D0D               	mullw	13
  3370  0014E6  50F3               	movf	prodl,w,c
  3371  0014E8  0100               	movlb	0	; () banked
  3372  0014EA  0100               	movlb	0	; () banked
  3373  0014EC  25D7               	addwf	init_queue@qptr& (0+255),w,b
  3374  0014EE  6ED9               	movwf	fsr2l,c
  3375  0014F0  50F4               	movf	prodh,w,c
  3376  0014F2  0100               	movlb	0	; () banked
  3377  0014F4  0100               	movlb	0	; () banked
  3378  0014F6  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3379  0014F8  6EDA               	movwf	fsr2h,c
  3380  0014FA  0E00               	movlw	0
  3381  0014FC  6EDF               	movwf	indf2,c
  3382                           
  3383                           ; BSR set to: 0
  3384  0014FE  0100               	movlb	0	; () banked
  3385  001500  0100               	movlb	0	; () banked
  3386  001502  2BDA               	incf	init_queue@i& (0+255),f,b
  3387                           
  3388                           ; BSR set to: 0
  3389  001504  0E03               	movlw	3
  3390  001506  0100               	movlb	0	; () banked
  3391  001508  0100               	movlb	0	; () banked
  3392  00150A  65DA               	cpfsgt	init_queue@i& (0+255),b
  3393  00150C  D7E8               	goto	l3616
  3394  00150E  0012               	return	
  3395  001510                     __end_of_init_queue:
  3396                           	opt stack 0
  3397                           tblptru	equ	0xFF8
  3398                           tblptrh	equ	0xFF7
  3399                           tblptrl	equ	0xFF6
  3400                           tablat	equ	0xFF5
  3401                           prodh	equ	0xFF4
  3402                           prodl	equ	0xFF3
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           indf1	equ	0xFE7
  3406                           fsr1h	equ	0xFE2
  3407                           fsr1l	equ	0xFE1
  3408                           indf2	equ	0xFDF
  3409                           postinc2	equ	0xFDE
  3410                           postdec2	equ	0xFDD
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8
  3414                           
  3415 ;; *************** function _init_i2c *****************
  3416 ;; Defined at:
  3417 ;;		line 268 in file "src/my_i2c.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  ic              2   33[BANK0 ] PTR struct __i2c_comm
  3420 ;;		 -> main@ic(28), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3432 ;;      Params:         0       2       0       0       0
  3433 ;;      Locals:         0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0
  3435 ;;      Totals:         0       2       0       0       0
  3436 ;;Total ram usage:        2 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:   11
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text16
  3447  0015F0                     __ptext16:
  3448                           	opt stack 0
  3449  0015F0                     _init_i2c:
  3450                           	opt stack 19
  3451                           
  3452                           ;my_i2c.c: 269: ic_ptr = ic;
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;incstack = 0
  3456  0015F0  0100               	movlb	0	; () banked
  3457  0015F2  0100               	movlb	0	; () banked
  3458  0015F4  C0D8  F0DD         	movff	init_i2c@ic+1,_ic_ptr+1
  3459  0015F8  0100               	movlb	0	; () banked
  3460  0015FA  0100               	movlb	0	; () banked
  3461  0015FC  C0D7  F0DC         	movff	init_i2c@ic,_ic_ptr
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3465  001600  0100               	movlb	0	; () banked
  3466  001602  EE20 F00A          	lfsr	2,10
  3467  001606  0100               	movlb	0	; () banked
  3468  001608  51DC               	movf	_ic_ptr& (0+255),w,b
  3469  00160A  26D9               	addwf	fsr2l,f,c
  3470  00160C  0100               	movlb	0	; () banked
  3471  00160E  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  3472  001610  22DA               	addwfc	fsr2h,f,c
  3473  001612  0E00               	movlw	0
  3474  001614  6EDF               	movwf	indf2,c
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3478  001616  0100               	movlb	0	; () banked
  3479  001618  EE20 F00B          	lfsr	2,11
  3480  00161C  0100               	movlb	0	; () banked
  3481  00161E  51DC               	movf	_ic_ptr& (0+255),w,b
  3482  001620  26D9               	addwf	fsr2l,f,c
  3483  001622  0100               	movlb	0	; () banked
  3484  001624  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  3485  001626  22DA               	addwfc	fsr2h,f,c
  3486  001628  0E00               	movlw	0
  3487  00162A  6EDF               	movwf	indf2,c
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3491  00162C  0100               	movlb	0	; () banked
  3492  00162E  EE20 F00C          	lfsr	2,12
  3493  001632  0100               	movlb	0	; () banked
  3494  001634  51DC               	movf	_ic_ptr& (0+255),w,b
  3495  001636  26D9               	addwf	fsr2l,f,c
  3496  001638  0100               	movlb	0	; () banked
  3497  00163A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  3498  00163C  22DA               	addwfc	fsr2h,f,c
  3499  00163E  0E05               	movlw	5
  3500  001640  6EDF               	movwf	indf2,c
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3504  001642  0100               	movlb	0	; () banked
  3505  001644  EE20 F00E          	lfsr	2,14
  3506  001648  0100               	movlb	0	; () banked
  3507  00164A  51DC               	movf	_ic_ptr& (0+255),w,b
  3508  00164C  26D9               	addwf	fsr2l,f,c
  3509  00164E  0100               	movlb	0	; () banked
  3510  001650  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  3511  001652  22DA               	addwfc	fsr2h,f,c
  3512  001654  0E00               	movlw	0
  3513  001656  6EDF               	movwf	indf2,c
  3514                           
  3515                           ; BSR set to: 0
  3516  001658  0012               	return	
  3517  00165A                     __end_of_init_i2c:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           indf1	equ	0xFE7
  3528                           fsr1h	equ	0xFE2
  3529                           fsr1l	equ	0xFE1
  3530                           indf2	equ	0xFDF
  3531                           postinc2	equ	0xFDE
  3532                           postdec2	equ	0xFDD
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function _i2c_configure_slave *****************
  3538 ;; Defined at:
  3539 ;;		line 279 in file "src/my_i2c.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  addr            1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  addr            1   33[BANK0 ] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3553 ;;      Params:         0       0       0       0       0
  3554 ;;      Locals:         0       1       0       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       1       0       0       0
  3557 ;;Total ram usage:        1 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:   11
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text17
  3568  001BF0                     __ptext17:
  3569                           	opt stack 0
  3570  001BF0                     _i2c_configure_slave:
  3571                           	opt stack 19
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;incstack = 0
  3575                           ;i2c_configure_slave@addr stored from wreg
  3576  001BF0  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3577                           
  3578                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  3579  001BF4  8694               	bsf	3988,3,c	;volatile
  3580                           
  3581                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  3582  001BF6  8894               	bsf	3988,4,c	;volatile
  3583                           
  3584                           ;my_i2c.c: 297: SSPADD = addr;
  3585  001BF8  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3586                           
  3587                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  3588  001BFC  0E00               	movlw	0
  3589  001BFE  6EC7               	movwf	4039,c	;volatile
  3590                           
  3591                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  3592  001C00  0E00               	movlw	0
  3593  001C02  6EC6               	movwf	4038,c	;volatile
  3594                           
  3595                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  3596  001C04  0E00               	movlw	0
  3597  001C06  6EC5               	movwf	4037,c	;volatile
  3598                           
  3599                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  3600  001C08  0E0E               	movlw	14
  3601  001C0A  12C6               	iorwf	4038,f,c	;volatile
  3602                           
  3603                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  3604  001C0C  8EC7               	bsf	4039,7,c	;volatile
  3605                           
  3606                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  3607  001C0E  8694               	bsf	3988,3,c	;volatile
  3608                           
  3609                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  3610  001C10  8894               	bsf	3988,4,c	;volatile
  3611                           
  3612                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  3613  001C12  80C5               	bsf	4037,0,c	;volatile
  3614                           
  3615                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  3616  001C14  8AC6               	bsf	4038,5,c	;volatile
  3617  001C16  0012               	return	
  3618  001C18                     __end_of_i2c_configure_slave:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _enable_interrupts *****************
  3639 ;; Defined at:
  3640 ;;		line 14 in file "src/interrupts.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   11
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text18
  3669  001D66                     __ptext18:
  3670                           	opt stack 0
  3671  001D66                     _enable_interrupts:
  3672                           	opt stack 19
  3673                           
  3674                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3675                           
  3676                           ;incstack = 0
  3677  001D66  8ED0               	bsf	4048,7,c	;volatile
  3678                           
  3679                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3680  001D68  8EF2               	bsf	intcon,7,c	;volatile
  3681                           
  3682                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3683  001D6A  8CF2               	bsf	intcon,6,c	;volatile
  3684  001D6C  0012               	return	
  3685  001D6E                     __end_of_enable_interrupts:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           prodh	equ	0xFF4
  3692                           prodl	equ	0xFF3
  3693                           intcon	equ	0xFF2
  3694                           postinc0	equ	0xFEE
  3695                           wreg	equ	0xFE8
  3696                           indf1	equ	0xFE7
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           indf2	equ	0xFDF
  3700                           postinc2	equ	0xFDE
  3701                           postdec2	equ	0xFDD
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _block_on_To_msgqueues *****************
  3707 ;; Defined at:
  3708 ;;		line 258 in file "src/messages.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          0       1       0       0       0
  3725 ;;      Totals:         0       1       0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:   14
  3729 ;; This function calls:
  3730 ;;		_Delay1KTCYx
  3731 ;;		_check_msg
  3732 ;;		_in_main
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text19
  3739  001418                     __ptext19:
  3740                           	opt stack 0
  3741  001418                     _block_on_To_msgqueues:
  3742                           	opt stack 16
  3743                           
  3744                           ;messages.c: 259: if (!in_main()) {
  3745                           
  3746                           ;incstack = 0
  3747  001418  EC1E  F00C         	call	_in_main	;wreg free
  3748  00141C  0101               	movlb	1	; () banked
  3749  00141E  0101               	movlb	1	; () banked
  3750  001420  51A3               	movf	(?_in_main+1)& (0+255),w,b
  3751  001422  0101               	movlb	1	; () banked
  3752  001424  11A2               	iorwf	?_in_main& (0+255),w,b
  3753  001426  B4D8               	btfsc	status,2,c
  3754  001428  0012               	return	
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;messages.c: 261: }
  3758                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3759                           
  3760                           ; BSR set to: 1
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;messages.c: 260: return;
  3764  00142A  0100               	movlb	0	; () banked
  3765  00142C  6FDB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3766  00142E  0E01               	movlw	1
  3767  001430  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3768  001432  0100               	movlb	0	; () banked
  3769  001434  51DB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3770  001436                     l3538:
  3771                           
  3772                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3773  001436  0101               	movlb	1	; () banked
  3774  001438  0E01               	movlw	high _ToMainHigh_MQ
  3775  00143A  0100               	movlb	0	; () banked
  3776  00143C  0100               	movlb	0	; () banked
  3777  00143E  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3778  001440  0101               	movlb	1	; () banked
  3779  001442  0E6C               	movlw	low _ToMainHigh_MQ
  3780  001444  0100               	movlb	0	; () banked
  3781  001446  0100               	movlb	0	; () banked
  3782  001448  6FD7               	movwf	check_msg@qptr& (0+255),b
  3783  00144A  EC6F  F00D         	call	_check_msg	;wreg free
  3784  00144E  0900               	iorlw	0
  3785  001450  B4D8               	btfsc	status,2,c
  3786  001452  D007               	goto	l3544
  3787                           
  3788                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3789  001454  0100               	movlb	0	; () banked
  3790  001456  6FDB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3791  001458  0E00               	movlw	0
  3792  00145A  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3793  00145C  0100               	movlb	0	; () banked
  3794  00145E  51DB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3795  001460  0012               	return	
  3796  001462                     l3544:
  3797                           
  3798                           ;messages.c: 271: }
  3799                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3800  001462  0100               	movlb	0	; () banked
  3801  001464  0E00               	movlw	high _ToMainLow_MQ
  3802  001466  0100               	movlb	0	; () banked
  3803  001468  0100               	movlb	0	; () banked
  3804  00146A  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3805  00146C  0100               	movlb	0	; () banked
  3806  00146E  0E80               	movlw	low _ToMainLow_MQ
  3807  001470  0100               	movlb	0	; () banked
  3808  001472  0100               	movlb	0	; () banked
  3809  001474  6FD7               	movwf	check_msg@qptr& (0+255),b
  3810  001476  EC6F  F00D         	call	_check_msg	;wreg free
  3811  00147A  0900               	iorlw	0
  3812  00147C  B4D8               	btfsc	status,2,c
  3813  00147E  D007               	goto	l3550
  3814                           
  3815                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3816  001480  0100               	movlb	0	; () banked
  3817  001482  6FDB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3818  001484  0E00               	movlw	0
  3819  001486  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3820  001488  0100               	movlb	0	; () banked
  3821  00148A  51DB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3822  00148C  0012               	return	
  3823  00148E                     l3550:
  3824                           
  3825                           ;messages.c: 278: }
  3826                           ;messages.c: 279: Delay1KTCYx(10);
  3827  00148E  0E0A               	movlw	10
  3828  001490  EC63  F00E         	call	_Delay1KTCYx
  3829  001494  D7D0               	goto	l3538
  3830  001496                     __end_of_block_on_To_msgqueues:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           indf2	equ	0xFDF
  3845                           postinc2	equ	0xFDE
  3846                           postdec2	equ	0xFDD
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _in_main *****************
  3852 ;; Defined at:
  3853 ;;		line 40 in file "src/interrupts.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2    0[BANK1 ] int 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3867 ;;      Params:         0       0       2       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       0       2       0       0
  3871 ;;Total ram usage:        2 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   13
  3874 ;; This function calls:
  3875 ;;		_in_high_int
  3876 ;;		_in_low_int
  3877 ;; This function is called by:
  3878 ;;		_block_on_To_msgqueues
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text20
  3883  00183C                     __ptext20:
  3884                           	opt stack 0
  3885  00183C                     _in_main:
  3886                           	opt stack 16
  3887                           
  3888                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3889                           
  3890                           ;incstack = 0
  3891  00183C  ECD8  F00B         	call	_in_low_int	;wreg free
  3892  001840  0100               	movlb	0	; () banked
  3893  001842  0100               	movlb	0	; () banked
  3894  001844  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3895  001846  0100               	movlb	0	; () banked
  3896  001848  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3897  00184A  A4D8               	btfss	status,2,c
  3898  00184C  D011               	goto	l3138
  3899                           
  3900                           ; BSR set to: 0
  3901  00184E  EC80  F00E         	call	_in_high_int	;wreg free
  3902  001852  0100               	movlb	0	; () banked
  3903  001854  0100               	movlb	0	; () banked
  3904  001856  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3905  001858  0100               	movlb	0	; () banked
  3906  00185A  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3907  00185C  A4D8               	btfss	status,2,c
  3908  00185E  D008               	goto	l3138
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;interrupts.c: 42: return (1);
  3912  001860  0E00               	movlw	0
  3913  001862  0101               	movlb	1	; () banked
  3914  001864  0101               	movlb	1	; () banked
  3915  001866  6FA3               	movwf	(?_in_main+1)& (0+255),b
  3916  001868  0E01               	movlw	1
  3917  00186A  0101               	movlb	1	; () banked
  3918  00186C  6FA2               	movwf	?_in_main& (0+255),b
  3919  00186E  0012               	return	
  3920  001870                     l3138:
  3921                           
  3922                           ;interrupts.c: 44: return (0);
  3923  001870  0E00               	movlw	0
  3924  001872  0101               	movlb	1	; () banked
  3925  001874  0101               	movlb	1	; () banked
  3926  001876  6FA3               	movwf	(?_in_main+1)& (0+255),b
  3927  001878  0E00               	movlw	0
  3928  00187A  0101               	movlb	1	; () banked
  3929  00187C  6FA2               	movwf	?_in_main& (0+255),b
  3930  00187E  0012               	return	
  3931  001880                     __end_of_in_main:
  3932                           	opt stack 0
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf1	equ	0xFE7
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _in_low_int *****************
  3953 ;; Defined at:
  3954 ;;		line 30 in file "src/interrupts.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2   35[BANK0 ] int 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3968 ;;      Params:         0       2       0       0       0
  3969 ;;      Locals:         0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0
  3971 ;;      Totals:         0       2       0       0       0
  3972 ;;Total ram usage:        2 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:   12
  3975 ;; This function calls:
  3976 ;;		_in_high_int
  3977 ;; This function is called by:
  3978 ;;		_in_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text21
  3983  0017B0                     __ptext21:
  3984                           	opt stack 0
  3985  0017B0                     _in_low_int:
  3986                           	opt stack 16
  3987                           
  3988                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;incstack = 0
  3992  0017B0  ACF2               	btfss	intcon,6,c	;volatile
  3993  0017B2  D008               	goto	l3116
  3994                           
  3995                           ;interrupts.c: 32: return (0);
  3996  0017B4  0E00               	movlw	0
  3997  0017B6  0100               	movlb	0	; () banked
  3998  0017B8  0100               	movlb	0	; () banked
  3999  0017BA  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  4000  0017BC  0E00               	movlw	0
  4001  0017BE  0100               	movlb	0	; () banked
  4002  0017C0  6FD9               	movwf	?_in_low_int& (0+255),b
  4003  0017C2  0012               	return	
  4004  0017C4                     l3116:
  4005  0017C4  EC80  F00E         	call	_in_high_int	;wreg free
  4006  0017C8  0100               	movlb	0	; () banked
  4007  0017CA  0100               	movlb	0	; () banked
  4008  0017CC  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  4009  0017CE  0100               	movlb	0	; () banked
  4010  0017D0  11D7               	iorwf	?_in_high_int& (0+255),w,b
  4011  0017D2  B4D8               	btfsc	status,2,c
  4012  0017D4  D008               	goto	l3124
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;interrupts.c: 34: return (0);
  4016  0017D6  0E00               	movlw	0
  4017  0017D8  0100               	movlb	0	; () banked
  4018  0017DA  0100               	movlb	0	; () banked
  4019  0017DC  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  4020  0017DE  0E00               	movlw	0
  4021  0017E0  0100               	movlb	0	; () banked
  4022  0017E2  6FD9               	movwf	?_in_low_int& (0+255),b
  4023  0017E4  0012               	return	
  4024  0017E6                     l3124:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;interrupts.c: 36: return (1);
  4028  0017E6  0E00               	movlw	0
  4029  0017E8  0100               	movlb	0	; () banked
  4030  0017EA  0100               	movlb	0	; () banked
  4031  0017EC  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  4032  0017EE  0E01               	movlw	1
  4033  0017F0  0100               	movlb	0	; () banked
  4034  0017F2  6FD9               	movwf	?_in_low_int& (0+255),b
  4035  0017F4  0012               	return	
  4036  0017F6                     __end_of_in_low_int:
  4037                           	opt stack 0
  4038                           tblptru	equ	0xFF8
  4039                           tblptrh	equ	0xFF7
  4040                           tblptrl	equ	0xFF6
  4041                           tablat	equ	0xFF5
  4042                           prodh	equ	0xFF4
  4043                           prodl	equ	0xFF3
  4044                           intcon	equ	0xFF2
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           indf1	equ	0xFE7
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _in_high_int *****************
  4058 ;; Defined at:
  4059 ;;		line 22 in file "src/interrupts.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2   33[BANK0 ] int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4073 ;;      Params:         0       2       0       0       0
  4074 ;;      Locals:         0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0
  4076 ;;      Totals:         0       2       0       0       0
  4077 ;;Total ram usage:        2 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:   11
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_in_low_int
  4084 ;;		_in_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text22
  4089  001D00                     __ptext22:
  4090                           	opt stack 0
  4091  001D00                     _in_high_int:
  4092                           	opt stack 16
  4093                           
  4094                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;incstack = 0
  4098  001D00  0E00               	movlw	0
  4099  001D02  AEF2               	btfss	intcon,7,c	;volatile
  4100  001D04  0E01               	movlw	1
  4101  001D06  0100               	movlb	0	; () banked
  4102  001D08  0100               	movlb	0	; () banked
  4103  001D0A  6FD7               	movwf	?_in_high_int& (0+255),b
  4104  001D0C  0100               	movlb	0	; () banked
  4105  001D0E  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  4106  001D10  0012               	return	
  4107  001D12                     __end_of_in_high_int:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           indf1	equ	0xFE7
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _check_msg *****************
  4129 ;; Defined at:
  4130 ;;		line 222 in file "src/messages.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4133 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      unsigned char 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4145 ;;      Params:         0       2       0       0       0
  4146 ;;      Locals:         0       0       0       0       0
  4147 ;;      Temps:          0       1       0       0       0
  4148 ;;      Totals:         0       3       0       0       0
  4149 ;;Total ram usage:        3 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:   11
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_block_on_To_msgqueues
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text23
  4160  001ADE                     __ptext23:
  4161                           	opt stack 0
  4162  001ADE                     _check_msg:
  4163                           	opt stack 18
  4164                           
  4165                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;incstack = 0
  4169  001ADE  0100               	movlb	0	; () banked
  4170  001AE0  EE20 F035          	lfsr	2,53
  4171  001AE4  0100               	movlb	0	; () banked
  4172  001AE6  51D7               	movf	check_msg@qptr& (0+255),w,b
  4173  001AE8  26D9               	addwf	fsr2l,f,c
  4174  001AEA  0100               	movlb	0	; () banked
  4175  001AEC  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  4176  001AEE  22DA               	addwfc	fsr2h,f,c
  4177  001AF0  50DF               	movf	indf2,w,c
  4178  001AF2  0100               	movlb	0	; () banked
  4179  001AF4  6FD9               	movwf	??_check_msg& (0+255),b
  4180  001AF6  0100               	movlb	0	; () banked
  4181  001AF8  51D9               	movf	??_check_msg& (0+255),w,b
  4182  001AFA  0D0D               	mullw	13
  4183  001AFC  50F3               	movf	prodl,w,c
  4184  001AFE  0100               	movlb	0	; () banked
  4185  001B00  0100               	movlb	0	; () banked
  4186  001B02  25D7               	addwf	check_msg@qptr& (0+255),w,b
  4187  001B04  6ED9               	movwf	fsr2l,c
  4188  001B06  50F4               	movf	prodh,w,c
  4189  001B08  0100               	movlb	0	; () banked
  4190  001B0A  0100               	movlb	0	; () banked
  4191  001B0C  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4192  001B0E  6EDA               	movwf	fsr2h,c
  4193  001B10  50DF               	movf	indf2,w,c
  4194  001B12  0012               	return	
  4195  001B14                     __end_of_check_msg:
  4196                           	opt stack 0
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           postinc0	equ	0xFEE
  4205                           wreg	equ	0xFE8
  4206                           indf1	equ	0xFE7
  4207                           fsr1h	equ	0xFE2
  4208                           fsr1l	equ	0xFE1
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           postdec2	equ	0xFDD
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _Delay1KTCYx *****************
  4217 ;; Defined at:
  4218 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  unit            1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  unit            1   33[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;		None               void
  4225 ;; Registers used:
  4226 ;;		wreg
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4232 ;;      Params:         0       0       0       0       0
  4233 ;;      Locals:         0       1       0       0       0
  4234 ;;      Temps:          0       0       0       0       0
  4235 ;;      Totals:         0       1       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:   11
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_block_on_To_msgqueues
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text24
  4247  001CC6                     __ptext24:
  4248                           	opt stack 0
  4249  001CC6                     _Delay1KTCYx:
  4250                           	opt stack 18
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;incstack = 0
  4254                           ;Delay1KTCYx@unit stored from wreg
  4255  001CC6  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  4256  001CCA                     l744:
  4257  001CCA  0EFA               	movlw	250
  4258  001CCC                     u3007:
  4259  001CCC  F000               	nop	
  4260  001CCE  2EE8               	decfsz	wreg,f,c
  4261  001CD0  D7FD               	goto	u3007
  4262  001CD2  0100               	movlb	0	; () banked
  4263  001CD4  0100               	movlb	0	; () banked
  4264  001CD6  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4265  001CD8  D7F8               	goto	l744
  4266  001CDA  0012               	return	
  4267  001CDC                     __end_of_Delay1KTCYx:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           intcon	equ	0xFF2
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           indf1	equ	0xFE7
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           postinc2	equ	0xFDE
  4283                           postdec2	equ	0xFDD
  4284                           fsr2h	equ	0xFDA
  4285                           fsr2l	equ	0xFD9
  4286                           status	equ	0xFD8
  4287                           
  4288 ;; *************** function _WriteTimer0 *****************
  4289 ;; Defined at:
  4290 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  timer0          2   33[BANK0 ] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  timer           2   35[BANK0 ] struct Timers
  4295 ;; Return value:  Size  Location     Type
  4296 ;;		None               void
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4304 ;;      Params:         0       2       0       0       0
  4305 ;;      Locals:         0       2       0       0       0
  4306 ;;      Temps:          0       0       0       0       0
  4307 ;;      Totals:         0       4       0       0       0
  4308 ;;Total ram usage:        4 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:   11
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text25
  4319  001D12                     __ptext25:
  4320                           	opt stack 0
  4321  001D12                     _WriteTimer0:
  4322                           	opt stack 19
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;incstack = 0
  4326  001D12  C0D7  F0D9         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4327  001D16  C0D8  F0DA         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4328  001D1A  C0DA  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4329  001D1E  C0D9  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4330  001D22  0012               	return	
  4331  001D24                     __end_of_WriteTimer0:
  4332                           	opt stack 0
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           indf1	equ	0xFE7
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function _ToMainLow_recvmsg *****************
  4353 ;; Defined at:
  4354 ;;		line 112 in file "src/messages.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  maxlength       1    wreg     unsigned char 
  4357 ;;  msgtype         2   20[BANK1 ] PTR unsigned char 
  4358 ;;		 -> main@msgtype(1), 
  4359 ;;  data            2   22[BANK1 ] PTR void 
  4360 ;;		 -> main@msgbuffer(11), 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  maxlength       1   37[BANK0 ] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      char 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4372 ;;      Params:         0       0       4       0       0
  4373 ;;      Locals:         0       1       0       0       0
  4374 ;;      Temps:          0       0       0       0       0
  4375 ;;      Totals:         0       1       4       0       0
  4376 ;;Total ram usage:        5 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:   13
  4379 ;; This function calls:
  4380 ;;		_recv_msg
  4381 ;; This function is called by:
  4382 ;;		_main
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text26
  4387  0018C2                     __ptext26:
  4388                           	opt stack 0
  4389  0018C2                     _ToMainLow_recvmsg:
  4390                           	opt stack 17
  4391                           
  4392                           ;incstack = 0
  4393                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4394  0018C2  CFE8 F0DB          	movff	wreg,ToMainLow_recvmsg@maxlength
  4395                           
  4396                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4397  0018C6  0100               	movlb	0	; () banked
  4398  0018C8  0E00               	movlw	high _ToMainLow_MQ
  4399  0018CA  0101               	movlb	1	; () banked
  4400  0018CC  0101               	movlb	1	; () banked
  4401  0018CE  6FA9               	movwf	(recv_msg@qptr+1)& (0+255),b
  4402  0018D0  0100               	movlb	0	; () banked
  4403  0018D2  0E80               	movlw	low _ToMainLow_MQ
  4404  0018D4  0101               	movlb	1	; () banked
  4405  0018D6  0101               	movlb	1	; () banked
  4406  0018D8  6FA8               	movwf	recv_msg@qptr& (0+255),b
  4407  0018DA  C0DB  F1AA         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4408  0018DE  0101               	movlb	1	; () banked
  4409  0018E0  0101               	movlb	1	; () banked
  4410  0018E2  C1B7  F1AC         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4411  0018E6  0101               	movlb	1	; () banked
  4412  0018E8  0101               	movlb	1	; () banked
  4413  0018EA  C1B6  F1AB         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4414  0018EE  0101               	movlb	1	; () banked
  4415  0018F0  0101               	movlb	1	; () banked
  4416  0018F2  C1B9  F1AE         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4417  0018F6  0101               	movlb	1	; () banked
  4418  0018F8  0101               	movlb	1	; () banked
  4419  0018FA  C1B8  F1AD         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4420  0018FE  EC4B  F005         	call	_recv_msg	;wreg free
  4421  001902  0012               	return	
  4422  001904                     __end_of_ToMainLow_recvmsg:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           prodh	equ	0xFF4
  4429                           prodl	equ	0xFF3
  4430                           intcon	equ	0xFF2
  4431                           postinc0	equ	0xFEE
  4432                           wreg	equ	0xFE8
  4433                           indf1	equ	0xFE7
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           indf2	equ	0xFDF
  4437                           postinc2	equ	0xFDE
  4438                           postdec2	equ	0xFDD
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function _ToMainHigh_recvmsg *****************
  4444 ;; Defined at:
  4445 ;;		line 135 in file "src/messages.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  maxlength       1    wreg     unsigned char 
  4448 ;;  msgtype         2   20[BANK1 ] PTR unsigned char 
  4449 ;;		 -> main@msgtype(1), 
  4450 ;;  data            2   22[BANK1 ] PTR void 
  4451 ;;		 -> main@msgbuffer(11), 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  maxlength       1   37[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      char 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4463 ;;      Params:         0       0       4       0       0
  4464 ;;      Locals:         0       1       0       0       0
  4465 ;;      Temps:          0       0       0       0       0
  4466 ;;      Totals:         0       1       4       0       0
  4467 ;;Total ram usage:        5 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:   13
  4470 ;; This function calls:
  4471 ;;		_recv_msg
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text27
  4478  001904                     __ptext27:
  4479                           	opt stack 0
  4480  001904                     _ToMainHigh_recvmsg:
  4481                           	opt stack 17
  4482                           
  4483                           ;incstack = 0
  4484                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4485  001904  CFE8 F0DB          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4486                           
  4487                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4488  001908  0101               	movlb	1	; () banked
  4489  00190A  0E01               	movlw	high _ToMainHigh_MQ
  4490  00190C  0101               	movlb	1	; () banked
  4491  00190E  0101               	movlb	1	; () banked
  4492  001910  6FA9               	movwf	(recv_msg@qptr+1)& (0+255),b
  4493  001912  0101               	movlb	1	; () banked
  4494  001914  0E6C               	movlw	low _ToMainHigh_MQ
  4495  001916  0101               	movlb	1	; () banked
  4496  001918  0101               	movlb	1	; () banked
  4497  00191A  6FA8               	movwf	recv_msg@qptr& (0+255),b
  4498  00191C  C0DB  F1AA         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4499  001920  0101               	movlb	1	; () banked
  4500  001922  0101               	movlb	1	; () banked
  4501  001924  C1B7  F1AC         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4502  001928  0101               	movlb	1	; () banked
  4503  00192A  0101               	movlb	1	; () banked
  4504  00192C  C1B6  F1AB         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4505  001930  0101               	movlb	1	; () banked
  4506  001932  0101               	movlb	1	; () banked
  4507  001934  C1B9  F1AE         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4508  001938  0101               	movlb	1	; () banked
  4509  00193A  0101               	movlb	1	; () banked
  4510  00193C  C1B8  F1AD         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4511  001940  EC4B  F005         	call	_recv_msg	;wreg free
  4512  001944  0012               	return	
  4513  001946                     __end_of_ToMainHigh_recvmsg:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _recv_msg *****************
  4535 ;; Defined at:
  4536 ;;		line 63 in file "src/messages.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  qptr            2    6[BANK1 ] PTR struct __msg_queue
  4539 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4540 ;;  maxlength       1    8[BANK1 ] unsigned char 
  4541 ;;  msgtype         2    9[BANK1 ] PTR unsigned char 
  4542 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4543 ;;  data            2   11[BANK1 ] PTR void 
  4544 ;;		 -> NULL(0), main@msgbuffer(11), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  qmsg            2   18[BANK1 ] PTR struct __msg
  4547 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4548 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4549 ;;  tlength         2   16[BANK1 ] unsigned int 
  4550 ;;  slot            1   15[BANK1 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      char 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4560 ;;      Params:         0       0       7       0       0
  4561 ;;      Locals:         0       0       5       0       0
  4562 ;;      Temps:          0       0       2       0       0
  4563 ;;      Totals:         0       0      14       0       0
  4564 ;;Total ram usage:       14 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:   12
  4567 ;; This function calls:
  4568 ;;		_memcpy
  4569 ;; This function is called by:
  4570 ;;		_ToMainLow_recvmsg
  4571 ;;		_ToMainHigh_recvmsg
  4572 ;;		_FromMainHigh_recvmsg
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text28
  4577  000A96                     __ptext28:
  4578                           	opt stack 0
  4579  000A96                     _recv_msg:
  4580                           	opt stack 17
  4581                           
  4582                           ;messages.c: 64: unsigned char slot;
  4583                           ;messages.c: 68: msg *qmsg;
  4584                           ;messages.c: 69: size_t tlength;
  4585                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4586                           
  4587                           ;incstack = 0
  4588  000A96  0101               	movlb	1	; () banked
  4589  000A98  EE20 F035          	lfsr	2,53
  4590  000A9C  0101               	movlb	1	; () banked
  4591  000A9E  51A8               	movf	recv_msg@qptr& (0+255),w,b
  4592  000AA0  26D9               	addwf	fsr2l,f,c
  4593  000AA2  0101               	movlb	1	; () banked
  4594  000AA4  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4595  000AA6  22DA               	addwfc	fsr2h,f,c
  4596  000AA8  50DF               	movf	indf2,w,c
  4597  000AAA  0101               	movlb	1	; () banked
  4598  000AAC  0101               	movlb	1	; () banked
  4599  000AAE  6FB1               	movwf	recv_msg@slot& (0+255),b
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4603  000AB0  0101               	movlb	1	; () banked
  4604  000AB2  0101               	movlb	1	; () banked
  4605  000AB4  51B1               	movf	recv_msg@slot& (0+255),w,b
  4606  000AB6  0D0D               	mullw	13
  4607  000AB8  50F3               	movf	prodl,w,c
  4608  000ABA  0101               	movlb	1	; () banked
  4609  000ABC  0101               	movlb	1	; () banked
  4610  000ABE  25A8               	addwf	recv_msg@qptr& (0+255),w,b
  4611  000AC0  0101               	movlb	1	; () banked
  4612  000AC2  0101               	movlb	1	; () banked
  4613  000AC4  6FB4               	movwf	recv_msg@qmsg& (0+255),b
  4614  000AC6  50F4               	movf	prodh,w,c
  4615  000AC8  0101               	movlb	1	; () banked
  4616  000ACA  0101               	movlb	1	; () banked
  4617  000ACC  21A9               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4618  000ACE  0101               	movlb	1	; () banked
  4619  000AD0  6FB5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4620                           
  4621                           ; BSR set to: 1
  4622                           ;messages.c: 74: if (qmsg->full == 1) {
  4623  000AD2  0E01               	movlw	1
  4624  000AD4  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  4625  000AD8  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4626  000ADC  62DF               	cpfseq	indf2,c
  4627  000ADE  D074               	goto	l3684
  4628                           
  4629                           ; BSR set to: 1
  4630                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4631  000AE0  0101               	movlb	1	; () banked
  4632  000AE2  EE20 F001          	lfsr	2,1
  4633  000AE6  0101               	movlb	1	; () banked
  4634  000AE8  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  4635  000AEA  26D9               	addwf	fsr2l,f,c
  4636  000AEC  0101               	movlb	1	; () banked
  4637  000AEE  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4638  000AF0  22DA               	addwfc	fsr2h,f,c
  4639  000AF2  50DF               	movf	indf2,w,c
  4640  000AF4  0101               	movlb	1	; () banked
  4641  000AF6  0101               	movlb	1	; () banked
  4642  000AF8  5DAA               	subwf	recv_msg@maxlength& (0+255),w,b
  4643  000AFA  B0D8               	btfsc	status,0,c
  4644  000AFC  D002               	goto	l3668
  4645                           
  4646                           ; BSR set to: 1
  4647                           ;messages.c: 77: return (-3);
  4648  000AFE  0EFD               	movlw	253
  4649  000B00  0012               	return	
  4650  000B02                     l3668:
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;messages.c: 78: }
  4654                           ;messages.c: 80: tlength = qmsg->length;
  4655  000B02  0101               	movlb	1	; () banked
  4656  000B04  EE20 F001          	lfsr	2,1
  4657  000B08  0101               	movlb	1	; () banked
  4658  000B0A  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  4659  000B0C  26D9               	addwf	fsr2l,f,c
  4660  000B0E  0101               	movlb	1	; () banked
  4661  000B10  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4662  000B12  22DA               	addwfc	fsr2h,f,c
  4663  000B14  50DF               	movf	indf2,w,c
  4664  000B16  0101               	movlb	1	; () banked
  4665  000B18  6FAF               	movwf	??_recv_msg& (0+255),b
  4666  000B1A  0101               	movlb	1	; () banked
  4667  000B1C  51AF               	movf	??_recv_msg& (0+255),w,b
  4668  000B1E  0101               	movlb	1	; () banked
  4669  000B20  0101               	movlb	1	; () banked
  4670  000B22  6FB2               	movwf	recv_msg@tlength& (0+255),b
  4671  000B24  0101               	movlb	1	; () banked
  4672  000B26  6BB3               	clrf	(recv_msg@tlength+1)& (0+255),b
  4673                           
  4674                           ; BSR set to: 1
  4675                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4676  000B28  0101               	movlb	1	; () banked
  4677  000B2A  0101               	movlb	1	; () banked
  4678  000B2C  C1AE  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  4679  000B30  0101               	movlb	1	; () banked
  4680  000B32  0101               	movlb	1	; () banked
  4681  000B34  C1AD  F1A2         	movff	recv_msg@data,memcpy@d1
  4682  000B38  0E03               	movlw	3
  4683  000B3A  0101               	movlb	1	; () banked
  4684  000B3C  0101               	movlb	1	; () banked
  4685  000B3E  25B4               	addwf	recv_msg@qmsg& (0+255),w,b
  4686  000B40  0101               	movlb	1	; () banked
  4687  000B42  6FAF               	movwf	??_recv_msg& (0+255),b
  4688  000B44  0E00               	movlw	0
  4689  000B46  0101               	movlb	1	; () banked
  4690  000B48  0101               	movlb	1	; () banked
  4691  000B4A  21B5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4692  000B4C  0101               	movlb	1	; () banked
  4693  000B4E  6FB0               	movwf	(??_recv_msg+1)& (0+255),b
  4694  000B50  C1AF  F1A4         	movff	??_recv_msg,memcpy@s1
  4695  000B54  C1B0  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  4696  000B58  C1B2  F1A6         	movff	recv_msg@tlength,memcpy@n
  4697  000B5C  C1B3  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  4698  000B60  EC2D  F00B         	call	_memcpy	;wreg free
  4699                           
  4700                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4701  000B64  0101               	movlb	1	; () banked
  4702  000B66  EE20 F035          	lfsr	2,53
  4703  000B6A  0101               	movlb	1	; () banked
  4704  000B6C  51A8               	movf	recv_msg@qptr& (0+255),w,b
  4705  000B6E  26D9               	addwf	fsr2l,f,c
  4706  000B70  0101               	movlb	1	; () banked
  4707  000B72  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4708  000B74  22DA               	addwfc	fsr2h,f,c
  4709  000B76  0101               	movlb	1	; () banked
  4710  000B78  EE10 F035          	lfsr	1,53
  4711  000B7C  0101               	movlb	1	; () banked
  4712  000B7E  51A8               	movf	recv_msg@qptr& (0+255),w,b
  4713  000B80  26E1               	addwf	fsr1l,f,c
  4714  000B82  0101               	movlb	1	; () banked
  4715  000B84  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4716  000B86  22E2               	addwfc	fsr1h,f,c
  4717  000B88  50E7               	movf	indf1,w,c
  4718  000B8A  0101               	movlb	1	; () banked
  4719  000B8C  6FAF               	movwf	??_recv_msg& (0+255),b
  4720  000B8E  0101               	movlb	1	; () banked
  4721  000B90  29AF               	incf	??_recv_msg& (0+255),w,b
  4722  000B92  0B03               	andlw	3
  4723  000B94  6EDF               	movwf	indf2,c
  4724                           
  4725                           ; BSR set to: 1
  4726                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4727  000B96  0101               	movlb	1	; () banked
  4728  000B98  EE20 F002          	lfsr	2,2
  4729  000B9C  0101               	movlb	1	; () banked
  4730  000B9E  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  4731  000BA0  26D9               	addwf	fsr2l,f,c
  4732  000BA2  0101               	movlb	1	; () banked
  4733  000BA4  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4734  000BA6  22DA               	addwfc	fsr2h,f,c
  4735  000BA8  C1AB  FFE1         	movff	recv_msg@msgtype,fsr1l
  4736  000BAC  C1AC  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4737  000BB0  CFDF FFE7          	movff	indf2,indf1
  4738                           
  4739                           ; BSR set to: 1
  4740                           ;messages.c: 91: qmsg->full = 0;
  4741  000BB4  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  4742  000BB8  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4743  000BBC  0E00               	movlw	0
  4744  000BBE  6EDF               	movwf	indf2,c
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;messages.c: 92: return (tlength);
  4748  000BC0  0101               	movlb	1	; () banked
  4749  000BC2  0101               	movlb	1	; () banked
  4750  000BC4  51B2               	movf	recv_msg@tlength& (0+255),w,b
  4751  000BC6  0012               	return	
  4752  000BC8                     l3684:
  4753                           
  4754                           ; BSR set to: 1
  4755                           ;messages.c: 94: return (-4);
  4756  000BC8  0EFC               	movlw	252
  4757  000BCA  0012               	return	
  4758  000BCC                     __end_of_recv_msg:
  4759                           	opt stack 0
  4760                           tblptru	equ	0xFF8
  4761                           tblptrh	equ	0xFF7
  4762                           tblptrl	equ	0xFF6
  4763                           tablat	equ	0xFF5
  4764                           prodh	equ	0xFF4
  4765                           prodl	equ	0xFF3
  4766                           intcon	equ	0xFF2
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           indf1	equ	0xFE7
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _memcpy *****************
  4780 ;; Defined at:
  4781 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  d1              2    0[BANK1 ] PTR void 
  4784 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4785 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4786 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4787 ;;  s1              2    2[BANK1 ] PTR const void 
  4788 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4789 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4790 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4791 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  4792 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4793 ;;  n               2    4[BANK1 ] unsigned int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  4796 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4797 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4798 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4799 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  4800 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  4801 ;;  d               2   33[BANK0 ] PTR unsigned char 
  4802 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4803 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4804 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  2    0[BANK1 ] PTR void 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4814 ;;      Params:         0       0       6       0       0
  4815 ;;      Locals:         0       4       0       0       0
  4816 ;;      Temps:          0       0       0       0       0
  4817 ;;      Totals:         0       4       6       0       0
  4818 ;;Total ram usage:       10 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:   11
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_send_msg
  4825 ;;		_recv_msg
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text29
  4830  00165A                     __ptext29:
  4831                           	opt stack 0
  4832  00165A                     _memcpy:
  4833                           	opt stack 16
  4834                           
  4835                           ; BSR set to: 1
  4836                           ;incstack = 0
  4837  00165A  0101               	movlb	1	; () banked
  4838  00165C  0100               	movlb	0	; () banked
  4839  00165E  C1A5  F0DA         	movff	memcpy@s1+1,memcpy@s+1
  4840  001662  0101               	movlb	1	; () banked
  4841  001664  0100               	movlb	0	; () banked
  4842  001666  C1A4  F0D9         	movff	memcpy@s1,memcpy@s
  4843  00166A  0101               	movlb	1	; () banked
  4844  00166C  0100               	movlb	0	; () banked
  4845  00166E  C1A3  F0D8         	movff	memcpy@d1+1,memcpy@d+1
  4846  001672  0101               	movlb	1	; () banked
  4847  001674  0100               	movlb	0	; () banked
  4848  001676  C1A2  F0D7         	movff	memcpy@d1,memcpy@d
  4849  00167A  D012               	goto	l3654
  4850  00167C                     l3648:
  4851  00167C  C0D9  FFD9         	movff	memcpy@s,fsr2l
  4852  001680  C0DA  FFDA         	movff	memcpy@s+1,fsr2h
  4853  001684  C0D7  FFE1         	movff	memcpy@d,fsr1l
  4854  001688  C0D8  FFE2         	movff	memcpy@d+1,fsr1h
  4855  00168C  CFDF FFE7          	movff	indf2,indf1
  4856  001690  0100               	movlb	0	; () banked
  4857  001692  0100               	movlb	0	; () banked
  4858  001694  4BD9               	infsnz	memcpy@s& (0+255),f,b
  4859  001696  2BDA               	incf	(memcpy@s+1)& (0+255),f,b
  4860                           
  4861                           ; BSR set to: 0
  4862  001698  0100               	movlb	0	; () banked
  4863  00169A  0100               	movlb	0	; () banked
  4864  00169C  4BD7               	infsnz	memcpy@d& (0+255),f,b
  4865  00169E  2BD8               	incf	(memcpy@d+1)& (0+255),f,b
  4866  0016A0                     l3654:
  4867                           
  4868                           ; BSR set to: 0
  4869  0016A0  0101               	movlb	1	; () banked
  4870  0016A2  0101               	movlb	1	; () banked
  4871  0016A4  07A6               	decf	memcpy@n& (0+255),f,b
  4872  0016A6  A0D8               	btfss	status,0,c
  4873  0016A8  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  4874  0016AA  0101               	movlb	1	; () banked
  4875  0016AC  29A6               	incf	memcpy@n& (0+255),w,b
  4876  0016AE  B4D8               	btfsc	status,2,c
  4877  0016B0  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  4878  0016B2  B4D8               	btfsc	status,2,c
  4879                           
  4880                           ; BSR set to: 1
  4881                           
  4882                           ; BSR set to: 1
  4883                           ;	Return value of _memcpy is never used
  4884  0016B4  0012               	return	
  4885  0016B6  D7E2               	goto	l3648
  4886  0016B8                     __end_of_memcpy:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           postinc0	equ	0xFEE
  4896                           wreg	equ	0xFE8
  4897                           indf1	equ	0xFE7
  4898                           fsr1h	equ	0xFE2
  4899                           fsr1l	equ	0xFE1
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _OpenUSART *****************
  4908 ;; Defined at:
  4909 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  config          1    wreg     unsigned char 
  4912 ;;  spbrg           2   33[BANK0 ] unsigned int 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  config          1    0[BANK1 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;		None               void
  4917 ;; Registers used:
  4918 ;;		wreg, status,2
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4924 ;;      Params:         0       2       0       0       0
  4925 ;;      Locals:         0       0       1       0       0
  4926 ;;      Temps:          0       3       0       0       0
  4927 ;;      Totals:         0       5       1       0       0
  4928 ;;Total ram usage:        6 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:   11
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text30
  4939  00127A                     __ptext30:
  4940                           	opt stack 0
  4941  00127A                     _OpenUSART:
  4942                           	opt stack 19
  4943                           
  4944                           ; BSR set to: 1
  4945                           ;incstack = 0
  4946                           ;OpenUSART@config stored from wreg
  4947  00127A  CFE8 F1A2          	movff	wreg,OpenUSART@config
  4948  00127E  0E00               	movlw	0
  4949  001280  6EAC               	movwf	4012,c	;volatile
  4950  001282  0E00               	movlw	0
  4951  001284  6EAB               	movwf	4011,c	;volatile
  4952  001286  0101               	movlb	1	; () banked
  4953  001288  0101               	movlb	1	; () banked
  4954  00128A  B1A2               	btfsc	OpenUSART@config& (0+255),0,b
  4955                           
  4956                           ; BSR set to: 1
  4957  00128C  88AC               	bsf	4012,4,c	;volatile
  4958                           
  4959                           ; BSR set to: 1
  4960                           
  4961                           ; BSR set to: 1
  4962  00128E  0101               	movlb	1	; () banked
  4963  001290  0101               	movlb	1	; () banked
  4964  001292  A3A2               	btfss	OpenUSART@config& (0+255),1,b
  4965  001294  D002               	goto	l3460
  4966                           
  4967                           ; BSR set to: 1
  4968  001296  8CAC               	bsf	4012,6,c	;volatile
  4969  001298  8CAB               	bsf	4011,6,c	;volatile
  4970  00129A                     l3460:
  4971                           
  4972                           ; BSR set to: 1
  4973  00129A  0101               	movlb	1	; () banked
  4974  00129C  0101               	movlb	1	; () banked
  4975  00129E  B5A2               	btfsc	OpenUSART@config& (0+255),2,b
  4976                           
  4977                           ; BSR set to: 1
  4978  0012A0  8EAC               	bsf	4012,7,c	;volatile
  4979                           
  4980                           ; BSR set to: 1
  4981                           
  4982                           ; BSR set to: 1
  4983  0012A2  0101               	movlb	1	; () banked
  4984  0012A4  0101               	movlb	1	; () banked
  4985  0012A6  A7A2               	btfss	OpenUSART@config& (0+255),3,b
  4986  0012A8  D002               	goto	l511
  4987                           
  4988                           ; BSR set to: 1
  4989  0012AA  88AB               	bsf	4011,4,c	;volatile
  4990  0012AC  D001               	goto	l3468
  4991  0012AE                     l511:
  4992                           
  4993                           ; BSR set to: 1
  4994  0012AE  8AAB               	bsf	4011,5,c	;volatile
  4995  0012B0                     l3468:
  4996                           
  4997                           ; BSR set to: 1
  4998  0012B0  0101               	movlb	1	; () banked
  4999  0012B2  0101               	movlb	1	; () banked
  5000  0012B4  B9A2               	btfsc	OpenUSART@config& (0+255),4,b
  5001                           
  5002                           ; BSR set to: 1
  5003  0012B6  84AC               	bsf	4012,2,c	;volatile
  5004                           
  5005                           ; BSR set to: 1
  5006  0012B8  989E               	bcf	3998,4,c	;volatile
  5007                           
  5008                           ; BSR set to: 1
  5009  0012BA  0101               	movlb	1	; () banked
  5010  0012BC  0101               	movlb	1	; () banked
  5011  0012BE  BBA2               	btfsc	OpenUSART@config& (0+255),5,b
  5012                           
  5013                           ; BSR set to: 1
  5014  0012C0  86AB               	bsf	4011,3,c	;volatile
  5015                           
  5016                           ; BSR set to: 1
  5017                           
  5018                           ; BSR set to: 1
  5019  0012C2  0101               	movlb	1	; () banked
  5020  0012C4  0101               	movlb	1	; () banked
  5021  0012C6  ADA2               	btfss	OpenUSART@config& (0+255),6,b
  5022  0012C8  D002               	goto	l515
  5023                           
  5024                           ; BSR set to: 1
  5025  0012CA  8A9D               	bsf	3997,5,c	;volatile
  5026  0012CC  D001               	goto	l516
  5027  0012CE                     l515:
  5028                           
  5029                           ; BSR set to: 1
  5030  0012CE  9A9D               	bcf	3997,5,c	;volatile
  5031  0012D0                     l516:
  5032                           
  5033                           ; BSR set to: 1
  5034  0012D0  9A9E               	bcf	3998,5,c	;volatile
  5035                           
  5036                           ; BSR set to: 1
  5037  0012D2  0101               	movlb	1	; () banked
  5038  0012D4  0101               	movlb	1	; () banked
  5039  0012D6  AFA2               	btfss	OpenUSART@config& (0+255),7,b
  5040  0012D8  D002               	goto	l517
  5041                           
  5042                           ; BSR set to: 1
  5043  0012DA  889D               	bsf	3997,4,c	;volatile
  5044  0012DC  D001               	goto	l518
  5045  0012DE                     l517:
  5046                           
  5047                           ; BSR set to: 1
  5048  0012DE  989D               	bcf	3997,4,c	;volatile
  5049  0012E0                     l518:
  5050                           
  5051                           ; BSR set to: 1
  5052  0012E0  C0D7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5053                           
  5054                           ; BSR set to: 1
  5055  0012E4  0100               	movlb	0	; () banked
  5056  0012E6  C0D8  F0D9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5057  0012EA  C0D9  F0DA         	movff	??_OpenUSART,??_OpenUSART+1
  5058  0012EE  0100               	movlb	0	; () banked
  5059  0012F0  6BDB               	clrf	(??_OpenUSART+2)& (0+255),b
  5060  0012F2  0100               	movlb	0	; () banked
  5061  0012F4  51DA               	movf	(??_OpenUSART+1)& (0+255),w,b
  5062  0012F6  6EB0               	movwf	4016,c	;volatile
  5063                           
  5064                           ; BSR set to: 0
  5065  0012F8  8AAC               	bsf	4012,5,c	;volatile
  5066                           
  5067                           ; BSR set to: 0
  5068  0012FA  8EAB               	bsf	4011,7,c	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071  0012FC  9C94               	bcf	3988,6,c	;volatile
  5072                           
  5073                           ; BSR set to: 0
  5074  0012FE  8E94               	bsf	3988,7,c	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077  001300  A8AC               	btfss	4012,4,c	;volatile
  5078  001302  0012               	return	
  5079                           
  5080                           ; BSR set to: 0
  5081  001304  BEAC               	btfsc	4012,7,c	;volatile
  5082  001306  0012               	return	
  5083                           
  5084                           ; BSR set to: 0
  5085  001308  8C94               	bsf	3988,6,c	;volatile
  5086  00130A  0012               	return	
  5087  00130C                     __end_of_OpenUSART:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           intcon	equ	0xFF2
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           indf1	equ	0xFE7
  5099                           fsr1h	equ	0xFE2
  5100                           fsr1l	equ	0xFE1
  5101                           indf2	equ	0xFDF
  5102                           postinc2	equ	0xFDE
  5103                           postdec2	equ	0xFDD
  5104                           fsr2h	equ	0xFDA
  5105                           fsr2l	equ	0xFD9
  5106                           status	equ	0xFD8
  5107                           
  5108 ;; *************** function _OpenTimer1 *****************
  5109 ;; Defined at:
  5110 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  config          1    wreg     unsigned char 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  config          1   33[BANK0 ] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;		None               void
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         0       1       0       0       0
  5126 ;;      Temps:          0       0       0       0       0
  5127 ;;      Totals:         0       1       0       0       0
  5128 ;;Total ram usage:        1 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:   11
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text31
  5139  001A04                     __ptext31:
  5140                           	opt stack 0
  5141  001A04                     _OpenTimer1:
  5142                           	opt stack 19
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;incstack = 0
  5146                           ;OpenTimer1@config stored from wreg
  5147  001A04  CFE8 F0D7          	movff	wreg,OpenTimer1@config
  5148  001A08  0100               	movlb	0	; () banked
  5149  001A0A  0100               	movlb	0	; () banked
  5150  001A0C  51D7               	movf	OpenTimer1@config& (0+255),w,b
  5151  001A0E  0B7E               	andlw	126
  5152  001A10  6ECD               	movwf	4045,c	;volatile
  5153                           
  5154                           ; BSR set to: 0
  5155  001A12  0100               	movlb	0	; () banked
  5156  001A14  0100               	movlb	0	; () banked
  5157  001A16  ADD7               	btfss	OpenTimer1@config& (0+255),6,b
  5158  001A18  D002               	goto	l467
  5159                           
  5160                           ; BSR set to: 0
  5161  001A1A  8ECD               	bsf	4045,7,c	;volatile
  5162  001A1C  D001               	goto	l3442
  5163  001A1E                     l467:
  5164                           
  5165                           ; BSR set to: 0
  5166  001A1E  9ECD               	bcf	4045,7,c	;volatile
  5167  001A20                     l3442:
  5168                           
  5169                           ; BSR set to: 0
  5170  001A20  0E00               	movlw	0
  5171  001A22  6ECF               	movwf	4047,c	;volatile
  5172  001A24  0E00               	movlw	0
  5173  001A26  6ECE               	movwf	4046,c	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176  001A28  909E               	bcf	3998,0,c	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179  001A2A  0100               	movlb	0	; () banked
  5180  001A2C  0100               	movlb	0	; () banked
  5181  001A2E  AFD7               	btfss	OpenTimer1@config& (0+255),7,b
  5182  001A30  D002               	goto	l469
  5183                           
  5184                           ; BSR set to: 0
  5185  001A32  809D               	bsf	3997,0,c	;volatile
  5186  001A34  D001               	goto	l470
  5187  001A36                     l469:
  5188                           
  5189                           ; BSR set to: 0
  5190  001A36  909D               	bcf	3997,0,c	;volatile
  5191  001A38                     l470:
  5192                           
  5193                           ; BSR set to: 0
  5194  001A38  80CD               	bsf	4045,0,c	;volatile
  5195                           
  5196                           ; BSR set to: 0
  5197  001A3A  0012               	return	
  5198  001A3C                     __end_of_OpenTimer1:
  5199                           	opt stack 0
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           indf1	equ	0xFE7
  5210                           fsr1h	equ	0xFE2
  5211                           fsr1l	equ	0xFE1
  5212                           indf2	equ	0xFDF
  5213                           postinc2	equ	0xFDE
  5214                           postdec2	equ	0xFDD
  5215                           fsr2h	equ	0xFDA
  5216                           fsr2l	equ	0xFD9
  5217                           status	equ	0xFD8
  5218                           
  5219 ;; *************** function _OpenTimer0 *****************
  5220 ;; Defined at:
  5221 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  config          1    wreg     unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  config          1   33[BANK0 ] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;		None               void
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5235 ;;      Params:         0       0       0       0       0
  5236 ;;      Locals:         0       1       0       0       0
  5237 ;;      Temps:          0       0       0       0       0
  5238 ;;      Totals:         0       1       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:   11
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text32
  5250  001B72                     __ptext32:
  5251                           	opt stack 0
  5252  001B72                     _OpenTimer0:
  5253                           	opt stack 19
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;incstack = 0
  5257                           ;OpenTimer0@config stored from wreg
  5258  001B72  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  5259  001B76  0100               	movlb	0	; () banked
  5260  001B78  0100               	movlb	0	; () banked
  5261  001B7A  51D7               	movf	OpenTimer0@config& (0+255),w,b
  5262  001B7C  0B7F               	andlw	127
  5263  001B7E  6ED5               	movwf	4053,c	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266  001B80  0E00               	movlw	0
  5267  001B82  6ED7               	movwf	4055,c	;volatile
  5268                           
  5269                           ; BSR set to: 0
  5270  001B84  0E00               	movlw	0
  5271  001B86  6ED6               	movwf	4054,c	;volatile
  5272                           
  5273                           ; BSR set to: 0
  5274  001B88  94F2               	bcf	intcon,2,c	;volatile
  5275                           
  5276                           ; BSR set to: 0
  5277  001B8A  0100               	movlb	0	; () banked
  5278  001B8C  0100               	movlb	0	; () banked
  5279  001B8E  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  5280  001B90  D002               	goto	l443
  5281                           
  5282                           ; BSR set to: 0
  5283  001B92  8AF2               	bsf	intcon,5,c	;volatile
  5284  001B94  D001               	goto	l444
  5285  001B96                     l443:
  5286                           
  5287                           ; BSR set to: 0
  5288  001B96  9AF2               	bcf	intcon,5,c	;volatile
  5289  001B98                     l444:
  5290                           
  5291                           ; BSR set to: 0
  5292  001B98  8ED5               	bsf	4053,7,c	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295  001B9A  0012               	return	
  5296  001B9C                     __end_of_OpenTimer0:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           prodh	equ	0xFF4
  5303                           prodl	equ	0xFF3
  5304                           intcon	equ	0xFF2
  5305                           postinc0	equ	0xFEE
  5306                           wreg	equ	0xFE8
  5307                           indf1	equ	0xFE7
  5308                           fsr1h	equ	0xFE2
  5309                           fsr1l	equ	0xFE1
  5310                           indf2	equ	0xFDF
  5311                           postinc2	equ	0xFDE
  5312                           postdec2	equ	0xFDD
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _InterruptHandlerLow *****************
  5318 ;; Defined at:
  5319 ;;		line 122 in file "src/interrupts.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;		None               void
  5326 ;; Registers used:
  5327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5333 ;;      Params:         0       0       0       0       0
  5334 ;;      Locals:         0       0       0       0       0
  5335 ;;      Temps:         17       0       0       0       0
  5336 ;;      Totals:        17       0       0       0       0
  5337 ;;Total ram usage:       17 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:   10
  5340 ;; This function calls:
  5341 ;;		_timer1_int_handler
  5342 ;;		_uart_recv_int_handler
  5343 ;;		_uart_trans_int_handler
  5344 ;; This function is called by:
  5345 ;;		Interrupt level 1
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	intcodelo
  5350  000018                     __pintcodelo:
  5351                           	opt stack 0
  5352  000018                     _InterruptHandlerLow:
  5353                           	opt stack 16
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;incstack = 0
  5357  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  5358  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  5359  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  5360  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  5361  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  5362  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  5363  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  5364  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  5365  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  5366  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  5367  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  5368  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  5369  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  5370  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  5371  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  5372  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  5373  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  5374                           
  5375                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5376  00005C  A09E               	btfss	3998,0,c	;volatile
  5377  00005E  D003               	goto	i1l3932
  5378                           
  5379                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5380  000060  909E               	bcf	3998,0,c	;volatile
  5381                           
  5382                           ;interrupts.c: 126: timer1_int_handler();
  5383  000062  EC8A  F00D         	call	_timer1_int_handler	;wreg free
  5384  000066                     i1l3932:
  5385                           
  5386                           ;interrupts.c: 127: }
  5387                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5388  000066  AA9E               	btfss	3998,5,c	;volatile
  5389  000068  D003               	goto	i1l3938
  5390                           
  5391                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5392  00006A  9A9E               	bcf	3998,5,c	;volatile
  5393                           
  5394                           ;interrupts.c: 132: uart_recv_int_handler();
  5395  00006C  ECEF  F008         	call	_uart_recv_int_handler	;wreg free
  5396  000070                     i1l3938:
  5397                           
  5398                           ;interrupts.c: 133: }
  5399                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5400  000070  B89E               	btfsc	3998,4,c	;volatile
  5401  000072  A89D               	btfss	3997,4,c	;volatile
  5402  000074  D002               	goto	i1l52
  5403                           
  5404                           ;interrupts.c: 137: uart_trans_int_handler();
  5405  000076  EC5C  F00B         	call	_uart_trans_int_handler	;wreg free
  5406  00007A                     i1l52:
  5407  00007A  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5408  00007E  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5409  000082  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5410  000086  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5411  00008A  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5412  00008E  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5413  000092  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5414  000096  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5415  00009A  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5416  00009E  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5417  0000A2  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5418  0000A6  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5419  0000AA  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5420  0000AE  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5421  0000B2  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5422  0000B6  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5423  0000BA  C024  FFD8         	movff	??_InterruptHandlerLow,status
  5424  0000BE  0010               	retfie	
  5425  0000C0                     __end_of_InterruptHandlerLow:
  5426                           	opt stack 0
  5427                           pclatu	equ	0xFFB
  5428                           pclath	equ	0xFFA
  5429                           tblptru	equ	0xFF8
  5430                           tblptrh	equ	0xFF7
  5431                           tblptrl	equ	0xFF6
  5432                           tablat	equ	0xFF5
  5433                           prodh	equ	0xFF4
  5434                           prodl	equ	0xFF3
  5435                           intcon	equ	0xFF2
  5436                           postinc0	equ	0xFEE
  5437                           fsr0h	equ	0xFEA
  5438                           fsr0l	equ	0xFE9
  5439                           wreg	equ	0xFE8
  5440                           indf1	equ	0xFE7
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           bsr	equ	0xFE0
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _uart_trans_int_handler *****************
  5452 ;; Defined at:
  5453 ;;		line 11 in file "src/my_uart.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  data            2   30[COMRAM] PTR unsigned char 
  5458 ;;		 -> NULL(0), 
  5459 ;;  length          1   34[COMRAM] char 
  5460 ;;  curIndex        1   33[COMRAM] unsigned char 
  5461 ;;  msgtype         1   32[COMRAM] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;		None               void
  5464 ;; Registers used:
  5465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5471 ;;      Params:         0       0       0       0       0
  5472 ;;      Locals:         5       0       0       0       0
  5473 ;;      Temps:          1       0       0       0       0
  5474 ;;      Totals:         6       0       0       0       0
  5475 ;;Total ram usage:        6 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    9
  5478 ;; This function calls:
  5479 ;;		_FromMainLow_recvmsg
  5480 ;; This function is called by:
  5481 ;;		_InterruptHandlerLow
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text34
  5486  0016B8                     __ptext34:
  5487                           	opt stack 0
  5488  0016B8                     _uart_trans_int_handler:
  5489                           	opt stack 16
  5490                           
  5491                           ;my_uart.c: 13: unsigned char* data = (0);
  5492                           
  5493                           ;incstack = 0
  5494  0016B8  0E00               	movlw	0
  5495  0016BA  6E20               	movwf	uart_trans_int_handler@data+1,c
  5496  0016BC  0E00               	movlw	0
  5497  0016BE  6E1F               	movwf	uart_trans_int_handler@data,c
  5498                           
  5499                           ;my_uart.c: 14: unsigned char msgtype;
  5500                           ;my_uart.c: 15: unsigned char curIndex;
  5501                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5502  0016C0  0E00               	movlw	high uart_trans_int_handler@msgtype
  5503  0016C2  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5504  0016C4  0E21               	movlw	low uart_trans_int_handler@msgtype
  5505  0016C6  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5506  0016C8  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5507  0016CC  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5508  0016D0  0E0A               	movlw	10
  5509  0016D2  EC0C  F00E         	call	_FromMainLow_recvmsg
  5510  0016D6  6E23               	movwf	uart_trans_int_handler@length,c
  5511                           
  5512                           ;my_uart.c: 17: if (length < 0) {
  5513  0016D8  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5514  0016DA  D019               	goto	i1l358
  5515                           
  5516                           ;my_uart.c: 26: curIndex = 0;
  5517                           
  5518                           ;my_uart.c: 24: }
  5519                           ;my_uart.c: 25: } else {
  5520                           
  5521                           ;my_uart.c: 22: else{
  5522                           
  5523                           ;my_uart.c: 21: }
  5524  0016DC  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5525  0016DE  0E00               	movlw	0
  5526  0016E0  6E22               	movwf	uart_trans_int_handler@curIndex,c
  5527  0016E2  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5528                           
  5529                           ;my_uart.c: 27: while(curIndex < length){
  5530  0016E4  D00D               	goto	i1l3924
  5531  0016E6                     i1l361:
  5532  0016E6  A2AC               	btfss	4012,1,c	;volatile
  5533  0016E8  D7FE               	goto	i1l361
  5534                           
  5535                           ;my_uart.c: 33: TXREG = data[curIndex];
  5536  0016EA  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5537  0016EC  0D01               	mullw	1
  5538  0016EE  50F3               	movf	prodl,w,c
  5539  0016F0  241F               	addwf	uart_trans_int_handler@data,w,c
  5540  0016F2  6ED9               	movwf	fsr2l,c
  5541  0016F4  50F4               	movf	prodh,w,c
  5542  0016F6  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5543  0016F8  6EDA               	movwf	fsr2h,c
  5544  0016FA  50DF               	movf	indf2,w,c
  5545  0016FC  6EAD               	movwf	4013,c	;volatile
  5546                           
  5547                           ;my_uart.c: 35: curIndex++;
  5548  0016FE  2A22               	incf	uart_trans_int_handler@curIndex,f,c
  5549  001700                     i1l3924:
  5550  001700  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5551  001702  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5552  001704  D004               	goto	i1l358
  5553  001706  0AFF               	xorlw	255
  5554  001708  2423               	addwf	uart_trans_int_handler@length,w,c
  5555  00170A  B0D8               	btfsc	status,0,c
  5556  00170C  D7EC               	goto	i1l361
  5557  00170E                     i1l358:
  5558                           
  5559                           ;my_uart.c: 36: }
  5560                           ;my_uart.c: 37: }
  5561                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5562  00170E  989D               	bcf	3997,4,c	;volatile
  5563  001710  0012               	return	
  5564  001712                     __end_of_uart_trans_int_handler:
  5565                           	opt stack 0
  5566                           pclatu	equ	0xFFB
  5567                           pclath	equ	0xFFA
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           intcon	equ	0xFF2
  5575                           postinc0	equ	0xFEE
  5576                           fsr0h	equ	0xFEA
  5577                           fsr0l	equ	0xFE9
  5578                           wreg	equ	0xFE8
  5579                           indf1	equ	0xFE7
  5580                           fsr1h	equ	0xFE2
  5581                           fsr1l	equ	0xFE1
  5582                           bsr	equ	0xFE0
  5583                           indf2	equ	0xFDF
  5584                           postinc2	equ	0xFDE
  5585                           postdec2	equ	0xFDD
  5586                           fsr2h	equ	0xFDA
  5587                           fsr2l	equ	0xFD9
  5588                           status	equ	0xFD8
  5589                           
  5590 ;; *************** function _FromMainLow_recvmsg *****************
  5591 ;; Defined at:
  5592 ;;		line 159 in file "src/messages.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  maxlength       1    wreg     unsigned char 
  5595 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5596 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5597 ;;  data            2   26[COMRAM] PTR void 
  5598 ;;		 -> NULL(0), 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  maxlength       1   28[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      char 
  5603 ;; Registers used:
  5604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5610 ;;      Params:         4       0       0       0       0
  5611 ;;      Locals:         1       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0
  5613 ;;      Totals:         5       0       0       0       0
  5614 ;;Total ram usage:        5 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    8
  5617 ;; This function calls:
  5618 ;;		i1_recv_msg
  5619 ;; This function is called by:
  5620 ;;		_uart_trans_int_handler
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text35
  5625  001C18                     __ptext35:
  5626                           	opt stack 0
  5627  001C18                     _FromMainLow_recvmsg:
  5628                           	opt stack 16
  5629                           
  5630                           ;incstack = 0
  5631                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5632  001C18  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  5633                           
  5634                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5635  001C1C  0101               	movlb	1	; () banked
  5636  001C1E  0E01               	movlw	high _FromMainLow_MQ
  5637  001C20  6E0C               	movwf	i1recv_msg@qptr+1,c
  5638  001C22  0101               	movlb	1	; () banked
  5639  001C24  0E36               	movlw	low _FromMainLow_MQ
  5640  001C26  6E0B               	movwf	i1recv_msg@qptr,c
  5641  001C28  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5642  001C2C  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5643  001C30  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5644  001C34  6A11               	clrf	i1recv_msg@data+1,c
  5645  001C36  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5646  001C3A  EC64  F007         	call	i1_recv_msg	;wreg free
  5647  001C3E  0012               	return	
  5648  001C40                     __end_of_FromMainLow_recvmsg:
  5649                           	opt stack 0
  5650                           pclatu	equ	0xFFB
  5651                           pclath	equ	0xFFA
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           intcon	equ	0xFF2
  5659                           postinc0	equ	0xFEE
  5660                           fsr0h	equ	0xFEA
  5661                           fsr0l	equ	0xFE9
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           fsr1h	equ	0xFE2
  5665                           fsr1l	equ	0xFE1
  5666                           bsr	equ	0xFE0
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function i1_recv_msg *****************
  5675 ;; Defined at:
  5676 ;;		line 63 in file "src/messages.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5679 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5680 ;;  maxlength       1   12[COMRAM] unsigned char 
  5681 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5682 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5683 ;;  data            2   15[COMRAM] PTR void 
  5684 ;;		 -> NULL(0), main@msgbuffer(11), 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5687 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5688 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5689 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5690 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      char 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5700 ;;      Params:         7       0       0       0       0
  5701 ;;      Locals:         5       0       0       0       0
  5702 ;;      Temps:          2       0       0       0       0
  5703 ;;      Totals:        14       0       0       0       0
  5704 ;;Total ram usage:       14 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    7
  5707 ;; This function calls:
  5708 ;;		i1_memcpy
  5709 ;; This function is called by:
  5710 ;;		_FromMainLow_recvmsg
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text36
  5715  000EC8                     __ptext36:
  5716                           	opt stack 0
  5717  000EC8                     i1_recv_msg:
  5718                           	opt stack 16
  5719                           
  5720                           ;messages.c: 64: unsigned char slot;
  5721                           ;messages.c: 68: msg *qmsg;
  5722                           ;messages.c: 69: size_t tlength;
  5723                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5724                           
  5725                           ;incstack = 0
  5726  000EC8  EE20 F035          	lfsr	2,53
  5727  000ECC  500B               	movf	i1recv_msg@qptr,w,c
  5728  000ECE  26D9               	addwf	fsr2l,f,c
  5729  000ED0  500C               	movf	i1recv_msg@qptr+1,w,c
  5730  000ED2  22DA               	addwfc	fsr2h,f,c
  5731  000ED4  50DF               	movf	indf2,w,c
  5732  000ED6  6E14               	movwf	i1recv_msg@slot,c
  5733                           
  5734                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5735  000ED8  5014               	movf	i1recv_msg@slot,w,c
  5736  000EDA  0D0D               	mullw	13
  5737  000EDC  50F3               	movf	prodl,w,c
  5738  000EDE  240B               	addwf	i1recv_msg@qptr,w,c
  5739  000EE0  6E17               	movwf	i1recv_msg@qmsg,c
  5740  000EE2  50F4               	movf	prodh,w,c
  5741  000EE4  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5742  000EE6  6E18               	movwf	i1recv_msg@qmsg+1,c
  5743                           
  5744                           ;messages.c: 74: if (qmsg->full == 1) {
  5745  000EE8  0E01               	movlw	1
  5746  000EEA  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5747  000EEE  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5748  000EF2  62DF               	cpfseq	indf2,c
  5749  000EF4  D050               	goto	i1l3872
  5750                           
  5751                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5752  000EF6  EE20 F001          	lfsr	2,1
  5753  000EFA  5017               	movf	i1recv_msg@qmsg,w,c
  5754  000EFC  26D9               	addwf	fsr2l,f,c
  5755  000EFE  5018               	movf	i1recv_msg@qmsg+1,w,c
  5756  000F00  22DA               	addwfc	fsr2h,f,c
  5757  000F02  50DF               	movf	indf2,w,c
  5758  000F04  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5759  000F06  B0D8               	btfsc	status,0,c
  5760  000F08  D002               	goto	i1l3856
  5761                           
  5762                           ;messages.c: 77: return (-3);
  5763  000F0A  0EFD               	movlw	253
  5764  000F0C  0012               	return	
  5765  000F0E                     i1l3856:
  5766                           
  5767                           ;messages.c: 78: }
  5768                           ;messages.c: 80: tlength = qmsg->length;
  5769  000F0E  EE20 F001          	lfsr	2,1
  5770  000F12  5017               	movf	i1recv_msg@qmsg,w,c
  5771  000F14  26D9               	addwf	fsr2l,f,c
  5772  000F16  5018               	movf	i1recv_msg@qmsg+1,w,c
  5773  000F18  22DA               	addwfc	fsr2h,f,c
  5774  000F1A  50DF               	movf	indf2,w,c
  5775  000F1C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5776  000F1E  5012               	movf	??i1_recv_msg,w,c
  5777  000F20  6E15               	movwf	i1recv_msg@tlength,c
  5778  000F22  6A16               	clrf	i1recv_msg@tlength+1,c
  5779                           
  5780                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5781  000F24  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5782  000F28  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5783  000F2C  0E03               	movlw	3
  5784  000F2E  2417               	addwf	i1recv_msg@qmsg,w,c
  5785  000F30  6E12               	movwf	??i1_recv_msg& (0+255),c
  5786  000F32  0E00               	movlw	0
  5787  000F34  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5788  000F36  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5789  000F38  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5790  000F3C  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5791  000F40  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5792  000F44  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5793  000F48  ECA3  F00C         	call	i1_memcpy	;wreg free
  5794                           
  5795                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5796  000F4C  EE20 F035          	lfsr	2,53
  5797  000F50  500B               	movf	i1recv_msg@qptr,w,c
  5798  000F52  26D9               	addwf	fsr2l,f,c
  5799  000F54  500C               	movf	i1recv_msg@qptr+1,w,c
  5800  000F56  22DA               	addwfc	fsr2h,f,c
  5801  000F58  EE10 F035          	lfsr	1,53
  5802  000F5C  500B               	movf	i1recv_msg@qptr,w,c
  5803  000F5E  26E1               	addwf	fsr1l,f,c
  5804  000F60  500C               	movf	i1recv_msg@qptr+1,w,c
  5805  000F62  22E2               	addwfc	fsr1h,f,c
  5806  000F64  50E7               	movf	indf1,w,c
  5807  000F66  6E12               	movwf	??i1_recv_msg& (0+255),c
  5808  000F68  2812               	incf	??i1_recv_msg,w,c
  5809  000F6A  0B03               	andlw	3
  5810  000F6C  6EDF               	movwf	indf2,c
  5811                           
  5812                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5813  000F6E  EE20 F002          	lfsr	2,2
  5814  000F72  5017               	movf	i1recv_msg@qmsg,w,c
  5815  000F74  26D9               	addwf	fsr2l,f,c
  5816  000F76  5018               	movf	i1recv_msg@qmsg+1,w,c
  5817  000F78  22DA               	addwfc	fsr2h,f,c
  5818  000F7A  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5819  000F7E  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5820  000F82  CFDF FFE7          	movff	indf2,indf1
  5821                           
  5822                           ;messages.c: 91: qmsg->full = 0;
  5823  000F86  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5824  000F8A  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5825  000F8E  0E00               	movlw	0
  5826  000F90  6EDF               	movwf	indf2,c
  5827                           
  5828                           ;messages.c: 92: return (tlength);
  5829  000F92  5015               	movf	i1recv_msg@tlength,w,c
  5830  000F94  0012               	return	
  5831  000F96                     i1l3872:
  5832                           
  5833                           ;messages.c: 94: return (-4);
  5834  000F96  0EFC               	movlw	252
  5835  000F98  0012               	return	
  5836  000F9A                     __end_ofi1_recv_msg:
  5837                           	opt stack 0
  5838                           pclatu	equ	0xFFB
  5839                           pclath	equ	0xFFA
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           prodh	equ	0xFF4
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           postinc0	equ	0xFEE
  5848                           fsr0h	equ	0xFEA
  5849                           fsr0l	equ	0xFE9
  5850                           wreg	equ	0xFE8
  5851                           indf1	equ	0xFE7
  5852                           fsr1h	equ	0xFE2
  5853                           fsr1l	equ	0xFE1
  5854                           bsr	equ	0xFE0
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _uart_recv_int_handler *****************
  5863 ;; Defined at:
  5864 ;;		line 42 in file "src/my_uart.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5878 ;;      Params:         0       0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0
  5880 ;;      Temps:          1       0       0       0       0
  5881 ;;      Totals:         1       0       0       0       0
  5882 ;;Total ram usage:        1 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    9
  5885 ;; This function calls:
  5886 ;;		_ReadUSART
  5887 ;;		i1_ToMainLow_sendmsg
  5888 ;; This function is called by:
  5889 ;;		_InterruptHandlerLow
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text37
  5894  0011DE                     __ptext37:
  5895                           	opt stack 0
  5896  0011DE                     _uart_recv_int_handler:
  5897                           	opt stack 16
  5898                           
  5899                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  5900                           
  5901                           ;incstack = 0
  5902  0011DE  AA9E               	btfss	3998,5,c	;volatile
  5903  0011E0  D03C               	goto	i1l3902
  5904                           
  5905                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5906  0011E2  EE20 F004          	lfsr	2,4
  5907  0011E6  5048               	movf	_uc_ptr,w,c
  5908  0011E8  26D9               	addwf	fsr2l,f,c
  5909  0011EA  5049               	movf	_uc_ptr+1,w,c
  5910  0011EC  22DA               	addwfc	fsr2h,f,c
  5911  0011EE  50DF               	movf	indf2,w,c
  5912  0011F0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5913  0011F2  501B               	movf	??_uart_recv_int_handler,w,c
  5914  0011F4  0D01               	mullw	1
  5915  0011F6  50F3               	movf	prodl,w,c
  5916  0011F8  2448               	addwf	_uc_ptr,w,c
  5917  0011FA  6ED9               	movwf	fsr2l,c
  5918  0011FC  50F4               	movf	prodh,w,c
  5919  0011FE  2049               	addwfc	_uc_ptr+1,w,c
  5920  001200  6EDA               	movwf	fsr2h,c
  5921  001202  EC54  F00E         	call	_ReadUSART	;wreg free
  5922  001206  6EDF               	movwf	indf2,c
  5923                           
  5924                           ;my_uart.c: 56: uc_ptr->buflen++;
  5925  001208  EE20 F004          	lfsr	2,4
  5926  00120C  5048               	movf	_uc_ptr,w,c
  5927  00120E  26D9               	addwf	fsr2l,f,c
  5928  001210  5049               	movf	_uc_ptr+1,w,c
  5929  001212  22DA               	addwfc	fsr2h,f,c
  5930  001214  2ADF               	incf	indf2,f,c
  5931                           
  5932                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  5933  001216  EE20 F004          	lfsr	2,4
  5934  00121A  5048               	movf	_uc_ptr,w,c
  5935  00121C  26D9               	addwf	fsr2l,f,c
  5936  00121E  5049               	movf	_uc_ptr+1,w,c
  5937  001220  22DA               	addwfc	fsr2h,f,c
  5938  001222  0E04               	movlw	4
  5939  001224  62DF               	cpfseq	indf2,c
  5940  001226  D019               	goto	i1l3902
  5941                           
  5942                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  5943  001228  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5944  00122A  0E20               	movlw	32
  5945  00122C  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5946  00122E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5947  001230  C049  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  5948  001234  C048  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  5949  001238  EE20 F004          	lfsr	2,4
  5950  00123C  5048               	movf	_uc_ptr,w,c
  5951  00123E  26D9               	addwf	fsr2l,f,c
  5952  001240  5049               	movf	_uc_ptr+1,w,c
  5953  001242  22DA               	addwfc	fsr2h,f,c
  5954  001244  50DF               	movf	indf2,w,c
  5955  001246  EC20  F00E         	call	i1_ToMainLow_sendmsg
  5956                           
  5957                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  5958  00124A  EE20 F004          	lfsr	2,4
  5959  00124E  5048               	movf	_uc_ptr,w,c
  5960  001250  26D9               	addwf	fsr2l,f,c
  5961  001252  5049               	movf	_uc_ptr+1,w,c
  5962  001254  22DA               	addwfc	fsr2h,f,c
  5963  001256  0E00               	movlw	0
  5964  001258  6EDF               	movwf	indf2,c
  5965  00125A                     i1l3902:
  5966                           
  5967                           ;my_uart.c: 61: }
  5968                           ;my_uart.c: 62: }
  5969                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  5970  00125A  A64B               	btfss	_USART_Status,3,c
  5971  00125C  0012               	return	
  5972                           
  5973                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  5974  00125E  98AB               	bcf	4011,4,c	;volatile
  5975                           
  5976                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  5977  001260  88AB               	bsf	4011,4,c	;volatile
  5978                           
  5979                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  5980  001262  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5981  001264  0E1E               	movlw	30
  5982  001266  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5983  001268  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5984  00126A  0E00               	movlw	0
  5985  00126C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5986  00126E  0E00               	movlw	0
  5987  001270  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5988  001272  0E00               	movlw	0
  5989  001274  EC20  F00E         	call	i1_ToMainLow_sendmsg
  5990  001278  0012               	return	
  5991  00127A                     __end_of_uart_recv_int_handler:
  5992                           	opt stack 0
  5993                           pclatu	equ	0xFFB
  5994                           pclath	equ	0xFFA
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           prodh	equ	0xFF4
  6000                           prodl	equ	0xFF3
  6001                           intcon	equ	0xFF2
  6002                           postinc0	equ	0xFEE
  6003                           fsr0h	equ	0xFEA
  6004                           fsr0l	equ	0xFE9
  6005                           wreg	equ	0xFE8
  6006                           indf1	equ	0xFE7
  6007                           fsr1h	equ	0xFE2
  6008                           fsr1l	equ	0xFE1
  6009                           bsr	equ	0xFE0
  6010                           indf2	equ	0xFDF
  6011                           postinc2	equ	0xFDE
  6012                           postdec2	equ	0xFDD
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function _ReadUSART *****************
  6018 ;; Defined at:
  6019 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  data            1    0[COMRAM] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      unsigned char 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6033 ;;      Params:         0       0       0       0       0
  6034 ;;      Locals:         1       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0
  6036 ;;      Totals:         1       0       0       0       0
  6037 ;;Total ram usage:        1 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    6
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_uart_recv_int_handler
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text38
  6048  001CA8                     __ptext38:
  6049                           	opt stack 0
  6050  001CA8                     _ReadUSART:
  6051                           	opt stack 18
  6052                           
  6053                           ;incstack = 0
  6054  001CA8  0EF2               	movlw	242
  6055  001CAA  164B               	andwf	_USART_Status,f,c
  6056  001CAC  ACAB               	btfss	4011,6,c	;volatile
  6057  001CAE  D003               	goto	i1l529
  6058  001CB0  904B               	bcf	_USART_Status,0,c
  6059  001CB2  B0AB               	btfsc	4011,0,c	;volatile
  6060  001CB4  804B               	bsf	_USART_Status,0,c
  6061  001CB6                     i1l529:
  6062  001CB6  B4AB               	btfsc	4011,2,c	;volatile
  6063  001CB8  844B               	bsf	_USART_Status,2,c
  6064  001CBA  B2AB               	btfsc	4011,1,c	;volatile
  6065  001CBC  864B               	bsf	_USART_Status,3,c
  6066  001CBE  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6067  001CC2  5001               	movf	ReadUSART@data,w,c
  6068  001CC4  0012               	return	
  6069  001CC6                     __end_of_ReadUSART:
  6070                           	opt stack 0
  6071                           pclatu	equ	0xFFB
  6072                           pclath	equ	0xFFA
  6073                           tblptru	equ	0xFF8
  6074                           tblptrh	equ	0xFF7
  6075                           tblptrl	equ	0xFF6
  6076                           tablat	equ	0xFF5
  6077                           prodh	equ	0xFF4
  6078                           prodl	equ	0xFF3
  6079                           intcon	equ	0xFF2
  6080                           postinc0	equ	0xFEE
  6081                           fsr0h	equ	0xFEA
  6082                           fsr0l	equ	0xFE9
  6083                           wreg	equ	0xFE8
  6084                           indf1	equ	0xFE7
  6085                           fsr1h	equ	0xFE2
  6086                           fsr1l	equ	0xFE1
  6087                           bsr	equ	0xFE0
  6088                           indf2	equ	0xFDF
  6089                           postinc2	equ	0xFDE
  6090                           postdec2	equ	0xFDD
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function _timer1_int_handler *****************
  6096 ;; Defined at:
  6097 ;;		line 37 in file "src/user_interrupts.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  result          2   27[COMRAM] unsigned int 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;		None               void
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6111 ;;      Params:         0       0       0       0       0
  6112 ;;      Locals:         2       0       0       0       0
  6113 ;;      Temps:          1       0       0       0       0
  6114 ;;      Totals:         3       0       0       0       0
  6115 ;;Total ram usage:        3 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    9
  6118 ;; This function calls:
  6119 ;;		_ReadTimer1
  6120 ;;		_WriteTimer1
  6121 ;;		i1_ToMainLow_sendmsg
  6122 ;; This function is called by:
  6123 ;;		_InterruptHandlerLow
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text39
  6128  001B14                     __ptext39:
  6129                           	opt stack 0
  6130  001B14                     _timer1_int_handler:
  6131                           	opt stack 16
  6132                           
  6133                           ;user_interrupts.c: 38: unsigned int result;
  6134                           ;user_interrupts.c: 45: result = ReadTimer1();
  6135                           
  6136                           ;incstack = 0
  6137  001B14  EC9B  F00E         	call	_ReadTimer1	;wreg free
  6138  001B18  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  6139  001B1C  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6140                           
  6141                           ;user_interrupts.c: 46: ToMainLow_sendmsg(0, 11, (void *) 0);
  6142  001B20  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6143  001B22  0E0B               	movlw	11
  6144  001B24  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6145  001B26  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6146  001B28  0E00               	movlw	0
  6147  001B2A  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6148  001B2C  0E00               	movlw	0
  6149  001B2E  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6150  001B30  0E00               	movlw	0
  6151  001B32  EC20  F00E         	call	i1_ToMainLow_sendmsg
  6152                           
  6153                           ;user_interrupts.c: 49: WriteTimer1(0);
  6154  001B36  0E00               	movlw	0
  6155  001B38  6E02               	movwf	WriteTimer1@timer1+1,c
  6156  001B3A  0E00               	movlw	0
  6157  001B3C  6E01               	movwf	WriteTimer1@timer1,c
  6158  001B3E  EC92  F00E         	call	_WriteTimer1	;wreg free
  6159  001B42  0012               	return	
  6160  001B44                     __end_of_timer1_int_handler:
  6161                           	opt stack 0
  6162                           pclatu	equ	0xFFB
  6163                           pclath	equ	0xFFA
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           prodh	equ	0xFF4
  6169                           prodl	equ	0xFF3
  6170                           intcon	equ	0xFF2
  6171                           postinc0	equ	0xFEE
  6172                           fsr0h	equ	0xFEA
  6173                           fsr0l	equ	0xFE9
  6174                           wreg	equ	0xFE8
  6175                           indf1	equ	0xFE7
  6176                           fsr1h	equ	0xFE2
  6177                           fsr1l	equ	0xFE1
  6178                           bsr	equ	0xFE0
  6179                           indf2	equ	0xFDF
  6180                           postinc2	equ	0xFDE
  6181                           postdec2	equ	0xFDD
  6182                           fsr2h	equ	0xFDA
  6183                           fsr2l	equ	0xFD9
  6184                           status	equ	0xFD8
  6185                           
  6186 ;; *************** function i1_ToMainLow_sendmsg *****************
  6187 ;; Defined at:
  6188 ;;		line 103 in file "src/messages.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  length          1    wreg     unsigned char 
  6191 ;;  msgtype         1   22[COMRAM] unsigned char 
  6192 ;;  data            2   23[COMRAM] PTR void 
  6193 ;;		 -> timer0_int_handler@test(1), NULL(0), main@test(2), main@uc(5), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  length          1   25[COMRAM] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      char 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6205 ;;      Params:         3       0       0       0       0
  6206 ;;      Locals:         1       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         4       0       0       0       0
  6209 ;;Total ram usage:        4 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    8
  6212 ;; This function calls:
  6213 ;;		i1_send_msg
  6214 ;; This function is called by:
  6215 ;;		_uart_recv_int_handler
  6216 ;;		_timer1_int_handler
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text40
  6221  001C40                     __ptext40:
  6222                           	opt stack 0
  6223  001C40                     i1_ToMainLow_sendmsg:
  6224                           	opt stack 16
  6225                           
  6226                           ;incstack = 0
  6227                           ;i1ToMainLow_sendmsg@length stored from wreg
  6228  001C40  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6229                           
  6230                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6231                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6232  001C44  0100               	movlb	0	; () banked
  6233  001C46  0E00               	movlw	high _ToMainLow_MQ
  6234  001C48  6E0C               	movwf	i1send_msg@qptr+1,c
  6235  001C4A  0100               	movlb	0	; () banked
  6236  001C4C  0E80               	movlw	low _ToMainLow_MQ
  6237  001C4E  6E0B               	movwf	i1send_msg@qptr,c
  6238  001C50  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6239  001C54  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6240  001C58  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6241  001C5C  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6242  001C60  EC9A  F008         	call	i1_send_msg	;wreg free
  6243  001C64  0012               	return	
  6244  001C66                     __end_ofi1_ToMainLow_sendmsg:
  6245                           	opt stack 0
  6246                           pclatu	equ	0xFFB
  6247                           pclath	equ	0xFFA
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           postinc0	equ	0xFEE
  6256                           fsr0h	equ	0xFEA
  6257                           fsr0l	equ	0xFE9
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           bsr	equ	0xFE0
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function i1_send_msg *****************
  6271 ;; Defined at:
  6272 ;;		line 24 in file "src/messages.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6275 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6276 ;;  length          1   12[COMRAM] unsigned char 
  6277 ;;  msgtype         1   13[COMRAM] unsigned char 
  6278 ;;  data            2   14[COMRAM] PTR void 
  6279 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), main@test(2), 
  6280 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6283 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6284 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6285 ;;  send_msg        2   17[COMRAM] unsigned int 
  6286 ;;  send_msg        1   19[COMRAM] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      char 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6296 ;;      Params:         6       0       0       0       0
  6297 ;;      Locals:         5       0       0       0       0
  6298 ;;      Temps:          1       0       0       0       0
  6299 ;;      Totals:        12       0       0       0       0
  6300 ;;Total ram usage:       12 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    7
  6303 ;; This function calls:
  6304 ;;		i1_memcpy
  6305 ;; This function is called by:
  6306 ;;		i1_ToMainLow_sendmsg
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text41
  6311  001134                     __ptext41:
  6312                           	opt stack 0
  6313  001134                     i1_send_msg:
  6314                           	opt stack 16
  6315                           
  6316                           ;messages.c: 25: unsigned char slot;
  6317                           ;messages.c: 27: msg *qmsg;
  6318                           ;messages.c: 28: size_t tlength = length;
  6319                           
  6320                           ;incstack = 0
  6321  001134  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6322  001138  6A13               	clrf	i1send_msg@tlength+1,c
  6323                           
  6324                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6325  00113A  EE20 F034          	lfsr	2,52
  6326  00113E  500B               	movf	i1send_msg@qptr,w,c
  6327  001140  26D9               	addwf	fsr2l,f,c
  6328  001142  500C               	movf	i1send_msg@qptr+1,w,c
  6329  001144  22DA               	addwfc	fsr2h,f,c
  6330  001146  50DF               	movf	indf2,w,c
  6331  001148  6E14               	movwf	i1send_msg@slot,c
  6332                           
  6333                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6334  00114A  5014               	movf	i1send_msg@slot,w,c
  6335  00114C  0D0D               	mullw	13
  6336  00114E  50F3               	movf	prodl,w,c
  6337  001150  240B               	addwf	i1send_msg@qptr,w,c
  6338  001152  6E15               	movwf	i1send_msg@qmsg,c
  6339  001154  50F4               	movf	prodh,w,c
  6340  001156  200C               	addwfc	i1send_msg@qptr+1,w,c
  6341  001158  6E16               	movwf	i1send_msg@qmsg+1,c
  6342                           
  6343                           ;messages.c: 41: if (qmsg->full != 0) {
  6344  00115A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6345  00115E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6346  001162  50DF               	movf	indf2,w,c
  6347  001164  B4D8               	btfsc	status,2,c
  6348  001166  D002               	goto	i1l3832
  6349                           
  6350                           ;messages.c: 42: return (-1);
  6351  001168  0EFF               	movlw	255
  6352  00116A  0012               	return	
  6353  00116C                     i1l3832:
  6354                           
  6355                           ;messages.c: 43: }
  6356                           ;messages.c: 46: qmsg->length = length;
  6357  00116C  EE20 F001          	lfsr	2,1
  6358  001170  5015               	movf	i1send_msg@qmsg,w,c
  6359  001172  26D9               	addwf	fsr2l,f,c
  6360  001174  5016               	movf	i1send_msg@qmsg+1,w,c
  6361  001176  22DA               	addwfc	fsr2h,f,c
  6362  001178  C00D  FFDF         	movff	i1send_msg@length,indf2
  6363                           
  6364                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6365  00117C  EE20 F002          	lfsr	2,2
  6366  001180  5015               	movf	i1send_msg@qmsg,w,c
  6367  001182  26D9               	addwf	fsr2l,f,c
  6368  001184  5016               	movf	i1send_msg@qmsg+1,w,c
  6369  001186  22DA               	addwfc	fsr2h,f,c
  6370  001188  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6371                           
  6372                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6373  00118C  0E03               	movlw	3
  6374  00118E  2415               	addwf	i1send_msg@qmsg,w,c
  6375  001190  6E01               	movwf	i1memcpy@d1,c
  6376  001192  0E00               	movlw	0
  6377  001194  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6378  001196  6E02               	movwf	i1memcpy@d1+1,c
  6379  001198  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6380  00119C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6381  0011A0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6382  0011A4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6383  0011A8  ECA3  F00C         	call	i1_memcpy	;wreg free
  6384                           
  6385                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6386  0011AC  EE20 F034          	lfsr	2,52
  6387  0011B0  500B               	movf	i1send_msg@qptr,w,c
  6388  0011B2  26D9               	addwf	fsr2l,f,c
  6389  0011B4  500C               	movf	i1send_msg@qptr+1,w,c
  6390  0011B6  22DA               	addwfc	fsr2h,f,c
  6391  0011B8  EE10 F034          	lfsr	1,52
  6392  0011BC  500B               	movf	i1send_msg@qptr,w,c
  6393  0011BE  26E1               	addwf	fsr1l,f,c
  6394  0011C0  500C               	movf	i1send_msg@qptr+1,w,c
  6395  0011C2  22E2               	addwfc	fsr1h,f,c
  6396  0011C4  50E7               	movf	indf1,w,c
  6397  0011C6  6E11               	movwf	??i1_send_msg& (0+255),c
  6398  0011C8  2811               	incf	??i1_send_msg,w,c
  6399  0011CA  0B03               	andlw	3
  6400  0011CC  6EDF               	movwf	indf2,c
  6401                           
  6402                           ;messages.c: 59: qmsg->full = 1;
  6403  0011CE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6404  0011D2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6405  0011D6  0E01               	movlw	1
  6406  0011D8  6EDF               	movwf	indf2,c
  6407                           
  6408                           ;messages.c: 60: return (1);
  6409  0011DA  0E01               	movlw	1
  6410  0011DC  0012               	return	
  6411  0011DE                     __end_ofi1_send_msg:
  6412                           	opt stack 0
  6413                           pclatu	equ	0xFFB
  6414                           pclath	equ	0xFFA
  6415                           tblptru	equ	0xFF8
  6416                           tblptrh	equ	0xFF7
  6417                           tblptrl	equ	0xFF6
  6418                           tablat	equ	0xFF5
  6419                           prodh	equ	0xFF4
  6420                           prodl	equ	0xFF3
  6421                           intcon	equ	0xFF2
  6422                           postinc0	equ	0xFEE
  6423                           fsr0h	equ	0xFEA
  6424                           fsr0l	equ	0xFE9
  6425                           wreg	equ	0xFE8
  6426                           indf1	equ	0xFE7
  6427                           fsr1h	equ	0xFE2
  6428                           fsr1l	equ	0xFE1
  6429                           bsr	equ	0xFE0
  6430                           indf2	equ	0xFDF
  6431                           postinc2	equ	0xFDE
  6432                           postdec2	equ	0xFDD
  6433                           fsr2h	equ	0xFDA
  6434                           fsr2l	equ	0xFD9
  6435                           status	equ	0xFD8
  6436                           
  6437 ;; *************** function i1_memcpy *****************
  6438 ;; Defined at:
  6439 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  d1              2    0[COMRAM] PTR void 
  6442 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6443 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6444 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6445 ;;  s1              2    2[COMRAM] PTR const void 
  6446 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6447 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6448 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6449 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  6450 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  6451 ;;  n               2    4[COMRAM] unsigned int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6454 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6455 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6456 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6457 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  6458 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  6459 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6460 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6461 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6462 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2    0[COMRAM] PTR void 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6472 ;;      Params:         6       0       0       0       0
  6473 ;;      Locals:         4       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0
  6475 ;;      Totals:        10       0       0       0       0
  6476 ;;Total ram usage:       10 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		i1_send_msg
  6483 ;;		i1_recv_msg
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text42
  6488  001946                     __ptext42:
  6489                           	opt stack 0
  6490  001946                     i1_memcpy:
  6491                           	opt stack 16
  6492                           
  6493                           ;incstack = 0
  6494  001946  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6495  00194A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6496  00194E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6497  001952  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6498  001956  D00E               	goto	i1l3808
  6499  001958                     i1l3802:
  6500  001958  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6501  00195C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6502  001960  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6503  001964  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6504  001968  CFDF FFE7          	movff	indf2,indf1
  6505  00196C  4A09               	infsnz	i1memcpy@s,f,c
  6506  00196E  2A0A               	incf	i1memcpy@s+1,f,c
  6507  001970  4A07               	infsnz	i1memcpy@d,f,c
  6508  001972  2A08               	incf	i1memcpy@d+1,f,c
  6509  001974                     i1l3808:
  6510  001974  0605               	decf	i1memcpy@n,f,c
  6511  001976  A0D8               	btfss	status,0,c
  6512  001978  0606               	decf	i1memcpy@n+1,f,c
  6513  00197A  2805               	incf	i1memcpy@n& (0+255),w,c
  6514  00197C  B4D8               	btfsc	status,2,c
  6515  00197E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6516  001980  B4D8               	btfsc	status,2,c
  6517                           
  6518                           ;	Return value of i1_memcpy is never used
  6519  001982  0012               	return	
  6520  001984  D7E9               	goto	i1l3802
  6521  001986                     __end_ofi1_memcpy:
  6522                           	opt stack 0
  6523                           pclatu	equ	0xFFB
  6524                           pclath	equ	0xFFA
  6525                           tblptru	equ	0xFF8
  6526                           tblptrh	equ	0xFF7
  6527                           tblptrl	equ	0xFF6
  6528                           tablat	equ	0xFF5
  6529                           prodh	equ	0xFF4
  6530                           prodl	equ	0xFF3
  6531                           intcon	equ	0xFF2
  6532                           postinc0	equ	0xFEE
  6533                           fsr0h	equ	0xFEA
  6534                           fsr0l	equ	0xFE9
  6535                           wreg	equ	0xFE8
  6536                           indf1	equ	0xFE7
  6537                           fsr1h	equ	0xFE2
  6538                           fsr1l	equ	0xFE1
  6539                           bsr	equ	0xFE0
  6540                           indf2	equ	0xFDF
  6541                           postinc2	equ	0xFDE
  6542                           postdec2	equ	0xFDD
  6543                           fsr2h	equ	0xFDA
  6544                           fsr2l	equ	0xFD9
  6545                           status	equ	0xFD8
  6546                           
  6547 ;; *************** function _WriteTimer1 *****************
  6548 ;; Defined at:
  6549 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  timer1          2    0[COMRAM] unsigned int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  timer           2    2[COMRAM] struct Timers
  6554 ;; Return value:  Size  Location     Type
  6555 ;;		None               void
  6556 ;; Registers used:
  6557 ;;		None
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6563 ;;      Params:         2       0       0       0       0
  6564 ;;      Locals:         2       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0
  6566 ;;      Totals:         4       0       0       0       0
  6567 ;;Total ram usage:        4 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    6
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_timer1_int_handler
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text43
  6578  001D24                     __ptext43:
  6579                           	opt stack 0
  6580  001D24                     _WriteTimer1:
  6581                           	opt stack 18
  6582                           
  6583                           ;incstack = 0
  6584  001D24  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6585  001D28  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6586  001D2C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6587  001D30  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6588  001D34  0012               	return	
  6589  001D36                     __end_of_WriteTimer1:
  6590                           	opt stack 0
  6591                           pclatu	equ	0xFFB
  6592                           pclath	equ	0xFFA
  6593                           tblptru	equ	0xFF8
  6594                           tblptrh	equ	0xFF7
  6595                           tblptrl	equ	0xFF6
  6596                           tablat	equ	0xFF5
  6597                           prodh	equ	0xFF4
  6598                           prodl	equ	0xFF3
  6599                           intcon	equ	0xFF2
  6600                           postinc0	equ	0xFEE
  6601                           fsr0h	equ	0xFEA
  6602                           fsr0l	equ	0xFE9
  6603                           wreg	equ	0xFE8
  6604                           indf1	equ	0xFE7
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           bsr	equ	0xFE0
  6608                           indf2	equ	0xFDF
  6609                           postinc2	equ	0xFDE
  6610                           postdec2	equ	0xFDD
  6611                           fsr2h	equ	0xFDA
  6612                           fsr2l	equ	0xFD9
  6613                           status	equ	0xFD8
  6614                           
  6615 ;; *************** function _ReadTimer1 *****************
  6616 ;; Defined at:
  6617 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  timer           2    2[COMRAM] struct Timers
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  2    0[COMRAM] unsigned int 
  6624 ;; Registers used:
  6625 ;;		None
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6631 ;;      Params:         2       0       0       0       0
  6632 ;;      Locals:         2       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0
  6634 ;;      Totals:         4       0       0       0       0
  6635 ;;Total ram usage:        4 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    6
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_timer1_int_handler
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text44
  6646  001D36                     __ptext44:
  6647                           	opt stack 0
  6648  001D36                     _ReadTimer1:
  6649                           	opt stack 18
  6650                           
  6651                           ;incstack = 0
  6652  001D36  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6653  001D3A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6654  001D3E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6655  001D42  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6656  001D46  0012               	return	
  6657  001D48                     __end_of_ReadTimer1:
  6658                           	opt stack 0
  6659                           pclatu	equ	0xFFB
  6660                           pclath	equ	0xFFA
  6661                           tblptru	equ	0xFF8
  6662                           tblptrh	equ	0xFF7
  6663                           tblptrl	equ	0xFF6
  6664                           tablat	equ	0xFF5
  6665                           prodh	equ	0xFF4
  6666                           prodl	equ	0xFF3
  6667                           intcon	equ	0xFF2
  6668                           postinc0	equ	0xFEE
  6669                           fsr0h	equ	0xFEA
  6670                           fsr0l	equ	0xFE9
  6671                           wreg	equ	0xFE8
  6672                           indf1	equ	0xFE7
  6673                           fsr1h	equ	0xFE2
  6674                           fsr1l	equ	0xFE1
  6675                           bsr	equ	0xFE0
  6676                           indf2	equ	0xFDF
  6677                           postinc2	equ	0xFDE
  6678                           postdec2	equ	0xFDD
  6679                           fsr2h	equ	0xFDA
  6680                           fsr2l	equ	0xFD9
  6681                           status	equ	0xFD8
  6682                           
  6683 ;; *************** function _InterruptHandlerHigh *****************
  6684 ;; Defined at:
  6685 ;;		line 83 in file "src/interrupts.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;		None               void
  6692 ;; Registers used:
  6693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6699 ;;      Params:         0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0
  6701 ;;      Temps:          0      14       0       0       0
  6702 ;;      Totals:         0      14       0       0       0
  6703 ;;Total ram usage:       14 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    5
  6706 ;; This function calls:
  6707 ;;		_SleepIfOkay
  6708 ;;		_i2c_int_handler
  6709 ;;		_timer0_int_handler
  6710 ;; This function is called by:
  6711 ;;		Interrupt level 2
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	intcode
  6716  000008                     __pintcode:
  6717                           	opt stack 0
  6718  000008                     _InterruptHandlerHigh:
  6719                           	opt stack 16
  6720                           
  6721                           ;incstack = 0
  6722  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh
  6723  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+1
  6724  000010  EFCB  F009         	goto	int_func
  6725                           pclatu	equ	0xFFB
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           fsr0h	equ	0xFEA
  6736                           fsr0l	equ	0xFE9
  6737                           wreg	equ	0xFE8
  6738                           indf1	equ	0xFE7
  6739                           fsr1h	equ	0xFE2
  6740                           fsr1l	equ	0xFE1
  6741                           bsr	equ	0xFE0
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           postdec2	equ	0xFDD
  6745                           fsr2h	equ	0xFDA
  6746                           fsr2l	equ	0xFD9
  6747                           status	equ	0xFD8
  6748                           
  6749                           	psect	intcode_body
  6750  001396                     __pintcode_body:
  6751                           	opt stack 16
  6752  001396                     int_func:
  6753                           	opt stack 16
  6754  001396  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6755  00139A  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6756  00139E  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6757  0013A2  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6758  0013A6  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6759  0013AA  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6760  0013AE  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+8
  6761  0013B2  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+9
  6762  0013B6  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6763  0013BA  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6764  0013BE  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+12
  6765  0013C2  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+13
  6766                           
  6767                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6768  0013C6  A69E               	btfss	3998,3,c	;volatile
  6769  0013C8  D003               	goto	i2l3148
  6770                           
  6771                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6772  0013CA  969E               	bcf	3998,3,c	;volatile
  6773                           
  6774                           ;interrupts.c: 92: i2c_int_handler();
  6775  0013CC  EC62  F000         	call	_i2c_int_handler	;wreg free
  6776  0013D0                     i2l3148:
  6777                           
  6778                           ;interrupts.c: 93: }
  6779                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6780  0013D0  A4F2               	btfss	intcon,2,c	;volatile
  6781  0013D2  D003               	goto	i2l3154
  6782                           
  6783                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6784  0013D4  94F2               	bcf	intcon,2,c	;volatile
  6785                           
  6786                           ;interrupts.c: 99: timer0_int_handler();
  6787  0013D6  ECFB  F00B         	call	_timer0_int_handler	;wreg free
  6788  0013DA                     i2l3154:
  6789                           
  6790                           ;interrupts.c: 100: }
  6791                           ;interrupts.c: 109: SleepIfOkay();
  6792  0013DA  ECB1  F00B         	call	_SleepIfOkay	;wreg free
  6793  0013DE  C0D6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6794  0013E2  C0D5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6795  0013E6  C0D4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6796  0013EA  C0D3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6797  0013EE  C0D2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6798  0013F2  C0D1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6799  0013F6  C0D0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6800  0013FA  C0CF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6801  0013FE  C0CE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6802  001402  C0CD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6803  001406  C0CC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6804  00140A  C0CB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6805  00140E  C0CA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6806  001412  C0C9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6807  001416  0011               	retfie		f
  6808  001418                     __end_of_InterruptHandlerHigh:
  6809                           	opt stack 0
  6810                           pclatu	equ	0xFFB
  6811                           pclath	equ	0xFFA
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           prodh	equ	0xFF4
  6817                           prodl	equ	0xFF3
  6818                           intcon	equ	0xFF2
  6819                           postinc0	equ	0xFEE
  6820                           fsr0h	equ	0xFEA
  6821                           fsr0l	equ	0xFE9
  6822                           wreg	equ	0xFE8
  6823                           indf1	equ	0xFE7
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           bsr	equ	0xFE0
  6827                           indf2	equ	0xFDF
  6828                           postinc2	equ	0xFDE
  6829                           postdec2	equ	0xFDD
  6830                           fsr2h	equ	0xFDA
  6831                           fsr2l	equ	0xFD9
  6832                           status	equ	0xFD8
  6833                           
  6834 ;; *************** function _timer0_int_handler *****************
  6835 ;; Defined at:
  6836 ;;		line 17 in file "src/user_interrupts.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;  msgtype         2    0        int 
  6841 ;;  length          2    0        int 
  6842 ;;  val             2    0        unsigned int 
  6843 ;;  test            1   13[BANK0 ] unsigned char [1]
  6844 ;; Return value:  Size  Location     Type
  6845 ;;		None               void
  6846 ;; Registers used:
  6847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6853 ;;      Params:         0       0       0       0       0
  6854 ;;      Locals:         0       1       0       0       0
  6855 ;;      Temps:          0       1       0       0       0
  6856 ;;      Totals:         0       2       0       0       0
  6857 ;;Total ram usage:        2 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    4
  6860 ;; This function calls:
  6861 ;;		i2_WriteTimer0
  6862 ;;		i2_sendUART
  6863 ;; This function is called by:
  6864 ;;		_InterruptHandlerHigh
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text46
  6869  0017F6                     __ptext46:
  6870                           	opt stack 0
  6871  0017F6                     _timer0_int_handler:
  6872                           	opt stack 16
  6873                           
  6874                           ;user_interrupts.c: 18: unsigned int val;
  6875                           ;user_interrupts.c: 19: int length, msgtype;
  6876                           ;user_interrupts.c: 26: WriteTimer0(65500);
  6877                           
  6878                           ;incstack = 0
  6879  0017F6  0EFF               	movlw	255
  6880  0017F8  6E36               	movwf	i2WriteTimer0@timer0+1,c
  6881  0017FA  0EDC               	movlw	220
  6882  0017FC  6E35               	movwf	i2WriteTimer0@timer0,c
  6883  0017FE  ECA4  F00E         	call	i2_WriteTimer0	;wreg free
  6884                           
  6885                           ;user_interrupts.c: 29: LATAbits.LATA0 = !LATAbits.LATA0;
  6886  001802  B089               	btfsc	3977,0,c	;volatile
  6887  001804  D002               	goto	i2u240_40
  6888  001806  0E01               	movlw	1
  6889  001808  D001               	goto	i2u240_46
  6890  00180A                     i2u240_40:
  6891  00180A  0E00               	movlw	0
  6892  00180C                     i2u240_46:
  6893  00180C  0100               	movlb	0	; () banked
  6894  00180E  6FC2               	movwf	??_timer0_int_handler& (0+255),b
  6895  001810  5089               	movf	3977,w,c	;volatile
  6896  001812  0100               	movlb	0	; () banked
  6897  001814  19C2               	xorwf	??_timer0_int_handler& (0+255),w,b
  6898  001816  0BFE               	andlw	-2
  6899  001818  19C2               	xorwf	??_timer0_int_handler& (0+255),w,b
  6900  00181A  6E89               	movwf	3977,c	;volatile
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;user_interrupts.c: 30: unsigned char test[1] = {88};
  6904  00181C  C0DE  F0C3         	movff	timer0_int_handler@F5104,timer0_int_handler@test
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;user_interrupts.c: 31: sendUART(1, test);
  6908  001820  0100               	movlb	0	; () banked
  6909  001822  0E00               	movlw	high timer0_int_handler@test
  6910  001824  0100               	movlb	0	; () banked
  6911  001826  0100               	movlb	0	; () banked
  6912  001828  6FBF               	movwf	(i2sendUART@data+1)& (0+255),b
  6913  00182A  0100               	movlb	0	; () banked
  6914  00182C  0EC3               	movlw	low timer0_int_handler@test
  6915  00182E  0100               	movlb	0	; () banked
  6916  001830  0100               	movlb	0	; () banked
  6917  001832  6FBE               	movwf	i2sendUART@data& (0+255),b
  6918  001834  0E01               	movlw	1
  6919  001836  ECE3  F00C         	call	i2_sendUART
  6920  00183A  0012               	return	
  6921  00183C                     __end_of_timer0_int_handler:
  6922                           	opt stack 0
  6923                           pclatu	equ	0xFFB
  6924                           pclath	equ	0xFFA
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           postinc0	equ	0xFEE
  6933                           fsr0h	equ	0xFEA
  6934                           fsr0l	equ	0xFE9
  6935                           wreg	equ	0xFE8
  6936                           indf1	equ	0xFE7
  6937                           fsr1h	equ	0xFE2
  6938                           fsr1l	equ	0xFE1
  6939                           bsr	equ	0xFE0
  6940                           indf2	equ	0xFDF
  6941                           postinc2	equ	0xFDE
  6942                           postdec2	equ	0xFDD
  6943                           fsr2h	equ	0xFDA
  6944                           fsr2l	equ	0xFD9
  6945                           status	equ	0xFD8
  6946                           
  6947 ;; *************** function i2_sendUART *****************
  6948 ;; Defined at:
  6949 ;;		line 85 in file "src/my_uart.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  length          1    wreg     unsigned char 
  6952 ;;  data            2    8[BANK0 ] PTR unsigned char 
  6953 ;;		 -> timer0_int_handler@test(1), main@test(2), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  length          1   11[BANK0 ] unsigned char 
  6956 ;;  sendUART        1   10[BANK0 ] char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      enum E4332
  6959 ;; Registers used:
  6960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6966 ;;      Params:         0       2       0       0       0
  6967 ;;      Locals:         0       2       0       0       0
  6968 ;;      Temps:          1       0       0       0       0
  6969 ;;      Totals:         1       4       0       0       0
  6970 ;;Total ram usage:        5 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    3
  6973 ;; This function calls:
  6974 ;;		i2_ToMainLow_sendmsg
  6975 ;; This function is called by:
  6976 ;;		_timer0_int_handler
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text47
  6981  0019C6                     __ptext47:
  6982                           	opt stack 0
  6983  0019C6                     i2_sendUART:
  6984                           	opt stack 16
  6985                           
  6986                           ;incstack = 0
  6987                           ;i2sendUART@length stored from wreg
  6988  0019C6  CFE8 F0C1          	movff	wreg,i2sendUART@length
  6989                           
  6990                           ;my_uart.c: 86: if(length > 10){
  6991  0019CA  0E0A               	movlw	10
  6992  0019CC  0100               	movlb	0	; () banked
  6993  0019CE  0100               	movlb	0	; () banked
  6994  0019D0  65C1               	cpfsgt	i2sendUART@length& (0+255),b
  6995  0019D2  D001               	goto	i2l3794
  6996  0019D4  0012               	return	
  6997  0019D6                     i2l3794:
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;my_uart.c: 89: }
  7001                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  7002  0019D6  6E47               	movwf	??i2_sendUART& (0+255),c
  7003  0019D8  0E1F               	movlw	31
  7004  0019DA  0100               	movlb	0	; () banked
  7005  0019DC  0100               	movlb	0	; () banked
  7006  0019DE  6FBB               	movwf	i2ToMainLow_sendmsg@msgtype& (0+255),b
  7007  0019E0  5047               	movf	??i2_sendUART& (0+255),w,c
  7008  0019E2  0100               	movlb	0	; () banked
  7009  0019E4  0100               	movlb	0	; () banked
  7010  0019E6  C0BF  F0BD         	movff	i2sendUART@data+1,i2ToMainLow_sendmsg@data+1
  7011  0019EA  0100               	movlb	0	; () banked
  7012  0019EC  0100               	movlb	0	; () banked
  7013  0019EE  C0BE  F0BC         	movff	i2sendUART@data,i2ToMainLow_sendmsg@data
  7014  0019F2  0100               	movlb	0	; () banked
  7015  0019F4  0100               	movlb	0	; () banked
  7016  0019F6  51C1               	movf	i2sendUART@length& (0+255),w,b
  7017  0019F8  ECCE  F00D         	call	i2_ToMainLow_sendmsg
  7018  0019FC  0100               	movlb	0	; () banked
  7019  0019FE  0100               	movlb	0	; () banked
  7020  001A00  6FC0               	movwf	i2sendUART@retval& (0+255),b
  7021  001A02  0012               	return	
  7022  001A04                     __end_ofi2_sendUART:
  7023                           	opt stack 0
  7024                           pclatu	equ	0xFFB
  7025                           pclath	equ	0xFFA
  7026                           tblptru	equ	0xFF8
  7027                           tblptrh	equ	0xFF7
  7028                           tblptrl	equ	0xFF6
  7029                           tablat	equ	0xFF5
  7030                           prodh	equ	0xFF4
  7031                           prodl	equ	0xFF3
  7032                           intcon	equ	0xFF2
  7033                           postinc0	equ	0xFEE
  7034                           fsr0h	equ	0xFEA
  7035                           fsr0l	equ	0xFE9
  7036                           wreg	equ	0xFE8
  7037                           indf1	equ	0xFE7
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           bsr	equ	0xFE0
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function i2_ToMainLow_sendmsg *****************
  7049 ;; Defined at:
  7050 ;;		line 103 in file "src/messages.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  length          1    wreg     unsigned char 
  7053 ;;  msgtype         1    5[BANK0 ] unsigned char 
  7054 ;;  data            2    6[BANK0 ] PTR void 
  7055 ;;		 -> timer0_int_handler@test(1), NULL(0), main@test(2), main@uc(5), 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  length          1   69[COMRAM] unsigned char 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      char 
  7060 ;; Registers used:
  7061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7067 ;;      Params:         0       3       0       0       0
  7068 ;;      Locals:         1       0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0
  7070 ;;      Totals:         1       3       0       0       0
  7071 ;;Total ram usage:        4 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    2
  7074 ;; This function calls:
  7075 ;;		i2_send_msg
  7076 ;; This function is called by:
  7077 ;;		i2_sendUART
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text48
  7082  001B9C                     __ptext48:
  7083                           	opt stack 0
  7084  001B9C                     i2_ToMainLow_sendmsg:
  7085                           	opt stack 16
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;incstack = 0
  7089                           ;i2ToMainLow_sendmsg@length stored from wreg
  7090  001B9C  CFE8 F046          	movff	wreg,i2ToMainLow_sendmsg@length
  7091                           
  7092                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  7093  001BA0  0100               	movlb	0	; () banked
  7094  001BA2  0E00               	movlw	high _ToMainLow_MQ
  7095  001BA4  6E40               	movwf	i2send_msg@qptr+1,c
  7096  001BA6  0100               	movlb	0	; () banked
  7097  001BA8  0E80               	movlw	low _ToMainLow_MQ
  7098  001BAA  6E3F               	movwf	i2send_msg@qptr,c
  7099  001BAC  C046  F041         	movff	i2ToMainLow_sendmsg@length,i2send_msg@length
  7100  001BB0  C0BB  F042         	movff	i2ToMainLow_sendmsg@msgtype,i2send_msg@msgtype
  7101  001BB4  0100               	movlb	0	; () banked
  7102  001BB6  C0BD  F044         	movff	i2ToMainLow_sendmsg@data+1,i2send_msg@data+1
  7103  001BBA  0100               	movlb	0	; () banked
  7104  001BBC  C0BC  F043         	movff	i2ToMainLow_sendmsg@data,i2send_msg@data
  7105  001BC0  ECCD  F007         	call	i2_send_msg	;wreg free
  7106  001BC4  0012               	return	
  7107  001BC6                     __end_ofi2_ToMainLow_sendmsg:
  7108                           	opt stack 0
  7109                           pclatu	equ	0xFFB
  7110                           pclath	equ	0xFFA
  7111                           tblptru	equ	0xFF8
  7112                           tblptrh	equ	0xFF7
  7113                           tblptrl	equ	0xFF6
  7114                           tablat	equ	0xFF5
  7115                           prodh	equ	0xFF4
  7116                           prodl	equ	0xFF3
  7117                           intcon	equ	0xFF2
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           indf1	equ	0xFE7
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           bsr	equ	0xFE0
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function i2_WriteTimer0 *****************
  7134 ;; Defined at:
  7135 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  timer0          2   52[COMRAM] unsigned int 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  WriteTimer0     2   54[COMRAM] struct Timers
  7140 ;; Return value:  Size  Location     Type
  7141 ;;		None               void
  7142 ;; Registers used:
  7143 ;;		None
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7149 ;;      Params:         2       0       0       0       0
  7150 ;;      Locals:         2       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0
  7152 ;;      Totals:         4       0       0       0       0
  7153 ;;Total ram usage:        4 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_timer0_int_handler
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text49
  7163  001D48                     __ptext49:
  7164                           	opt stack 0
  7165  001D48                     i2_WriteTimer0:
  7166                           	opt stack 19
  7167                           
  7168                           ;incstack = 0
  7169  001D48  C035  F037         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7170  001D4C  C036  F038         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7171  001D50  C038  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7172  001D54  C037  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7173  001D58  0012               	return	
  7174  001D5A                     __end_ofi2_WriteTimer0:
  7175                           	opt stack 0
  7176                           pclatu	equ	0xFFB
  7177                           pclath	equ	0xFFA
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           prodh	equ	0xFF4
  7183                           prodl	equ	0xFF3
  7184                           intcon	equ	0xFF2
  7185                           postinc0	equ	0xFEE
  7186                           fsr0h	equ	0xFEA
  7187                           fsr0l	equ	0xFE9
  7188                           wreg	equ	0xFE8
  7189                           indf1	equ	0xFE7
  7190                           fsr1h	equ	0xFE2
  7191                           fsr1l	equ	0xFE1
  7192                           bsr	equ	0xFE0
  7193                           indf2	equ	0xFDF
  7194                           postinc2	equ	0xFDE
  7195                           postdec2	equ	0xFDD
  7196                           fsr2h	equ	0xFDA
  7197                           fsr2l	equ	0xFD9
  7198                           status	equ	0xFD8
  7199                           
  7200 ;; *************** function _i2c_int_handler *****************
  7201 ;; Defined at:
  7202 ;;		line 100 in file "src/my_i2c.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  error_buf       3   10[BANK0 ] unsigned char [3]
  7207 ;;  data_read       1   18[BANK0 ] unsigned char 
  7208 ;;  msg_ready       1   17[BANK0 ] unsigned char 
  7209 ;;  msg_to_send     1   16[BANK0 ] unsigned char 
  7210 ;;  i2c_data        1   15[BANK0 ] unsigned char 
  7211 ;;  overrun_erro    1   14[BANK0 ] unsigned char 
  7212 ;;  data_written    1   13[BANK0 ] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;		None               void
  7215 ;; Registers used:
  7216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7222 ;;      Params:         0       0       0       0       0
  7223 ;;      Locals:         0       9       0       0       0
  7224 ;;      Temps:          0       2       0       0       0
  7225 ;;      Totals:         0      11       0       0       0
  7226 ;;Total ram usage:       11 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    3
  7229 ;; This function calls:
  7230 ;;		_ToMainHigh_sendmsg
  7231 ;;		_handle_start
  7232 ;; This function is called by:
  7233 ;;		_InterruptHandlerHigh
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text50
  7238  0000C4                     __ptext50:
  7239                           	opt stack 0
  7240  0000C4                     _i2c_int_handler:
  7241                           	opt stack 17
  7242                           
  7243                           ;my_i2c.c: 101: unsigned char i2c_data;
  7244                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7245                           
  7246                           ;incstack = 0
  7247  0000C4  0100               	movlb	0	; () banked
  7248  0000C6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7249  0000C8  0E00               	movlw	0
  7250  0000CA  0100               	movlb	0	; () banked
  7251  0000CC  0100               	movlb	0	; () banked
  7252  0000CE  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7253  0000D0  0100               	movlb	0	; () banked
  7254  0000D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7255                           
  7256                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7257  0000D4  0100               	movlb	0	; () banked
  7258  0000D6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7259  0000D8  0E00               	movlw	0
  7260  0000DA  0100               	movlb	0	; () banked
  7261  0000DC  0100               	movlb	0	; () banked
  7262  0000DE  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7263  0000E0  0100               	movlb	0	; () banked
  7264  0000E2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7265                           
  7266                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7267  0000E4  0100               	movlb	0	; () banked
  7268  0000E6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7269  0000E8  0E00               	movlw	0
  7270  0000EA  0100               	movlb	0	; () banked
  7271  0000EC  0100               	movlb	0	; () banked
  7272  0000EE  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7273  0000F0  0100               	movlb	0	; () banked
  7274  0000F2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7275                           
  7276                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7277  0000F4  0100               	movlb	0	; () banked
  7278  0000F6  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7279  0000F8  0E00               	movlw	0
  7280  0000FA  0100               	movlb	0	; () banked
  7281  0000FC  0100               	movlb	0	; () banked
  7282  0000FE  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7283  000100  0100               	movlb	0	; () banked
  7284  000102  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7285                           
  7286                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7287  000104  0100               	movlb	0	; () banked
  7288  000106  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7289  000108  0E00               	movlw	0
  7290  00010A  0100               	movlb	0	; () banked
  7291  00010C  0100               	movlb	0	; () banked
  7292  00010E  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7293  000110  0100               	movlb	0	; () banked
  7294  000112  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7298                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7299  000114  ACC6               	btfss	4038,6,c	;volatile
  7300  000116  D029               	goto	i2l3170
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7304  000118  9CC6               	bcf	4038,6,c	;volatile
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7308  00011A  0100               	movlb	0	; () banked
  7309  00011C  EE20 F00C          	lfsr	2,12
  7310  000120  0100               	movlb	0	; () banked
  7311  000122  51DC               	movf	_ic_ptr& (0+255),w,b
  7312  000124  26D9               	addwf	fsr2l,f,c
  7313  000126  0100               	movlb	0	; () banked
  7314  000128  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7315  00012A  22DA               	addwfc	fsr2h,f,c
  7316  00012C  0E05               	movlw	5
  7317  00012E  6EDF               	movwf	indf2,c
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;my_i2c.c: 116: overrun_error = 1;
  7321  000130  0100               	movlb	0	; () banked
  7322  000132  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7323  000134  0E01               	movlw	1
  7324  000136  0100               	movlb	0	; () banked
  7325  000138  0100               	movlb	0	; () banked
  7326  00013A  6FC4               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7327  00013C  0100               	movlb	0	; () banked
  7328  00013E  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7332  000140  0100               	movlb	0	; () banked
  7333  000142  EE20 F00E          	lfsr	2,14
  7334  000146  0100               	movlb	0	; () banked
  7335  000148  51DC               	movf	_ic_ptr& (0+255),w,b
  7336  00014A  26D9               	addwf	fsr2l,f,c
  7337  00014C  0100               	movlb	0	; () banked
  7338  00014E  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7339  000150  22DA               	addwfc	fsr2h,f,c
  7340  000152  2ADF               	incf	indf2,f,c
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7344  000154  0100               	movlb	0	; () banked
  7345  000156  EE20 F00D          	lfsr	2,13
  7346  00015A  0100               	movlb	0	; () banked
  7347  00015C  51DC               	movf	_ic_ptr& (0+255),w,b
  7348  00015E  26D9               	addwf	fsr2l,f,c
  7349  000160  0100               	movlb	0	; () banked
  7350  000162  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7351  000164  22DA               	addwfc	fsr2h,f,c
  7352  000166  0E04               	movlw	4
  7353  000168  6EDF               	movwf	indf2,c
  7354  00016A                     i2l3170:
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 119: }
  7358                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7359  00016A  A0C7               	btfss	4039,0,c	;volatile
  7360  00016C  D00A               	goto	i2l3176
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7364  00016E  CFC9 F0C5          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;my_i2c.c: 123: data_read = 1;
  7368  000172  0100               	movlb	0	; () banked
  7369  000174  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7370  000176  0E01               	movlw	1
  7371  000178  0100               	movlb	0	; () banked
  7372  00017A  0100               	movlb	0	; () banked
  7373  00017C  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7374  00017E  0100               	movlb	0	; () banked
  7375  000180  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7376  000182                     i2l3176:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 124: }
  7380                           ;my_i2c.c: 126: if (!overrun_error) {
  7381  000182  0100               	movlb	0	; () banked
  7382  000184  0100               	movlb	0	; () banked
  7383  000186  67C4               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7384  000188  D1CE               	goto	i2l285
  7385  00018A  D1B7               	goto	i2l3264
  7386  00018C                     i2l287:
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;my_i2c.c: 129: {
  7390                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7391  00018C  A6C7               	btfss	4039,3,c	;volatile
  7392  00018E  D1CB               	goto	i2l285
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;my_i2c.c: 132: handle_start(data_read);
  7396  000190  0100               	movlb	0	; () banked
  7397  000192  0100               	movlb	0	; () banked
  7398  000194  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7399  000196  EC36  F008         	call	_handle_start
  7400                           
  7401                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7402  00019A  0100               	movlb	0	; () banked
  7403  00019C  EE20 F00C          	lfsr	2,12
  7404  0001A0  0100               	movlb	0	; () banked
  7405  0001A2  51DC               	movf	_ic_ptr& (0+255),w,b
  7406  0001A4  26D9               	addwf	fsr2l,f,c
  7407  0001A6  0100               	movlb	0	; () banked
  7408  0001A8  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7409  0001AA  22DA               	addwfc	fsr2h,f,c
  7410  0001AC  0E08               	movlw	8
  7411  0001AE  62DF               	cpfseq	indf2,c
  7412  0001B0  D1BA               	goto	i2l285
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;my_i2c.c: 135: data_read = 0;
  7416  0001B2  0100               	movlb	0	; () banked
  7417  0001B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7418  0001B6  0E00               	movlw	0
  7419  0001B8  0100               	movlb	0	; () banked
  7420  0001BA  0100               	movlb	0	; () banked
  7421  0001BC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7422  0001BE  0100               	movlb	0	; () banked
  7423  0001C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7424                           
  7425                           ;my_i2c.c: 136: msg_to_send = 1;
  7426  0001C2  0100               	movlb	0	; () banked
  7427  0001C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7428  0001C6  0E01               	movlw	1
  7429  0001C8  0100               	movlb	0	; () banked
  7430  0001CA  0100               	movlb	0	; () banked
  7431  0001CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7432  0001CE  D187               	goto	L9
  7433  0001D0                     i2l291:
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 142: {
  7437                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7438  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7439  0001D2  D030               	goto	i2l3196
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7443  0001D4  0100               	movlb	0	; () banked
  7444  0001D6  EE20 F00B          	lfsr	2,11
  7445  0001DA  0100               	movlb	0	; () banked
  7446  0001DC  51DC               	movf	_ic_ptr& (0+255),w,b
  7447  0001DE  26D9               	addwf	fsr2l,f,c
  7448  0001E0  0100               	movlb	0	; () banked
  7449  0001E2  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7450  0001E4  22DA               	addwfc	fsr2h,f,c
  7451  0001E6  2ADF               	incf	indf2,f,c
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;my_i2c.c: 148: if (data_read) {
  7455  0001E8  0100               	movlb	0	; () banked
  7456  0001EA  0100               	movlb	0	; () banked
  7457  0001EC  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7458  0001EE  B4D8               	btfsc	status,2,c
  7459  0001F0  D179               	goto	L11
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7463  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7464  0001F4  D009               	goto	i2l3194
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 150: msg_ready = 1;
  7468  0001F6  0100               	movlb	0	; () banked
  7469  0001F8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7470  0001FA  0E01               	movlw	1
  7471  0001FC  0100               	movlb	0	; () banked
  7472  0001FE  0100               	movlb	0	; () banked
  7473  000200  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7474  000202  0100               	movlb	0	; () banked
  7475  000204  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7476                           
  7477                           ;my_i2c.c: 151: } else {
  7478  000206  D16E               	goto	L11
  7479  000208                     i2l3194:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7483  000208  0100               	movlb	0	; () banked
  7484  00020A  EE20 F00E          	lfsr	2,14
  7485  00020E  0100               	movlb	0	; () banked
  7486  000210  51DC               	movf	_ic_ptr& (0+255),w,b
  7487  000212  26D9               	addwf	fsr2l,f,c
  7488  000214  0100               	movlb	0	; () banked
  7489  000216  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7490  000218  22DA               	addwfc	fsr2h,f,c
  7491  00021A  2ADF               	incf	indf2,f,c
  7492                           
  7493                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7494  00021C  0100               	movlb	0	; () banked
  7495  00021E  EE20 F00D          	lfsr	2,13
  7496  000222  0100               	movlb	0	; () banked
  7497  000224  51DC               	movf	_ic_ptr& (0+255),w,b
  7498  000226  26D9               	addwf	fsr2l,f,c
  7499  000228  0100               	movlb	0	; () banked
  7500  00022A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7501  00022C  22DA               	addwfc	fsr2h,f,c
  7502  00022E  0E06               	movlw	6
  7503  000230  6EDF               	movwf	indf2,c
  7504                           
  7505                           ; BSR set to: 0
  7506  000232  D158               	goto	L11
  7507  000234                     i2l3196:
  7508                           
  7509                           ; BSR set to: 0
  7510  000234  0100               	movlb	0	; () banked
  7511  000236  0100               	movlb	0	; () banked
  7512  000238  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7513  00023A  B4D8               	btfsc	status,2,c
  7514  00023C  D174               	goto	i2l285
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7518  00023E  0100               	movlb	0	; () banked
  7519  000240  EE20 F00B          	lfsr	2,11
  7520  000244  0100               	movlb	0	; () banked
  7521  000246  51DC               	movf	_ic_ptr& (0+255),w,b
  7522  000248  26D9               	addwf	fsr2l,f,c
  7523  00024A  0100               	movlb	0	; () banked
  7524  00024C  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7525  00024E  22DA               	addwfc	fsr2h,f,c
  7526  000250  2ADF               	incf	indf2,f,c
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7530  000252  BAC7               	btfsc	4039,5,c	;volatile
  7531  000254  D019               	goto	i2l3212
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7535  000256  B4C7               	btfsc	4039,2,c	;volatile
  7536  000258  D00B               	goto	i2l3206
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7540  00025A  0100               	movlb	0	; () banked
  7541  00025C  EE20 F00C          	lfsr	2,12
  7542  000260  0100               	movlb	0	; () banked
  7543  000262  51DC               	movf	_ic_ptr& (0+255),w,b
  7544  000264  26D9               	addwf	fsr2l,f,c
  7545  000266  0100               	movlb	0	; () banked
  7546  000268  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7547  00026A  22DA               	addwfc	fsr2h,f,c
  7548  00026C  0E07               	movlw	7
  7549  00026E  D076               	goto	L8
  7550  000270                     i2l3206:
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7554  000270  0100               	movlb	0	; () banked
  7555  000272  EE20 F00C          	lfsr	2,12
  7556  000276  0100               	movlb	0	; () banked
  7557  000278  51DC               	movf	_ic_ptr& (0+255),w,b
  7558  00027A  26D9               	addwf	fsr2l,f,c
  7559  00027C  0100               	movlb	0	; () banked
  7560  00027E  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7561  000280  22DA               	addwfc	fsr2h,f,c
  7562  000282  0E08               	movlw	8
  7563  000284  6EDF               	movwf	indf2,c
  7564  000286  D11D               	goto	L12
  7565  000288                     i2l3212:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7569  000288  0100               	movlb	0	; () banked
  7570  00028A  EE20 F00E          	lfsr	2,14
  7571  00028E  0100               	movlb	0	; () banked
  7572  000290  51DC               	movf	_ic_ptr& (0+255),w,b
  7573  000292  26D9               	addwf	fsr2l,f,c
  7574  000294  0100               	movlb	0	; () banked
  7575  000296  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7576  000298  22DA               	addwfc	fsr2h,f,c
  7577  00029A  2ADF               	incf	indf2,f,c
  7578                           
  7579                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7580  00029C  0100               	movlb	0	; () banked
  7581  00029E  EE20 F00C          	lfsr	2,12
  7582  0002A2  0100               	movlb	0	; () banked
  7583  0002A4  51DC               	movf	_ic_ptr& (0+255),w,b
  7584  0002A6  26D9               	addwf	fsr2l,f,c
  7585  0002A8  0100               	movlb	0	; () banked
  7586  0002AA  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7587  0002AC  22DA               	addwfc	fsr2h,f,c
  7588  0002AE  0E05               	movlw	5
  7589  0002B0  6EDF               	movwf	indf2,c
  7590                           
  7591                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7592  0002B2  0100               	movlb	0	; () banked
  7593  0002B4  EE20 F00D          	lfsr	2,13
  7594  0002B8  0100               	movlb	0	; () banked
  7595  0002BA  51DC               	movf	_ic_ptr& (0+255),w,b
  7596  0002BC  26D9               	addwf	fsr2l,f,c
  7597  0002BE  0100               	movlb	0	; () banked
  7598  0002C0  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7599  0002C2  22DA               	addwfc	fsr2h,f,c
  7600  0002C4  0E06               	movlw	6
  7601  0002C6  D04A               	goto	L8
  7602  0002C8                     i2l3214:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;my_i2c.c: 177: {
  7606                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7607  0002C8  0100               	movlb	0	; () banked
  7608  0002CA  EE20 F01A          	lfsr	2,26
  7609  0002CE  0100               	movlb	0	; () banked
  7610  0002D0  51DC               	movf	_ic_ptr& (0+255),w,b
  7611  0002D2  26D9               	addwf	fsr2l,f,c
  7612  0002D4  0100               	movlb	0	; () banked
  7613  0002D6  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7614  0002D8  22DA               	addwfc	fsr2h,f,c
  7615  0002DA  50DF               	movf	indf2,w,c
  7616  0002DC  0100               	movlb	0	; () banked
  7617  0002DE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7618  0002E0  0100               	movlb	0	; () banked
  7619  0002E2  EE20 F019          	lfsr	2,25
  7620  0002E6  0100               	movlb	0	; () banked
  7621  0002E8  51DC               	movf	_ic_ptr& (0+255),w,b
  7622  0002EA  26D9               	addwf	fsr2l,f,c
  7623  0002EC  0100               	movlb	0	; () banked
  7624  0002EE  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7625  0002F0  22DA               	addwfc	fsr2h,f,c
  7626  0002F2  50DF               	movf	indf2,w,c
  7627  0002F4  0100               	movlb	0	; () banked
  7628  0002F6  5DBE               	subwf	??_i2c_int_handler& (0+255),w,b
  7629  0002F8  B0D8               	btfsc	status,0,c
  7630  0002FA  D0F4               	goto	L11
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7634  0002FC  0100               	movlb	0	; () banked
  7635  0002FE  EE20 F01A          	lfsr	2,26
  7636  000302  0100               	movlb	0	; () banked
  7637  000304  51DC               	movf	_ic_ptr& (0+255),w,b
  7638  000306  26D9               	addwf	fsr2l,f,c
  7639  000308  0100               	movlb	0	; () banked
  7640  00030A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7641  00030C  22DA               	addwfc	fsr2h,f,c
  7642  00030E  50DF               	movf	indf2,w,c
  7643  000310  0100               	movlb	0	; () banked
  7644  000312  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7645  000314  0100               	movlb	0	; () banked
  7646  000316  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7647  000318  0D01               	mullw	1
  7648  00031A  0E0F               	movlw	15
  7649  00031C  26F3               	addwf	prodl,f,c
  7650  00031E  0E00               	movlw	0
  7651  000320  22F4               	addwfc	prodh,f,c
  7652  000322  50F3               	movf	prodl,w,c
  7653  000324  0100               	movlb	0	; () banked
  7654  000326  0100               	movlb	0	; () banked
  7655  000328  25DC               	addwf	_ic_ptr& (0+255),w,b
  7656  00032A  6ED9               	movwf	fsr2l,c
  7657  00032C  50F4               	movf	prodh,w,c
  7658  00032E  0100               	movlb	0	; () banked
  7659  000330  0100               	movlb	0	; () banked
  7660  000332  21DD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7661  000334  6EDA               	movwf	fsr2h,c
  7662  000336  50DF               	movf	indf2,w,c
  7663  000338  6EC9               	movwf	4041,c	;volatile
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7667  00033A  0100               	movlb	0	; () banked
  7668  00033C  EE20 F01A          	lfsr	2,26
  7669  000340  0100               	movlb	0	; () banked
  7670  000342  51DC               	movf	_ic_ptr& (0+255),w,b
  7671  000344  26D9               	addwf	fsr2l,f,c
  7672  000346  0100               	movlb	0	; () banked
  7673  000348  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7674  00034A  22DA               	addwfc	fsr2h,f,c
  7675  00034C  2ADF               	incf	indf2,f,c
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;my_i2c.c: 181: data_written = 1;
  7679  00034E  0100               	movlb	0	; () banked
  7680  000350  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7681  000352  0E01               	movlw	1
  7682  000354  0100               	movlb	0	; () banked
  7683  000356  0100               	movlb	0	; () banked
  7684  000358  6FC3               	movwf	i2c_int_handler@data_written& (0+255),b
  7685  00035A  D0C1               	goto	L9
  7686  00035C                     L8:
  7687  00035C  6EDF               	movwf	indf2,c
  7688  00035E  D0E3               	goto	i2l285
  7689  000360                     i2l305:
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;my_i2c.c: 189: {
  7693                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7694  000360  A8C7               	btfss	4039,4,c	;volatile
  7695  000362  D062               	goto	i2l3242
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7699  000364  0100               	movlb	0	; () banked
  7700  000366  EE20 F00B          	lfsr	2,11
  7701  00036A  0100               	movlb	0	; () banked
  7702  00036C  51DC               	movf	_ic_ptr& (0+255),w,b
  7703  00036E  26D9               	addwf	fsr2l,f,c
  7704  000370  0100               	movlb	0	; () banked
  7705  000372  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7706  000374  22DA               	addwfc	fsr2h,f,c
  7707  000376  2ADF               	incf	indf2,f,c
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;my_i2c.c: 194: if (data_read) {
  7711  000378  0100               	movlb	0	; () banked
  7712  00037A  0100               	movlb	0	; () banked
  7713  00037C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7714  00037E  B4D8               	btfsc	status,2,c
  7715  000380  D04A               	goto	i2l3238
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7719  000382  AAC7               	btfss	4039,5,c	;volatile
  7720  000384  D027               	goto	i2l3236
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7724  000386  0100               	movlb	0	; () banked
  7725  000388  EE20 F00A          	lfsr	2,10
  7726  00038C  0100               	movlb	0	; () banked
  7727  00038E  51DC               	movf	_ic_ptr& (0+255),w,b
  7728  000390  26D9               	addwf	fsr2l,f,c
  7729  000392  0100               	movlb	0	; () banked
  7730  000394  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7731  000396  22DA               	addwfc	fsr2h,f,c
  7732  000398  50DF               	movf	indf2,w,c
  7733  00039A  0100               	movlb	0	; () banked
  7734  00039C  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7735  00039E  0100               	movlb	0	; () banked
  7736  0003A0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7737  0003A2  0D01               	mullw	1
  7738  0003A4  50F3               	movf	prodl,w,c
  7739  0003A6  0100               	movlb	0	; () banked
  7740  0003A8  0100               	movlb	0	; () banked
  7741  0003AA  25DC               	addwf	_ic_ptr& (0+255),w,b
  7742  0003AC  6ED9               	movwf	fsr2l,c
  7743  0003AE  50F4               	movf	prodh,w,c
  7744  0003B0  0100               	movlb	0	; () banked
  7745  0003B2  0100               	movlb	0	; () banked
  7746  0003B4  21DD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7747  0003B6  6EDA               	movwf	fsr2h,c
  7748  0003B8  0100               	movlb	0	; () banked
  7749  0003BA  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7753  0003BE  0100               	movlb	0	; () banked
  7754  0003C0  EE20 F00A          	lfsr	2,10
  7755  0003C4  0100               	movlb	0	; () banked
  7756  0003C6  51DC               	movf	_ic_ptr& (0+255),w,b
  7757  0003C8  26D9               	addwf	fsr2l,f,c
  7758  0003CA  0100               	movlb	0	; () banked
  7759  0003CC  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7760  0003CE  22DA               	addwfc	fsr2h,f,c
  7761  0003D0  2ADF               	incf	indf2,f,c
  7762  0003D2  D021               	goto	i2l3238
  7763  0003D4                     i2l3236:
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7767  0003D4  0100               	movlb	0	; () banked
  7768  0003D6  EE20 F00E          	lfsr	2,14
  7769  0003DA  0100               	movlb	0	; () banked
  7770  0003DC  51DC               	movf	_ic_ptr& (0+255),w,b
  7771  0003DE  26D9               	addwf	fsr2l,f,c
  7772  0003E0  0100               	movlb	0	; () banked
  7773  0003E2  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7774  0003E4  22DA               	addwfc	fsr2h,f,c
  7775  0003E6  2ADF               	incf	indf2,f,c
  7776                           
  7777                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7778  0003E8  0100               	movlb	0	; () banked
  7779  0003EA  EE20 F00D          	lfsr	2,13
  7780  0003EE  0100               	movlb	0	; () banked
  7781  0003F0  51DC               	movf	_ic_ptr& (0+255),w,b
  7782  0003F2  26D9               	addwf	fsr2l,f,c
  7783  0003F4  0100               	movlb	0	; () banked
  7784  0003F6  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7785  0003F8  22DA               	addwfc	fsr2h,f,c
  7786  0003FA  0E06               	movlw	6
  7787  0003FC  6EDF               	movwf	indf2,c
  7788                           
  7789                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7790  0003FE  0100               	movlb	0	; () banked
  7791  000400  EE20 F00C          	lfsr	2,12
  7792  000404  0100               	movlb	0	; () banked
  7793  000406  51DC               	movf	_ic_ptr& (0+255),w,b
  7794  000408  26D9               	addwf	fsr2l,f,c
  7795  00040A  0100               	movlb	0	; () banked
  7796  00040C  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  00040E  22DA               	addwfc	fsr2h,f,c
  7798  000410  0E05               	movlw	5
  7799  000412  6EDF               	movwf	indf2,c
  7800  000414  D067               	goto	L11
  7801  000416                     i2l3238:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 205: msg_ready = 1;
  7805  000416  0100               	movlb	0	; () banked
  7806  000418  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7807  00041A  0E01               	movlw	1
  7808  00041C  0100               	movlb	0	; () banked
  7809  00041E  0100               	movlb	0	; () banked
  7810  000420  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7811  000422  0100               	movlb	0	; () banked
  7812  000424  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7813                           
  7814                           ; BSR set to: 0
  7815  000426  D05E               	goto	L11
  7816  000428                     i2l3242:
  7817                           
  7818                           ; BSR set to: 0
  7819  000428  0100               	movlb	0	; () banked
  7820  00042A  0100               	movlb	0	; () banked
  7821  00042C  51C8               	movf	i2c_int_handler@data_read& (0+255),w,b
  7822  00042E  B4D8               	btfsc	status,2,c
  7823  000430  D07A               	goto	i2l285
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7827  000432  0100               	movlb	0	; () banked
  7828  000434  EE20 F00B          	lfsr	2,11
  7829  000438  0100               	movlb	0	; () banked
  7830  00043A  51DC               	movf	_ic_ptr& (0+255),w,b
  7831  00043C  26D9               	addwf	fsr2l,f,c
  7832  00043E  0100               	movlb	0	; () banked
  7833  000440  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  000442  22DA               	addwfc	fsr2h,f,c
  7835  000444  2ADF               	incf	indf2,f,c
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7839  000446  AAC7               	btfss	4039,5,c	;volatile
  7840  000448  D027               	goto	i2l313
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7844  00044A  0100               	movlb	0	; () banked
  7845  00044C  EE20 F00A          	lfsr	2,10
  7846  000450  0100               	movlb	0	; () banked
  7847  000452  51DC               	movf	_ic_ptr& (0+255),w,b
  7848  000454  26D9               	addwf	fsr2l,f,c
  7849  000456  0100               	movlb	0	; () banked
  7850  000458  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7851  00045A  22DA               	addwfc	fsr2h,f,c
  7852  00045C  50DF               	movf	indf2,w,c
  7853  00045E  0100               	movlb	0	; () banked
  7854  000460  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7855  000462  0100               	movlb	0	; () banked
  7856  000464  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7857  000466  0D01               	mullw	1
  7858  000468  50F3               	movf	prodl,w,c
  7859  00046A  0100               	movlb	0	; () banked
  7860  00046C  0100               	movlb	0	; () banked
  7861  00046E  25DC               	addwf	_ic_ptr& (0+255),w,b
  7862  000470  6ED9               	movwf	fsr2l,c
  7863  000472  50F4               	movf	prodh,w,c
  7864  000474  0100               	movlb	0	; () banked
  7865  000476  0100               	movlb	0	; () banked
  7866  000478  21DD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7867  00047A  6EDA               	movwf	fsr2h,c
  7868  00047C  0100               	movlb	0	; () banked
  7869  00047E  C0C5  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7873  000482  0100               	movlb	0	; () banked
  7874  000484  EE20 F00A          	lfsr	2,10
  7875  000488  0100               	movlb	0	; () banked
  7876  00048A  51DC               	movf	_ic_ptr& (0+255),w,b
  7877  00048C  26D9               	addwf	fsr2l,f,c
  7878  00048E  0100               	movlb	0	; () banked
  7879  000490  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7880  000492  22DA               	addwfc	fsr2h,f,c
  7881  000494  2ADF               	incf	indf2,f,c
  7882                           
  7883                           ;my_i2c.c: 213: } else {
  7884  000496  D047               	goto	i2l285
  7885  000498                     i2l313:
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7889  000498  A4C7               	btfss	4039,2,c	;volatile
  7890  00049A  D6B6               	goto	i2l3194
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7894  00049C  0100               	movlb	0	; () banked
  7895  00049E  EE20 F00C          	lfsr	2,12
  7896  0004A2  0100               	movlb	0	; () banked
  7897  0004A4  51DC               	movf	_ic_ptr& (0+255),w,b
  7898  0004A6  26D9               	addwf	fsr2l,f,c
  7899  0004A8  0100               	movlb	0	; () banked
  7900  0004AA  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7901  0004AC  22DA               	addwfc	fsr2h,f,c
  7902  0004AE  0E08               	movlw	8
  7903  0004B0  6EDF               	movwf	indf2,c
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;my_i2c.c: 216: msg_ready = 1;
  7907  0004B2  0100               	movlb	0	; () banked
  7908  0004B4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7909  0004B6  0E01               	movlw	1
  7910  0004B8  0100               	movlb	0	; () banked
  7911  0004BA  0100               	movlb	0	; () banked
  7912  0004BC  6FC7               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7913  0004BE  0100               	movlb	0	; () banked
  7914  0004C0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7915  0004C2                     L12:
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;my_i2c.c: 217: msg_to_send = 1;
  7919  0004C2  0100               	movlb	0	; () banked
  7920  0004C4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7921  0004C6  0E01               	movlw	1
  7922  0004C8  0100               	movlb	0	; () banked
  7923  0004CA  0100               	movlb	0	; () banked
  7924  0004CC  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7925  0004CE  0100               	movlb	0	; () banked
  7926  0004D0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;my_i2c.c: 219: data_read = 0;
  7930  0004D2  0100               	movlb	0	; () banked
  7931  0004D4  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  7932  0004D6  0E00               	movlw	0
  7933  0004D8  0100               	movlb	0	; () banked
  7934  0004DA  0100               	movlb	0	; () banked
  7935  0004DC  6FC8               	movwf	i2c_int_handler@data_read& (0+255),b
  7936  0004DE                     L9:
  7937  0004DE  0100               	movlb	0	; () banked
  7938  0004E0  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  7939                           
  7940                           ;my_i2c.c: 220: } else {
  7941  0004E2  D021               	goto	i2l285
  7942  0004E4                     L11:
  7943                           
  7944                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7945  0004E4  0100               	movlb	0	; () banked
  7946  0004E6  EE20 F00C          	lfsr	2,12
  7947  0004EA  0100               	movlb	0	; () banked
  7948  0004EC  51DC               	movf	_ic_ptr& (0+255),w,b
  7949  0004EE  26D9               	addwf	fsr2l,f,c
  7950  0004F0  0100               	movlb	0	; () banked
  7951  0004F2  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7952  0004F4  22DA               	addwfc	fsr2h,f,c
  7953  0004F6  0E05               	movlw	5
  7954  0004F8  D731               	goto	L8
  7955  0004FA                     i2l3264:
  7956                           
  7957                           ; BSR set to: 0
  7958  0004FA  0100               	movlb	0	; () banked
  7959  0004FC  EE20 F00C          	lfsr	2,12
  7960  000500  0100               	movlb	0	; () banked
  7961  000502  51DC               	movf	_ic_ptr& (0+255),w,b
  7962  000504  26D9               	addwf	fsr2l,f,c
  7963  000506  0100               	movlb	0	; () banked
  7964  000508  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  7965  00050A  22DA               	addwfc	fsr2h,f,c
  7966  00050C  50DF               	movf	indf2,w,c
  7967                           
  7968                           ; Switch size 1, requested type "space"
  7969                           ; Number of cases is 4, Range of values is 5 to 8
  7970                           ; switch strategies available:
  7971                           ; Name         Instructions Cycles
  7972                           ; simple_byte           13     7 (average)
  7973                           ;	Chosen strategy is simple_byte
  7974  00050E  0A05               	xorlw	5	; case 5
  7975  000510  B4D8               	btfsc	status,2,c
  7976  000512  D63C               	goto	i2l287
  7977  000514  0A03               	xorlw	3	; case 6
  7978  000516  B4D8               	btfsc	status,2,c
  7979  000518  D65B               	goto	i2l291
  7980  00051A  0A01               	xorlw	1	; case 7
  7981  00051C  B4D8               	btfsc	status,2,c
  7982  00051E  D720               	goto	i2l305
  7983  000520  0A0F               	xorlw	15	; case 8
  7984  000522  B4D8               	btfsc	status,2,c
  7985  000524  D6D1               	goto	i2l3214
  7986  000526                     i2l285:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;my_i2c.c: 230: }
  7990                           ;my_i2c.c: 233: if (data_read || data_written) {
  7991  000526  0100               	movlb	0	; () banked
  7992  000528  0100               	movlb	0	; () banked
  7993  00052A  67C8               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7994  00052C  D005               	goto	i2l319
  7995                           
  7996                           ; BSR set to: 0
  7997  00052E  0100               	movlb	0	; () banked
  7998  000530  0100               	movlb	0	; () banked
  7999  000532  51C3               	movf	i2c_int_handler@data_written& (0+255),w,b
  8000  000534  B4D8               	btfsc	status,2,c
  8001  000536  D002               	goto	i2l3270
  8002  000538                     i2l319:
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8006  000538  A8C6               	btfss	4038,4,c	;volatile
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8010  00053A  88C6               	bsf	4038,4,c	;volatile
  8011  00053C                     i2l3270:
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;my_i2c.c: 237: }
  8015                           ;my_i2c.c: 238: }
  8016                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8017  00053C  0100               	movlb	0	; () banked
  8018  00053E  EE20 F00A          	lfsr	2,10
  8019  000542  0100               	movlb	0	; () banked
  8020  000544  51DC               	movf	_ic_ptr& (0+255),w,b
  8021  000546  26D9               	addwf	fsr2l,f,c
  8022  000548  0100               	movlb	0	; () banked
  8023  00054A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8024  00054C  22DA               	addwfc	fsr2h,f,c
  8025  00054E  0E08               	movlw	8
  8026  000550  64DF               	cpfsgt	indf2,c
  8027  000552  D024               	goto	i2l3276
  8028                           
  8029                           ; BSR set to: 0
  8030  000554  0100               	movlb	0	; () banked
  8031  000556  0100               	movlb	0	; () banked
  8032  000558  67C7               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8033  00055A  D020               	goto	i2l3276
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8037  00055C  0100               	movlb	0	; () banked
  8038  00055E  EE20 F00C          	lfsr	2,12
  8039  000562  0100               	movlb	0	; () banked
  8040  000564  51DC               	movf	_ic_ptr& (0+255),w,b
  8041  000566  26D9               	addwf	fsr2l,f,c
  8042  000568  0100               	movlb	0	; () banked
  8043  00056A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8044  00056C  22DA               	addwfc	fsr2h,f,c
  8045  00056E  0E05               	movlw	5
  8046  000570  6EDF               	movwf	indf2,c
  8047                           
  8048                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8049  000572  0100               	movlb	0	; () banked
  8050  000574  EE20 F00E          	lfsr	2,14
  8051  000578  0100               	movlb	0	; () banked
  8052  00057A  51DC               	movf	_ic_ptr& (0+255),w,b
  8053  00057C  26D9               	addwf	fsr2l,f,c
  8054  00057E  0100               	movlb	0	; () banked
  8055  000580  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8056  000582  22DA               	addwfc	fsr2h,f,c
  8057  000584  2ADF               	incf	indf2,f,c
  8058                           
  8059                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8060  000586  0100               	movlb	0	; () banked
  8061  000588  EE20 F00D          	lfsr	2,13
  8062  00058C  0100               	movlb	0	; () banked
  8063  00058E  51DC               	movf	_ic_ptr& (0+255),w,b
  8064  000590  26D9               	addwf	fsr2l,f,c
  8065  000592  0100               	movlb	0	; () banked
  8066  000594  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8067  000596  22DA               	addwfc	fsr2h,f,c
  8068  000598  0E07               	movlw	7
  8069  00059A  6EDF               	movwf	indf2,c
  8070  00059C                     i2l3276:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;my_i2c.c: 245: }
  8074                           ;my_i2c.c: 247: if (msg_ready) {
  8075  00059C  0100               	movlb	0	; () banked
  8076  00059E  0100               	movlb	0	; () banked
  8077  0005A0  51C7               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8078  0005A2  B4D8               	btfsc	status,2,c
  8079  0005A4  D048               	goto	i2l3284
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8083  0005A6  0100               	movlb	0	; () banked
  8084  0005A8  EE20 F00B          	lfsr	2,11
  8085  0005AC  0100               	movlb	0	; () banked
  8086  0005AE  51DC               	movf	_ic_ptr& (0+255),w,b
  8087  0005B0  26D9               	addwf	fsr2l,f,c
  8088  0005B2  0100               	movlb	0	; () banked
  8089  0005B4  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8090  0005B6  22DA               	addwfc	fsr2h,f,c
  8091  0005B8  0100               	movlb	0	; () banked
  8092  0005BA  EE10 F00A          	lfsr	1,10
  8093  0005BE  0100               	movlb	0	; () banked
  8094  0005C0  51DC               	movf	_ic_ptr& (0+255),w,b
  8095  0005C2  26E1               	addwf	fsr1l,f,c
  8096  0005C4  0100               	movlb	0	; () banked
  8097  0005C6  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8098  0005C8  22E2               	addwfc	fsr1h,f,c
  8099  0005CA  50E7               	movf	indf1,w,c
  8100  0005CC  0100               	movlb	0	; () banked
  8101  0005CE  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8102  0005D0  0100               	movlb	0	; () banked
  8103  0005D2  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8104  0005D4  0D01               	mullw	1
  8105  0005D6  50F3               	movf	prodl,w,c
  8106  0005D8  0100               	movlb	0	; () banked
  8107  0005DA  0100               	movlb	0	; () banked
  8108  0005DC  25DC               	addwf	_ic_ptr& (0+255),w,b
  8109  0005DE  6EE1               	movwf	fsr1l,c
  8110  0005E0  50F4               	movf	prodh,w,c
  8111  0005E2  0100               	movlb	0	; () banked
  8112  0005E4  0100               	movlb	0	; () banked
  8113  0005E6  21DD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8114  0005E8  6EE2               	movwf	fsr1h,c
  8115  0005EA  CFDF FFE7          	movff	indf2,indf1
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8119  0005EE  0100               	movlb	0	; () banked
  8120  0005F0  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8121  0005F2  0E28               	movlw	40
  8122  0005F4  0100               	movlb	0	; () banked
  8123  0005F6  0100               	movlb	0	; () banked
  8124  0005F8  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8125  0005FA  0100               	movlb	0	; () banked
  8126  0005FC  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8127  0005FE  0100               	movlb	0	; () banked
  8128  000600  0100               	movlb	0	; () banked
  8129  000602  C0DD  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8130  000606  0100               	movlb	0	; () banked
  8131  000608  0100               	movlb	0	; () banked
  8132  00060A  C0DC  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8133  00060E  0100               	movlb	0	; () banked
  8134  000610  EE20 F00A          	lfsr	2,10
  8135  000614  0100               	movlb	0	; () banked
  8136  000616  51DC               	movf	_ic_ptr& (0+255),w,b
  8137  000618  26D9               	addwf	fsr2l,f,c
  8138  00061A  0100               	movlb	0	; () banked
  8139  00061C  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8140  00061E  22DA               	addwfc	fsr2h,f,c
  8141  000620  50DF               	movf	indf2,w,c
  8142  000622  0100               	movlb	0	; () banked
  8143  000624  6FBF               	movwf	(??_i2c_int_handler+1)& (0+255),b
  8144  000626  0100               	movlb	0	; () banked
  8145  000628  29BF               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  8146  00062A  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8147                           
  8148                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8149  00062E  0100               	movlb	0	; () banked
  8150  000630  EE20 F00A          	lfsr	2,10
  8151  000634  D04B               	goto	L10
  8152  000636                     i2l3284:
  8153                           
  8154                           ; BSR set to: 0
  8155  000636  0100               	movlb	0	; () banked
  8156  000638  EE20 F00E          	lfsr	2,14
  8157  00063C  0100               	movlb	0	; () banked
  8158  00063E  51DC               	movf	_ic_ptr& (0+255),w,b
  8159  000640  26D9               	addwf	fsr2l,f,c
  8160  000642  0100               	movlb	0	; () banked
  8161  000644  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8162  000646  22DA               	addwfc	fsr2h,f,c
  8163  000648  50DF               	movf	indf2,w,c
  8164  00064A  B4D8               	btfsc	status,2,c
  8165  00064C  D047               	goto	i2l3292
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8169  00064E  0100               	movlb	0	; () banked
  8170  000650  EE20 F00E          	lfsr	2,14
  8171  000654  0100               	movlb	0	; () banked
  8172  000656  51DC               	movf	_ic_ptr& (0+255),w,b
  8173  000658  26D9               	addwf	fsr2l,f,c
  8174  00065A  0100               	movlb	0	; () banked
  8175  00065C  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8176  00065E  22DA               	addwfc	fsr2h,f,c
  8177  000660  50DF               	movf	indf2,w,c
  8178  000662  0100               	movlb	0	; () banked
  8179  000664  0100               	movlb	0	; () banked
  8180  000666  6FC0               	movwf	i2c_int_handler@error_buf& (0+255),b
  8181                           
  8182                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8183  000668  0100               	movlb	0	; () banked
  8184  00066A  EE20 F00D          	lfsr	2,13
  8185  00066E  0100               	movlb	0	; () banked
  8186  000670  51DC               	movf	_ic_ptr& (0+255),w,b
  8187  000672  26D9               	addwf	fsr2l,f,c
  8188  000674  0100               	movlb	0	; () banked
  8189  000676  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8190  000678  22DA               	addwfc	fsr2h,f,c
  8191  00067A  50DF               	movf	indf2,w,c
  8192  00067C  0100               	movlb	0	; () banked
  8193  00067E  0100               	movlb	0	; () banked
  8194  000680  6FC1               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8195                           
  8196                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8197  000682  0100               	movlb	0	; () banked
  8198  000684  EE20 F00B          	lfsr	2,11
  8199  000688  0100               	movlb	0	; () banked
  8200  00068A  51DC               	movf	_ic_ptr& (0+255),w,b
  8201  00068C  26D9               	addwf	fsr2l,f,c
  8202  00068E  0100               	movlb	0	; () banked
  8203  000690  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8204  000692  22DA               	addwfc	fsr2h,f,c
  8205  000694  50DF               	movf	indf2,w,c
  8206  000696  0100               	movlb	0	; () banked
  8207  000698  0100               	movlb	0	; () banked
  8208  00069A  6FC2               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8212  00069C  0100               	movlb	0	; () banked
  8213  00069E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8214  0006A0  0E29               	movlw	41
  8215  0006A2  0100               	movlb	0	; () banked
  8216  0006A4  0100               	movlb	0	; () banked
  8217  0006A6  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8218  0006A8  0100               	movlb	0	; () banked
  8219  0006AA  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8220  0006AC  0100               	movlb	0	; () banked
  8221  0006AE  0E00               	movlw	high i2c_int_handler@error_buf
  8222  0006B0  0100               	movlb	0	; () banked
  8223  0006B2  0100               	movlb	0	; () banked
  8224  0006B4  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8225  0006B6  0100               	movlb	0	; () banked
  8226  0006B8  0EC0               	movlw	low i2c_int_handler@error_buf
  8227  0006BA  0100               	movlb	0	; () banked
  8228  0006BC  0100               	movlb	0	; () banked
  8229  0006BE  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8230  0006C0  0E03               	movlw	3
  8231  0006C2  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8232                           
  8233                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8234  0006C6  0100               	movlb	0	; () banked
  8235  0006C8  EE20 F00E          	lfsr	2,14
  8236  0006CC                     L10:
  8237  0006CC  0100               	movlb	0	; () banked
  8238  0006CE  51DC               	movf	_ic_ptr& (0+255),w,b
  8239  0006D0  26D9               	addwf	fsr2l,f,c
  8240  0006D2  0100               	movlb	0	; () banked
  8241  0006D4  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8242  0006D6  22DA               	addwfc	fsr2h,f,c
  8243  0006D8  0E00               	movlw	0
  8244  0006DA  6EDF               	movwf	indf2,c
  8245  0006DC                     i2l3292:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;my_i2c.c: 257: }
  8249                           ;my_i2c.c: 258: if (msg_to_send) {
  8250  0006DC  0100               	movlb	0	; () banked
  8251  0006DE  0100               	movlb	0	; () banked
  8252  0006E0  51C6               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8253  0006E2  B4D8               	btfsc	status,2,c
  8254  0006E4  0012               	return	
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8258  0006E6  0100               	movlb	0	; () banked
  8259  0006E8  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8260  0006EA  0E2A               	movlw	42
  8261  0006EC  0100               	movlb	0	; () banked
  8262  0006EE  0100               	movlb	0	; () banked
  8263  0006F0  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8264  0006F2  0100               	movlb	0	; () banked
  8265  0006F4  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8266  0006F6  0100               	movlb	0	; () banked
  8267  0006F8  0100               	movlb	0	; () banked
  8268  0006FA  C0DD  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8269  0006FE  0100               	movlb	0	; () banked
  8270  000700  0100               	movlb	0	; () banked
  8271  000702  C0DC  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8272  000706  0E00               	movlw	0
  8273  000708  ECE3  F00D         	call	_ToMainHigh_sendmsg
  8274                           
  8275                           ;my_i2c.c: 261: msg_to_send = 0;
  8276  00070C  0100               	movlb	0	; () banked
  8277  00070E  6FBE               	movwf	??_i2c_int_handler& (0+255),b
  8278  000710  0E00               	movlw	0
  8279  000712  0100               	movlb	0	; () banked
  8280  000714  0100               	movlb	0	; () banked
  8281  000716  6FC6               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8282  000718  0100               	movlb	0	; () banked
  8283  00071A  51BE               	movf	??_i2c_int_handler& (0+255),w,b
  8284  00071C  0012               	return	
  8285  00071E                     __end_of_i2c_int_handler:
  8286                           	opt stack 0
  8287                           pclatu	equ	0xFFB
  8288                           pclath	equ	0xFFA
  8289                           tblptru	equ	0xFF8
  8290                           tblptrh	equ	0xFF7
  8291                           tblptrl	equ	0xFF6
  8292                           tablat	equ	0xFF5
  8293                           prodh	equ	0xFF4
  8294                           prodl	equ	0xFF3
  8295                           intcon	equ	0xFF2
  8296                           postinc0	equ	0xFEE
  8297                           fsr0h	equ	0xFEA
  8298                           fsr0l	equ	0xFE9
  8299                           wreg	equ	0xFE8
  8300                           indf1	equ	0xFE7
  8301                           fsr1h	equ	0xFE2
  8302                           fsr1l	equ	0xFE1
  8303                           bsr	equ	0xFE0
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function _handle_start *****************
  8312 ;; Defined at:
  8313 ;;		line 71 in file "src/my_i2c.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  data_read       1    wreg     unsigned char 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  data_read       1   52[COMRAM] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;		None               void
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8327 ;;      Params:         0       0       0       0       0
  8328 ;;      Locals:         1       0       0       0       0
  8329 ;;      Temps:          0       0       0       0       0
  8330 ;;      Totals:         1       0       0       0       0
  8331 ;;Total ram usage:        1 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_i2c_int_handler
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text51
  8341  00106C                     __ptext51:
  8342                           	opt stack 0
  8343  00106C                     _handle_start:
  8344                           	opt stack 19
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;incstack = 0
  8348                           ;handle_start@data_read stored from wreg
  8349  00106C  CFE8 F035          	movff	wreg,handle_start@data_read
  8350                           
  8351                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8352  001070  0100               	movlb	0	; () banked
  8353  001072  EE20 F00B          	lfsr	2,11
  8354  001076  0100               	movlb	0	; () banked
  8355  001078  51DC               	movf	_ic_ptr& (0+255),w,b
  8356  00107A  26D9               	addwf	fsr2l,f,c
  8357  00107C  0100               	movlb	0	; () banked
  8358  00107E  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8359  001080  22DA               	addwfc	fsr2h,f,c
  8360  001082  0E01               	movlw	1
  8361  001084  6EDF               	movwf	indf2,c
  8362                           
  8363                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8364  001086  0100               	movlb	0	; () banked
  8365  001088  EE20 F00A          	lfsr	2,10
  8366  00108C  0100               	movlb	0	; () banked
  8367  00108E  51DC               	movf	_ic_ptr& (0+255),w,b
  8368  001090  26D9               	addwf	fsr2l,f,c
  8369  001092  0100               	movlb	0	; () banked
  8370  001094  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8371  001096  22DA               	addwfc	fsr2h,f,c
  8372  001098  0E00               	movlw	0
  8373  00109A  6EDF               	movwf	indf2,c
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;my_i2c.c: 75: if (data_read) {
  8377  00109C  5035               	movf	handle_start@data_read,w,c
  8378  00109E  B4D8               	btfsc	status,2,c
  8379  0010A0  D03D               	goto	i2l3728
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8383  0010A2  AAC7               	btfss	4039,5,c	;volatile
  8384  0010A4  D021               	goto	i2l275
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8388  0010A6  0100               	movlb	0	; () banked
  8389  0010A8  EE20 F00C          	lfsr	2,12
  8390  0010AC  0100               	movlb	0	; () banked
  8391  0010AE  51DC               	movf	_ic_ptr& (0+255),w,b
  8392  0010B0  26D9               	addwf	fsr2l,f,c
  8393  0010B2  0100               	movlb	0	; () banked
  8394  0010B4  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8395  0010B6  22DA               	addwfc	fsr2h,f,c
  8396  0010B8  0E05               	movlw	5
  8397  0010BA  6EDF               	movwf	indf2,c
  8398                           
  8399                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8400  0010BC  0100               	movlb	0	; () banked
  8401  0010BE  EE20 F00E          	lfsr	2,14
  8402  0010C2  0100               	movlb	0	; () banked
  8403  0010C4  51DC               	movf	_ic_ptr& (0+255),w,b
  8404  0010C6  26D9               	addwf	fsr2l,f,c
  8405  0010C8  0100               	movlb	0	; () banked
  8406  0010CA  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8407  0010CC  22DA               	addwfc	fsr2h,f,c
  8408  0010CE  2ADF               	incf	indf2,f,c
  8409                           
  8410                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8411  0010D0  0100               	movlb	0	; () banked
  8412  0010D2  EE20 F00D          	lfsr	2,13
  8413  0010D6  0100               	movlb	0	; () banked
  8414  0010D8  51DC               	movf	_ic_ptr& (0+255),w,b
  8415  0010DA  26D9               	addwf	fsr2l,f,c
  8416  0010DC  0100               	movlb	0	; () banked
  8417  0010DE  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8418  0010E0  22DA               	addwfc	fsr2h,f,c
  8419  0010E2  0E05               	movlw	5
  8420  0010E4  6EDF               	movwf	indf2,c
  8421                           
  8422                           ;my_i2c.c: 82: } else {
  8423  0010E6  0012               	return	
  8424  0010E8                     i2l275:
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8428  0010E8  A4C7               	btfss	4039,2,c	;volatile
  8429  0010EA  D00C               	goto	i2l3726
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8433  0010EC  0100               	movlb	0	; () banked
  8434  0010EE  EE20 F00C          	lfsr	2,12
  8435  0010F2  0100               	movlb	0	; () banked
  8436  0010F4  51DC               	movf	_ic_ptr& (0+255),w,b
  8437  0010F6  26D9               	addwf	fsr2l,f,c
  8438  0010F8  0100               	movlb	0	; () banked
  8439  0010FA  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8440  0010FC  22DA               	addwfc	fsr2h,f,c
  8441  0010FE  0E08               	movlw	8
  8442  001100  6EDF               	movwf	indf2,c
  8443                           
  8444                           ;my_i2c.c: 85: } else {
  8445  001102  0012               	return	
  8446  001104                     i2l3726:
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8450  001104  0100               	movlb	0	; () banked
  8451  001106  EE20 F00C          	lfsr	2,12
  8452  00110A  0100               	movlb	0	; () banked
  8453  00110C  51DC               	movf	_ic_ptr& (0+255),w,b
  8454  00110E  26D9               	addwf	fsr2l,f,c
  8455  001110  0100               	movlb	0	; () banked
  8456  001112  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8457  001114  22DA               	addwfc	fsr2h,f,c
  8458  001116  0E07               	movlw	7
  8459  001118  6EDF               	movwf	indf2,c
  8460  00111A  0012               	return	
  8461  00111C                     i2l3728:
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8465  00111C  0100               	movlb	0	; () banked
  8466  00111E  EE20 F00C          	lfsr	2,12
  8467  001122  0100               	movlb	0	; () banked
  8468  001124  51DC               	movf	_ic_ptr& (0+255),w,b
  8469  001126  26D9               	addwf	fsr2l,f,c
  8470  001128  0100               	movlb	0	; () banked
  8471  00112A  51DD               	movf	(_ic_ptr+1)& (0+255),w,b
  8472  00112C  22DA               	addwfc	fsr2h,f,c
  8473  00112E  0E06               	movlw	6
  8474  001130  6EDF               	movwf	indf2,c
  8475  001132  0012               	return	
  8476  001134                     __end_of_handle_start:
  8477                           	opt stack 0
  8478                           pclatu	equ	0xFFB
  8479                           pclath	equ	0xFFA
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           indf1	equ	0xFE7
  8492                           fsr1h	equ	0xFE2
  8493                           fsr1l	equ	0xFE1
  8494                           bsr	equ	0xFE0
  8495                           indf2	equ	0xFDF
  8496                           postinc2	equ	0xFDE
  8497                           postdec2	equ	0xFDD
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function _ToMainHigh_sendmsg *****************
  8503 ;; Defined at:
  8504 ;;		line 126 in file "src/messages.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  length          1    wreg     unsigned char 
  8507 ;;  msgtype         1    5[BANK0 ] unsigned char 
  8508 ;;  data            2    6[BANK0 ] PTR void 
  8509 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  length          1   69[COMRAM] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      char 
  8514 ;; Registers used:
  8515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8521 ;;      Params:         0       3       0       0       0
  8522 ;;      Locals:         1       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0
  8524 ;;      Totals:         1       3       0       0       0
  8525 ;;Total ram usage:        4 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    2
  8528 ;; This function calls:
  8529 ;;		i2_send_msg
  8530 ;; This function is called by:
  8531 ;;		_i2c_int_handler
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text52
  8536  001BC6                     __ptext52:
  8537                           	opt stack 0
  8538  001BC6                     _ToMainHigh_sendmsg:
  8539                           	opt stack 17
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;incstack = 0
  8543                           ;ToMainHigh_sendmsg@length stored from wreg
  8544  001BC6  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  8545                           
  8546                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8547                           ;	Return value of _ToMainHigh_sendmsg is never used
  8548  001BCA  0101               	movlb	1	; () banked
  8549  001BCC  0E01               	movlw	high _ToMainHigh_MQ
  8550  001BCE  6E40               	movwf	i2send_msg@qptr+1,c
  8551  001BD0  0101               	movlb	1	; () banked
  8552  001BD2  0E6C               	movlw	low _ToMainHigh_MQ
  8553  001BD4  6E3F               	movwf	i2send_msg@qptr,c
  8554  001BD6  C046  F041         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8555  001BDA  C0BB  F042         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8556  001BDE  0100               	movlb	0	; () banked
  8557  001BE0  C0BD  F044         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8558  001BE4  0100               	movlb	0	; () banked
  8559  001BE6  C0BC  F043         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8560  001BEA  ECCD  F007         	call	i2_send_msg	;wreg free
  8561  001BEE  0012               	return	
  8562  001BF0                     __end_of_ToMainHigh_sendmsg:
  8563                           	opt stack 0
  8564                           pclatu	equ	0xFFB
  8565                           pclath	equ	0xFFA
  8566                           tblptru	equ	0xFF8
  8567                           tblptrh	equ	0xFF7
  8568                           tblptrl	equ	0xFF6
  8569                           tablat	equ	0xFF5
  8570                           prodh	equ	0xFF4
  8571                           prodl	equ	0xFF3
  8572                           intcon	equ	0xFF2
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           bsr	equ	0xFE0
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function i2_send_msg *****************
  8589 ;; Defined at:
  8590 ;;		line 24 in file "src/messages.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  qptr            2   62[COMRAM] PTR struct __msg_queue
  8593 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8594 ;;  length          1   64[COMRAM] unsigned char 
  8595 ;;  msgtype         1   65[COMRAM] unsigned char 
  8596 ;;  data            2   66[COMRAM] PTR void 
  8597 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), main@test(2), 
  8598 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8601 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8602 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8603 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8604 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      char 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8614 ;;      Params:         6       0       0       0       0
  8615 ;;      Locals:         0       5       0       0       0
  8616 ;;      Temps:          1       0       0       0       0
  8617 ;;      Totals:         7       5       0       0       0
  8618 ;;Total ram usage:       12 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    1
  8621 ;; This function calls:
  8622 ;;		i2_memcpy
  8623 ;; This function is called by:
  8624 ;;		_ToMainHigh_sendmsg
  8625 ;;		i2_ToMainLow_sendmsg
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text53
  8630  000F9A                     __ptext53:
  8631                           	opt stack 0
  8632  000F9A                     i2_send_msg:
  8633                           	opt stack 16
  8634                           
  8635                           ;messages.c: 25: unsigned char slot;
  8636                           ;messages.c: 27: msg *qmsg;
  8637                           ;messages.c: 28: size_t tlength = length;
  8638                           
  8639                           ;incstack = 0
  8640  000F9A  0100               	movlb	0	; () banked
  8641  000F9C  C041  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8642  000FA0  0100               	movlb	0	; () banked
  8643  000FA2  0100               	movlb	0	; () banked
  8644  000FA4  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8648  000FA6  EE20 F034          	lfsr	2,52
  8649  000FAA  503F               	movf	i2send_msg@qptr,w,c
  8650  000FAC  26D9               	addwf	fsr2l,f,c
  8651  000FAE  5040               	movf	i2send_msg@qptr+1,w,c
  8652  000FB0  22DA               	addwfc	fsr2h,f,c
  8653  000FB2  50DF               	movf	indf2,w,c
  8654  000FB4  0100               	movlb	0	; () banked
  8655  000FB6  0100               	movlb	0	; () banked
  8656  000FB8  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8660  000FBA  0100               	movlb	0	; () banked
  8661  000FBC  0100               	movlb	0	; () banked
  8662  000FBE  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8663  000FC0  0D0D               	mullw	13
  8664  000FC2  50F3               	movf	prodl,w,c
  8665  000FC4  243F               	addwf	i2send_msg@qptr,w,c
  8666  000FC6  0100               	movlb	0	; () banked
  8667  000FC8  0100               	movlb	0	; () banked
  8668  000FCA  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8669  000FCC  50F4               	movf	prodh,w,c
  8670  000FCE  2040               	addwfc	i2send_msg@qptr+1,w,c
  8671  000FD0  0100               	movlb	0	; () banked
  8672  000FD2  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;messages.c: 41: if (qmsg->full != 0) {
  8676  000FD4  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8677  000FD8  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8678  000FDC  50DF               	movf	indf2,w,c
  8679  000FDE  B4D8               	btfsc	status,2,c
  8680  000FE0  D002               	goto	i2l3774
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;messages.c: 42: return (-1);
  8684  000FE2  0EFF               	movlw	255
  8685  000FE4  0012               	return	
  8686  000FE6                     i2l3774:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;messages.c: 43: }
  8690                           ;messages.c: 46: qmsg->length = length;
  8691  000FE6  0100               	movlb	0	; () banked
  8692  000FE8  EE20 F001          	lfsr	2,1
  8693  000FEC  0100               	movlb	0	; () banked
  8694  000FEE  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8695  000FF0  26D9               	addwf	fsr2l,f,c
  8696  000FF2  0100               	movlb	0	; () banked
  8697  000FF4  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8698  000FF6  22DA               	addwfc	fsr2h,f,c
  8699  000FF8  C041  FFDF         	movff	i2send_msg@length,indf2
  8700                           
  8701                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8702  000FFC  0100               	movlb	0	; () banked
  8703  000FFE  EE20 F002          	lfsr	2,2
  8704  001002  0100               	movlb	0	; () banked
  8705  001004  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8706  001006  26D9               	addwf	fsr2l,f,c
  8707  001008  0100               	movlb	0	; () banked
  8708  00100A  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8709  00100C  22DA               	addwfc	fsr2h,f,c
  8710  00100E  C042  FFDF         	movff	i2send_msg@msgtype,indf2
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8714  001012  0E03               	movlw	3
  8715  001014  0100               	movlb	0	; () banked
  8716  001016  0100               	movlb	0	; () banked
  8717  001018  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8718  00101A  6E35               	movwf	i2memcpy@d1,c
  8719  00101C  0E00               	movlw	0
  8720  00101E  0100               	movlb	0	; () banked
  8721  001020  0100               	movlb	0	; () banked
  8722  001022  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8723  001024  6E36               	movwf	i2memcpy@d1+1,c
  8724  001026  C044  F038         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8725  00102A  C043  F037         	movff	i2send_msg@data,i2memcpy@s1
  8726  00102E  C0B6  F039         	movff	i2send_msg@tlength,i2memcpy@n
  8727  001032  C0B7  F03A         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8728  001036  ECC3  F00C         	call	i2_memcpy	;wreg free
  8729                           
  8730                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8731  00103A  EE20 F034          	lfsr	2,52
  8732  00103E  503F               	movf	i2send_msg@qptr,w,c
  8733  001040  26D9               	addwf	fsr2l,f,c
  8734  001042  5040               	movf	i2send_msg@qptr+1,w,c
  8735  001044  22DA               	addwfc	fsr2h,f,c
  8736  001046  EE10 F034          	lfsr	1,52
  8737  00104A  503F               	movf	i2send_msg@qptr,w,c
  8738  00104C  26E1               	addwf	fsr1l,f,c
  8739  00104E  5040               	movf	i2send_msg@qptr+1,w,c
  8740  001050  22E2               	addwfc	fsr1h,f,c
  8741  001052  50E7               	movf	indf1,w,c
  8742  001054  6E45               	movwf	??i2_send_msg& (0+255),c
  8743  001056  2845               	incf	??i2_send_msg,w,c
  8744  001058  0B03               	andlw	3
  8745  00105A  6EDF               	movwf	indf2,c
  8746                           
  8747                           ;messages.c: 59: qmsg->full = 1;
  8748  00105C  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8749  001060  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8750  001064  0E01               	movlw	1
  8751  001066  6EDF               	movwf	indf2,c
  8752                           
  8753                           ;messages.c: 60: return (1);
  8754  001068  0E01               	movlw	1
  8755  00106A  0012               	return	
  8756  00106C                     __end_ofi2_send_msg:
  8757                           	opt stack 0
  8758                           pclatu	equ	0xFFB
  8759                           pclath	equ	0xFFA
  8760                           tblptru	equ	0xFF8
  8761                           tblptrh	equ	0xFF7
  8762                           tblptrl	equ	0xFF6
  8763                           tablat	equ	0xFF5
  8764                           prodh	equ	0xFF4
  8765                           prodl	equ	0xFF3
  8766                           intcon	equ	0xFF2
  8767                           postinc0	equ	0xFEE
  8768                           fsr0h	equ	0xFEA
  8769                           fsr0l	equ	0xFE9
  8770                           wreg	equ	0xFE8
  8771                           indf1	equ	0xFE7
  8772                           fsr1h	equ	0xFE2
  8773                           fsr1l	equ	0xFE1
  8774                           bsr	equ	0xFE0
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           fsr2h	equ	0xFDA
  8779                           fsr2l	equ	0xFD9
  8780                           status	equ	0xFD8
  8781                           
  8782 ;; *************** function i2_memcpy *****************
  8783 ;; Defined at:
  8784 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  d1              2   52[COMRAM] PTR void 
  8787 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8788 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8789 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8790 ;;  s1              2   54[COMRAM] PTR const void 
  8791 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8792 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8793 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8794 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  8795 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8796 ;;  n               2   56[COMRAM] unsigned int 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  memcpy          2   60[COMRAM] PTR const unsigned char 
  8799 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8800 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8801 ;;		 -> timer0_int_handler@test(1), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8802 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@test(2), 
  8803 ;;		 -> main@uthread_data(10), main@t1thread_data(2), main@ic(28), main@uc(5), 
  8804 ;;  memcpy          2   58[COMRAM] PTR unsigned char 
  8805 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8806 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8807 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  2   52[COMRAM] PTR void 
  8810 ;; Registers used:
  8811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8817 ;;      Params:         6       0       0       0       0
  8818 ;;      Locals:         4       0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0
  8820 ;;      Totals:        10       0       0       0       0
  8821 ;;Total ram usage:       10 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		i2_send_msg
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text54
  8831  001986                     __ptext54:
  8832                           	opt stack 0
  8833  001986                     i2_memcpy:
  8834                           	opt stack 16
  8835                           
  8836                           ;incstack = 0
  8837  001986  C038  F03E         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8838  00198A  C037  F03D         	movff	i2memcpy@s1,i2memcpy@s
  8839  00198E  C036  F03C         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8840  001992  C035  F03B         	movff	i2memcpy@d1,i2memcpy@d
  8841  001996  D00E               	goto	i2l3818
  8842  001998                     i2l3812:
  8843  001998  C03D  FFD9         	movff	i2memcpy@s,fsr2l
  8844  00199C  C03E  FFDA         	movff	i2memcpy@s+1,fsr2h
  8845  0019A0  C03B  FFE1         	movff	i2memcpy@d,fsr1l
  8846  0019A4  C03C  FFE2         	movff	i2memcpy@d+1,fsr1h
  8847  0019A8  CFDF FFE7          	movff	indf2,indf1
  8848  0019AC  4A3D               	infsnz	i2memcpy@s,f,c
  8849  0019AE  2A3E               	incf	i2memcpy@s+1,f,c
  8850  0019B0  4A3B               	infsnz	i2memcpy@d,f,c
  8851  0019B2  2A3C               	incf	i2memcpy@d+1,f,c
  8852  0019B4                     i2l3818:
  8853  0019B4  0639               	decf	i2memcpy@n,f,c
  8854  0019B6  A0D8               	btfss	status,0,c
  8855  0019B8  063A               	decf	i2memcpy@n+1,f,c
  8856  0019BA  2839               	incf	i2memcpy@n& (0+255),w,c
  8857  0019BC  B4D8               	btfsc	status,2,c
  8858  0019BE  283A               	incf	(i2memcpy@n+1)& (0+255),w,c
  8859  0019C0  B4D8               	btfsc	status,2,c
  8860                           
  8861                           ;	Return value of i2_memcpy is never used
  8862  0019C2  0012               	return	
  8863  0019C4  D7E9               	goto	i2l3812
  8864  0019C6                     __end_ofi2_memcpy:
  8865                           	opt stack 0
  8866                           pclatu	equ	0xFFB
  8867                           pclath	equ	0xFFA
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           intcon	equ	0xFF2
  8875                           postinc0	equ	0xFEE
  8876                           fsr0h	equ	0xFEA
  8877                           fsr0l	equ	0xFE9
  8878                           wreg	equ	0xFE8
  8879                           indf1	equ	0xFE7
  8880                           fsr1h	equ	0xFE2
  8881                           fsr1l	equ	0xFE1
  8882                           bsr	equ	0xFE0
  8883                           indf2	equ	0xFDF
  8884                           postinc2	equ	0xFDE
  8885                           postdec2	equ	0xFDD
  8886                           fsr2h	equ	0xFDA
  8887                           fsr2l	equ	0xFD9
  8888                           status	equ	0xFD8
  8889                           
  8890 ;; *************** function _SleepIfOkay *****************
  8891 ;; Defined at:
  8892 ;;		line 228 in file "src/messages.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;		None               void
  8899 ;; Registers used:
  8900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8906 ;;      Params:         0       0       0       0       0
  8907 ;;      Locals:         0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0
  8909 ;;      Totals:         0       0       0       0       0
  8910 ;;Total ram usage:        0 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    2
  8913 ;; This function calls:
  8914 ;;		_enter_sleep_mode
  8915 ;;		i2_check_msg
  8916 ;;		i2_in_high_int
  8917 ;;		i2_in_low_int
  8918 ;; This function is called by:
  8919 ;;		_InterruptHandlerHigh
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text55
  8924  001762                     __ptext55:
  8925                           	opt stack 0
  8926  001762                     _SleepIfOkay:
  8927                           	opt stack 18
  8928                           
  8929                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8930                           
  8931                           ;incstack = 0
  8932  001762  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  8933  001764  D001               	goto	i2l2412
  8934  001766  0012               	return	
  8935  001768                     i2l2412:
  8936                           
  8937                           ;messages.c: 232: }
  8938                           ;messages.c: 235: if (in_low_int()) {
  8939  001768  ECA2  F00D         	call	i2_in_low_int	;wreg free
  8940  00176C  5038               	movf	?i2_in_low_int+1,w,c
  8941  00176E  1037               	iorwf	?i2_in_low_int,w,c
  8942  001770  A4D8               	btfss	status,2,c
  8943  001772  0012               	return	
  8944                           
  8945                           ;messages.c: 237: }
  8946                           ;messages.c: 240: if (!in_high_int()) {
  8947                           
  8948                           ;messages.c: 236: return;
  8949  001774  ECAD  F00E         	call	i2_in_high_int	;wreg free
  8950  001778  5036               	movf	?i2_in_high_int+1,w,c
  8951  00177A  1035               	iorwf	?i2_in_high_int,w,c
  8952  00177C  B4D8               	btfsc	status,2,c
  8953  00177E  0012               	return	
  8954                           
  8955                           ;messages.c: 242: }
  8956                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8957                           
  8958                           ;messages.c: 241: return;
  8959  001780  0101               	movlb	1	; () banked
  8960  001782  0E01               	movlw	high _ToMainHigh_MQ
  8961  001784  6E36               	movwf	i2check_msg@qptr+1,c
  8962  001786  0101               	movlb	1	; () banked
  8963  001788  0E6C               	movlw	low _ToMainHigh_MQ
  8964  00178A  6E35               	movwf	i2check_msg@qptr,c
  8965  00178C  EC33  F00E         	call	i2_check_msg	;wreg free
  8966  001790  0900               	iorlw	0
  8967  001792  A4D8               	btfss	status,2,c
  8968  001794  0012               	return	
  8969                           
  8970                           ;messages.c: 249: }
  8971                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8972                           
  8973                           ;messages.c: 248: return;
  8974  001796  0100               	movlb	0	; () banked
  8975  001798  0E00               	movlw	high _ToMainLow_MQ
  8976  00179A  6E36               	movwf	i2check_msg@qptr+1,c
  8977  00179C  0100               	movlb	0	; () banked
  8978  00179E  0E80               	movlw	low _ToMainLow_MQ
  8979  0017A0  6E35               	movwf	i2check_msg@qptr,c
  8980  0017A2  EC33  F00E         	call	i2_check_msg	;wreg free
  8981  0017A6  0900               	iorlw	0
  8982  0017A8  B4D8               	btfsc	status,2,c
  8983                           
  8984                           ;messages.c: 252: }
  8985                           ;messages.c: 253: enter_sleep_mode();
  8986                           
  8987                           ;messages.c: 251: return;
  8988  0017AA  ECB7  F00E         	call	_enter_sleep_mode	;wreg free
  8989  0017AE  0012               	return	
  8990  0017B0                     __end_of_SleepIfOkay:
  8991                           	opt stack 0
  8992                           pclatu	equ	0xFFB
  8993                           pclath	equ	0xFFA
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           postinc0	equ	0xFEE
  9002                           fsr0h	equ	0xFEA
  9003                           fsr0l	equ	0xFE9
  9004                           wreg	equ	0xFE8
  9005                           indf1	equ	0xFE7
  9006                           fsr1h	equ	0xFE2
  9007                           fsr1l	equ	0xFE1
  9008                           bsr	equ	0xFE0
  9009                           indf2	equ	0xFDF
  9010                           postinc2	equ	0xFDE
  9011                           postdec2	equ	0xFDD
  9012                           fsr2h	equ	0xFDA
  9013                           fsr2l	equ	0xFD9
  9014                           status	equ	0xFD8
  9015                           
  9016 ;; *************** function i2_in_low_int *****************
  9017 ;; Defined at:
  9018 ;;		line 30 in file "src/interrupts.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2   54[COMRAM] int 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9032 ;;      Params:         2       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0
  9035 ;;      Totals:         2       0       0       0       0
  9036 ;;Total ram usage:        2 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    1
  9039 ;; This function calls:
  9040 ;;		i2_in_high_int
  9041 ;; This function is called by:
  9042 ;;		_SleepIfOkay
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text56
  9047  001B44                     __ptext56:
  9048                           	opt stack 0
  9049  001B44                     i2_in_low_int:
  9050                           	opt stack 18
  9051                           
  9052                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9053                           
  9054                           ;incstack = 0
  9055  001B44  ACF2               	btfss	intcon,6,c	;volatile
  9056  001B46  D005               	goto	i2l2900
  9057                           
  9058                           ;interrupts.c: 32: return (0);
  9059  001B48  0E00               	movlw	0
  9060  001B4A  6E38               	movwf	?i2_in_low_int+1,c
  9061  001B4C  0E00               	movlw	0
  9062  001B4E  6E37               	movwf	?i2_in_low_int,c
  9063  001B50  0012               	return	
  9064  001B52                     i2l2900:
  9065  001B52  ECAD  F00E         	call	i2_in_high_int	;wreg free
  9066  001B56  5036               	movf	?i2_in_high_int+1,w,c
  9067  001B58  1035               	iorwf	?i2_in_high_int,w,c
  9068  001B5A  B4D8               	btfsc	status,2,c
  9069  001B5C  D005               	goto	i2l2908
  9070                           
  9071                           ;interrupts.c: 34: return (0);
  9072  001B5E  0E00               	movlw	0
  9073  001B60  6E38               	movwf	?i2_in_low_int+1,c
  9074  001B62  0E00               	movlw	0
  9075  001B64  6E37               	movwf	?i2_in_low_int,c
  9076  001B66  0012               	return	
  9077  001B68                     i2l2908:
  9078                           
  9079                           ;interrupts.c: 36: return (1);
  9080  001B68  0E00               	movlw	0
  9081  001B6A  6E38               	movwf	?i2_in_low_int+1,c
  9082  001B6C  0E01               	movlw	1
  9083  001B6E  6E37               	movwf	?i2_in_low_int,c
  9084  001B70  0012               	return	
  9085  001B72                     __end_ofi2_in_low_int:
  9086                           	opt stack 0
  9087                           pclatu	equ	0xFFB
  9088                           pclath	equ	0xFFA
  9089                           tblptru	equ	0xFF8
  9090                           tblptrh	equ	0xFF7
  9091                           tblptrl	equ	0xFF6
  9092                           tablat	equ	0xFF5
  9093                           prodh	equ	0xFF4
  9094                           prodl	equ	0xFF3
  9095                           intcon	equ	0xFF2
  9096                           postinc0	equ	0xFEE
  9097                           fsr0h	equ	0xFEA
  9098                           fsr0l	equ	0xFE9
  9099                           wreg	equ	0xFE8
  9100                           indf1	equ	0xFE7
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           bsr	equ	0xFE0
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           postdec2	equ	0xFDD
  9107                           fsr2h	equ	0xFDA
  9108                           fsr2l	equ	0xFD9
  9109                           status	equ	0xFD8
  9110                           
  9111 ;; *************** function i2_in_high_int *****************
  9112 ;; Defined at:
  9113 ;;		line 22 in file "src/interrupts.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  2   52[COMRAM] int 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9127 ;;      Params:         2       0       0       0       0
  9128 ;;      Locals:         0       0       0       0       0
  9129 ;;      Temps:          0       0       0       0       0
  9130 ;;      Totals:         2       0       0       0       0
  9131 ;;Total ram usage:        2 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_SleepIfOkay
  9137 ;;		i2_in_low_int
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text57
  9142  001D5A                     __ptext57:
  9143                           	opt stack 0
  9144  001D5A                     i2_in_high_int:
  9145                           	opt stack 18
  9146                           
  9147                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9148                           
  9149                           ;incstack = 0
  9150  001D5A  0E00               	movlw	0
  9151  001D5C  AEF2               	btfss	intcon,7,c	;volatile
  9152  001D5E  0E01               	movlw	1
  9153  001D60  6E35               	movwf	?i2_in_high_int,c
  9154  001D62  6A36               	clrf	?i2_in_high_int+1,c
  9155  001D64  0012               	return	
  9156  001D66                     __end_ofi2_in_high_int:
  9157                           	opt stack 0
  9158                           pclatu	equ	0xFFB
  9159                           pclath	equ	0xFFA
  9160                           tblptru	equ	0xFF8
  9161                           tblptrh	equ	0xFF7
  9162                           tblptrl	equ	0xFF6
  9163                           tablat	equ	0xFF5
  9164                           prodh	equ	0xFF4
  9165                           prodl	equ	0xFF3
  9166                           intcon	equ	0xFF2
  9167                           postinc0	equ	0xFEE
  9168                           fsr0h	equ	0xFEA
  9169                           fsr0l	equ	0xFE9
  9170                           wreg	equ	0xFE8
  9171                           indf1	equ	0xFE7
  9172                           fsr1h	equ	0xFE2
  9173                           fsr1l	equ	0xFE1
  9174                           bsr	equ	0xFE0
  9175                           indf2	equ	0xFDF
  9176                           postinc2	equ	0xFDE
  9177                           postdec2	equ	0xFDD
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function i2_check_msg *****************
  9183 ;; Defined at:
  9184 ;;		line 222 in file "src/messages.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  qptr            2   52[COMRAM] PTR struct __msg_queue
  9187 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      unsigned char 
  9192 ;; Registers used:
  9193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9199 ;;      Params:         2       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0
  9201 ;;      Temps:          1       0       0       0       0
  9202 ;;      Totals:         3       0       0       0       0
  9203 ;;Total ram usage:        3 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_SleepIfOkay
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text58
  9213  001C66                     __ptext58:
  9214                           	opt stack 0
  9215  001C66                     i2_check_msg:
  9216                           	opt stack 19
  9217                           
  9218                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9219                           
  9220                           ;incstack = 0
  9221  001C66  EE20 F035          	lfsr	2,53
  9222  001C6A  5035               	movf	i2check_msg@qptr,w,c
  9223  001C6C  26D9               	addwf	fsr2l,f,c
  9224  001C6E  5036               	movf	i2check_msg@qptr+1,w,c
  9225  001C70  22DA               	addwfc	fsr2h,f,c
  9226  001C72  50DF               	movf	indf2,w,c
  9227  001C74  6E37               	movwf	??i2_check_msg& (0+255),c
  9228  001C76  5037               	movf	??i2_check_msg,w,c
  9229  001C78  0D0D               	mullw	13
  9230  001C7A  50F3               	movf	prodl,w,c
  9231  001C7C  2435               	addwf	i2check_msg@qptr,w,c
  9232  001C7E  6ED9               	movwf	fsr2l,c
  9233  001C80  50F4               	movf	prodh,w,c
  9234  001C82  2036               	addwfc	i2check_msg@qptr+1,w,c
  9235  001C84  6EDA               	movwf	fsr2h,c
  9236  001C86  50DF               	movf	indf2,w,c
  9237  001C88  0012               	return	
  9238  001C8A                     __end_ofi2_check_msg:
  9239                           	opt stack 0
  9240                           pclatu	equ	0xFFB
  9241                           pclath	equ	0xFFA
  9242                           tblptru	equ	0xFF8
  9243                           tblptrh	equ	0xFF7
  9244                           tblptrl	equ	0xFF6
  9245                           tablat	equ	0xFF5
  9246                           prodh	equ	0xFF4
  9247                           prodl	equ	0xFF3
  9248                           intcon	equ	0xFF2
  9249                           postinc0	equ	0xFEE
  9250                           fsr0h	equ	0xFEA
  9251                           fsr0l	equ	0xFE9
  9252                           wreg	equ	0xFE8
  9253                           indf1	equ	0xFE7
  9254                           fsr1h	equ	0xFE2
  9255                           fsr1l	equ	0xFE1
  9256                           bsr	equ	0xFE0
  9257                           indf2	equ	0xFDF
  9258                           postinc2	equ	0xFDE
  9259                           postdec2	equ	0xFDD
  9260                           fsr2h	equ	0xFDA
  9261                           fsr2l	equ	0xFD9
  9262                           status	equ	0xFD8
  9263                           
  9264 ;; *************** function _enter_sleep_mode *****************
  9265 ;; Defined at:
  9266 ;;		line 202 in file "src/messages.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;		None               void
  9273 ;; Registers used:
  9274 ;;		None
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9280 ;;      Params:         0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0
  9283 ;;      Totals:         0       0       0       0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_SleepIfOkay
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text59
  9294  001D6E                     __ptext59:
  9295                           	opt stack 0
  9296  001D6E                     _enter_sleep_mode:
  9297                           	opt stack 19
  9298                           
  9299                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9300                           
  9301                           ;incstack = 0
  9302  001D6E  8ED3               	bsf	4051,7,c	;volatile
  9303  001D70  0003               	sleep		;# 
  9304  001D72  0012               	return	
  9305  001D74                     __end_of_enter_sleep_mode:
  9306                           	opt stack 0
  9307  0000                     pclatu	equ	0xFFB
  9308                           pclath	equ	0xFFA
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           postinc0	equ	0xFEE
  9317                           fsr0h	equ	0xFEA
  9318                           fsr0l	equ	0xFE9
  9319                           wreg	equ	0xFE8
  9320                           indf1	equ	0xFE7
  9321                           fsr1h	equ	0xFE2
  9322                           fsr1l	equ	0xFE1
  9323                           bsr	equ	0xFE0
  9324                           indf2	equ	0xFDF
  9325                           postinc2	equ	0xFDE
  9326                           postdec2	equ	0xFDD
  9327                           fsr2h	equ	0xFDA
  9328                           fsr2l	equ	0xFD9
  9329                           status	equ	0xFD8
  9330                           pclatu	equ	0xFFB
  9331                           pclath	equ	0xFFA
  9332                           tblptru	equ	0xFF8
  9333                           tblptrh	equ	0xFF7
  9334                           tblptrl	equ	0xFF6
  9335                           tablat	equ	0xFF5
  9336                           prodh	equ	0xFF4
  9337                           prodl	equ	0xFF3
  9338                           intcon	equ	0xFF2
  9339                           postinc0	equ	0xFEE
  9340                           fsr0h	equ	0xFEA
  9341                           fsr0l	equ	0xFE9
  9342                           wreg	equ	0xFE8
  9343                           indf1	equ	0xFE7
  9344                           fsr1h	equ	0xFE2
  9345                           fsr1l	equ	0xFE1
  9346                           bsr	equ	0xFE0
  9347                           indf2	equ	0xFDF
  9348                           postinc2	equ	0xFDE
  9349                           postdec2	equ	0xFDD
  9350                           fsr2h	equ	0xFDA
  9351                           fsr2l	equ	0xFD9
  9352                           status	equ	0xFD8
  9353                           
  9354                           	psect	rparam
  9355  0000                     pclatu	equ	0xFFB
  9356                           pclath	equ	0xFFA
  9357                           tblptru	equ	0xFF8
  9358                           tblptrh	equ	0xFF7
  9359                           tblptrl	equ	0xFF6
  9360                           tablat	equ	0xFF5
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           intcon	equ	0xFF2
  9364                           postinc0	equ	0xFEE
  9365                           fsr0h	equ	0xFEA
  9366                           fsr0l	equ	0xFE9
  9367                           wreg	equ	0xFE8
  9368                           indf1	equ	0xFE7
  9369                           fsr1h	equ	0xFE2
  9370                           fsr1l	equ	0xFE1
  9371                           bsr	equ	0xFE0
  9372                           indf2	equ	0xFDF
  9373                           postinc2	equ	0xFDE
  9374                           postdec2	equ	0xFDD
  9375                           fsr2h	equ	0xFDA
  9376                           fsr2l	equ	0xFD9
  9377                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      75
    BANK0           128     38      95
    BANK1           256     33     197
    BANK2           256     65      65
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@test(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@test(BANK2[2]), 
		 -> main@uthread_data(BANK2[10]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@test(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@test(BANK2[2]), 
		 -> main@uthread_data(BANK2[10]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    sendUART@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@test(BANK0[1]), main@test(BANK2[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer0_int_handler@test(BANK0[1]), NULL(NULL[0]), main@test(BANK2[2]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@test(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@test(BANK2[2]), 
		 -> main@uthread_data(BANK2[10]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_sendUART
    i2_sendUART->i2_ToMainLow_sendmsg
    i2_ToMainLow_sendmsg->i2_send_msg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    _timer1_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_OpenUSART
    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _main->_block_on_To_msgqueues
    _main->_init_queues
    _main->_start_i2c_slave_reply
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->___lwmod
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->i2_sendUART
    i2_sendUART->i2_ToMainLow_sendmsg
    i2_ToMainLow_sendmsg->i2_send_msg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_uart_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _sendUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   18496
                                             32 BANK1      1     1      0
                                              0 BANK2     65    65      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer0
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                           _sendUART
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             21 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             17 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3186
                                             21 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             33 BANK0      5     1      4
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2449
                                             17 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     342
                                             33 BANK0      2     2      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             33 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _sendUART                                             5     3      2    2947
                                             21 BANK1      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainLow_sendmsg                                    4     1      3    2701
                                             17 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             37 BANK0      1     1      0
                                              6 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             37 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             37 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              0 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             33 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     223
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             37 BANK0      1     1      0
                                             20 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             37 BANK0      1     1      0
                                             20 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                              6 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             33 BANK0      4     4      0
                                              0 BANK1      6     0      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             33 BANK0      5     3      2
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   10329
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               6     6      0    3270
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    2994
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    2747
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3481
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3578
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                        _WriteTimer1
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3447
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2859
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6    1108
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    8128
                                             19 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    3959
                                             12 BANK0      2     2      0
                      i2_WriteTimer0
                         i2_sendUART
 ---------------------------------------------------------------------------------
 (12) i2_sendUART                                          5     3      2    3646
                                             70 COMRAM     1     1      0
                                              8 BANK0      4     2      2
                i2_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (13) i2_ToMainLow_sendmsg                                 4     1      3    3235
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) i2_WriteTimer0                                       4     2      2     266
                                             52 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3933
                                              8 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             52 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3318
                                             69 COMRAM     1     1      0
                                              5 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2763
                                             62 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             52 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             54 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             52 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             52 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer0
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _sendUART
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
   _timer0_int_handler
     i2_WriteTimer0
     i2_sendUART
       i2_ToMainLow_sendmsg
         i2_send_msg
           i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     41      41       8       25.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100     21      C5       6       77.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     26      5F       4       74.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0      11        0.0%
DATA                 0      0     1B0      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Feb 25 10:40:07 2015

               main@uthread_data 0212         _MQ_Main_Willing_to_block 004A  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1904  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1ADE  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l127 08CE                              l511 12AE  
                            l443 1B96                              l515 12CE  
                            l444 1B98                              l516 12D0  
                            l517 12DE                              l470 1A38  
                            l518 12E0                              l467 1A1E  
                            l469 1A36                              l744 1CCA  
           ?_FromMainLow_sendmsg 01B3  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D7  
               ??_init_uart_recv 00D9                  ReadTimer1@timer 0003  
                           l1056 138C                             l3124 17E6  
                           l3116 17C4                             l3138 1870  
                           l3600 0E70                             l3442 1A20  
                           l3370 0920                             l3460 129A  
                           l3604 0E98                             l3364 087C  
                           l3380 0976                             l3356 083A  
                           l3550 148E                             l3526 1890  
                           l3390 0A24                             l3366 08D4  
                           l3374 093E                             l3382 0994  
                           l3544 1462                             l3616 14DE  
                           l3560 0BE8                             l3368 0902  
                           l3376 0956                             l3538 1436  
                           l3634 0D36                             l3394 0A76  
                           l3468 12B0                             l3564 0C6C  
                           l3388 09D2                             l3654 16A0  
                           l3750 132A                             l3648 167C  
                           l3752 133C                             l3754 1344  
                           l3668 0B02                             l3684 0BC8  
                           l3758 1378                             _LATA 000F89  
                           _LATB 000F8A                             u3007 1CCC  
                           i1l52 007A                  _FromMainHigh_MQ 0100  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0EC8                             _main 071E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 0223                       i1_send_msg 1134  
         __size_ofi2_WriteTimer0 0012                             pclat 000FFA  
                    i2_check_msg 1C66                             prodh 000FF4  
                     i2_sendUART 19C6                             prodl 000FF3  
          handle_start@data_read 0035                             start 00C0  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 0F9A  
      ToMainHigh_recvmsg@msgtype 01B6      __end_ofi2_ToMainLow_sendmsg 1BC6  
                 send_msg@length 01AA      __size_of_timer0_int_handler 0046  
                    _Delay1KTCYx 1CC6            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00DC                            ?_main 0001  
   __size_ofi1_ToMainLow_sendmsg 0026                            _CMCON 000FB4  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 00D7                            i1l361 16E6  
                __end_of___lwmod 1396                       i1memcpy@d1 0001  
                          i1l358 170E                            i2l313 0498  
                          i2l305 0360                            i1l529 1CB6  
                          i2l319 0538                            i2l275 10E8  
                          i2l291 01D0                            i2l285 0526  
                          i2l287 018C                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                       i2memcpy@d1 0035  
                     i2memcpy@s1 0037                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1880  
     ToMainLow_recvmsg@maxlength 00DB          timer0_lthread@msgbuffer 01A8  
        i2c_configure_slave@addr 00D7                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 16B8  
               __end_ofi1_memcpy 1986                 __end_ofi2_memcpy 19C6  
                __initialization 1712       uart_trans_int_handler@data 001F  
                   __end_of_main 0A96     uart_trans_int_handler@length 0023  
                     _ReadTimer1 1D36      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_recvmsg 0042       __size_of_ToMainLow_sendmsg 0036  
          __size_ofi2_in_low_int 002E    __size_of_FromMainHigh_sendmsg 0036  
                         ??_main 01C2                    i2_WriteTimer0 1D48  
                send_msg@msgtype 01AB                    __activetblptr 000002  
                send_msg@tlength 01AE       FromMainLow_sendmsg@msgtype 01B3  
           __end_of_handle_start 1134                           _ADCON1 000FC1  
        ??_uart_recv_int_handler 001B                           i1l3802 1958  
                         i1l3902 125A                           i1l3808 1974  
                         i1l3832 116C                           i2l2412 1768  
                         i2l3212 0288                           i1l3924 1700  
                         i1l3932 0066                           i2l3214 02C8  
                         i2l3206 0270                           i1l3856 0F0E  
                         i1l3872 0F96                       _OpenTimer0 1B72  
                         i2l3242 0428                           i2l3170 016A  
                         i2l3154 13DA                           i1l3938 0070  
                     _OpenTimer1 1A04                           i2l3236 03D4  
                         i2l3148 13D0                           i2l3270 053C  
                         i2l3238 0416                   __CFG_WDTEN$OFF 000000  
                         i2l3264 04FA                           i2l3176 0182  
                         i2l3194 0208                           i2l2900 1B52  
                         i2l3292 06DC                           i2l3284 0636  
                         i2l3276 059C                           i2l3196 0234  
                         i2l2908 1B68                           i2l3812 1998  
                         i2l3726 1104                           i2l3728 111C  
                         i2l3818 19B4                           i2l3774 0FE6  
                         i2l3794 19D6      __end_of_i2c_configure_slave 1C18  
                  ??_SleepIfOkay 0039               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3        i2ToMainLow_sendmsg@length 0046  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 010E                      ?i1_send_msg 000B  
               i2sendUART@length 00C1    __end_of_start_i2c_slave_reply 0CDA  
                    ?i2_sendUART 00BE               timer0_lthread@tptr 01A2  
               i2sendUART@retval 00C0          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1B44                      ?i2_send_msg 003F  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0092  
                _i2c_int_handler 00C4                 OpenTimer0@config 00D7  
                         _ic_ptr 00DC                        ??___lwmod 00DB  
                  main@msgbuffer 0200                 __end_of_init_i2c 165A  
               OpenTimer1@config 00D7                           _memcpy 165A  
                         clear_0 1718                           clear_1 1724  
                         _uc_ptr 0048                   ?i2_WriteTimer0 0035  
               __end_of_sendUART 18C2                           main@ic 0225  
                         main@uc 021E                 __end_of_recv_msg 0BCC  
    start_i2c_slave_reply@length 00DB                        ??_in_main 00DB  
               __end_of_send_msg 0DDE          i2c_int_handler@i2c_data 00C5  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 00DA  
       ToMainLow_recvmsg@msgtype 01B6             __size_of_in_high_int 0012  
        FromMainLow_sendmsg@data 01B4                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 1D76                       __accesstop 0080  
        __end_of__initialization 1758       __end_of_ToMainHigh_recvmsg 1946  
     __end_of_ToMainHigh_sendmsg 1BF0               ?_init_uart_lthread 00D7  
    __end_of_init_timer1_lthread 1D00              __end_of_SleepIfOkay 17B0  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1D78  
                   __pidataBANK1 1D74           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00D9                      ?_ReadTimer1 0001  
             __size_of_check_msg 0036                __end_of_ReadUSART 1CC6  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1410  
    __end_of_InterruptHandlerLow 00C0              __size_ofi2_sendUART 003E  
                      ?i2_memcpy 0035                    _ToMainHigh_MQ 016C  
               _enter_sleep_mode 1D6E              __size_ofi2_send_msg 00D2  
           timer1_lthread@length 01BB                    ReadUSART@data 0001  
              __end_of_OpenUSART 130C                    check_msg@qptr 00D7  
           timer1_lthread@retval 01C0        __end_of_init_uart_lthread 1D78  
        ??_block_on_To_msgqueues 00DB             __size_of_init_queues 006E  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0022                       __pnvCOMRAM 0048  
            i1_ToMainLow_sendmsg 1C40          __end_of_i2c_int_handler 071E  
                   ?i2_check_msg 0035               timer1_lthread@tptr 01B7  
              recv_msg@maxlength 01AA                  recv_msg@msgtype 01AB  
                ??i2_WriteTimer0 0037                  recv_msg@tlength 01B2  
          __size_of_handle_start 00C8                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 00D9                          ?_memcpy 01A2  
               WriteTimer1@timer 0003                    ??_WriteTimer0 00D9  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 0012  
                 sendUART@length 01BB             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0072                   sendUART@retval 01BA  
                     ??i1_memcpy 0007                       ??i2_memcpy 003B  
               i1send_msg@length 000D                    i2_in_high_int 1D5A  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
     i2ToMainLow_sendmsg@msgtype 00BB              __size_of_ReadTimer1 0012  
              __end_of_check_msg 1B14                        ?_init_i2c 00D7  
                    _SleepIfOkay 1762              i2WriteTimer0@timer0 0035  
                      ?_sendUART 01B7                        ?_recv_msg 01A8  
                     _in_low_int 17B0                     _handle_start 106C  
                        __Hparam 0000                        ?_send_msg 01A8  
                        __Lparam 0000       __end_of_timer0_int_handler 183C  
    __end_of_FromMainLow_recvmsg 1C40      __end_of_FromMainLow_sendmsg 1A72  
               init_uart_recv@uc 00D7                          ___lwmod 130C  
                __CFG_STVREN$OFF 000000                          __pcinit 1712  
                __size_of_memcpy 005E                       _init_queue 1496  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0038  
                        __ptext0 071E                          __ptext1 0DDE  
                        __ptext2 1A3C                          __ptext3 1510  
                        __ptext4 130C                          __ptext5 1A72  
                        __ptext6 1CDC                          __ptext7 0BCC  
                        __ptext8 1880                          __ptext9 1AA8  
   __size_ofi2_ToMainLow_sendmsg 002A                uart_lthread@index 01C0  
                      _T0CONbits 000FD5                          _in_main 183C  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1D24  
            __end_of_WriteTimer1 1D36                   ?i2_in_high_int 0035  
 __end_of_uart_trans_int_handler 1712       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1396             end_of_initialization 1758  
        timer1_lthread@msgbuffer 01BD     __end_of_FromMainHigh_sendmsg 1AA8  
 __size_of_uart_recv_int_handler 009C       FromMainHigh_sendmsg@length 01B6  
                        memcpy@d 00D7                          memcpy@n 01A6  
                        memcpy@s 00D9    __end_of_uart_recv_int_handler 127A  
                     ??_init_i2c 00D9                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 00C3                    __Lmediumconst 0000  
                        int_func 1396                     ??i1_send_msg 0011  
                  ?_uart_lthread 01B7                     ??i2_sendUART 0047  
                     ??_sendUART 01B9          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 01AF  
         timer0_int_handler@test 00C3                     ??i2_send_msg 0045  
                     ??_send_msg 00DB       __end_of_timer1_int_handler 1B44  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 00BB               __end_ofi1_recv_msg 0F9A  
             __end_ofi1_send_msg 11DE      FromMainHigh_sendmsg@msgtype 01B3  
                      _TRISCbits 000F94               __end_ofi2_sendUART 1A04  
             __end_ofi2_send_msg 106C         timer1_int_handler@result 001C  
                 ??_uart_lthread 00DC                        _TXSTAbits 000FAC  
                     main@length 0224                      ?_in_low_int 00D9  
          timer0_lthread@msgtype 01A4            _start_i2c_slave_reply 0BCC  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 1D74                     ??_ReadTimer1 0003  
             _ToMainHigh_recvmsg 1904                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1BC6                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1CDC  
                    ?_init_queue 00D7                        i2memcpy@d 003B  
                    _WriteTimer0 1D12                      _WriteTimer1 1D24  
                      i2memcpy@n 0039                        i2memcpy@s 003D  
                 _timer1_lthread 1510                   __end_of_memcpy 16B8  
              _enable_interrupts 1D66             __size_of_Delay1KTCYx 0016  
            ?_ToMainHigh_recvmsg 01B6                  ??i2_in_high_int 0037  
       i2c_int_handler@data_read 00C8              ?_ToMainHigh_sendmsg 00BB  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1712                    ??_in_high_int 00D9  
                      _ReadUSART 1CA8                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 01B6  
            ??_enable_interrupts 00D7                     ??_OpenTimer0 00D7  
                   ??_OpenTimer1 00D7   __size_of_block_on_To_msgqueues 007E  
             __end_of_ReadTimer1 1D48    __end_of_block_on_To_msgqueues 1496  
                      _OpenUSART 127A                     sendUART@data 01B7  
   __end_of_InterruptHandlerHigh 1418                       init_i2c@ic 00D7  
           ??_ToMainHigh_recvmsg 00DB             ??_ToMainHigh_sendmsg 0046  
         __end_of_timer0_lthread 1CEE         i2c_int_handler@error_buf 00C0  
                    __pdataBANK0 00DE                      __pdataBANK1 01C3  
         __end_of_timer1_lthread 1582        __end_of_enable_interrupts 1D6E  
                       ??_memcpy 00D7            timer1_lthread@msgtype 01B9  
           _FromMainHigh_sendmsg 1A72     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1B9C               __end_of_OpenTimer1 1A3C  
       i2c_int_handler@msg_ready 00C7                      __pbssCOMRAM 004A  
                     ?_ReadUSART 0001                    ??_init_queues 00DB  
                  __pcstackBANK0 00B6                    __pcstackBANK1 01A2  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 00D7              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00D7         ToMainLow_sendmsg@msgtype 01B3  
   __size_of_InterruptHandlerLow 00A8              __end_of_in_high_int 1D12  
                     ?_OpenUSART 00D7                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01B8                     _ToMainLow_MQ 0080  
            __size_of_init_queue 007A              i2_ToMainLow_sendmsg 1B9C  
                 _init_uart_recv 1C8A                        _check_msg 1ADE  
                      __pnvBANK0 00DC           ?_start_i2c_slave_reply 00D7  
              __size_of_init_i2c 006A                     recv_msg@data 01AD  
              __size_of_sendUART 0042                     recv_msg@qmsg 01B4  
                   recv_msg@slot 01B1                     recv_msg@qptr 01A8  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 0104                  ?_timer0_lthread 01A2  
                       ?___lwmod 00D7                  ?_timer1_lthread 01B7  
          ?_FromMainHigh_sendmsg 01B3                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B8            __end_ofi2_WriteTimer0 1D5A  
           ?i2_ToMainLow_sendmsg 00BB             __end_of_uart_lthread 0EC8  
     i2c_int_handler@msg_to_send 00C6                         ?_in_main 01A2  
              WriteTimer0@timer0 00D7               _timer0_int_handler 17F6  
              WriteTimer1@timer1 0001       i1ToMainLow_sendmsg@msgtype 0017  
             i2WriteTimer0@timer 0037              uart_lthread@msgtype 01B9  
          ToMainLow_sendmsg@data 01B4              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 01B7  
         __end_of_init_uart_recv 1CA8              __end_of_init_queues 15F0  
                       _LATAbits 000F89                  i2check_msg@qptr 0035  
                     ?_check_msg 00D7                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0037  
                       i2u240_40 180A                         i2u240_46 180C  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00BC  
    __end_ofi1_ToMainLow_sendmsg 1C66                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F5210 01C3  
                 i1recv_msg@data 0010             ??_timer0_int_handler 00C2  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012            ??i2_ToMainLow_sendmsg 0046  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036             timer0_lthread@length 01A6  
             _timer1_int_handler 1B14                         i1_memcpy 1946  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1986             timer0_lthread@msgval 00D7  
                    _in_high_int 1D00                     send_msg@data 01AC  
            _i2c_configure_slave 1BF0                     send_msg@qmsg 01B1  
                   send_msg@slot 01B0                     send_msg@qptr 01A8  
          uart_lthread@msgbuffer 01BD              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00D7                      ??_OpenUSART 00D9  
                OpenUSART@config 01A2                   ??i2_in_low_int 0039  
          _uart_recv_int_handler 11DE                     ??_in_low_int 00DB  
                 i2sendUART@data 00BE                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_sendmsg 00DC  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 065A  
             ??_enter_sleep_mode 0035                 __size_of___lwmod 008A  
                   ??_init_queue 00D9                     ?_WriteTimer0 00D7  
                   ?_WriteTimer1 0001         FromMainHigh_sendmsg@data 01B4  
        ToMainLow_sendmsg@length 01B6                main@t0thread_data 020B  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 0042      ToMainHigh_recvmsg@maxlength 00DB  
              i2send_msg@tlength 00B6          init_timer1_lthread@tptr 00D7  
                    _init_queues 1582               __end_of_in_low_int 17F6  
                       __ptext10 0CDA                         __ptext11 1C8A  
                       __ptext20 183C                         __ptext12 1D76  
                       __ptext21 17B0                         __ptext13 1CEE  
                       __ptext30 127A                         __ptext22 1D00  
                       __ptext14 1582                         __ptext31 1A04  
                       __ptext23 1ADE                         __ptext15 1496  
                       __ptext40 1C40                         __ptext32 1B72  
                       __ptext24 1CC6                         __ptext16 15F0  
                       __ptext41 1134                         __ptext25 1D12  
                       __ptext17 1BF0                         __ptext50 00C4  
                       __ptext42 1946                         __ptext34 16B8  
                       __ptext26 18C2                         __ptext18 1D66  
                       __ptext51 106C                         __ptext43 1D24  
                       __ptext35 1C18                         __ptext27 1904  
                       __ptext19 1418                         __ptext52 1BC6  
                       __ptext44 1D36                         __ptext36 0EC8  
                       __ptext28 0A96                         __ptext53 0F9A  
                       __ptext37 11DE                         __ptext29 165A  
                       __ptext54 1986                         __ptext46 17F6  
                       __ptext38 1CA8                         __ptext55 1762  
                       __ptext47 19C6                         __ptext39 1B14  
                       __ptext56 1B44                         __ptext48 1B9C  
                       __ptext57 1D5A                         __ptext49 1D48  
                       __ptext58 1C66                         __ptext59 1D6E  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01BB  
             uart_lthread@status 01BF                         _init_i2c 15F0  
            _init_timer1_lthread 1CEE                    __size_of_main 0378  
                  ??i2_check_msg 0037                main@t1thread_data 021C  
                    ??_check_msg 00D9               __end_of_init_queue 1510  
                       _sendUART 1880             __size_of_SleepIfOkay 004E  
                       _recv_msg 0A96            ??_i2c_configure_slave 00D7  
                       _send_msg 0CDA                   init_queue@qptr 00D7  
          __size_of_uart_lthread 00EA    uart_trans_int_handler@msgtype 0021  
                  ??_Delay1KTCYx 00D7                         main@baud 0210  
            _InterruptHandlerLow 0018                         main@test 020D  
           ?_init_timer1_lthread 00D7         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
        i2ToMainLow_sendmsg@data 00BC                   OpenUSART@spbrg 00D7  
                       memcpy@d1 01A2                         memcpy@s1 01A4  
        timer0_int_handler@F5104 00DE            __end_ofi2_in_high_int 1D66  
   i2c_int_handler@overrun_error 00C4                 i2send_msg@length 0041  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00D9  
               ___lwmod@dividend 00D7           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0DDE                   main@UARTConfig 0211  
          _block_on_To_msgqueues 1418                    ?_handle_start 0001  
               ??_timer0_lthread 00D7      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01BF                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0046  
            __end_ofi2_check_msg 1C8A            ??_init_timer1_lthread 00D9  
         ??_InterruptHandlerHigh 00C9                _ToMainLow_recvmsg 18C2  
              _ToMainLow_sendmsg 1AA8               main@last_reg_recvd 020F  
                ___lwmod@divisor 00D9             __end_ofi2_in_low_int 1B72  
             ?_ToMainLow_recvmsg 01B6              __end_of_Delay1KTCYx 1CDC  
              ??_i2c_int_handler 00BE                  ___lwmod@counter 01A2  
             ?_ToMainLow_sendmsg 01B3                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0043  
          ??_InterruptHandlerLow 0024              ??_ToMainLow_recvmsg 00DB  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 003F              ??_ToMainLow_sendmsg 00DC  
            _FromMainLow_recvmsg 1C18                   ??_handle_start 0035  
            _FromMainLow_sendmsg 1A3C                     _USART_Status 004B  
