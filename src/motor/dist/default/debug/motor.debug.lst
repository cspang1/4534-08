

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Apr 22 11:47:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           	psect	idataBANK1
    81  001EF4                     __pidataBANK1:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _args
    85  001EF4  0131               	dw	305
    86  001EF6  005A               	dw	90
    87  001EF8  001F               	dw	31
    88  001EFA  005A               	dw	90
    89  001EFC  0131               	dw	305
    90  001EFE  FFA6               	dw	65446
    91  001F00  001F               	dw	31
    92  001F02  FFA6               	dw	65446
    93  001F04  0131               	dw	305
    94  001F06  0000               	dw	0
    95                           
    96                           ;initializer for _cmds
    97  001F08  0000               	dw	0
    98  001F0A  0002               	dw	2
    99  001F0C  0000               	dw	0
   100  001F0E  0002               	dw	2
   101  001F10  0000               	dw	0
   102  001F12  0002               	dw	2
   103  001F14  0000               	dw	0
   104  001F16  0002               	dw	2
   105  001F18  0000               	dw	0
   106  001F1A  FFFF               	dw	65535
   107                           
   108                           ;initializer for _ready
   109  001F1C  01                 	db	1
   110  0000                     _ADCON1	set	4033
   111  0000                     _CMCON	set	4020
   112  0000                     _INTCONbits	set	4082
   113  0000                     _IPR1bits	set	3999
   114  0000                     _LATA	set	3977
   115  0000                     _LATB	set	3978
   116  0000                     _OSCCON	set	4051
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _OSCTUNEbits	set	3995
   119  0000                     _PIE1bits	set	3997
   120  0000                     _PIR1bits	set	3998
   121  0000                     _PORTA	set	3968
   122  0000                     _PORTB	set	3969
   123  0000                     _RCONbits	set	4048
   124  0000                     _RCREG	set	4014
   125  0000                     _RCSTA	set	4011
   126  0000                     _RCSTAbits	set	4011
   127  0000                     _SPBRG	set	4015
   128  0000                     _SPBRGH	set	4016
   129  0000                     _SSPADD	set	4040
   130  0000                     _SSPBUF	set	4041
   131  0000                     _SSPCON1	set	4038
   132  0000                     _SSPCON1bits	set	4038
   133  0000                     _SSPCON2	set	4037
   134  0000                     _SSPCON2bits	set	4037
   135  0000                     _SSPSTAT	set	4039
   136  0000                     _SSPSTATbits	set	4039
   137  0000                     _T0CON	set	4053
   138  0000                     _T0CONbits	set	4053
   139  0000                     _T1CON	set	4045
   140  0000                     _T1CONbits	set	4045
   141  0000                     _TMR0H	set	4055
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR1H	set	4047
   144  0000                     _TMR1L	set	4046
   145  0000                     _TRISA	set	3986
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISCbits	set	3988
   148  0000                     _TXREG	set	4013
   149  0000                     _TXSTA	set	4012
   150  0000                     _TXSTAbits	set	4012
   151                           
   152                           	psect	nvCOMRAM
   153  000049                     __pnvCOMRAM:
   154                           	opt stack 0
   155  000049                     _uc_ptr:
   156                           	opt stack 0
   157  000049                     	ds	2
   158                           
   159                           	psect	nvBANK0
   160  0000CE                     __pnvBANK0:
   161                           	opt stack 0
   162  0000CE                     _ic_ptr:
   163                           	opt stack 0
   164  0000CE                     	ds	2
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  001B40                     __pcinit:
   170                           	opt stack 0
   171  001B40                     start_initialization:
   172                           	opt stack 0
   173  001B40                     __initialization:
   174                           	opt stack 0
   175                           
   176                           ; Clear objects allocated to BANK2 (108 bytes)
   177  001B40  EE02  F000         	lfsr	0,__pbssBANK2
   178  001B44  0E6C               	movlw	108
   179  001B46                     clear_0:
   180  001B46  6AEE               	clrf	postinc0,c
   181  001B48  06E8               	decf	wreg,f,c
   182  001B4A  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK1 (110 bytes)
   185  001B4C  EE01  F000         	lfsr	0,__pbssBANK1
   186  001B50  0E6E               	movlw	110
   187  001B52                     clear_1:
   188  001B52  6AEE               	clrf	postinc0,c
   189  001B54  06E8               	decf	wreg,f,c
   190  001B56  E1FD               	bnz	clear_1
   191                           
   192                           ; Clear objects allocated to BANK0 (6 bytes)
   193  001B58  0100               	movlb	0
   194  001B5A  6BCD               	clrf	(__pbssBANK0+5)& (0+255),b
   195  001B5C  6BCC               	clrf	(__pbssBANK0+4)& (0+255),b
   196  001B5E  6BCB               	clrf	(__pbssBANK0+3)& (0+255),b
   197  001B60  6BCA               	clrf	(__pbssBANK0+2)& (0+255),b
   198  001B62  6BC9               	clrf	(__pbssBANK0+1)& (0+255),b
   199  001B64  6BC8               	clrf	__pbssBANK0& (0+255),b
   200                           
   201                           ; Clear objects allocated to COMRAM (2 bytes)
   202  001B66  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203  001B68  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   204                           
   205                           ; Initialize objects allocated to BANK1 (41 bytes)
   206                           ; load TBLPTR registers with __pidataBANK1
   207  001B6A  0EF4               	movlw	low __pidataBANK1
   208  001B6C  6EF6               	movwf	tblptrl,c
   209  001B6E  0E1E               	movlw	high __pidataBANK1
   210  001B70  6EF7               	movwf	tblptrh,c
   211  001B72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   212  001B74  6EF8               	movwf	tblptru,c
   213  001B76  EE01  F0C8         	lfsr	0,__pdataBANK1
   214  001B7A  EE10 F029          	lfsr	1,41
   215  001B7E                     copy_data0:
   216  001B7E  0009               	tblrd		*+
   217  001B80  CFF5 FFEE          	movff	tablat,postinc0
   218  001B84  50E5               	movf	postdec1,w,c
   219  001B86  50E1               	movf	fsr1l,w,c
   220  001B88  E1FA               	bnz	copy_data0
   221  001B8A                     end_of_initialization:
   222                           	opt stack 0
   223  001B8A                     __end_of__initialization:
   224                           	opt stack 0
   225  001B8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226  001B8C  6EF8               	movwf	tblptru,c
   227  001B8E  0100               	movlb	0
   228  001B90  EF1A  F003         	goto	_main	;jump to C main() function
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	bssCOMRAM
   239  00004B                     __pbssCOMRAM:
   240                           	opt stack 0
   241  00004B                     _MQ_Main_Willing_to_block:
   242                           	opt stack 0
   243  00004B                     	ds	1
   244  00004C                     _USART_Status:
   245                           	opt stack 0
   246  00004C                     	ds	1
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           postdec1	equ	0xFE5
   254                           fsr1l	equ	0xFE1
   255                           
   256                           	psect	bssBANK0
   257  0000C8                     __pbssBANK0:
   258                           	opt stack 0
   259  0000C8                     stop@F5239:
   260                           	opt stack 0
   261  0000C8                     	ds	2
   262  0000CA                     timer0_lthread@F5147:
   263                           	opt stack 0
   264  0000CA                     	ds	2
   265  0000CC                     timer1_lthread@F5087:
   266                           	opt stack 0
   267  0000CC                     	ds	2
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssBANK1
   278  000100                     __pbssBANK1:
   279                           	opt stack 0
   280  000100                     _curCmd:
   281                           	opt stack 0
   282  000100                     	ds	2
   283  000102                     _ToMainHigh_MQ:
   284                           	opt stack 0
   285  000102                     	ds	54
   286  000138                     _ToMainLow_MQ:
   287                           	opt stack 0
   288  000138                     	ds	54
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	dataBANK1
   299  0001C8                     __pdataBANK1:
   300                           	opt stack 0
   301  0001C8                     _args:
   302                           	opt stack 0
   303  0001C8                     	ds	20
   304  0001DC                     _cmds:
   305                           	opt stack 0
   306  0001DC                     	ds	20
   307  0001F0                     _ready:
   308                           	opt stack 0
   309  0001F0                     	ds	1
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssBANK2
   320  000200                     __pbssBANK2:
   321                           	opt stack 0
   322  000200                     _FromMainHigh_MQ:
   323                           	opt stack 0
   324  000200                     	ds	54
   325  000236                     _FromMainLow_MQ:
   326                           	opt stack 0
   327  000236                     	ds	54
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	cstackBANK1
   338  00016E                     __pcstackBANK1:
   339                           	opt stack 0
   340  00016E                     main@msgbuffer:
   341                           	opt stack 0
   342                           
   343                           ; 11 bytes @ 0x0
   344  00016E                     	ds	11
   345  000179                     main@cmd:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0xB
   349  000179                     	ds	2
   350  00017B                     main@baud:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0xD
   354  00017B                     	ds	1
   355  00017C                     main@UARTConfig:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0xE
   359  00017C                     	ds	1
   360  00017D                     main@command:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0xF
   364  00017D                     	ds	1
   365  00017E                     _main$709:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x10
   369  00017E                     	ds	1
   370  00017F                     main@arg:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x11
   374  00017F                     	ds	2
   375  000181                     main@valuec:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x13
   379  000181                     	ds	1
   380  000182                     main@uthread_data:
   381                           	opt stack 0
   382                           
   383                           ; 10 bytes @ 0x14
   384  000182                     	ds	10
   385  00018C                     main@last_reg_recvd:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x1E
   389  00018C                     	ds	1
   390  00018D                     main@uc:
   391                           	opt stack 0
   392                           
   393                           ; 5 bytes @ 0x1F
   394  00018D                     	ds	5
   395  000192                     main@msgtype:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x24
   399  000192                     	ds	1
   400  000193                     main@length:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x25
   404  000193                     	ds	1
   405  000194                     main@t0thread_data:
   406                           	opt stack 0
   407                           
   408                           ; 12 bytes @ 0x26
   409  000194                     	ds	12
   410  0001A0                     main@t1thread_data:
   411                           	opt stack 0
   412                           
   413                           ; 12 bytes @ 0x32
   414  0001A0                     	ds	12
   415  0001AC                     main@ic:
   416                           	opt stack 0
   417                           
   418                           ; 28 bytes @ 0x3E
   419  0001AC                     	ds	28
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	cstackBANK0
   430  000080                     __pcstackBANK0:
   431                           	opt stack 0
   432  000080                     i2send_msg@tlength:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x0
   436  000080                     	ds	2
   437  000082                     i2send_msg@slot:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x2
   441  000082                     	ds	1
   442  000083                     i2send_msg@qmsg:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x3
   446  000083                     	ds	2
   447  000085                     ??_i2c_int_handler:
   448                           
   449                           ; 0 bytes @ 0x5
   450  000085                     	ds	1
   451  000086                     i2c_int_handler@error_buf:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x6
   455  000086                     	ds	3
   456  000089                     i2c_int_handler@data_written:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x9
   460  000089                     	ds	1
   461  00008A                     i2c_int_handler@overrun_error:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0xA
   465  00008A                     	ds	1
   466  00008B                     i2c_int_handler@i2c_data:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0xB
   470  00008B                     	ds	1
   471  00008C                     i2c_int_handler@msg_to_send:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0xC
   475  00008C                     	ds	1
   476  00008D                     i2c_int_handler@msg_ready:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0xD
   480  00008D                     	ds	1
   481  00008E                     i2c_int_handler@data_read:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0xE
   485  00008E                     	ds	1
   486  00008F                     ??_InterruptHandlerHigh:
   487                           
   488                           ; 0 bytes @ 0xF
   489  00008F                     	ds	14
   490  00009D                     ?_abs:
   491                           	opt stack 0
   492  00009D                     ?_in_high_int:
   493                           	opt stack 0
   494  00009D                     ?___lwmod:
   495                           	opt stack 0
   496  00009D                     i2c_configure_slave@addr:
   497                           	opt stack 0
   498  00009D                     OpenTimer0@config:
   499                           	opt stack 0
   500  00009D                     OpenTimer1@config:
   501                           	opt stack 0
   502  00009D                     Delay1KTCYx@unit:
   503                           	opt stack 0
   504  00009D                     init_queue@qptr:
   505                           	opt stack 0
   506  00009D                     check_msg@qptr:
   507                           	opt stack 0
   508  00009D                     start_i2c_slave_reply@msg:
   509                           	opt stack 0
   510  00009D                     init_i2c@ic:
   511                           	opt stack 0
   512  00009D                     init_uart_recv@uc:
   513                           	opt stack 0
   514  00009D                     init_timer0_lthread@tptr:
   515                           	opt stack 0
   516  00009D                     init_timer1_lthread@tptr:
   517                           	opt stack 0
   518  00009D                     init_uart_lthread@uptr:
   519                           	opt stack 0
   520  00009D                     WriteTimer0@timer0:
   521                           	opt stack 0
   522  00009D                     WriteTimer1@timer1:
   523                           	opt stack 0
   524  00009D                     OpenUSART@spbrg:
   525                           	opt stack 0
   526  00009D                     abs@a:
   527                           	opt stack 0
   528  00009D                     ___lwmod@dividend:
   529                           	opt stack 0
   530  00009D                     memcpy@d1:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x1D
   534  00009D                     	ds	2
   535  00009F                     ??_OpenUSART:
   536  00009F                     ??_start_i2c_slave_reply:
   537  00009F                     ??_abs:
   538  00009F                     ??_check_msg:
   539  00009F                     ?_in_low_int:
   540                           	opt stack 0
   541  00009F                     init_queue@i:
   542                           	opt stack 0
   543  00009F                     WriteTimer0@timer:
   544                           	opt stack 0
   545  00009F                     WriteTimer1@timer:
   546                           	opt stack 0
   547  00009F                     ___lwmod@divisor:
   548                           	opt stack 0
   549  00009F                     memcpy@s1:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x1F
   553  00009F                     	ds	1
   554  0000A0                     
   555                           ; 0 bytes @ 0x20
   556  0000A0                     	ds	1
   557  0000A1                     ?_in_main:
   558                           	opt stack 0
   559  0000A1                     start_i2c_slave_reply@length:
   560                           	opt stack 0
   561  0000A1                     ___lwmod@counter:
   562                           	opt stack 0
   563  0000A1                     memcpy@n:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x21
   567  0000A1                     	ds	1
   568  0000A2                     OpenUSART@config:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x22
   572  0000A2                     	ds	1
   573  0000A3                     memcpy@d:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x23
   577  0000A3                     	ds	2
   578  0000A5                     memcpy@s:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x25
   582  0000A5                     	ds	2
   583  0000A7                     send_msg@qptr:
   584                           	opt stack 0
   585  0000A7                     recv_msg@qptr:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x27
   589  0000A7                     	ds	2
   590  0000A9                     send_msg@length:
   591                           	opt stack 0
   592  0000A9                     recv_msg@maxlength:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x29
   596  0000A9                     	ds	1
   597  0000AA                     send_msg@msgtype:
   598                           	opt stack 0
   599  0000AA                     recv_msg@msgtype:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x2A
   603  0000AA                     	ds	1
   604  0000AB                     send_msg@data:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x2B
   608  0000AB                     	ds	1
   609  0000AC                     recv_msg@data:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x2C
   613  0000AC                     	ds	1
   614  0000AD                     ??_send_msg:
   615                           
   616                           ; 0 bytes @ 0x2D
   617  0000AD                     	ds	1
   618  0000AE                     ??_recv_msg:
   619  0000AE                     send_msg@tlength:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2E
   623  0000AE                     	ds	2
   624  0000B0                     send_msg@slot:
   625                           	opt stack 0
   626  0000B0                     recv_msg@slot:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x30
   630  0000B0                     	ds	1
   631  0000B1                     send_msg@qmsg:
   632                           	opt stack 0
   633  0000B1                     recv_msg@tlength:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x31
   637  0000B1                     	ds	2
   638  0000B3                     ToMainLow_sendmsg@msgtype:
   639                           	opt stack 0
   640  0000B3                     FromMainLow_sendmsg@msgtype:
   641                           	opt stack 0
   642  0000B3                     recv_msg@qmsg:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x33
   646  0000B3                     	ds	1
   647  0000B4                     ToMainLow_sendmsg@data:
   648                           	opt stack 0
   649  0000B4                     FromMainLow_sendmsg@data:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x34
   653  0000B4                     	ds	1
   654  0000B5                     ToMainLow_recvmsg@msgtype:
   655                           	opt stack 0
   656  0000B5                     ToMainHigh_recvmsg@msgtype:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x35
   660  0000B5                     	ds	1
   661  0000B6                     ToMainLow_sendmsg@length:
   662                           	opt stack 0
   663  0000B6                     FromMainLow_sendmsg@length:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x36
   667  0000B6                     	ds	1
   668  0000B7                     ToMainLow_recvmsg@data:
   669                           	opt stack 0
   670  0000B7                     ToMainHigh_recvmsg@data:
   671                           	opt stack 0
   672  0000B7                     sendUARTarr@data:
   673                           	opt stack 0
   674  0000B7                     uart_lthread@uptr:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x37
   678  0000B7                     	ds	2
   679  0000B9                     ToMainLow_recvmsg@maxlength:
   680                           	opt stack 0
   681  0000B9                     ToMainHigh_recvmsg@maxlength:
   682                           	opt stack 0
   683  0000B9                     sendUARTarr@retval:
   684                           	opt stack 0
   685  0000B9                     uart_lthread@msgtype:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x39
   689  0000B9                     	ds	1
   690  0000BA                     sendUARTarr@length:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x3A
   694  0000BA                     	ds	1
   695  0000BB                     move@tptr:
   696                           	opt stack 0
   697  0000BB                     moveDist@tptr:
   698                           	opt stack 0
   699  0000BB                     turn@tptr:
   700                           	opt stack 0
   701  0000BB                     stop@tptr:
   702                           	opt stack 0
   703  0000BB                     timer0_lthread@tptr:
   704                           	opt stack 0
   705  0000BB                     timer1_lthread@tptr:
   706                           	opt stack 0
   707  0000BB                     uart_lthread@length:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x3B
   711  0000BB                     	ds	2
   712  0000BD                     ??_timer0_lthread:
   713  0000BD                     ??_timer1_lthread:
   714  0000BD                     move@test:
   715                           	opt stack 0
   716  0000BD                     moveDist@dist:
   717                           	opt stack 0
   718  0000BD                     turn@angle:
   719                           	opt stack 0
   720  0000BD                     stop@test:
   721                           	opt stack 0
   722  0000BD                     uart_lthread@msgbuffer:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x3D
   726  0000BD                     	ds	2
   727  0000BF                     ??_turn:
   728  0000BF                     uart_lthread@status:
   729                           	opt stack 0
   730  0000BF                     moveDist@test:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x3F
   734  0000BF                     	ds	1
   735  0000C0                     _turn$998:
   736                           	opt stack 0
   737  0000C0                     uart_lthread@index:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x40
   741  0000C0                     	ds	1
   742  0000C1                     timer0_lthread@temp:
   743                           	opt stack 0
   744  0000C1                     timer1_lthread@temp:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x41
   748  0000C1                     	ds	1
   749  0000C2                     _turn$999:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x42
   753  0000C2                     	ds	2
   754  0000C4                     turn@test:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x44
   758  0000C4                     	ds	2
   759  0000C6                     ??_main:
   760                           
   761                           ; 0 bytes @ 0x46
   762  0000C6                     	ds	2
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	cstackCOMRAM
   773  000001                     __pcstackCOMRAM:
   774                           	opt stack 0
   775  000001                     ReadUSART@data:
   776                           	opt stack 0
   777  000001                     i1memcpy@d1:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x0
   781  000001                     	ds	2
   782  000003                     i1memcpy@s1:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x2
   786  000003                     	ds	2
   787  000005                     i1memcpy@n:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x4
   791  000005                     	ds	2
   792  000007                     i1memcpy@d:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796  000007                     	ds	2
   797  000009                     i1memcpy@s:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x8
   801  000009                     	ds	2
   802  00000B                     i1send_msg@qptr:
   803                           	opt stack 0
   804  00000B                     i1recv_msg@qptr:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0xA
   808  00000B                     	ds	2
   809  00000D                     i1send_msg@length:
   810                           	opt stack 0
   811  00000D                     i1recv_msg@maxlength:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0xC
   815  00000D                     	ds	1
   816  00000E                     i1send_msg@msgtype:
   817                           	opt stack 0
   818  00000E                     i1recv_msg@msgtype:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0xD
   822  00000E                     	ds	1
   823  00000F                     i1send_msg@data:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0xE
   827  00000F                     	ds	1
   828  000010                     i1recv_msg@data:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0xF
   832  000010                     	ds	1
   833  000011                     ??i1_send_msg:
   834                           
   835                           ; 0 bytes @ 0x10
   836  000011                     	ds	1
   837  000012                     ??i1_recv_msg:
   838  000012                     i1send_msg@tlength:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x11
   842  000012                     	ds	2
   843  000014                     i1send_msg@slot:
   844                           	opt stack 0
   845  000014                     i1recv_msg@slot:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x13
   849  000014                     	ds	1
   850  000015                     i1send_msg@qmsg:
   851                           	opt stack 0
   852  000015                     i1recv_msg@tlength:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x14
   856  000015                     	ds	2
   857  000017                     i1ToMainLow_sendmsg@msgtype:
   858                           	opt stack 0
   859  000017                     i1recv_msg@qmsg:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x16
   863  000017                     	ds	1
   864  000018                     i1ToMainLow_sendmsg@data:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x17
   868  000018                     	ds	1
   869  000019                     FromMainLow_recvmsg@msgtype:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x18
   873  000019                     	ds	1
   874  00001A                     i1ToMainLow_sendmsg@length:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x19
   878  00001A                     	ds	1
   879  00001B                     ??_uart_recv_int_handler:
   880  00001B                     FromMainLow_recvmsg@data:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x1A
   884  00001B                     	ds	2
   885  00001D                     FromMainLow_recvmsg@maxlength:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x1C
   889  00001D                     	ds	1
   890  00001E                     uart_trans_int_handler@data:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x1D
   894  00001E                     	ds	2
   895  000020                     uart_trans_int_handler@msgtype:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x1F
   899  000020                     	ds	1
   900  000021                     uart_trans_int_handler@curIndex:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x20
   904  000021                     	ds	1
   905  000022                     uart_trans_int_handler@length:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x21
   909  000022                     	ds	1
   910  000023                     ??_InterruptHandlerLow:
   911                           
   912                           ; 0 bytes @ 0x22
   913  000023                     	ds	17
   914  000034                     ?i2_in_high_int:
   915                           	opt stack 0
   916  000034                     handle_start@data_read:
   917                           	opt stack 0
   918  000034                     i2check_msg@qptr:
   919                           	opt stack 0
   920  000034                     i2memcpy@d1:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x33
   924  000034                     	ds	2
   925  000036                     ??i2_check_msg:
   926  000036                     ?i2_in_low_int:
   927                           	opt stack 0
   928  000036                     i2memcpy@s1:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x35
   932  000036                     	ds	2
   933  000038                     i2memcpy@n:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x37
   937  000038                     	ds	2
   938  00003A                     i2memcpy@d:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x39
   942  00003A                     	ds	2
   943  00003C                     i2memcpy@s:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x3B
   947  00003C                     	ds	2
   948  00003E                     i2send_msg@qptr:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x3D
   952  00003E                     	ds	2
   953  000040                     i2send_msg@length:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x3F
   957  000040                     	ds	1
   958  000041                     i2send_msg@msgtype:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x40
   962  000041                     	ds	1
   963  000042                     i2send_msg@data:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x41
   967  000042                     	ds	2
   968  000044                     ??i2_send_msg:
   969                           
   970                           ; 0 bytes @ 0x43
   971  000044                     	ds	1
   972  000045                     ToMainHigh_sendmsg@msgtype:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x44
   976  000045                     	ds	1
   977  000046                     ToMainHigh_sendmsg@data:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x45
   981  000046                     	ds	2
   982  000048                     ToMainHigh_sendmsg@length:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x47
   986  000048                     	ds	1
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996 ;;
   997 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   998 ;;
   999 ;; *************** function _main *****************
  1000 ;; Defined at:
  1001 ;;		line 38 in file "src/main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  valuec          1   19[BANK1 ] unsigned char 
  1006 ;;  command         1   15[BANK1 ] unsigned char 
  1007 ;;  arg             2   17[BANK1 ] int 
  1008 ;;  cmd             2   11[BANK1 ] int 
  1009 ;;  ic             28   62[BANK1 ] struct __i2c_comm
  1010 ;;  t1thread_dat   12   50[BANK1 ] struct __timer1_thread_s
  1011 ;;  t0thread_dat   12   38[BANK1 ] struct __timer0_thread_s
  1012 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
  1013 ;;  uthread_data   10   20[BANK1 ] struct __uart_thread_str
  1014 ;;  uc              5   31[BANK1 ] struct __uart_comm
  1015 ;;  length          1   37[BANK1 ] char 
  1016 ;;  msgtype         1   36[BANK1 ] unsigned char 
  1017 ;;  last_reg_rec    1   30[BANK1 ] unsigned char 
  1018 ;;  UARTConfig      1   14[BANK1 ] unsigned char 
  1019 ;;  baud            1   13[BANK1 ] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;		None               void
  1022 ;; Registers used:
  1023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         0       0      90       0       0
  1031 ;;      Temps:          0       2       0       0       0
  1032 ;;      Totals:         0       2      90       0       0
  1033 ;;Total ram usage:       92 bytes
  1034 ;; Hardware stack levels required when called:   15
  1035 ;; This function calls:
  1036 ;;		_OpenTimer0
  1037 ;;		_OpenTimer1
  1038 ;;		_OpenUSART
  1039 ;;		_ToMainHigh_recvmsg
  1040 ;;		_ToMainLow_recvmsg
  1041 ;;		_block_on_To_msgqueues
  1042 ;;		_enable_interrupts
  1043 ;;		_i2c_configure_slave
  1044 ;;		_init_i2c
  1045 ;;		_init_queues
  1046 ;;		_init_timer0_lthread
  1047 ;;		_init_timer1_lthread
  1048 ;;		_init_uart_lthread
  1049 ;;		_init_uart_recv
  1050 ;;		_move
  1051 ;;		_moveDist
  1052 ;;		_start_i2c_slave_reply
  1053 ;;		_stop
  1054 ;;		_timer0_lthread
  1055 ;;		_timer1_lthread
  1056 ;;		_turn
  1057 ;;		_uart_lthread
  1058 ;; This function is called by:
  1059 ;;		Startup code after reset
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text0
  1064  000634                     __ptext0:
  1065                           	opt stack 0
  1066  000634                     _main:
  1067                           	opt stack 15
  1068                           
  1069                           ;main.c: 39: signed char length;
  1070                           ;main.c: 40: unsigned char msgtype;
  1071                           ;main.c: 41: unsigned char last_reg_recvd;
  1072                           ;main.c: 42: unsigned char baud, UARTConfig;
  1073                           ;main.c: 43: uart_comm uc;
  1074                           ;main.c: 44: i2c_comm ic;
  1075                           ;main.c: 45: unsigned char msgbuffer[10 + 1];
  1076                           ;main.c: 46: uart_thread_struct uthread_data;
  1077                           ;main.c: 47: timer1_thread_struct t1thread_data;
  1078                           ;main.c: 48: timer0_thread_struct t0thread_data;
  1079                           ;main.c: 51: PORTA = 0x0;
  1080                           
  1081                           ;incstack = 0
  1082  000634  0E00               	movlw	0
  1083  000636  6E80               	movwf	3968,c	;volatile
  1084                           
  1085                           ;main.c: 52: LATA = 0x0;
  1086  000638  0E00               	movlw	0
  1087  00063A  6E89               	movwf	3977,c	;volatile
  1088                           
  1089                           ;main.c: 53: ADCON1 = 0x0F;
  1090  00063C  0E0F               	movlw	15
  1091  00063E  6EC1               	movwf	4033,c	;volatile
  1092                           
  1093                           ;main.c: 54: CMCON = 0x07;
  1094  000640  0E07               	movlw	7
  1095  000642  6EB4               	movwf	4020,c	;volatile
  1096                           
  1097                           ;main.c: 55: TRISA = 0x00;
  1098  000644  0E00               	movlw	0
  1099  000646  6E92               	movwf	3986,c	;volatile
  1100                           
  1101                           ;main.c: 58: PORTB = 0x0;
  1102  000648  0E00               	movlw	0
  1103  00064A  6E81               	movwf	3969,c	;volatile
  1104                           
  1105                           ;main.c: 59: LATB = 0x0;
  1106  00064C  0E00               	movlw	0
  1107  00064E  6E8A               	movwf	3978,c	;volatile
  1108                           
  1109                           ;main.c: 60: TRISB = 0xFF;
  1110  000650  6893               	setf	3987,c	;volatile
  1111                           
  1112                           ;main.c: 62: OSCCON = 0x82;
  1113  000652  0E82               	movlw	130
  1114  000654  6ED3               	movwf	4051,c	;volatile
  1115                           
  1116                           ;main.c: 63: OSCTUNEbits.PLLEN = 1;
  1117  000656  8C9B               	bsf	3995,6,c	;volatile
  1118                           
  1119                           ;main.c: 66: init_uart_recv(&uc);
  1120  000658  0101               	movlb	1	; () banked
  1121  00065A  0E01               	movlw	high main@uc
  1122  00065C  0100               	movlb	0	; () banked
  1123  00065E  6F9E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1124  000660  0101               	movlb	1	; () banked
  1125  000662  0E8D               	movlw	low main@uc
  1126  000664  0100               	movlb	0	; () banked
  1127  000666  6F9D               	movwf	init_uart_recv@uc& (0+255),b
  1128  000668  ECFF  F00F         	call	_init_uart_recv	;wreg free
  1129                           
  1130                           ;main.c: 69: init_i2c(&ic);
  1131  00066C  0101               	movlb	1	; () banked
  1132  00066E  0E01               	movlw	high main@ic
  1133  000670  0100               	movlb	0	; () banked
  1134  000672  6F9E               	movwf	(init_i2c@ic+1)& (0+255),b
  1135  000674  0101               	movlb	1	; () banked
  1136  000676  0EAC               	movlw	low main@ic
  1137  000678  0100               	movlb	0	; () banked
  1138  00067A  6F9D               	movwf	init_i2c@ic& (0+255),b
  1139  00067C  EC5A  F00C         	call	_init_i2c	;wreg free
  1140                           
  1141                           ;main.c: 72: init_timer1_lthread(&t1thread_data);
  1142  000680  0101               	movlb	1	; () banked
  1143  000682  0E01               	movlw	high main@t1thread_data
  1144  000684  0100               	movlb	0	; () banked
  1145  000686  6F9E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1146  000688  0101               	movlb	1	; () banked
  1147  00068A  0EA0               	movlw	low main@t1thread_data
  1148  00068C  0100               	movlb	0	; () banked
  1149  00068E  6F9D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1150  000690  EC00  F00B         	call	_init_timer1_lthread	;wreg free
  1151                           
  1152                           ;main.c: 75: init_timer0_lthread(&t0thread_data);
  1153  000694  0101               	movlb	1	; () banked
  1154  000696  0E01               	movlw	high main@t0thread_data
  1155  000698  0100               	movlb	0	; () banked
  1156  00069A  6F9E               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1157  00069C  0101               	movlb	1	; () banked
  1158  00069E  0E94               	movlw	low main@t0thread_data
  1159  0006A0  0100               	movlb	0	; () banked
  1160  0006A2  6F9D               	movwf	init_timer0_lthread@tptr& (0+255),b
  1161  0006A4  ECC8  F008         	call	_init_timer0_lthread	;wreg free
  1162                           
  1163                           ;main.c: 78: init_uart_lthread(&uthread_data);
  1164  0006A8  0101               	movlb	1	; () banked
  1165  0006AA  0E01               	movlw	high main@uthread_data
  1166  0006AC  0100               	movlb	0	; () banked
  1167  0006AE  6F9E               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1168  0006B0  0101               	movlb	1	; () banked
  1169  0006B2  0E82               	movlw	low main@uthread_data
  1170  0006B4  0100               	movlb	0	; () banked
  1171  0006B6  6F9D               	movwf	init_uart_lthread@uptr& (0+255),b
  1172  0006B8  EC4E  F010         	call	_init_uart_lthread	;wreg free
  1173                           
  1174                           ;main.c: 81: init_queues();
  1175  0006BC  EC4A  F00D         	call	_init_queues	;wreg free
  1176                           
  1177                           ;main.c: 85: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1178  0006C0  0EAF               	movlw	175
  1179  0006C2  ECA3  F00F         	call	_OpenTimer0
  1180                           
  1181                           ;main.c: 86: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1182  0006C6  0EC7               	movlw	199
  1183  0006C8  EC05  F00F         	call	_OpenTimer1
  1184                           
  1185                           ;main.c: 87: T0CONbits.TMR0ON = 0;;
  1186  0006CC  9ED5               	bcf	4053,7,c	;volatile
  1187                           
  1188                           ;main.c: 88: T1CONbits.TMR1ON = 0;;
  1189  0006CE  90CD               	bcf	4045,0,c	;volatile
  1190                           
  1191                           ;main.c: 91: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111
      +                          ;
  1192  0006D0  0EEC               	movlw	236
  1193  0006D2  0101               	movlb	1	; () banked
  1194  0006D4  6F7C               	movwf	main@UARTConfig& (0+255),b
  1195                           
  1196                           ; BSR set to: 1
  1197                           ;main.c: 92: baud = 77;
  1198  0006D6  0E4D               	movlw	77
  1199  0006D8  0101               	movlb	1	; () banked
  1200  0006DA  6F7B               	movwf	main@baud& (0+255),b
  1201                           
  1202                           ; BSR set to: 1
  1203                           ;main.c: 93: OpenUSART(UARTConfig,baud);
  1204  0006DC  0101               	movlb	1	; () banked
  1205  0006DE  0100               	movlb	0	; () banked
  1206  0006E0  C17B  F09D         	movff	main@baud,OpenUSART@spbrg
  1207  0006E4  0100               	movlb	0	; () banked
  1208  0006E6  6B9E               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1209  0006E8  0101               	movlb	1	; () banked
  1210  0006EA  517C               	movf	main@UARTConfig& (0+255),w,b
  1211  0006EC  ECDF  F00B         	call	_OpenUSART
  1212                           
  1213                           ;main.c: 98: IPR1bits.TMR1IP = 0;
  1214  0006F0  909F               	bcf	3999,0,c	;volatile
  1215                           
  1216                           ;main.c: 100: IPR1bits.RCIP = 0;
  1217  0006F2  9A9F               	bcf	3999,5,c	;volatile
  1218                           
  1219                           ;main.c: 102: IPR1bits.TXIP = 0;
  1220  0006F4  989F               	bcf	3999,4,c	;volatile
  1221                           
  1222                           ;main.c: 104: IPR1bits.SSPIP = 1;
  1223  0006F6  869F               	bsf	3999,3,c	;volatile
  1224                           
  1225                           ;main.c: 107: i2c_configure_slave(0x9A);
  1226  0006F8  0E9A               	movlw	154
  1227  0006FA  EC8F  F00F         	call	_i2c_configure_slave
  1228                           
  1229                           ;main.c: 110: PIE1bits.SSPIE = 1;
  1230  0006FE  869D               	bsf	3997,3,c	;volatile
  1231                           
  1232                           ;main.c: 114: enable_interrupts();
  1233  000700  EC47  F010         	call	_enable_interrupts	;wreg free
  1234  000704                     l3280:
  1235                           
  1236                           ;main.c: 118: ready = t1thread_data.ready && t0thread_data.ready;
  1237  000704  0E00               	movlw	0
  1238  000706  0101               	movlb	1	; () banked
  1239  000708  6F7E               	movwf	_main$709& (0+255),b
  1240                           
  1241                           ; BSR set to: 1
  1242  00070A  0101               	movlb	1	; () banked
  1243  00070C  51AB               	movf	(main@t1thread_data+11)& (0+255),w,b
  1244  00070E  B4D8               	btfsc	status,2,c
  1245  000710  D007               	goto	l3288
  1246                           
  1247                           ; BSR set to: 1
  1248  000712  0101               	movlb	1	; () banked
  1249  000714  519F               	movf	(main@t0thread_data+11)& (0+255),w,b
  1250  000716  B4D8               	btfsc	status,2,c
  1251  000718  D003               	goto	l3288
  1252                           
  1253                           ; BSR set to: 1
  1254  00071A  0E01               	movlw	1
  1255  00071C  0101               	movlb	1	; () banked
  1256  00071E  6F7E               	movwf	_main$709& (0+255),b
  1257  000720                     l3288:
  1258                           
  1259                           ; BSR set to: 1
  1260  000720  C17E  F1F0         	movff	_main$709,_ready
  1261                           
  1262                           ;main.c: 119: if(ready){
  1263  000724  0101               	movlb	1	; () banked
  1264  000726  51F0               	movf	_ready& (0+255),w,b
  1265  000728  B4D8               	btfsc	status,2,c
  1266  00072A  D098               	goto	l3322
  1267                           
  1268                           ; BSR set to: 1
  1269                           ;main.c: 120: ready = false;
  1270  00072C  0E00               	movlw	0
  1271  00072E  0101               	movlb	1	; () banked
  1272  000730  6FF0               	movwf	_ready& (0+255),b
  1273                           
  1274                           ; BSR set to: 1
  1275                           ;main.c: 121: int cmd = cmds[curCmd];
  1276  000732  0EDC               	movlw	low _cmds
  1277  000734  0100               	movlb	0	; () banked
  1278  000736  6FC6               	movwf	??_main& (0+255),b
  1279  000738  0E01               	movlw	high _cmds
  1280  00073A  6FC7               	movwf	(??_main+1)& (0+255),b
  1281  00073C  90D8               	bcf	status,0,c
  1282  00073E  0101               	movlb	1	; () banked
  1283  000740  3500               	rlcf	_curCmd& (0+255),w,b
  1284  000742  6ED9               	movwf	fsr2l,c
  1285  000744  0101               	movlb	1	; () banked
  1286  000746  3501               	rlcf	(_curCmd+1)& (0+255),w,b
  1287  000748  6EDA               	movwf	fsr2h,c
  1288  00074A  0100               	movlb	0	; () banked
  1289  00074C  51C6               	movf	??_main& (0+255),w,b
  1290  00074E  26D9               	addwf	fsr2l,f,c
  1291  000750  0100               	movlb	0	; () banked
  1292  000752  51C7               	movf	(??_main+1)& (0+255),w,b
  1293  000754  22DA               	addwfc	fsr2h,f,c
  1294  000756  0101               	movlb	1	; () banked
  1295  000758  CFDE F179          	movff	postinc2,main@cmd
  1296  00075C  0101               	movlb	1	; () banked
  1297  00075E  CFDD F17A          	movff	postdec2,main@cmd+1
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 122: int arg = args[curCmd];
  1301  000762  0EC8               	movlw	low _args
  1302  000764  0100               	movlb	0	; () banked
  1303  000766  6FC6               	movwf	??_main& (0+255),b
  1304  000768  0E01               	movlw	high _args
  1305  00076A  6FC7               	movwf	(??_main+1)& (0+255),b
  1306  00076C  90D8               	bcf	status,0,c
  1307  00076E  0101               	movlb	1	; () banked
  1308  000770  3500               	rlcf	_curCmd& (0+255),w,b
  1309  000772  6ED9               	movwf	fsr2l,c
  1310  000774  0101               	movlb	1	; () banked
  1311  000776  3501               	rlcf	(_curCmd+1)& (0+255),w,b
  1312  000778  6EDA               	movwf	fsr2h,c
  1313  00077A  0100               	movlb	0	; () banked
  1314  00077C  51C6               	movf	??_main& (0+255),w,b
  1315  00077E  26D9               	addwf	fsr2l,f,c
  1316  000780  0100               	movlb	0	; () banked
  1317  000782  51C7               	movf	(??_main+1)& (0+255),w,b
  1318  000784  22DA               	addwfc	fsr2h,f,c
  1319  000786  0101               	movlb	1	; () banked
  1320  000788  CFDE F17F          	movff	postinc2,main@arg
  1321  00078C  0101               	movlb	1	; () banked
  1322  00078E  CFDD F180          	movff	postdec2,main@arg+1
  1323                           
  1324                           ;main.c: 123: switch(cmd){
  1325  000792  D047               	goto	l3318
  1326  000794                     l3298:
  1327                           
  1328                           ;main.c: 126: t1thread_data.ready = false;
  1329  000794  0E00               	movlw	0
  1330  000796  0101               	movlb	1	; () banked
  1331  000798  6FAB               	movwf	(main@t1thread_data+11)& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 127: moveDist(&t1thread_data, arg);
  1335  00079A  0101               	movlb	1	; () banked
  1336  00079C  0E01               	movlw	high main@t1thread_data
  1337  00079E  0100               	movlb	0	; () banked
  1338  0007A0  6FBC               	movwf	(moveDist@tptr+1)& (0+255),b
  1339  0007A2  0101               	movlb	1	; () banked
  1340  0007A4  0EA0               	movlw	low main@t1thread_data
  1341  0007A6  0100               	movlb	0	; () banked
  1342  0007A8  6FBB               	movwf	moveDist@tptr& (0+255),b
  1343  0007AA  C17F  F0BD         	movff	main@arg,moveDist@dist
  1344  0007AE  C180  F0BE         	movff	main@arg+1,moveDist@dist+1
  1345  0007B2  EC51  F00A         	call	_moveDist	;wreg free
  1346                           
  1347                           ;main.c: 128: break;
  1348  0007B6  D04F               	goto	l3320
  1349  0007B8                     l3302:
  1350                           
  1351                           ;main.c: 131: t1thread_data.ready = false;
  1352  0007B8  0E00               	movlw	0
  1353  0007BA  0101               	movlb	1	; () banked
  1354  0007BC  6FAB               	movwf	(main@t1thread_data+11)& (0+255),b
  1355                           
  1356                           ; BSR set to: 1
  1357                           ;main.c: 132: move(&t1thread_data);
  1358  0007BE  0101               	movlb	1	; () banked
  1359  0007C0  0E01               	movlw	high main@t1thread_data
  1360  0007C2  0100               	movlb	0	; () banked
  1361  0007C4  6FBC               	movwf	(move@tptr+1)& (0+255),b
  1362  0007C6  0101               	movlb	1	; () banked
  1363  0007C8  0EA0               	movlw	low main@t1thread_data
  1364  0007CA  0100               	movlb	0	; () banked
  1365  0007CC  6FBB               	movwf	move@tptr& (0+255),b
  1366  0007CE  EC20  F00C         	call	_move	;wreg free
  1367                           
  1368                           ;main.c: 133: break;
  1369  0007D2  D041               	goto	l3320
  1370  0007D4                     l3306:
  1371                           
  1372                           ;main.c: 136: t0thread_data.ready = false;
  1373  0007D4  0E00               	movlw	0
  1374  0007D6  0101               	movlb	1	; () banked
  1375  0007D8  6F9F               	movwf	(main@t0thread_data+11)& (0+255),b
  1376                           
  1377                           ; BSR set to: 1
  1378                           ;main.c: 137: turn(&t0thread_data, arg);
  1379  0007DA  0101               	movlb	1	; () banked
  1380  0007DC  0E01               	movlw	high main@t0thread_data
  1381  0007DE  0100               	movlb	0	; () banked
  1382  0007E0  6FBC               	movwf	(turn@tptr+1)& (0+255),b
  1383  0007E2  0101               	movlb	1	; () banked
  1384  0007E4  0E94               	movlw	low main@t0thread_data
  1385  0007E6  0100               	movlb	0	; () banked
  1386  0007E8  6FBB               	movwf	turn@tptr& (0+255),b
  1387  0007EA  C17F  F0BD         	movff	main@arg,turn@angle
  1388  0007EE  C180  F0BE         	movff	main@arg+1,turn@angle+1
  1389  0007F2  EC6B  F007         	call	_turn	;wreg free
  1390                           
  1391                           ;main.c: 138: break;
  1392  0007F6  D02F               	goto	l3320
  1393  0007F8                     l3310:
  1394                           
  1395                           ;main.c: 141: t1thread_data.ready = false;
  1396  0007F8  0E00               	movlw	0
  1397  0007FA  0101               	movlb	1	; () banked
  1398  0007FC  6FAB               	movwf	(main@t1thread_data+11)& (0+255),b
  1399                           
  1400                           ; BSR set to: 1
  1401                           ;main.c: 142: stop(&t1thread_data);
  1402  0007FE  0101               	movlb	1	; () banked
  1403  000800  0E01               	movlw	high main@t1thread_data
  1404  000802  0100               	movlb	0	; () banked
  1405  000804  6FBC               	movwf	(stop@tptr+1)& (0+255),b
  1406  000806  0101               	movlb	1	; () banked
  1407  000808  0EA0               	movlw	low main@t1thread_data
  1408  00080A  0100               	movlb	0	; () banked
  1409  00080C  6FBB               	movwf	stop@tptr& (0+255),b
  1410  00080E  EC1D  F00D         	call	_stop	;wreg free
  1411                           
  1412                           ;main.c: 143: break;
  1413  000812  D021               	goto	l3320
  1414  000814                     l3314:
  1415                           
  1416                           ;main.c: 146: t1thread_data.ready = true;
  1417  000814  0E01               	movlw	1
  1418  000816  0101               	movlb	1	; () banked
  1419  000818  6FAB               	movwf	(main@t1thread_data+11)& (0+255),b
  1420                           
  1421                           ;main.c: 147: t0thread_data.ready = true;
  1422  00081A  0E01               	movlw	1
  1423  00081C  0101               	movlb	1	; () banked
  1424  00081E  6F9F               	movwf	(main@t0thread_data+11)& (0+255),b
  1425                           
  1426                           ;main.c: 148: break;
  1427  000820  D01A               	goto	l3320
  1428  000822                     l3318:
  1429                           
  1430                           ; BSR set to: 1
  1431  000822  0101               	movlb	1	; () banked
  1432  000824  C179  F0C6         	movff	main@cmd,??_main
  1433  000828  0101               	movlb	1	; () banked
  1434  00082A  C17A  F0C7         	movff	main@cmd+1,??_main+1
  1435                           
  1436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1437                           ; Switch size 1, requested type "space"
  1438                           ; Number of cases is 1, Range of values is 0 to 0
  1439                           ; switch strategies available:
  1440                           ; Name         Instructions Cycles
  1441                           ; simple_byte            4     3 (average)
  1442                           ;	Chosen strategy is simple_byte
  1443  00082E  0100               	movlb	0	; () banked
  1444  000830  51C7               	movf	(??_main+1)& (0+255),w,b
  1445  000832  0A00               	xorlw	0	; case 0
  1446  000834  A4D8               	btfss	status,2,c
  1447  000836  D7EE               	goto	l3314
  1448                           
  1449                           ; BSR set to: 0
  1450                           ; Switch size 1, requested type "space"
  1451                           ; Number of cases is 4, Range of values is 0 to 3
  1452                           ; switch strategies available:
  1453                           ; Name         Instructions Cycles
  1454                           ; simple_byte           13     7 (average)
  1455                           ;	Chosen strategy is simple_byte
  1456  000838  0100               	movlb	0	; () banked
  1457  00083A  51C6               	movf	??_main& (0+255),w,b
  1458  00083C  0A00               	xorlw	0	; case 0
  1459  00083E  B4D8               	btfsc	status,2,c
  1460  000840  D7A9               	goto	l3298
  1461  000842  0A01               	xorlw	1	; case 1
  1462  000844  B4D8               	btfsc	status,2,c
  1463  000846  D7B8               	goto	l3302
  1464  000848  0A03               	xorlw	3	; case 2
  1465  00084A  B4D8               	btfsc	status,2,c
  1466  00084C  D7C3               	goto	l3306
  1467  00084E  0A01               	xorlw	1	; case 3
  1468  000850  B4D8               	btfsc	status,2,c
  1469  000852  D7D2               	goto	l3310
  1470  000854  D7DF               	goto	l3314
  1471  000856                     l3320:
  1472                           
  1473                           ;main.c: 151: curCmd++;
  1474  000856  0101               	movlb	1	; () banked
  1475  000858  4B00               	infsnz	_curCmd& (0+255),f,b
  1476  00085A  2B01               	incf	(_curCmd+1)& (0+255),f,b
  1477  00085C                     l3322:
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;main.c: 152: }
  1481                           ;main.c: 155: block_on_To_msgqueues();
  1482  00085C  ECEF  F00C         	call	_block_on_To_msgqueues	;wreg free
  1483                           
  1484                           ;main.c: 158: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1485  000860  0101               	movlb	1	; () banked
  1486  000862  0E01               	movlw	high main@msgtype
  1487  000864  0100               	movlb	0	; () banked
  1488  000866  6FB6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1489  000868  0101               	movlb	1	; () banked
  1490  00086A  0E92               	movlw	low main@msgtype
  1491  00086C  0100               	movlb	0	; () banked
  1492  00086E  6FB5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1493  000870  0101               	movlb	1	; () banked
  1494  000872  0E01               	movlw	high main@msgbuffer
  1495  000874  0100               	movlb	0	; () banked
  1496  000876  6FB8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1497  000878  0101               	movlb	1	; () banked
  1498  00087A  0E6E               	movlw	low main@msgbuffer
  1499  00087C  0100               	movlb	0	; () banked
  1500  00087E  6FB7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1501  000880  0E0A               	movlw	10
  1502  000882  ECD1  F00E         	call	_ToMainHigh_recvmsg
  1503  000886  0101               	movlb	1	; () banked
  1504  000888  6F93               	movwf	main@length& (0+255),b
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;main.c: 159: if (length < 0) {
  1508  00088A  0101               	movlb	1	; () banked
  1509  00088C  BF93               	btfsc	main@length& (0+255),7,b
  1510  00088E  D0A9               	goto	l3362
  1511  000890  D09A               	goto	l3360
  1512  000892                     l3330:
  1513                           
  1514                           ; BSR set to: 1
  1515                           ;main.c: 167: {
  1516                           ;main.c: 168: timer0_lthread(&t0thread_data);
  1517  000892  0101               	movlb	1	; () banked
  1518  000894  0E01               	movlw	high main@t0thread_data
  1519  000896  0100               	movlb	0	; () banked
  1520  000898  6FBC               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1521  00089A  0101               	movlb	1	; () banked
  1522  00089C  0E94               	movlw	low main@t0thread_data
  1523  00089E  0100               	movlb	0	; () banked
  1524  0008A0  6FBB               	movwf	timer0_lthread@tptr& (0+255),b
  1525  0008A2  EC5F  F006         	call	_timer0_lthread	;wreg free
  1526                           
  1527                           ;main.c: 169: break;
  1528  0008A6  D09D               	goto	l3362
  1529  0008A8                     l152:
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;main.c: 172: {
  1533                           ;main.c: 173: last_reg_recvd = msgbuffer[0];
  1534  0008A8  C16E  F18C         	movff	main@msgbuffer,main@last_reg_recvd
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;main.c: 174: unsigned char command = (last_reg_recvd&192)>>6;
  1538  0008AC  0101               	movlb	1	; () banked
  1539  0008AE  458C               	rlncf	main@last_reg_recvd& (0+255),w,b
  1540  0008B0  46E8               	rlncf	wreg,f,c
  1541  0008B2  0B03               	andlw	3
  1542  0008B4  0B03               	andlw	3
  1543  0008B6  0101               	movlb	1	; () banked
  1544  0008B8  6F7D               	movwf	main@command& (0+255),b
  1545                           
  1546                           ;main.c: 175: unsigned char valuec = last_reg_recvd&63;
  1547  0008BA  0101               	movlb	1	; () banked
  1548  0008BC  518C               	movf	main@last_reg_recvd& (0+255),w,b
  1549  0008BE  0B3F               	andlw	63
  1550  0008C0  0101               	movlb	1	; () banked
  1551  0008C2  6F81               	movwf	main@valuec& (0+255),b
  1552                           
  1553                           ;main.c: 176: switch(command){
  1554  0008C4  D040               	goto	l3344
  1555  0008C6                     l3334:
  1556                           
  1557                           ; BSR set to: 1
  1558                           ;main.c: 178: {
  1559                           ;main.c: 179: stop(&t1thread_data);
  1560  0008C6  0101               	movlb	1	; () banked
  1561  0008C8  0E01               	movlw	high main@t1thread_data
  1562  0008CA  0100               	movlb	0	; () banked
  1563  0008CC  6FBC               	movwf	(stop@tptr+1)& (0+255),b
  1564  0008CE  0101               	movlb	1	; () banked
  1565  0008D0  0EA0               	movlw	low main@t1thread_data
  1566  0008D2  0100               	movlb	0	; () banked
  1567  0008D4  6FBB               	movwf	stop@tptr& (0+255),b
  1568  0008D6  EC1D  F00D         	call	_stop	;wreg free
  1569                           
  1570                           ;main.c: 180: break;
  1571  0008DA  D083               	goto	l3362
  1572  0008DC                     l3336:
  1573                           
  1574                           ;main.c: 183: {
  1575                           ;main.c: 184: move(&t1thread_data);
  1576  0008DC  0101               	movlb	1	; () banked
  1577  0008DE  0E01               	movlw	high main@t1thread_data
  1578  0008E0  0100               	movlb	0	; () banked
  1579  0008E2  6FBC               	movwf	(move@tptr+1)& (0+255),b
  1580  0008E4  0101               	movlb	1	; () banked
  1581  0008E6  0EA0               	movlw	low main@t1thread_data
  1582  0008E8  0100               	movlb	0	; () banked
  1583  0008EA  6FBB               	movwf	move@tptr& (0+255),b
  1584  0008EC  EC20  F00C         	call	_move	;wreg free
  1585                           
  1586                           ;main.c: 185: break;
  1587  0008F0  D078               	goto	l3362
  1588  0008F2                     l3338:
  1589                           
  1590                           ;main.c: 188: {
  1591                           ;main.c: 189: turn(&t0thread_data, -valuec);
  1592  0008F2  0101               	movlb	1	; () banked
  1593  0008F4  0E01               	movlw	high main@t0thread_data
  1594  0008F6  0100               	movlb	0	; () banked
  1595  0008F8  6FBC               	movwf	(turn@tptr+1)& (0+255),b
  1596  0008FA  0101               	movlb	1	; () banked
  1597  0008FC  0E94               	movlw	low main@t0thread_data
  1598  0008FE  0100               	movlb	0	; () banked
  1599  000900  6FBB               	movwf	turn@tptr& (0+255),b
  1600  000902  0101               	movlb	1	; () banked
  1601  000904  5181               	movf	main@valuec& (0+255),w,b
  1602  000906  0100               	movlb	0	; () banked
  1603  000908  6FC6               	movwf	??_main& (0+255),b
  1604  00090A  6BC7               	clrf	(??_main+1)& (0+255),b
  1605  00090C  0100               	movlb	0	; () banked
  1606  00090E  1FC6               	comf	??_main& (0+255),f,b
  1607  000910  1FC7               	comf	(??_main+1)& (0+255),f,b
  1608  000912  4BC6               	infsnz	??_main& (0+255),f,b
  1609  000914  2BC7               	incf	(??_main+1)& (0+255),f,b
  1610  000916  C0C6  F0BD         	movff	??_main,turn@angle
  1611  00091A  C0C7  F0BE         	movff	??_main+1,turn@angle+1
  1612  00091E  EC6B  F007         	call	_turn	;wreg free
  1613                           
  1614                           ;main.c: 190: break;
  1615  000922  D05F               	goto	l3362
  1616  000924                     l3340:
  1617                           
  1618                           ;main.c: 193: {
  1619                           ;main.c: 194: turn(&t0thread_data, valuec);
  1620  000924  0101               	movlb	1	; () banked
  1621  000926  0E01               	movlw	high main@t0thread_data
  1622  000928  0100               	movlb	0	; () banked
  1623  00092A  6FBC               	movwf	(turn@tptr+1)& (0+255),b
  1624  00092C  0101               	movlb	1	; () banked
  1625  00092E  0E94               	movlw	low main@t0thread_data
  1626  000930  0100               	movlb	0	; () banked
  1627  000932  6FBB               	movwf	turn@tptr& (0+255),b
  1628  000934  0101               	movlb	1	; () banked
  1629  000936  0100               	movlb	0	; () banked
  1630  000938  C181  F0BD         	movff	main@valuec,turn@angle
  1631  00093C  0100               	movlb	0	; () banked
  1632  00093E  6BBE               	clrf	(turn@angle+1)& (0+255),b
  1633  000940  EC6B  F007         	call	_turn	;wreg free
  1634                           
  1635                           ;main.c: 195: break;
  1636  000944  D04E               	goto	l3362
  1637  000946                     l3344:
  1638  000946  0101               	movlb	1	; () banked
  1639  000948  517D               	movf	main@command& (0+255),w,b
  1640                           
  1641                           ; Switch size 1, requested type "space"
  1642                           ; Number of cases is 4, Range of values is 0 to 3
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte           13     7 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647  00094A  0A00               	xorlw	0	; case 0
  1648  00094C  B4D8               	btfsc	status,2,c
  1649  00094E  D7BB               	goto	l3334
  1650  000950  0A01               	xorlw	1	; case 1
  1651  000952  B4D8               	btfsc	status,2,c
  1652  000954  D7C3               	goto	l3336
  1653  000956  0A03               	xorlw	3	; case 2
  1654  000958  B4D8               	btfsc	status,2,c
  1655  00095A  D7CB               	goto	l3338
  1656  00095C  0A01               	xorlw	1	; case 3
  1657  00095E  B4D8               	btfsc	status,2,c
  1658  000960  D7E1               	goto	l3340
  1659  000962  D03F               	goto	l3362
  1660  000964                     l159:
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 201: {
  1664                           ;main.c: 204: last_reg_recvd = msgbuffer[0];
  1665  000964  C16E  F18C         	movff	main@msgbuffer,main@last_reg_recvd
  1666                           
  1667                           ;main.c: 205: break;
  1668  000968  D03C               	goto	l3362
  1669  00096A                     l3346:
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;main.c: 218: {
  1673                           ;main.c: 219: length = 2;
  1674  00096A  0E02               	movlw	2
  1675  00096C  0101               	movlb	1	; () banked
  1676  00096E  6F93               	movwf	main@length& (0+255),b
  1677                           
  1678                           ;main.c: 220: msgbuffer[0] = 0x55;
  1679  000970  0E55               	movlw	85
  1680  000972  0101               	movlb	1	; () banked
  1681  000974  6F6E               	movwf	main@msgbuffer& (0+255),b
  1682                           
  1683                           ;main.c: 221: msgbuffer[1] = 0xAA;
  1684  000976  0EAA               	movlw	170
  1685  000978  0101               	movlb	1	; () banked
  1686  00097A  6F6F               	movwf	(main@msgbuffer+1)& (0+255),b
  1687                           
  1688                           ;main.c: 222: break;
  1689  00097C  D017               	goto	l3356
  1690  00097E                     l3348:
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 225: {
  1694                           ;main.c: 226: length = 1;
  1695  00097E  0E01               	movlw	1
  1696  000980  0101               	movlb	1	; () banked
  1697  000982  6F93               	movwf	main@length& (0+255),b
  1698                           
  1699                           ;main.c: 227: msgbuffer[0] = 0x3A;
  1700  000984  0E3A               	movlw	58
  1701  000986  D004               	goto	L1
  1702  000988                     l3350:
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;main.c: 231: {
  1706                           ;main.c: 232: length = 1;
  1707  000988  0E01               	movlw	1
  1708  00098A  0101               	movlb	1	; () banked
  1709  00098C  6F93               	movwf	main@length& (0+255),b
  1710                           
  1711                           ;main.c: 233: msgbuffer[0] = 0xA3;
  1712  00098E  0EA3               	movlw	163
  1713  000990                     L1:
  1714  000990  0101               	movlb	1	; () banked
  1715  000992  6F6E               	movwf	main@msgbuffer& (0+255),b
  1716                           
  1717                           ;main.c: 234: break;
  1718  000994  D00B               	goto	l3356
  1719  000996                     l3354:
  1720                           
  1721                           ; BSR set to: 1
  1722  000996  0101               	movlb	1	; () banked
  1723  000998  518C               	movf	main@last_reg_recvd& (0+255),w,b
  1724                           
  1725                           ; Switch size 1, requested type "space"
  1726                           ; Number of cases is 3, Range of values is 168 to 170
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte           10     6 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731  00099A  0AA8               	xorlw	168	; case 168
  1732  00099C  B4D8               	btfsc	status,2,c
  1733  00099E  D7EF               	goto	l3348
  1734  0009A0  0A01               	xorlw	1	; case 169
  1735  0009A2  B4D8               	btfsc	status,2,c
  1736  0009A4  D7F1               	goto	l3350
  1737  0009A6  0A03               	xorlw	3	; case 170
  1738  0009A8  B4D8               	btfsc	status,2,c
  1739  0009AA  D7DF               	goto	l3346
  1740  0009AC                     l3356:
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;main.c: 237: start_i2c_slave_reply(length, msgbuffer);
  1744  0009AC  0101               	movlb	1	; () banked
  1745  0009AE  0E01               	movlw	high main@msgbuffer
  1746  0009B0  0100               	movlb	0	; () banked
  1747  0009B2  6F9E               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1748  0009B4  0101               	movlb	1	; () banked
  1749  0009B6  0E6E               	movlw	low main@msgbuffer
  1750  0009B8  0100               	movlb	0	; () banked
  1751  0009BA  6F9D               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1752  0009BC  0101               	movlb	1	; () banked
  1753  0009BE  5193               	movf	main@length& (0+255),w,b
  1754  0009C0  ECE9  F006         	call	_start_i2c_slave_reply
  1755                           
  1756                           ;main.c: 238: break;
  1757  0009C4  D00E               	goto	l3362
  1758  0009C6                     l3360:
  1759  0009C6  0101               	movlb	1	; () banked
  1760  0009C8  5192               	movf	main@msgtype& (0+255),w,b
  1761                           
  1762                           ; Switch size 1, requested type "space"
  1763                           ; Number of cases is 4, Range of values is 10 to 42
  1764                           ; switch strategies available:
  1765                           ; Name         Instructions Cycles
  1766                           ; simple_byte           13     7 (average)
  1767                           ;	Chosen strategy is simple_byte
  1768  0009CA  0A0A               	xorlw	10	; case 10
  1769  0009CC  B4D8               	btfsc	status,2,c
  1770  0009CE  D761               	goto	l3330
  1771  0009D0  0A22               	xorlw	34	; case 40
  1772  0009D2  B4D8               	btfsc	status,2,c
  1773  0009D4  D769               	goto	l152
  1774  0009D6  0A01               	xorlw	1	; case 41
  1775  0009D8  B4D8               	btfsc	status,2,c
  1776  0009DA  D7C4               	goto	l159
  1777  0009DC  0A03               	xorlw	3	; case 42
  1778  0009DE  B4D8               	btfsc	status,2,c
  1779  0009E0  D7DA               	goto	l3354
  1780  0009E2                     l3362:
  1781                           
  1782                           ;main.c: 246: }
  1783                           ;main.c: 250: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1784  0009E2  0101               	movlb	1	; () banked
  1785  0009E4  0E01               	movlw	high main@msgtype
  1786  0009E6  0100               	movlb	0	; () banked
  1787  0009E8  6FB6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1788  0009EA  0101               	movlb	1	; () banked
  1789  0009EC  0E92               	movlw	low main@msgtype
  1790  0009EE  0100               	movlb	0	; () banked
  1791  0009F0  6FB5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1792  0009F2  0101               	movlb	1	; () banked
  1793  0009F4  0E01               	movlw	high main@msgbuffer
  1794  0009F6  0100               	movlb	0	; () banked
  1795  0009F8  6FB8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1796  0009FA  0101               	movlb	1	; () banked
  1797  0009FC  0E6E               	movlw	low main@msgbuffer
  1798  0009FE  0100               	movlb	0	; () banked
  1799  000A00  6FB7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1800  000A02  0E0A               	movlw	10
  1801  000A04  ECB6  F00E         	call	_ToMainLow_recvmsg
  1802  000A08  0101               	movlb	1	; () banked
  1803  000A0A  6F93               	movwf	main@length& (0+255),b
  1804                           
  1805                           ; BSR set to: 1
  1806                           ;main.c: 251: if (length < 0) {
  1807  000A0C  0101               	movlb	1	; () banked
  1808  000A0E  BF93               	btfsc	main@length& (0+255),7,b
  1809  000A10  D679               	goto	l3280
  1810  000A12  D02D               	goto	l3374
  1811  000A14                     l3368:
  1812                           
  1813                           ; BSR set to: 1
  1814                           ;main.c: 259: {
  1815                           ;main.c: 260: timer1_lthread(&t1thread_data);
  1816  000A14  0101               	movlb	1	; () banked
  1817  000A16  0E01               	movlw	high main@t1thread_data
  1818  000A18  0100               	movlb	0	; () banked
  1819  000A1A  6FBC               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1820  000A1C  0101               	movlb	1	; () banked
  1821  000A1E  0EA0               	movlw	low main@t1thread_data
  1822  000A20  0100               	movlb	0	; () banked
  1823  000A22  6FBB               	movwf	timer1_lthread@tptr& (0+255),b
  1824  000A24  ECD5  F005         	call	_timer1_lthread	;wreg free
  1825                           
  1826                           ;main.c: 261: break;
  1827  000A28  D66D               	goto	l3280
  1828  000A2A                     l3370:
  1829                           
  1830                           ;main.c: 264: case 31:
  1831                           ;main.c: 265: case 32:
  1832                           ;main.c: 266: {
  1833                           ;main.c: 267: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1834  000A2A  0101               	movlb	1	; () banked
  1835  000A2C  0E01               	movlw	high main@uthread_data
  1836  000A2E  0100               	movlb	0	; () banked
  1837  000A30  6FB8               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1838  000A32  0101               	movlb	1	; () banked
  1839  000A34  0E82               	movlw	low main@uthread_data
  1840  000A36  0100               	movlb	0	; () banked
  1841  000A38  6FB7               	movwf	uart_lthread@uptr& (0+255),b
  1842  000A3A  0101               	movlb	1	; () banked
  1843  000A3C  0100               	movlb	0	; () banked
  1844  000A3E  C192  F0B9         	movff	main@msgtype,uart_lthread@msgtype
  1845  000A42  0100               	movlb	0	; () banked
  1846  000A44  6BBA               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1847  000A46  0101               	movlb	1	; () banked
  1848  000A48  5193               	movf	main@length& (0+255),w,b
  1849  000A4A  0100               	movlb	0	; () banked
  1850  000A4C  6FBB               	movwf	uart_lthread@length& (0+255),b
  1851  000A4E  0100               	movlb	0	; () banked
  1852  000A50  6BBC               	clrf	(uart_lthread@length+1)& (0+255),b
  1853  000A52  0100               	movlb	0	; () banked
  1854  000A54  BFBB               	btfsc	uart_lthread@length& (0+255),7,b
  1855  000A56  07BC               	decf	(uart_lthread@length+1)& (0+255),f,b
  1856  000A58  0101               	movlb	1	; () banked
  1857  000A5A  0E01               	movlw	high main@msgbuffer
  1858  000A5C  0100               	movlb	0	; () banked
  1859  000A5E  6FBE               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1860  000A60  0101               	movlb	1	; () banked
  1861  000A62  0E6E               	movlw	low main@msgbuffer
  1862  000A64  0100               	movlb	0	; () banked
  1863  000A66  6FBD               	movwf	uart_lthread@msgbuffer& (0+255),b
  1864  000A68  ECF3  F009         	call	_uart_lthread	;wreg free
  1865                           
  1866                           ;main.c: 268: break;
  1867  000A6C  D64B               	goto	l3280
  1868  000A6E                     l3374:
  1869  000A6E  0101               	movlb	1	; () banked
  1870  000A70  5192               	movf	main@msgtype& (0+255),w,b
  1871                           
  1872                           ; Switch size 1, requested type "space"
  1873                           ; Number of cases is 4, Range of values is 11 to 32
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte           13     7 (average)
  1877                           ;	Chosen strategy is simple_byte
  1878  000A72  0A0B               	xorlw	11	; case 11
  1879  000A74  B4D8               	btfsc	status,2,c
  1880  000A76  D7CE               	goto	l3368
  1881  000A78  0A15               	xorlw	21	; case 30
  1882  000A7A  B4D8               	btfsc	status,2,c
  1883  000A7C  D7D6               	goto	l3370
  1884  000A7E  0A01               	xorlw	1	; case 31
  1885  000A80  B4D8               	btfsc	status,2,c
  1886  000A82  D7D3               	goto	l3370
  1887  000A84  0A3F               	xorlw	63	; case 32
  1888  000A86  B4D8               	btfsc	status,2,c
  1889  000A88  D7D0               	goto	l3370
  1890  000A8A  D63C               	goto	l3280
  1891  000A8C                     __end_of_main:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postdec1	equ	0xFE5
  1900                           fsr1l	equ	0xFE1
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _uart_lthread *****************
  1908 ;; Defined at:
  1909 ;;		line 12 in file "src/uart_thread.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  uptr            2   55[BANK0 ] PTR struct __uart_thread
  1912 ;;		 -> main@uthread_data(10), 
  1913 ;;  msgtype         2   57[BANK0 ] int 
  1914 ;;  length          2   59[BANK0 ] int 
  1915 ;;  msgbuffer       2   61[BANK0 ] PTR unsigned char 
  1916 ;;		 -> main@msgbuffer(11), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  index           2   64[BANK0 ] int 
  1919 ;;  status          1   63[BANK0 ] char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  2   55[BANK0 ] int 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1929 ;;      Params:         0       8       0       0       0
  1930 ;;      Locals:         0       3       0       0       0
  1931 ;;      Temps:          0       0       0       0       0
  1932 ;;      Totals:         0      11       0       0       0
  1933 ;;Total ram usage:       11 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:   13
  1936 ;; This function calls:
  1937 ;;		_FromMainLow_sendmsg
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text1
  1944  0013E6                     __ptext1:
  1945                           	opt stack 0
  1946  0013E6                     _uart_lthread:
  1947                           	opt stack 16
  1948                           
  1949                           ;uart_thread.c: 13: if (msgtype == 30) {
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;incstack = 0
  1953  0013E6  0100               	movlb	0	; () banked
  1954  0013E8  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1955  0013EA  0A1E               	xorlw	30
  1956  0013EC  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1957  0013EE  B4D8               	btfsc	status,2,c
  1958  0013F0  0012               	return	
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;uart_thread.c: 16: else if(msgtype == 31){
  1962                           
  1963                           ; BSR set to: 0
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;uart_thread.c: 15: }
  1967  0013F2  0100               	movlb	0	; () banked
  1968  0013F4  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1969  0013F6  0A1F               	xorlw	31
  1970  0013F8  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1971  0013FA  A4D8               	btfss	status,2,c
  1972  0013FC  D03F               	goto	l3198
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;uart_thread.c: 18: int index = 0;
  1976  0013FE  0E00               	movlw	0
  1977  001400  0100               	movlb	0	; () banked
  1978  001402  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1979  001404  0E00               	movlw	0
  1980  001406  0100               	movlb	0	; () banked
  1981  001408  6FC0               	movwf	uart_lthread@index& (0+255),b
  1982                           
  1983                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1984  00140A  0E00               	movlw	0
  1985  00140C  0100               	movlb	0	; () banked
  1986  00140E  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1987  001410  0E00               	movlw	0
  1988  001412  0100               	movlb	0	; () banked
  1989  001414  6FC0               	movwf	uart_lthread@index& (0+255),b
  1990  001416                     
  1991                           ; BSR set to: 0
  1992  001416  0100               	movlb	0	; () banked
  1993  001418  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1994  00141A  0A80               	xorlw	128
  1995  00141C  0F80               	addlw	-128
  1996  00141E  0E0A               	movlw	10
  1997  001420  B4D8               	btfsc	status,2,c
  1998  001422  5DC0               	subwf	uart_lthread@index& (0+255),w,b
  1999  001424  B0D8               	btfsc	status,0,c
  2000  001426  D01A               	goto	l3194
  2001                           
  2002                           ; BSR set to: 0
  2003                           
  2004                           ; BSR set to: 0
  2005                           
  2006                           ; BSR set to: 0
  2007  001428  0100               	movlb	0	; () banked
  2008  00142A  51C0               	movf	uart_lthread@index& (0+255),w,b
  2009  00142C  0100               	movlb	0	; () banked
  2010  00142E  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2011  001430  6ED9               	movwf	fsr2l,c
  2012  001432  0100               	movlb	0	; () banked
  2013  001434  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  2014  001436  0100               	movlb	0	; () banked
  2015  001438  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2016  00143A  6EDA               	movwf	fsr2h,c
  2017  00143C  0100               	movlb	0	; () banked
  2018  00143E  51C0               	movf	uart_lthread@index& (0+255),w,b
  2019  001440  0100               	movlb	0	; () banked
  2020  001442  25B7               	addwf	uart_lthread@uptr& (0+255),w,b
  2021  001444  6EE1               	movwf	fsr1l,c
  2022  001446  0100               	movlb	0	; () banked
  2023  001448  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  2024  00144A  0100               	movlb	0	; () banked
  2025  00144C  21B8               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  2026  00144E  6EE2               	movwf	fsr1h,c
  2027  001450  CFDF FFE7          	movff	indf2,indf1
  2028                           
  2029                           ; BSR set to: 0
  2030  001454  0100               	movlb	0	; () banked
  2031  001456  4BC0               	infsnz	uart_lthread@index& (0+255),f,b
  2032  001458  2BC1               	incf	(uart_lthread@index+1)& (0+255),f,b
  2033  00145A  D7DD               	goto	L2
  2034  00145C                     l3194:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  2038  00145C  C0B9  F0B3         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  2039  001460  0100               	movlb	0	; () banked
  2040  001462  C0B8  F0B5         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  2041  001466  0100               	movlb	0	; () banked
  2042  001468  C0B7  F0B4         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  2043  00146C  0100               	movlb	0	; () banked
  2044  00146E  51BB               	movf	uart_lthread@length& (0+255),w,b
  2045  001470  EC1E  F00F         	call	_FromMainLow_sendmsg
  2046  001474  0100               	movlb	0	; () banked
  2047  001476  6FBF               	movwf	uart_lthread@status& (0+255),b
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;uart_thread.c: 25: }
  2051                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  2052                           
  2053                           ; BSR set to: 0
  2054  001478  889D               	bsf	3997,4,c	;volatile
  2055                           
  2056                           ;uart_thread.c: 29: }
  2057  00147A  0012               	return	
  2058  00147C                     l3198:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;uart_thread.c: 30: else if(msgtype == 32){
  2062  00147C  0100               	movlb	0	; () banked
  2063  00147E  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  2064  001480  0A20               	xorlw	32
  2065  001482  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2066  001484  A4D8               	btfss	status,2,c
  2067  001486  0012               	return	
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  2071  001488  0100               	movlb	0	; () banked
  2072  00148A  51BB               	movf	uart_lthread@length& (0+255),w,b
  2073  00148C  0100               	movlb	0	; () banked
  2074  00148E  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2075  001490  6ED9               	movwf	fsr2l,c
  2076  001492  0100               	movlb	0	; () banked
  2077  001494  51BC               	movf	(uart_lthread@length+1)& (0+255),w,b
  2078  001496  0100               	movlb	0	; () banked
  2079  001498  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2080  00149A  6EDA               	movwf	fsr2h,c
  2081  00149C  0E00               	movlw	0
  2082  00149E  6EDF               	movwf	indf2,c
  2083  0014A0  0012               	return	
  2084  0014A2                     __end_of_uart_lthread:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           indf1	equ	0xFE7
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           indf2	equ	0xFDF
  2097                           postinc2	equ	0xFDE
  2098                           postdec2	equ	0xFDD
  2099                           fsr2h	equ	0xFDA
  2100                           fsr2l	equ	0xFD9
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _FromMainLow_sendmsg *****************
  2104 ;; Defined at:
  2105 ;;		line 150 in file "src/messages.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  length          1    wreg     unsigned char 
  2108 ;;  msgtype         1   51[BANK0 ] unsigned char 
  2109 ;;  data            2   52[BANK0 ] PTR void 
  2110 ;;		 -> main@uthread_data(10), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  length          1   54[BANK0 ] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      char 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2122 ;;      Params:         0       3       0       0       0
  2123 ;;      Locals:         0       1       0       0       0
  2124 ;;      Temps:          0       0       0       0       0
  2125 ;;      Totals:         0       4       0       0       0
  2126 ;;Total ram usage:        4 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:   12
  2129 ;; This function calls:
  2130 ;;		_send_msg
  2131 ;; This function is called by:
  2132 ;;		_uart_lthread
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text2
  2137  001E3C                     __ptext2:
  2138                           	opt stack 0
  2139  001E3C                     _FromMainLow_sendmsg:
  2140                           	opt stack 16
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;incstack = 0
  2144                           ;FromMainLow_sendmsg@length stored from wreg
  2145  001E3C  0100               	movlb	0	; () banked
  2146  001E3E  6FB6               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2150  001E40  0102               	movlb	2	; () banked
  2151  001E42  0E02               	movlw	high _FromMainLow_MQ
  2152  001E44  0100               	movlb	0	; () banked
  2153  001E46  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  2154  001E48  0102               	movlb	2	; () banked
  2155  001E4A  0E36               	movlw	low _FromMainLow_MQ
  2156  001E4C  0100               	movlb	0	; () banked
  2157  001E4E  6FA7               	movwf	send_msg@qptr& (0+255),b
  2158  001E50  C0B6  F0A9         	movff	FromMainLow_sendmsg@length,send_msg@length
  2159  001E54  C0B3  F0AA         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2160  001E58  0100               	movlb	0	; () banked
  2161  001E5A  C0B5  F0AC         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2162  001E5E  0100               	movlb	0	; () banked
  2163  001E60  C0B4  F0AB         	movff	FromMainLow_sendmsg@data,send_msg@data
  2164  001E64  ECE9  F007         	call	_send_msg	;wreg free
  2165  001E68  0012               	return	
  2166  001E6A                     __end_of_FromMainLow_sendmsg:
  2167                           	opt stack 0
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           indf1	equ	0xFE7
  2175                           postdec1	equ	0xFE5
  2176                           fsr1h	equ	0xFE2
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _turn *****************
  2186 ;; Defined at:
  2187 ;;		line 32 in file "src/motors.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  tptr            2   59[BANK0 ] PTR struct __timer0_thre
  2190 ;;		 -> main@t0thread_data(12), 
  2191 ;;  angle           2   61[BANK0 ] int 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  test            2   68[BANK0 ] unsigned char [2]
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2203 ;;      Params:         0       4       0       0       0
  2204 ;;      Locals:         0       6       0       0       0
  2205 ;;      Temps:          0       1       0       0       0
  2206 ;;      Totals:         0      11       0       0       0
  2207 ;;Total ram usage:       11 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:   14
  2210 ;; This function calls:
  2211 ;;		_WriteTimer0
  2212 ;;		_abs
  2213 ;;		_sendUARTarr
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text3
  2220  000ED6                     __ptext3:
  2221                           	opt stack 0
  2222  000ED6                     _turn:
  2223                           	opt stack 15
  2224                           
  2225                           ;motors.c: 33: PORTA = 0x01;
  2226                           
  2227                           ;incstack = 0
  2228  000ED6  0E01               	movlw	1
  2229  000ED8  6E80               	movwf	3968,c	;volatile
  2230                           
  2231                           ;motors.c: 34: tptr->curMove = abs(angle);
  2232  000EDA  C0BD  F09D         	movff	turn@angle,abs@a
  2233  000EDE  C0BE  F09E         	movff	turn@angle+1,abs@a+1
  2234  000EE2  EC19  F00E         	call	_abs	;wreg free
  2235  000EE6  0100               	movlb	0	; () banked
  2236  000EE8  EE20 F008          	lfsr	2,8
  2237  000EEC  0100               	movlb	0	; () banked
  2238  000EEE  51BB               	movf	turn@tptr& (0+255),w,b
  2239  000EF0  26D9               	addwf	fsr2l,f,c
  2240  000EF2  0100               	movlb	0	; () banked
  2241  000EF4  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  2242  000EF6  22DA               	addwfc	fsr2h,f,c
  2243  000EF8  0100               	movlb	0	; () banked
  2244  000EFA  C09D  FFDE         	movff	?_abs,postinc2
  2245  000EFE  0100               	movlb	0	; () banked
  2246  000F00  C09E  FFDD         	movff	?_abs+1,postdec2
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;motors.c: 35: tptr->distLim = true;
  2250  000F04  0100               	movlb	0	; () banked
  2251  000F06  EE20 F00A          	lfsr	2,10
  2252  000F0A  0100               	movlb	0	; () banked
  2253  000F0C  51BB               	movf	turn@tptr& (0+255),w,b
  2254  000F0E  26D9               	addwf	fsr2l,f,c
  2255  000F10  0100               	movlb	0	; () banked
  2256  000F12  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  2257  000F14  22DA               	addwfc	fsr2h,f,c
  2258  000F16  0E01               	movlw	1
  2259  000F18  6EDF               	movwf	indf2,c
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;motors.c: 36: T0CONbits.TMR0ON = 1;;
  2263  000F1A  8ED5               	bsf	4053,7,c	;volatile
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;motors.c: 37: unsigned char test[2];
  2267                           ;motors.c: 38: test[0] = (angle < 0) ? tptr->ctrlR[0] : tptr->ctrlL[0];
  2268  000F1C  0100               	movlb	0	; () banked
  2269  000F1E  BFBE               	btfsc	(turn@angle+1)& (0+255),7,b
  2270  000F20  D004               	goto	l3082
  2271                           
  2272                           ; BSR set to: 0
  2273  000F22  0100               	movlb	0	; () banked
  2274  000F24  EE20 F002          	lfsr	2,2
  2275  000F28  D003               	goto	L3
  2276  000F2A                     l3082:
  2277                           
  2278                           ; BSR set to: 0
  2279  000F2A  0100               	movlb	0	; () banked
  2280  000F2C  EE20 F004          	lfsr	2,4
  2281  000F30                     L3:
  2282  000F30  0100               	movlb	0	; () banked
  2283  000F32  51BB               	movf	turn@tptr& (0+255),w,b
  2284  000F34  26D9               	addwf	fsr2l,f,c
  2285  000F36  0100               	movlb	0	; () banked
  2286  000F38  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  2287  000F3A  22DA               	addwfc	fsr2h,f,c
  2288  000F3C  50DF               	movf	indf2,w,c
  2289  000F3E  0100               	movlb	0	; () banked
  2290  000F40  6FBF               	movwf	??_turn& (0+255),b
  2291  000F42  0100               	movlb	0	; () banked
  2292  000F44  51BF               	movf	??_turn& (0+255),w,b
  2293  000F46  0100               	movlb	0	; () banked
  2294  000F48  6FC0               	movwf	_turn$998& (0+255),b
  2295  000F4A  0100               	movlb	0	; () banked
  2296  000F4C  6BC1               	clrf	(_turn$998+1)& (0+255),b
  2297                           
  2298                           ; BSR set to: 0
  2299                           
  2300                           ; BSR set to: 0
  2301  000F4E  C0C0  F0C4         	movff	_turn$998,turn@test
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;motors.c: 39: test[1] = (angle < 0) ? tptr->ctrlR[1] : tptr->ctrlL[1];
  2305  000F52  0100               	movlb	0	; () banked
  2306  000F54  BFBE               	btfsc	(turn@angle+1)& (0+255),7,b
  2307  000F56  D004               	goto	l3090
  2308                           
  2309                           ; BSR set to: 0
  2310  000F58  0100               	movlb	0	; () banked
  2311  000F5A  EE20 F003          	lfsr	2,3
  2312  000F5E  D003               	goto	L4
  2313  000F60                     l3090:
  2314                           
  2315                           ; BSR set to: 0
  2316  000F60  0100               	movlb	0	; () banked
  2317  000F62  EE20 F005          	lfsr	2,5
  2318  000F66                     L4:
  2319  000F66  0100               	movlb	0	; () banked
  2320  000F68  51BB               	movf	turn@tptr& (0+255),w,b
  2321  000F6A  26D9               	addwf	fsr2l,f,c
  2322  000F6C  0100               	movlb	0	; () banked
  2323  000F6E  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  2324  000F70  22DA               	addwfc	fsr2h,f,c
  2325  000F72  50DF               	movf	indf2,w,c
  2326  000F74  0100               	movlb	0	; () banked
  2327  000F76  6FBF               	movwf	??_turn& (0+255),b
  2328  000F78  0100               	movlb	0	; () banked
  2329  000F7A  51BF               	movf	??_turn& (0+255),w,b
  2330  000F7C  0100               	movlb	0	; () banked
  2331  000F7E  6FC2               	movwf	_turn$999& (0+255),b
  2332  000F80  0100               	movlb	0	; () banked
  2333  000F82  6BC3               	clrf	(_turn$999+1)& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           
  2337                           ; BSR set to: 0
  2338  000F84  C0C2  F0C5         	movff	_turn$999,turn@test+1
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;motors.c: 40: sendUARTarr(2,test);
  2342  000F88  0100               	movlb	0	; () banked
  2343  000F8A  0E00               	movlw	high turn@test
  2344  000F8C  0100               	movlb	0	; () banked
  2345  000F8E  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2346  000F90  0100               	movlb	0	; () banked
  2347  000F92  0EC4               	movlw	low turn@test
  2348  000F94  0100               	movlb	0	; () banked
  2349  000F96  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2350  000F98  0E02               	movlw	2
  2351  000F9A  EC35  F00F         	call	_sendUARTarr
  2352                           
  2353                           ;motors.c: 41: WriteTimer0(tptr->cmDist);
  2354  000F9E  0100               	movlb	0	; () banked
  2355  000FA0  EE20 F006          	lfsr	2,6
  2356  000FA4  0100               	movlb	0	; () banked
  2357  000FA6  51BB               	movf	turn@tptr& (0+255),w,b
  2358  000FA8  26D9               	addwf	fsr2l,f,c
  2359  000FAA  0100               	movlb	0	; () banked
  2360  000FAC  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  2361  000FAE  22DA               	addwfc	fsr2h,f,c
  2362  000FB0  0100               	movlb	0	; () banked
  2363  000FB2  CFDE F09D          	movff	postinc2,WriteTimer0@timer0
  2364  000FB6  0100               	movlb	0	; () banked
  2365  000FB8  CFDD F09E          	movff	postdec2,WriteTimer0@timer0+1
  2366  000FBC  EC27  F010         	call	_WriteTimer0	;wreg free
  2367                           
  2368                           ;motors.c: 42: tptr->cmCount = 0;
  2369  000FC0  C0BB  FFD9         	movff	turn@tptr,fsr2l
  2370  000FC4  C0BC  FFDA         	movff	turn@tptr+1,fsr2h
  2371  000FC8  0E00               	movlw	0
  2372  000FCA  6EDE               	movwf	postinc2,c
  2373  000FCC  0E00               	movlw	0
  2374  000FCE  6EDD               	movwf	postdec2,c
  2375  000FD0  0012               	return	
  2376  000FD2                     __end_of_turn:
  2377                           	opt stack 0
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           indf1	equ	0xFE7
  2385                           postdec1	equ	0xFE5
  2386                           fsr1h	equ	0xFE2
  2387                           fsr1l	equ	0xFE1
  2388                           indf2	equ	0xFDF
  2389                           postinc2	equ	0xFDE
  2390                           postdec2	equ	0xFDD
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _abs *****************
  2396 ;; Defined at:
  2397 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\abs.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  a               2   29[BANK0 ] int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2   29[BANK0 ] int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, prodl
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2411 ;;      Params:         0       2       0       0       0
  2412 ;;      Locals:         0       0       0       0       0
  2413 ;;      Temps:          0       2       0       0       0
  2414 ;;      Totals:         0       4       0       0       0
  2415 ;;Total ram usage:        4 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:   10
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_turn
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text4
  2426  001C32                     __ptext4:
  2427                           	opt stack 0
  2428  001C32                     _abs:
  2429                           	opt stack 18
  2430                           
  2431                           ;incstack = 0
  2432  001C32  0100               	movlb	0	; () banked
  2433  001C34  519E               	movf	(abs@a+1)& (0+255),w,b
  2434  001C36  0A80               	xorlw	128
  2435  001C38  6EF3               	movwf	prodl,c
  2436  001C3A  0E80               	movlw	128
  2437  001C3C  5CF3               	subwf	prodl,w,c
  2438  001C3E  0E00               	movlw	0
  2439  001C40  B4D8               	btfsc	status,2,c
  2440  001C42  5D9D               	subwf	abs@a& (0+255),w,b
  2441  001C44  B0D8               	btfsc	status,0,c
  2442  001C46  D010               	goto	l659
  2443                           
  2444                           ; BSR set to: 0
  2445  001C48  0100               	movlb	0	; () banked
  2446  001C4A  C09D  F09F         	movff	abs@a,??_abs
  2447  001C4E  0100               	movlb	0	; () banked
  2448  001C50  C09E  F0A0         	movff	abs@a+1,??_abs+1
  2449  001C54  0100               	movlb	0	; () banked
  2450  001C56  1F9F               	comf	??_abs& (0+255),f,b
  2451  001C58  1FA0               	comf	(??_abs+1)& (0+255),f,b
  2452  001C5A  4B9F               	infsnz	??_abs& (0+255),f,b
  2453  001C5C  2BA0               	incf	(??_abs+1)& (0+255),f,b
  2454  001C5E  C09F  F09D         	movff	??_abs,?_abs
  2455  001C62  C0A0  F09E         	movff	??_abs+1,?_abs+1
  2456  001C66  0012               	return	
  2457  001C68                     l659:
  2458                           
  2459                           ; BSR set to: 0
  2460  001C68  C09D  F09D         	movff	abs@a,?_abs
  2461  001C6C  C09E  F09E         	movff	abs@a+1,?_abs+1
  2462                           
  2463                           ; BSR set to: 0
  2464  001C70  0012               	return	
  2465  001C72                     __end_of_abs:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodl	equ	0xFF3
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           indf1	equ	0xFE7
  2475                           postdec1	equ	0xFE5
  2476                           fsr1h	equ	0xFE2
  2477                           fsr1l	equ	0xFE1
  2478                           indf2	equ	0xFDF
  2479                           postinc2	equ	0xFDE
  2480                           postdec2	equ	0xFDD
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _timer1_lthread *****************
  2486 ;; Defined at:
  2487 ;;		line 16 in file "src/timer1_thread.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  2490 ;;		 -> main@t1thread_data(12), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  temp            2   65[BANK0 ] unsigned char [2]
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   59[BANK0 ] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2502 ;;      Params:         0       2       0       0       0
  2503 ;;      Locals:         0       2       0       0       0
  2504 ;;      Temps:          0       4       0       0       0
  2505 ;;      Totals:         0       8       0       0       0
  2506 ;;Total ram usage:        8 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:   14
  2509 ;; This function calls:
  2510 ;;		_WriteTimer1
  2511 ;;		___lwmod
  2512 ;;		_sendUARTarr
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text5
  2519  000BAA                     __ptext5:
  2520                           	opt stack 0
  2521  000BAA                     _timer1_lthread:
  2522                           	opt stack 15
  2523                           
  2524                           ;timer1_thread.c: 17: tptr->cmCount++;
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;incstack = 0
  2528  000BAA  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2529  000BAE  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2530  000BB2  2ADE               	incf	postinc2,f,c
  2531  000BB4  0E00               	movlw	0
  2532  000BB6  22DD               	addwfc	postdec2,f,c
  2533                           
  2534                           ;timer1_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2535  000BB8  0100               	movlb	0	; () banked
  2536  000BBA  EE20 F00A          	lfsr	2,10
  2537  000BBE  0100               	movlb	0	; () banked
  2538  000BC0  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2539  000BC2  26D9               	addwf	fsr2l,f,c
  2540  000BC4  0100               	movlb	0	; () banked
  2541  000BC6  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2542  000BC8  22DA               	addwfc	fsr2h,f,c
  2543  000BCA  50DF               	movf	indf2,w,c
  2544  000BCC  B4D8               	btfsc	status,2,c
  2545  000BCE  D065               	goto	l3174
  2546                           
  2547                           ; BSR set to: 0
  2548  000BD0  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2549  000BD4  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2550  000BD8  0100               	movlb	0	; () banked
  2551  000BDA  CFDE F09D          	movff	postinc2,___lwmod@dividend
  2552  000BDE  0100               	movlb	0	; () banked
  2553  000BE0  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  2554  000BE4  0100               	movlb	0	; () banked
  2555  000BE6  EE20 F006          	lfsr	2,6
  2556  000BEA  0100               	movlb	0	; () banked
  2557  000BEC  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2558  000BEE  26D9               	addwf	fsr2l,f,c
  2559  000BF0  0100               	movlb	0	; () banked
  2560  000BF2  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2561  000BF4  22DA               	addwfc	fsr2h,f,c
  2562  000BF6  0100               	movlb	0	; () banked
  2563  000BF8  CFDE F09F          	movff	postinc2,___lwmod@divisor
  2564  000BFC  0100               	movlb	0	; () banked
  2565  000BFE  CFDD F0A0          	movff	postdec2,___lwmod@divisor+1
  2566  000C02  ECBF  F00C         	call	___lwmod	;wreg free
  2567  000C06  0EFF               	movlw	255
  2568  000C08  0100               	movlb	0	; () banked
  2569  000C0A  6FBD               	movwf	??_timer1_lthread& (0+255),b
  2570  000C0C  0EFF               	movlw	255
  2571  000C0E  6FBE               	movwf	(??_timer1_lthread+1)& (0+255),b
  2572  000C10  0100               	movlb	0	; () banked
  2573  000C12  EE20 F006          	lfsr	2,6
  2574  000C16  0100               	movlb	0	; () banked
  2575  000C18  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2576  000C1A  26D9               	addwf	fsr2l,f,c
  2577  000C1C  0100               	movlb	0	; () banked
  2578  000C1E  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2579  000C20  22DA               	addwfc	fsr2h,f,c
  2580  000C22  CFDE F0BF          	movff	postinc2,??_timer1_lthread+2
  2581  000C26  CFDD F0C0          	movff	postdec2,??_timer1_lthread+3
  2582  000C2A  0100               	movlb	0	; () banked
  2583  000C2C  51BD               	movf	??_timer1_lthread& (0+255),w,b
  2584  000C2E  0100               	movlb	0	; () banked
  2585  000C30  27BF               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  2586  000C32  0100               	movlb	0	; () banked
  2587  000C34  51BE               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2588  000C36  0100               	movlb	0	; () banked
  2589  000C38  23C0               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  2590  000C3A  0100               	movlb	0	; () banked
  2591  000C3C  519E               	movf	(?___lwmod+1)& (0+255),w,b
  2592  000C3E  0100               	movlb	0	; () banked
  2593  000C40  19C0               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  2594  000C42  E104               	bnz	u1975
  2595  000C44  0100               	movlb	0	; () banked
  2596  000C46  519D               	movf	?___lwmod& (0+255),w,b
  2597  000C48  0100               	movlb	0	; () banked
  2598  000C4A  19BF               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  2599  000C4C                     u1975:
  2600  000C4C  A4D8               	btfss	status,2,c
  2601  000C4E  D025               	goto	l3174
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;timer1_thread.c: 20: unsigned char temp[2] = {0,0};
  2605  000C50  C0CC  F0C1         	movff	timer1_lthread@F5087,timer1_lthread@temp
  2606  000C54  C0CD  F0C2         	movff	timer1_lthread@F5087+1,timer1_lthread@temp+1
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;timer1_thread.c: 21: sendUARTarr(2,temp);
  2610  000C58  0100               	movlb	0	; () banked
  2611  000C5A  0E00               	movlw	high timer1_lthread@temp
  2612  000C5C  0100               	movlb	0	; () banked
  2613  000C5E  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2614  000C60  0100               	movlb	0	; () banked
  2615  000C62  0EC1               	movlw	low timer1_lthread@temp
  2616  000C64  0100               	movlb	0	; () banked
  2617  000C66  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2618  000C68  0E02               	movlw	2
  2619  000C6A  EC35  F00F         	call	_sendUARTarr
  2620                           
  2621                           ;timer1_thread.c: 22: T1CONbits.TMR1ON = 0;;
  2622  000C6E  90CD               	bcf	4045,0,c	;volatile
  2623                           
  2624                           ;timer1_thread.c: 23: PORTA = 0x00;
  2625  000C70  0E00               	movlw	0
  2626  000C72  6E80               	movwf	3968,c	;volatile
  2627                           
  2628                           ;timer1_thread.c: 24: tptr->ready = true;
  2629  000C74  0100               	movlb	0	; () banked
  2630  000C76  EE20 F00B          	lfsr	2,11
  2631  000C7A  0100               	movlb	0	; () banked
  2632  000C7C  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2633  000C7E  26D9               	addwf	fsr2l,f,c
  2634  000C80  0100               	movlb	0	; () banked
  2635  000C82  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2636  000C84  22DA               	addwfc	fsr2h,f,c
  2637  000C86  0E01               	movlw	1
  2638  000C88  6EDF               	movwf	indf2,c
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;timer1_thread.c: 25: tptr->cmCount = 0;
  2642  000C8A  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2643  000C8E  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2644  000C92  0E00               	movlw	0
  2645  000C94  6EDE               	movwf	postinc2,c
  2646  000C96  0E00               	movlw	0
  2647  000C98  6EDD               	movwf	postdec2,c
  2648  000C9A                     l3174:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;timer1_thread.c: 26: }
  2652                           ;timer1_thread.c: 28: WriteTimer1(tptr->cmDist);
  2653  000C9A  0100               	movlb	0	; () banked
  2654  000C9C  EE20 F004          	lfsr	2,4
  2655  000CA0  0100               	movlb	0	; () banked
  2656  000CA2  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2657  000CA4  26D9               	addwf	fsr2l,f,c
  2658  000CA6  0100               	movlb	0	; () banked
  2659  000CA8  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2660  000CAA  22DA               	addwfc	fsr2h,f,c
  2661  000CAC  0100               	movlb	0	; () banked
  2662  000CAE  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  2663  000CB2  0100               	movlb	0	; () banked
  2664  000CB4  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  2665  000CB8  EC30  F010         	call	_WriteTimer1	;wreg free
  2666  000CBC  0012               	return	
  2667  000CBE                     __end_of_timer1_lthread:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodl	equ	0xFF3
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           indf1	equ	0xFE7
  2677                           postdec1	equ	0xFE5
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function _timer0_lthread *****************
  2688 ;; Defined at:
  2689 ;;		line 19 in file "src/timer0_thread.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  tptr            2   59[BANK0 ] PTR struct __timer0_thre
  2692 ;;		 -> main@t0thread_data(12), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  temp            2   65[BANK0 ] unsigned char [2]
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2   59[BANK0 ] int 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2704 ;;      Params:         0       2       0       0       0
  2705 ;;      Locals:         0       2       0       0       0
  2706 ;;      Temps:          0       4       0       0       0
  2707 ;;      Totals:         0       8       0       0       0
  2708 ;;Total ram usage:        8 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:   14
  2711 ;; This function calls:
  2712 ;;		_WriteTimer0
  2713 ;;		___lwmod
  2714 ;;		_sendUARTarr
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text6
  2721  000CBE                     __ptext6:
  2722                           	opt stack 0
  2723  000CBE                     _timer0_lthread:
  2724                           	opt stack 15
  2725                           
  2726                           ;timer0_thread.c: 20: tptr->cmCount++;
  2727                           
  2728                           ;incstack = 0
  2729  000CBE  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2730  000CC2  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2731  000CC6  2ADE               	incf	postinc2,f,c
  2732  000CC8  0E00               	movlw	0
  2733  000CCA  22DD               	addwfc	postdec2,f,c
  2734                           
  2735                           ;timer0_thread.c: 22: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2736  000CCC  0100               	movlb	0	; () banked
  2737  000CCE  EE20 F00A          	lfsr	2,10
  2738  000CD2  0100               	movlb	0	; () banked
  2739  000CD4  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2740  000CD6  26D9               	addwf	fsr2l,f,c
  2741  000CD8  0100               	movlb	0	; () banked
  2742  000CDA  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2743  000CDC  22DA               	addwfc	fsr2h,f,c
  2744  000CDE  50DF               	movf	indf2,w,c
  2745  000CE0  B4D8               	btfsc	status,2,c
  2746  000CE2  D065               	goto	l3140
  2747                           
  2748                           ; BSR set to: 0
  2749  000CE4  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2750  000CE8  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2751  000CEC  0100               	movlb	0	; () banked
  2752  000CEE  CFDE F09D          	movff	postinc2,___lwmod@dividend
  2753  000CF2  0100               	movlb	0	; () banked
  2754  000CF4  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  2755  000CF8  0100               	movlb	0	; () banked
  2756  000CFA  EE20 F008          	lfsr	2,8
  2757  000CFE  0100               	movlb	0	; () banked
  2758  000D00  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2759  000D02  26D9               	addwf	fsr2l,f,c
  2760  000D04  0100               	movlb	0	; () banked
  2761  000D06  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2762  000D08  22DA               	addwfc	fsr2h,f,c
  2763  000D0A  0100               	movlb	0	; () banked
  2764  000D0C  CFDE F09F          	movff	postinc2,___lwmod@divisor
  2765  000D10  0100               	movlb	0	; () banked
  2766  000D12  CFDD F0A0          	movff	postdec2,___lwmod@divisor+1
  2767  000D16  ECBF  F00C         	call	___lwmod	;wreg free
  2768  000D1A  0EFF               	movlw	255
  2769  000D1C  0100               	movlb	0	; () banked
  2770  000D1E  6FBD               	movwf	??_timer0_lthread& (0+255),b
  2771  000D20  0EFF               	movlw	255
  2772  000D22  6FBE               	movwf	(??_timer0_lthread+1)& (0+255),b
  2773  000D24  0100               	movlb	0	; () banked
  2774  000D26  EE20 F008          	lfsr	2,8
  2775  000D2A  0100               	movlb	0	; () banked
  2776  000D2C  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2777  000D2E  26D9               	addwf	fsr2l,f,c
  2778  000D30  0100               	movlb	0	; () banked
  2779  000D32  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2780  000D34  22DA               	addwfc	fsr2h,f,c
  2781  000D36  CFDE F0BF          	movff	postinc2,??_timer0_lthread+2
  2782  000D3A  CFDD F0C0          	movff	postdec2,??_timer0_lthread+3
  2783  000D3E  0100               	movlb	0	; () banked
  2784  000D40  51BD               	movf	??_timer0_lthread& (0+255),w,b
  2785  000D42  0100               	movlb	0	; () banked
  2786  000D44  27BF               	addwf	(??_timer0_lthread+2)& (0+255),f,b
  2787  000D46  0100               	movlb	0	; () banked
  2788  000D48  51BE               	movf	(??_timer0_lthread+1)& (0+255),w,b
  2789  000D4A  0100               	movlb	0	; () banked
  2790  000D4C  23C0               	addwfc	(??_timer0_lthread+3)& (0+255),f,b
  2791  000D4E  0100               	movlb	0	; () banked
  2792  000D50  519E               	movf	(?___lwmod+1)& (0+255),w,b
  2793  000D52  0100               	movlb	0	; () banked
  2794  000D54  19C0               	xorwf	(??_timer0_lthread+3)& (0+255),w,b
  2795  000D56  E104               	bnz	u1945
  2796  000D58  0100               	movlb	0	; () banked
  2797  000D5A  519D               	movf	?___lwmod& (0+255),w,b
  2798  000D5C  0100               	movlb	0	; () banked
  2799  000D5E  19BF               	xorwf	(??_timer0_lthread+2)& (0+255),w,b
  2800  000D60                     u1945:
  2801  000D60  A4D8               	btfss	status,2,c
  2802  000D62  D025               	goto	l3140
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;timer0_thread.c: 23: unsigned char temp[2] = {0,0};
  2806  000D64  C0CA  F0C1         	movff	timer0_lthread@F5147,timer0_lthread@temp
  2807  000D68  C0CB  F0C2         	movff	timer0_lthread@F5147+1,timer0_lthread@temp+1
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;timer0_thread.c: 24: sendUARTarr(2,temp);
  2811  000D6C  0100               	movlb	0	; () banked
  2812  000D6E  0E00               	movlw	high timer0_lthread@temp
  2813  000D70  0100               	movlb	0	; () banked
  2814  000D72  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2815  000D74  0100               	movlb	0	; () banked
  2816  000D76  0EC1               	movlw	low timer0_lthread@temp
  2817  000D78  0100               	movlb	0	; () banked
  2818  000D7A  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2819  000D7C  0E02               	movlw	2
  2820  000D7E  EC35  F00F         	call	_sendUARTarr
  2821                           
  2822                           ;timer0_thread.c: 25: T0CONbits.TMR0ON = 0;;
  2823  000D82  9ED5               	bcf	4053,7,c	;volatile
  2824                           
  2825                           ;timer0_thread.c: 26: PORTA = 0x00;
  2826  000D84  0E00               	movlw	0
  2827  000D86  6E80               	movwf	3968,c	;volatile
  2828                           
  2829                           ;timer0_thread.c: 27: tptr->ready = true;
  2830  000D88  0100               	movlb	0	; () banked
  2831  000D8A  EE20 F00B          	lfsr	2,11
  2832  000D8E  0100               	movlb	0	; () banked
  2833  000D90  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2834  000D92  26D9               	addwf	fsr2l,f,c
  2835  000D94  0100               	movlb	0	; () banked
  2836  000D96  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2837  000D98  22DA               	addwfc	fsr2h,f,c
  2838  000D9A  0E01               	movlw	1
  2839  000D9C  6EDF               	movwf	indf2,c
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;timer0_thread.c: 28: tptr->cmCount = 0;
  2843  000D9E  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2844  000DA2  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2845  000DA6  0E00               	movlw	0
  2846  000DA8  6EDE               	movwf	postinc2,c
  2847  000DAA  0E00               	movlw	0
  2848  000DAC  6EDD               	movwf	postdec2,c
  2849  000DAE                     l3140:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;timer0_thread.c: 29: }
  2853                           ;timer0_thread.c: 31: WriteTimer0(tptr->cmDist);
  2854  000DAE  0100               	movlb	0	; () banked
  2855  000DB0  EE20 F006          	lfsr	2,6
  2856  000DB4  0100               	movlb	0	; () banked
  2857  000DB6  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2858  000DB8  26D9               	addwf	fsr2l,f,c
  2859  000DBA  0100               	movlb	0	; () banked
  2860  000DBC  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2861  000DBE  22DA               	addwfc	fsr2h,f,c
  2862  000DC0  0100               	movlb	0	; () banked
  2863  000DC2  CFDE F09D          	movff	postinc2,WriteTimer0@timer0
  2864  000DC6  0100               	movlb	0	; () banked
  2865  000DC8  CFDD F09E          	movff	postdec2,WriteTimer0@timer0+1
  2866  000DCC  EC27  F010         	call	_WriteTimer0	;wreg free
  2867  000DD0  0012               	return	
  2868  000DD2                     __end_of_timer0_lthread:
  2869                           	opt stack 0
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodl	equ	0xFF3
  2875                           postinc0	equ	0xFEE
  2876                           wreg	equ	0xFE8
  2877                           indf1	equ	0xFE7
  2878                           postdec1	equ	0xFE5
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function ___lwmod *****************
  2889 ;; Defined at:
  2890 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  dividend        2   29[BANK0 ] unsigned int 
  2893 ;;  divisor         2   31[BANK0 ] unsigned int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  counter         1   33[BANK0 ] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  2   29[BANK0 ] unsigned int 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2905 ;;      Params:         0       4       0       0       0
  2906 ;;      Locals:         0       1       0       0       0
  2907 ;;      Temps:          0       0       0       0       0
  2908 ;;      Totals:         0       5       0       0       0
  2909 ;;Total ram usage:        5 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:   10
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_timer0_lthread
  2916 ;;		_timer1_lthread
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text7
  2921  00197E                     __ptext7:
  2922                           	opt stack 0
  2923  00197E                     ___lwmod:
  2924                           	opt stack 18
  2925                           
  2926                           ;incstack = 0
  2927  00197E  0100               	movlb	0	; () banked
  2928  001980  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2929  001982  119F               	iorwf	___lwmod@divisor& (0+255),w,b
  2930  001984  B4D8               	btfsc	status,2,c
  2931  001986  D026               	goto	l1145
  2932                           
  2933                           ; BSR set to: 0
  2934  001988  0E01               	movlw	1
  2935  00198A  0100               	movlb	0	; () banked
  2936  00198C  6FA1               	movwf	___lwmod@counter& (0+255),b
  2937  00198E  D006               	goto	l2630
  2938  001990                     l2628:
  2939                           
  2940                           ; BSR set to: 0
  2941  001990  0100               	movlb	0	; () banked
  2942  001992  90D8               	bcf	status,0,c
  2943  001994  379F               	rlcf	___lwmod@divisor& (0+255),f,b
  2944  001996  37A0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2945  001998  0100               	movlb	0	; () banked
  2946  00199A  2BA1               	incf	___lwmod@counter& (0+255),f,b
  2947  00199C                     l2630:
  2948                           
  2949                           ; BSR set to: 0
  2950  00199C  0100               	movlb	0	; () banked
  2951  00199E  AFA0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2952  0019A0  D7F7               	goto	l2628
  2953  0019A2                     l2632:
  2954                           
  2955                           ; BSR set to: 0
  2956  0019A2  0100               	movlb	0	; () banked
  2957  0019A4  519F               	movf	___lwmod@divisor& (0+255),w,b
  2958  0019A6  0100               	movlb	0	; () banked
  2959  0019A8  5D9D               	subwf	___lwmod@dividend& (0+255),w,b
  2960  0019AA  0100               	movlb	0	; () banked
  2961  0019AC  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2962  0019AE  0100               	movlb	0	; () banked
  2963  0019B0  599E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2964  0019B2  A0D8               	btfss	status,0,c
  2965  0019B4  D008               	goto	l2636
  2966                           
  2967                           ; BSR set to: 0
  2968  0019B6  0100               	movlb	0	; () banked
  2969  0019B8  519F               	movf	___lwmod@divisor& (0+255),w,b
  2970  0019BA  0100               	movlb	0	; () banked
  2971  0019BC  5F9D               	subwf	___lwmod@dividend& (0+255),f,b
  2972  0019BE  0100               	movlb	0	; () banked
  2973  0019C0  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2974  0019C2  0100               	movlb	0	; () banked
  2975  0019C4  5B9E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2976  0019C6                     l2636:
  2977                           
  2978                           ; BSR set to: 0
  2979  0019C6  0100               	movlb	0	; () banked
  2980  0019C8  90D8               	bcf	status,0,c
  2981  0019CA  33A0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2982  0019CC  339F               	rrcf	___lwmod@divisor& (0+255),f,b
  2983                           
  2984                           ; BSR set to: 0
  2985  0019CE  0100               	movlb	0	; () banked
  2986  0019D0  2FA1               	decfsz	___lwmod@counter& (0+255),f,b
  2987  0019D2  D7E7               	goto	l2632
  2988  0019D4                     l1145:
  2989                           
  2990                           ; BSR set to: 0
  2991  0019D4  C09D  F09D         	movff	___lwmod@dividend,?___lwmod
  2992  0019D8  C09E  F09E         	movff	___lwmod@dividend+1,?___lwmod+1
  2993                           
  2994                           ; BSR set to: 0
  2995  0019DC  0012               	return	
  2996  0019DE                     __end_of___lwmod:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodl	equ	0xFF3
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           indf1	equ	0xFE7
  3006                           postdec1	equ	0xFE5
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           postdec2	equ	0xFDD
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _WriteTimer0 *****************
  3017 ;; Defined at:
  3018 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  timer0          2   29[BANK0 ] unsigned int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  timer           2   31[BANK0 ] struct Timers
  3023 ;; Return value:  Size  Location     Type
  3024 ;;		None               void
  3025 ;; Registers used:
  3026 ;;		None
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3032 ;;      Params:         0       2       0       0       0
  3033 ;;      Locals:         0       2       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         0       4       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:   10
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_turn
  3043 ;;		_timer0_lthread
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text8
  3048  00204E                     __ptext8:
  3049                           	opt stack 0
  3050  00204E                     _WriteTimer0:
  3051                           	opt stack 18
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;incstack = 0
  3055  00204E  C09D  F09F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3056  002052  C09E  F0A0         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3057  002056  C0A0  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3058  00205A  C09F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3059  00205E  0012               	return	
  3060  002060                     __end_of_WriteTimer0:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodl	equ	0xFF3
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           indf1	equ	0xFE7
  3070                           postdec1	equ	0xFE5
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           postinc2	equ	0xFDE
  3075                           postdec2	equ	0xFDD
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _stop *****************
  3081 ;; Defined at:
  3082 ;;		line 45 in file "src/motors.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  3085 ;;		 -> main@t1thread_data(12), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  test            2   61[BANK0 ] unsigned char [2]
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3097 ;;      Params:         0       2       0       0       0
  3098 ;;      Locals:         0       2       0       0       0
  3099 ;;      Temps:          0       0       0       0       0
  3100 ;;      Totals:         0       4       0       0       0
  3101 ;;Total ram usage:        4 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:   14
  3104 ;; This function calls:
  3105 ;;		_WriteTimer1
  3106 ;;		_sendUARTarr
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text9
  3113  001A3A                     __ptext9:
  3114                           	opt stack 0
  3115  001A3A                     _stop:
  3116                           	opt stack 15
  3117                           
  3118                           ;motors.c: 46: PORTA = 0x00;
  3119                           
  3120                           ;incstack = 0
  3121  001A3A  0E00               	movlw	0
  3122  001A3C  6E80               	movwf	3968,c	;volatile
  3123                           
  3124                           ;motors.c: 47: unsigned char test[2] = {0,0};
  3125  001A3E  C0C8  F0BD         	movff	stop@F5239,stop@test
  3126  001A42  C0C9  F0BE         	movff	stop@F5239+1,stop@test+1
  3127                           
  3128                           ;motors.c: 48: sendUARTarr(2,test);
  3129  001A46  0100               	movlb	0	; () banked
  3130  001A48  0E00               	movlw	high stop@test
  3131  001A4A  0100               	movlb	0	; () banked
  3132  001A4C  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  3133  001A4E  0100               	movlb	0	; () banked
  3134  001A50  0EBD               	movlw	low stop@test
  3135  001A52  0100               	movlb	0	; () banked
  3136  001A54  6FB7               	movwf	sendUARTarr@data& (0+255),b
  3137  001A56  0E02               	movlw	2
  3138  001A58  EC35  F00F         	call	_sendUARTarr
  3139                           
  3140                           ;motors.c: 49: WriteTimer1(tptr->cmDist);
  3141  001A5C  0100               	movlb	0	; () banked
  3142  001A5E  EE20 F004          	lfsr	2,4
  3143  001A62  0100               	movlb	0	; () banked
  3144  001A64  51BB               	movf	stop@tptr& (0+255),w,b
  3145  001A66  26D9               	addwf	fsr2l,f,c
  3146  001A68  0100               	movlb	0	; () banked
  3147  001A6A  51BC               	movf	(stop@tptr+1)& (0+255),w,b
  3148  001A6C  22DA               	addwfc	fsr2h,f,c
  3149  001A6E  0100               	movlb	0	; () banked
  3150  001A70  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  3151  001A74  0100               	movlb	0	; () banked
  3152  001A76  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  3153  001A7A  EC30  F010         	call	_WriteTimer1	;wreg free
  3154                           
  3155                           ;motors.c: 50: T0CONbits.TMR0ON = 0;;
  3156  001A7E  9ED5               	bcf	4053,7,c	;volatile
  3157                           
  3158                           ;motors.c: 51: T1CONbits.TMR1ON = 0;;
  3159  001A80  90CD               	bcf	4045,0,c	;volatile
  3160                           
  3161                           ;motors.c: 52: tptr->cmCount = 0;
  3162  001A82  C0BB  FFD9         	movff	stop@tptr,fsr2l
  3163  001A86  C0BC  FFDA         	movff	stop@tptr+1,fsr2h
  3164  001A8A  0E00               	movlw	0
  3165  001A8C  6EDE               	movwf	postinc2,c
  3166  001A8E  0E00               	movlw	0
  3167  001A90  6EDD               	movwf	postdec2,c
  3168  001A92  0012               	return	
  3169  001A94                     __end_of_stop:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodl	equ	0xFF3
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           indf1	equ	0xFE7
  3179                           postdec1	equ	0xFE5
  3180                           fsr1h	equ	0xFE2
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _start_i2c_slave_reply *****************
  3190 ;; Defined at:
  3191 ;;		line 53 in file "src/my_i2c.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  length          1    wreg     unsigned char 
  3194 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  3195 ;;		 -> main@msgbuffer(11), 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  length          1   33[BANK0 ] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3207 ;;      Params:         0       2       0       0       0
  3208 ;;      Locals:         0       1       0       0       0
  3209 ;;      Temps:          0       2       0       0       0
  3210 ;;      Totals:         0       5       0       0       0
  3211 ;;Total ram usage:        5 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:   10
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text10
  3222  000DD2                     __ptext10:
  3223                           	opt stack 0
  3224  000DD2                     _start_i2c_slave_reply:
  3225                           	opt stack 19
  3226                           
  3227                           ;incstack = 0
  3228                           ;start_i2c_slave_reply@length stored from wreg
  3229  000DD2  0100               	movlb	0	; () banked
  3230  000DD4  6FA1               	movwf	start_i2c_slave_reply@length& (0+255),b
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  3234  000DD6  0100               	movlb	0	; () banked
  3235  000DD8  EE20 F019          	lfsr	2,25
  3236  000DDC  0100               	movlb	0	; () banked
  3237  000DDE  51CE               	movf	_ic_ptr& (0+255),w,b
  3238  000DE0  26D9               	addwf	fsr2l,f,c
  3239  000DE2  0100               	movlb	0	; () banked
  3240  000DE4  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3241  000DE6  22DA               	addwfc	fsr2h,f,c
  3242  000DE8  0E00               	movlw	0
  3243  000DEA  6EDF               	movwf	indf2,c
  3244  000DEC  D03E               	goto	l3148
  3245  000DEE                     l3144:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3249  000DEE  0100               	movlb	0	; () banked
  3250  000DF0  EE20 F019          	lfsr	2,25
  3251  000DF4  0100               	movlb	0	; () banked
  3252  000DF6  51CE               	movf	_ic_ptr& (0+255),w,b
  3253  000DF8  26D9               	addwf	fsr2l,f,c
  3254  000DFA  0100               	movlb	0	; () banked
  3255  000DFC  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3256  000DFE  22DA               	addwfc	fsr2h,f,c
  3257  000E00  50DF               	movf	indf2,w,c
  3258  000E02  0100               	movlb	0	; () banked
  3259  000E04  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  3260  000E06  0100               	movlb	0	; () banked
  3261  000E08  519F               	movf	??_start_i2c_slave_reply& (0+255),w,b
  3262  000E0A  0D01               	mullw	1
  3263  000E0C  50F3               	movf	prodl,w,c
  3264  000E0E  0100               	movlb	0	; () banked
  3265  000E10  259D               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  3266  000E12  6ED9               	movwf	fsr2l,c
  3267  000E14  50F4               	movf	prodh,w,c
  3268  000E16  0100               	movlb	0	; () banked
  3269  000E18  219E               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  3270  000E1A  6EDA               	movwf	fsr2h,c
  3271  000E1C  0100               	movlb	0	; () banked
  3272  000E1E  EE10 F019          	lfsr	1,25
  3273  000E22  0100               	movlb	0	; () banked
  3274  000E24  51CE               	movf	_ic_ptr& (0+255),w,b
  3275  000E26  26E1               	addwf	fsr1l,f,c
  3276  000E28  0100               	movlb	0	; () banked
  3277  000E2A  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3278  000E2C  22E2               	addwfc	fsr1h,f,c
  3279  000E2E  50E7               	movf	indf1,w,c
  3280  000E30  0100               	movlb	0	; () banked
  3281  000E32  6FA0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  3282  000E34  0100               	movlb	0	; () banked
  3283  000E36  51A0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  3284  000E38  0D01               	mullw	1
  3285  000E3A  0E0F               	movlw	15
  3286  000E3C  26F3               	addwf	prodl,f,c
  3287  000E3E  0E00               	movlw	0
  3288  000E40  22F4               	addwfc	prodh,f,c
  3289  000E42  50F3               	movf	prodl,w,c
  3290  000E44  0100               	movlb	0	; () banked
  3291  000E46  25CE               	addwf	_ic_ptr& (0+255),w,b
  3292  000E48  6EE1               	movwf	fsr1l,c
  3293  000E4A  50F4               	movf	prodh,w,c
  3294  000E4C  0100               	movlb	0	; () banked
  3295  000E4E  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3296  000E50  6EE2               	movwf	fsr1h,c
  3297  000E52  CFDF FFE7          	movff	indf2,indf1
  3298                           
  3299                           ; BSR set to: 0
  3300  000E56  0100               	movlb	0	; () banked
  3301  000E58  EE20 F019          	lfsr	2,25
  3302  000E5C  0100               	movlb	0	; () banked
  3303  000E5E  51CE               	movf	_ic_ptr& (0+255),w,b
  3304  000E60  26D9               	addwf	fsr2l,f,c
  3305  000E62  0100               	movlb	0	; () banked
  3306  000E64  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3307  000E66  22DA               	addwfc	fsr2h,f,c
  3308  000E68  2ADF               	incf	indf2,f,c
  3309  000E6A                     l3148:
  3310                           
  3311                           ; BSR set to: 0
  3312  000E6A  0100               	movlb	0	; () banked
  3313  000E6C  EE20 F019          	lfsr	2,25
  3314  000E70  0100               	movlb	0	; () banked
  3315  000E72  51CE               	movf	_ic_ptr& (0+255),w,b
  3316  000E74  26D9               	addwf	fsr2l,f,c
  3317  000E76  0100               	movlb	0	; () banked
  3318  000E78  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3319  000E7A  22DA               	addwfc	fsr2h,f,c
  3320  000E7C  50DF               	movf	indf2,w,c
  3321  000E7E  0100               	movlb	0	; () banked
  3322  000E80  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  3323  000E82  0100               	movlb	0	; () banked
  3324  000E84  51A1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  3325  000E86  0100               	movlb	0	; () banked
  3326  000E88  5D9F               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  3327  000E8A  A0D8               	btfss	status,0,c
  3328  000E8C  D7B0               	goto	l3144
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;my_i2c.c: 57: }
  3332                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  3333                           
  3334                           ; BSR set to: 0
  3335  000E8E  0100               	movlb	0	; () banked
  3336  000E90  EE20 F019          	lfsr	2,25
  3337  000E94  0100               	movlb	0	; () banked
  3338  000E96  51CE               	movf	_ic_ptr& (0+255),w,b
  3339  000E98  26D9               	addwf	fsr2l,f,c
  3340  000E9A  0100               	movlb	0	; () banked
  3341  000E9C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3342  000E9E  22DA               	addwfc	fsr2h,f,c
  3343  000EA0  0100               	movlb	0	; () banked
  3344  000EA2  C0A1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  3345                           
  3346                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  3347  000EA6  0100               	movlb	0	; () banked
  3348  000EA8  EE20 F01A          	lfsr	2,26
  3349  000EAC  0100               	movlb	0	; () banked
  3350  000EAE  51CE               	movf	_ic_ptr& (0+255),w,b
  3351  000EB0  26D9               	addwf	fsr2l,f,c
  3352  000EB2  0100               	movlb	0	; () banked
  3353  000EB4  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3354  000EB6  22DA               	addwfc	fsr2h,f,c
  3355  000EB8  0E01               	movlw	1
  3356  000EBA  6EDF               	movwf	indf2,c
  3357                           
  3358                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  3359  000EBC  0100               	movlb	0	; () banked
  3360  000EBE  EE20 F00F          	lfsr	2,15
  3361  000EC2  0100               	movlb	0	; () banked
  3362  000EC4  51CE               	movf	_ic_ptr& (0+255),w,b
  3363  000EC6  26D9               	addwf	fsr2l,f,c
  3364  000EC8  0100               	movlb	0	; () banked
  3365  000ECA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3366  000ECC  22DA               	addwfc	fsr2h,f,c
  3367  000ECE  50DF               	movf	indf2,w,c
  3368  000ED0  6EC9               	movwf	4041,c	;volatile
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  3372  000ED2  88C6               	bsf	4038,4,c	;volatile
  3373                           
  3374                           ; BSR set to: 0
  3375  000ED4  0012               	return	
  3376  000ED6                     __end_of_start_i2c_slave_reply:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf1	equ	0xFE7
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _moveDist *****************
  3398 ;; Defined at:
  3399 ;;		line 19 in file "src/motors.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  3402 ;;		 -> main@t1thread_data(12), 
  3403 ;;  dist            2   61[BANK0 ] int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  test            2   63[BANK0 ] unsigned char [2]
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3415 ;;      Params:         0       4       0       0       0
  3416 ;;      Locals:         0       2       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         0       6       0       0       0
  3419 ;;Total ram usage:        6 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:   14
  3422 ;; This function calls:
  3423 ;;		_WriteTimer1
  3424 ;;		_sendUARTarr
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text11
  3431  0014A2                     __ptext11:
  3432                           	opt stack 0
  3433  0014A2                     _moveDist:
  3434                           	opt stack 15
  3435                           
  3436                           ;motors.c: 20: PORTA = 0x01;
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;incstack = 0
  3440  0014A2  0E01               	movlw	1
  3441  0014A4  6E80               	movwf	3968,c	;volatile
  3442                           
  3443                           ;motors.c: 21: tptr->distLim = true;
  3444  0014A6  0100               	movlb	0	; () banked
  3445  0014A8  EE20 F00A          	lfsr	2,10
  3446  0014AC  0100               	movlb	0	; () banked
  3447  0014AE  51BB               	movf	moveDist@tptr& (0+255),w,b
  3448  0014B0  26D9               	addwf	fsr2l,f,c
  3449  0014B2  0100               	movlb	0	; () banked
  3450  0014B4  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3451  0014B6  22DA               	addwfc	fsr2h,f,c
  3452  0014B8  0E01               	movlw	1
  3453  0014BA  6EDF               	movwf	indf2,c
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;motors.c: 22: tptr->curMove = dist;
  3457  0014BC  0100               	movlb	0	; () banked
  3458  0014BE  EE20 F006          	lfsr	2,6
  3459  0014C2  0100               	movlb	0	; () banked
  3460  0014C4  51BB               	movf	moveDist@tptr& (0+255),w,b
  3461  0014C6  26D9               	addwf	fsr2l,f,c
  3462  0014C8  0100               	movlb	0	; () banked
  3463  0014CA  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3464  0014CC  22DA               	addwfc	fsr2h,f,c
  3465  0014CE  0100               	movlb	0	; () banked
  3466  0014D0  C0BD  FFDE         	movff	moveDist@dist,postinc2
  3467  0014D4  0100               	movlb	0	; () banked
  3468  0014D6  C0BE  FFDD         	movff	moveDist@dist+1,postdec2
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;motors.c: 23: unsigned char test[2];
  3472                           ;motors.c: 24: test[0] = tptr->ctrl[0];
  3473  0014DA  0100               	movlb	0	; () banked
  3474  0014DC  EE20 F002          	lfsr	2,2
  3475  0014E0  0100               	movlb	0	; () banked
  3476  0014E2  51BB               	movf	moveDist@tptr& (0+255),w,b
  3477  0014E4  26D9               	addwf	fsr2l,f,c
  3478  0014E6  0100               	movlb	0	; () banked
  3479  0014E8  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3480  0014EA  22DA               	addwfc	fsr2h,f,c
  3481  0014EC  50DF               	movf	indf2,w,c
  3482  0014EE  0100               	movlb	0	; () banked
  3483  0014F0  6FBF               	movwf	moveDist@test& (0+255),b
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;motors.c: 25: test[1] = tptr->ctrl[1];
  3487  0014F2  0100               	movlb	0	; () banked
  3488  0014F4  EE20 F003          	lfsr	2,3
  3489  0014F8  0100               	movlb	0	; () banked
  3490  0014FA  51BB               	movf	moveDist@tptr& (0+255),w,b
  3491  0014FC  26D9               	addwf	fsr2l,f,c
  3492  0014FE  0100               	movlb	0	; () banked
  3493  001500  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3494  001502  22DA               	addwfc	fsr2h,f,c
  3495  001504  50DF               	movf	indf2,w,c
  3496  001506  0100               	movlb	0	; () banked
  3497  001508  6FC0               	movwf	(moveDist@test+1)& (0+255),b
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;motors.c: 26: T1CONbits.TMR1ON = 1;;
  3501  00150A  80CD               	bsf	4045,0,c	;volatile
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;motors.c: 27: sendUARTarr(2,test);
  3505  00150C  0100               	movlb	0	; () banked
  3506  00150E  0E00               	movlw	high moveDist@test
  3507  001510  0100               	movlb	0	; () banked
  3508  001512  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  3509  001514  0100               	movlb	0	; () banked
  3510  001516  0EBF               	movlw	low moveDist@test
  3511  001518  0100               	movlb	0	; () banked
  3512  00151A  6FB7               	movwf	sendUARTarr@data& (0+255),b
  3513  00151C  0E02               	movlw	2
  3514  00151E  EC35  F00F         	call	_sendUARTarr
  3515                           
  3516                           ;motors.c: 28: WriteTimer1(tptr->cmDist);
  3517  001522  0100               	movlb	0	; () banked
  3518  001524  EE20 F004          	lfsr	2,4
  3519  001528  0100               	movlb	0	; () banked
  3520  00152A  51BB               	movf	moveDist@tptr& (0+255),w,b
  3521  00152C  26D9               	addwf	fsr2l,f,c
  3522  00152E  0100               	movlb	0	; () banked
  3523  001530  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3524  001532  22DA               	addwfc	fsr2h,f,c
  3525  001534  0100               	movlb	0	; () banked
  3526  001536  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  3527  00153A  0100               	movlb	0	; () banked
  3528  00153C  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  3529  001540  EC30  F010         	call	_WriteTimer1	;wreg free
  3530                           
  3531                           ;motors.c: 29: tptr->cmCount = 0;
  3532  001544  C0BB  FFD9         	movff	moveDist@tptr,fsr2l
  3533  001548  C0BC  FFDA         	movff	moveDist@tptr+1,fsr2h
  3534  00154C  0E00               	movlw	0
  3535  00154E  6EDE               	movwf	postinc2,c
  3536  001550  0E00               	movlw	0
  3537  001552  6EDD               	movwf	postdec2,c
  3538  001554  0012               	return	
  3539  001556                     __end_of_moveDist:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf1	equ	0xFE7
  3550                           postdec1	equ	0xFE5
  3551                           fsr1h	equ	0xFE2
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           postinc2	equ	0xFDE
  3555                           postdec2	equ	0xFDD
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _WriteTimer1 *****************
  3561 ;; Defined at:
  3562 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  timer1          2   29[BANK0 ] unsigned int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  timer           2   31[BANK0 ] struct Timers
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		None
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3576 ;;      Params:         0       2       0       0       0
  3577 ;;      Locals:         0       2       0       0       0
  3578 ;;      Temps:          0       0       0       0       0
  3579 ;;      Totals:         0       4       0       0       0
  3580 ;;Total ram usage:        4 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:   10
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_moveDist
  3587 ;;		_stop
  3588 ;;		_timer1_lthread
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text12
  3593  002060                     __ptext12:
  3594                           	opt stack 0
  3595  002060                     _WriteTimer1:
  3596                           	opt stack 18
  3597                           
  3598                           ;incstack = 0
  3599  002060  C09D  F09F         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3600  002064  C09E  F0A0         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3601  002068  C0A0  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3602  00206C  C09F  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3603  002070  0012               	return	
  3604  002072                     __end_of_WriteTimer1:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           prodh	equ	0xFF4
  3611                           prodl	equ	0xFF3
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           postdec1	equ	0xFE5
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _move *****************
  3626 ;; Defined at:
  3627 ;;		line 8 in file "src/motors.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  3630 ;;		 -> main@t1thread_data(12), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  test            2   61[BANK0 ] unsigned char [2]
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       2       0       0       0
  3643 ;;      Locals:         0       2       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       4       0       0       0
  3646 ;;Total ram usage:        4 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   14
  3649 ;; This function calls:
  3650 ;;		_sendUARTarr
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text13
  3657  001840                     __ptext13:
  3658                           	opt stack 0
  3659  001840                     _move:
  3660                           	opt stack 15
  3661                           
  3662                           ;motors.c: 9: PORTA = 0x01;
  3663                           
  3664                           ;incstack = 0
  3665  001840  0E01               	movlw	1
  3666  001842  6E80               	movwf	3968,c	;volatile
  3667                           
  3668                           ;motors.c: 10: tptr->distLim = false;
  3669  001844  0100               	movlb	0	; () banked
  3670  001846  EE20 F00A          	lfsr	2,10
  3671  00184A  0100               	movlb	0	; () banked
  3672  00184C  51BB               	movf	move@tptr& (0+255),w,b
  3673  00184E  26D9               	addwf	fsr2l,f,c
  3674  001850  0100               	movlb	0	; () banked
  3675  001852  51BC               	movf	(move@tptr+1)& (0+255),w,b
  3676  001854  22DA               	addwfc	fsr2h,f,c
  3677  001856  0E00               	movlw	0
  3678  001858  6EDF               	movwf	indf2,c
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;motors.c: 11: unsigned char test[2];
  3682                           ;motors.c: 12: test[0] = tptr->ctrl[0];
  3683  00185A  0100               	movlb	0	; () banked
  3684  00185C  EE20 F002          	lfsr	2,2
  3685  001860  0100               	movlb	0	; () banked
  3686  001862  51BB               	movf	move@tptr& (0+255),w,b
  3687  001864  26D9               	addwf	fsr2l,f,c
  3688  001866  0100               	movlb	0	; () banked
  3689  001868  51BC               	movf	(move@tptr+1)& (0+255),w,b
  3690  00186A  22DA               	addwfc	fsr2h,f,c
  3691  00186C  50DF               	movf	indf2,w,c
  3692  00186E  0100               	movlb	0	; () banked
  3693  001870  6FBD               	movwf	move@test& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;motors.c: 13: test[1] = tptr->ctrl[1];
  3697  001872  0100               	movlb	0	; () banked
  3698  001874  EE20 F003          	lfsr	2,3
  3699  001878  0100               	movlb	0	; () banked
  3700  00187A  51BB               	movf	move@tptr& (0+255),w,b
  3701  00187C  26D9               	addwf	fsr2l,f,c
  3702  00187E  0100               	movlb	0	; () banked
  3703  001880  51BC               	movf	(move@tptr+1)& (0+255),w,b
  3704  001882  22DA               	addwfc	fsr2h,f,c
  3705  001884  50DF               	movf	indf2,w,c
  3706  001886  0100               	movlb	0	; () banked
  3707  001888  6FBE               	movwf	(move@test+1)& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;motors.c: 14: T1CONbits.TMR1ON = 1;;
  3711  00188A  80CD               	bsf	4045,0,c	;volatile
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;motors.c: 15: sendUARTarr(2,test);
  3715  00188C  0100               	movlb	0	; () banked
  3716  00188E  0E00               	movlw	high move@test
  3717  001890  0100               	movlb	0	; () banked
  3718  001892  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  3719  001894  0100               	movlb	0	; () banked
  3720  001896  0EBD               	movlw	low move@test
  3721  001898  0100               	movlb	0	; () banked
  3722  00189A  6FB7               	movwf	sendUARTarr@data& (0+255),b
  3723  00189C  0E02               	movlw	2
  3724  00189E  EC35  F00F         	call	_sendUARTarr
  3725                           
  3726                           ;motors.c: 16: tptr->cmCount = 0;
  3727  0018A2  C0BB  FFD9         	movff	move@tptr,fsr2l
  3728  0018A6  C0BC  FFDA         	movff	move@tptr+1,fsr2h
  3729  0018AA  0E00               	movlw	0
  3730  0018AC  6EDE               	movwf	postinc2,c
  3731  0018AE  0E00               	movlw	0
  3732  0018B0  6EDD               	movwf	postdec2,c
  3733  0018B2  0012               	return	
  3734  0018B4                     __end_of_move:
  3735                           	opt stack 0
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           indf1	equ	0xFE7
  3745                           postdec1	equ	0xFE5
  3746                           fsr1h	equ	0xFE2
  3747                           fsr1l	equ	0xFE1
  3748                           indf2	equ	0xFDF
  3749                           postinc2	equ	0xFDE
  3750                           postdec2	equ	0xFDD
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _sendUARTarr *****************
  3756 ;; Defined at:
  3757 ;;		line 85 in file "src/my_uart.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  length          1    wreg     unsigned char 
  3760 ;;  data            2   55[BANK0 ] PTR unsigned char 
  3761 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), stop@test(2), turn@test(2), 
  3762 ;;		 -> moveDist@test(2), move@test(2), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  length          1   58[BANK0 ] unsigned char 
  3765 ;;  retval          1   57[BANK0 ] char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      enum E4455
  3768 ;; Registers used:
  3769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3775 ;;      Params:         0       2       0       0       0
  3776 ;;      Locals:         0       2       0       0       0
  3777 ;;      Temps:          0       0       0       0       0
  3778 ;;      Totals:         0       4       0       0       0
  3779 ;;Total ram usage:        4 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:   13
  3782 ;; This function calls:
  3783 ;;		_ToMainLow_sendmsg
  3784 ;; This function is called by:
  3785 ;;		_move
  3786 ;;		_moveDist
  3787 ;;		_turn
  3788 ;;		_stop
  3789 ;;		_timer0_lthread
  3790 ;;		_timer1_lthread
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text14
  3795  001E6A                     __ptext14:
  3796                           	opt stack 0
  3797  001E6A                     _sendUARTarr:
  3798                           	opt stack 15
  3799                           
  3800                           ;incstack = 0
  3801                           ;sendUARTarr@length stored from wreg
  3802  001E6A  0100               	movlb	0	; () banked
  3803  001E6C  6FBA               	movwf	sendUARTarr@length& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;my_uart.c: 86: if(length > 10){
  3807  001E6E  0E0A               	movlw	10
  3808  001E70  0100               	movlb	0	; () banked
  3809  001E72  65BA               	cpfsgt	sendUARTarr@length& (0+255),b
  3810  001E74  D001               	goto	l2580
  3811  001E76  0012               	return	
  3812  001E78                     l2580:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;my_uart.c: 89: }
  3816                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  3817  001E78  0E1F               	movlw	31
  3818  001E7A  0100               	movlb	0	; () banked
  3819  001E7C  6FB3               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  3820  001E7E  0100               	movlb	0	; () banked
  3821  001E80  C0B8  F0B5         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  3822  001E84  0100               	movlb	0	; () banked
  3823  001E86  C0B7  F0B4         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  3824  001E8A  0100               	movlb	0	; () banked
  3825  001E8C  51BA               	movf	sendUARTarr@length& (0+255),w,b
  3826  001E8E  EC4C  F00F         	call	_ToMainLow_sendmsg
  3827  001E92  0100               	movlb	0	; () banked
  3828  001E94  6FB9               	movwf	sendUARTarr@retval& (0+255),b
  3829  001E96  0012               	return	
  3830  001E98                     __end_of_sendUARTarr:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           indf1	equ	0xFE7
  3841                           postdec1	equ	0xFE5
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           indf2	equ	0xFDF
  3845                           postinc2	equ	0xFDE
  3846                           postdec2	equ	0xFDD
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _ToMainLow_sendmsg *****************
  3852 ;; Defined at:
  3853 ;;		line 103 in file "src/messages.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  length          1    wreg     unsigned char 
  3856 ;;  msgtype         1   51[BANK0 ] unsigned char 
  3857 ;;  data            2   52[BANK0 ] PTR void 
  3858 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  3859 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  3860 ;;		 -> NULL(0), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  length          1   54[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      char 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3872 ;;      Params:         0       3       0       0       0
  3873 ;;      Locals:         0       1       0       0       0
  3874 ;;      Temps:          0       0       0       0       0
  3875 ;;      Totals:         0       4       0       0       0
  3876 ;;Total ram usage:        4 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:   12
  3879 ;; This function calls:
  3880 ;;		_send_msg
  3881 ;; This function is called by:
  3882 ;;		_sendUARTarr
  3883 ;;		_sendUARTbyte
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text15
  3888  001E98                     __ptext15:
  3889                           	opt stack 0
  3890  001E98                     _ToMainLow_sendmsg:
  3891                           	opt stack 15
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;incstack = 0
  3895                           ;ToMainLow_sendmsg@length stored from wreg
  3896  001E98  0100               	movlb	0	; () banked
  3897  001E9A  6FB6               	movwf	ToMainLow_sendmsg@length& (0+255),b
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3901  001E9C  0101               	movlb	1	; () banked
  3902  001E9E  0E01               	movlw	high _ToMainLow_MQ
  3903  001EA0  0100               	movlb	0	; () banked
  3904  001EA2  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  3905  001EA4  0101               	movlb	1	; () banked
  3906  001EA6  0E38               	movlw	low _ToMainLow_MQ
  3907  001EA8  0100               	movlb	0	; () banked
  3908  001EAA  6FA7               	movwf	send_msg@qptr& (0+255),b
  3909  001EAC  C0B6  F0A9         	movff	ToMainLow_sendmsg@length,send_msg@length
  3910  001EB0  C0B3  F0AA         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3911  001EB4  0100               	movlb	0	; () banked
  3912  001EB6  C0B5  F0AC         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3913  001EBA  0100               	movlb	0	; () banked
  3914  001EBC  C0B4  F0AB         	movff	ToMainLow_sendmsg@data,send_msg@data
  3915  001EC0  ECE9  F007         	call	_send_msg	;wreg free
  3916  001EC4  0012               	return	
  3917  001EC6                     __end_of_ToMainLow_sendmsg:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           indf1	equ	0xFE7
  3928                           postdec1	equ	0xFE5
  3929                           fsr1h	equ	0xFE2
  3930                           fsr1l	equ	0xFE1
  3931                           indf2	equ	0xFDF
  3932                           postinc2	equ	0xFDE
  3933                           postdec2	equ	0xFDD
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _send_msg *****************
  3939 ;; Defined at:
  3940 ;;		line 24 in file "src/messages.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3943 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3944 ;;  length          1   41[BANK0 ] unsigned char 
  3945 ;;  msgtype         1   42[BANK0 ] unsigned char 
  3946 ;;  data            2   43[BANK0 ] PTR void 
  3947 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  3948 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  3949 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  qmsg            2   49[BANK0 ] PTR struct __msg
  3952 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3953 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3954 ;;  tlength         2   46[BANK0 ] unsigned int 
  3955 ;;  slot            1   48[BANK0 ] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      char 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3965 ;;      Params:         0       6       0       0       0
  3966 ;;      Locals:         0       5       0       0       0
  3967 ;;      Temps:          0       1       0       0       0
  3968 ;;      Totals:         0      12       0       0       0
  3969 ;;Total ram usage:       12 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:   11
  3972 ;; This function calls:
  3973 ;;		_memcpy
  3974 ;; This function is called by:
  3975 ;;		_ToMainLow_sendmsg
  3976 ;;		_FromMainLow_sendmsg
  3977 ;;		_FromMainHigh_sendmsg
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text16
  3982  000FD2                     __ptext16:
  3983                           	opt stack 0
  3984  000FD2                     _send_msg:
  3985                           	opt stack 16
  3986                           
  3987                           ;messages.c: 25: unsigned char slot;
  3988                           ;messages.c: 27: msg *qmsg;
  3989                           ;messages.c: 28: size_t tlength = length;
  3990                           
  3991                           ;incstack = 0
  3992  000FD2  0100               	movlb	0	; () banked
  3993  000FD4  C0A9  F0AE         	movff	send_msg@length,send_msg@tlength
  3994  000FD8  0100               	movlb	0	; () banked
  3995  000FDA  6BAF               	clrf	(send_msg@tlength+1)& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3999  000FDC  0100               	movlb	0	; () banked
  4000  000FDE  EE20 F034          	lfsr	2,52
  4001  000FE2  0100               	movlb	0	; () banked
  4002  000FE4  51A7               	movf	send_msg@qptr& (0+255),w,b
  4003  000FE6  26D9               	addwf	fsr2l,f,c
  4004  000FE8  0100               	movlb	0	; () banked
  4005  000FEA  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  4006  000FEC  22DA               	addwfc	fsr2h,f,c
  4007  000FEE  50DF               	movf	indf2,w,c
  4008  000FF0  0100               	movlb	0	; () banked
  4009  000FF2  6FB0               	movwf	send_msg@slot& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4013  000FF4  0100               	movlb	0	; () banked
  4014  000FF6  51B0               	movf	send_msg@slot& (0+255),w,b
  4015  000FF8  0D0D               	mullw	13
  4016  000FFA  50F3               	movf	prodl,w,c
  4017  000FFC  0100               	movlb	0	; () banked
  4018  000FFE  25A7               	addwf	send_msg@qptr& (0+255),w,b
  4019  001000  0100               	movlb	0	; () banked
  4020  001002  6FB1               	movwf	send_msg@qmsg& (0+255),b
  4021  001004  50F4               	movf	prodh,w,c
  4022  001006  0100               	movlb	0	; () banked
  4023  001008  21A8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  4024  00100A  0100               	movlb	0	; () banked
  4025  00100C  6FB2               	movwf	(send_msg@qmsg+1)& (0+255),b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;messages.c: 41: if (qmsg->full != 0) {
  4029  00100E  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  4030  001012  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4031  001016  50DF               	movf	indf2,w,c
  4032  001018  B4D8               	btfsc	status,2,c
  4033  00101A  D002               	goto	l2354
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;messages.c: 42: return (-1);
  4037  00101C  0EFF               	movlw	255
  4038  00101E  0012               	return	
  4039  001020                     l2354:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;messages.c: 43: }
  4043                           ;messages.c: 46: qmsg->length = length;
  4044  001020  0100               	movlb	0	; () banked
  4045  001022  EE20 F001          	lfsr	2,1
  4046  001026  0100               	movlb	0	; () banked
  4047  001028  51B1               	movf	send_msg@qmsg& (0+255),w,b
  4048  00102A  26D9               	addwf	fsr2l,f,c
  4049  00102C  0100               	movlb	0	; () banked
  4050  00102E  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4051  001030  22DA               	addwfc	fsr2h,f,c
  4052  001032  0100               	movlb	0	; () banked
  4053  001034  C0A9  FFDF         	movff	send_msg@length,indf2
  4054                           
  4055                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4056  001038  0100               	movlb	0	; () banked
  4057  00103A  EE20 F002          	lfsr	2,2
  4058  00103E  0100               	movlb	0	; () banked
  4059  001040  51B1               	movf	send_msg@qmsg& (0+255),w,b
  4060  001042  26D9               	addwf	fsr2l,f,c
  4061  001044  0100               	movlb	0	; () banked
  4062  001046  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4063  001048  22DA               	addwfc	fsr2h,f,c
  4064  00104A  0100               	movlb	0	; () banked
  4065  00104C  C0AA  FFDF         	movff	send_msg@msgtype,indf2
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4069  001050  0E03               	movlw	3
  4070  001052  0100               	movlb	0	; () banked
  4071  001054  25B1               	addwf	send_msg@qmsg& (0+255),w,b
  4072  001056  0100               	movlb	0	; () banked
  4073  001058  6F9D               	movwf	memcpy@d1& (0+255),b
  4074  00105A  0E00               	movlw	0
  4075  00105C  0100               	movlb	0	; () banked
  4076  00105E  21B2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  4077  001060  0100               	movlb	0	; () banked
  4078  001062  6F9E               	movwf	(memcpy@d1+1)& (0+255),b
  4079  001064  0100               	movlb	0	; () banked
  4080  001066  C0AC  F0A0         	movff	send_msg@data+1,memcpy@s1+1
  4081  00106A  0100               	movlb	0	; () banked
  4082  00106C  C0AB  F09F         	movff	send_msg@data,memcpy@s1
  4083  001070  C0AE  F0A1         	movff	send_msg@tlength,memcpy@n
  4084  001074  C0AF  F0A2         	movff	send_msg@tlength+1,memcpy@n+1
  4085  001078  ECCA  F00D         	call	_memcpy	;wreg free
  4086                           
  4087                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4088  00107C  0100               	movlb	0	; () banked
  4089  00107E  EE20 F034          	lfsr	2,52
  4090  001082  0100               	movlb	0	; () banked
  4091  001084  51A7               	movf	send_msg@qptr& (0+255),w,b
  4092  001086  26D9               	addwf	fsr2l,f,c
  4093  001088  0100               	movlb	0	; () banked
  4094  00108A  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  4095  00108C  22DA               	addwfc	fsr2h,f,c
  4096  00108E  0100               	movlb	0	; () banked
  4097  001090  EE10 F034          	lfsr	1,52
  4098  001094  0100               	movlb	0	; () banked
  4099  001096  51A7               	movf	send_msg@qptr& (0+255),w,b
  4100  001098  26E1               	addwf	fsr1l,f,c
  4101  00109A  0100               	movlb	0	; () banked
  4102  00109C  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  4103  00109E  22E2               	addwfc	fsr1h,f,c
  4104  0010A0  50E7               	movf	indf1,w,c
  4105  0010A2  0100               	movlb	0	; () banked
  4106  0010A4  6FAD               	movwf	??_send_msg& (0+255),b
  4107  0010A6  0100               	movlb	0	; () banked
  4108  0010A8  29AD               	incf	??_send_msg& (0+255),w,b
  4109  0010AA  0B03               	andlw	3
  4110  0010AC  6EDF               	movwf	indf2,c
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;messages.c: 59: qmsg->full = 1;
  4114  0010AE  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  4115  0010B2  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4116  0010B6  0E01               	movlw	1
  4117  0010B8  6EDF               	movwf	indf2,c
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;messages.c: 60: return (1);
  4121  0010BA  0E01               	movlw	1
  4122  0010BC  0012               	return	
  4123  0010BE                     __end_of_send_msg:
  4124                           	opt stack 0
  4125                           tblptru	equ	0xFF8
  4126                           tblptrh	equ	0xFF7
  4127                           tblptrl	equ	0xFF6
  4128                           tablat	equ	0xFF5
  4129                           prodh	equ	0xFF4
  4130                           prodl	equ	0xFF3
  4131                           postinc0	equ	0xFEE
  4132                           wreg	equ	0xFE8
  4133                           indf1	equ	0xFE7
  4134                           postdec1	equ	0xFE5
  4135                           fsr1h	equ	0xFE2
  4136                           fsr1l	equ	0xFE1
  4137                           indf2	equ	0xFDF
  4138                           postinc2	equ	0xFDE
  4139                           postdec2	equ	0xFDD
  4140                           fsr2h	equ	0xFDA
  4141                           fsr2l	equ	0xFD9
  4142                           status	equ	0xFD8
  4143                           
  4144 ;; *************** function _init_uart_recv *****************
  4145 ;; Defined at:
  4146 ;;		line 80 in file "src/my_uart.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  4149 ;;		 -> main@uc(5), 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;		None               void
  4154 ;; Registers used:
  4155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4161 ;;      Params:         0       2       0       0       0
  4162 ;;      Locals:         0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0
  4164 ;;      Totals:         0       2       0       0       0
  4165 ;;Total ram usage:        2 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:   10
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text17
  4176  001FFE                     __ptext17:
  4177                           	opt stack 0
  4178  001FFE                     _init_uart_recv:
  4179                           	opt stack 19
  4180                           
  4181                           ;my_uart.c: 81: uc_ptr = uc;
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;incstack = 0
  4185  001FFE  0100               	movlb	0	; () banked
  4186  002000  C09E  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  4187  002004  0100               	movlb	0	; () banked
  4188  002006  C09D  F049         	movff	init_uart_recv@uc,_uc_ptr
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  4192  00200A  EE20 F004          	lfsr	2,4
  4193  00200E  5049               	movf	_uc_ptr,w,c
  4194  002010  26D9               	addwf	fsr2l,f,c
  4195  002012  504A               	movf	_uc_ptr+1,w,c
  4196  002014  22DA               	addwfc	fsr2h,f,c
  4197  002016  0E00               	movlw	0
  4198  002018  6EDF               	movwf	indf2,c
  4199                           
  4200                           ; BSR set to: 0
  4201  00201A  0012               	return	
  4202  00201C                     __end_of_init_uart_recv:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           prodh	equ	0xFF4
  4209                           prodl	equ	0xFF3
  4210                           postinc0	equ	0xFEE
  4211                           wreg	equ	0xFE8
  4212                           indf1	equ	0xFE7
  4213                           postdec1	equ	0xFE5
  4214                           fsr1h	equ	0xFE2
  4215                           fsr1l	equ	0xFE1
  4216                           indf2	equ	0xFDF
  4217                           postinc2	equ	0xFDE
  4218                           postdec2	equ	0xFDD
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _init_uart_lthread *****************
  4224 ;; Defined at:
  4225 ;;		line 7 in file "src/uart_thread.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  4228 ;;		 -> main@uthread_data(10), 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		None
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4240 ;;      Params:         0       2       0       0       0
  4241 ;;      Locals:         0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0
  4243 ;;      Totals:         0       2       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:   10
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_main
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text18
  4255  00209C                     __ptext18:
  4256                           	opt stack 0
  4257  00209C                     _init_uart_lthread:
  4258                           	opt stack 19
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;incstack = 0
  4262  00209C  0012               	return	
  4263  00209E                     __end_of_init_uart_lthread:
  4264                           	opt stack 0
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           prodh	equ	0xFF4
  4270                           prodl	equ	0xFF3
  4271                           postinc0	equ	0xFEE
  4272                           wreg	equ	0xFE8
  4273                           indf1	equ	0xFE7
  4274                           postdec1	equ	0xFE5
  4275                           fsr1h	equ	0xFE2
  4276                           fsr1l	equ	0xFE1
  4277                           indf2	equ	0xFDF
  4278                           postinc2	equ	0xFDE
  4279                           postdec2	equ	0xFDD
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _init_timer1_lthread *****************
  4285 ;; Defined at:
  4286 ;;		line 6 in file "src/timer1_thread.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  4289 ;;		 -> main@t1thread_data(12), 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4301 ;;      Params:         0       2       0       0       0
  4302 ;;      Locals:         0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0
  4304 ;;      Totals:         0       2       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:   10
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text19
  4316  001600                     __ptext19:
  4317                           	opt stack 0
  4318  001600                     _init_timer1_lthread:
  4319                           	opt stack 19
  4320                           
  4321                           ;timer1_thread.c: 7: tptr->cmCount = 0;
  4322                           
  4323                           ;incstack = 0
  4324  001600  C09D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  4325  001604  C09E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  4326  001608  0E00               	movlw	0
  4327  00160A  6EDE               	movwf	postinc2,c
  4328  00160C  0E00               	movlw	0
  4329  00160E  6EDD               	movwf	postdec2,c
  4330                           
  4331                           ;timer1_thread.c: 8: tptr->ctrl[0] = 80;
  4332  001610  0100               	movlb	0	; () banked
  4333  001612  EE20 F002          	lfsr	2,2
  4334  001616  0100               	movlb	0	; () banked
  4335  001618  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4336  00161A  26D9               	addwf	fsr2l,f,c
  4337  00161C  0100               	movlb	0	; () banked
  4338  00161E  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4339  001620  22DA               	addwfc	fsr2h,f,c
  4340  001622  0E50               	movlw	80
  4341  001624  6EDF               	movwf	indf2,c
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;timer1_thread.c: 9: tptr->ctrl[1] = 205;
  4345  001626  0100               	movlb	0	; () banked
  4346  001628  EE20 F003          	lfsr	2,3
  4347  00162C  0100               	movlb	0	; () banked
  4348  00162E  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4349  001630  26D9               	addwf	fsr2l,f,c
  4350  001632  0100               	movlb	0	; () banked
  4351  001634  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4352  001636  22DA               	addwfc	fsr2h,f,c
  4353  001638  0ECD               	movlw	205
  4354  00163A  6EDF               	movwf	indf2,c
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;timer1_thread.c: 10: tptr->cmDist = 65458;
  4358  00163C  0100               	movlb	0	; () banked
  4359  00163E  EE20 F004          	lfsr	2,4
  4360  001642  0100               	movlb	0	; () banked
  4361  001644  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4362  001646  26D9               	addwf	fsr2l,f,c
  4363  001648  0100               	movlb	0	; () banked
  4364  00164A  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4365  00164C  22DA               	addwfc	fsr2h,f,c
  4366  00164E  0EB2               	movlw	178
  4367  001650  6EDE               	movwf	postinc2,c
  4368  001652  0EFF               	movlw	255
  4369  001654  6EDD               	movwf	postdec2,c
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;timer1_thread.c: 11: tptr->curMove = 0;
  4373  001656  0100               	movlb	0	; () banked
  4374  001658  EE20 F006          	lfsr	2,6
  4375  00165C  0100               	movlb	0	; () banked
  4376  00165E  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4377  001660  26D9               	addwf	fsr2l,f,c
  4378  001662  0100               	movlb	0	; () banked
  4379  001664  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4380  001666  22DA               	addwfc	fsr2h,f,c
  4381  001668  0E00               	movlw	0
  4382  00166A  6EDE               	movwf	postinc2,c
  4383  00166C  0E00               	movlw	0
  4384  00166E  6EDD               	movwf	postdec2,c
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;timer1_thread.c: 12: tptr->distLim = false;
  4388  001670  0100               	movlb	0	; () banked
  4389  001672  EE20 F00A          	lfsr	2,10
  4390  001676  0100               	movlb	0	; () banked
  4391  001678  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4392  00167A  26D9               	addwf	fsr2l,f,c
  4393  00167C  0100               	movlb	0	; () banked
  4394  00167E  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4395  001680  22DA               	addwfc	fsr2h,f,c
  4396  001682  0E00               	movlw	0
  4397  001684  6EDF               	movwf	indf2,c
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;timer1_thread.c: 13: tptr->ready = true;
  4401  001686  0100               	movlb	0	; () banked
  4402  001688  EE20 F00B          	lfsr	2,11
  4403  00168C  0100               	movlb	0	; () banked
  4404  00168E  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4405  001690  26D9               	addwf	fsr2l,f,c
  4406  001692  0100               	movlb	0	; () banked
  4407  001694  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4408  001696  22DA               	addwfc	fsr2h,f,c
  4409  001698  0E01               	movlw	1
  4410  00169A  6EDF               	movwf	indf2,c
  4411                           
  4412                           ; BSR set to: 0
  4413  00169C  0012               	return	
  4414  00169E                     __end_of_init_timer1_lthread:
  4415                           	opt stack 0
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           prodh	equ	0xFF4
  4421                           prodl	equ	0xFF3
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf1	equ	0xFE7
  4425                           postdec1	equ	0xFE5
  4426                           fsr1h	equ	0xFE2
  4427                           fsr1l	equ	0xFE1
  4428                           indf2	equ	0xFDF
  4429                           postinc2	equ	0xFDE
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435 ;; *************** function _init_timer0_lthread *****************
  4436 ;; Defined at:
  4437 ;;		line 7 in file "src/timer0_thread.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  4440 ;;		 -> main@t0thread_data(12), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;		None               void
  4445 ;; Registers used:
  4446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4452 ;;      Params:         0       2       0       0       0
  4453 ;;      Locals:         0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0
  4455 ;;      Totals:         0       2       0       0       0
  4456 ;;Total ram usage:        2 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:   10
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_main
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text20
  4467  001190                     __ptext20:
  4468                           	opt stack 0
  4469  001190                     _init_timer0_lthread:
  4470                           	opt stack 19
  4471                           
  4472                           ;timer0_thread.c: 8: tptr->cmCount = 0;
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;incstack = 0
  4476  001190  C09D  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  4477  001194  C09E  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  4478  001198  0E00               	movlw	0
  4479  00119A  6EDE               	movwf	postinc2,c
  4480  00119C  0E00               	movlw	0
  4481  00119E  6EDD               	movwf	postdec2,c
  4482                           
  4483                           ;timer0_thread.c: 9: tptr->ctrlL[0] = 0x20;
  4484  0011A0  0100               	movlb	0	; () banked
  4485  0011A2  EE20 F002          	lfsr	2,2
  4486  0011A6  0100               	movlb	0	; () banked
  4487  0011A8  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4488  0011AA  26D9               	addwf	fsr2l,f,c
  4489  0011AC  0100               	movlb	0	; () banked
  4490  0011AE  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4491  0011B0  22DA               	addwfc	fsr2h,f,c
  4492  0011B2  0E20               	movlw	32
  4493  0011B4  6EDF               	movwf	indf2,c
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;timer0_thread.c: 10: tptr->ctrlL[1] = 0xE0;
  4497  0011B6  0100               	movlb	0	; () banked
  4498  0011B8  EE20 F003          	lfsr	2,3
  4499  0011BC  0100               	movlb	0	; () banked
  4500  0011BE  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4501  0011C0  26D9               	addwf	fsr2l,f,c
  4502  0011C2  0100               	movlb	0	; () banked
  4503  0011C4  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4504  0011C6  22DA               	addwfc	fsr2h,f,c
  4505  0011C8  0EE0               	movlw	224
  4506  0011CA  6EDF               	movwf	indf2,c
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;timer0_thread.c: 11: tptr->ctrlR[0] = 0xA0;
  4510  0011CC  0100               	movlb	0	; () banked
  4511  0011CE  EE20 F004          	lfsr	2,4
  4512  0011D2  0100               	movlb	0	; () banked
  4513  0011D4  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4514  0011D6  26D9               	addwf	fsr2l,f,c
  4515  0011D8  0100               	movlb	0	; () banked
  4516  0011DA  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4517  0011DC  22DA               	addwfc	fsr2h,f,c
  4518  0011DE  0EA0               	movlw	160
  4519  0011E0  6EDF               	movwf	indf2,c
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;timer0_thread.c: 12: tptr->ctrlR[1] = 0x5F;
  4523  0011E2  0100               	movlb	0	; () banked
  4524  0011E4  EE20 F005          	lfsr	2,5
  4525  0011E8  0100               	movlb	0	; () banked
  4526  0011EA  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4527  0011EC  26D9               	addwf	fsr2l,f,c
  4528  0011EE  0100               	movlb	0	; () banked
  4529  0011F0  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4530  0011F2  22DA               	addwfc	fsr2h,f,c
  4531  0011F4  0E5F               	movlw	95
  4532  0011F6  6EDF               	movwf	indf2,c
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;timer0_thread.c: 13: tptr->cmDist = 65503;
  4536  0011F8  0100               	movlb	0	; () banked
  4537  0011FA  EE20 F006          	lfsr	2,6
  4538  0011FE  0100               	movlb	0	; () banked
  4539  001200  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4540  001202  26D9               	addwf	fsr2l,f,c
  4541  001204  0100               	movlb	0	; () banked
  4542  001206  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4543  001208  22DA               	addwfc	fsr2h,f,c
  4544  00120A  0EDF               	movlw	223
  4545  00120C  6EDE               	movwf	postinc2,c
  4546  00120E  0EFF               	movlw	255
  4547  001210  6EDD               	movwf	postdec2,c
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;timer0_thread.c: 14: tptr->curMove = 0;
  4551  001212  0100               	movlb	0	; () banked
  4552  001214  EE20 F008          	lfsr	2,8
  4553  001218  0100               	movlb	0	; () banked
  4554  00121A  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4555  00121C  26D9               	addwf	fsr2l,f,c
  4556  00121E  0100               	movlb	0	; () banked
  4557  001220  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4558  001222  22DA               	addwfc	fsr2h,f,c
  4559  001224  0E00               	movlw	0
  4560  001226  6EDE               	movwf	postinc2,c
  4561  001228  0E00               	movlw	0
  4562  00122A  6EDD               	movwf	postdec2,c
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;timer0_thread.c: 15: tptr->distLim = false;
  4566  00122C  0100               	movlb	0	; () banked
  4567  00122E  EE20 F00A          	lfsr	2,10
  4568  001232  0100               	movlb	0	; () banked
  4569  001234  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4570  001236  26D9               	addwf	fsr2l,f,c
  4571  001238  0100               	movlb	0	; () banked
  4572  00123A  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4573  00123C  22DA               	addwfc	fsr2h,f,c
  4574  00123E  0E00               	movlw	0
  4575  001240  6EDF               	movwf	indf2,c
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;timer0_thread.c: 16: tptr->ready = true;
  4579  001242  0100               	movlb	0	; () banked
  4580  001244  EE20 F00B          	lfsr	2,11
  4581  001248  0100               	movlb	0	; () banked
  4582  00124A  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4583  00124C  26D9               	addwf	fsr2l,f,c
  4584  00124E  0100               	movlb	0	; () banked
  4585  001250  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4586  001252  22DA               	addwfc	fsr2h,f,c
  4587  001254  0E01               	movlw	1
  4588  001256  6EDF               	movwf	indf2,c
  4589                           
  4590                           ; BSR set to: 0
  4591  001258  0012               	return	
  4592  00125A                     __end_of_init_timer0_lthread:
  4593                           	opt stack 0
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           postinc0	equ	0xFEE
  4601                           wreg	equ	0xFE8
  4602                           indf1	equ	0xFE7
  4603                           postdec1	equ	0xFE5
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           indf2	equ	0xFDF
  4607                           postinc2	equ	0xFDE
  4608                           postdec2	equ	0xFDD
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function _init_queues *****************
  4614 ;; Defined at:
  4615 ;;		line 194 in file "src/messages.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:   11
  4636 ;; This function calls:
  4637 ;;		_init_queue
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text21
  4644  001A94                     __ptext21:
  4645                           	opt stack 0
  4646  001A94                     _init_queues:
  4647                           	opt stack 18
  4648                           
  4649                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;incstack = 0
  4653  001A94  0E00               	movlw	0
  4654  001A96  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4655                           
  4656                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  4657  001A98  0101               	movlb	1	; () banked
  4658  001A9A  0E01               	movlw	high _ToMainLow_MQ
  4659  001A9C  0100               	movlb	0	; () banked
  4660  001A9E  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4661  001AA0  0101               	movlb	1	; () banked
  4662  001AA2  0E38               	movlw	low _ToMainLow_MQ
  4663  001AA4  0100               	movlb	0	; () banked
  4664  001AA6  6F9D               	movwf	init_queue@qptr& (0+255),b
  4665  001AA8  EC8D  F00C         	call	_init_queue	;wreg free
  4666                           
  4667                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4668  001AAC  0101               	movlb	1	; () banked
  4669  001AAE  0E01               	movlw	high _ToMainHigh_MQ
  4670  001AB0  0100               	movlb	0	; () banked
  4671  001AB2  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4672  001AB4  0101               	movlb	1	; () banked
  4673  001AB6  0E02               	movlw	low _ToMainHigh_MQ
  4674  001AB8  0100               	movlb	0	; () banked
  4675  001ABA  6F9D               	movwf	init_queue@qptr& (0+255),b
  4676  001ABC  EC8D  F00C         	call	_init_queue	;wreg free
  4677                           
  4678                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4679  001AC0  0102               	movlb	2	; () banked
  4680  001AC2  0E02               	movlw	high _FromMainLow_MQ
  4681  001AC4  0100               	movlb	0	; () banked
  4682  001AC6  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4683  001AC8  0102               	movlb	2	; () banked
  4684  001ACA  0E36               	movlw	low _FromMainLow_MQ
  4685  001ACC  0100               	movlb	0	; () banked
  4686  001ACE  6F9D               	movwf	init_queue@qptr& (0+255),b
  4687  001AD0  EC8D  F00C         	call	_init_queue	;wreg free
  4688                           
  4689                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4690  001AD4  0102               	movlb	2	; () banked
  4691  001AD6  0E02               	movlw	high _FromMainHigh_MQ
  4692  001AD8  0100               	movlb	0	; () banked
  4693  001ADA  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4694  001ADC  0102               	movlb	2	; () banked
  4695  001ADE  0E00               	movlw	low _FromMainHigh_MQ
  4696  001AE0  0100               	movlb	0	; () banked
  4697  001AE2  6F9D               	movwf	init_queue@qptr& (0+255),b
  4698  001AE4  EC8D  F00C         	call	_init_queue	;wreg free
  4699  001AE8  0012               	return	
  4700  001AEA                     __end_of_init_queues:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           postinc0	equ	0xFEE
  4709                           wreg	equ	0xFE8
  4710                           indf1	equ	0xFE7
  4711                           postdec1	equ	0xFE5
  4712                           fsr1h	equ	0xFE2
  4713                           fsr1l	equ	0xFE1
  4714                           indf2	equ	0xFDF
  4715                           postinc2	equ	0xFDE
  4716                           postdec2	equ	0xFDD
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721 ;; *************** function _init_queue *****************
  4722 ;; Defined at:
  4723 ;;		line 14 in file "src/messages.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4726 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  i               1   31[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;		None               void
  4731 ;; Registers used:
  4732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4738 ;;      Params:         0       2       0       0       0
  4739 ;;      Locals:         0       1       0       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         0       3       0       0       0
  4742 ;;Total ram usage:        3 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:   10
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_init_queues
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text22
  4753  00191A                     __ptext22:
  4754                           	opt stack 0
  4755  00191A                     _init_queue:
  4756                           	opt stack 18
  4757                           
  4758                           ;messages.c: 15: unsigned char i;
  4759                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4760                           
  4761                           ;incstack = 0
  4762  00191A  0100               	movlb	0	; () banked
  4763  00191C  EE20 F034          	lfsr	2,52
  4764  001920  0100               	movlb	0	; () banked
  4765  001922  519D               	movf	init_queue@qptr& (0+255),w,b
  4766  001924  26D9               	addwf	fsr2l,f,c
  4767  001926  0100               	movlb	0	; () banked
  4768  001928  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  4769  00192A  22DA               	addwfc	fsr2h,f,c
  4770  00192C  0E00               	movlw	0
  4771  00192E  6EDF               	movwf	indf2,c
  4772                           
  4773                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4774  001930  0100               	movlb	0	; () banked
  4775  001932  EE20 F035          	lfsr	2,53
  4776  001936  0100               	movlb	0	; () banked
  4777  001938  519D               	movf	init_queue@qptr& (0+255),w,b
  4778  00193A  26D9               	addwf	fsr2l,f,c
  4779  00193C  0100               	movlb	0	; () banked
  4780  00193E  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  4781  001940  22DA               	addwfc	fsr2h,f,c
  4782  001942  0E00               	movlw	0
  4783  001944  6EDF               	movwf	indf2,c
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4787  001946  0E00               	movlw	0
  4788  001948  0100               	movlb	0	; () banked
  4789  00194A  6F9F               	movwf	init_queue@i& (0+255),b
  4790                           
  4791                           ; BSR set to: 0
  4792  00194C  0E03               	movlw	3
  4793  00194E  0100               	movlb	0	; () banked
  4794  001950  659F               	cpfsgt	init_queue@i& (0+255),b
  4795  001952  D001               	goto	l2520
  4796  001954  0012               	return	
  4797  001956                     l2520:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;messages.c: 20: qptr->queue[i].full = 0;
  4801  001956  0100               	movlb	0	; () banked
  4802  001958  519F               	movf	init_queue@i& (0+255),w,b
  4803  00195A  0D0D               	mullw	13
  4804  00195C  50F3               	movf	prodl,w,c
  4805  00195E  0100               	movlb	0	; () banked
  4806  001960  259D               	addwf	init_queue@qptr& (0+255),w,b
  4807  001962  6ED9               	movwf	fsr2l,c
  4808  001964  50F4               	movf	prodh,w,c
  4809  001966  0100               	movlb	0	; () banked
  4810  001968  219E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4811  00196A  6EDA               	movwf	fsr2h,c
  4812  00196C  0E00               	movlw	0
  4813  00196E  6EDF               	movwf	indf2,c
  4814                           
  4815                           ; BSR set to: 0
  4816  001970  0100               	movlb	0	; () banked
  4817  001972  2B9F               	incf	init_queue@i& (0+255),f,b
  4818                           
  4819                           ; BSR set to: 0
  4820  001974  0E03               	movlw	3
  4821  001976  0100               	movlb	0	; () banked
  4822  001978  659F               	cpfsgt	init_queue@i& (0+255),b
  4823  00197A  D7ED               	goto	l2520
  4824  00197C  0012               	return	
  4825  00197E                     __end_of_init_queue:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           postinc0	equ	0xFEE
  4834                           wreg	equ	0xFE8
  4835                           indf1	equ	0xFE7
  4836                           postdec1	equ	0xFE5
  4837                           fsr1h	equ	0xFE2
  4838                           fsr1l	equ	0xFE1
  4839                           indf2	equ	0xFDF
  4840                           postinc2	equ	0xFDE
  4841                           postdec2	equ	0xFDD
  4842                           fsr2h	equ	0xFDA
  4843                           fsr2l	equ	0xFD9
  4844                           status	equ	0xFD8
  4845                           
  4846 ;; *************** function _init_i2c *****************
  4847 ;; Defined at:
  4848 ;;		line 268 in file "src/my_i2c.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  4851 ;;		 -> main@ic(28), 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4863 ;;      Params:         0       2       0       0       0
  4864 ;;      Locals:         0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0
  4866 ;;      Totals:         0       2       0       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:   10
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text23
  4878  0018B4                     __ptext23:
  4879                           	opt stack 0
  4880  0018B4                     _init_i2c:
  4881                           	opt stack 19
  4882                           
  4883                           ;my_i2c.c: 269: ic_ptr = ic;
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;incstack = 0
  4887  0018B4  0100               	movlb	0	; () banked
  4888  0018B6  C09E  F0CF         	movff	init_i2c@ic+1,_ic_ptr+1
  4889  0018BA  0100               	movlb	0	; () banked
  4890  0018BC  C09D  F0CE         	movff	init_i2c@ic,_ic_ptr
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  4894  0018C0  0100               	movlb	0	; () banked
  4895  0018C2  EE20 F00A          	lfsr	2,10
  4896  0018C6  0100               	movlb	0	; () banked
  4897  0018C8  51CE               	movf	_ic_ptr& (0+255),w,b
  4898  0018CA  26D9               	addwf	fsr2l,f,c
  4899  0018CC  0100               	movlb	0	; () banked
  4900  0018CE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4901  0018D0  22DA               	addwfc	fsr2h,f,c
  4902  0018D2  0E00               	movlw	0
  4903  0018D4  6EDF               	movwf	indf2,c
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  4907  0018D6  0100               	movlb	0	; () banked
  4908  0018D8  EE20 F00B          	lfsr	2,11
  4909  0018DC  0100               	movlb	0	; () banked
  4910  0018DE  51CE               	movf	_ic_ptr& (0+255),w,b
  4911  0018E0  26D9               	addwf	fsr2l,f,c
  4912  0018E2  0100               	movlb	0	; () banked
  4913  0018E4  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4914  0018E6  22DA               	addwfc	fsr2h,f,c
  4915  0018E8  0E00               	movlw	0
  4916  0018EA  6EDF               	movwf	indf2,c
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  4920  0018EC  0100               	movlb	0	; () banked
  4921  0018EE  EE20 F00C          	lfsr	2,12
  4922  0018F2  0100               	movlb	0	; () banked
  4923  0018F4  51CE               	movf	_ic_ptr& (0+255),w,b
  4924  0018F6  26D9               	addwf	fsr2l,f,c
  4925  0018F8  0100               	movlb	0	; () banked
  4926  0018FA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4927  0018FC  22DA               	addwfc	fsr2h,f,c
  4928  0018FE  0E05               	movlw	5
  4929  001900  6EDF               	movwf	indf2,c
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  4933  001902  0100               	movlb	0	; () banked
  4934  001904  EE20 F00E          	lfsr	2,14
  4935  001908  0100               	movlb	0	; () banked
  4936  00190A  51CE               	movf	_ic_ptr& (0+255),w,b
  4937  00190C  26D9               	addwf	fsr2l,f,c
  4938  00190E  0100               	movlb	0	; () banked
  4939  001910  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4940  001912  22DA               	addwfc	fsr2h,f,c
  4941  001914  0E00               	movlw	0
  4942  001916  6EDF               	movwf	indf2,c
  4943                           
  4944                           ; BSR set to: 0
  4945  001918  0012               	return	
  4946  00191A                     __end_of_init_i2c:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           postdec1	equ	0xFE5
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           indf2	equ	0xFDF
  4961                           postinc2	equ	0xFDE
  4962                           postdec2	equ	0xFDD
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8
  4966                           
  4967 ;; *************** function _i2c_configure_slave *****************
  4968 ;; Defined at:
  4969 ;;		line 279 in file "src/my_i2c.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  addr            1    wreg     unsigned char 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  addr            1   29[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4983 ;;      Params:         0       0       0       0       0
  4984 ;;      Locals:         0       1       0       0       0
  4985 ;;      Temps:          0       0       0       0       0
  4986 ;;      Totals:         0       1       0       0       0
  4987 ;;Total ram usage:        1 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:   10
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text24
  4998  001F1E                     __ptext24:
  4999                           	opt stack 0
  5000  001F1E                     _i2c_configure_slave:
  5001                           	opt stack 19
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;incstack = 0
  5005                           ;i2c_configure_slave@addr stored from wreg
  5006  001F1E  0100               	movlb	0	; () banked
  5007  001F20  6F9D               	movwf	i2c_configure_slave@addr& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  5011  001F22  8694               	bsf	3988,3,c	;volatile
  5012                           
  5013                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  5014  001F24  8894               	bsf	3988,4,c	;volatile
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;my_i2c.c: 297: SSPADD = addr;
  5018  001F26  C09D  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  5022  001F2A  0E00               	movlw	0
  5023  001F2C  6EC7               	movwf	4039,c	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  5027  001F2E  0E00               	movlw	0
  5028  001F30  6EC6               	movwf	4038,c	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  5032  001F32  0E00               	movlw	0
  5033  001F34  6EC5               	movwf	4037,c	;volatile
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  5037  001F36  0E0E               	movlw	14
  5038  001F38  12C6               	iorwf	4038,f,c	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  5042  001F3A  8EC7               	bsf	4039,7,c	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  5046  001F3C  8694               	bsf	3988,3,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  5050  001F3E  8894               	bsf	3988,4,c	;volatile
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  5054  001F40  80C5               	bsf	4037,0,c	;volatile
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  5058  001F42  8AC6               	bsf	4038,5,c	;volatile
  5059                           
  5060                           ; BSR set to: 0
  5061  001F44  0012               	return	
  5062  001F46                     __end_of_i2c_configure_slave:
  5063                           	opt stack 0
  5064                           tblptru	equ	0xFF8
  5065                           tblptrh	equ	0xFF7
  5066                           tblptrl	equ	0xFF6
  5067                           tablat	equ	0xFF5
  5068                           prodh	equ	0xFF4
  5069                           prodl	equ	0xFF3
  5070                           postinc0	equ	0xFEE
  5071                           wreg	equ	0xFE8
  5072                           indf1	equ	0xFE7
  5073                           postdec1	equ	0xFE5
  5074                           fsr1h	equ	0xFE2
  5075                           fsr1l	equ	0xFE1
  5076                           indf2	equ	0xFDF
  5077                           postinc2	equ	0xFDE
  5078                           postdec2	equ	0xFDD
  5079                           fsr2h	equ	0xFDA
  5080                           fsr2l	equ	0xFD9
  5081                           status	equ	0xFD8
  5082                           
  5083 ;; *************** function _enable_interrupts *****************
  5084 ;; Defined at:
  5085 ;;		line 15 in file "src/interrupts.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;		None               void
  5092 ;; Registers used:
  5093 ;;		None
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5099 ;;      Params:         0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0
  5102 ;;      Totals:         0       0       0       0       0
  5103 ;;Total ram usage:        0 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:   10
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text25
  5114  00208E                     __ptext25:
  5115                           	opt stack 0
  5116  00208E                     _enable_interrupts:
  5117                           	opt stack 19
  5118                           
  5119                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;incstack = 0
  5123  00208E  8ED0               	bsf	4048,7,c	;volatile
  5124                           
  5125                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  5126  002090  8EF2               	bsf	intcon,7,c	;volatile
  5127                           
  5128                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  5129  002092  8CF2               	bsf	intcon,6,c	;volatile
  5130  002094  0012               	return	
  5131  002096                     __end_of_enable_interrupts:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           intcon	equ	0xFF2
  5140                           postinc0	equ	0xFEE
  5141                           wreg	equ	0xFE8
  5142                           indf1	equ	0xFE7
  5143                           postdec1	equ	0xFE5
  5144                           fsr1h	equ	0xFE2
  5145                           fsr1l	equ	0xFE1
  5146                           indf2	equ	0xFDF
  5147                           postinc2	equ	0xFDE
  5148                           postdec2	equ	0xFDD
  5149                           fsr2h	equ	0xFDA
  5150                           fsr2l	equ	0xFD9
  5151                           status	equ	0xFD8
  5152                           
  5153 ;; *************** function _block_on_To_msgqueues *****************
  5154 ;; Defined at:
  5155 ;;		line 256 in file "src/messages.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;		None               void
  5162 ;; Registers used:
  5163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5169 ;;      Params:         0       0       0       0       0
  5170 ;;      Locals:         0       0       0       0       0
  5171 ;;      Temps:          0       0       0       0       0
  5172 ;;      Totals:         0       0       0       0       0
  5173 ;;Total ram usage:        0 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:   13
  5176 ;; This function calls:
  5177 ;;		_Delay1KTCYx
  5178 ;;		_check_msg
  5179 ;;		_in_main
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text26
  5186  0019DE                     __ptext26:
  5187                           	opt stack 0
  5188  0019DE                     _block_on_To_msgqueues:
  5189                           	opt stack 16
  5190                           
  5191                           ;messages.c: 257: if (!in_main()) {
  5192                           
  5193                           ;incstack = 0
  5194  0019DE  EC98  F00E         	call	_in_main	;wreg free
  5195  0019E2  0100               	movlb	0	; () banked
  5196  0019E4  51A2               	movf	(?_in_main+1)& (0+255),w,b
  5197  0019E6  0100               	movlb	0	; () banked
  5198  0019E8  11A1               	iorwf	?_in_main& (0+255),w,b
  5199  0019EA  B4D8               	btfsc	status,2,c
  5200  0019EC  0012               	return	
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;messages.c: 259: }
  5204                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  5205                           
  5206                           ; BSR set to: 0
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;messages.c: 258: return;
  5210  0019EE  0E01               	movlw	1
  5211  0019F0  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  5212  0019F2                     l3106:
  5213                           
  5214                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  5215  0019F2  0101               	movlb	1	; () banked
  5216  0019F4  0E01               	movlw	high _ToMainHigh_MQ
  5217  0019F6  0100               	movlb	0	; () banked
  5218  0019F8  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  5219  0019FA  0101               	movlb	1	; () banked
  5220  0019FC  0E02               	movlw	low _ToMainHigh_MQ
  5221  0019FE  0100               	movlb	0	; () banked
  5222  001A00  6F9D               	movwf	check_msg@qptr& (0+255),b
  5223  001A02  ECEC  F00E         	call	_check_msg	;wreg free
  5224  001A06  0900               	iorlw	0
  5225  001A08  B4D8               	btfsc	status,2,c
  5226  001A0A  D003               	goto	l3112
  5227                           
  5228                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  5229  001A0C  0E00               	movlw	0
  5230  001A0E  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  5231  001A10  0012               	return	
  5232  001A12                     l3112:
  5233                           
  5234                           ;messages.c: 271: }
  5235                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  5236  001A12  0101               	movlb	1	; () banked
  5237  001A14  0E01               	movlw	high _ToMainLow_MQ
  5238  001A16  0100               	movlb	0	; () banked
  5239  001A18  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  5240  001A1A  0101               	movlb	1	; () banked
  5241  001A1C  0E38               	movlw	low _ToMainLow_MQ
  5242  001A1E  0100               	movlb	0	; () banked
  5243  001A20  6F9D               	movwf	check_msg@qptr& (0+255),b
  5244  001A22  ECEC  F00E         	call	_check_msg	;wreg free
  5245  001A26  0900               	iorlw	0
  5246  001A28  B4D8               	btfsc	status,2,c
  5247  001A2A  D003               	goto	l3118
  5248                           
  5249                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  5250  001A2C  0E00               	movlw	0
  5251  001A2E  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  5252  001A30  0012               	return	
  5253  001A32                     l3118:
  5254                           
  5255                           ;messages.c: 278: }
  5256                           ;messages.c: 279: Delay1KTCYx(10);
  5257  001A32  0E0A               	movlw	10
  5258  001A34  EC1D  F010         	call	_Delay1KTCYx
  5259  001A38  D7DC               	goto	l3106
  5260  001A3A                     __end_of_block_on_To_msgqueues:
  5261                           	opt stack 0
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           indf1	equ	0xFE7
  5272                           postdec1	equ	0xFE5
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           fsr2h	equ	0xFDA
  5279                           fsr2l	equ	0xFD9
  5280                           status	equ	0xFD8
  5281                           
  5282 ;; *************** function _in_main *****************
  5283 ;; Defined at:
  5284 ;;		line 41 in file "src/interrupts.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  2   33[BANK0 ] int 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5298 ;;      Params:         0       2       0       0       0
  5299 ;;      Locals:         0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0
  5301 ;;      Totals:         0       2       0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:   12
  5305 ;; This function calls:
  5306 ;;		_in_high_int
  5307 ;;		_in_low_int
  5308 ;; This function is called by:
  5309 ;;		_block_on_To_msgqueues
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text27
  5314  001D30                     __ptext27:
  5315                           	opt stack 0
  5316  001D30                     _in_main:
  5317                           	opt stack 16
  5318                           
  5319                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  5320                           
  5321                           ;incstack = 0
  5322  001D30  EC79  F00E         	call	_in_low_int	;wreg free
  5323  001D34  0100               	movlb	0	; () banked
  5324  001D36  51A0               	movf	(?_in_low_int+1)& (0+255),w,b
  5325  001D38  0100               	movlb	0	; () banked
  5326  001D3A  119F               	iorwf	?_in_low_int& (0+255),w,b
  5327  001D3C  A4D8               	btfss	status,2,c
  5328  001D3E  D00F               	goto	l2504
  5329                           
  5330                           ; BSR set to: 0
  5331  001D40  EC39  F010         	call	_in_high_int	;wreg free
  5332  001D44  0100               	movlb	0	; () banked
  5333  001D46  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  5334  001D48  0100               	movlb	0	; () banked
  5335  001D4A  119D               	iorwf	?_in_high_int& (0+255),w,b
  5336  001D4C  A4D8               	btfss	status,2,c
  5337  001D4E  D007               	goto	l2504
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;interrupts.c: 43: return (1);
  5341  001D50  0E00               	movlw	0
  5342  001D52  0100               	movlb	0	; () banked
  5343  001D54  6FA2               	movwf	(?_in_main+1)& (0+255),b
  5344  001D56  0E01               	movlw	1
  5345  001D58  0100               	movlb	0	; () banked
  5346  001D5A  6FA1               	movwf	?_in_main& (0+255),b
  5347  001D5C  0012               	return	
  5348  001D5E                     l2504:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;interrupts.c: 45: return (0);
  5352  001D5E  0E00               	movlw	0
  5353  001D60  0100               	movlb	0	; () banked
  5354  001D62  6FA2               	movwf	(?_in_main+1)& (0+255),b
  5355  001D64  0E00               	movlw	0
  5356  001D66  0100               	movlb	0	; () banked
  5357  001D68  6FA1               	movwf	?_in_main& (0+255),b
  5358  001D6A  0012               	return	
  5359  001D6C                     __end_of_in_main:
  5360                           	opt stack 0
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           intcon	equ	0xFF2
  5368                           postinc0	equ	0xFEE
  5369                           wreg	equ	0xFE8
  5370                           indf1	equ	0xFE7
  5371                           postdec1	equ	0xFE5
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           indf2	equ	0xFDF
  5375                           postinc2	equ	0xFDE
  5376                           postdec2	equ	0xFDD
  5377                           fsr2h	equ	0xFDA
  5378                           fsr2l	equ	0xFD9
  5379                           status	equ	0xFD8
  5380                           
  5381 ;; *************** function _in_low_int *****************
  5382 ;; Defined at:
  5383 ;;		line 31 in file "src/interrupts.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2   31[BANK0 ] int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5397 ;;      Params:         0       2       0       0       0
  5398 ;;      Locals:         0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0
  5400 ;;      Totals:         0       2       0       0       0
  5401 ;;Total ram usage:        2 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:   11
  5404 ;; This function calls:
  5405 ;;		_in_high_int
  5406 ;; This function is called by:
  5407 ;;		_in_main
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text28
  5412  001CF2                     __ptext28:
  5413                           	opt stack 0
  5414  001CF2                     _in_low_int:
  5415                           	opt stack 16
  5416                           
  5417                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;incstack = 0
  5421  001CF2  ACF2               	btfss	intcon,6,c	;volatile
  5422  001CF4  D007               	goto	l2394
  5423                           
  5424                           ;interrupts.c: 33: return (0);
  5425  001CF6  0E00               	movlw	0
  5426  001CF8  0100               	movlb	0	; () banked
  5427  001CFA  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  5428  001CFC  0E00               	movlw	0
  5429  001CFE  0100               	movlb	0	; () banked
  5430  001D00  6F9F               	movwf	?_in_low_int& (0+255),b
  5431  001D02  0012               	return	
  5432  001D04                     l2394:
  5433  001D04  EC39  F010         	call	_in_high_int	;wreg free
  5434  001D08  0100               	movlb	0	; () banked
  5435  001D0A  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  5436  001D0C  0100               	movlb	0	; () banked
  5437  001D0E  119D               	iorwf	?_in_high_int& (0+255),w,b
  5438  001D10  B4D8               	btfsc	status,2,c
  5439  001D12  D007               	goto	l2402
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;interrupts.c: 35: return (0);
  5443  001D14  0E00               	movlw	0
  5444  001D16  0100               	movlb	0	; () banked
  5445  001D18  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  5446  001D1A  0E00               	movlw	0
  5447  001D1C  0100               	movlb	0	; () banked
  5448  001D1E  6F9F               	movwf	?_in_low_int& (0+255),b
  5449  001D20  0012               	return	
  5450  001D22                     l2402:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;interrupts.c: 37: return (1);
  5454  001D22  0E00               	movlw	0
  5455  001D24  0100               	movlb	0	; () banked
  5456  001D26  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  5457  001D28  0E01               	movlw	1
  5458  001D2A  0100               	movlb	0	; () banked
  5459  001D2C  6F9F               	movwf	?_in_low_int& (0+255),b
  5460  001D2E  0012               	return	
  5461  001D30                     __end_of_in_low_int:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           prodh	equ	0xFF4
  5468                           prodl	equ	0xFF3
  5469                           intcon	equ	0xFF2
  5470                           postinc0	equ	0xFEE
  5471                           wreg	equ	0xFE8
  5472                           indf1	equ	0xFE7
  5473                           postdec1	equ	0xFE5
  5474                           fsr1h	equ	0xFE2
  5475                           fsr1l	equ	0xFE1
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           fsr2h	equ	0xFDA
  5480                           fsr2l	equ	0xFD9
  5481                           status	equ	0xFD8
  5482                           
  5483 ;; *************** function _in_high_int *****************
  5484 ;; Defined at:
  5485 ;;		line 23 in file "src/interrupts.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;		None
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  2   29[BANK0 ] int 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5499 ;;      Params:         0       2       0       0       0
  5500 ;;      Locals:         0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0
  5502 ;;      Totals:         0       2       0       0       0
  5503 ;;Total ram usage:        2 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:   10
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_in_low_int
  5510 ;;		_in_main
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text29
  5515  002072                     __ptext29:
  5516                           	opt stack 0
  5517  002072                     _in_high_int:
  5518                           	opt stack 16
  5519                           
  5520                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;incstack = 0
  5524  002072  0E00               	movlw	0
  5525  002074  AEF2               	btfss	intcon,7,c	;volatile
  5526  002076  0E01               	movlw	1
  5527  002078  0100               	movlb	0	; () banked
  5528  00207A  6F9D               	movwf	?_in_high_int& (0+255),b
  5529  00207C  0100               	movlb	0	; () banked
  5530  00207E  6B9E               	clrf	(?_in_high_int+1)& (0+255),b
  5531  002080  0012               	return	
  5532  002082                     __end_of_in_high_int:
  5533                           	opt stack 0
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           postinc0	equ	0xFEE
  5542                           wreg	equ	0xFE8
  5543                           indf1	equ	0xFE7
  5544                           postdec1	equ	0xFE5
  5545                           fsr1h	equ	0xFE2
  5546                           fsr1l	equ	0xFE1
  5547                           indf2	equ	0xFDF
  5548                           postinc2	equ	0xFDE
  5549                           postdec2	equ	0xFDD
  5550                           fsr2h	equ	0xFDA
  5551                           fsr2l	equ	0xFD9
  5552                           status	equ	0xFD8
  5553                           
  5554 ;; *************** function _check_msg *****************
  5555 ;; Defined at:
  5556 ;;		line 220 in file "src/messages.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  5559 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      unsigned char 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5571 ;;      Params:         0       2       0       0       0
  5572 ;;      Locals:         0       0       0       0       0
  5573 ;;      Temps:          0       1       0       0       0
  5574 ;;      Totals:         0       3       0       0       0
  5575 ;;Total ram usage:        3 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:   10
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_block_on_To_msgqueues
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text30
  5586  001DD8                     __ptext30:
  5587                           	opt stack 0
  5588  001DD8                     _check_msg:
  5589                           	opt stack 18
  5590                           
  5591                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;incstack = 0
  5595  001DD8  0100               	movlb	0	; () banked
  5596  001DDA  EE20 F035          	lfsr	2,53
  5597  001DDE  0100               	movlb	0	; () banked
  5598  001DE0  519D               	movf	check_msg@qptr& (0+255),w,b
  5599  001DE2  26D9               	addwf	fsr2l,f,c
  5600  001DE4  0100               	movlb	0	; () banked
  5601  001DE6  519E               	movf	(check_msg@qptr+1)& (0+255),w,b
  5602  001DE8  22DA               	addwfc	fsr2h,f,c
  5603  001DEA  50DF               	movf	indf2,w,c
  5604  001DEC  0100               	movlb	0	; () banked
  5605  001DEE  6F9F               	movwf	??_check_msg& (0+255),b
  5606  001DF0  0100               	movlb	0	; () banked
  5607  001DF2  519F               	movf	??_check_msg& (0+255),w,b
  5608  001DF4  0D0D               	mullw	13
  5609  001DF6  50F3               	movf	prodl,w,c
  5610  001DF8  0100               	movlb	0	; () banked
  5611  001DFA  259D               	addwf	check_msg@qptr& (0+255),w,b
  5612  001DFC  6ED9               	movwf	fsr2l,c
  5613  001DFE  50F4               	movf	prodh,w,c
  5614  001E00  0100               	movlb	0	; () banked
  5615  001E02  219E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  5616  001E04  6EDA               	movwf	fsr2h,c
  5617  001E06  50DF               	movf	indf2,w,c
  5618  001E08  0012               	return	
  5619  001E0A                     __end_of_check_msg:
  5620                           	opt stack 0
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           intcon	equ	0xFF2
  5628                           postinc0	equ	0xFEE
  5629                           wreg	equ	0xFE8
  5630                           indf1	equ	0xFE7
  5631                           postdec1	equ	0xFE5
  5632                           fsr1h	equ	0xFE2
  5633                           fsr1l	equ	0xFE1
  5634                           indf2	equ	0xFDF
  5635                           postinc2	equ	0xFDE
  5636                           postdec2	equ	0xFDD
  5637                           fsr2h	equ	0xFDA
  5638                           fsr2l	equ	0xFD9
  5639                           status	equ	0xFD8
  5640                           
  5641 ;; *************** function _Delay1KTCYx *****************
  5642 ;; Defined at:
  5643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  unit            1    wreg     unsigned char 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  unit            1   29[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;		None               void
  5650 ;; Registers used:
  5651 ;;		wreg
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5657 ;;      Params:         0       0       0       0       0
  5658 ;;      Locals:         0       1       0       0       0
  5659 ;;      Temps:          0       0       0       0       0
  5660 ;;      Totals:         0       1       0       0       0
  5661 ;;Total ram usage:        1 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:   10
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_block_on_To_msgqueues
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text31
  5672  00203A                     __ptext31:
  5673                           	opt stack 0
  5674  00203A                     _Delay1KTCYx:
  5675                           	opt stack 18
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;incstack = 0
  5679                           ;Delay1KTCYx@unit stored from wreg
  5680  00203A  0100               	movlb	0	; () banked
  5681  00203C  6F9D               	movwf	Delay1KTCYx@unit& (0+255),b
  5682  00203E                     l839:
  5683                           
  5684                           ; BSR set to: 0
  5685                           
  5686                           ; BSR set to: 0
  5687  00203E  0EFA               	movlw	250
  5688  002040                     u2447:
  5689  002040  F000               	nop	
  5690  002042  2EE8               	decfsz	wreg,f,c
  5691  002044  D7FD               	goto	u2447
  5692  002046  0100               	movlb	0	; () banked
  5693  002048  2F9D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  5694  00204A  D7F9               	goto	l839
  5695  00204C  0012               	return	
  5696  00204E                     __end_of_Delay1KTCYx:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           indf1	equ	0xFE7
  5708                           postdec1	equ	0xFE5
  5709                           fsr1h	equ	0xFE2
  5710                           fsr1l	equ	0xFE1
  5711                           indf2	equ	0xFDF
  5712                           postinc2	equ	0xFDE
  5713                           postdec2	equ	0xFDD
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _ToMainLow_recvmsg *****************
  5719 ;; Defined at:
  5720 ;;		line 112 in file "src/messages.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  maxlength       1    wreg     unsigned char 
  5723 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  5724 ;;		 -> main@msgtype(1), 
  5725 ;;  data            2   55[BANK0 ] PTR void 
  5726 ;;		 -> main@msgbuffer(11), 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  maxlength       1   57[BANK0 ] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      char 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5738 ;;      Params:         0       4       0       0       0
  5739 ;;      Locals:         0       1       0       0       0
  5740 ;;      Temps:          0       0       0       0       0
  5741 ;;      Totals:         0       5       0       0       0
  5742 ;;Total ram usage:        5 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:   12
  5745 ;; This function calls:
  5746 ;;		_recv_msg
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text32
  5753  001D6C                     __ptext32:
  5754                           	opt stack 0
  5755  001D6C                     _ToMainLow_recvmsg:
  5756                           	opt stack 17
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;incstack = 0
  5760                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5761  001D6C  0100               	movlb	0	; () banked
  5762  001D6E  6FB9               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5766  001D70  0101               	movlb	1	; () banked
  5767  001D72  0E01               	movlw	high _ToMainLow_MQ
  5768  001D74  0100               	movlb	0	; () banked
  5769  001D76  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  5770  001D78  0101               	movlb	1	; () banked
  5771  001D7A  0E38               	movlw	low _ToMainLow_MQ
  5772  001D7C  0100               	movlb	0	; () banked
  5773  001D7E  6FA7               	movwf	recv_msg@qptr& (0+255),b
  5774  001D80  C0B9  F0A9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5775  001D84  0100               	movlb	0	; () banked
  5776  001D86  C0B6  F0AB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5777  001D8A  0100               	movlb	0	; () banked
  5778  001D8C  C0B5  F0AA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5779  001D90  0100               	movlb	0	; () banked
  5780  001D92  C0B8  F0AD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5781  001D96  0100               	movlb	0	; () banked
  5782  001D98  C0B7  F0AC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5783  001D9C  EC46  F005         	call	_recv_msg	;wreg free
  5784  001DA0  0012               	return	
  5785  001DA2                     __end_of_ToMainLow_recvmsg:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           prodh	equ	0xFF4
  5792                           prodl	equ	0xFF3
  5793                           intcon	equ	0xFF2
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           indf1	equ	0xFE7
  5797                           postdec1	equ	0xFE5
  5798                           fsr1h	equ	0xFE2
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _ToMainHigh_recvmsg *****************
  5808 ;; Defined at:
  5809 ;;		line 135 in file "src/messages.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  maxlength       1    wreg     unsigned char 
  5812 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  5813 ;;		 -> main@msgtype(1), 
  5814 ;;  data            2   55[BANK0 ] PTR void 
  5815 ;;		 -> main@msgbuffer(11), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  maxlength       1   57[BANK0 ] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      char 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5827 ;;      Params:         0       4       0       0       0
  5828 ;;      Locals:         0       1       0       0       0
  5829 ;;      Temps:          0       0       0       0       0
  5830 ;;      Totals:         0       5       0       0       0
  5831 ;;Total ram usage:        5 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:   12
  5834 ;; This function calls:
  5835 ;;		_recv_msg
  5836 ;; This function is called by:
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text33
  5842  001DA2                     __ptext33:
  5843                           	opt stack 0
  5844  001DA2                     _ToMainHigh_recvmsg:
  5845                           	opt stack 17
  5846                           
  5847                           ;incstack = 0
  5848                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5849  001DA2  0100               	movlb	0	; () banked
  5850  001DA4  6FB9               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5854  001DA6  0101               	movlb	1	; () banked
  5855  001DA8  0E01               	movlw	high _ToMainHigh_MQ
  5856  001DAA  0100               	movlb	0	; () banked
  5857  001DAC  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  5858  001DAE  0101               	movlb	1	; () banked
  5859  001DB0  0E02               	movlw	low _ToMainHigh_MQ
  5860  001DB2  0100               	movlb	0	; () banked
  5861  001DB4  6FA7               	movwf	recv_msg@qptr& (0+255),b
  5862  001DB6  C0B9  F0A9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5863  001DBA  0100               	movlb	0	; () banked
  5864  001DBC  C0B6  F0AB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5865  001DC0  0100               	movlb	0	; () banked
  5866  001DC2  C0B5  F0AA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5867  001DC6  0100               	movlb	0	; () banked
  5868  001DC8  C0B8  F0AD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5869  001DCC  0100               	movlb	0	; () banked
  5870  001DCE  C0B7  F0AC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5871  001DD2  EC46  F005         	call	_recv_msg	;wreg free
  5872  001DD6  0012               	return	
  5873  001DD8                     __end_of_ToMainHigh_recvmsg:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           wreg	equ	0xFE8
  5884                           indf1	equ	0xFE7
  5885                           postdec1	equ	0xFE5
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function _recv_msg *****************
  5896 ;; Defined at:
  5897 ;;		line 63 in file "src/messages.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  5900 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5901 ;;  maxlength       1   41[BANK0 ] unsigned char 
  5902 ;;  msgtype         2   42[BANK0 ] PTR unsigned char 
  5903 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5904 ;;  data            2   44[BANK0 ] PTR void 
  5905 ;;		 -> main@msgbuffer(11), NULL(0), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  qmsg            2   51[BANK0 ] PTR struct __msg
  5908 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5909 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5910 ;;  tlength         2   49[BANK0 ] unsigned int 
  5911 ;;  slot            1   48[BANK0 ] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      char 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5921 ;;      Params:         0       7       0       0       0
  5922 ;;      Locals:         0       5       0       0       0
  5923 ;;      Temps:          0       2       0       0       0
  5924 ;;      Totals:         0      14       0       0       0
  5925 ;;Total ram usage:       14 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   11
  5928 ;; This function calls:
  5929 ;;		_memcpy
  5930 ;; This function is called by:
  5931 ;;		_ToMainLow_recvmsg
  5932 ;;		_ToMainHigh_recvmsg
  5933 ;;		_FromMainHigh_recvmsg
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text34
  5938  000A8C                     __ptext34:
  5939                           	opt stack 0
  5940  000A8C                     _recv_msg:
  5941                           	opt stack 17
  5942                           
  5943                           ;messages.c: 64: unsigned char slot;
  5944                           ;messages.c: 68: msg *qmsg;
  5945                           ;messages.c: 69: size_t tlength;
  5946                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5947                           
  5948                           ;incstack = 0
  5949  000A8C  0100               	movlb	0	; () banked
  5950  000A8E  EE20 F035          	lfsr	2,53
  5951  000A92  0100               	movlb	0	; () banked
  5952  000A94  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5953  000A96  26D9               	addwf	fsr2l,f,c
  5954  000A98  0100               	movlb	0	; () banked
  5955  000A9A  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5956  000A9C  22DA               	addwfc	fsr2h,f,c
  5957  000A9E  50DF               	movf	indf2,w,c
  5958  000AA0  0100               	movlb	0	; () banked
  5959  000AA2  6FB0               	movwf	recv_msg@slot& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5963  000AA4  0100               	movlb	0	; () banked
  5964  000AA6  51B0               	movf	recv_msg@slot& (0+255),w,b
  5965  000AA8  0D0D               	mullw	13
  5966  000AAA  50F3               	movf	prodl,w,c
  5967  000AAC  0100               	movlb	0	; () banked
  5968  000AAE  25A7               	addwf	recv_msg@qptr& (0+255),w,b
  5969  000AB0  0100               	movlb	0	; () banked
  5970  000AB2  6FB3               	movwf	recv_msg@qmsg& (0+255),b
  5971  000AB4  50F4               	movf	prodh,w,c
  5972  000AB6  0100               	movlb	0	; () banked
  5973  000AB8  21A8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5974  000ABA  0100               	movlb	0	; () banked
  5975  000ABC  6FB4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;messages.c: 74: if (qmsg->full == 1) {
  5979  000ABE  0E01               	movlw	1
  5980  000AC0  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  5981  000AC4  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5982  000AC8  62DF               	cpfseq	indf2,c
  5983  000ACA  D06D               	goto	l2554
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5987  000ACC  0100               	movlb	0	; () banked
  5988  000ACE  EE20 F001          	lfsr	2,1
  5989  000AD2  0100               	movlb	0	; () banked
  5990  000AD4  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5991  000AD6  26D9               	addwf	fsr2l,f,c
  5992  000AD8  0100               	movlb	0	; () banked
  5993  000ADA  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5994  000ADC  22DA               	addwfc	fsr2h,f,c
  5995  000ADE  50DF               	movf	indf2,w,c
  5996  000AE0  0100               	movlb	0	; () banked
  5997  000AE2  5DA9               	subwf	recv_msg@maxlength& (0+255),w,b
  5998  000AE4  B0D8               	btfsc	status,0,c
  5999  000AE6  D002               	goto	l2538
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;messages.c: 77: return (-3);
  6003  000AE8  0EFD               	movlw	253
  6004  000AEA  0012               	return	
  6005  000AEC                     l2538:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;messages.c: 78: }
  6009                           ;messages.c: 80: tlength = qmsg->length;
  6010  000AEC  0100               	movlb	0	; () banked
  6011  000AEE  EE20 F001          	lfsr	2,1
  6012  000AF2  0100               	movlb	0	; () banked
  6013  000AF4  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  6014  000AF6  26D9               	addwf	fsr2l,f,c
  6015  000AF8  0100               	movlb	0	; () banked
  6016  000AFA  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  6017  000AFC  22DA               	addwfc	fsr2h,f,c
  6018  000AFE  50DF               	movf	indf2,w,c
  6019  000B00  0100               	movlb	0	; () banked
  6020  000B02  6FAE               	movwf	??_recv_msg& (0+255),b
  6021  000B04  0100               	movlb	0	; () banked
  6022  000B06  51AE               	movf	??_recv_msg& (0+255),w,b
  6023  000B08  0100               	movlb	0	; () banked
  6024  000B0A  6FB1               	movwf	recv_msg@tlength& (0+255),b
  6025  000B0C  0100               	movlb	0	; () banked
  6026  000B0E  6BB2               	clrf	(recv_msg@tlength+1)& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6030  000B10  0100               	movlb	0	; () banked
  6031  000B12  C0AD  F09E         	movff	recv_msg@data+1,memcpy@d1+1
  6032  000B16  0100               	movlb	0	; () banked
  6033  000B18  C0AC  F09D         	movff	recv_msg@data,memcpy@d1
  6034  000B1C  0E03               	movlw	3
  6035  000B1E  0100               	movlb	0	; () banked
  6036  000B20  25B3               	addwf	recv_msg@qmsg& (0+255),w,b
  6037  000B22  0100               	movlb	0	; () banked
  6038  000B24  6FAE               	movwf	??_recv_msg& (0+255),b
  6039  000B26  0E00               	movlw	0
  6040  000B28  0100               	movlb	0	; () banked
  6041  000B2A  21B4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  6042  000B2C  0100               	movlb	0	; () banked
  6043  000B2E  6FAF               	movwf	(??_recv_msg+1)& (0+255),b
  6044  000B30  C0AE  F09F         	movff	??_recv_msg,memcpy@s1
  6045  000B34  C0AF  F0A0         	movff	??_recv_msg+1,memcpy@s1+1
  6046  000B38  C0B1  F0A1         	movff	recv_msg@tlength,memcpy@n
  6047  000B3C  C0B2  F0A2         	movff	recv_msg@tlength+1,memcpy@n+1
  6048  000B40  ECCA  F00D         	call	_memcpy	;wreg free
  6049                           
  6050                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6051  000B44  0100               	movlb	0	; () banked
  6052  000B46  EE20 F035          	lfsr	2,53
  6053  000B4A  0100               	movlb	0	; () banked
  6054  000B4C  51A7               	movf	recv_msg@qptr& (0+255),w,b
  6055  000B4E  26D9               	addwf	fsr2l,f,c
  6056  000B50  0100               	movlb	0	; () banked
  6057  000B52  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  6058  000B54  22DA               	addwfc	fsr2h,f,c
  6059  000B56  0100               	movlb	0	; () banked
  6060  000B58  EE10 F035          	lfsr	1,53
  6061  000B5C  0100               	movlb	0	; () banked
  6062  000B5E  51A7               	movf	recv_msg@qptr& (0+255),w,b
  6063  000B60  26E1               	addwf	fsr1l,f,c
  6064  000B62  0100               	movlb	0	; () banked
  6065  000B64  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  6066  000B66  22E2               	addwfc	fsr1h,f,c
  6067  000B68  50E7               	movf	indf1,w,c
  6068  000B6A  0100               	movlb	0	; () banked
  6069  000B6C  6FAE               	movwf	??_recv_msg& (0+255),b
  6070  000B6E  0100               	movlb	0	; () banked
  6071  000B70  29AE               	incf	??_recv_msg& (0+255),w,b
  6072  000B72  0B03               	andlw	3
  6073  000B74  6EDF               	movwf	indf2,c
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6077  000B76  0100               	movlb	0	; () banked
  6078  000B78  EE20 F002          	lfsr	2,2
  6079  000B7C  0100               	movlb	0	; () banked
  6080  000B7E  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  6081  000B80  26D9               	addwf	fsr2l,f,c
  6082  000B82  0100               	movlb	0	; () banked
  6083  000B84  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  6084  000B86  22DA               	addwfc	fsr2h,f,c
  6085  000B88  C0AA  FFE1         	movff	recv_msg@msgtype,fsr1l
  6086  000B8C  C0AB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  6087  000B90  CFDF FFE7          	movff	indf2,indf1
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;messages.c: 91: qmsg->full = 0;
  6091  000B94  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  6092  000B98  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  6093  000B9C  0E00               	movlw	0
  6094  000B9E  6EDF               	movwf	indf2,c
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;messages.c: 92: return (tlength);
  6098  000BA0  0100               	movlb	0	; () banked
  6099  000BA2  51B1               	movf	recv_msg@tlength& (0+255),w,b
  6100  000BA4  0012               	return	
  6101  000BA6                     l2554:
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;messages.c: 94: return (-4);
  6105  000BA6  0EFC               	movlw	252
  6106  000BA8  0012               	return	
  6107  000BAA                     __end_of_recv_msg:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           postinc0	equ	0xFEE
  6117                           wreg	equ	0xFE8
  6118                           indf1	equ	0xFE7
  6119                           postdec1	equ	0xFE5
  6120                           fsr1h	equ	0xFE2
  6121                           fsr1l	equ	0xFE1
  6122                           indf2	equ	0xFDF
  6123                           postinc2	equ	0xFDE
  6124                           postdec2	equ	0xFDD
  6125                           fsr2h	equ	0xFDA
  6126                           fsr2l	equ	0xFD9
  6127                           status	equ	0xFD8
  6128                           
  6129 ;; *************** function _memcpy *****************
  6130 ;; Defined at:
  6131 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  d1              2   29[BANK0 ] PTR void 
  6134 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6135 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6136 ;;		 -> main@msgbuffer(11), NULL(0), 
  6137 ;;  s1              2   31[BANK0 ] PTR const void 
  6138 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6139 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6140 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6141 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6142 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6143 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6144 ;;  n               2   33[BANK0 ] unsigned int 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  6147 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6148 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6149 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6150 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6151 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6152 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6153 ;;  d               2   35[BANK0 ] PTR unsigned char 
  6154 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6155 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6156 ;;		 -> main@msgbuffer(11), NULL(0), 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  2   29[BANK0 ] PTR void 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6166 ;;      Params:         0       6       0       0       0
  6167 ;;      Locals:         0       4       0       0       0
  6168 ;;      Temps:          0       0       0       0       0
  6169 ;;      Totals:         0      10       0       0       0
  6170 ;;Total ram usage:       10 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:   10
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_send_msg
  6177 ;;		_recv_msg
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text35
  6182  001B94                     __ptext35:
  6183                           	opt stack 0
  6184  001B94                     _memcpy:
  6185                           	opt stack 16
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;incstack = 0
  6189  001B94  0100               	movlb	0	; () banked
  6190  001B96  C0A0  F0A6         	movff	memcpy@s1+1,memcpy@s+1
  6191  001B9A  0100               	movlb	0	; () banked
  6192  001B9C  C09F  F0A5         	movff	memcpy@s1,memcpy@s
  6193  001BA0  0100               	movlb	0	; () banked
  6194  001BA2  C09E  F0A4         	movff	memcpy@d1+1,memcpy@d+1
  6195  001BA6  0100               	movlb	0	; () banked
  6196  001BA8  C09D  F0A3         	movff	memcpy@d1,memcpy@d
  6197  001BAC  D010               	goto	l2336
  6198  001BAE                     l2330:
  6199                           
  6200                           ; BSR set to: 0
  6201  001BAE  C0A5  FFD9         	movff	memcpy@s,fsr2l
  6202  001BB2  C0A6  FFDA         	movff	memcpy@s+1,fsr2h
  6203  001BB6  C0A3  FFE1         	movff	memcpy@d,fsr1l
  6204  001BBA  C0A4  FFE2         	movff	memcpy@d+1,fsr1h
  6205  001BBE  CFDF FFE7          	movff	indf2,indf1
  6206                           
  6207                           ; BSR set to: 0
  6208  001BC2  0100               	movlb	0	; () banked
  6209  001BC4  4BA5               	infsnz	memcpy@s& (0+255),f,b
  6210  001BC6  2BA6               	incf	(memcpy@s+1)& (0+255),f,b
  6211                           
  6212                           ; BSR set to: 0
  6213  001BC8  0100               	movlb	0	; () banked
  6214  001BCA  4BA3               	infsnz	memcpy@d& (0+255),f,b
  6215  001BCC  2BA4               	incf	(memcpy@d+1)& (0+255),f,b
  6216  001BCE                     l2336:
  6217                           
  6218                           ; BSR set to: 0
  6219  001BCE  0100               	movlb	0	; () banked
  6220  001BD0  07A1               	decf	memcpy@n& (0+255),f,b
  6221  001BD2  A0D8               	btfss	status,0,c
  6222  001BD4  07A2               	decf	(memcpy@n+1)& (0+255),f,b
  6223  001BD6  0100               	movlb	0	; () banked
  6224  001BD8  29A1               	incf	memcpy@n& (0+255),w,b
  6225  001BDA  B4D8               	btfsc	status,2,c
  6226  001BDC  29A2               	incf	(memcpy@n+1)& (0+255),w,b
  6227  001BDE  B4D8               	btfsc	status,2,c
  6228                           
  6229                           ; BSR set to: 0
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;	Return value of _memcpy is never used
  6233  001BE0  0012               	return	
  6234  001BE2  D7E5               	goto	l2330
  6235  001BE4                     __end_of_memcpy:
  6236                           	opt stack 0
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           intcon	equ	0xFF2
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           indf1	equ	0xFE7
  6247                           postdec1	equ	0xFE5
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function _OpenUSART *****************
  6258 ;; Defined at:
  6259 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  config          1    wreg     unsigned char 
  6262 ;;  spbrg           2   29[BANK0 ] unsigned int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  config          1   34[BANK0 ] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;		None               void
  6267 ;; Registers used:
  6268 ;;		wreg, status,2
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6274 ;;      Params:         0       2       0       0       0
  6275 ;;      Locals:         0       1       0       0       0
  6276 ;;      Temps:          0       3       0       0       0
  6277 ;;      Totals:         0       6       0       0       0
  6278 ;;Total ram usage:        6 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:   10
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_main
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text36
  6289  0017BE                     __ptext36:
  6290                           	opt stack 0
  6291  0017BE                     _OpenUSART:
  6292                           	opt stack 19
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;incstack = 0
  6296                           ;OpenUSART@config stored from wreg
  6297  0017BE  0100               	movlb	0	; () banked
  6298  0017C0  6FA2               	movwf	OpenUSART@config& (0+255),b
  6299                           
  6300                           ; BSR set to: 0
  6301  0017C2  0E00               	movlw	0
  6302  0017C4  6EAC               	movwf	4012,c	;volatile
  6303  0017C6  0E00               	movlw	0
  6304  0017C8  6EAB               	movwf	4011,c	;volatile
  6305                           
  6306                           ; BSR set to: 0
  6307  0017CA  0100               	movlb	0	; () banked
  6308  0017CC  B1A2               	btfsc	OpenUSART@config& (0+255),0,b
  6309                           
  6310                           ; BSR set to: 0
  6311  0017CE  88AC               	bsf	4012,4,c	;volatile
  6312                           
  6313                           ; BSR set to: 0
  6314                           
  6315                           ; BSR set to: 0
  6316  0017D0  0100               	movlb	0	; () banked
  6317  0017D2  A3A2               	btfss	OpenUSART@config& (0+255),1,b
  6318  0017D4  D002               	goto	l2962
  6319                           
  6320                           ; BSR set to: 0
  6321  0017D6  8CAC               	bsf	4012,6,c	;volatile
  6322  0017D8  8CAB               	bsf	4011,6,c	;volatile
  6323  0017DA                     l2962:
  6324                           
  6325                           ; BSR set to: 0
  6326  0017DA  0100               	movlb	0	; () banked
  6327  0017DC  B5A2               	btfsc	OpenUSART@config& (0+255),2,b
  6328                           
  6329                           ; BSR set to: 0
  6330  0017DE  8EAC               	bsf	4012,7,c	;volatile
  6331                           
  6332                           ; BSR set to: 0
  6333                           
  6334                           ; BSR set to: 0
  6335  0017E0  0100               	movlb	0	; () banked
  6336  0017E2  A7A2               	btfss	OpenUSART@config& (0+255),3,b
  6337  0017E4  D002               	goto	l587
  6338                           
  6339                           ; BSR set to: 0
  6340  0017E6  88AB               	bsf	4011,4,c	;volatile
  6341  0017E8  D001               	goto	l2970
  6342  0017EA                     l587:
  6343                           
  6344                           ; BSR set to: 0
  6345  0017EA  8AAB               	bsf	4011,5,c	;volatile
  6346  0017EC                     l2970:
  6347                           
  6348                           ; BSR set to: 0
  6349  0017EC  0100               	movlb	0	; () banked
  6350  0017EE  B9A2               	btfsc	OpenUSART@config& (0+255),4,b
  6351                           
  6352                           ; BSR set to: 0
  6353  0017F0  84AC               	bsf	4012,2,c	;volatile
  6354                           
  6355                           ; BSR set to: 0
  6356  0017F2  989E               	bcf	3998,4,c	;volatile
  6357                           
  6358                           ; BSR set to: 0
  6359  0017F4  0100               	movlb	0	; () banked
  6360  0017F6  BBA2               	btfsc	OpenUSART@config& (0+255),5,b
  6361                           
  6362                           ; BSR set to: 0
  6363  0017F8  86AB               	bsf	4011,3,c	;volatile
  6364                           
  6365                           ; BSR set to: 0
  6366                           
  6367                           ; BSR set to: 0
  6368  0017FA  0100               	movlb	0	; () banked
  6369  0017FC  ADA2               	btfss	OpenUSART@config& (0+255),6,b
  6370  0017FE  D002               	goto	l591
  6371                           
  6372                           ; BSR set to: 0
  6373  001800  8A9D               	bsf	3997,5,c	;volatile
  6374  001802  D001               	goto	l592
  6375  001804                     l591:
  6376                           
  6377                           ; BSR set to: 0
  6378  001804  9A9D               	bcf	3997,5,c	;volatile
  6379  001806                     l592:
  6380                           
  6381                           ; BSR set to: 0
  6382  001806  9A9E               	bcf	3998,5,c	;volatile
  6383                           
  6384                           ; BSR set to: 0
  6385  001808  0100               	movlb	0	; () banked
  6386  00180A  AFA2               	btfss	OpenUSART@config& (0+255),7,b
  6387  00180C  D002               	goto	l593
  6388                           
  6389                           ; BSR set to: 0
  6390  00180E  889D               	bsf	3997,4,c	;volatile
  6391  001810  D001               	goto	l594
  6392  001812                     l593:
  6393                           
  6394                           ; BSR set to: 0
  6395  001812  989D               	bcf	3997,4,c	;volatile
  6396  001814                     l594:
  6397                           
  6398                           ; BSR set to: 0
  6399  001814  C09D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402  001818  0100               	movlb	0	; () banked
  6403  00181A  C09E  F09F         	movff	OpenUSART@spbrg+1,??_OpenUSART
  6404  00181E  C09F  F0A0         	movff	??_OpenUSART,??_OpenUSART+1
  6405  001822  0100               	movlb	0	; () banked
  6406  001824  6BA1               	clrf	(??_OpenUSART+2)& (0+255),b
  6407  001826  0100               	movlb	0	; () banked
  6408  001828  51A0               	movf	(??_OpenUSART+1)& (0+255),w,b
  6409  00182A  6EB0               	movwf	4016,c	;volatile
  6410                           
  6411                           ; BSR set to: 0
  6412  00182C  8AAC               	bsf	4012,5,c	;volatile
  6413                           
  6414                           ; BSR set to: 0
  6415  00182E  8EAB               	bsf	4011,7,c	;volatile
  6416                           
  6417                           ; BSR set to: 0
  6418  001830  9C94               	bcf	3988,6,c	;volatile
  6419                           
  6420                           ; BSR set to: 0
  6421  001832  8E94               	bsf	3988,7,c	;volatile
  6422                           
  6423                           ; BSR set to: 0
  6424  001834  A8AC               	btfss	4012,4,c	;volatile
  6425  001836  0012               	return	
  6426                           
  6427                           ; BSR set to: 0
  6428  001838  BEAC               	btfsc	4012,7,c	;volatile
  6429  00183A  0012               	return	
  6430                           
  6431                           ; BSR set to: 0
  6432  00183C  8C94               	bsf	3988,6,c	;volatile
  6433  00183E  0012               	return	
  6434  001840                     __end_of_OpenUSART:
  6435                           	opt stack 0
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           intcon	equ	0xFF2
  6443                           postinc0	equ	0xFEE
  6444                           wreg	equ	0xFE8
  6445                           indf1	equ	0xFE7
  6446                           postdec1	equ	0xFE5
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _OpenTimer1 *****************
  6457 ;; Defined at:
  6458 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  config          1    wreg     unsigned char 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  config          1   29[BANK0 ] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6472 ;;      Params:         0       0       0       0       0
  6473 ;;      Locals:         0       1       0       0       0
  6474 ;;      Temps:          0       0       0       0       0
  6475 ;;      Totals:         0       1       0       0       0
  6476 ;;Total ram usage:        1 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:   10
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text37
  6487  001E0A                     __ptext37:
  6488                           	opt stack 0
  6489  001E0A                     _OpenTimer1:
  6490                           	opt stack 19
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;incstack = 0
  6494                           ;OpenTimer1@config stored from wreg
  6495  001E0A  0100               	movlb	0	; () banked
  6496  001E0C  6F9D               	movwf	OpenTimer1@config& (0+255),b
  6497                           
  6498                           ; BSR set to: 0
  6499  001E0E  0100               	movlb	0	; () banked
  6500  001E10  519D               	movf	OpenTimer1@config& (0+255),w,b
  6501  001E12  0B7E               	andlw	126
  6502  001E14  6ECD               	movwf	4045,c	;volatile
  6503                           
  6504                           ; BSR set to: 0
  6505  001E16  0100               	movlb	0	; () banked
  6506  001E18  AD9D               	btfss	OpenTimer1@config& (0+255),6,b
  6507  001E1A  D002               	goto	l550
  6508                           
  6509                           ; BSR set to: 0
  6510  001E1C  8ECD               	bsf	4045,7,c	;volatile
  6511  001E1E  D001               	goto	l2944
  6512  001E20                     l550:
  6513                           
  6514                           ; BSR set to: 0
  6515  001E20  9ECD               	bcf	4045,7,c	;volatile
  6516  001E22                     l2944:
  6517                           
  6518                           ; BSR set to: 0
  6519  001E22  0E00               	movlw	0
  6520  001E24  6ECF               	movwf	4047,c	;volatile
  6521  001E26  0E00               	movlw	0
  6522  001E28  6ECE               	movwf	4046,c	;volatile
  6523                           
  6524                           ; BSR set to: 0
  6525  001E2A  909E               	bcf	3998,0,c	;volatile
  6526                           
  6527                           ; BSR set to: 0
  6528  001E2C  0100               	movlb	0	; () banked
  6529  001E2E  AF9D               	btfss	OpenTimer1@config& (0+255),7,b
  6530  001E30  D002               	goto	l552
  6531                           
  6532                           ; BSR set to: 0
  6533  001E32  809D               	bsf	3997,0,c	;volatile
  6534  001E34  D001               	goto	l553
  6535  001E36                     l552:
  6536                           
  6537                           ; BSR set to: 0
  6538  001E36  909D               	bcf	3997,0,c	;volatile
  6539  001E38                     l553:
  6540                           
  6541                           ; BSR set to: 0
  6542  001E38  80CD               	bsf	4045,0,c	;volatile
  6543                           
  6544                           ; BSR set to: 0
  6545  001E3A  0012               	return	
  6546  001E3C                     __end_of_OpenTimer1:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           intcon	equ	0xFF2
  6555                           postinc0	equ	0xFEE
  6556                           wreg	equ	0xFE8
  6557                           indf1	equ	0xFE7
  6558                           postdec1	equ	0xFE5
  6559                           fsr1h	equ	0xFE2
  6560                           fsr1l	equ	0xFE1
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           postdec2	equ	0xFDD
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568 ;; *************** function _OpenTimer0 *****************
  6569 ;; Defined at:
  6570 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  config          1    wreg     unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  config          1   29[BANK0 ] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;		None               void
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6584 ;;      Params:         0       0       0       0       0
  6585 ;;      Locals:         0       1       0       0       0
  6586 ;;      Temps:          0       0       0       0       0
  6587 ;;      Totals:         0       1       0       0       0
  6588 ;;Total ram usage:        1 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:   10
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text38
  6599  001F46                     __ptext38:
  6600                           	opt stack 0
  6601  001F46                     _OpenTimer0:
  6602                           	opt stack 19
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;incstack = 0
  6606                           ;OpenTimer0@config stored from wreg
  6607  001F46  0100               	movlb	0	; () banked
  6608  001F48  6F9D               	movwf	OpenTimer0@config& (0+255),b
  6609                           
  6610                           ; BSR set to: 0
  6611  001F4A  0100               	movlb	0	; () banked
  6612  001F4C  519D               	movf	OpenTimer0@config& (0+255),w,b
  6613  001F4E  0B7F               	andlw	127
  6614  001F50  6ED5               	movwf	4053,c	;volatile
  6615                           
  6616                           ; BSR set to: 0
  6617  001F52  0E00               	movlw	0
  6618  001F54  6ED7               	movwf	4055,c	;volatile
  6619                           
  6620                           ; BSR set to: 0
  6621  001F56  0E00               	movlw	0
  6622  001F58  6ED6               	movwf	4054,c	;volatile
  6623                           
  6624                           ; BSR set to: 0
  6625  001F5A  94F2               	bcf	intcon,2,c	;volatile
  6626                           
  6627                           ; BSR set to: 0
  6628  001F5C  0100               	movlb	0	; () banked
  6629  001F5E  AF9D               	btfss	OpenTimer0@config& (0+255),7,b
  6630  001F60  D002               	goto	l526
  6631                           
  6632                           ; BSR set to: 0
  6633  001F62  8AF2               	bsf	intcon,5,c	;volatile
  6634  001F64  D001               	goto	l527
  6635  001F66                     l526:
  6636                           
  6637                           ; BSR set to: 0
  6638  001F66  9AF2               	bcf	intcon,5,c	;volatile
  6639  001F68                     l527:
  6640                           
  6641                           ; BSR set to: 0
  6642  001F68  8ED5               	bsf	4053,7,c	;volatile
  6643                           
  6644                           ; BSR set to: 0
  6645  001F6A  0012               	return	
  6646  001F6C                     __end_of_OpenTimer0:
  6647                           	opt stack 0
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           postinc0	equ	0xFEE
  6656                           wreg	equ	0xFE8
  6657                           indf1	equ	0xFE7
  6658                           postdec1	equ	0xFE5
  6659                           fsr1h	equ	0xFE2
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668 ;; *************** function _InterruptHandlerLow *****************
  6669 ;; Defined at:
  6670 ;;		line 116 in file "src/interrupts.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6684 ;;      Params:         0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0
  6686 ;;      Temps:         17       0       0       0       0
  6687 ;;      Totals:        17       0       0       0       0
  6688 ;;Total ram usage:       17 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    9
  6691 ;; This function calls:
  6692 ;;		_uart_recv_int_handler
  6693 ;;		_uart_trans_int_handler
  6694 ;;		i1_ToMainLow_sendmsg
  6695 ;; This function is called by:
  6696 ;;		Interrupt level 1
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	intcodelo
  6701  000018                     __pintcodelo:
  6702                           	opt stack 0
  6703  000018                     _InterruptHandlerLow:
  6704                           	opt stack 15
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;incstack = 0
  6708  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  6709  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  6710  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  6711  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  6712  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  6713  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  6714  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  6715  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  6716  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  6717  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  6718  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  6719  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  6720  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  6721  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  6722  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  6723  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  6724  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  6725                           
  6726                           ;interrupts.c: 118: if (PIR1bits.TMR1IF) {
  6727  00005C  A09E               	btfss	3998,0,c	;volatile
  6728  00005E  D00A               	goto	i1l3222
  6729                           
  6730                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  6731  000060  909E               	bcf	3998,0,c	;volatile
  6732                           
  6733                           ;interrupts.c: 120: ToMainLow_sendmsg(0, 11, (void *)0);
  6734  000062  0E0B               	movlw	11
  6735  000064  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6736  000066  0E00               	movlw	0
  6737  000068  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6738  00006A  0E00               	movlw	0
  6739  00006C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6740  00006E  0E00               	movlw	0
  6741  000070  ECC9  F00F         	call	i1_ToMainLow_sendmsg
  6742  000074                     i1l3222:
  6743                           
  6744                           ;interrupts.c: 121: }
  6745                           ;interrupts.c: 124: if (PIR1bits.RCIF) {
  6746  000074  AA9E               	btfss	3998,5,c	;volatile
  6747  000076  D003               	goto	i1l3228
  6748                           
  6749                           ;interrupts.c: 125: PIR1bits.RCIF = 0;
  6750  000078  9A9E               	bcf	3998,5,c	;volatile
  6751                           
  6752                           ;interrupts.c: 126: uart_recv_int_handler();
  6753  00007A  EC4F  F00B         	call	_uart_recv_int_handler	;wreg free
  6754  00007E                     i1l3228:
  6755                           
  6756                           ;interrupts.c: 127: }
  6757                           ;interrupts.c: 130: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  6758  00007E  B89E               	btfsc	3998,4,c	;volatile
  6759  000080  A89D               	btfss	3997,4,c	;volatile
  6760  000082  D002               	goto	i1l52
  6761                           
  6762                           ;interrupts.c: 131: uart_trans_int_handler();
  6763  000084  EC75  F00D         	call	_uart_trans_int_handler	;wreg free
  6764  000088                     i1l52:
  6765  000088  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  6766  00008C  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  6767  000090  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  6768  000094  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  6769  000098  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  6770  00009C  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  6771  0000A0  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  6772  0000A4  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  6773  0000A8  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  6774  0000AC  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  6775  0000B0  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  6776  0000B4  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  6777  0000B8  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  6778  0000BC  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  6779  0000C0  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  6780  0000C4  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  6781  0000C8  C023  FFD8         	movff	??_InterruptHandlerLow,status
  6782  0000CC  0010               	retfie	
  6783  0000CE                     __end_of_InterruptHandlerLow:
  6784                           	opt stack 0
  6785                           pclatu	equ	0xFFB
  6786                           pclath	equ	0xFFA
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           postinc0	equ	0xFEE
  6795                           fsr0h	equ	0xFEA
  6796                           fsr0l	equ	0xFE9
  6797                           wreg	equ	0xFE8
  6798                           indf1	equ	0xFE7
  6799                           postdec1	equ	0xFE5
  6800                           fsr1h	equ	0xFE2
  6801                           fsr1l	equ	0xFE1
  6802                           bsr	equ	0xFE0
  6803                           indf2	equ	0xFDF
  6804                           postinc2	equ	0xFDE
  6805                           postdec2	equ	0xFDD
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _uart_trans_int_handler *****************
  6811 ;; Defined at:
  6812 ;;		line 11 in file "src/my_uart.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  data            2   29[COMRAM] PTR unsigned char 
  6817 ;;		 -> NULL(0), 
  6818 ;;  length          1   33[COMRAM] char 
  6819 ;;  curIndex        1   32[COMRAM] unsigned char 
  6820 ;;  msgtype         1   31[COMRAM] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6830 ;;      Params:         0       0       0       0       0
  6831 ;;      Locals:         5       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0
  6833 ;;      Totals:         5       0       0       0       0
  6834 ;;Total ram usage:        5 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    8
  6837 ;; This function calls:
  6838 ;;		_FromMainLow_recvmsg
  6839 ;; This function is called by:
  6840 ;;		_InterruptHandlerLow
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text40
  6845  001AEA                     __ptext40:
  6846                           	opt stack 0
  6847  001AEA                     _uart_trans_int_handler:
  6848                           	opt stack 15
  6849                           
  6850                           ;my_uart.c: 13: unsigned char* data = (0);
  6851                           
  6852                           ;incstack = 0
  6853  001AEA  0E00               	movlw	0
  6854  001AEC  6E1F               	movwf	uart_trans_int_handler@data+1,c
  6855  001AEE  0E00               	movlw	0
  6856  001AF0  6E1E               	movwf	uart_trans_int_handler@data,c
  6857                           
  6858                           ;my_uart.c: 14: unsigned char msgtype;
  6859                           ;my_uart.c: 15: unsigned char curIndex;
  6860                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  6861  001AF2  0E00               	movlw	high uart_trans_int_handler@msgtype
  6862  001AF4  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  6863  001AF6  0E20               	movlw	low uart_trans_int_handler@msgtype
  6864  001AF8  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  6865  001AFA  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  6866  001AFE  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  6867  001B02  0E0A               	movlw	10
  6868  001B04  ECB6  F00F         	call	_FromMainLow_recvmsg
  6869  001B08  6E22               	movwf	uart_trans_int_handler@length,c
  6870                           
  6871                           ;my_uart.c: 17: if (length < 0) {
  6872  001B0A  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6873  001B0C  D017               	goto	i1l426
  6874                           
  6875                           ;my_uart.c: 26: curIndex = 0;
  6876                           
  6877                           ;my_uart.c: 24: }
  6878                           ;my_uart.c: 25: } else {
  6879                           
  6880                           ;my_uart.c: 22: else{
  6881                           
  6882                           ;my_uart.c: 21: }
  6883  001B0E  0E00               	movlw	0
  6884  001B10  6E21               	movwf	uart_trans_int_handler@curIndex,c
  6885                           
  6886                           ;my_uart.c: 27: while(curIndex < length){
  6887  001B12  D00D               	goto	i1l2868
  6888  001B14                     i1l429:
  6889  001B14  A2AC               	btfss	4012,1,c	;volatile
  6890  001B16  D7FE               	goto	i1l429
  6891                           
  6892                           ;my_uart.c: 33: TXREG = data[curIndex];
  6893  001B18  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6894  001B1A  0D01               	mullw	1
  6895  001B1C  50F3               	movf	prodl,w,c
  6896  001B1E  241E               	addwf	uart_trans_int_handler@data,w,c
  6897  001B20  6ED9               	movwf	fsr2l,c
  6898  001B22  50F4               	movf	prodh,w,c
  6899  001B24  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  6900  001B26  6EDA               	movwf	fsr2h,c
  6901  001B28  50DF               	movf	indf2,w,c
  6902  001B2A  6EAD               	movwf	4013,c	;volatile
  6903                           
  6904                           ;my_uart.c: 35: curIndex++;
  6905  001B2C  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  6906  001B2E                     i1l2868:
  6907  001B2E  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6908  001B30  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6909  001B32  D004               	goto	i1l426
  6910  001B34  0AFF               	xorlw	255
  6911  001B36  2422               	addwf	uart_trans_int_handler@length,w,c
  6912  001B38  B0D8               	btfsc	status,0,c
  6913  001B3A  D7EC               	goto	i1l429
  6914  001B3C                     i1l426:
  6915                           
  6916                           ;my_uart.c: 36: }
  6917                           ;my_uart.c: 37: }
  6918                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  6919  001B3C  989D               	bcf	3997,4,c	;volatile
  6920  001B3E  0012               	return	
  6921  001B40                     __end_of_uart_trans_int_handler:
  6922                           	opt stack 0
  6923                           pclatu	equ	0xFFB
  6924                           pclath	equ	0xFFA
  6925                           tblptru	equ	0xFF8
  6926                           tblptrh	equ	0xFF7
  6927                           tblptrl	equ	0xFF6
  6928                           tablat	equ	0xFF5
  6929                           prodh	equ	0xFF4
  6930                           prodl	equ	0xFF3
  6931                           intcon	equ	0xFF2
  6932                           postinc0	equ	0xFEE
  6933                           fsr0h	equ	0xFEA
  6934                           fsr0l	equ	0xFE9
  6935                           wreg	equ	0xFE8
  6936                           indf1	equ	0xFE7
  6937                           postdec1	equ	0xFE5
  6938                           fsr1h	equ	0xFE2
  6939                           fsr1l	equ	0xFE1
  6940                           bsr	equ	0xFE0
  6941                           indf2	equ	0xFDF
  6942                           postinc2	equ	0xFDE
  6943                           postdec2	equ	0xFDD
  6944                           fsr2h	equ	0xFDA
  6945                           fsr2l	equ	0xFD9
  6946                           status	equ	0xFD8
  6947                           
  6948 ;; *************** function _FromMainLow_recvmsg *****************
  6949 ;; Defined at:
  6950 ;;		line 159 in file "src/messages.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  maxlength       1    wreg     unsigned char 
  6953 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6954 ;;		 -> uart_trans_int_handler@msgtype(1), 
  6955 ;;  data            2   26[COMRAM] PTR void 
  6956 ;;		 -> NULL(0), 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  maxlength       1   28[COMRAM] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      char 
  6961 ;; Registers used:
  6962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6968 ;;      Params:         4       0       0       0       0
  6969 ;;      Locals:         1       0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0
  6971 ;;      Totals:         5       0       0       0       0
  6972 ;;Total ram usage:        5 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    7
  6975 ;; This function calls:
  6976 ;;		i1_recv_msg
  6977 ;; This function is called by:
  6978 ;;		_uart_trans_int_handler
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text41
  6983  001F6C                     __ptext41:
  6984                           	opt stack 0
  6985  001F6C                     _FromMainLow_recvmsg:
  6986                           	opt stack 15
  6987                           
  6988                           ;incstack = 0
  6989                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6990  001F6C  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  6991                           
  6992                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6993  001F6E  0102               	movlb	2	; () banked
  6994  001F70  0E02               	movlw	high _FromMainLow_MQ
  6995  001F72  6E0C               	movwf	i1recv_msg@qptr+1,c
  6996  001F74  0102               	movlb	2	; () banked
  6997  001F76  0E36               	movlw	low _FromMainLow_MQ
  6998  001F78  6E0B               	movwf	i1recv_msg@qptr,c
  6999  001F7A  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  7000  001F7E  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  7001  001F82  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  7002  001F86  6A11               	clrf	i1recv_msg@data+1,c
  7003  001F88  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  7004  001F8C  EC5F  F008         	call	i1_recv_msg	;wreg free
  7005  001F90  0012               	return	
  7006  001F92                     __end_of_FromMainLow_recvmsg:
  7007                           	opt stack 0
  7008                           pclatu	equ	0xFFB
  7009                           pclath	equ	0xFFA
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           postinc0	equ	0xFEE
  7018                           fsr0h	equ	0xFEA
  7019                           fsr0l	equ	0xFE9
  7020                           wreg	equ	0xFE8
  7021                           indf1	equ	0xFE7
  7022                           postdec1	equ	0xFE5
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           bsr	equ	0xFE0
  7026                           indf2	equ	0xFDF
  7027                           postinc2	equ	0xFDE
  7028                           postdec2	equ	0xFDD
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function i1_recv_msg *****************
  7034 ;; Defined at:
  7035 ;;		line 63 in file "src/messages.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  7038 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7039 ;;  maxlength       1   12[COMRAM] unsigned char 
  7040 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  7041 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  7042 ;;  data            2   15[COMRAM] PTR void 
  7043 ;;		 -> main@msgbuffer(11), NULL(0), 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  7046 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7047 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7048 ;;  recv_msg        2   20[COMRAM] unsigned int 
  7049 ;;  recv_msg        1   19[COMRAM] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      char 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7059 ;;      Params:         7       0       0       0       0
  7060 ;;      Locals:         5       0       0       0       0
  7061 ;;      Temps:          2       0       0       0       0
  7062 ;;      Totals:        14       0       0       0       0
  7063 ;;Total ram usage:       14 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    6
  7066 ;; This function calls:
  7067 ;;		i1_memcpy
  7068 ;; This function is called by:
  7069 ;;		_FromMainLow_recvmsg
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text42
  7074  0010BE                     __ptext42:
  7075                           	opt stack 0
  7076  0010BE                     i1_recv_msg:
  7077                           	opt stack 15
  7078                           
  7079                           ;messages.c: 64: unsigned char slot;
  7080                           ;messages.c: 68: msg *qmsg;
  7081                           ;messages.c: 69: size_t tlength;
  7082                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7083                           
  7084                           ;incstack = 0
  7085  0010BE  EE20 F035          	lfsr	2,53
  7086  0010C2  500B               	movf	i1recv_msg@qptr,w,c
  7087  0010C4  26D9               	addwf	fsr2l,f,c
  7088  0010C6  500C               	movf	i1recv_msg@qptr+1,w,c
  7089  0010C8  22DA               	addwfc	fsr2h,f,c
  7090  0010CA  50DF               	movf	indf2,w,c
  7091  0010CC  6E14               	movwf	i1recv_msg@slot,c
  7092                           
  7093                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7094  0010CE  5014               	movf	i1recv_msg@slot,w,c
  7095  0010D0  0D0D               	mullw	13
  7096  0010D2  50F3               	movf	prodl,w,c
  7097  0010D4  240B               	addwf	i1recv_msg@qptr,w,c
  7098  0010D6  6E17               	movwf	i1recv_msg@qmsg,c
  7099  0010D8  50F4               	movf	prodh,w,c
  7100  0010DA  200C               	addwfc	i1recv_msg@qptr+1,w,c
  7101  0010DC  6E18               	movwf	i1recv_msg@qmsg+1,c
  7102                           
  7103                           ;messages.c: 74: if (qmsg->full == 1) {
  7104  0010DE  0E01               	movlw	1
  7105  0010E0  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  7106  0010E4  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  7107  0010E8  62DF               	cpfseq	indf2,c
  7108  0010EA  D050               	goto	i1l2490
  7109                           
  7110                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7111  0010EC  EE20 F001          	lfsr	2,1
  7112  0010F0  5017               	movf	i1recv_msg@qmsg,w,c
  7113  0010F2  26D9               	addwf	fsr2l,f,c
  7114  0010F4  5018               	movf	i1recv_msg@qmsg+1,w,c
  7115  0010F6  22DA               	addwfc	fsr2h,f,c
  7116  0010F8  50DF               	movf	indf2,w,c
  7117  0010FA  5C0D               	subwf	i1recv_msg@maxlength,w,c
  7118  0010FC  B0D8               	btfsc	status,0,c
  7119  0010FE  D002               	goto	i1l2474
  7120                           
  7121                           ;messages.c: 77: return (-3);
  7122  001100  0EFD               	movlw	253
  7123  001102  0012               	return	
  7124  001104                     i1l2474:
  7125                           
  7126                           ;messages.c: 78: }
  7127                           ;messages.c: 80: tlength = qmsg->length;
  7128  001104  EE20 F001          	lfsr	2,1
  7129  001108  5017               	movf	i1recv_msg@qmsg,w,c
  7130  00110A  26D9               	addwf	fsr2l,f,c
  7131  00110C  5018               	movf	i1recv_msg@qmsg+1,w,c
  7132  00110E  22DA               	addwfc	fsr2h,f,c
  7133  001110  50DF               	movf	indf2,w,c
  7134  001112  6E12               	movwf	??i1_recv_msg& (0+255),c
  7135  001114  5012               	movf	??i1_recv_msg,w,c
  7136  001116  6E15               	movwf	i1recv_msg@tlength,c
  7137  001118  6A16               	clrf	i1recv_msg@tlength+1,c
  7138                           
  7139                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7140  00111A  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  7141  00111E  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  7142  001122  0E03               	movlw	3
  7143  001124  2417               	addwf	i1recv_msg@qmsg,w,c
  7144  001126  6E12               	movwf	??i1_recv_msg& (0+255),c
  7145  001128  0E00               	movlw	0
  7146  00112A  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  7147  00112C  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  7148  00112E  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  7149  001132  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  7150  001136  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  7151  00113A  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  7152  00113E  EC39  F00E         	call	i1_memcpy	;wreg free
  7153                           
  7154                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7155  001142  EE20 F035          	lfsr	2,53
  7156  001146  500B               	movf	i1recv_msg@qptr,w,c
  7157  001148  26D9               	addwf	fsr2l,f,c
  7158  00114A  500C               	movf	i1recv_msg@qptr+1,w,c
  7159  00114C  22DA               	addwfc	fsr2h,f,c
  7160  00114E  EE10 F035          	lfsr	1,53
  7161  001152  500B               	movf	i1recv_msg@qptr,w,c
  7162  001154  26E1               	addwf	fsr1l,f,c
  7163  001156  500C               	movf	i1recv_msg@qptr+1,w,c
  7164  001158  22E2               	addwfc	fsr1h,f,c
  7165  00115A  50E7               	movf	indf1,w,c
  7166  00115C  6E12               	movwf	??i1_recv_msg& (0+255),c
  7167  00115E  2812               	incf	??i1_recv_msg,w,c
  7168  001160  0B03               	andlw	3
  7169  001162  6EDF               	movwf	indf2,c
  7170                           
  7171                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7172  001164  EE20 F002          	lfsr	2,2
  7173  001168  5017               	movf	i1recv_msg@qmsg,w,c
  7174  00116A  26D9               	addwf	fsr2l,f,c
  7175  00116C  5018               	movf	i1recv_msg@qmsg+1,w,c
  7176  00116E  22DA               	addwfc	fsr2h,f,c
  7177  001170  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  7178  001174  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  7179  001178  CFDF FFE7          	movff	indf2,indf1
  7180                           
  7181                           ;messages.c: 91: qmsg->full = 0;
  7182  00117C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  7183  001180  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  7184  001184  0E00               	movlw	0
  7185  001186  6EDF               	movwf	indf2,c
  7186                           
  7187                           ;messages.c: 92: return (tlength);
  7188  001188  5015               	movf	i1recv_msg@tlength,w,c
  7189  00118A  0012               	return	
  7190  00118C                     i1l2490:
  7191                           
  7192                           ;messages.c: 94: return (-4);
  7193  00118C  0EFC               	movlw	252
  7194  00118E  0012               	return	
  7195  001190                     __end_ofi1_recv_msg:
  7196                           	opt stack 0
  7197                           pclatu	equ	0xFFB
  7198                           pclath	equ	0xFFA
  7199                           tblptru	equ	0xFF8
  7200                           tblptrh	equ	0xFF7
  7201                           tblptrl	equ	0xFF6
  7202                           tablat	equ	0xFF5
  7203                           prodh	equ	0xFF4
  7204                           prodl	equ	0xFF3
  7205                           intcon	equ	0xFF2
  7206                           postinc0	equ	0xFEE
  7207                           fsr0h	equ	0xFEA
  7208                           fsr0l	equ	0xFE9
  7209                           wreg	equ	0xFE8
  7210                           indf1	equ	0xFE7
  7211                           postdec1	equ	0xFE5
  7212                           fsr1h	equ	0xFE2
  7213                           fsr1l	equ	0xFE1
  7214                           bsr	equ	0xFE0
  7215                           indf2	equ	0xFDF
  7216                           postinc2	equ	0xFDE
  7217                           postdec2	equ	0xFDD
  7218                           fsr2h	equ	0xFDA
  7219                           fsr2l	equ	0xFD9
  7220                           status	equ	0xFD8
  7221                           
  7222 ;; *************** function _uart_recv_int_handler *****************
  7223 ;; Defined at:
  7224 ;;		line 42 in file "src/my_uart.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;		None               void
  7231 ;; Registers used:
  7232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7238 ;;      Params:         0       0       0       0       0
  7239 ;;      Locals:         0       0       0       0       0
  7240 ;;      Temps:          1       0       0       0       0
  7241 ;;      Totals:         1       0       0       0       0
  7242 ;;Total ram usage:        1 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    8
  7245 ;; This function calls:
  7246 ;;		_ReadUSART
  7247 ;;		i1_ToMainLow_sendmsg
  7248 ;; This function is called by:
  7249 ;;		_InterruptHandlerLow
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text43
  7254  00169E                     __ptext43:
  7255                           	opt stack 0
  7256  00169E                     _uart_recv_int_handler:
  7257                           	opt stack 15
  7258                           
  7259                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  7260                           
  7261                           ;incstack = 0
  7262  00169E  AA9E               	btfss	3998,5,c	;volatile
  7263  0016A0  D03A               	goto	i1l2846
  7264                           
  7265                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  7266  0016A2  EE20 F004          	lfsr	2,4
  7267  0016A6  5049               	movf	_uc_ptr,w,c
  7268  0016A8  26D9               	addwf	fsr2l,f,c
  7269  0016AA  504A               	movf	_uc_ptr+1,w,c
  7270  0016AC  22DA               	addwfc	fsr2h,f,c
  7271  0016AE  50DF               	movf	indf2,w,c
  7272  0016B0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  7273  0016B2  501B               	movf	??_uart_recv_int_handler,w,c
  7274  0016B4  0D01               	mullw	1
  7275  0016B6  50F3               	movf	prodl,w,c
  7276  0016B8  2449               	addwf	_uc_ptr,w,c
  7277  0016BA  6ED9               	movwf	fsr2l,c
  7278  0016BC  50F4               	movf	prodh,w,c
  7279  0016BE  204A               	addwfc	_uc_ptr+1,w,c
  7280  0016C0  6EDA               	movwf	fsr2h,c
  7281  0016C2  EC0E  F010         	call	_ReadUSART	;wreg free
  7282  0016C6  6EDF               	movwf	indf2,c
  7283                           
  7284                           ;my_uart.c: 56: uc_ptr->buflen++;
  7285  0016C8  EE20 F004          	lfsr	2,4
  7286  0016CC  5049               	movf	_uc_ptr,w,c
  7287  0016CE  26D9               	addwf	fsr2l,f,c
  7288  0016D0  504A               	movf	_uc_ptr+1,w,c
  7289  0016D2  22DA               	addwfc	fsr2h,f,c
  7290  0016D4  2ADF               	incf	indf2,f,c
  7291                           
  7292                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  7293  0016D6  EE20 F004          	lfsr	2,4
  7294  0016DA  5049               	movf	_uc_ptr,w,c
  7295  0016DC  26D9               	addwf	fsr2l,f,c
  7296  0016DE  504A               	movf	_uc_ptr+1,w,c
  7297  0016E0  22DA               	addwfc	fsr2h,f,c
  7298  0016E2  0E04               	movlw	4
  7299  0016E4  62DF               	cpfseq	indf2,c
  7300  0016E6  D017               	goto	i1l2846
  7301                           
  7302                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  7303  0016E8  0E20               	movlw	32
  7304  0016EA  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  7305  0016EC  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  7306  0016F0  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  7307  0016F4  EE20 F004          	lfsr	2,4
  7308  0016F8  5049               	movf	_uc_ptr,w,c
  7309  0016FA  26D9               	addwf	fsr2l,f,c
  7310  0016FC  504A               	movf	_uc_ptr+1,w,c
  7311  0016FE  22DA               	addwfc	fsr2h,f,c
  7312  001700  50DF               	movf	indf2,w,c
  7313  001702  ECC9  F00F         	call	i1_ToMainLow_sendmsg
  7314                           
  7315                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  7316  001706  EE20 F004          	lfsr	2,4
  7317  00170A  5049               	movf	_uc_ptr,w,c
  7318  00170C  26D9               	addwf	fsr2l,f,c
  7319  00170E  504A               	movf	_uc_ptr+1,w,c
  7320  001710  22DA               	addwfc	fsr2h,f,c
  7321  001712  0E00               	movlw	0
  7322  001714  6EDF               	movwf	indf2,c
  7323  001716                     i1l2846:
  7324                           
  7325                           ;my_uart.c: 61: }
  7326                           ;my_uart.c: 62: }
  7327                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  7328  001716  A64C               	btfss	_USART_Status,3,c
  7329  001718  0012               	return	
  7330                           
  7331                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  7332  00171A  98AB               	bcf	4011,4,c	;volatile
  7333                           
  7334                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  7335  00171C  88AB               	bsf	4011,4,c	;volatile
  7336                           
  7337                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  7338  00171E  0E1E               	movlw	30
  7339  001720  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  7340  001722  0E00               	movlw	0
  7341  001724  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  7342  001726  0E00               	movlw	0
  7343  001728  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  7344  00172A  0E00               	movlw	0
  7345  00172C  ECC9  F00F         	call	i1_ToMainLow_sendmsg
  7346  001730  0012               	return	
  7347  001732                     __end_of_uart_recv_int_handler:
  7348                           	opt stack 0
  7349                           pclatu	equ	0xFFB
  7350                           pclath	equ	0xFFA
  7351                           tblptru	equ	0xFF8
  7352                           tblptrh	equ	0xFF7
  7353                           tblptrl	equ	0xFF6
  7354                           tablat	equ	0xFF5
  7355                           prodh	equ	0xFF4
  7356                           prodl	equ	0xFF3
  7357                           intcon	equ	0xFF2
  7358                           postinc0	equ	0xFEE
  7359                           fsr0h	equ	0xFEA
  7360                           fsr0l	equ	0xFE9
  7361                           wreg	equ	0xFE8
  7362                           indf1	equ	0xFE7
  7363                           postdec1	equ	0xFE5
  7364                           fsr1h	equ	0xFE2
  7365                           fsr1l	equ	0xFE1
  7366                           bsr	equ	0xFE0
  7367                           indf2	equ	0xFDF
  7368                           postinc2	equ	0xFDE
  7369                           postdec2	equ	0xFDD
  7370                           fsr2h	equ	0xFDA
  7371                           fsr2l	equ	0xFD9
  7372                           status	equ	0xFD8
  7373                           
  7374 ;; *************** function i1_ToMainLow_sendmsg *****************
  7375 ;; Defined at:
  7376 ;;		line 103 in file "src/messages.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  length          1    wreg     unsigned char 
  7379 ;;  msgtype         1   22[COMRAM] unsigned char 
  7380 ;;  data            2   23[COMRAM] PTR void 
  7381 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  7382 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  7383 ;;		 -> NULL(0), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  length          1   25[COMRAM] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      char 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7395 ;;      Params:         3       0       0       0       0
  7396 ;;      Locals:         1       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0
  7398 ;;      Totals:         4       0       0       0       0
  7399 ;;Total ram usage:        4 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    7
  7402 ;; This function calls:
  7403 ;;		i1_send_msg
  7404 ;; This function is called by:
  7405 ;;		_InterruptHandlerLow
  7406 ;;		_uart_recv_int_handler
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text44
  7411  001F92                     __ptext44:
  7412                           	opt stack 0
  7413  001F92                     i1_ToMainLow_sendmsg:
  7414                           	opt stack 16
  7415                           
  7416                           ;incstack = 0
  7417                           ;i1ToMainLow_sendmsg@length stored from wreg
  7418  001F92  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  7419                           
  7420                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  7421                           ;	Return value of i1_ToMainLow_sendmsg is never used
  7422  001F94  0101               	movlb	1	; () banked
  7423  001F96  0E01               	movlw	high _ToMainLow_MQ
  7424  001F98  6E0C               	movwf	i1send_msg@qptr+1,c
  7425  001F9A  0101               	movlb	1	; () banked
  7426  001F9C  0E38               	movlw	low _ToMainLow_MQ
  7427  001F9E  6E0B               	movwf	i1send_msg@qptr,c
  7428  001FA0  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  7429  001FA4  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  7430  001FA8  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  7431  001FAC  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  7432  001FB0  ECAB  F00A         	call	i1_send_msg	;wreg free
  7433  001FB4  0012               	return	
  7434  001FB6                     __end_ofi1_ToMainLow_sendmsg:
  7435                           	opt stack 0
  7436                           pclatu	equ	0xFFB
  7437                           pclath	equ	0xFFA
  7438                           tblptru	equ	0xFF8
  7439                           tblptrh	equ	0xFF7
  7440                           tblptrl	equ	0xFF6
  7441                           tablat	equ	0xFF5
  7442                           prodh	equ	0xFF4
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           postinc0	equ	0xFEE
  7446                           fsr0h	equ	0xFEA
  7447                           fsr0l	equ	0xFE9
  7448                           wreg	equ	0xFE8
  7449                           indf1	equ	0xFE7
  7450                           postdec1	equ	0xFE5
  7451                           fsr1h	equ	0xFE2
  7452                           fsr1l	equ	0xFE1
  7453                           bsr	equ	0xFE0
  7454                           indf2	equ	0xFDF
  7455                           postinc2	equ	0xFDE
  7456                           postdec2	equ	0xFDD
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461 ;; *************** function i1_send_msg *****************
  7462 ;; Defined at:
  7463 ;;		line 24 in file "src/messages.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  7466 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7467 ;;  length          1   12[COMRAM] unsigned char 
  7468 ;;  msgtype         1   13[COMRAM] unsigned char 
  7469 ;;  data            2   14[COMRAM] PTR void 
  7470 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7471 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7472 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  7475 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7476 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7477 ;;  send_msg        2   17[COMRAM] unsigned int 
  7478 ;;  send_msg        1   19[COMRAM] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      char 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7488 ;;      Params:         6       0       0       0       0
  7489 ;;      Locals:         5       0       0       0       0
  7490 ;;      Temps:          1       0       0       0       0
  7491 ;;      Totals:        12       0       0       0       0
  7492 ;;Total ram usage:       12 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    6
  7495 ;; This function calls:
  7496 ;;		i1_memcpy
  7497 ;; This function is called by:
  7498 ;;		i1_ToMainLow_sendmsg
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text45
  7503  001556                     __ptext45:
  7504                           	opt stack 0
  7505  001556                     i1_send_msg:
  7506                           	opt stack 16
  7507                           
  7508                           ;messages.c: 25: unsigned char slot;
  7509                           ;messages.c: 27: msg *qmsg;
  7510                           ;messages.c: 28: size_t tlength = length;
  7511                           
  7512                           ;incstack = 0
  7513  001556  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  7514  00155A  6A13               	clrf	i1send_msg@tlength+1,c
  7515                           
  7516                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7517  00155C  EE20 F034          	lfsr	2,52
  7518  001560  500B               	movf	i1send_msg@qptr,w,c
  7519  001562  26D9               	addwf	fsr2l,f,c
  7520  001564  500C               	movf	i1send_msg@qptr+1,w,c
  7521  001566  22DA               	addwfc	fsr2h,f,c
  7522  001568  50DF               	movf	indf2,w,c
  7523  00156A  6E14               	movwf	i1send_msg@slot,c
  7524                           
  7525                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7526  00156C  5014               	movf	i1send_msg@slot,w,c
  7527  00156E  0D0D               	mullw	13
  7528  001570  50F3               	movf	prodl,w,c
  7529  001572  240B               	addwf	i1send_msg@qptr,w,c
  7530  001574  6E15               	movwf	i1send_msg@qmsg,c
  7531  001576  50F4               	movf	prodh,w,c
  7532  001578  200C               	addwfc	i1send_msg@qptr+1,w,c
  7533  00157A  6E16               	movwf	i1send_msg@qmsg+1,c
  7534                           
  7535                           ;messages.c: 41: if (qmsg->full != 0) {
  7536  00157C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7537  001580  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7538  001584  50DF               	movf	indf2,w,c
  7539  001586  B4D8               	btfsc	status,2,c
  7540  001588  D002               	goto	i1l2426
  7541                           
  7542                           ;messages.c: 42: return (-1);
  7543  00158A  0EFF               	movlw	255
  7544  00158C  0012               	return	
  7545  00158E                     i1l2426:
  7546                           
  7547                           ;messages.c: 43: }
  7548                           ;messages.c: 46: qmsg->length = length;
  7549  00158E  EE20 F001          	lfsr	2,1
  7550  001592  5015               	movf	i1send_msg@qmsg,w,c
  7551  001594  26D9               	addwf	fsr2l,f,c
  7552  001596  5016               	movf	i1send_msg@qmsg+1,w,c
  7553  001598  22DA               	addwfc	fsr2h,f,c
  7554  00159A  C00D  FFDF         	movff	i1send_msg@length,indf2
  7555                           
  7556                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7557  00159E  EE20 F002          	lfsr	2,2
  7558  0015A2  5015               	movf	i1send_msg@qmsg,w,c
  7559  0015A4  26D9               	addwf	fsr2l,f,c
  7560  0015A6  5016               	movf	i1send_msg@qmsg+1,w,c
  7561  0015A8  22DA               	addwfc	fsr2h,f,c
  7562  0015AA  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  7563                           
  7564                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7565  0015AE  0E03               	movlw	3
  7566  0015B0  2415               	addwf	i1send_msg@qmsg,w,c
  7567  0015B2  6E01               	movwf	i1memcpy@d1,c
  7568  0015B4  0E00               	movlw	0
  7569  0015B6  2016               	addwfc	i1send_msg@qmsg+1,w,c
  7570  0015B8  6E02               	movwf	i1memcpy@d1+1,c
  7571  0015BA  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  7572  0015BE  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  7573  0015C2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  7574  0015C6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  7575  0015CA  EC39  F00E         	call	i1_memcpy	;wreg free
  7576                           
  7577                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7578  0015CE  EE20 F034          	lfsr	2,52
  7579  0015D2  500B               	movf	i1send_msg@qptr,w,c
  7580  0015D4  26D9               	addwf	fsr2l,f,c
  7581  0015D6  500C               	movf	i1send_msg@qptr+1,w,c
  7582  0015D8  22DA               	addwfc	fsr2h,f,c
  7583  0015DA  EE10 F034          	lfsr	1,52
  7584  0015DE  500B               	movf	i1send_msg@qptr,w,c
  7585  0015E0  26E1               	addwf	fsr1l,f,c
  7586  0015E2  500C               	movf	i1send_msg@qptr+1,w,c
  7587  0015E4  22E2               	addwfc	fsr1h,f,c
  7588  0015E6  50E7               	movf	indf1,w,c
  7589  0015E8  6E11               	movwf	??i1_send_msg& (0+255),c
  7590  0015EA  2811               	incf	??i1_send_msg,w,c
  7591  0015EC  0B03               	andlw	3
  7592  0015EE  6EDF               	movwf	indf2,c
  7593                           
  7594                           ;messages.c: 59: qmsg->full = 1;
  7595  0015F0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7596  0015F4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7597  0015F8  0E01               	movlw	1
  7598  0015FA  6EDF               	movwf	indf2,c
  7599                           
  7600                           ;messages.c: 60: return (1);
  7601  0015FC  0E01               	movlw	1
  7602  0015FE  0012               	return	
  7603  001600                     __end_ofi1_send_msg:
  7604                           	opt stack 0
  7605                           pclatu	equ	0xFFB
  7606                           pclath	equ	0xFFA
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           fsr0h	equ	0xFEA
  7616                           fsr0l	equ	0xFE9
  7617                           wreg	equ	0xFE8
  7618                           indf1	equ	0xFE7
  7619                           postdec1	equ	0xFE5
  7620                           fsr1h	equ	0xFE2
  7621                           fsr1l	equ	0xFE1
  7622                           bsr	equ	0xFE0
  7623                           indf2	equ	0xFDF
  7624                           postinc2	equ	0xFDE
  7625                           postdec2	equ	0xFDD
  7626                           fsr2h	equ	0xFDA
  7627                           fsr2l	equ	0xFD9
  7628                           status	equ	0xFD8
  7629                           
  7630 ;; *************** function i1_memcpy *****************
  7631 ;; Defined at:
  7632 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  d1              2    0[COMRAM] PTR void 
  7635 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7636 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7637 ;;		 -> main@msgbuffer(11), NULL(0), 
  7638 ;;  s1              2    2[COMRAM] PTR const void 
  7639 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7640 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7641 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7642 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7643 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7644 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7645 ;;  n               2    4[COMRAM] unsigned int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  7648 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7649 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7650 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7651 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7652 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7653 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7654 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  7655 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7656 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7657 ;;		 -> main@msgbuffer(11), NULL(0), 
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  2    0[COMRAM] PTR void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7667 ;;      Params:         6       0       0       0       0
  7668 ;;      Locals:         4       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0
  7670 ;;      Totals:        10       0       0       0       0
  7671 ;;Total ram usage:       10 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    5
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		i1_send_msg
  7678 ;;		i1_recv_msg
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text46
  7683  001C72                     __ptext46:
  7684                           	opt stack 0
  7685  001C72                     i1_memcpy:
  7686                           	opt stack 16
  7687                           
  7688                           ;incstack = 0
  7689  001C72  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7690  001C76  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7691  001C7A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7692  001C7E  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7693  001C82  D00E               	goto	i1l2374
  7694  001C84                     i1l2368:
  7695  001C84  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7696  001C88  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7697  001C8C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7698  001C90  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7699  001C94  CFDF FFE7          	movff	indf2,indf1
  7700  001C98  4A09               	infsnz	i1memcpy@s,f,c
  7701  001C9A  2A0A               	incf	i1memcpy@s+1,f,c
  7702  001C9C  4A07               	infsnz	i1memcpy@d,f,c
  7703  001C9E  2A08               	incf	i1memcpy@d+1,f,c
  7704  001CA0                     i1l2374:
  7705  001CA0  0605               	decf	i1memcpy@n,f,c
  7706  001CA2  A0D8               	btfss	status,0,c
  7707  001CA4  0606               	decf	i1memcpy@n+1,f,c
  7708  001CA6  2805               	incf	i1memcpy@n& (0+255),w,c
  7709  001CA8  B4D8               	btfsc	status,2,c
  7710  001CAA  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7711  001CAC  B4D8               	btfsc	status,2,c
  7712                           
  7713                           ;	Return value of i1_memcpy is never used
  7714  001CAE  0012               	return	
  7715  001CB0  D7E9               	goto	i1l2368
  7716  001CB2                     __end_ofi1_memcpy:
  7717                           	opt stack 0
  7718                           pclatu	equ	0xFFB
  7719                           pclath	equ	0xFFA
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           postinc0	equ	0xFEE
  7728                           fsr0h	equ	0xFEA
  7729                           fsr0l	equ	0xFE9
  7730                           wreg	equ	0xFE8
  7731                           indf1	equ	0xFE7
  7732                           postdec1	equ	0xFE5
  7733                           fsr1h	equ	0xFE2
  7734                           fsr1l	equ	0xFE1
  7735                           bsr	equ	0xFE0
  7736                           indf2	equ	0xFDF
  7737                           postinc2	equ	0xFDE
  7738                           postdec2	equ	0xFDD
  7739                           fsr2h	equ	0xFDA
  7740                           fsr2l	equ	0xFD9
  7741                           status	equ	0xFD8
  7742                           
  7743 ;; *************** function _ReadUSART *****************
  7744 ;; Defined at:
  7745 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  data            1    0[COMRAM] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      unsigned char 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7759 ;;      Params:         0       0       0       0       0
  7760 ;;      Locals:         1       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0
  7762 ;;      Totals:         1       0       0       0       0
  7763 ;;Total ram usage:        1 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    5
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_uart_recv_int_handler
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text47
  7774  00201C                     __ptext47:
  7775                           	opt stack 0
  7776  00201C                     _ReadUSART:
  7777                           	opt stack 17
  7778                           
  7779                           ;incstack = 0
  7780  00201C  0EF2               	movlw	242
  7781  00201E  164C               	andwf	_USART_Status,f,c
  7782  002020  ACAB               	btfss	4011,6,c	;volatile
  7783  002022  D003               	goto	i1l605
  7784  002024  904C               	bcf	_USART_Status,0,c
  7785  002026  B0AB               	btfsc	4011,0,c	;volatile
  7786  002028  804C               	bsf	_USART_Status,0,c
  7787  00202A                     i1l605:
  7788  00202A  B4AB               	btfsc	4011,2,c	;volatile
  7789  00202C  844C               	bsf	_USART_Status,2,c
  7790  00202E  B2AB               	btfsc	4011,1,c	;volatile
  7791  002030  864C               	bsf	_USART_Status,3,c
  7792  002032  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7793  002036  5001               	movf	ReadUSART@data,w,c
  7794  002038  0012               	return	
  7795  00203A                     __end_of_ReadUSART:
  7796                           	opt stack 0
  7797                           pclatu	equ	0xFFB
  7798                           pclath	equ	0xFFA
  7799                           tblptru	equ	0xFF8
  7800                           tblptrh	equ	0xFF7
  7801                           tblptrl	equ	0xFF6
  7802                           tablat	equ	0xFF5
  7803                           prodh	equ	0xFF4
  7804                           prodl	equ	0xFF3
  7805                           intcon	equ	0xFF2
  7806                           postinc0	equ	0xFEE
  7807                           fsr0h	equ	0xFEA
  7808                           fsr0l	equ	0xFE9
  7809                           wreg	equ	0xFE8
  7810                           indf1	equ	0xFE7
  7811                           postdec1	equ	0xFE5
  7812                           fsr1h	equ	0xFE2
  7813                           fsr1l	equ	0xFE1
  7814                           bsr	equ	0xFE0
  7815                           indf2	equ	0xFDF
  7816                           postinc2	equ	0xFDE
  7817                           postdec2	equ	0xFDD
  7818                           fsr2h	equ	0xFDA
  7819                           fsr2l	equ	0xFD9
  7820                           status	equ	0xFD8
  7821                           
  7822 ;; *************** function _InterruptHandlerHigh *****************
  7823 ;; Defined at:
  7824 ;;		line 84 in file "src/interrupts.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;		None               void
  7831 ;; Registers used:
  7832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7838 ;;      Params:         0       0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0
  7840 ;;      Temps:          0      14       0       0       0
  7841 ;;      Totals:         0      14       0       0       0
  7842 ;;Total ram usage:       14 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    4
  7845 ;; This function calls:
  7846 ;;		_SleepIfOkay
  7847 ;;		_ToMainHigh_sendmsg
  7848 ;;		_i2c_int_handler
  7849 ;; This function is called by:
  7850 ;;		Interrupt level 2
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	intcode
  7855  000008                     __pintcode:
  7856                           	opt stack 0
  7857  000008                     _InterruptHandlerHigh:
  7858                           	opt stack 15
  7859                           
  7860                           ;incstack = 0
  7861  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  7862  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  7863  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  7864  000014  EF99  F00B         	goto	int_func
  7865                           pclatu	equ	0xFFB
  7866                           pclath	equ	0xFFA
  7867                           tblptru	equ	0xFF8
  7868                           tblptrh	equ	0xFF7
  7869                           tblptrl	equ	0xFF6
  7870                           tablat	equ	0xFF5
  7871                           prodh	equ	0xFF4
  7872                           prodl	equ	0xFF3
  7873                           intcon	equ	0xFF2
  7874                           postinc0	equ	0xFEE
  7875                           fsr0h	equ	0xFEA
  7876                           fsr0l	equ	0xFE9
  7877                           wreg	equ	0xFE8
  7878                           indf1	equ	0xFE7
  7879                           postdec1	equ	0xFE5
  7880                           fsr1h	equ	0xFE2
  7881                           fsr1l	equ	0xFE1
  7882                           bsr	equ	0xFE0
  7883                           indf2	equ	0xFDF
  7884                           postinc2	equ	0xFDE
  7885                           postdec2	equ	0xFDD
  7886                           fsr2h	equ	0xFDA
  7887                           fsr2l	equ	0xFD9
  7888                           status	equ	0xFD8
  7889                           
  7890                           	psect	intcode_body
  7891  001732                     __pintcode_body:
  7892                           	opt stack 15
  7893  001732                     int_func:
  7894                           	opt stack 15
  7895  001732  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  7896  001736  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  7897  00173A  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  7898  00173E  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  7899  001742  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  7900  001746  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  7901  00174A  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  7902  00174E  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  7903  001752  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  7904  001756  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  7905  00175A  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  7906                           
  7907                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  7908  00175E  A69E               	btfss	3998,3,c	;volatile
  7909  001760  D003               	goto	i2l3614
  7910                           
  7911                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  7912  001762  969E               	bcf	3998,3,c	;volatile
  7913                           
  7914                           ;interrupts.c: 93: i2c_int_handler();
  7915  001764  EC69  F000         	call	_i2c_int_handler	;wreg free
  7916  001768                     i2l3614:
  7917                           
  7918                           ;interrupts.c: 94: }
  7919                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  7920  001768  A4F2               	btfss	intcon,2,c	;volatile
  7921  00176A  D00A               	goto	i2l3620
  7922                           
  7923                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  7924  00176C  94F2               	bcf	intcon,2,c	;volatile
  7925                           
  7926                           ;interrupts.c: 99: ToMainHigh_sendmsg(0, 10, (void *)0);
  7927  00176E  0E0A               	movlw	10
  7928  001770  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7929  001772  0E00               	movlw	0
  7930  001774  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7931  001776  0E00               	movlw	0
  7932  001778  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7933  00177A  0E00               	movlw	0
  7934  00177C  ECDB  F00F         	call	_ToMainHigh_sendmsg
  7935  001780                     i2l3620:
  7936                           
  7937                           ;interrupts.c: 100: }
  7938                           ;interrupts.c: 103: SleepIfOkay();
  7939  001780  ECF2  F00D         	call	_SleepIfOkay	;wreg free
  7940  001784  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7941  001788  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7942  00178C  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7943  001790  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7944  001794  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7945  001798  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7946  00179C  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7947  0017A0  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7948  0017A4  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7949  0017A8  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7950  0017AC  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7951  0017B0  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7952  0017B4  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7953  0017B8  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7954  0017BC  0011               	retfie		f
  7955  0017BE                     __end_of_InterruptHandlerHigh:
  7956                           	opt stack 0
  7957                           pclatu	equ	0xFFB
  7958                           pclath	equ	0xFFA
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           intcon	equ	0xFF2
  7966                           postinc0	equ	0xFEE
  7967                           fsr0h	equ	0xFEA
  7968                           fsr0l	equ	0xFE9
  7969                           wreg	equ	0xFE8
  7970                           indf1	equ	0xFE7
  7971                           postdec1	equ	0xFE5
  7972                           fsr1h	equ	0xFE2
  7973                           fsr1l	equ	0xFE1
  7974                           bsr	equ	0xFE0
  7975                           indf2	equ	0xFDF
  7976                           postinc2	equ	0xFDE
  7977                           postdec2	equ	0xFDD
  7978                           fsr2h	equ	0xFDA
  7979                           fsr2l	equ	0xFD9
  7980                           status	equ	0xFD8
  7981                           
  7982 ;; *************** function _i2c_int_handler *****************
  7983 ;; Defined at:
  7984 ;;		line 100 in file "src/my_i2c.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  7989 ;;  data_read       1   14[BANK0 ] unsigned char 
  7990 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  7991 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  7992 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  7993 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  7994 ;;  data_written    1    9[BANK0 ] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;		None               void
  7997 ;; Registers used:
  7998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8004 ;;      Params:         0       0       0       0       0
  8005 ;;      Locals:         0       9       0       0       0
  8006 ;;      Temps:          0       1       0       0       0
  8007 ;;      Totals:         0      10       0       0       0
  8008 ;;Total ram usage:       10 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    3
  8011 ;; This function calls:
  8012 ;;		_ToMainHigh_sendmsg
  8013 ;;		_handle_start
  8014 ;; This function is called by:
  8015 ;;		_InterruptHandlerHigh
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text49
  8020  0000D2                     __ptext49:
  8021                           	opt stack 0
  8022  0000D2                     _i2c_int_handler:
  8023                           	opt stack 15
  8024                           
  8025                           ;my_i2c.c: 101: unsigned char i2c_data;
  8026                           ;my_i2c.c: 102: unsigned char data_read = 0;
  8027                           
  8028                           ;incstack = 0
  8029  0000D2  0E00               	movlw	0
  8030  0000D4  0100               	movlb	0	; () banked
  8031  0000D6  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  8032                           
  8033                           ;my_i2c.c: 103: unsigned char data_written = 0;
  8034  0000D8  0E00               	movlw	0
  8035  0000DA  0100               	movlb	0	; () banked
  8036  0000DC  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  8037                           
  8038                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  8039  0000DE  0E00               	movlw	0
  8040  0000E0  0100               	movlb	0	; () banked
  8041  0000E2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8042                           
  8043                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  8044  0000E4  0E00               	movlw	0
  8045  0000E6  0100               	movlb	0	; () banked
  8046  0000E8  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8047                           
  8048                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  8049  0000EA  0E00               	movlw	0
  8050  0000EC  0100               	movlb	0	; () banked
  8051  0000EE  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;my_i2c.c: 107: unsigned char error_buf[3];
  8055                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  8056  0000F0  ACC6               	btfss	4038,6,c	;volatile
  8057  0000F2  D024               	goto	i2l3480
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  8061  0000F4  9CC6               	bcf	4038,6,c	;volatile
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  8065  0000F6  0100               	movlb	0	; () banked
  8066  0000F8  EE20 F00C          	lfsr	2,12
  8067  0000FC  0100               	movlb	0	; () banked
  8068  0000FE  51CE               	movf	_ic_ptr& (0+255),w,b
  8069  000100  26D9               	addwf	fsr2l,f,c
  8070  000102  0100               	movlb	0	; () banked
  8071  000104  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8072  000106  22DA               	addwfc	fsr2h,f,c
  8073  000108  0E05               	movlw	5
  8074  00010A  6EDF               	movwf	indf2,c
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;my_i2c.c: 116: overrun_error = 1;
  8078  00010C  0E01               	movlw	1
  8079  00010E  0100               	movlb	0	; () banked
  8080  000110  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;my_i2c.c: 117: ic_ptr->error_count++;
  8084  000112  0100               	movlb	0	; () banked
  8085  000114  EE20 F00E          	lfsr	2,14
  8086  000118  0100               	movlb	0	; () banked
  8087  00011A  51CE               	movf	_ic_ptr& (0+255),w,b
  8088  00011C  26D9               	addwf	fsr2l,f,c
  8089  00011E  0100               	movlb	0	; () banked
  8090  000120  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8091  000122  22DA               	addwfc	fsr2h,f,c
  8092  000124  2ADF               	incf	indf2,f,c
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  8096  000126  0100               	movlb	0	; () banked
  8097  000128  EE20 F00D          	lfsr	2,13
  8098  00012C  0100               	movlb	0	; () banked
  8099  00012E  51CE               	movf	_ic_ptr& (0+255),w,b
  8100  000130  26D9               	addwf	fsr2l,f,c
  8101  000132  0100               	movlb	0	; () banked
  8102  000134  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8103  000136  22DA               	addwfc	fsr2h,f,c
  8104  000138  0E04               	movlw	4
  8105  00013A  6EDF               	movwf	indf2,c
  8106  00013C                     i2l3480:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;my_i2c.c: 119: }
  8110                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  8111  00013C  A0C7               	btfss	4039,0,c	;volatile
  8112  00013E  D005               	goto	i2l3486
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  8116  000140  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;my_i2c.c: 123: data_read = 1;
  8120  000144  0E01               	movlw	1
  8121  000146  0100               	movlb	0	; () banked
  8122  000148  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  8123  00014A                     i2l3486:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;my_i2c.c: 124: }
  8127                           ;my_i2c.c: 126: if (!overrun_error) {
  8128  00014A  0100               	movlb	0	; () banked
  8129  00014C  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  8130  00014E  D19F               	goto	i2l353
  8131  000150  D188               	goto	i2l3574
  8132  000152                     i2l355:
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;my_i2c.c: 129: {
  8136                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  8137  000152  A6C7               	btfss	4039,3,c	;volatile
  8138  000154  D19C               	goto	i2l353
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;my_i2c.c: 132: handle_start(data_read);
  8142  000156  0100               	movlb	0	; () banked
  8143  000158  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  8144  00015A  EC2D  F009         	call	_handle_start
  8145                           
  8146                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  8147  00015E  0100               	movlb	0	; () banked
  8148  000160  EE20 F00C          	lfsr	2,12
  8149  000164  0100               	movlb	0	; () banked
  8150  000166  51CE               	movf	_ic_ptr& (0+255),w,b
  8151  000168  26D9               	addwf	fsr2l,f,c
  8152  00016A  0100               	movlb	0	; () banked
  8153  00016C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8154  00016E  22DA               	addwfc	fsr2h,f,c
  8155  000170  0E08               	movlw	8
  8156  000172  62DF               	cpfseq	indf2,c
  8157  000174  D18C               	goto	i2l353
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;my_i2c.c: 135: data_read = 0;
  8161  000176  0E00               	movlw	0
  8162  000178  0100               	movlb	0	; () banked
  8163  00017A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  8164                           
  8165                           ;my_i2c.c: 136: msg_to_send = 1;
  8166  00017C  0E01               	movlw	1
  8167  00017E  0100               	movlb	0	; () banked
  8168  000180  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8169  000182  D185               	goto	i2l353
  8170  000184                     i2l359:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;my_i2c.c: 142: {
  8174                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  8175  000184  A8C7               	btfss	4039,4,c	;volatile
  8176  000186  D02A               	goto	i2l3506
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;my_i2c.c: 147: ic_ptr->event_count++;
  8180  000188  0100               	movlb	0	; () banked
  8181  00018A  EE20 F00B          	lfsr	2,11
  8182  00018E  0100               	movlb	0	; () banked
  8183  000190  51CE               	movf	_ic_ptr& (0+255),w,b
  8184  000192  26D9               	addwf	fsr2l,f,c
  8185  000194  0100               	movlb	0	; () banked
  8186  000196  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8187  000198  22DA               	addwfc	fsr2h,f,c
  8188  00019A  2ADF               	incf	indf2,f,c
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;my_i2c.c: 148: if (data_read) {
  8192  00019C  0100               	movlb	0	; () banked
  8193  00019E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  8194  0001A0  B4D8               	btfsc	status,2,c
  8195  0001A2  D154               	goto	L10
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  8199  0001A4  BAC7               	btfsc	4039,5,c	;volatile
  8200  0001A6  D004               	goto	i2l3504
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;my_i2c.c: 150: msg_ready = 1;
  8204  0001A8  0E01               	movlw	1
  8205  0001AA  0100               	movlb	0	; () banked
  8206  0001AC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8207                           
  8208                           ;my_i2c.c: 151: } else {
  8209  0001AE  D14E               	goto	L10
  8210  0001B0                     i2l3504:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;my_i2c.c: 152: ic_ptr->error_count++;
  8214  0001B0  0100               	movlb	0	; () banked
  8215  0001B2  EE20 F00E          	lfsr	2,14
  8216  0001B6  0100               	movlb	0	; () banked
  8217  0001B8  51CE               	movf	_ic_ptr& (0+255),w,b
  8218  0001BA  26D9               	addwf	fsr2l,f,c
  8219  0001BC  0100               	movlb	0	; () banked
  8220  0001BE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8221  0001C0  22DA               	addwfc	fsr2h,f,c
  8222  0001C2  2ADF               	incf	indf2,f,c
  8223                           
  8224                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  8225  0001C4  0100               	movlb	0	; () banked
  8226  0001C6  EE20 F00D          	lfsr	2,13
  8227  0001CA  0100               	movlb	0	; () banked
  8228  0001CC  51CE               	movf	_ic_ptr& (0+255),w,b
  8229  0001CE  26D9               	addwf	fsr2l,f,c
  8230  0001D0  0100               	movlb	0	; () banked
  8231  0001D2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8232  0001D4  22DA               	addwfc	fsr2h,f,c
  8233  0001D6  0E06               	movlw	6
  8234  0001D8  6EDF               	movwf	indf2,c
  8235                           
  8236                           ; BSR set to: 0
  8237  0001DA  D138               	goto	L10
  8238  0001DC                     i2l3506:
  8239                           
  8240                           ; BSR set to: 0
  8241  0001DC  0100               	movlb	0	; () banked
  8242  0001DE  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  8243  0001E0  B4D8               	btfsc	status,2,c
  8244  0001E2  D155               	goto	i2l353
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;my_i2c.c: 158: ic_ptr->event_count++;
  8248  0001E4  0100               	movlb	0	; () banked
  8249  0001E6  EE20 F00B          	lfsr	2,11
  8250  0001EA  0100               	movlb	0	; () banked
  8251  0001EC  51CE               	movf	_ic_ptr& (0+255),w,b
  8252  0001EE  26D9               	addwf	fsr2l,f,c
  8253  0001F0  0100               	movlb	0	; () banked
  8254  0001F2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8255  0001F4  22DA               	addwfc	fsr2h,f,c
  8256  0001F6  2ADF               	incf	indf2,f,c
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  8260  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  8261  0001FA  D019               	goto	i2l3522
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  8265  0001FC  B4C7               	btfsc	4039,2,c	;volatile
  8266  0001FE  D00B               	goto	i2l3516
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  8270  000200  0100               	movlb	0	; () banked
  8271  000202  EE20 F00C          	lfsr	2,12
  8272  000206  0100               	movlb	0	; () banked
  8273  000208  51CE               	movf	_ic_ptr& (0+255),w,b
  8274  00020A  26D9               	addwf	fsr2l,f,c
  8275  00020C  0100               	movlb	0	; () banked
  8276  00020E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8277  000210  22DA               	addwfc	fsr2h,f,c
  8278  000212  0E07               	movlw	7
  8279  000214  D071               	goto	L8
  8280  000216                     i2l3516:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  8284  000216  0100               	movlb	0	; () banked
  8285  000218  EE20 F00C          	lfsr	2,12
  8286  00021C  0100               	movlb	0	; () banked
  8287  00021E  51CE               	movf	_ic_ptr& (0+255),w,b
  8288  000220  26D9               	addwf	fsr2l,f,c
  8289  000222  0100               	movlb	0	; () banked
  8290  000224  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8291  000226  22DA               	addwfc	fsr2h,f,c
  8292  000228  0E08               	movlw	8
  8293  00022A  6EDF               	movwf	indf2,c
  8294  00022C  D108               	goto	L7
  8295  00022E                     i2l3522:
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;my_i2c.c: 169: ic_ptr->error_count++;
  8299  00022E  0100               	movlb	0	; () banked
  8300  000230  EE20 F00E          	lfsr	2,14
  8301  000234  0100               	movlb	0	; () banked
  8302  000236  51CE               	movf	_ic_ptr& (0+255),w,b
  8303  000238  26D9               	addwf	fsr2l,f,c
  8304  00023A  0100               	movlb	0	; () banked
  8305  00023C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8306  00023E  22DA               	addwfc	fsr2h,f,c
  8307  000240  2ADF               	incf	indf2,f,c
  8308                           
  8309                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  8310  000242  0100               	movlb	0	; () banked
  8311  000244  EE20 F00C          	lfsr	2,12
  8312  000248  0100               	movlb	0	; () banked
  8313  00024A  51CE               	movf	_ic_ptr& (0+255),w,b
  8314  00024C  26D9               	addwf	fsr2l,f,c
  8315  00024E  0100               	movlb	0	; () banked
  8316  000250  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8317  000252  22DA               	addwfc	fsr2h,f,c
  8318  000254  0E05               	movlw	5
  8319  000256  6EDF               	movwf	indf2,c
  8320                           
  8321                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  8322  000258  0100               	movlb	0	; () banked
  8323  00025A  EE20 F00D          	lfsr	2,13
  8324  00025E  0100               	movlb	0	; () banked
  8325  000260  51CE               	movf	_ic_ptr& (0+255),w,b
  8326  000262  26D9               	addwf	fsr2l,f,c
  8327  000264  0100               	movlb	0	; () banked
  8328  000266  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8329  000268  22DA               	addwfc	fsr2h,f,c
  8330  00026A  0E06               	movlw	6
  8331  00026C  D045               	goto	L8
  8332  00026E                     i2l3524:
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;my_i2c.c: 177: {
  8336                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8337  00026E  0100               	movlb	0	; () banked
  8338  000270  EE20 F01A          	lfsr	2,26
  8339  000274  0100               	movlb	0	; () banked
  8340  000276  51CE               	movf	_ic_ptr& (0+255),w,b
  8341  000278  26D9               	addwf	fsr2l,f,c
  8342  00027A  0100               	movlb	0	; () banked
  8343  00027C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8344  00027E  22DA               	addwfc	fsr2h,f,c
  8345  000280  50DF               	movf	indf2,w,c
  8346  000282  0100               	movlb	0	; () banked
  8347  000284  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8348  000286  0100               	movlb	0	; () banked
  8349  000288  EE20 F019          	lfsr	2,25
  8350  00028C  0100               	movlb	0	; () banked
  8351  00028E  51CE               	movf	_ic_ptr& (0+255),w,b
  8352  000290  26D9               	addwf	fsr2l,f,c
  8353  000292  0100               	movlb	0	; () banked
  8354  000294  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8355  000296  22DA               	addwfc	fsr2h,f,c
  8356  000298  50DF               	movf	indf2,w,c
  8357  00029A  0100               	movlb	0	; () banked
  8358  00029C  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  8359  00029E  B0D8               	btfsc	status,0,c
  8360  0002A0  D0D5               	goto	L10
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8364  0002A2  0100               	movlb	0	; () banked
  8365  0002A4  EE20 F01A          	lfsr	2,26
  8366  0002A8  0100               	movlb	0	; () banked
  8367  0002AA  51CE               	movf	_ic_ptr& (0+255),w,b
  8368  0002AC  26D9               	addwf	fsr2l,f,c
  8369  0002AE  0100               	movlb	0	; () banked
  8370  0002B0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8371  0002B2  22DA               	addwfc	fsr2h,f,c
  8372  0002B4  50DF               	movf	indf2,w,c
  8373  0002B6  0100               	movlb	0	; () banked
  8374  0002B8  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8375  0002BA  0100               	movlb	0	; () banked
  8376  0002BC  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8377  0002BE  0D01               	mullw	1
  8378  0002C0  0E0F               	movlw	15
  8379  0002C2  26F3               	addwf	prodl,f,c
  8380  0002C4  0E00               	movlw	0
  8381  0002C6  22F4               	addwfc	prodh,f,c
  8382  0002C8  50F3               	movf	prodl,w,c
  8383  0002CA  0100               	movlb	0	; () banked
  8384  0002CC  25CE               	addwf	_ic_ptr& (0+255),w,b
  8385  0002CE  6ED9               	movwf	fsr2l,c
  8386  0002D0  50F4               	movf	prodh,w,c
  8387  0002D2  0100               	movlb	0	; () banked
  8388  0002D4  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8389  0002D6  6EDA               	movwf	fsr2h,c
  8390  0002D8  50DF               	movf	indf2,w,c
  8391  0002DA  6EC9               	movwf	4041,c	;volatile
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  8395  0002DC  0100               	movlb	0	; () banked
  8396  0002DE  EE20 F01A          	lfsr	2,26
  8397  0002E2  0100               	movlb	0	; () banked
  8398  0002E4  51CE               	movf	_ic_ptr& (0+255),w,b
  8399  0002E6  26D9               	addwf	fsr2l,f,c
  8400  0002E8  0100               	movlb	0	; () banked
  8401  0002EA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8402  0002EC  22DA               	addwfc	fsr2h,f,c
  8403  0002EE  2ADF               	incf	indf2,f,c
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;my_i2c.c: 181: data_written = 1;
  8407  0002F0  0E01               	movlw	1
  8408  0002F2  0100               	movlb	0	; () banked
  8409  0002F4  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  8410                           
  8411                           ;my_i2c.c: 182: } else {
  8412  0002F6  D0CB               	goto	i2l353
  8413  0002F8                     L8:
  8414  0002F8  6EDF               	movwf	indf2,c
  8415  0002FA  D0C9               	goto	i2l353
  8416  0002FC                     i2l373:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;my_i2c.c: 189: {
  8420                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  8421  0002FC  A8C7               	btfss	4039,4,c	;volatile
  8422  0002FE  D05A               	goto	i2l3552
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;my_i2c.c: 193: ic_ptr->event_count++;
  8426  000300  0100               	movlb	0	; () banked
  8427  000302  EE20 F00B          	lfsr	2,11
  8428  000306  0100               	movlb	0	; () banked
  8429  000308  51CE               	movf	_ic_ptr& (0+255),w,b
  8430  00030A  26D9               	addwf	fsr2l,f,c
  8431  00030C  0100               	movlb	0	; () banked
  8432  00030E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8433  000310  22DA               	addwfc	fsr2h,f,c
  8434  000312  2ADF               	incf	indf2,f,c
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;my_i2c.c: 194: if (data_read) {
  8438  000314  0100               	movlb	0	; () banked
  8439  000316  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  8440  000318  B4D8               	btfsc	status,2,c
  8441  00031A  D048               	goto	i2l3548
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  8445  00031C  AAC7               	btfss	4039,5,c	;volatile
  8446  00031E  D025               	goto	i2l3546
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8450  000320  0100               	movlb	0	; () banked
  8451  000322  EE20 F00A          	lfsr	2,10
  8452  000326  0100               	movlb	0	; () banked
  8453  000328  51CE               	movf	_ic_ptr& (0+255),w,b
  8454  00032A  26D9               	addwf	fsr2l,f,c
  8455  00032C  0100               	movlb	0	; () banked
  8456  00032E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8457  000330  22DA               	addwfc	fsr2h,f,c
  8458  000332  50DF               	movf	indf2,w,c
  8459  000334  0100               	movlb	0	; () banked
  8460  000336  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8461  000338  0100               	movlb	0	; () banked
  8462  00033A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8463  00033C  0D01               	mullw	1
  8464  00033E  50F3               	movf	prodl,w,c
  8465  000340  0100               	movlb	0	; () banked
  8466  000342  25CE               	addwf	_ic_ptr& (0+255),w,b
  8467  000344  6ED9               	movwf	fsr2l,c
  8468  000346  50F4               	movf	prodh,w,c
  8469  000348  0100               	movlb	0	; () banked
  8470  00034A  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8471  00034C  6EDA               	movwf	fsr2h,c
  8472  00034E  0100               	movlb	0	; () banked
  8473  000350  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;my_i2c.c: 197: ic_ptr->buflen++;
  8477  000354  0100               	movlb	0	; () banked
  8478  000356  EE20 F00A          	lfsr	2,10
  8479  00035A  0100               	movlb	0	; () banked
  8480  00035C  51CE               	movf	_ic_ptr& (0+255),w,b
  8481  00035E  26D9               	addwf	fsr2l,f,c
  8482  000360  0100               	movlb	0	; () banked
  8483  000362  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8484  000364  22DA               	addwfc	fsr2h,f,c
  8485  000366  2ADF               	incf	indf2,f,c
  8486  000368  D021               	goto	i2l3548
  8487  00036A                     i2l3546:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;my_i2c.c: 200: ic_ptr->error_count++;
  8491  00036A  0100               	movlb	0	; () banked
  8492  00036C  EE20 F00E          	lfsr	2,14
  8493  000370  0100               	movlb	0	; () banked
  8494  000372  51CE               	movf	_ic_ptr& (0+255),w,b
  8495  000374  26D9               	addwf	fsr2l,f,c
  8496  000376  0100               	movlb	0	; () banked
  8497  000378  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8498  00037A  22DA               	addwfc	fsr2h,f,c
  8499  00037C  2ADF               	incf	indf2,f,c
  8500                           
  8501                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  8502  00037E  0100               	movlb	0	; () banked
  8503  000380  EE20 F00D          	lfsr	2,13
  8504  000384  0100               	movlb	0	; () banked
  8505  000386  51CE               	movf	_ic_ptr& (0+255),w,b
  8506  000388  26D9               	addwf	fsr2l,f,c
  8507  00038A  0100               	movlb	0	; () banked
  8508  00038C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8509  00038E  22DA               	addwfc	fsr2h,f,c
  8510  000390  0E06               	movlw	6
  8511  000392  6EDF               	movwf	indf2,c
  8512                           
  8513                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  8514  000394  0100               	movlb	0	; () banked
  8515  000396  EE20 F00C          	lfsr	2,12
  8516  00039A  0100               	movlb	0	; () banked
  8517  00039C  51CE               	movf	_ic_ptr& (0+255),w,b
  8518  00039E  26D9               	addwf	fsr2l,f,c
  8519  0003A0  0100               	movlb	0	; () banked
  8520  0003A2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8521  0003A4  22DA               	addwfc	fsr2h,f,c
  8522  0003A6  0E05               	movlw	5
  8523  0003A8  6EDF               	movwf	indf2,c
  8524  0003AA  D050               	goto	L10
  8525  0003AC                     i2l3548:
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;my_i2c.c: 205: msg_ready = 1;
  8529  0003AC  0E01               	movlw	1
  8530  0003AE  0100               	movlb	0	; () banked
  8531  0003B0  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8532                           
  8533                           ; BSR set to: 0
  8534  0003B2  D04C               	goto	L10
  8535  0003B4                     i2l3552:
  8536                           
  8537                           ; BSR set to: 0
  8538  0003B4  0100               	movlb	0	; () banked
  8539  0003B6  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  8540  0003B8  B4D8               	btfsc	status,2,c
  8541  0003BA  D069               	goto	i2l353
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;my_i2c.c: 209: ic_ptr->event_count++;
  8545  0003BC  0100               	movlb	0	; () banked
  8546  0003BE  EE20 F00B          	lfsr	2,11
  8547  0003C2  0100               	movlb	0	; () banked
  8548  0003C4  51CE               	movf	_ic_ptr& (0+255),w,b
  8549  0003C6  26D9               	addwf	fsr2l,f,c
  8550  0003C8  0100               	movlb	0	; () banked
  8551  0003CA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8552  0003CC  22DA               	addwfc	fsr2h,f,c
  8553  0003CE  2ADF               	incf	indf2,f,c
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  8557  0003D0  AAC7               	btfss	4039,5,c	;volatile
  8558  0003D2  D025               	goto	i2l381
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8562  0003D4  0100               	movlb	0	; () banked
  8563  0003D6  EE20 F00A          	lfsr	2,10
  8564  0003DA  0100               	movlb	0	; () banked
  8565  0003DC  51CE               	movf	_ic_ptr& (0+255),w,b
  8566  0003DE  26D9               	addwf	fsr2l,f,c
  8567  0003E0  0100               	movlb	0	; () banked
  8568  0003E2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8569  0003E4  22DA               	addwfc	fsr2h,f,c
  8570  0003E6  50DF               	movf	indf2,w,c
  8571  0003E8  0100               	movlb	0	; () banked
  8572  0003EA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8573  0003EC  0100               	movlb	0	; () banked
  8574  0003EE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8575  0003F0  0D01               	mullw	1
  8576  0003F2  50F3               	movf	prodl,w,c
  8577  0003F4  0100               	movlb	0	; () banked
  8578  0003F6  25CE               	addwf	_ic_ptr& (0+255),w,b
  8579  0003F8  6ED9               	movwf	fsr2l,c
  8580  0003FA  50F4               	movf	prodh,w,c
  8581  0003FC  0100               	movlb	0	; () banked
  8582  0003FE  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8583  000400  6EDA               	movwf	fsr2h,c
  8584  000402  0100               	movlb	0	; () banked
  8585  000404  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;my_i2c.c: 212: ic_ptr->buflen++;
  8589  000408  0100               	movlb	0	; () banked
  8590  00040A  EE20 F00A          	lfsr	2,10
  8591  00040E  0100               	movlb	0	; () banked
  8592  000410  51CE               	movf	_ic_ptr& (0+255),w,b
  8593  000412  26D9               	addwf	fsr2l,f,c
  8594  000414  0100               	movlb	0	; () banked
  8595  000416  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8596  000418  22DA               	addwfc	fsr2h,f,c
  8597  00041A  2ADF               	incf	indf2,f,c
  8598                           
  8599                           ;my_i2c.c: 213: } else {
  8600  00041C  D038               	goto	i2l353
  8601  00041E                     i2l381:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  8605  00041E  A4C7               	btfss	4039,2,c	;volatile
  8606  000420  D6C7               	goto	i2l3504
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  8610  000422  0100               	movlb	0	; () banked
  8611  000424  EE20 F00C          	lfsr	2,12
  8612  000428  0100               	movlb	0	; () banked
  8613  00042A  51CE               	movf	_ic_ptr& (0+255),w,b
  8614  00042C  26D9               	addwf	fsr2l,f,c
  8615  00042E  0100               	movlb	0	; () banked
  8616  000430  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8617  000432  22DA               	addwfc	fsr2h,f,c
  8618  000434  0E08               	movlw	8
  8619  000436  6EDF               	movwf	indf2,c
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;my_i2c.c: 216: msg_ready = 1;
  8623  000438  0E01               	movlw	1
  8624  00043A  0100               	movlb	0	; () banked
  8625  00043C  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8626  00043E                     L7:
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;my_i2c.c: 217: msg_to_send = 1;
  8630  00043E  0E01               	movlw	1
  8631  000440  0100               	movlb	0	; () banked
  8632  000442  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;my_i2c.c: 219: data_read = 0;
  8636  000444  0E00               	movlw	0
  8637  000446  0100               	movlb	0	; () banked
  8638  000448  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  8639                           
  8640                           ;my_i2c.c: 220: } else {
  8641  00044A  D021               	goto	i2l353
  8642  00044C                     L10:
  8643                           
  8644                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8645  00044C  0100               	movlb	0	; () banked
  8646  00044E  EE20 F00C          	lfsr	2,12
  8647  000452  0100               	movlb	0	; () banked
  8648  000454  51CE               	movf	_ic_ptr& (0+255),w,b
  8649  000456  26D9               	addwf	fsr2l,f,c
  8650  000458  0100               	movlb	0	; () banked
  8651  00045A  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8652  00045C  22DA               	addwfc	fsr2h,f,c
  8653  00045E  0E05               	movlw	5
  8654  000460  D74B               	goto	L8
  8655  000462                     i2l3574:
  8656                           
  8657                           ; BSR set to: 0
  8658  000462  0100               	movlb	0	; () banked
  8659  000464  EE20 F00C          	lfsr	2,12
  8660  000468  0100               	movlb	0	; () banked
  8661  00046A  51CE               	movf	_ic_ptr& (0+255),w,b
  8662  00046C  26D9               	addwf	fsr2l,f,c
  8663  00046E  0100               	movlb	0	; () banked
  8664  000470  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8665  000472  22DA               	addwfc	fsr2h,f,c
  8666  000474  50DF               	movf	indf2,w,c
  8667                           
  8668                           ; Switch size 1, requested type "space"
  8669                           ; Number of cases is 4, Range of values is 5 to 8
  8670                           ; switch strategies available:
  8671                           ; Name         Instructions Cycles
  8672                           ; simple_byte           13     7 (average)
  8673                           ;	Chosen strategy is simple_byte
  8674  000476  0A05               	xorlw	5	; case 5
  8675  000478  B4D8               	btfsc	status,2,c
  8676  00047A  D66B               	goto	i2l355
  8677  00047C  0A03               	xorlw	3	; case 6
  8678  00047E  B4D8               	btfsc	status,2,c
  8679  000480  D681               	goto	i2l359
  8680  000482  0A01               	xorlw	1	; case 7
  8681  000484  B4D8               	btfsc	status,2,c
  8682  000486  D73A               	goto	i2l373
  8683  000488  0A0F               	xorlw	15	; case 8
  8684  00048A  B4D8               	btfsc	status,2,c
  8685  00048C  D6F0               	goto	i2l3524
  8686  00048E                     i2l353:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;my_i2c.c: 230: }
  8690                           ;my_i2c.c: 233: if (data_read || data_written) {
  8691  00048E  0100               	movlb	0	; () banked
  8692  000490  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8693  000492  D004               	goto	i2l387
  8694                           
  8695                           ; BSR set to: 0
  8696  000494  0100               	movlb	0	; () banked
  8697  000496  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  8698  000498  B4D8               	btfsc	status,2,c
  8699  00049A  D002               	goto	i2l3580
  8700  00049C                     i2l387:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8704  00049C  A8C6               	btfss	4038,4,c	;volatile
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8708  00049E  88C6               	bsf	4038,4,c	;volatile
  8709  0004A0                     i2l3580:
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;my_i2c.c: 237: }
  8713                           ;my_i2c.c: 238: }
  8714                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8715  0004A0  0100               	movlb	0	; () banked
  8716  0004A2  EE20 F00A          	lfsr	2,10
  8717  0004A6  0100               	movlb	0	; () banked
  8718  0004A8  51CE               	movf	_ic_ptr& (0+255),w,b
  8719  0004AA  26D9               	addwf	fsr2l,f,c
  8720  0004AC  0100               	movlb	0	; () banked
  8721  0004AE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8722  0004B0  22DA               	addwfc	fsr2h,f,c
  8723  0004B2  0E08               	movlw	8
  8724  0004B4  64DF               	cpfsgt	indf2,c
  8725  0004B6  D023               	goto	i2l3586
  8726                           
  8727                           ; BSR set to: 0
  8728  0004B8  0100               	movlb	0	; () banked
  8729  0004BA  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8730  0004BC  D020               	goto	i2l3586
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8734  0004BE  0100               	movlb	0	; () banked
  8735  0004C0  EE20 F00C          	lfsr	2,12
  8736  0004C4  0100               	movlb	0	; () banked
  8737  0004C6  51CE               	movf	_ic_ptr& (0+255),w,b
  8738  0004C8  26D9               	addwf	fsr2l,f,c
  8739  0004CA  0100               	movlb	0	; () banked
  8740  0004CC  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8741  0004CE  22DA               	addwfc	fsr2h,f,c
  8742  0004D0  0E05               	movlw	5
  8743  0004D2  6EDF               	movwf	indf2,c
  8744                           
  8745                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8746  0004D4  0100               	movlb	0	; () banked
  8747  0004D6  EE20 F00E          	lfsr	2,14
  8748  0004DA  0100               	movlb	0	; () banked
  8749  0004DC  51CE               	movf	_ic_ptr& (0+255),w,b
  8750  0004DE  26D9               	addwf	fsr2l,f,c
  8751  0004E0  0100               	movlb	0	; () banked
  8752  0004E2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8753  0004E4  22DA               	addwfc	fsr2h,f,c
  8754  0004E6  2ADF               	incf	indf2,f,c
  8755                           
  8756                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8757  0004E8  0100               	movlb	0	; () banked
  8758  0004EA  EE20 F00D          	lfsr	2,13
  8759  0004EE  0100               	movlb	0	; () banked
  8760  0004F0  51CE               	movf	_ic_ptr& (0+255),w,b
  8761  0004F2  26D9               	addwf	fsr2l,f,c
  8762  0004F4  0100               	movlb	0	; () banked
  8763  0004F6  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8764  0004F8  22DA               	addwfc	fsr2h,f,c
  8765  0004FA  0E07               	movlw	7
  8766  0004FC  6EDF               	movwf	indf2,c
  8767  0004FE                     i2l3586:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;my_i2c.c: 245: }
  8771                           ;my_i2c.c: 247: if (msg_ready) {
  8772  0004FE  0100               	movlb	0	; () banked
  8773  000500  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8774  000502  B4D8               	btfsc	status,2,c
  8775  000504  D03E               	goto	i2l3594
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8779  000506  0100               	movlb	0	; () banked
  8780  000508  EE20 F00B          	lfsr	2,11
  8781  00050C  0100               	movlb	0	; () banked
  8782  00050E  51CE               	movf	_ic_ptr& (0+255),w,b
  8783  000510  26D9               	addwf	fsr2l,f,c
  8784  000512  0100               	movlb	0	; () banked
  8785  000514  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8786  000516  22DA               	addwfc	fsr2h,f,c
  8787  000518  0100               	movlb	0	; () banked
  8788  00051A  EE10 F00A          	lfsr	1,10
  8789  00051E  0100               	movlb	0	; () banked
  8790  000520  51CE               	movf	_ic_ptr& (0+255),w,b
  8791  000522  26E1               	addwf	fsr1l,f,c
  8792  000524  0100               	movlb	0	; () banked
  8793  000526  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8794  000528  22E2               	addwfc	fsr1h,f,c
  8795  00052A  50E7               	movf	indf1,w,c
  8796  00052C  0100               	movlb	0	; () banked
  8797  00052E  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8798  000530  0100               	movlb	0	; () banked
  8799  000532  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8800  000534  0D01               	mullw	1
  8801  000536  50F3               	movf	prodl,w,c
  8802  000538  0100               	movlb	0	; () banked
  8803  00053A  25CE               	addwf	_ic_ptr& (0+255),w,b
  8804  00053C  6EE1               	movwf	fsr1l,c
  8805  00053E  50F4               	movf	prodh,w,c
  8806  000540  0100               	movlb	0	; () banked
  8807  000542  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8808  000544  6EE2               	movwf	fsr1h,c
  8809  000546  CFDF FFE7          	movff	indf2,indf1
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8813  00054A  0E28               	movlw	40
  8814  00054C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8815  00054E  0100               	movlb	0	; () banked
  8816  000550  C0CF  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8817  000554  0100               	movlb	0	; () banked
  8818  000556  C0CE  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8819  00055A  0100               	movlb	0	; () banked
  8820  00055C  EE20 F00A          	lfsr	2,10
  8821  000560  0100               	movlb	0	; () banked
  8822  000562  51CE               	movf	_ic_ptr& (0+255),w,b
  8823  000564  26D9               	addwf	fsr2l,f,c
  8824  000566  0100               	movlb	0	; () banked
  8825  000568  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8826  00056A  22DA               	addwfc	fsr2h,f,c
  8827  00056C  50DF               	movf	indf2,w,c
  8828  00056E  0100               	movlb	0	; () banked
  8829  000570  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8830  000572  0100               	movlb	0	; () banked
  8831  000574  2985               	incf	??_i2c_int_handler& (0+255),w,b
  8832  000576  ECDB  F00F         	call	_ToMainHigh_sendmsg
  8833                           
  8834                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8835  00057A  0100               	movlb	0	; () banked
  8836  00057C  EE20 F00A          	lfsr	2,10
  8837  000580  D03E               	goto	L9
  8838  000582                     i2l3594:
  8839                           
  8840                           ; BSR set to: 0
  8841  000582  0100               	movlb	0	; () banked
  8842  000584  EE20 F00E          	lfsr	2,14
  8843  000588  0100               	movlb	0	; () banked
  8844  00058A  51CE               	movf	_ic_ptr& (0+255),w,b
  8845  00058C  26D9               	addwf	fsr2l,f,c
  8846  00058E  0100               	movlb	0	; () banked
  8847  000590  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8848  000592  22DA               	addwfc	fsr2h,f,c
  8849  000594  50DF               	movf	indf2,w,c
  8850  000596  B4D8               	btfsc	status,2,c
  8851  000598  D03A               	goto	i2l3602
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8855  00059A  0100               	movlb	0	; () banked
  8856  00059C  EE20 F00E          	lfsr	2,14
  8857  0005A0  0100               	movlb	0	; () banked
  8858  0005A2  51CE               	movf	_ic_ptr& (0+255),w,b
  8859  0005A4  26D9               	addwf	fsr2l,f,c
  8860  0005A6  0100               	movlb	0	; () banked
  8861  0005A8  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8862  0005AA  22DA               	addwfc	fsr2h,f,c
  8863  0005AC  50DF               	movf	indf2,w,c
  8864  0005AE  0100               	movlb	0	; () banked
  8865  0005B0  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  8866                           
  8867                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8868  0005B2  0100               	movlb	0	; () banked
  8869  0005B4  EE20 F00D          	lfsr	2,13
  8870  0005B8  0100               	movlb	0	; () banked
  8871  0005BA  51CE               	movf	_ic_ptr& (0+255),w,b
  8872  0005BC  26D9               	addwf	fsr2l,f,c
  8873  0005BE  0100               	movlb	0	; () banked
  8874  0005C0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8875  0005C2  22DA               	addwfc	fsr2h,f,c
  8876  0005C4  50DF               	movf	indf2,w,c
  8877  0005C6  0100               	movlb	0	; () banked
  8878  0005C8  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8879                           
  8880                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8881  0005CA  0100               	movlb	0	; () banked
  8882  0005CC  EE20 F00B          	lfsr	2,11
  8883  0005D0  0100               	movlb	0	; () banked
  8884  0005D2  51CE               	movf	_ic_ptr& (0+255),w,b
  8885  0005D4  26D9               	addwf	fsr2l,f,c
  8886  0005D6  0100               	movlb	0	; () banked
  8887  0005D8  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8888  0005DA  22DA               	addwfc	fsr2h,f,c
  8889  0005DC  50DF               	movf	indf2,w,c
  8890  0005DE  0100               	movlb	0	; () banked
  8891  0005E0  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8895  0005E2  0E29               	movlw	41
  8896  0005E4  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8897  0005E6  0100               	movlb	0	; () banked
  8898  0005E8  0E00               	movlw	high i2c_int_handler@error_buf
  8899  0005EA  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  8900  0005EC  0100               	movlb	0	; () banked
  8901  0005EE  0E86               	movlw	low i2c_int_handler@error_buf
  8902  0005F0  6E46               	movwf	ToMainHigh_sendmsg@data,c
  8903  0005F2  0E03               	movlw	3
  8904  0005F4  ECDB  F00F         	call	_ToMainHigh_sendmsg
  8905                           
  8906                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8907  0005F8  0100               	movlb	0	; () banked
  8908  0005FA  EE20 F00E          	lfsr	2,14
  8909  0005FE                     L9:
  8910  0005FE  0100               	movlb	0	; () banked
  8911  000600  51CE               	movf	_ic_ptr& (0+255),w,b
  8912  000602  26D9               	addwf	fsr2l,f,c
  8913  000604  0100               	movlb	0	; () banked
  8914  000606  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8915  000608  22DA               	addwfc	fsr2h,f,c
  8916  00060A  0E00               	movlw	0
  8917  00060C  6EDF               	movwf	indf2,c
  8918  00060E                     i2l3602:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;my_i2c.c: 257: }
  8922                           ;my_i2c.c: 258: if (msg_to_send) {
  8923  00060E  0100               	movlb	0	; () banked
  8924  000610  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8925  000612  B4D8               	btfsc	status,2,c
  8926  000614  0012               	return	
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8930  000616  0E2A               	movlw	42
  8931  000618  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8932  00061A  0100               	movlb	0	; () banked
  8933  00061C  C0CF  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8934  000620  0100               	movlb	0	; () banked
  8935  000622  C0CE  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8936  000626  0E00               	movlw	0
  8937  000628  ECDB  F00F         	call	_ToMainHigh_sendmsg
  8938                           
  8939                           ;my_i2c.c: 261: msg_to_send = 0;
  8940  00062C  0E00               	movlw	0
  8941  00062E  0100               	movlb	0	; () banked
  8942  000630  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8943  000632  0012               	return	
  8944  000634                     __end_of_i2c_int_handler:
  8945                           	opt stack 0
  8946                           pclatu	equ	0xFFB
  8947                           pclath	equ	0xFFA
  8948                           tblptru	equ	0xFF8
  8949                           tblptrh	equ	0xFF7
  8950                           tblptrl	equ	0xFF6
  8951                           tablat	equ	0xFF5
  8952                           prodh	equ	0xFF4
  8953                           prodl	equ	0xFF3
  8954                           intcon	equ	0xFF2
  8955                           postinc0	equ	0xFEE
  8956                           fsr0h	equ	0xFEA
  8957                           fsr0l	equ	0xFE9
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           bsr	equ	0xFE0
  8964                           indf2	equ	0xFDF
  8965                           postinc2	equ	0xFDE
  8966                           postdec2	equ	0xFDD
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8
  8970                           
  8971 ;; *************** function _handle_start *****************
  8972 ;; Defined at:
  8973 ;;		line 71 in file "src/my_i2c.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  data_read       1    wreg     unsigned char 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;  data_read       1   51[COMRAM] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;		None               void
  8980 ;; Registers used:
  8981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8987 ;;      Params:         0       0       0       0       0
  8988 ;;      Locals:         1       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0
  8990 ;;      Totals:         1       0       0       0       0
  8991 ;;Total ram usage:        1 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_i2c_int_handler
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text50
  9001  00125A                     __ptext50:
  9002                           	opt stack 0
  9003  00125A                     _handle_start:
  9004                           	opt stack 17
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;incstack = 0
  9008                           ;handle_start@data_read stored from wreg
  9009  00125A  6E34               	movwf	handle_start@data_read,c
  9010                           
  9011                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  9012  00125C  0100               	movlb	0	; () banked
  9013  00125E  EE20 F00B          	lfsr	2,11
  9014  001262  0100               	movlb	0	; () banked
  9015  001264  51CE               	movf	_ic_ptr& (0+255),w,b
  9016  001266  26D9               	addwf	fsr2l,f,c
  9017  001268  0100               	movlb	0	; () banked
  9018  00126A  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9019  00126C  22DA               	addwfc	fsr2h,f,c
  9020  00126E  0E01               	movlw	1
  9021  001270  6EDF               	movwf	indf2,c
  9022                           
  9023                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  9024  001272  0100               	movlb	0	; () banked
  9025  001274  EE20 F00A          	lfsr	2,10
  9026  001278  0100               	movlb	0	; () banked
  9027  00127A  51CE               	movf	_ic_ptr& (0+255),w,b
  9028  00127C  26D9               	addwf	fsr2l,f,c
  9029  00127E  0100               	movlb	0	; () banked
  9030  001280  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9031  001282  22DA               	addwfc	fsr2h,f,c
  9032  001284  0E00               	movlw	0
  9033  001286  6EDF               	movwf	indf2,c
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;my_i2c.c: 75: if (data_read) {
  9037  001288  5034               	movf	handle_start@data_read,w,c
  9038  00128A  B4D8               	btfsc	status,2,c
  9039  00128C  D03D               	goto	i2l2606
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  9043  00128E  AAC7               	btfss	4039,5,c	;volatile
  9044  001290  D021               	goto	i2l343
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  9048  001292  0100               	movlb	0	; () banked
  9049  001294  EE20 F00C          	lfsr	2,12
  9050  001298  0100               	movlb	0	; () banked
  9051  00129A  51CE               	movf	_ic_ptr& (0+255),w,b
  9052  00129C  26D9               	addwf	fsr2l,f,c
  9053  00129E  0100               	movlb	0	; () banked
  9054  0012A0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9055  0012A2  22DA               	addwfc	fsr2h,f,c
  9056  0012A4  0E05               	movlw	5
  9057  0012A6  6EDF               	movwf	indf2,c
  9058                           
  9059                           ;my_i2c.c: 80: ic_ptr->error_count++;
  9060  0012A8  0100               	movlb	0	; () banked
  9061  0012AA  EE20 F00E          	lfsr	2,14
  9062  0012AE  0100               	movlb	0	; () banked
  9063  0012B0  51CE               	movf	_ic_ptr& (0+255),w,b
  9064  0012B2  26D9               	addwf	fsr2l,f,c
  9065  0012B4  0100               	movlb	0	; () banked
  9066  0012B6  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9067  0012B8  22DA               	addwfc	fsr2h,f,c
  9068  0012BA  2ADF               	incf	indf2,f,c
  9069                           
  9070                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  9071  0012BC  0100               	movlb	0	; () banked
  9072  0012BE  EE20 F00D          	lfsr	2,13
  9073  0012C2  0100               	movlb	0	; () banked
  9074  0012C4  51CE               	movf	_ic_ptr& (0+255),w,b
  9075  0012C6  26D9               	addwf	fsr2l,f,c
  9076  0012C8  0100               	movlb	0	; () banked
  9077  0012CA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9078  0012CC  22DA               	addwfc	fsr2h,f,c
  9079  0012CE  0E05               	movlw	5
  9080  0012D0  6EDF               	movwf	indf2,c
  9081                           
  9082                           ;my_i2c.c: 82: } else {
  9083  0012D2  0012               	return	
  9084  0012D4                     i2l343:
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  9088  0012D4  A4C7               	btfss	4039,2,c	;volatile
  9089  0012D6  D00C               	goto	i2l2604
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  9093  0012D8  0100               	movlb	0	; () banked
  9094  0012DA  EE20 F00C          	lfsr	2,12
  9095  0012DE  0100               	movlb	0	; () banked
  9096  0012E0  51CE               	movf	_ic_ptr& (0+255),w,b
  9097  0012E2  26D9               	addwf	fsr2l,f,c
  9098  0012E4  0100               	movlb	0	; () banked
  9099  0012E6  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9100  0012E8  22DA               	addwfc	fsr2h,f,c
  9101  0012EA  0E08               	movlw	8
  9102  0012EC  6EDF               	movwf	indf2,c
  9103                           
  9104                           ;my_i2c.c: 85: } else {
  9105  0012EE  0012               	return	
  9106  0012F0                     i2l2604:
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  9110  0012F0  0100               	movlb	0	; () banked
  9111  0012F2  EE20 F00C          	lfsr	2,12
  9112  0012F6  0100               	movlb	0	; () banked
  9113  0012F8  51CE               	movf	_ic_ptr& (0+255),w,b
  9114  0012FA  26D9               	addwf	fsr2l,f,c
  9115  0012FC  0100               	movlb	0	; () banked
  9116  0012FE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9117  001300  22DA               	addwfc	fsr2h,f,c
  9118  001302  0E07               	movlw	7
  9119  001304  6EDF               	movwf	indf2,c
  9120  001306  0012               	return	
  9121  001308                     i2l2606:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  9125  001308  0100               	movlb	0	; () banked
  9126  00130A  EE20 F00C          	lfsr	2,12
  9127  00130E  0100               	movlb	0	; () banked
  9128  001310  51CE               	movf	_ic_ptr& (0+255),w,b
  9129  001312  26D9               	addwf	fsr2l,f,c
  9130  001314  0100               	movlb	0	; () banked
  9131  001316  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  9132  001318  22DA               	addwfc	fsr2h,f,c
  9133  00131A  0E06               	movlw	6
  9134  00131C  6EDF               	movwf	indf2,c
  9135  00131E  0012               	return	
  9136  001320                     __end_of_handle_start:
  9137                           	opt stack 0
  9138                           pclatu	equ	0xFFB
  9139                           pclath	equ	0xFFA
  9140                           tblptru	equ	0xFF8
  9141                           tblptrh	equ	0xFF7
  9142                           tblptrl	equ	0xFF6
  9143                           tablat	equ	0xFF5
  9144                           prodh	equ	0xFF4
  9145                           prodl	equ	0xFF3
  9146                           intcon	equ	0xFF2
  9147                           postinc0	equ	0xFEE
  9148                           fsr0h	equ	0xFEA
  9149                           fsr0l	equ	0xFE9
  9150                           wreg	equ	0xFE8
  9151                           indf1	equ	0xFE7
  9152                           postdec1	equ	0xFE5
  9153                           fsr1h	equ	0xFE2
  9154                           fsr1l	equ	0xFE1
  9155                           bsr	equ	0xFE0
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function _ToMainHigh_sendmsg *****************
  9164 ;; Defined at:
  9165 ;;		line 126 in file "src/messages.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  length          1    wreg     unsigned char 
  9168 ;;  msgtype         1   68[COMRAM] unsigned char 
  9169 ;;  data            2   69[COMRAM] PTR void 
  9170 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  length          1   71[COMRAM] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      char 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9182 ;;      Params:         3       0       0       0       0
  9183 ;;      Locals:         1       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0
  9185 ;;      Totals:         4       0       0       0       0
  9186 ;;Total ram usage:        4 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    2
  9189 ;; This function calls:
  9190 ;;		i2_send_msg
  9191 ;; This function is called by:
  9192 ;;		_InterruptHandlerHigh
  9193 ;;		_i2c_int_handler
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text51
  9198  001FB6                     __ptext51:
  9199                           	opt stack 0
  9200  001FB6                     _ToMainHigh_sendmsg:
  9201                           	opt stack 15
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;incstack = 0
  9205                           ;ToMainHigh_sendmsg@length stored from wreg
  9206  001FB6  6E48               	movwf	ToMainHigh_sendmsg@length,c
  9207                           
  9208                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9209                           ;	Return value of _ToMainHigh_sendmsg is never used
  9210  001FB8  0101               	movlb	1	; () banked
  9211  001FBA  0E01               	movlw	high _ToMainHigh_MQ
  9212  001FBC  6E3F               	movwf	i2send_msg@qptr+1,c
  9213  001FBE  0101               	movlb	1	; () banked
  9214  001FC0  0E02               	movlw	low _ToMainHigh_MQ
  9215  001FC2  6E3E               	movwf	i2send_msg@qptr,c
  9216  001FC4  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9217  001FC8  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9218  001FCC  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9219  001FD0  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9220  001FD4  EC90  F009         	call	i2_send_msg	;wreg free
  9221  001FD8  0012               	return	
  9222  001FDA                     __end_of_ToMainHigh_sendmsg:
  9223                           	opt stack 0
  9224                           pclatu	equ	0xFFB
  9225                           pclath	equ	0xFFA
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           intcon	equ	0xFF2
  9233                           postinc0	equ	0xFEE
  9234                           fsr0h	equ	0xFEA
  9235                           fsr0l	equ	0xFE9
  9236                           wreg	equ	0xFE8
  9237                           indf1	equ	0xFE7
  9238                           postdec1	equ	0xFE5
  9239                           fsr1h	equ	0xFE2
  9240                           fsr1l	equ	0xFE1
  9241                           bsr	equ	0xFE0
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function i2_send_msg *****************
  9250 ;; Defined at:
  9251 ;;		line 24 in file "src/messages.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  9254 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9255 ;;  length          1   63[COMRAM] unsigned char 
  9256 ;;  msgtype         1   64[COMRAM] unsigned char 
  9257 ;;  data            2   65[COMRAM] PTR void 
  9258 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9259 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9260 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  9263 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9264 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9265 ;;  send_msg        2    0[BANK0 ] unsigned int 
  9266 ;;  send_msg        1    2[BANK0 ] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      char 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9276 ;;      Params:         6       0       0       0       0
  9277 ;;      Locals:         0       5       0       0       0
  9278 ;;      Temps:          1       0       0       0       0
  9279 ;;      Totals:         7       5       0       0       0
  9280 ;;Total ram usage:       12 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    1
  9283 ;; This function calls:
  9284 ;;		i2_memcpy
  9285 ;; This function is called by:
  9286 ;;		_ToMainHigh_sendmsg
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text52
  9291  001320                     __ptext52:
  9292                           	opt stack 0
  9293  001320                     i2_send_msg:
  9294                           	opt stack 15
  9295                           
  9296                           ;messages.c: 25: unsigned char slot;
  9297                           ;messages.c: 27: msg *qmsg;
  9298                           ;messages.c: 28: size_t tlength = length;
  9299                           
  9300                           ;incstack = 0
  9301  001320  0100               	movlb	0	; () banked
  9302  001322  C040  F080         	movff	i2send_msg@length,i2send_msg@tlength
  9303  001326  0100               	movlb	0	; () banked
  9304  001328  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9308  00132A  EE20 F034          	lfsr	2,52
  9309  00132E  503E               	movf	i2send_msg@qptr,w,c
  9310  001330  26D9               	addwf	fsr2l,f,c
  9311  001332  503F               	movf	i2send_msg@qptr+1,w,c
  9312  001334  22DA               	addwfc	fsr2h,f,c
  9313  001336  50DF               	movf	indf2,w,c
  9314  001338  0100               	movlb	0	; () banked
  9315  00133A  6F82               	movwf	i2send_msg@slot& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9319  00133C  0100               	movlb	0	; () banked
  9320  00133E  5182               	movf	i2send_msg@slot& (0+255),w,b
  9321  001340  0D0D               	mullw	13
  9322  001342  50F3               	movf	prodl,w,c
  9323  001344  243E               	addwf	i2send_msg@qptr,w,c
  9324  001346  0100               	movlb	0	; () banked
  9325  001348  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  9326  00134A  50F4               	movf	prodh,w,c
  9327  00134C  203F               	addwfc	i2send_msg@qptr+1,w,c
  9328  00134E  0100               	movlb	0	; () banked
  9329  001350  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;messages.c: 41: if (qmsg->full != 0) {
  9333  001352  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9334  001356  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9335  00135A  50DF               	movf	indf2,w,c
  9336  00135C  B4D8               	btfsc	status,2,c
  9337  00135E  D002               	goto	i2l3450
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;messages.c: 42: return (-1);
  9341  001360  0EFF               	movlw	255
  9342  001362  0012               	return	
  9343  001364                     i2l3450:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;messages.c: 43: }
  9347                           ;messages.c: 46: qmsg->length = length;
  9348  001364  0100               	movlb	0	; () banked
  9349  001366  EE20 F001          	lfsr	2,1
  9350  00136A  0100               	movlb	0	; () banked
  9351  00136C  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  9352  00136E  26D9               	addwf	fsr2l,f,c
  9353  001370  0100               	movlb	0	; () banked
  9354  001372  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9355  001374  22DA               	addwfc	fsr2h,f,c
  9356  001376  C040  FFDF         	movff	i2send_msg@length,indf2
  9357                           
  9358                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9359  00137A  0100               	movlb	0	; () banked
  9360  00137C  EE20 F002          	lfsr	2,2
  9361  001380  0100               	movlb	0	; () banked
  9362  001382  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  9363  001384  26D9               	addwf	fsr2l,f,c
  9364  001386  0100               	movlb	0	; () banked
  9365  001388  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9366  00138A  22DA               	addwfc	fsr2h,f,c
  9367  00138C  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9371  001390  0E03               	movlw	3
  9372  001392  0100               	movlb	0	; () banked
  9373  001394  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  9374  001396  6E34               	movwf	i2memcpy@d1,c
  9375  001398  0E00               	movlw	0
  9376  00139A  0100               	movlb	0	; () banked
  9377  00139C  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9378  00139E  6E35               	movwf	i2memcpy@d1+1,c
  9379  0013A0  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9380  0013A4  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  9381  0013A8  C080  F038         	movff	i2send_msg@tlength,i2memcpy@n
  9382  0013AC  C081  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9383  0013B0  EC59  F00E         	call	i2_memcpy	;wreg free
  9384                           
  9385                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9386  0013B4  EE20 F034          	lfsr	2,52
  9387  0013B8  503E               	movf	i2send_msg@qptr,w,c
  9388  0013BA  26D9               	addwf	fsr2l,f,c
  9389  0013BC  503F               	movf	i2send_msg@qptr+1,w,c
  9390  0013BE  22DA               	addwfc	fsr2h,f,c
  9391  0013C0  EE10 F034          	lfsr	1,52
  9392  0013C4  503E               	movf	i2send_msg@qptr,w,c
  9393  0013C6  26E1               	addwf	fsr1l,f,c
  9394  0013C8  503F               	movf	i2send_msg@qptr+1,w,c
  9395  0013CA  22E2               	addwfc	fsr1h,f,c
  9396  0013CC  50E7               	movf	indf1,w,c
  9397  0013CE  6E44               	movwf	??i2_send_msg& (0+255),c
  9398  0013D0  2844               	incf	??i2_send_msg,w,c
  9399  0013D2  0B03               	andlw	3
  9400  0013D4  6EDF               	movwf	indf2,c
  9401                           
  9402                           ;messages.c: 59: qmsg->full = 1;
  9403  0013D6  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9404  0013DA  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9405  0013DE  0E01               	movlw	1
  9406  0013E0  6EDF               	movwf	indf2,c
  9407                           
  9408                           ;messages.c: 60: return (1);
  9409  0013E2  0E01               	movlw	1
  9410  0013E4  0012               	return	
  9411  0013E6                     __end_ofi2_send_msg:
  9412                           	opt stack 0
  9413                           pclatu	equ	0xFFB
  9414                           pclath	equ	0xFFA
  9415                           tblptru	equ	0xFF8
  9416                           tblptrh	equ	0xFF7
  9417                           tblptrl	equ	0xFF6
  9418                           tablat	equ	0xFF5
  9419                           prodh	equ	0xFF4
  9420                           prodl	equ	0xFF3
  9421                           intcon	equ	0xFF2
  9422                           postinc0	equ	0xFEE
  9423                           fsr0h	equ	0xFEA
  9424                           fsr0l	equ	0xFE9
  9425                           wreg	equ	0xFE8
  9426                           indf1	equ	0xFE7
  9427                           postdec1	equ	0xFE5
  9428                           fsr1h	equ	0xFE2
  9429                           fsr1l	equ	0xFE1
  9430                           bsr	equ	0xFE0
  9431                           indf2	equ	0xFDF
  9432                           postinc2	equ	0xFDE
  9433                           postdec2	equ	0xFDD
  9434                           fsr2h	equ	0xFDA
  9435                           fsr2l	equ	0xFD9
  9436                           status	equ	0xFD8
  9437                           
  9438 ;; *************** function i2_memcpy *****************
  9439 ;; Defined at:
  9440 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  d1              2   51[COMRAM] PTR void 
  9443 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9444 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9445 ;;		 -> main@msgbuffer(11), NULL(0), 
  9446 ;;  s1              2   53[COMRAM] PTR const void 
  9447 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9448 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9449 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9450 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9451 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9452 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9453 ;;  n               2   55[COMRAM] unsigned int 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  9456 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9457 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9458 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9459 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9460 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9461 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9462 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  9463 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9464 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9465 ;;		 -> main@msgbuffer(11), NULL(0), 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  2   51[COMRAM] PTR void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9475 ;;      Params:         6       0       0       0       0
  9476 ;;      Locals:         4       0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0
  9478 ;;      Totals:        10       0       0       0       0
  9479 ;;Total ram usage:       10 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		i2_send_msg
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text53
  9489  001CB2                     __ptext53:
  9490                           	opt stack 0
  9491  001CB2                     i2_memcpy:
  9492                           	opt stack 15
  9493                           
  9494                           ;incstack = 0
  9495  001CB2  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9496  001CB6  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  9497  001CBA  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9498  001CBE  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  9499  001CC2  D00E               	goto	i2l3436
  9500  001CC4                     i2l3430:
  9501  001CC4  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  9502  001CC8  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  9503  001CCC  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  9504  001CD0  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  9505  001CD4  CFDF FFE7          	movff	indf2,indf1
  9506  001CD8  4A3C               	infsnz	i2memcpy@s,f,c
  9507  001CDA  2A3D               	incf	i2memcpy@s+1,f,c
  9508  001CDC  4A3A               	infsnz	i2memcpy@d,f,c
  9509  001CDE  2A3B               	incf	i2memcpy@d+1,f,c
  9510  001CE0                     i2l3436:
  9511  001CE0  0638               	decf	i2memcpy@n,f,c
  9512  001CE2  A0D8               	btfss	status,0,c
  9513  001CE4  0639               	decf	i2memcpy@n+1,f,c
  9514  001CE6  2838               	incf	i2memcpy@n& (0+255),w,c
  9515  001CE8  B4D8               	btfsc	status,2,c
  9516  001CEA  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  9517  001CEC  B4D8               	btfsc	status,2,c
  9518                           
  9519                           ;	Return value of i2_memcpy is never used
  9520  001CEE  0012               	return	
  9521  001CF0  D7E9               	goto	i2l3430
  9522  001CF2                     __end_ofi2_memcpy:
  9523                           	opt stack 0
  9524                           pclatu	equ	0xFFB
  9525                           pclath	equ	0xFFA
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           intcon	equ	0xFF2
  9533                           postinc0	equ	0xFEE
  9534                           fsr0h	equ	0xFEA
  9535                           fsr0l	equ	0xFE9
  9536                           wreg	equ	0xFE8
  9537                           indf1	equ	0xFE7
  9538                           postdec1	equ	0xFE5
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           bsr	equ	0xFE0
  9542                           indf2	equ	0xFDF
  9543                           postinc2	equ	0xFDE
  9544                           postdec2	equ	0xFDD
  9545                           fsr2h	equ	0xFDA
  9546                           fsr2l	equ	0xFD9
  9547                           status	equ	0xFD8
  9548                           
  9549 ;; *************** function _SleepIfOkay *****************
  9550 ;; Defined at:
  9551 ;;		line 226 in file "src/messages.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;		None               void
  9558 ;; Registers used:
  9559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9565 ;;      Params:         0       0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0
  9568 ;;      Totals:         0       0       0       0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    2
  9572 ;; This function calls:
  9573 ;;		_enter_sleep_mode
  9574 ;;		i2_check_msg
  9575 ;;		i2_in_high_int
  9576 ;;		i2_in_low_int
  9577 ;; This function is called by:
  9578 ;;		_InterruptHandlerHigh
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text54
  9583  001BE4                     __ptext54:
  9584                           	opt stack 0
  9585  001BE4                     _SleepIfOkay:
  9586                           	opt stack 16
  9587                           
  9588                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9589                           
  9590                           ;incstack = 0
  9591  001BE4  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  9592  001BE6  D001               	goto	i2l2816
  9593  001BE8  0012               	return	
  9594  001BEA                     i2l2816:
  9595                           
  9596                           ;messages.c: 230: }
  9597                           ;messages.c: 233: if (in_low_int()) {
  9598  001BEA  EC63  F00F         	call	i2_in_low_int	;wreg free
  9599  001BEE  5037               	movf	?i2_in_low_int+1,w,c
  9600  001BF0  1036               	iorwf	?i2_in_low_int,w,c
  9601  001BF2  A4D8               	btfss	status,2,c
  9602  001BF4  0012               	return	
  9603                           
  9604                           ;messages.c: 235: }
  9605                           ;messages.c: 238: if (!in_high_int()) {
  9606                           
  9607                           ;messages.c: 234: return;
  9608  001BF6  EC41  F010         	call	i2_in_high_int	;wreg free
  9609  001BFA  5035               	movf	?i2_in_high_int+1,w,c
  9610  001BFC  1034               	iorwf	?i2_in_high_int,w,c
  9611  001BFE  B4D8               	btfsc	status,2,c
  9612  001C00  0012               	return	
  9613                           
  9614                           ;messages.c: 240: }
  9615                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9616                           
  9617                           ;messages.c: 239: return;
  9618  001C02  0101               	movlb	1	; () banked
  9619  001C04  0E01               	movlw	high _ToMainHigh_MQ
  9620  001C06  6E35               	movwf	i2check_msg@qptr+1,c
  9621  001C08  0101               	movlb	1	; () banked
  9622  001C0A  0E02               	movlw	low _ToMainHigh_MQ
  9623  001C0C  6E34               	movwf	i2check_msg@qptr,c
  9624  001C0E  ECED  F00F         	call	i2_check_msg	;wreg free
  9625  001C12  0900               	iorlw	0
  9626  001C14  A4D8               	btfss	status,2,c
  9627  001C16  0012               	return	
  9628                           
  9629                           ;messages.c: 247: }
  9630                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9631                           
  9632                           ;messages.c: 246: return;
  9633  001C18  0101               	movlb	1	; () banked
  9634  001C1A  0E01               	movlw	high _ToMainLow_MQ
  9635  001C1C  6E35               	movwf	i2check_msg@qptr+1,c
  9636  001C1E  0101               	movlb	1	; () banked
  9637  001C20  0E38               	movlw	low _ToMainLow_MQ
  9638  001C22  6E34               	movwf	i2check_msg@qptr,c
  9639  001C24  ECED  F00F         	call	i2_check_msg	;wreg free
  9640  001C28  0900               	iorlw	0
  9641  001C2A  B4D8               	btfsc	status,2,c
  9642                           
  9643                           ;messages.c: 250: }
  9644                           ;messages.c: 251: enter_sleep_mode();
  9645                           
  9646                           ;messages.c: 249: return;
  9647  001C2C  EC4B  F010         	call	_enter_sleep_mode	;wreg free
  9648  001C30  0012               	return	
  9649  001C32                     __end_of_SleepIfOkay:
  9650                           	opt stack 0
  9651                           pclatu	equ	0xFFB
  9652                           pclath	equ	0xFFA
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           intcon	equ	0xFF2
  9660                           postinc0	equ	0xFEE
  9661                           fsr0h	equ	0xFEA
  9662                           fsr0l	equ	0xFE9
  9663                           wreg	equ	0xFE8
  9664                           indf1	equ	0xFE7
  9665                           postdec1	equ	0xFE5
  9666                           fsr1h	equ	0xFE2
  9667                           fsr1l	equ	0xFE1
  9668                           bsr	equ	0xFE0
  9669                           indf2	equ	0xFDF
  9670                           postinc2	equ	0xFDE
  9671                           postdec2	equ	0xFDD
  9672                           fsr2h	equ	0xFDA
  9673                           fsr2l	equ	0xFD9
  9674                           status	equ	0xFD8
  9675                           
  9676 ;; *************** function i2_in_low_int *****************
  9677 ;; Defined at:
  9678 ;;		line 31 in file "src/interrupts.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;		None
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  2   53[COMRAM] int 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0, cstack
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9692 ;;      Params:         2       0       0       0       0
  9693 ;;      Locals:         0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0
  9695 ;;      Totals:         2       0       0       0       0
  9696 ;;Total ram usage:        2 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    1
  9699 ;; This function calls:
  9700 ;;		i2_in_high_int
  9701 ;; This function is called by:
  9702 ;;		_SleepIfOkay
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           	psect	text55
  9707  001EC6                     __ptext55:
  9708                           	opt stack 0
  9709  001EC6                     i2_in_low_int:
  9710                           	opt stack 16
  9711                           
  9712                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9713                           
  9714                           ;incstack = 0
  9715  001EC6  ACF2               	btfss	intcon,6,c	;volatile
  9716  001EC8  D005               	goto	i2l2648
  9717                           
  9718                           ;interrupts.c: 33: return (0);
  9719  001ECA  0E00               	movlw	0
  9720  001ECC  6E37               	movwf	?i2_in_low_int+1,c
  9721  001ECE  0E00               	movlw	0
  9722  001ED0  6E36               	movwf	?i2_in_low_int,c
  9723  001ED2  0012               	return	
  9724  001ED4                     i2l2648:
  9725  001ED4  EC41  F010         	call	i2_in_high_int	;wreg free
  9726  001ED8  5035               	movf	?i2_in_high_int+1,w,c
  9727  001EDA  1034               	iorwf	?i2_in_high_int,w,c
  9728  001EDC  B4D8               	btfsc	status,2,c
  9729  001EDE  D005               	goto	i2l2656
  9730                           
  9731                           ;interrupts.c: 35: return (0);
  9732  001EE0  0E00               	movlw	0
  9733  001EE2  6E37               	movwf	?i2_in_low_int+1,c
  9734  001EE4  0E00               	movlw	0
  9735  001EE6  6E36               	movwf	?i2_in_low_int,c
  9736  001EE8  0012               	return	
  9737  001EEA                     i2l2656:
  9738                           
  9739                           ;interrupts.c: 37: return (1);
  9740  001EEA  0E00               	movlw	0
  9741  001EEC  6E37               	movwf	?i2_in_low_int+1,c
  9742  001EEE  0E01               	movlw	1
  9743  001EF0  6E36               	movwf	?i2_in_low_int,c
  9744  001EF2  0012               	return	
  9745  001EF4                     __end_ofi2_in_low_int:
  9746                           	opt stack 0
  9747                           pclatu	equ	0xFFB
  9748                           pclath	equ	0xFFA
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           intcon	equ	0xFF2
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf1	equ	0xFE7
  9761                           postdec1	equ	0xFE5
  9762                           fsr1h	equ	0xFE2
  9763                           fsr1l	equ	0xFE1
  9764                           bsr	equ	0xFE0
  9765                           indf2	equ	0xFDF
  9766                           postinc2	equ	0xFDE
  9767                           postdec2	equ	0xFDD
  9768                           fsr2h	equ	0xFDA
  9769                           fsr2l	equ	0xFD9
  9770                           status	equ	0xFD8
  9771                           
  9772 ;; *************** function i2_in_high_int *****************
  9773 ;; Defined at:
  9774 ;;		line 23 in file "src/interrupts.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2   51[COMRAM] int 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9788 ;;      Params:         2       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0
  9791 ;;      Totals:         2       0       0       0       0
  9792 ;;Total ram usage:        2 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_SleepIfOkay
  9798 ;;		i2_in_low_int
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text56
  9803  002082                     __ptext56:
  9804                           	opt stack 0
  9805  002082                     i2_in_high_int:
  9806                           	opt stack 16
  9807                           
  9808                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9809                           
  9810                           ;incstack = 0
  9811  002082  0E00               	movlw	0
  9812  002084  AEF2               	btfss	intcon,7,c	;volatile
  9813  002086  0E01               	movlw	1
  9814  002088  6E34               	movwf	?i2_in_high_int,c
  9815  00208A  6A35               	clrf	?i2_in_high_int+1,c
  9816  00208C  0012               	return	
  9817  00208E                     __end_ofi2_in_high_int:
  9818                           	opt stack 0
  9819                           pclatu	equ	0xFFB
  9820                           pclath	equ	0xFFA
  9821                           tblptru	equ	0xFF8
  9822                           tblptrh	equ	0xFF7
  9823                           tblptrl	equ	0xFF6
  9824                           tablat	equ	0xFF5
  9825                           prodh	equ	0xFF4
  9826                           prodl	equ	0xFF3
  9827                           intcon	equ	0xFF2
  9828                           postinc0	equ	0xFEE
  9829                           fsr0h	equ	0xFEA
  9830                           fsr0l	equ	0xFE9
  9831                           wreg	equ	0xFE8
  9832                           indf1	equ	0xFE7
  9833                           postdec1	equ	0xFE5
  9834                           fsr1h	equ	0xFE2
  9835                           fsr1l	equ	0xFE1
  9836                           bsr	equ	0xFE0
  9837                           indf2	equ	0xFDF
  9838                           postinc2	equ	0xFDE
  9839                           postdec2	equ	0xFDD
  9840                           fsr2h	equ	0xFDA
  9841                           fsr2l	equ	0xFD9
  9842                           status	equ	0xFD8
  9843                           
  9844 ;; *************** function i2_check_msg *****************
  9845 ;; Defined at:
  9846 ;;		line 220 in file "src/messages.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  9849 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      unsigned char 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9861 ;;      Params:         2       0       0       0       0
  9862 ;;      Locals:         0       0       0       0       0
  9863 ;;      Temps:          1       0       0       0       0
  9864 ;;      Totals:         3       0       0       0       0
  9865 ;;Total ram usage:        3 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_SleepIfOkay
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text57
  9875  001FDA                     __ptext57:
  9876                           	opt stack 0
  9877  001FDA                     i2_check_msg:
  9878                           	opt stack 17
  9879                           
  9880                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9881                           
  9882                           ;incstack = 0
  9883  001FDA  EE20 F035          	lfsr	2,53
  9884  001FDE  5034               	movf	i2check_msg@qptr,w,c
  9885  001FE0  26D9               	addwf	fsr2l,f,c
  9886  001FE2  5035               	movf	i2check_msg@qptr+1,w,c
  9887  001FE4  22DA               	addwfc	fsr2h,f,c
  9888  001FE6  50DF               	movf	indf2,w,c
  9889  001FE8  6E36               	movwf	??i2_check_msg& (0+255),c
  9890  001FEA  5036               	movf	??i2_check_msg,w,c
  9891  001FEC  0D0D               	mullw	13
  9892  001FEE  50F3               	movf	prodl,w,c
  9893  001FF0  2434               	addwf	i2check_msg@qptr,w,c
  9894  001FF2  6ED9               	movwf	fsr2l,c
  9895  001FF4  50F4               	movf	prodh,w,c
  9896  001FF6  2035               	addwfc	i2check_msg@qptr+1,w,c
  9897  001FF8  6EDA               	movwf	fsr2h,c
  9898  001FFA  50DF               	movf	indf2,w,c
  9899  001FFC  0012               	return	
  9900  001FFE                     __end_ofi2_check_msg:
  9901                           	opt stack 0
  9902                           pclatu	equ	0xFFB
  9903                           pclath	equ	0xFFA
  9904                           tblptru	equ	0xFF8
  9905                           tblptrh	equ	0xFF7
  9906                           tblptrl	equ	0xFF6
  9907                           tablat	equ	0xFF5
  9908                           prodh	equ	0xFF4
  9909                           prodl	equ	0xFF3
  9910                           intcon	equ	0xFF2
  9911                           postinc0	equ	0xFEE
  9912                           fsr0h	equ	0xFEA
  9913                           fsr0l	equ	0xFE9
  9914                           wreg	equ	0xFE8
  9915                           indf1	equ	0xFE7
  9916                           postdec1	equ	0xFE5
  9917                           fsr1h	equ	0xFE2
  9918                           fsr1l	equ	0xFE1
  9919                           bsr	equ	0xFE0
  9920                           indf2	equ	0xFDF
  9921                           postinc2	equ	0xFDE
  9922                           postdec2	equ	0xFDD
  9923                           fsr2h	equ	0xFDA
  9924                           fsr2l	equ	0xFD9
  9925                           status	equ	0xFD8
  9926                           
  9927 ;; *************** function _enter_sleep_mode *****************
  9928 ;; Defined at:
  9929 ;;		line 202 in file "src/messages.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;		None               void
  9936 ;; Registers used:
  9937 ;;		None
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9943 ;;      Params:         0       0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_SleepIfOkay
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text58
  9957  002096                     __ptext58:
  9958                           	opt stack 0
  9959  002096                     _enter_sleep_mode:
  9960                           	opt stack 17
  9961                           
  9962                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9963                           
  9964                           ;incstack = 0
  9965  002096  8ED3               	bsf	4051,7,c	;volatile
  9966  002098  0003               	sleep		;# 
  9967  00209A  0012               	return	
  9968  00209C                     __end_of_enter_sleep_mode:
  9969                           	opt stack 0
  9970  0000                     pclatu	equ	0xFFB
  9971                           pclath	equ	0xFFA
  9972                           tblptru	equ	0xFF8
  9973                           tblptrh	equ	0xFF7
  9974                           tblptrl	equ	0xFF6
  9975                           tablat	equ	0xFF5
  9976                           prodh	equ	0xFF4
  9977                           prodl	equ	0xFF3
  9978                           intcon	equ	0xFF2
  9979                           postinc0	equ	0xFEE
  9980                           fsr0h	equ	0xFEA
  9981                           fsr0l	equ	0xFE9
  9982                           wreg	equ	0xFE8
  9983                           indf1	equ	0xFE7
  9984                           postdec1	equ	0xFE5
  9985                           fsr1h	equ	0xFE2
  9986                           fsr1l	equ	0xFE1
  9987                           bsr	equ	0xFE0
  9988                           indf2	equ	0xFDF
  9989                           postinc2	equ	0xFDE
  9990                           postdec2	equ	0xFDD
  9991                           fsr2h	equ	0xFDA
  9992                           fsr2l	equ	0xFD9
  9993                           status	equ	0xFD8
  9994                           pclatu	equ	0xFFB
  9995                           pclath	equ	0xFFA
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           intcon	equ	0xFF2
 10003                           postinc0	equ	0xFEE
 10004                           fsr0h	equ	0xFEA
 10005                           fsr0l	equ	0xFE9
 10006                           wreg	equ	0xFE8
 10007                           indf1	equ	0xFE7
 10008                           postdec1	equ	0xFE5
 10009                           fsr1h	equ	0xFE2
 10010                           fsr1l	equ	0xFE1
 10011                           bsr	equ	0xFE0
 10012                           indf2	equ	0xFDF
 10013                           postinc2	equ	0xFDE
 10014                           postdec2	equ	0xFDD
 10015                           fsr2h	equ	0xFDA
 10016                           fsr2l	equ	0xFD9
 10017                           status	equ	0xFD8
 10018                           
 10019                           	psect	rparam
 10020  0000                     pclatu	equ	0xFFB
 10021                           pclath	equ	0xFFA
 10022                           tblptru	equ	0xFF8
 10023                           tblptrh	equ	0xFF7
 10024                           tblptrl	equ	0xFF6
 10025                           tablat	equ	0xFF5
 10026                           prodh	equ	0xFF4
 10027                           prodl	equ	0xFF3
 10028                           intcon	equ	0xFF2
 10029                           postinc0	equ	0xFEE
 10030                           fsr0h	equ	0xFEA
 10031                           fsr0l	equ	0xFE9
 10032                           wreg	equ	0xFE8
 10033                           indf1	equ	0xFE7
 10034                           postdec1	equ	0xFE5
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           bsr	equ	0xFE0
 10038                           indf2	equ	0xFDF
 10039                           postinc2	equ	0xFDE
 10040                           postdec2	equ	0xFDD
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        41
    BSS         226
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     72      80
    BANK1           256     90     241
    BANK2           256      0     108
    BANK3           256      0       0

Pointer List with Targets:

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(BANK0[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(BANK0[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), stop@test(BANK0[2]), turn@test(BANK0[2]), 
		 -> moveDist@test(BANK0[2]), move@test(BANK0[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    stop@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    turn@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    moveDist@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    move@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), stop@test(BANK0[2]), 
		 -> turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(BANK0[2]), main@uc(BANK1[5]), 
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(BANK0[2]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK2[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK2[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_ToMainHigh_sendmsg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_turn
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _turn->_sendUARTarr
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _stop->_sendUARTarr
    _moveDist->_sendUARTarr
    _move->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0   30516
                                             70 BANK0      2     2      0
                                              0 BANK1     90    90      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                               _move
                           _moveDist
              _start_i2c_slave_reply
                               _stop
                     _timer0_lthread
                     _timer1_lthread
                               _turn
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    2541
                                             55 BANK0     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1951
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _turn                                                11     7      4    3830
                                             59 BANK0     11     7      4
                        _WriteTimer0
                                _abs
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     6      2    3569
                                             59 BANK0      8     6      2
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     6      2    3505
                                             59 BANK0      8     6      2
                        _WriteTimer0
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     263
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     196
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     2      2    3302
                                             59 BANK0      4     2      2
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDist                                             6     2      4    3372
                                             59 BANK0      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     260
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _move                                                 4     2      2    3046
                                             59 BANK0      4     2      2
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          4     2      2    2780
                                             55 BANK0      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2307
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1757
                                             39 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     218
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     262
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             39 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    3006
                                             34 COMRAM    17    17      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1113
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0     958
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3     935
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3902
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2204
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1602
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _move
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _moveDist
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _start_i2c_slave_reply
   _stop
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer0_lthread
     _WriteTimer0
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _turn
     _WriteTimer0
     _abs
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      6C       8       42.2%
BITBANK1           100      0       0      10        0.0%
BANK1              100     5A      F1       6       94.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     48      50       5       62.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F9       9        0.0%
DATA                 0      0     1F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Apr 22 11:47:08 2015

               main@uthread_data 0182         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1DA2  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1EC6  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l152 08A8                              l159 0964  
                            l526 1F66                              l550 1E20  
                            l527 1F68                              l552 1E36  
                            l553 1E38                              l591 1804  
                            l592 1806                              l593 1812  
                            l594 1814                              l587 17EA  
                            l659 1C68                              l839 203E  
           ?_FromMainLow_sendmsg 00B3  __size_of_uart_trans_int_handler 0056  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                            _abs 1C32                   _FromMainLow_MQ 0236  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 009D                 ??_init_uart_recv 009F  
                    main@command 017D                             ?_abs 009D  
                           l1145 19D4                             l3112 1A12  
                           l2330 1BAE                             l2402 1D22  
                           l3106 19F2                             l3140 0DAE  
                           l3118 1A32                             l3310 07F8  
                           l3302 07B8                             l2336 1BCE  
                           l2504 1D5E                             l2520 1956  
                           l3144 0DEE                             l3320 0856  
                           l2354 1020                             l3090 0F60  
                           l3082 0F2A                             l3330 0892  
                           l3314 0814                             l3306 07D4  
                           l3322 085C                             l3148 0E6A  
                           l3340 0924                             l2630 199C  
                           l3174 0C9A                             l3350 0988  
                           l3334 08C6                             l3318 0822  
                           l2632 19A2                             l3336 08DC  
                           l3344 0946                             l3360 09C6  
                           l3280 0704                             l2538 0AEC  
                           l2554 0BA6                             l2394 1D04  
                           l3194 145C                             l3370 0A2A  
                           l3346 096A                             l3354 0996  
                           l3338 08F2                             l3362 09E2  
                           l2580 1E78                             l2636 19C6  
                           l2628 1990                             l3348 097E  
                           l3356 09AC                             l3198 147C  
                           l3374 0A6E                             l3368 0A14  
                           l3288 0720                             l3298 0794  
                           l2944 1E22                             l2970 17EC  
                           l2962 17DA                             _LATA 000F89  
                           _LATB 000F8A                             u2447 2040  
                           u1945 0D60                             u1975 0C4C  
                           i1l52 0088                  _FromMainHigh_MQ 0200  
                  __CFG_FCMEN$ON 000000                             abs@a 009D  
                           _cmds 01DC                             _args 01C8  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 10BE  
                           _main 0634                             _move 1840  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           _stop 1A3A                             _turn 0ED6  
                    main@msgtype 0192                       i1_send_msg 1556  
                           pclat 000FFA                      i2_check_msg 1FDA  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0034                             start 00CE  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 1320  
      ToMainHigh_recvmsg@msgtype 00B5                   send_msg@length 00A9  
                          ??_abs 009F                      _Delay1KTCYx 203A  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00B6  
                          ?_main 0001                            ?_move 00BB  
   __size_ofi1_ToMainLow_sendmsg 0024                            _CMCON 000FB4  
                          ?_stop 00BB                            ?_turn 00BB  
                          _T0CON 000FD5                            _T1CON 000FCD  
          init_uart_lthread@uptr 009D                  __end_of___lwmod 19DE  
                          i1l426 1B3C                       i1memcpy@d1 0001  
                          i1l605 202A                            i1l429 1B14  
                          i2l343 12D4                            i2l353 048E  
                          i2l355 0152                            i2l381 041E  
                          i2l373 02FC                            i2l359 0184  
                          i2l387 049C                       i1memcpy@s1 0003  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _TRISA 000F92  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                sendUARTarr@length 00BA  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
              sendUARTarr@retval 00B9                  __end_of_in_main 1D6C  
                          _ready 01F0       ToMainLow_recvmsg@maxlength 00B9  
        i2c_configure_slave@addr 009D                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1AEA  
               __end_ofi1_memcpy 1CB2                 __end_ofi2_memcpy 1CF2  
                   ?_sendUARTarr 00B7                  __initialization 1B40  
     uart_trans_int_handler@data 001E                     __end_of_main 0A8C  
   uart_trans_int_handler@length 0022                     __end_of_move 18B4  
                   __end_of_stop 1A94                     __end_of_turn 0FD2  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 002E  
          __size_ofi2_in_low_int 002E                           ??_main 00C6  
                         ??_move 00BD                           ??_stop 00BD  
                         ??_turn 00BF                  send_msg@msgtype 00AA  
                  __activetblptr 000002                  send_msg@tlength 00AE  
     FromMainLow_sendmsg@msgtype 00B3             __end_of_handle_start 1320  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3222 0074                           i1l2426 158E  
                         i1l3228 007E                           i1l2374 1CA0  
                         i1l2368 1C84                           i1l2474 1104  
                         i1l2490 118C                           i1l2846 1716  
                         i1l2868 1B2E                       _OpenTimer0 1F46  
                     _OpenTimer1 1E0A                           i2l2604 12F0  
                         i2l3430 1CC4                           i2l2606 1308  
                 __CFG_WDTEN$OFF 000000                           i2l3504 01B0  
                         i2l3450 1364                           i2l3602 060E  
                         i2l3522 022E                           i2l3506 01DC  
                         i2l3436 1CE0                           i2l3524 026E  
                         i2l3516 0216                           i2l3620 1780  
                         i2l3614 1768                           i2l2656 1EEA  
                         i2l2648 1ED4                           i2l2816 1BEA  
                         i2l3552 03B4                           i2l3480 013C  
                         i2l3546 036A                           i2l3580 04A0  
                         i2l3548 03AC                           i2l3574 0462  
                         i2l3486 014A                           i2l3594 0582  
                         i2l3586 04FE      __end_of_i2c_configure_slave 1F46  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0ED6  
             timer0_lthread@temp 00C1               timer0_lthread@tptr 00BB  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1EC6  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00D2  
               OpenTimer0@config 009D                           _ic_ptr 00CE  
                      ??___lwmod 00A1                           _curCmd 0100  
                  main@msgbuffer 016E                 __end_of_init_i2c 191A  
               OpenTimer1@config 009D                           _memcpy 1B94  
                         clear_0 1B46                           clear_1 1B52  
                         _uc_ptr 0049                           main@ic 01AC  
                         main@uc 018D                 __end_of_recv_msg 0BAA  
    start_i2c_slave_reply@length 00A1                 __end_of_moveDist 1556  
                      ??_in_main 00A3                 __end_of_send_msg 10BE  
        i2c_int_handler@i2c_data 008B                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 009F         ToMainLow_recvmsg@msgtype 00B5  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 00B4  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 209C  
                     __accesstop 0080          __end_of__initialization 1B8A  
     __end_of_ToMainHigh_recvmsg 1DD8       __end_of_ToMainHigh_sendmsg 1FDA  
             ?_init_uart_lthread 009D      __end_of_init_timer0_lthread 125A  
    __end_of_init_timer1_lthread 169E              __end_of_SleepIfOkay 1C32  
                 __pcstackCOMRAM 0001                     __pidataBANK1 1EF4  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 009F  
             __size_of_check_msg 0032                __end_of_ReadUSART 203A  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 17B6  
    __end_of_InterruptHandlerLow 00CE                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 0102                 _enter_sleep_mode 2096  
            __size_ofi2_send_msg 00C6                    ReadUSART@data 0001  
              __end_of_OpenUSART 1840                    check_msg@qptr 009D  
      __end_of_init_uart_lthread 209E          ??_block_on_To_msgqueues 00A3  
           __size_of_init_queues 0056                       __pbssBANK0 00C8  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0049  
            i1_ToMainLow_sendmsg 1F92          __end_of_i2c_int_handler 0634  
                   ?i2_check_msg 0034               timer1_lthread@temp 00C1  
             timer1_lthread@tptr 00BB             __size_of_sendUARTarr 002E  
              recv_msg@maxlength 00A9                  recv_msg@msgtype 00AA  
                recv_msg@tlength 00B1            __size_of_handle_start 00C6  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 009F  
                        ?_memcpy 009D                 WriteTimer1@timer 009F  
                  ??_WriteTimer0 009F                    ??_WriteTimer1 009F  
        __size_of_timer0_lthread 0114             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0114              timer0_lthread@F5147 00CA  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 2082  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1E0A                        ?_init_i2c 009D  
                    _SleepIfOkay 1BE4                        ?_recv_msg 00A7  
                     _in_low_int 1CF2                     _handle_start 125A  
                      ?_moveDist 00BB                          __Hparam 0000  
                      ?_send_msg 00A7                          __Lparam 0000  
    __end_of_FromMainLow_recvmsg 1F92      __end_of_FromMainLow_sendmsg 1E6A  
               init_uart_recv@uc 009D                          ___lwmod 197E  
                __CFG_STVREN$OFF 000000                          __pcinit 1B40  
                __size_of_memcpy 0050                       _init_queue 191A  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 0032  
                        __ptext0 0634                          __ptext1 13E6  
                        __ptext2 1E3C                          __ptext3 0ED6  
                        __ptext4 1C32                          __ptext5 0BAA  
                        __ptext6 0CBE                          __ptext7 197E  
                        __ptext8 204E                          __ptext9 1A3A  
              uart_lthread@index 00C0                        _T0CONbits 000FD5  
                        _in_main 1D30                        _T1CONbits 000FCD  
                   __size_of_abs 0040              __end_of_WriteTimer0 2060  
            __end_of_WriteTimer1 2072                   ?i2_in_high_int 0034  
 __end_of_uart_trans_int_handler 1B40                          main@cmd 0179  
                        main@arg 017F       __size_of_init_uart_lthread 0002  
                 __pintcode_body 1732             end_of_initialization 1B8A  
 __size_of_uart_recv_int_handler 0094                          memcpy@d 00A3  
                        memcpy@n 00A1                          memcpy@s 00A5  
  __end_of_uart_recv_int_handler 1732                       ??_init_i2c 009F  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 0089  
                  __Lmediumconst 0000                          int_func 1732  
                   ??i1_send_msg 0011                    ?_uart_lthread 00B7  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                     ??_recv_msg 00AE                       ??_moveDist 00BF  
                   ??i2_send_msg 0044                       ??_send_msg 00AD  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
             __end_ofi1_recv_msg 1190               __end_ofi1_send_msg 1600  
                      _TRISCbits 000F94               __end_ofi2_send_msg 13E6  
                 ??_uart_lthread 00BF                        _TXSTAbits 000FAC  
                     main@length 0193                      ?_in_low_int 009F  
                     main@valuec 0181            _start_i2c_slave_reply 0DD2  
   __size_of_i2c_configure_slave 0028             __size_ofi2_check_msg 0024  
       __end_of_enter_sleep_mode 209C               _ToMainHigh_recvmsg 1DA2  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1FB6  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                 _timer0_lthread 0CBE                      ?_init_queue 009D  
                      i2memcpy@d 003A                      _WriteTimer0 204E  
                    _WriteTimer1 2060                        i2memcpy@n 0038  
                      i2memcpy@s 003C                   _timer1_lthread 0BAA  
                 __end_of_memcpy 1BE4                _enable_interrupts 208E  
           __size_of_Delay1KTCYx 0014              ?_ToMainHigh_recvmsg 00B5  
                ??i2_in_high_int 0036         i2c_int_handler@data_read 008E  
            ?_ToMainHigh_sendmsg 0045          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 1B40  
                  ??_in_high_int 009F                        _ReadUSART 201C  
                    __end_of_abs 1C72                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 00B6  
            ??_enable_interrupts 009D                     ??_OpenTimer0 009D  
                   ??_OpenTimer1 009D   __size_of_block_on_To_msgqueues 005C  
  __end_of_block_on_To_msgqueues 1A3A                        _OpenUSART 17BE  
   __end_of_InterruptHandlerHigh 17BE                       init_i2c@ic 009D  
           ??_ToMainHigh_recvmsg 00B9             ??_ToMainHigh_sendmsg 0048  
         __end_of_timer0_lthread 0DD2         i2c_int_handler@error_buf 0086  
                    __pdataBANK1 01C8           __end_of_timer1_lthread 0CBE  
      __end_of_enable_interrupts 2096                         ??_memcpy 00A3  
   __size_of_init_timer0_lthread 00CA     __size_of_init_timer1_lthread 009E  
             __end_of_OpenTimer0 1F6C               __end_of_OpenTimer1 1E3C  
       i2c_int_handler@msg_ready 008D              timer1_lthread@F5087 00CC  
                    __pbssCOMRAM 004B                       ?_ReadUSART 0001  
                  ??_init_queues 00A0                    __pcstackBANK0 0080  
                  __pcstackBANK1 016E              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 009D              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 009D         ToMainLow_sendmsg@msgtype 00B3  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 2082  
                     ?_OpenUSART 009D                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 00B7                     _ToMainLow_MQ 0138  
            __size_of_init_queue 0064                   _init_uart_recv 1FFE  
                      _check_msg 1DD8                        __pnvBANK0 00CE  
         ?_start_i2c_slave_reply 009D                __size_of_init_i2c 0066  
                  ??_sendUARTarr 00B9                     recv_msg@data 00AC  
                   recv_msg@qmsg 00B3                     recv_msg@slot 00B0  
                   recv_msg@qptr 00A7                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_moveDist 00B4  
              __size_of_send_msg 00EC                  ?_timer0_lthread 00BB  
                       ?___lwmod 009D                  ?_timer1_lthread 00BB  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00B7  
           __end_of_uart_lthread 14A2       i2c_int_handler@msg_to_send 008C  
                       ?_in_main 00A1                WriteTimer0@timer0 009D  
              WriteTimer1@timer1 009D       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 00B9          init_timer0_lthread@tptr 009D  
          ToMainLow_sendmsg@data 00B4              i1recv_msg@maxlength 000D  
               uart_lthread@uptr 00B7           __end_of_init_uart_recv 201C  
            __end_of_init_queues 1AEA                  i2check_msg@qptr 0034  
                     ?_check_msg 009D                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                     moveDist@dist 00BD  
                  ?i2_in_low_int 0036                     moveDist@test 00BF  
                   moveDist@tptr 00BB                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1FB6  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1E98  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0026     __size_of_FromMainLow_sendmsg 002E  
                       i1_memcpy 1C72             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1CB2  
                    _in_high_int 2072                     send_msg@data 00AB  
            _i2c_configure_slave 1F1E                     send_msg@qmsg 00B1  
                   send_msg@slot 00B0                     send_msg@qptr 00A7  
                sendUARTarr@data 00B7            uart_lthread@msgbuffer 00BD  
                      copy_data0 1B7E                  ?_init_uart_recv 009D  
                    ??_OpenUSART 009F                  OpenUSART@config 00A2  
                 ??i2_in_low_int 0038            _uart_recv_int_handler 169E  
                   ??_in_low_int 00A1                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001         __size_of_i2c_int_handler 0562  
             ??_enter_sleep_mode 0034                 __size_of___lwmod 0060  
                   ??_init_queue 009F                     ?_WriteTimer0 009D  
                   ?_WriteTimer1 009D          ToMainLow_sendmsg@length 00B6  
              main@t0thread_data 0194            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 0041  
    ToMainHigh_recvmsg@maxlength 00B9                i2send_msg@tlength 0080  
                       _main$709 017E          init_timer1_lthread@tptr 009D  
                    _init_queues 1A94               __end_of_in_low_int 1D30  
                       __ptext10 0DD2                         __ptext11 14A2  
                       __ptext20 1190                         __ptext12 2060  
                       __ptext21 1A94                         __ptext13 1840  
                       __ptext30 1DD8                         __ptext22 191A  
                       __ptext14 1E6A                         __ptext31 203A  
                       __ptext23 18B4                         __ptext15 1E98  
                       __ptext40 1AEA                         __ptext32 1D6C  
                       __ptext24 1F1E                         __ptext16 0FD2  
                       __ptext41 1F6C                         __ptext33 1DA2  
                       __ptext25 208E                         __ptext17 1FFE  
                       __ptext50 125A                         __ptext42 10BE  
                       __ptext34 0A8C                         __ptext26 19DE  
                       __ptext18 209C                         __ptext51 1FB6  
                       __ptext43 169E                         __ptext35 1B94  
                       __ptext27 1D30                         __ptext19 1600  
                       __ptext52 1320                         __ptext44 1F92  
                       __ptext36 17BE                         __ptext28 1CF2  
                       __ptext53 1CB2                         __ptext45 1556  
                       __ptext37 1E0A                         __ptext29 2072  
                       __ptext54 1BE4                         __ptext46 1C72  
                       __ptext38 1F46                         __ptext55 1EC6  
                       __ptext47 201C                         __ptext56 2082  
                       __ptext57 1FDA                         __ptext49 00D2  
                       __ptext58 2096                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 00BB              _init_timer0_lthread 1190  
             uart_lthread@status 00BF                         _init_i2c 18B4  
            _init_timer1_lthread 1600                    __size_of_main 0458  
                  __size_of_move 0074                    __size_of_stop 005A  
                  ??i2_check_msg 0036                    __size_of_turn 00FC  
              main@t1thread_data 01A0                      ??_check_msg 009F  
             __end_of_init_queue 197E             __size_of_SleepIfOkay 004E  
                       _recv_msg 0A8C                         _moveDist 14A2  
          ??_i2c_configure_slave 009D                         _send_msg 0FD2  
                    _sendUARTarr 1E6A                   init_queue@qptr 009D  
                       _turn$998 00C0                         _turn$999 00C2  
          __size_of_uart_lthread 00BC    uart_trans_int_handler@msgtype 0020  
                  ??_Delay1KTCYx 009D                         main@baud 017B  
           ?_init_timer0_lthread 009D              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 009D                        stop@F5239 00C8  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 009D  
                       memcpy@d1 009D                         memcpy@s1 009F  
          __end_ofi2_in_high_int 208E     i2c_int_handler@overrun_error 008A  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 009F                 ___lwmod@dividend 009D  
         ?_uart_recv_int_handler 0001                         move@test 00BD  
                       move@tptr 00BB                        turn@angle 00BD  
                   _uart_lthread 13E6                   main@UARTConfig 017C  
          _block_on_To_msgqueues 19DE                    ?_handle_start 0001  
               ??_timer0_lthread 00BD      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 0024                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00BD                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0048  
            __end_ofi2_check_msg 1FFE            ??_init_timer0_lthread 009F  
          ??_init_timer1_lthread 009F           ??_InterruptHandlerHigh 008F  
              _ToMainLow_recvmsg 1D6C                         stop@test 00BD  
              _ToMainLow_sendmsg 1E98                         stop@tptr 00BB  
             main@last_reg_recvd 018C                  ___lwmod@divisor 009F  
           __end_ofi2_in_low_int 1EF4               ?_ToMainLow_recvmsg 00B5  
            __end_of_Delay1KTCYx 204E                ??_i2c_int_handler 0085  
                ___lwmod@counter 00A1               ?_ToMainLow_sendmsg 00B3  
                       turn@test 00C4                         turn@tptr 00BB  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0042            ??_InterruptHandlerLow 0023  
            ??_ToMainLow_recvmsg 00B9                   i2send_msg@qmsg 0083  
                 i2send_msg@slot 0082                   i2send_msg@qptr 003E  
            ??_ToMainLow_sendmsg 00B6              _FromMainLow_recvmsg 1F6C  
                 ??_handle_start 0034              _FromMainLow_sendmsg 1E3C  
                   _USART_Status 004C  
