

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Apr 22 15:35:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     _ADCON1	set	4033
    77  0000                     _CMCON	set	4020
    78  0000                     _INTCONbits	set	4082
    79  0000                     _IPR1bits	set	3999
    80  0000                     _LATA	set	3977
    81  0000                     _LATB	set	3978
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _PORTA	set	3968
    88  0000                     _PORTB	set	3969
    89  0000                     _RCONbits	set	4048
    90  0000                     _RCREG	set	4014
    91  0000                     _RCSTA	set	4011
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _SPBRG	set	4015
    94  0000                     _SPBRGH	set	4016
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON1bits	set	4038
    99  0000                     _SSPCON2	set	4037
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _SSPSTAT	set	4039
   102  0000                     _SSPSTATbits	set	4039
   103  0000                     _T0CON	set	4053
   104  0000                     _T0CONbits	set	4053
   105  0000                     _T1CON	set	4045
   106  0000                     _T1CONbits	set	4045
   107  0000                     _TMR0H	set	4055
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR1H	set	4047
   110  0000                     _TMR1L	set	4046
   111  0000                     _TRISA	set	3986
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TXREG	set	4013
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117                           
   118                           	psect	nvCOMRAM
   119  000049                     __pnvCOMRAM:
   120                           	opt stack 0
   121  000049                     _uc_ptr:
   122                           	opt stack 0
   123  000049                     	ds	2
   124                           
   125                           	psect	nvBANK0
   126  0000CE                     __pnvBANK0:
   127                           	opt stack 0
   128  0000CE                     _ic_ptr:
   129                           	opt stack 0
   130  0000CE                     	ds	2
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  001C32                     __pcinit:
   136                           	opt stack 0
   137  001C32                     start_initialization:
   138                           	opt stack 0
   139  001C32                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK2 (54 bytes)
   143  001C32  EE02  F000         	lfsr	0,__pbssBANK2
   144  001C36  0E36               	movlw	54
   145  001C38                     clear_0:
   146  001C38  6AEE               	clrf	postinc0,c
   147  001C3A  06E8               	decf	wreg,f,c
   148  001C3C  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to BANK1 (162 bytes)
   151  001C3E  EE01  F000         	lfsr	0,__pbssBANK1
   152  001C42  0EA2               	movlw	162
   153  001C44                     clear_1:
   154  001C44  6AEE               	clrf	postinc0,c
   155  001C46  06E8               	decf	wreg,f,c
   156  001C48  E1FD               	bnz	clear_1
   157                           
   158                           ; Clear objects allocated to BANK0 (6 bytes)
   159  001C4A  0100               	movlb	0
   160  001C4C  6BCD               	clrf	(__pbssBANK0+5)& (0+255),b
   161  001C4E  6BCC               	clrf	(__pbssBANK0+4)& (0+255),b
   162  001C50  6BCB               	clrf	(__pbssBANK0+3)& (0+255),b
   163  001C52  6BCA               	clrf	(__pbssBANK0+2)& (0+255),b
   164  001C54  6BC9               	clrf	(__pbssBANK0+1)& (0+255),b
   165  001C56  6BC8               	clrf	__pbssBANK0& (0+255),b
   166                           
   167                           ; Clear objects allocated to COMRAM (2 bytes)
   168  001C58  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   169  001C5A  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   170  001C5C                     end_of_initialization:
   171                           	opt stack 0
   172  001C5C                     __end_of__initialization:
   173                           	opt stack 0
   174  001C5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  001C5E  6EF8               	movwf	tblptru,c
   176  001C60  0100               	movlb	0
   177  001C62  EF1A  F003         	goto	_main	;jump to C main() function
   178                           tblptru	equ	0xFF8
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           
   182                           	psect	bssCOMRAM
   183  00004B                     __pbssCOMRAM:
   184                           	opt stack 0
   185  00004B                     _MQ_Main_Willing_to_block:
   186                           	opt stack 0
   187  00004B                     	ds	1
   188  00004C                     _USART_Status:
   189                           	opt stack 0
   190  00004C                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssBANK0
   196  0000C8                     __pbssBANK0:
   197                           	opt stack 0
   198  0000C8                     stop@F5241:
   199                           	opt stack 0
   200  0000C8                     	ds	2
   201  0000CA                     timer0_lthread@F5147:
   202                           	opt stack 0
   203  0000CA                     	ds	2
   204  0000CC                     timer1_lthread@F5087:
   205                           	opt stack 0
   206  0000CC                     	ds	2
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	bssBANK1
   212  000100                     __pbssBANK1:
   213                           	opt stack 0
   214  000100                     _FromMainLow_MQ:
   215                           	opt stack 0
   216  000100                     	ds	54
   217  000136                     _ToMainHigh_MQ:
   218                           	opt stack 0
   219  000136                     	ds	54
   220  00016C                     _ToMainLow_MQ:
   221                           	opt stack 0
   222  00016C                     	ds	54
   223                           tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	bssBANK2
   228  000200                     __pbssBANK2:
   229                           	opt stack 0
   230  000200                     _FromMainHigh_MQ:
   231                           	opt stack 0
   232  000200                     	ds	54
   233                           tblptru	equ	0xFF8
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           
   237                           	psect	cstackBANK1
   238  0001A2                     __pcstackBANK1:
   239                           	opt stack 0
   240  0001A2                     main@msgbuffer:
   241                           	opt stack 0
   242                           
   243                           ; 11 bytes @ 0x0
   244  0001A2                     	ds	11
   245  0001AD                     main@baud:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0xB
   249  0001AD                     	ds	1
   250  0001AE                     main@UARTConfig:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0xC
   254  0001AE                     	ds	1
   255  0001AF                     main@command:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0xD
   259  0001AF                     	ds	1
   260  0001B0                     main@uthread_data:
   261                           	opt stack 0
   262                           
   263                           ; 10 bytes @ 0xE
   264  0001B0                     	ds	10
   265  0001BA                     main@valuec:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x18
   269  0001BA                     	ds	1
   270  0001BB                     main@last_reg_recvd:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x19
   274  0001BB                     	ds	1
   275  0001BC                     main@uc:
   276                           	opt stack 0
   277                           
   278                           ; 5 bytes @ 0x1A
   279  0001BC                     	ds	5
   280  0001C1                     main@msgtype:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x1F
   284  0001C1                     	ds	1
   285  0001C2                     main@length:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x20
   289  0001C2                     	ds	1
   290  0001C3                     main@t1thread_data:
   291                           	opt stack 0
   292                           
   293                           ; 12 bytes @ 0x21
   294  0001C3                     	ds	12
   295  0001CF                     main@t0thread_data:
   296                           	opt stack 0
   297                           
   298                           ; 12 bytes @ 0x2D
   299  0001CF                     	ds	12
   300  0001DB                     main@ic:
   301                           	opt stack 0
   302                           
   303                           ; 28 bytes @ 0x39
   304  0001DB                     	ds	28
   305                           tblptru	equ	0xFF8
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	cstackBANK0
   310  000080                     __pcstackBANK0:
   311                           	opt stack 0
   312  000080                     i2send_msg@tlength:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x0
   316  000080                     	ds	2
   317  000082                     i2send_msg@slot:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x2
   321  000082                     	ds	1
   322  000083                     i2send_msg@qmsg:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x3
   326  000083                     	ds	2
   327  000085                     ??_i2c_int_handler:
   328                           
   329                           ; 0 bytes @ 0x5
   330  000085                     	ds	1
   331  000086                     i2c_int_handler@error_buf:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x6
   335  000086                     	ds	3
   336  000089                     i2c_int_handler@data_written:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x9
   340  000089                     	ds	1
   341  00008A                     i2c_int_handler@overrun_error:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xA
   345  00008A                     	ds	1
   346  00008B                     i2c_int_handler@i2c_data:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0xB
   350  00008B                     	ds	1
   351  00008C                     i2c_int_handler@msg_to_send:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0xC
   355  00008C                     	ds	1
   356  00008D                     i2c_int_handler@msg_ready:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0xD
   360  00008D                     	ds	1
   361  00008E                     i2c_int_handler@data_read:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0xE
   365  00008E                     	ds	1
   366  00008F                     ??_InterruptHandlerHigh:
   367                           
   368                           ; 0 bytes @ 0xF
   369  00008F                     	ds	14
   370  00009D                     ?_abs:
   371                           	opt stack 0
   372  00009D                     ?_in_high_int:
   373                           	opt stack 0
   374  00009D                     ?___lwmod:
   375                           	opt stack 0
   376  00009D                     i2c_configure_slave@addr:
   377                           	opt stack 0
   378  00009D                     OpenTimer0@config:
   379                           	opt stack 0
   380  00009D                     OpenTimer1@config:
   381                           	opt stack 0
   382  00009D                     Delay1KTCYx@unit:
   383                           	opt stack 0
   384  00009D                     init_queue@qptr:
   385                           	opt stack 0
   386  00009D                     check_msg@qptr:
   387                           	opt stack 0
   388  00009D                     start_i2c_slave_reply@msg:
   389                           	opt stack 0
   390  00009D                     init_i2c@ic:
   391                           	opt stack 0
   392  00009D                     init_uart_recv@uc:
   393                           	opt stack 0
   394  00009D                     init_timer0_lthread@tptr:
   395                           	opt stack 0
   396  00009D                     init_timer1_lthread@tptr:
   397                           	opt stack 0
   398  00009D                     init_uart_lthread@uptr:
   399                           	opt stack 0
   400  00009D                     WriteTimer0@timer0:
   401                           	opt stack 0
   402  00009D                     WriteTimer1@timer1:
   403                           	opt stack 0
   404  00009D                     OpenUSART@spbrg:
   405                           	opt stack 0
   406  00009D                     abs@a:
   407                           	opt stack 0
   408  00009D                     ___lwmod@dividend:
   409                           	opt stack 0
   410  00009D                     memcpy@d1:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x1D
   414  00009D                     	ds	2
   415  00009F                     ??_OpenUSART:
   416  00009F                     ??_start_i2c_slave_reply:
   417  00009F                     ??_abs:
   418  00009F                     ??_check_msg:
   419  00009F                     ?_in_low_int:
   420                           	opt stack 0
   421  00009F                     init_queue@i:
   422                           	opt stack 0
   423  00009F                     WriteTimer0@timer:
   424                           	opt stack 0
   425  00009F                     WriteTimer1@timer:
   426                           	opt stack 0
   427  00009F                     ___lwmod@divisor:
   428                           	opt stack 0
   429  00009F                     memcpy@s1:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x1F
   433  00009F                     	ds	1
   434  0000A0                     
   435                           ; 0 bytes @ 0x20
   436  0000A0                     	ds	1
   437  0000A1                     ?_in_main:
   438                           	opt stack 0
   439  0000A1                     start_i2c_slave_reply@length:
   440                           	opt stack 0
   441  0000A1                     ___lwmod@counter:
   442                           	opt stack 0
   443  0000A1                     memcpy@n:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x21
   447  0000A1                     	ds	1
   448  0000A2                     OpenUSART@config:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x22
   452  0000A2                     	ds	1
   453  0000A3                     memcpy@d:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x23
   457  0000A3                     	ds	2
   458  0000A5                     memcpy@s:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x25
   462  0000A5                     	ds	2
   463  0000A7                     send_msg@qptr:
   464                           	opt stack 0
   465  0000A7                     recv_msg@qptr:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x27
   469  0000A7                     	ds	2
   470  0000A9                     send_msg@length:
   471                           	opt stack 0
   472  0000A9                     recv_msg@maxlength:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x29
   476  0000A9                     	ds	1
   477  0000AA                     send_msg@msgtype:
   478                           	opt stack 0
   479  0000AA                     recv_msg@msgtype:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x2A
   483  0000AA                     	ds	1
   484  0000AB                     send_msg@data:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x2B
   488  0000AB                     	ds	1
   489  0000AC                     recv_msg@data:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x2C
   493  0000AC                     	ds	1
   494  0000AD                     ??_send_msg:
   495                           
   496                           ; 0 bytes @ 0x2D
   497  0000AD                     	ds	1
   498  0000AE                     ??_recv_msg:
   499  0000AE                     send_msg@tlength:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x2E
   503  0000AE                     	ds	2
   504  0000B0                     send_msg@slot:
   505                           	opt stack 0
   506  0000B0                     recv_msg@slot:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x30
   510  0000B0                     	ds	1
   511  0000B1                     send_msg@qmsg:
   512                           	opt stack 0
   513  0000B1                     recv_msg@tlength:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x31
   517  0000B1                     	ds	2
   518  0000B3                     ToMainLow_sendmsg@msgtype:
   519                           	opt stack 0
   520  0000B3                     FromMainLow_sendmsg@msgtype:
   521                           	opt stack 0
   522  0000B3                     recv_msg@qmsg:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x33
   526  0000B3                     	ds	1
   527  0000B4                     ToMainLow_sendmsg@data:
   528                           	opt stack 0
   529  0000B4                     FromMainLow_sendmsg@data:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x34
   533  0000B4                     	ds	1
   534  0000B5                     ToMainLow_recvmsg@msgtype:
   535                           	opt stack 0
   536  0000B5                     ToMainHigh_recvmsg@msgtype:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x35
   540  0000B5                     	ds	1
   541  0000B6                     ToMainLow_sendmsg@length:
   542                           	opt stack 0
   543  0000B6                     FromMainLow_sendmsg@length:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x36
   547  0000B6                     	ds	1
   548  0000B7                     ToMainLow_recvmsg@data:
   549                           	opt stack 0
   550  0000B7                     ToMainHigh_recvmsg@data:
   551                           	opt stack 0
   552  0000B7                     sendUARTarr@data:
   553                           	opt stack 0
   554  0000B7                     uart_lthread@uptr:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x37
   558  0000B7                     	ds	2
   559  0000B9                     ToMainLow_recvmsg@maxlength:
   560                           	opt stack 0
   561  0000B9                     ToMainHigh_recvmsg@maxlength:
   562                           	opt stack 0
   563  0000B9                     sendUARTarr@retval:
   564                           	opt stack 0
   565  0000B9                     uart_lthread@msgtype:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x39
   569  0000B9                     	ds	1
   570  0000BA                     sendUARTarr@length:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x3A
   574  0000BA                     	ds	1
   575  0000BB                     moveDist@tptr:
   576                           	opt stack 0
   577  0000BB                     turn@tptr:
   578                           	opt stack 0
   579  0000BB                     stop@tptr0:
   580                           	opt stack 0
   581  0000BB                     timer0_lthread@tptr:
   582                           	opt stack 0
   583  0000BB                     timer1_lthread@tptr:
   584                           	opt stack 0
   585  0000BB                     uart_lthread@length:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x3B
   589  0000BB                     	ds	2
   590  0000BD                     ??_timer0_lthread:
   591  0000BD                     ??_timer1_lthread:
   592  0000BD                     moveDist@dist:
   593                           	opt stack 0
   594  0000BD                     turn@angle:
   595                           	opt stack 0
   596  0000BD                     stop@tptr1:
   597                           	opt stack 0
   598  0000BD                     uart_lthread@msgbuffer:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x3D
   602  0000BD                     	ds	2
   603  0000BF                     ??_turn:
   604  0000BF                     uart_lthread@status:
   605                           	opt stack 0
   606  0000BF                     moveDist@test:
   607                           	opt stack 0
   608  0000BF                     stop@test:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x3F
   612  0000BF                     	ds	1
   613  0000C0                     _turn$979:
   614                           	opt stack 0
   615  0000C0                     uart_lthread@index:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x40
   619  0000C0                     	ds	1
   620  0000C1                     timer0_lthread@temp:
   621                           	opt stack 0
   622  0000C1                     timer1_lthread@temp:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x41
   626  0000C1                     	ds	1
   627  0000C2                     _turn$980:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x42
   631  0000C2                     	ds	2
   632  0000C4                     turn@test:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x44
   636  0000C4                     	ds	2
   637  0000C6                     ??_main:
   638                           
   639                           ; 0 bytes @ 0x46
   640  0000C6                     	ds	2
   641                           tblptru	equ	0xFF8
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           
   645                           	psect	cstackCOMRAM
   646  000001                     __pcstackCOMRAM:
   647                           	opt stack 0
   648  000001                     ReadUSART@data:
   649                           	opt stack 0
   650  000001                     i1memcpy@d1:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x0
   654  000001                     	ds	2
   655  000003                     i1memcpy@s1:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x2
   659  000003                     	ds	2
   660  000005                     i1memcpy@n:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x4
   664  000005                     	ds	2
   665  000007                     i1memcpy@d:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x6
   669  000007                     	ds	2
   670  000009                     i1memcpy@s:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x8
   674  000009                     	ds	2
   675  00000B                     i1send_msg@qptr:
   676                           	opt stack 0
   677  00000B                     i1recv_msg@qptr:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0xA
   681  00000B                     	ds	2
   682  00000D                     i1send_msg@length:
   683                           	opt stack 0
   684  00000D                     i1recv_msg@maxlength:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0xC
   688  00000D                     	ds	1
   689  00000E                     i1send_msg@msgtype:
   690                           	opt stack 0
   691  00000E                     i1recv_msg@msgtype:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0xD
   695  00000E                     	ds	1
   696  00000F                     i1send_msg@data:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0xE
   700  00000F                     	ds	1
   701  000010                     i1recv_msg@data:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0xF
   705  000010                     	ds	1
   706  000011                     ??i1_send_msg:
   707                           
   708                           ; 0 bytes @ 0x10
   709  000011                     	ds	1
   710  000012                     ??i1_recv_msg:
   711  000012                     i1send_msg@tlength:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x11
   715  000012                     	ds	2
   716  000014                     i1send_msg@slot:
   717                           	opt stack 0
   718  000014                     i1recv_msg@slot:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x13
   722  000014                     	ds	1
   723  000015                     i1send_msg@qmsg:
   724                           	opt stack 0
   725  000015                     i1recv_msg@tlength:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x14
   729  000015                     	ds	2
   730  000017                     i1ToMainLow_sendmsg@msgtype:
   731                           	opt stack 0
   732  000017                     i1recv_msg@qmsg:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x16
   736  000017                     	ds	1
   737  000018                     i1ToMainLow_sendmsg@data:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x17
   741  000018                     	ds	1
   742  000019                     FromMainLow_recvmsg@msgtype:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x18
   746  000019                     	ds	1
   747  00001A                     i1ToMainLow_sendmsg@length:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x19
   751  00001A                     	ds	1
   752  00001B                     ??_uart_recv_int_handler:
   753  00001B                     FromMainLow_recvmsg@data:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x1A
   757  00001B                     	ds	2
   758  00001D                     FromMainLow_recvmsg@maxlength:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x1C
   762  00001D                     	ds	1
   763  00001E                     uart_trans_int_handler@data:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x1D
   767  00001E                     	ds	2
   768  000020                     uart_trans_int_handler@msgtype:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x1F
   772  000020                     	ds	1
   773  000021                     uart_trans_int_handler@curIndex:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x20
   777  000021                     	ds	1
   778  000022                     uart_trans_int_handler@length:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x21
   782  000022                     	ds	1
   783  000023                     ??_InterruptHandlerLow:
   784                           
   785                           ; 0 bytes @ 0x22
   786  000023                     	ds	17
   787  000034                     ?i2_in_high_int:
   788                           	opt stack 0
   789  000034                     handle_start@data_read:
   790                           	opt stack 0
   791  000034                     i2check_msg@qptr:
   792                           	opt stack 0
   793  000034                     i2memcpy@d1:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x33
   797  000034                     	ds	2
   798  000036                     ??i2_check_msg:
   799  000036                     ?i2_in_low_int:
   800                           	opt stack 0
   801  000036                     i2memcpy@s1:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x35
   805  000036                     	ds	2
   806  000038                     i2memcpy@n:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x37
   810  000038                     	ds	2
   811  00003A                     i2memcpy@d:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x39
   815  00003A                     	ds	2
   816  00003C                     i2memcpy@s:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x3B
   820  00003C                     	ds	2
   821  00003E                     i2send_msg@qptr:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x3D
   825  00003E                     	ds	2
   826  000040                     i2send_msg@length:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x3F
   830  000040                     	ds	1
   831  000041                     i2send_msg@msgtype:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x40
   835  000041                     	ds	1
   836  000042                     i2send_msg@data:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x41
   840  000042                     	ds	2
   841  000044                     ??i2_send_msg:
   842                           
   843                           ; 0 bytes @ 0x43
   844  000044                     	ds	1
   845  000045                     ToMainHigh_sendmsg@msgtype:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x44
   849  000045                     	ds	1
   850  000046                     ToMainHigh_sendmsg@data:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x45
   854  000046                     	ds	2
   855  000048                     ToMainHigh_sendmsg@length:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x47
   859  000048                     	ds	1
   860                           tblptru	equ	0xFF8
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 32 in file "src/main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  valuec          1   24[BANK1 ] unsigned char 
   874 ;;  command         1   13[BANK1 ] unsigned char 
   875 ;;  ic             28   57[BANK1 ] struct __i2c_comm
   876 ;;  t0thread_dat   12   45[BANK1 ] struct __timer0_thread_s
   877 ;;  t1thread_dat   12   33[BANK1 ] struct __timer1_thread_s
   878 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   879 ;;  uthread_data   10   14[BANK1 ] struct __uart_thread_str
   880 ;;  uc              5   26[BANK1 ] struct __uart_comm
   881 ;;  length          1   32[BANK1 ] char 
   882 ;;  msgtype         1   31[BANK1 ] unsigned char 
   883 ;;  last_reg_rec    1   25[BANK1 ] unsigned char 
   884 ;;  UARTConfig      1   12[BANK1 ] unsigned char 
   885 ;;  baud            1   11[BANK1 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;		None               void
   888 ;; Registers used:
   889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0      85       0       0
   897 ;;      Temps:          0       2       0       0       0
   898 ;;      Totals:         0       2      85       0       0
   899 ;;Total ram usage:       87 bytes
   900 ;; Hardware stack levels required when called:   15
   901 ;; This function calls:
   902 ;;		_OpenTimer0
   903 ;;		_OpenTimer1
   904 ;;		_OpenUSART
   905 ;;		_ToMainHigh_recvmsg
   906 ;;		_ToMainLow_recvmsg
   907 ;;		_block_on_To_msgqueues
   908 ;;		_enable_interrupts
   909 ;;		_i2c_configure_slave
   910 ;;		_init_i2c
   911 ;;		_init_queues
   912 ;;		_init_timer0_lthread
   913 ;;		_init_timer1_lthread
   914 ;;		_init_uart_lthread
   915 ;;		_init_uart_recv
   916 ;;		_moveDist
   917 ;;		_start_i2c_slave_reply
   918 ;;		_stop
   919 ;;		_timer0_lthread
   920 ;;		_timer1_lthread
   921 ;;		_turn
   922 ;;		_uart_lthread
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text0
   929  000634                     __ptext0:
   930                           	opt stack 0
   931  000634                     _main:
   932                           	opt stack 15
   933                           
   934                           ;main.c: 33: signed char length;
   935                           ;main.c: 34: unsigned char msgtype;
   936                           ;main.c: 35: unsigned char last_reg_recvd;
   937                           ;main.c: 36: unsigned char baud, UARTConfig;
   938                           ;main.c: 37: uart_comm uc;
   939                           ;main.c: 38: i2c_comm ic;
   940                           ;main.c: 39: unsigned char msgbuffer[10 + 1];
   941                           ;main.c: 40: uart_thread_struct uthread_data;
   942                           ;main.c: 41: timer1_thread_struct t1thread_data;
   943                           ;main.c: 42: timer0_thread_struct t0thread_data;
   944                           ;main.c: 45: PORTA = 0x0;
   945                           
   946                           ;incstack = 0
   947  000634  0E00               	movlw	0
   948  000636  6E80               	movwf	3968,c	;volatile
   949                           
   950                           ;main.c: 46: LATA = 0x0;
   951  000638  0E00               	movlw	0
   952  00063A  6E89               	movwf	3977,c	;volatile
   953                           
   954                           ;main.c: 47: ADCON1 = 0x0F;
   955  00063C  0E0F               	movlw	15
   956  00063E  6EC1               	movwf	4033,c	;volatile
   957                           
   958                           ;main.c: 48: CMCON = 0x07;
   959  000640  0E07               	movlw	7
   960  000642  6EB4               	movwf	4020,c	;volatile
   961                           
   962                           ;main.c: 49: TRISA = 0x00;
   963  000644  0E00               	movlw	0
   964  000646  6E92               	movwf	3986,c	;volatile
   965                           
   966                           ;main.c: 52: PORTB = 0x0;
   967  000648  0E00               	movlw	0
   968  00064A  6E81               	movwf	3969,c	;volatile
   969                           
   970                           ;main.c: 53: LATB = 0x0;
   971  00064C  0E00               	movlw	0
   972  00064E  6E8A               	movwf	3978,c	;volatile
   973                           
   974                           ;main.c: 54: TRISB = 0xFF;
   975  000650  6893               	setf	3987,c	;volatile
   976                           
   977                           ;main.c: 56: OSCCON = 0x82;
   978  000652  0E82               	movlw	130
   979  000654  6ED3               	movwf	4051,c	;volatile
   980                           
   981                           ;main.c: 57: OSCTUNEbits.PLLEN = 1;
   982  000656  8C9B               	bsf	3995,6,c	;volatile
   983                           
   984                           ;main.c: 60: init_uart_recv(&uc);
   985  000658  0101               	movlb	1	; () banked
   986  00065A  0E01               	movlw	high main@uc
   987  00065C  0100               	movlb	0	; () banked
   988  00065E  6F9E               	movwf	(init_uart_recv@uc+1)& (0+255),b
   989  000660  0101               	movlb	1	; () banked
   990  000662  0EBC               	movlw	low main@uc
   991  000664  0100               	movlb	0	; () banked
   992  000666  6F9D               	movwf	init_uart_recv@uc& (0+255),b
   993  000668  EC31  F00F         	call	_init_uart_recv	;wreg free
   994                           
   995                           ;main.c: 63: init_i2c(&ic);
   996  00066C  0101               	movlb	1	; () banked
   997  00066E  0E01               	movlw	high main@ic
   998  000670  0100               	movlb	0	; () banked
   999  000672  6F9E               	movwf	(init_i2c@ic+1)& (0+255),b
  1000  000674  0101               	movlb	1	; () banked
  1001  000676  0EDB               	movlw	low main@ic
  1002  000678  0100               	movlb	0	; () banked
  1003  00067A  6F9D               	movwf	init_i2c@ic& (0+255),b
  1004  00067C  ECDE  F00B         	call	_init_i2c	;wreg free
  1005                           
  1006                           ;main.c: 66: init_timer1_lthread(&t1thread_data);
  1007  000680  0101               	movlb	1	; () banked
  1008  000682  0E01               	movlw	high main@t1thread_data
  1009  000684  0100               	movlb	0	; () banked
  1010  000686  6F9E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1011  000688  0101               	movlb	1	; () banked
  1012  00068A  0EC3               	movlw	low main@t1thread_data
  1013  00068C  0100               	movlb	0	; () banked
  1014  00068E  6F9D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1015  000690  ECBE  F00A         	call	_init_timer1_lthread	;wreg free
  1016                           
  1017                           ;main.c: 69: init_timer0_lthread(&t0thread_data);
  1018  000694  0101               	movlb	1	; () banked
  1019  000696  0E01               	movlw	high main@t0thread_data
  1020  000698  0100               	movlb	0	; () banked
  1021  00069A  6F9E               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1022  00069C  0101               	movlb	1	; () banked
  1023  00069E  0ECF               	movlw	low main@t0thread_data
  1024  0006A0  0100               	movlb	0	; () banked
  1025  0006A2  6F9D               	movwf	init_timer0_lthread@tptr& (0+255),b
  1026  0006A4  EC2A  F008         	call	_init_timer0_lthread	;wreg free
  1027                           
  1028                           ;main.c: 72: init_uart_lthread(&uthread_data);
  1029  0006A8  0101               	movlb	1	; () banked
  1030  0006AA  0E01               	movlw	high main@uthread_data
  1031  0006AC  0100               	movlb	0	; () banked
  1032  0006AE  6F9E               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1033  0006B0  0101               	movlb	1	; () banked
  1034  0006B2  0EB0               	movlw	low main@uthread_data
  1035  0006B4  0100               	movlb	0	; () banked
  1036  0006B6  6F9D               	movwf	init_uart_lthread@uptr& (0+255),b
  1037  0006B8  EC80  F00F         	call	_init_uart_lthread	;wreg free
  1038                           
  1039                           ;main.c: 75: init_queues();
  1040  0006BC  ECA1  F00C         	call	_init_queues	;wreg free
  1041                           
  1042                           ;main.c: 79: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1043  0006C0  0EAF               	movlw	175
  1044  0006C2  ECD5  F00E         	call	_OpenTimer0
  1045                           
  1046                           ;main.c: 80: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1047  0006C6  0EC7               	movlw	199
  1048  0006C8  EC4C  F00E         	call	_OpenTimer1
  1049                           
  1050                           ;main.c: 81: T0CONbits.TMR0ON = 0;;
  1051  0006CC  9ED5               	bcf	4053,7,c	;volatile
  1052                           
  1053                           ;main.c: 82: T1CONbits.TMR1ON = 0;;
  1054  0006CE  90CD               	bcf	4045,0,c	;volatile
  1055                           
  1056                           ;main.c: 85: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111
      +                          ;
  1057  0006D0  0EEC               	movlw	236
  1058  0006D2  0101               	movlb	1	; () banked
  1059  0006D4  6FAE               	movwf	main@UARTConfig& (0+255),b
  1060                           
  1061                           ; BSR set to: 1
  1062                           ;main.c: 86: baud = 77;
  1063  0006D6  0E4D               	movlw	77
  1064  0006D8  0101               	movlb	1	; () banked
  1065  0006DA  6FAD               	movwf	main@baud& (0+255),b
  1066                           
  1067                           ; BSR set to: 1
  1068                           ;main.c: 87: OpenUSART(UARTConfig,baud);
  1069  0006DC  0101               	movlb	1	; () banked
  1070  0006DE  0100               	movlb	0	; () banked
  1071  0006E0  C1AD  F09D         	movff	main@baud,OpenUSART@spbrg
  1072  0006E4  0100               	movlb	0	; () banked
  1073  0006E6  6B9E               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1074  0006E8  0101               	movlb	1	; () banked
  1075  0006EA  51AE               	movf	main@UARTConfig& (0+255),w,b
  1076  0006EC  EC9D  F00B         	call	_OpenUSART
  1077                           
  1078                           ;main.c: 92: IPR1bits.TMR1IP = 0;
  1079  0006F0  909F               	bcf	3999,0,c	;volatile
  1080                           
  1081                           ;main.c: 94: IPR1bits.RCIP = 0;
  1082  0006F2  9A9F               	bcf	3999,5,c	;volatile
  1083                           
  1084                           ;main.c: 96: IPR1bits.TXIP = 0;
  1085  0006F4  989F               	bcf	3999,4,c	;volatile
  1086                           
  1087                           ;main.c: 98: IPR1bits.SSPIP = 1;
  1088  0006F6  869F               	bsf	3999,3,c	;volatile
  1089                           
  1090                           ;main.c: 101: i2c_configure_slave(0x9A);
  1091  0006F8  0E9A               	movlw	154
  1092  0006FA  ECC1  F00E         	call	_i2c_configure_slave
  1093                           
  1094                           ;main.c: 104: PIE1bits.SSPIE = 1;
  1095  0006FE  869D               	bsf	3997,3,c	;volatile
  1096                           
  1097                           ;main.c: 108: enable_interrupts();
  1098  000700  EC79  F00F         	call	_enable_interrupts	;wreg free
  1099  000704                     l125:
  1100                           
  1101                           ;main.c: 114: block_on_To_msgqueues();
  1102  000704  EC73  F00C         	call	_block_on_To_msgqueues	;wreg free
  1103                           
  1104                           ;main.c: 117: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1105  000708  0101               	movlb	1	; () banked
  1106  00070A  0E01               	movlw	high main@msgtype
  1107  00070C  0100               	movlb	0	; () banked
  1108  00070E  6FB6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1109  000710  0101               	movlb	1	; () banked
  1110  000712  0EC1               	movlw	low main@msgtype
  1111  000714  0100               	movlb	0	; () banked
  1112  000716  6FB5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1113  000718  0101               	movlb	1	; () banked
  1114  00071A  0E01               	movlw	high main@msgbuffer
  1115  00071C  0100               	movlb	0	; () banked
  1116  00071E  6FB8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1117  000720  0101               	movlb	1	; () banked
  1118  000722  0EA2               	movlw	low main@msgbuffer
  1119  000724  0100               	movlb	0	; () banked
  1120  000726  6FB7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1121  000728  0E0A               	movlw	10
  1122  00072A  ECFE  F00D         	call	_ToMainHigh_recvmsg
  1123  00072E  0101               	movlb	1	; () banked
  1124  000730  6FC2               	movwf	main@length& (0+255),b
  1125                           
  1126                           ; BSR set to: 1
  1127                           ;main.c: 118: if (length < 0) {
  1128  000732  0101               	movlb	1	; () banked
  1129  000734  BFC2               	btfsc	main@length& (0+255),7,b
  1130  000736  D0B7               	goto	l3216
  1131  000738  D0A8               	goto	l3214
  1132  00073A                     l3184:
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;main.c: 126: {
  1136                           ;main.c: 127: timer0_lthread(&t0thread_data);
  1137  00073A  0101               	movlb	1	; () banked
  1138  00073C  0E01               	movlw	high main@t0thread_data
  1139  00073E  0100               	movlb	0	; () banked
  1140  000740  6FBC               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1141  000742  0101               	movlb	1	; () banked
  1142  000744  0ECF               	movlw	low main@t0thread_data
  1143  000746  0100               	movlb	0	; () banked
  1144  000748  6FBB               	movwf	timer0_lthread@tptr& (0+255),b
  1145  00074A  ECC1  F005         	call	_timer0_lthread	;wreg free
  1146                           
  1147                           ;main.c: 128: break;
  1148  00074E  D0AB               	goto	l3216
  1149  000750                     l132:
  1150                           
  1151                           ; BSR set to: 1
  1152                           ;main.c: 131: {
  1153                           ;main.c: 132: last_reg_recvd = msgbuffer[0];
  1154  000750  C1A2  F1BB         	movff	main@msgbuffer,main@last_reg_recvd
  1155                           
  1156                           ; BSR set to: 1
  1157                           ;main.c: 133: unsigned char command = (last_reg_recvd&192)>>6;
  1158  000754  0101               	movlb	1	; () banked
  1159  000756  45BB               	rlncf	main@last_reg_recvd& (0+255),w,b
  1160  000758  46E8               	rlncf	wreg,f,c
  1161  00075A  0B03               	andlw	3
  1162  00075C  0B03               	andlw	3
  1163  00075E  0101               	movlb	1	; () banked
  1164  000760  6FAF               	movwf	main@command& (0+255),b
  1165                           
  1166                           ;main.c: 134: unsigned char valuec = last_reg_recvd&63;
  1167  000762  0101               	movlb	1	; () banked
  1168  000764  51BB               	movf	main@last_reg_recvd& (0+255),w,b
  1169  000766  0B3F               	andlw	63
  1170  000768  0101               	movlb	1	; () banked
  1171  00076A  6FBA               	movwf	main@valuec& (0+255),b
  1172                           
  1173                           ;main.c: 135: switch(command){
  1174  00076C  D04E               	goto	l3198
  1175  00076E                     l3188:
  1176                           
  1177                           ; BSR set to: 1
  1178                           ;main.c: 137: {
  1179                           ;main.c: 138: stop(&t0thread_data, &t1thread_data);
  1180  00076E  0101               	movlb	1	; () banked
  1181  000770  0E01               	movlw	high main@t0thread_data
  1182  000772  0100               	movlb	0	; () banked
  1183  000774  6FBC               	movwf	(stop@tptr0+1)& (0+255),b
  1184  000776  0101               	movlb	1	; () banked
  1185  000778  0ECF               	movlw	low main@t0thread_data
  1186  00077A  0100               	movlb	0	; () banked
  1187  00077C  6FBB               	movwf	stop@tptr0& (0+255),b
  1188  00077E  0101               	movlb	1	; () banked
  1189  000780  0E01               	movlw	high main@t1thread_data
  1190  000782  0100               	movlb	0	; () banked
  1191  000784  6FBE               	movwf	(stop@tptr1+1)& (0+255),b
  1192  000786  0101               	movlb	1	; () banked
  1193  000788  0EC3               	movlw	low main@t1thread_data
  1194  00078A  0100               	movlb	0	; () banked
  1195  00078C  6FBD               	movwf	stop@tptr1& (0+255),b
  1196  00078E  ECB3  F009         	call	_stop	;wreg free
  1197                           
  1198                           ;main.c: 139: break;
  1199  000792  D089               	goto	l3216
  1200  000794                     l3190:
  1201                           
  1202                           ;main.c: 142: {
  1203                           ;main.c: 143: moveDist(&t1thread_data, valuec);
  1204  000794  0101               	movlb	1	; () banked
  1205  000796  0E01               	movlw	high main@t1thread_data
  1206  000798  0100               	movlb	0	; () banked
  1207  00079A  6FBC               	movwf	(moveDist@tptr+1)& (0+255),b
  1208  00079C  0101               	movlb	1	; () banked
  1209  00079E  0EC3               	movlw	low main@t1thread_data
  1210  0007A0  0100               	movlb	0	; () banked
  1211  0007A2  6FBB               	movwf	moveDist@tptr& (0+255),b
  1212  0007A4  0101               	movlb	1	; () banked
  1213  0007A6  0100               	movlb	0	; () banked
  1214  0007A8  C1BA  F0BD         	movff	main@valuec,moveDist@dist
  1215  0007AC  0100               	movlb	0	; () banked
  1216  0007AE  6BBE               	clrf	(moveDist@dist+1)& (0+255),b
  1217  0007B0  EC0F  F00A         	call	_moveDist	;wreg free
  1218                           
  1219                           ;main.c: 144: break;
  1220  0007B4  D078               	goto	l3216
  1221  0007B6                     l3192:
  1222                           
  1223                           ;main.c: 147: {
  1224                           ;main.c: 148: turn(&t0thread_data, -valuec);
  1225  0007B6  0101               	movlb	1	; () banked
  1226  0007B8  0E01               	movlw	high main@t0thread_data
  1227  0007BA  0100               	movlb	0	; () banked
  1228  0007BC  6FBC               	movwf	(turn@tptr+1)& (0+255),b
  1229  0007BE  0101               	movlb	1	; () banked
  1230  0007C0  0ECF               	movlw	low main@t0thread_data
  1231  0007C2  0100               	movlb	0	; () banked
  1232  0007C4  6FBB               	movwf	turn@tptr& (0+255),b
  1233  0007C6  0101               	movlb	1	; () banked
  1234  0007C8  51BA               	movf	main@valuec& (0+255),w,b
  1235  0007CA  0100               	movlb	0	; () banked
  1236  0007CC  6FC6               	movwf	??_main& (0+255),b
  1237  0007CE  6BC7               	clrf	(??_main+1)& (0+255),b
  1238  0007D0  0100               	movlb	0	; () banked
  1239  0007D2  1FC6               	comf	??_main& (0+255),f,b
  1240  0007D4  1FC7               	comf	(??_main+1)& (0+255),f,b
  1241  0007D6  4BC6               	infsnz	??_main& (0+255),f,b
  1242  0007D8  2BC7               	incf	(??_main+1)& (0+255),f,b
  1243  0007DA  C0C6  F0BD         	movff	??_main,turn@angle
  1244  0007DE  C0C7  F0BE         	movff	??_main+1,turn@angle+1
  1245  0007E2  ECCD  F006         	call	_turn	;wreg free
  1246                           
  1247                           ;main.c: 149: break;
  1248  0007E6  D05F               	goto	l3216
  1249  0007E8                     l3194:
  1250                           
  1251                           ;main.c: 152: {
  1252                           ;main.c: 153: turn(&t0thread_data, valuec);
  1253  0007E8  0101               	movlb	1	; () banked
  1254  0007EA  0E01               	movlw	high main@t0thread_data
  1255  0007EC  0100               	movlb	0	; () banked
  1256  0007EE  6FBC               	movwf	(turn@tptr+1)& (0+255),b
  1257  0007F0  0101               	movlb	1	; () banked
  1258  0007F2  0ECF               	movlw	low main@t0thread_data
  1259  0007F4  0100               	movlb	0	; () banked
  1260  0007F6  6FBB               	movwf	turn@tptr& (0+255),b
  1261  0007F8  0101               	movlb	1	; () banked
  1262  0007FA  0100               	movlb	0	; () banked
  1263  0007FC  C1BA  F0BD         	movff	main@valuec,turn@angle
  1264  000800  0100               	movlb	0	; () banked
  1265  000802  6BBE               	clrf	(turn@angle+1)& (0+255),b
  1266  000804  ECCD  F006         	call	_turn	;wreg free
  1267                           
  1268                           ;main.c: 154: break;
  1269  000808  D04E               	goto	l3216
  1270  00080A                     l3198:
  1271  00080A  0101               	movlb	1	; () banked
  1272  00080C  51AF               	movf	main@command& (0+255),w,b
  1273                           
  1274                           ; Switch size 1, requested type "space"
  1275                           ; Number of cases is 4, Range of values is 0 to 3
  1276                           ; switch strategies available:
  1277                           ; Name         Instructions Cycles
  1278                           ; simple_byte           13     7 (average)
  1279                           ;	Chosen strategy is simple_byte
  1280  00080E  0A00               	xorlw	0	; case 0
  1281  000810  B4D8               	btfsc	status,2,c
  1282  000812  D7AD               	goto	l3188
  1283  000814  0A01               	xorlw	1	; case 1
  1284  000816  B4D8               	btfsc	status,2,c
  1285  000818  D7BD               	goto	l3190
  1286  00081A  0A03               	xorlw	3	; case 2
  1287  00081C  B4D8               	btfsc	status,2,c
  1288  00081E  D7CB               	goto	l3192
  1289  000820  0A01               	xorlw	1	; case 3
  1290  000822  B4D8               	btfsc	status,2,c
  1291  000824  D7E1               	goto	l3194
  1292  000826  D03F               	goto	l3216
  1293  000828                     l139:
  1294                           
  1295                           ; BSR set to: 1
  1296                           ;main.c: 160: {
  1297                           ;main.c: 163: last_reg_recvd = msgbuffer[0];
  1298  000828  C1A2  F1BB         	movff	main@msgbuffer,main@last_reg_recvd
  1299                           
  1300                           ;main.c: 164: break;
  1301  00082C  D03C               	goto	l3216
  1302  00082E                     l3200:
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 177: {
  1306                           ;main.c: 178: length = 2;
  1307  00082E  0E02               	movlw	2
  1308  000830  0101               	movlb	1	; () banked
  1309  000832  6FC2               	movwf	main@length& (0+255),b
  1310                           
  1311                           ;main.c: 179: msgbuffer[0] = 0x55;
  1312  000834  0E55               	movlw	85
  1313  000836  0101               	movlb	1	; () banked
  1314  000838  6FA2               	movwf	main@msgbuffer& (0+255),b
  1315                           
  1316                           ;main.c: 180: msgbuffer[1] = 0xAA;
  1317  00083A  0EAA               	movlw	170
  1318  00083C  0101               	movlb	1	; () banked
  1319  00083E  6FA3               	movwf	(main@msgbuffer+1)& (0+255),b
  1320                           
  1321                           ;main.c: 181: break;
  1322  000840  D017               	goto	l3210
  1323  000842                     l3202:
  1324                           
  1325                           ; BSR set to: 1
  1326                           ;main.c: 184: {
  1327                           ;main.c: 185: length = 1;
  1328  000842  0E01               	movlw	1
  1329  000844  0101               	movlb	1	; () banked
  1330  000846  6FC2               	movwf	main@length& (0+255),b
  1331                           
  1332                           ;main.c: 186: msgbuffer[0] = 0x3A;
  1333  000848  0E3A               	movlw	58
  1334  00084A  D004               	goto	L1
  1335  00084C                     l3204:
  1336                           
  1337                           ; BSR set to: 1
  1338                           ;main.c: 190: {
  1339                           ;main.c: 191: length = 1;
  1340  00084C  0E01               	movlw	1
  1341  00084E  0101               	movlb	1	; () banked
  1342  000850  6FC2               	movwf	main@length& (0+255),b
  1343                           
  1344                           ;main.c: 192: msgbuffer[0] = 0xA3;
  1345  000852  0EA3               	movlw	163
  1346  000854                     L1:
  1347  000854  0101               	movlb	1	; () banked
  1348  000856  6FA2               	movwf	main@msgbuffer& (0+255),b
  1349                           
  1350                           ;main.c: 193: break;
  1351  000858  D00B               	goto	l3210
  1352  00085A                     l3208:
  1353                           
  1354                           ; BSR set to: 1
  1355  00085A  0101               	movlb	1	; () banked
  1356  00085C  51BB               	movf	main@last_reg_recvd& (0+255),w,b
  1357                           
  1358                           ; Switch size 1, requested type "space"
  1359                           ; Number of cases is 3, Range of values is 168 to 170
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           10     6 (average)
  1363                           ;	Chosen strategy is simple_byte
  1364  00085E  0AA8               	xorlw	168	; case 168
  1365  000860  B4D8               	btfsc	status,2,c
  1366  000862  D7EF               	goto	l3202
  1367  000864  0A01               	xorlw	1	; case 169
  1368  000866  B4D8               	btfsc	status,2,c
  1369  000868  D7F1               	goto	l3204
  1370  00086A  0A03               	xorlw	3	; case 170
  1371  00086C  B4D8               	btfsc	status,2,c
  1372  00086E  D7DF               	goto	l3200
  1373  000870                     l3210:
  1374                           
  1375                           ; BSR set to: 1
  1376                           ;main.c: 196: start_i2c_slave_reply(length, msgbuffer);
  1377  000870  0101               	movlb	1	; () banked
  1378  000872  0E01               	movlw	high main@msgbuffer
  1379  000874  0100               	movlb	0	; () banked
  1380  000876  6F9E               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1381  000878  0101               	movlb	1	; () banked
  1382  00087A  0EA2               	movlw	low main@msgbuffer
  1383  00087C  0100               	movlb	0	; () banked
  1384  00087E  6F9D               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1385  000880  0101               	movlb	1	; () banked
  1386  000882  51C2               	movf	main@length& (0+255),w,b
  1387  000884  EC4B  F006         	call	_start_i2c_slave_reply
  1388                           
  1389                           ;main.c: 197: break;
  1390  000888  D00E               	goto	l3216
  1391  00088A                     l3214:
  1392  00088A  0101               	movlb	1	; () banked
  1393  00088C  51C1               	movf	main@msgtype& (0+255),w,b
  1394                           
  1395                           ; Switch size 1, requested type "space"
  1396                           ; Number of cases is 4, Range of values is 10 to 42
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           13     7 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401  00088E  0A0A               	xorlw	10	; case 10
  1402  000890  B4D8               	btfsc	status,2,c
  1403  000892  D753               	goto	l3184
  1404  000894  0A22               	xorlw	34	; case 40
  1405  000896  B4D8               	btfsc	status,2,c
  1406  000898  D75B               	goto	l132
  1407  00089A  0A01               	xorlw	1	; case 41
  1408  00089C  B4D8               	btfsc	status,2,c
  1409  00089E  D7C4               	goto	l139
  1410  0008A0  0A03               	xorlw	3	; case 42
  1411  0008A2  B4D8               	btfsc	status,2,c
  1412  0008A4  D7DA               	goto	l3208
  1413  0008A6                     l3216:
  1414                           
  1415                           ;main.c: 205: }
  1416                           ;main.c: 209: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1417  0008A6  0101               	movlb	1	; () banked
  1418  0008A8  0E01               	movlw	high main@msgtype
  1419  0008AA  0100               	movlb	0	; () banked
  1420  0008AC  6FB6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1421  0008AE  0101               	movlb	1	; () banked
  1422  0008B0  0EC1               	movlw	low main@msgtype
  1423  0008B2  0100               	movlb	0	; () banked
  1424  0008B4  6FB5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1425  0008B6  0101               	movlb	1	; () banked
  1426  0008B8  0E01               	movlw	high main@msgbuffer
  1427  0008BA  0100               	movlb	0	; () banked
  1428  0008BC  6FB8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1429  0008BE  0101               	movlb	1	; () banked
  1430  0008C0  0EA2               	movlw	low main@msgbuffer
  1431  0008C2  0100               	movlb	0	; () banked
  1432  0008C4  6FB7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1433  0008C6  0E0A               	movlw	10
  1434  0008C8  ECE3  F00D         	call	_ToMainLow_recvmsg
  1435  0008CC  0101               	movlb	1	; () banked
  1436  0008CE  6FC2               	movwf	main@length& (0+255),b
  1437                           
  1438                           ; BSR set to: 1
  1439                           ;main.c: 210: if (length < 0) {
  1440  0008D0  0101               	movlb	1	; () banked
  1441  0008D2  BFC2               	btfsc	main@length& (0+255),7,b
  1442  0008D4  D717               	goto	l125
  1443  0008D6  D02D               	goto	l3228
  1444  0008D8                     l3222:
  1445                           
  1446                           ; BSR set to: 1
  1447                           ;main.c: 218: {
  1448                           ;main.c: 219: timer1_lthread(&t1thread_data);
  1449  0008D8  0101               	movlb	1	; () banked
  1450  0008DA  0E01               	movlw	high main@t1thread_data
  1451  0008DC  0100               	movlb	0	; () banked
  1452  0008DE  6FBC               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1453  0008E0  0101               	movlb	1	; () banked
  1454  0008E2  0EC3               	movlw	low main@t1thread_data
  1455  0008E4  0100               	movlb	0	; () banked
  1456  0008E6  6FBB               	movwf	timer1_lthread@tptr& (0+255),b
  1457  0008E8  EC37  F005         	call	_timer1_lthread	;wreg free
  1458                           
  1459                           ;main.c: 220: break;
  1460  0008EC  D70B               	goto	l125
  1461  0008EE                     l3224:
  1462                           
  1463                           ;main.c: 223: case 31:
  1464                           ;main.c: 224: case 32:
  1465                           ;main.c: 225: {
  1466                           ;main.c: 226: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1467  0008EE  0101               	movlb	1	; () banked
  1468  0008F0  0E01               	movlw	high main@uthread_data
  1469  0008F2  0100               	movlb	0	; () banked
  1470  0008F4  6FB8               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1471  0008F6  0101               	movlb	1	; () banked
  1472  0008F8  0EB0               	movlw	low main@uthread_data
  1473  0008FA  0100               	movlb	0	; () banked
  1474  0008FC  6FB7               	movwf	uart_lthread@uptr& (0+255),b
  1475  0008FE  0101               	movlb	1	; () banked
  1476  000900  0100               	movlb	0	; () banked
  1477  000902  C1C1  F0B9         	movff	main@msgtype,uart_lthread@msgtype
  1478  000906  0100               	movlb	0	; () banked
  1479  000908  6BBA               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1480  00090A  0101               	movlb	1	; () banked
  1481  00090C  51C2               	movf	main@length& (0+255),w,b
  1482  00090E  0100               	movlb	0	; () banked
  1483  000910  6FBB               	movwf	uart_lthread@length& (0+255),b
  1484  000912  0100               	movlb	0	; () banked
  1485  000914  6BBC               	clrf	(uart_lthread@length+1)& (0+255),b
  1486  000916  0100               	movlb	0	; () banked
  1487  000918  BFBB               	btfsc	uart_lthread@length& (0+255),7,b
  1488  00091A  07BC               	decf	(uart_lthread@length+1)& (0+255),f,b
  1489  00091C  0101               	movlb	1	; () banked
  1490  00091E  0E01               	movlw	high main@msgbuffer
  1491  000920  0100               	movlb	0	; () banked
  1492  000922  6FBE               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1493  000924  0101               	movlb	1	; () banked
  1494  000926  0EA2               	movlw	low main@msgbuffer
  1495  000928  0100               	movlb	0	; () banked
  1496  00092A  6FBD               	movwf	uart_lthread@msgbuffer& (0+255),b
  1497  00092C  EC55  F009         	call	_uart_lthread	;wreg free
  1498                           
  1499                           ;main.c: 227: break;
  1500  000930  D6E9               	goto	l125
  1501  000932                     l3228:
  1502  000932  0101               	movlb	1	; () banked
  1503  000934  51C1               	movf	main@msgtype& (0+255),w,b
  1504                           
  1505                           ; Switch size 1, requested type "space"
  1506                           ; Number of cases is 4, Range of values is 11 to 32
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte           13     7 (average)
  1510                           ;	Chosen strategy is simple_byte
  1511  000936  0A0B               	xorlw	11	; case 11
  1512  000938  B4D8               	btfsc	status,2,c
  1513  00093A  D7CE               	goto	l3222
  1514  00093C  0A15               	xorlw	21	; case 30
  1515  00093E  B4D8               	btfsc	status,2,c
  1516  000940  D7D6               	goto	l3224
  1517  000942  0A01               	xorlw	1	; case 31
  1518  000944  B4D8               	btfsc	status,2,c
  1519  000946  D7D3               	goto	l3224
  1520  000948  0A3F               	xorlw	63	; case 32
  1521  00094A  B4D8               	btfsc	status,2,c
  1522  00094C  D7D0               	goto	l3224
  1523  00094E  D6DA               	goto	l125
  1524  000950                     __end_of_main:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _uart_lthread *****************
  1532 ;; Defined at:
  1533 ;;		line 12 in file "src/uart_thread.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  uptr            2   55[BANK0 ] PTR struct __uart_thread
  1536 ;;		 -> main@uthread_data(10), 
  1537 ;;  msgtype         2   57[BANK0 ] int 
  1538 ;;  length          2   59[BANK0 ] int 
  1539 ;;  msgbuffer       2   61[BANK0 ] PTR unsigned char 
  1540 ;;		 -> main@msgbuffer(11), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  index           2   64[BANK0 ] int 
  1543 ;;  status          1   63[BANK0 ] char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2   55[BANK0 ] int 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1553 ;;      Params:         0       8       0       0       0
  1554 ;;      Locals:         0       3       0       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         0      11       0       0       0
  1557 ;;Total ram usage:       11 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:   13
  1560 ;; This function calls:
  1561 ;;		_FromMainLow_sendmsg
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text1
  1568  0012AA                     __ptext1:
  1569                           	opt stack 0
  1570  0012AA                     _uart_lthread:
  1571                           	opt stack 16
  1572                           
  1573                           ;uart_thread.c: 13: if (msgtype == 30) {
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;incstack = 0
  1577  0012AA  0100               	movlb	0	; () banked
  1578  0012AC  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1579  0012AE  0A1E               	xorlw	30
  1580  0012B0  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1581  0012B2  B4D8               	btfsc	status,2,c
  1582  0012B4  0012               	return	
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;uart_thread.c: 16: else if(msgtype == 31){
  1586                           
  1587                           ; BSR set to: 0
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;uart_thread.c: 15: }
  1591  0012B6  0100               	movlb	0	; () banked
  1592  0012B8  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1593  0012BA  0A1F               	xorlw	31
  1594  0012BC  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1595  0012BE  A4D8               	btfss	status,2,c
  1596  0012C0  D03F               	goto	l3096
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;uart_thread.c: 18: int index = 0;
  1600  0012C2  0E00               	movlw	0
  1601  0012C4  0100               	movlb	0	; () banked
  1602  0012C6  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1603  0012C8  0E00               	movlw	0
  1604  0012CA  0100               	movlb	0	; () banked
  1605  0012CC  6FC0               	movwf	uart_lthread@index& (0+255),b
  1606                           
  1607                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1608  0012CE  0E00               	movlw	0
  1609  0012D0  0100               	movlb	0	; () banked
  1610  0012D2  6FC1               	movwf	(uart_lthread@index+1)& (0+255),b
  1611  0012D4  0E00               	movlw	0
  1612  0012D6  0100               	movlb	0	; () banked
  1613  0012D8  6FC0               	movwf	uart_lthread@index& (0+255),b
  1614  0012DA                     
  1615                           ; BSR set to: 0
  1616  0012DA  0100               	movlb	0	; () banked
  1617  0012DC  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1618  0012DE  0A80               	xorlw	128
  1619  0012E0  0F80               	addlw	-128
  1620  0012E2  0E0A               	movlw	10
  1621  0012E4  B4D8               	btfsc	status,2,c
  1622  0012E6  5DC0               	subwf	uart_lthread@index& (0+255),w,b
  1623  0012E8  B0D8               	btfsc	status,0,c
  1624  0012EA  D01A               	goto	l3092
  1625                           
  1626                           ; BSR set to: 0
  1627                           
  1628                           ; BSR set to: 0
  1629                           
  1630                           ; BSR set to: 0
  1631  0012EC  0100               	movlb	0	; () banked
  1632  0012EE  51C0               	movf	uart_lthread@index& (0+255),w,b
  1633  0012F0  0100               	movlb	0	; () banked
  1634  0012F2  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1635  0012F4  6ED9               	movwf	fsr2l,c
  1636  0012F6  0100               	movlb	0	; () banked
  1637  0012F8  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1638  0012FA  0100               	movlb	0	; () banked
  1639  0012FC  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1640  0012FE  6EDA               	movwf	fsr2h,c
  1641  001300  0100               	movlb	0	; () banked
  1642  001302  51C0               	movf	uart_lthread@index& (0+255),w,b
  1643  001304  0100               	movlb	0	; () banked
  1644  001306  25B7               	addwf	uart_lthread@uptr& (0+255),w,b
  1645  001308  6EE1               	movwf	fsr1l,c
  1646  00130A  0100               	movlb	0	; () banked
  1647  00130C  51C1               	movf	(uart_lthread@index+1)& (0+255),w,b
  1648  00130E  0100               	movlb	0	; () banked
  1649  001310  21B8               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1650  001312  6EE2               	movwf	fsr1h,c
  1651  001314  CFDF FFE7          	movff	indf2,indf1
  1652                           
  1653                           ; BSR set to: 0
  1654  001318  0100               	movlb	0	; () banked
  1655  00131A  4BC0               	infsnz	uart_lthread@index& (0+255),f,b
  1656  00131C  2BC1               	incf	(uart_lthread@index+1)& (0+255),f,b
  1657  00131E  D7DD               	goto	L2
  1658  001320                     l3092:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1662  001320  C0B9  F0B3         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1663  001324  0100               	movlb	0	; () banked
  1664  001326  C0B8  F0B5         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1665  00132A  0100               	movlb	0	; () banked
  1666  00132C  C0B7  F0B4         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1667  001330  0100               	movlb	0	; () banked
  1668  001332  51BB               	movf	uart_lthread@length& (0+255),w,b
  1669  001334  EC65  F00E         	call	_FromMainLow_sendmsg
  1670  001338  0100               	movlb	0	; () banked
  1671  00133A  6FBF               	movwf	uart_lthread@status& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;uart_thread.c: 25: }
  1675                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1676                           
  1677                           ; BSR set to: 0
  1678  00133C  889D               	bsf	3997,4,c	;volatile
  1679                           
  1680                           ;uart_thread.c: 29: }
  1681  00133E  0012               	return	
  1682  001340                     l3096:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;uart_thread.c: 30: else if(msgtype == 32){
  1686  001340  0100               	movlb	0	; () banked
  1687  001342  51B9               	movf	uart_lthread@msgtype& (0+255),w,b
  1688  001344  0A20               	xorlw	32
  1689  001346  11BA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1690  001348  A4D8               	btfss	status,2,c
  1691  00134A  0012               	return	
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1695  00134C  0100               	movlb	0	; () banked
  1696  00134E  51BB               	movf	uart_lthread@length& (0+255),w,b
  1697  001350  0100               	movlb	0	; () banked
  1698  001352  25BD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1699  001354  6ED9               	movwf	fsr2l,c
  1700  001356  0100               	movlb	0	; () banked
  1701  001358  51BC               	movf	(uart_lthread@length+1)& (0+255),w,b
  1702  00135A  0100               	movlb	0	; () banked
  1703  00135C  21BE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1704  00135E  6EDA               	movwf	fsr2h,c
  1705  001360  0E00               	movlw	0
  1706  001362  6EDF               	movwf	indf2,c
  1707  001364  0012               	return	
  1708  001366                     __end_of_uart_lthread:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           indf1	equ	0xFE7
  1714                           fsr1h	equ	0xFE2
  1715                           fsr1l	equ	0xFE1
  1716                           indf2	equ	0xFDF
  1717                           fsr2h	equ	0xFDA
  1718                           fsr2l	equ	0xFD9
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _FromMainLow_sendmsg *****************
  1722 ;; Defined at:
  1723 ;;		line 150 in file "src/messages.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  length          1    wreg     unsigned char 
  1726 ;;  msgtype         1   51[BANK0 ] unsigned char 
  1727 ;;  data            2   52[BANK0 ] PTR void 
  1728 ;;		 -> main@uthread_data(10), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  length          1   54[BANK0 ] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      char 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1740 ;;      Params:         0       3       0       0       0
  1741 ;;      Locals:         0       1       0       0       0
  1742 ;;      Temps:          0       0       0       0       0
  1743 ;;      Totals:         0       4       0       0       0
  1744 ;;Total ram usage:        4 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:   12
  1747 ;; This function calls:
  1748 ;;		_send_msg
  1749 ;; This function is called by:
  1750 ;;		_uart_lthread
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text2
  1755  001CCA                     __ptext2:
  1756                           	opt stack 0
  1757  001CCA                     _FromMainLow_sendmsg:
  1758                           	opt stack 16
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;incstack = 0
  1762                           ;FromMainLow_sendmsg@length stored from wreg
  1763  001CCA  0100               	movlb	0	; () banked
  1764  001CCC  6FB6               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1768  001CCE  0101               	movlb	1	; () banked
  1769  001CD0  0E01               	movlw	high _FromMainLow_MQ
  1770  001CD2  0100               	movlb	0	; () banked
  1771  001CD4  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  1772  001CD6  0101               	movlb	1	; () banked
  1773  001CD8  0E00               	movlw	low _FromMainLow_MQ
  1774  001CDA  0100               	movlb	0	; () banked
  1775  001CDC  6FA7               	movwf	send_msg@qptr& (0+255),b
  1776  001CDE  C0B6  F0A9         	movff	FromMainLow_sendmsg@length,send_msg@length
  1777  001CE2  C0B3  F0AA         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1778  001CE6  0100               	movlb	0	; () banked
  1779  001CE8  C0B5  F0AC         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1780  001CEC  0100               	movlb	0	; () banked
  1781  001CEE  C0B4  F0AB         	movff	FromMainLow_sendmsg@data,send_msg@data
  1782  001CF2  EC4B  F007         	call	_send_msg	;wreg free
  1783  001CF6  0012               	return	
  1784  001CF8                     __end_of_FromMainLow_sendmsg:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           postinc0	equ	0xFEE
  1788                           wreg	equ	0xFE8
  1789                           indf1	equ	0xFE7
  1790                           fsr1h	equ	0xFE2
  1791                           fsr1l	equ	0xFE1
  1792                           indf2	equ	0xFDF
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _turn *****************
  1798 ;; Defined at:
  1799 ;;		line 32 in file "src/motors.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  tptr            2   59[BANK0 ] PTR struct __timer0_thre
  1802 ;;		 -> main@t0thread_data(12), 
  1803 ;;  angle           2   61[BANK0 ] int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  test            2   68[BANK0 ] unsigned char [2]
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1815 ;;      Params:         0       4       0       0       0
  1816 ;;      Locals:         0       6       0       0       0
  1817 ;;      Temps:          0       1       0       0       0
  1818 ;;      Totals:         0      11       0       0       0
  1819 ;;Total ram usage:       11 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:   14
  1822 ;; This function calls:
  1823 ;;		_WriteTimer0
  1824 ;;		_abs
  1825 ;;		_sendUARTarr
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text3
  1832  000D9A                     __ptext3:
  1833                           	opt stack 0
  1834  000D9A                     _turn:
  1835                           	opt stack 15
  1836                           
  1837                           ;motors.c: 33: PORTA = 0x01;
  1838                           
  1839                           ;incstack = 0
  1840  000D9A  0E01               	movlw	1
  1841  000D9C  6E80               	movwf	3968,c	;volatile
  1842                           
  1843                           ;motors.c: 34: tptr->curMove = abs(angle);
  1844  000D9E  C0BD  F09D         	movff	turn@angle,abs@a
  1845  000DA2  C0BE  F09E         	movff	turn@angle+1,abs@a+1
  1846  000DA6  EC46  F00D         	call	_abs	;wreg free
  1847  000DAA  0100               	movlb	0	; () banked
  1848  000DAC  EE20 F008          	lfsr	2,8
  1849  000DB0  0100               	movlb	0	; () banked
  1850  000DB2  51BB               	movf	turn@tptr& (0+255),w,b
  1851  000DB4  26D9               	addwf	fsr2l,f,c
  1852  000DB6  0100               	movlb	0	; () banked
  1853  000DB8  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  1854  000DBA  22DA               	addwfc	fsr2h,f,c
  1855  000DBC  0100               	movlb	0	; () banked
  1856  000DBE  C09D  FFDE         	movff	?_abs,postinc2
  1857  000DC2  0100               	movlb	0	; () banked
  1858  000DC4  C09E  FFDD         	movff	?_abs+1,postdec2
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;motors.c: 35: tptr->distLim = true;
  1862  000DC8  0100               	movlb	0	; () banked
  1863  000DCA  EE20 F00A          	lfsr	2,10
  1864  000DCE  0100               	movlb	0	; () banked
  1865  000DD0  51BB               	movf	turn@tptr& (0+255),w,b
  1866  000DD2  26D9               	addwf	fsr2l,f,c
  1867  000DD4  0100               	movlb	0	; () banked
  1868  000DD6  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  1869  000DD8  22DA               	addwfc	fsr2h,f,c
  1870  000DDA  0E01               	movlw	1
  1871  000DDC  6EDF               	movwf	indf2,c
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;motors.c: 36: T0CONbits.TMR0ON = 1;;
  1875  000DDE  8ED5               	bsf	4053,7,c	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;motors.c: 37: unsigned char test[2];
  1879                           ;motors.c: 38: test[0] = (angle < 0) ? tptr->ctrlR[0] : tptr->ctrlL[0];
  1880  000DE0  0100               	movlb	0	; () banked
  1881  000DE2  BFBE               	btfsc	(turn@angle+1)& (0+255),7,b
  1882  000DE4  D004               	goto	l3022
  1883                           
  1884                           ; BSR set to: 0
  1885  000DE6  0100               	movlb	0	; () banked
  1886  000DE8  EE20 F002          	lfsr	2,2
  1887  000DEC  D003               	goto	L3
  1888  000DEE                     l3022:
  1889                           
  1890                           ; BSR set to: 0
  1891  000DEE  0100               	movlb	0	; () banked
  1892  000DF0  EE20 F004          	lfsr	2,4
  1893  000DF4                     L3:
  1894  000DF4  0100               	movlb	0	; () banked
  1895  000DF6  51BB               	movf	turn@tptr& (0+255),w,b
  1896  000DF8  26D9               	addwf	fsr2l,f,c
  1897  000DFA  0100               	movlb	0	; () banked
  1898  000DFC  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  1899  000DFE  22DA               	addwfc	fsr2h,f,c
  1900  000E00  50DF               	movf	indf2,w,c
  1901  000E02  0100               	movlb	0	; () banked
  1902  000E04  6FBF               	movwf	??_turn& (0+255),b
  1903  000E06  0100               	movlb	0	; () banked
  1904  000E08  51BF               	movf	??_turn& (0+255),w,b
  1905  000E0A  0100               	movlb	0	; () banked
  1906  000E0C  6FC0               	movwf	_turn$979& (0+255),b
  1907  000E0E  0100               	movlb	0	; () banked
  1908  000E10  6BC1               	clrf	(_turn$979+1)& (0+255),b
  1909                           
  1910                           ; BSR set to: 0
  1911                           
  1912                           ; BSR set to: 0
  1913  000E12  C0C0  F0C4         	movff	_turn$979,turn@test
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;motors.c: 39: test[1] = (angle < 0) ? tptr->ctrlR[1] : tptr->ctrlL[1];
  1917  000E16  0100               	movlb	0	; () banked
  1918  000E18  BFBE               	btfsc	(turn@angle+1)& (0+255),7,b
  1919  000E1A  D004               	goto	l3030
  1920                           
  1921                           ; BSR set to: 0
  1922  000E1C  0100               	movlb	0	; () banked
  1923  000E1E  EE20 F003          	lfsr	2,3
  1924  000E22  D003               	goto	L4
  1925  000E24                     l3030:
  1926                           
  1927                           ; BSR set to: 0
  1928  000E24  0100               	movlb	0	; () banked
  1929  000E26  EE20 F005          	lfsr	2,5
  1930  000E2A                     L4:
  1931  000E2A  0100               	movlb	0	; () banked
  1932  000E2C  51BB               	movf	turn@tptr& (0+255),w,b
  1933  000E2E  26D9               	addwf	fsr2l,f,c
  1934  000E30  0100               	movlb	0	; () banked
  1935  000E32  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  1936  000E34  22DA               	addwfc	fsr2h,f,c
  1937  000E36  50DF               	movf	indf2,w,c
  1938  000E38  0100               	movlb	0	; () banked
  1939  000E3A  6FBF               	movwf	??_turn& (0+255),b
  1940  000E3C  0100               	movlb	0	; () banked
  1941  000E3E  51BF               	movf	??_turn& (0+255),w,b
  1942  000E40  0100               	movlb	0	; () banked
  1943  000E42  6FC2               	movwf	_turn$980& (0+255),b
  1944  000E44  0100               	movlb	0	; () banked
  1945  000E46  6BC3               	clrf	(_turn$980+1)& (0+255),b
  1946                           
  1947                           ; BSR set to: 0
  1948                           
  1949                           ; BSR set to: 0
  1950  000E48  C0C2  F0C5         	movff	_turn$980,turn@test+1
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;motors.c: 40: sendUARTarr(2,test);
  1954  000E4C  0100               	movlb	0	; () banked
  1955  000E4E  0E00               	movlw	high turn@test
  1956  000E50  0100               	movlb	0	; () banked
  1957  000E52  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  1958  000E54  0100               	movlb	0	; () banked
  1959  000E56  0EC4               	movlw	low turn@test
  1960  000E58  0100               	movlb	0	; () banked
  1961  000E5A  6FB7               	movwf	sendUARTarr@data& (0+255),b
  1962  000E5C  0E02               	movlw	2
  1963  000E5E  EC7C  F00E         	call	_sendUARTarr
  1964                           
  1965                           ;motors.c: 41: WriteTimer0(tptr->cmDist);
  1966  000E62  0100               	movlb	0	; () banked
  1967  000E64  EE20 F006          	lfsr	2,6
  1968  000E68  0100               	movlb	0	; () banked
  1969  000E6A  51BB               	movf	turn@tptr& (0+255),w,b
  1970  000E6C  26D9               	addwf	fsr2l,f,c
  1971  000E6E  0100               	movlb	0	; () banked
  1972  000E70  51BC               	movf	(turn@tptr+1)& (0+255),w,b
  1973  000E72  22DA               	addwfc	fsr2h,f,c
  1974  000E74  0100               	movlb	0	; () banked
  1975  000E76  CFDE F09D          	movff	postinc2,WriteTimer0@timer0
  1976  000E7A  0100               	movlb	0	; () banked
  1977  000E7C  CFDD F09E          	movff	postdec2,WriteTimer0@timer0+1
  1978  000E80  EC59  F00F         	call	_WriteTimer0	;wreg free
  1979                           
  1980                           ;motors.c: 42: tptr->cmCount = 0;
  1981  000E84  C0BB  FFD9         	movff	turn@tptr,fsr2l
  1982  000E88  C0BC  FFDA         	movff	turn@tptr+1,fsr2h
  1983  000E8C  0E00               	movlw	0
  1984  000E8E  6EDE               	movwf	postinc2,c
  1985  000E90  0E00               	movlw	0
  1986  000E92  6EDD               	movwf	postdec2,c
  1987  000E94  0012               	return	
  1988  000E96                     __end_of_turn:
  1989                           	opt stack 0
  1990                           tblptru	equ	0xFF8
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           indf1	equ	0xFE7
  1994                           fsr1h	equ	0xFE2
  1995                           fsr1l	equ	0xFE1
  1996                           indf2	equ	0xFDF
  1997                           postinc2	equ	0xFDE
  1998                           postdec2	equ	0xFDD
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _abs *****************
  2004 ;; Defined at:
  2005 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\abs.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  a               2   29[BANK0 ] int 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  2   29[BANK0 ] int 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, prodl
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2019 ;;      Params:         0       2       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       2       0       0       0
  2022 ;;      Totals:         0       4       0       0       0
  2023 ;;Total ram usage:        4 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:   10
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_turn
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text4
  2034  001A8C                     __ptext4:
  2035                           	opt stack 0
  2036  001A8C                     _abs:
  2037                           	opt stack 18
  2038                           
  2039                           ;incstack = 0
  2040  001A8C  0100               	movlb	0	; () banked
  2041  001A8E  519E               	movf	(abs@a+1)& (0+255),w,b
  2042  001A90  0A80               	xorlw	128
  2043  001A92  6EF3               	movwf	prodl,c
  2044  001A94  0E80               	movlw	128
  2045  001A96  5CF3               	subwf	prodl,w,c
  2046  001A98  0E00               	movlw	0
  2047  001A9A  B4D8               	btfsc	status,2,c
  2048  001A9C  5D9D               	subwf	abs@a& (0+255),w,b
  2049  001A9E  B0D8               	btfsc	status,0,c
  2050  001AA0  D010               	goto	l639
  2051                           
  2052                           ; BSR set to: 0
  2053  001AA2  0100               	movlb	0	; () banked
  2054  001AA4  C09D  F09F         	movff	abs@a,??_abs
  2055  001AA8  0100               	movlb	0	; () banked
  2056  001AAA  C09E  F0A0         	movff	abs@a+1,??_abs+1
  2057  001AAE  0100               	movlb	0	; () banked
  2058  001AB0  1F9F               	comf	??_abs& (0+255),f,b
  2059  001AB2  1FA0               	comf	(??_abs+1)& (0+255),f,b
  2060  001AB4  4B9F               	infsnz	??_abs& (0+255),f,b
  2061  001AB6  2BA0               	incf	(??_abs+1)& (0+255),f,b
  2062  001AB8  C09F  F09D         	movff	??_abs,?_abs
  2063  001ABC  C0A0  F09E         	movff	??_abs+1,?_abs+1
  2064  001AC0  0012               	return	
  2065  001AC2                     l639:
  2066                           
  2067                           ; BSR set to: 0
  2068  001AC2  C09D  F09D         	movff	abs@a,?_abs
  2069  001AC6  C09E  F09E         	movff	abs@a+1,?_abs+1
  2070                           
  2071                           ; BSR set to: 0
  2072  001ACA  0012               	return	
  2073  001ACC                     __end_of_abs:
  2074                           	opt stack 0
  2075                           tblptru	equ	0xFF8
  2076                           prodl	equ	0xFF3
  2077                           postinc0	equ	0xFEE
  2078                           wreg	equ	0xFE8
  2079                           indf1	equ	0xFE7
  2080                           fsr1h	equ	0xFE2
  2081                           fsr1l	equ	0xFE1
  2082                           indf2	equ	0xFDF
  2083                           postinc2	equ	0xFDE
  2084                           postdec2	equ	0xFDD
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _timer1_lthread *****************
  2090 ;; Defined at:
  2091 ;;		line 16 in file "src/timer1_thread.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  2094 ;;		 -> main@t1thread_data(12), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  temp            2   65[BANK0 ] unsigned char [2]
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2   59[BANK0 ] int 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2106 ;;      Params:         0       2       0       0       0
  2107 ;;      Locals:         0       2       0       0       0
  2108 ;;      Temps:          0       4       0       0       0
  2109 ;;      Totals:         0       8       0       0       0
  2110 ;;Total ram usage:        8 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:   14
  2113 ;; This function calls:
  2114 ;;		_WriteTimer1
  2115 ;;		___lwmod
  2116 ;;		_sendUARTarr
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text5
  2123  000A6E                     __ptext5:
  2124                           	opt stack 0
  2125  000A6E                     _timer1_lthread:
  2126                           	opt stack 15
  2127                           
  2128                           ;timer1_thread.c: 17: tptr->cmCount++;
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;incstack = 0
  2132  000A6E  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2133  000A72  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2134  000A76  2ADE               	incf	postinc2,f,c
  2135  000A78  0E00               	movlw	0
  2136  000A7A  22DD               	addwfc	postdec2,f,c
  2137                           
  2138                           ;timer1_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2139  000A7C  0100               	movlb	0	; () banked
  2140  000A7E  EE20 F00A          	lfsr	2,10
  2141  000A82  0100               	movlb	0	; () banked
  2142  000A84  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2143  000A86  26D9               	addwf	fsr2l,f,c
  2144  000A88  0100               	movlb	0	; () banked
  2145  000A8A  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2146  000A8C  22DA               	addwfc	fsr2h,f,c
  2147  000A8E  50DF               	movf	indf2,w,c
  2148  000A90  B4D8               	btfsc	status,2,c
  2149  000A92  D065               	goto	l3072
  2150                           
  2151                           ; BSR set to: 0
  2152  000A94  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2153  000A98  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2154  000A9C  0100               	movlb	0	; () banked
  2155  000A9E  CFDE F09D          	movff	postinc2,___lwmod@dividend
  2156  000AA2  0100               	movlb	0	; () banked
  2157  000AA4  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  2158  000AA8  0100               	movlb	0	; () banked
  2159  000AAA  EE20 F006          	lfsr	2,6
  2160  000AAE  0100               	movlb	0	; () banked
  2161  000AB0  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2162  000AB2  26D9               	addwf	fsr2l,f,c
  2163  000AB4  0100               	movlb	0	; () banked
  2164  000AB6  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2165  000AB8  22DA               	addwfc	fsr2h,f,c
  2166  000ABA  0100               	movlb	0	; () banked
  2167  000ABC  CFDE F09F          	movff	postinc2,___lwmod@divisor
  2168  000AC0  0100               	movlb	0	; () banked
  2169  000AC2  CFDD F0A0          	movff	postdec2,___lwmod@divisor+1
  2170  000AC6  EC43  F00C         	call	___lwmod	;wreg free
  2171  000ACA  0EFF               	movlw	255
  2172  000ACC  0100               	movlb	0	; () banked
  2173  000ACE  6FBD               	movwf	??_timer1_lthread& (0+255),b
  2174  000AD0  0EFF               	movlw	255
  2175  000AD2  6FBE               	movwf	(??_timer1_lthread+1)& (0+255),b
  2176  000AD4  0100               	movlb	0	; () banked
  2177  000AD6  EE20 F006          	lfsr	2,6
  2178  000ADA  0100               	movlb	0	; () banked
  2179  000ADC  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2180  000ADE  26D9               	addwf	fsr2l,f,c
  2181  000AE0  0100               	movlb	0	; () banked
  2182  000AE2  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2183  000AE4  22DA               	addwfc	fsr2h,f,c
  2184  000AE6  CFDE F0BF          	movff	postinc2,??_timer1_lthread+2
  2185  000AEA  CFDD F0C0          	movff	postdec2,??_timer1_lthread+3
  2186  000AEE  0100               	movlb	0	; () banked
  2187  000AF0  51BD               	movf	??_timer1_lthread& (0+255),w,b
  2188  000AF2  0100               	movlb	0	; () banked
  2189  000AF4  27BF               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  2190  000AF6  0100               	movlb	0	; () banked
  2191  000AF8  51BE               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2192  000AFA  0100               	movlb	0	; () banked
  2193  000AFC  23C0               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  2194  000AFE  0100               	movlb	0	; () banked
  2195  000B00  519E               	movf	(?___lwmod+1)& (0+255),w,b
  2196  000B02  0100               	movlb	0	; () banked
  2197  000B04  19C0               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  2198  000B06  E104               	bnz	u1945
  2199  000B08  0100               	movlb	0	; () banked
  2200  000B0A  519D               	movf	?___lwmod& (0+255),w,b
  2201  000B0C  0100               	movlb	0	; () banked
  2202  000B0E  19BF               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  2203  000B10                     u1945:
  2204  000B10  A4D8               	btfss	status,2,c
  2205  000B12  D025               	goto	l3072
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;timer1_thread.c: 20: unsigned char temp[2] = {0,0};
  2209  000B14  C0CC  F0C1         	movff	timer1_lthread@F5087,timer1_lthread@temp
  2210  000B18  C0CD  F0C2         	movff	timer1_lthread@F5087+1,timer1_lthread@temp+1
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;timer1_thread.c: 21: sendUARTarr(2,temp);
  2214  000B1C  0100               	movlb	0	; () banked
  2215  000B1E  0E00               	movlw	high timer1_lthread@temp
  2216  000B20  0100               	movlb	0	; () banked
  2217  000B22  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2218  000B24  0100               	movlb	0	; () banked
  2219  000B26  0EC1               	movlw	low timer1_lthread@temp
  2220  000B28  0100               	movlb	0	; () banked
  2221  000B2A  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2222  000B2C  0E02               	movlw	2
  2223  000B2E  EC7C  F00E         	call	_sendUARTarr
  2224                           
  2225                           ;timer1_thread.c: 22: T1CONbits.TMR1ON = 0;;
  2226  000B32  90CD               	bcf	4045,0,c	;volatile
  2227                           
  2228                           ;timer1_thread.c: 23: PORTA = 0x00;
  2229  000B34  0E00               	movlw	0
  2230  000B36  6E80               	movwf	3968,c	;volatile
  2231                           
  2232                           ;timer1_thread.c: 24: tptr->ready = true;
  2233  000B38  0100               	movlb	0	; () banked
  2234  000B3A  EE20 F00B          	lfsr	2,11
  2235  000B3E  0100               	movlb	0	; () banked
  2236  000B40  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2237  000B42  26D9               	addwf	fsr2l,f,c
  2238  000B44  0100               	movlb	0	; () banked
  2239  000B46  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2240  000B48  22DA               	addwfc	fsr2h,f,c
  2241  000B4A  0E01               	movlw	1
  2242  000B4C  6EDF               	movwf	indf2,c
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;timer1_thread.c: 25: tptr->cmCount = 0;
  2246  000B4E  C0BB  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2247  000B52  C0BC  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2248  000B56  0E00               	movlw	0
  2249  000B58  6EDE               	movwf	postinc2,c
  2250  000B5A  0E00               	movlw	0
  2251  000B5C  6EDD               	movwf	postdec2,c
  2252  000B5E                     l3072:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;timer1_thread.c: 26: }
  2256                           ;timer1_thread.c: 28: WriteTimer1(tptr->cmDist);
  2257  000B5E  0100               	movlb	0	; () banked
  2258  000B60  EE20 F004          	lfsr	2,4
  2259  000B64  0100               	movlb	0	; () banked
  2260  000B66  51BB               	movf	timer1_lthread@tptr& (0+255),w,b
  2261  000B68  26D9               	addwf	fsr2l,f,c
  2262  000B6A  0100               	movlb	0	; () banked
  2263  000B6C  51BC               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2264  000B6E  22DA               	addwfc	fsr2h,f,c
  2265  000B70  0100               	movlb	0	; () banked
  2266  000B72  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  2267  000B76  0100               	movlb	0	; () banked
  2268  000B78  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  2269  000B7C  EC62  F00F         	call	_WriteTimer1	;wreg free
  2270  000B80  0012               	return	
  2271  000B82                     __end_of_timer1_lthread:
  2272                           	opt stack 0
  2273                           tblptru	equ	0xFF8
  2274                           prodl	equ	0xFF3
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           indf1	equ	0xFE7
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           postinc2	equ	0xFDE
  2282                           postdec2	equ	0xFDD
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _timer0_lthread *****************
  2288 ;; Defined at:
  2289 ;;		line 19 in file "src/timer0_thread.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  tptr            2   59[BANK0 ] PTR struct __timer0_thre
  2292 ;;		 -> main@t0thread_data(12), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  temp            2   65[BANK0 ] unsigned char [2]
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2   59[BANK0 ] int 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2304 ;;      Params:         0       2       0       0       0
  2305 ;;      Locals:         0       2       0       0       0
  2306 ;;      Temps:          0       4       0       0       0
  2307 ;;      Totals:         0       8       0       0       0
  2308 ;;Total ram usage:        8 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:   14
  2311 ;; This function calls:
  2312 ;;		_WriteTimer0
  2313 ;;		___lwmod
  2314 ;;		_sendUARTarr
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text6
  2321  000B82                     __ptext6:
  2322                           	opt stack 0
  2323  000B82                     _timer0_lthread:
  2324                           	opt stack 15
  2325                           
  2326                           ;timer0_thread.c: 20: tptr->cmCount++;
  2327                           
  2328                           ;incstack = 0
  2329  000B82  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2330  000B86  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2331  000B8A  2ADE               	incf	postinc2,f,c
  2332  000B8C  0E00               	movlw	0
  2333  000B8E  22DD               	addwfc	postdec2,f,c
  2334                           
  2335                           ;timer0_thread.c: 22: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2336  000B90  0100               	movlb	0	; () banked
  2337  000B92  EE20 F00A          	lfsr	2,10
  2338  000B96  0100               	movlb	0	; () banked
  2339  000B98  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2340  000B9A  26D9               	addwf	fsr2l,f,c
  2341  000B9C  0100               	movlb	0	; () banked
  2342  000B9E  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2343  000BA0  22DA               	addwfc	fsr2h,f,c
  2344  000BA2  50DF               	movf	indf2,w,c
  2345  000BA4  B4D8               	btfsc	status,2,c
  2346  000BA6  D065               	goto	l2968
  2347                           
  2348                           ; BSR set to: 0
  2349  000BA8  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2350  000BAC  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2351  000BB0  0100               	movlb	0	; () banked
  2352  000BB2  CFDE F09D          	movff	postinc2,___lwmod@dividend
  2353  000BB6  0100               	movlb	0	; () banked
  2354  000BB8  CFDD F09E          	movff	postdec2,___lwmod@dividend+1
  2355  000BBC  0100               	movlb	0	; () banked
  2356  000BBE  EE20 F008          	lfsr	2,8
  2357  000BC2  0100               	movlb	0	; () banked
  2358  000BC4  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2359  000BC6  26D9               	addwf	fsr2l,f,c
  2360  000BC8  0100               	movlb	0	; () banked
  2361  000BCA  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2362  000BCC  22DA               	addwfc	fsr2h,f,c
  2363  000BCE  0100               	movlb	0	; () banked
  2364  000BD0  CFDE F09F          	movff	postinc2,___lwmod@divisor
  2365  000BD4  0100               	movlb	0	; () banked
  2366  000BD6  CFDD F0A0          	movff	postdec2,___lwmod@divisor+1
  2367  000BDA  EC43  F00C         	call	___lwmod	;wreg free
  2368  000BDE  0EFF               	movlw	255
  2369  000BE0  0100               	movlb	0	; () banked
  2370  000BE2  6FBD               	movwf	??_timer0_lthread& (0+255),b
  2371  000BE4  0EFF               	movlw	255
  2372  000BE6  6FBE               	movwf	(??_timer0_lthread+1)& (0+255),b
  2373  000BE8  0100               	movlb	0	; () banked
  2374  000BEA  EE20 F008          	lfsr	2,8
  2375  000BEE  0100               	movlb	0	; () banked
  2376  000BF0  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2377  000BF2  26D9               	addwf	fsr2l,f,c
  2378  000BF4  0100               	movlb	0	; () banked
  2379  000BF6  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2380  000BF8  22DA               	addwfc	fsr2h,f,c
  2381  000BFA  CFDE F0BF          	movff	postinc2,??_timer0_lthread+2
  2382  000BFE  CFDD F0C0          	movff	postdec2,??_timer0_lthread+3
  2383  000C02  0100               	movlb	0	; () banked
  2384  000C04  51BD               	movf	??_timer0_lthread& (0+255),w,b
  2385  000C06  0100               	movlb	0	; () banked
  2386  000C08  27BF               	addwf	(??_timer0_lthread+2)& (0+255),f,b
  2387  000C0A  0100               	movlb	0	; () banked
  2388  000C0C  51BE               	movf	(??_timer0_lthread+1)& (0+255),w,b
  2389  000C0E  0100               	movlb	0	; () banked
  2390  000C10  23C0               	addwfc	(??_timer0_lthread+3)& (0+255),f,b
  2391  000C12  0100               	movlb	0	; () banked
  2392  000C14  519E               	movf	(?___lwmod+1)& (0+255),w,b
  2393  000C16  0100               	movlb	0	; () banked
  2394  000C18  19C0               	xorwf	(??_timer0_lthread+3)& (0+255),w,b
  2395  000C1A  E104               	bnz	u1895
  2396  000C1C  0100               	movlb	0	; () banked
  2397  000C1E  519D               	movf	?___lwmod& (0+255),w,b
  2398  000C20  0100               	movlb	0	; () banked
  2399  000C22  19BF               	xorwf	(??_timer0_lthread+2)& (0+255),w,b
  2400  000C24                     u1895:
  2401  000C24  A4D8               	btfss	status,2,c
  2402  000C26  D025               	goto	l2968
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;timer0_thread.c: 23: unsigned char temp[2] = {0,0};
  2406  000C28  C0CA  F0C1         	movff	timer0_lthread@F5147,timer0_lthread@temp
  2407  000C2C  C0CB  F0C2         	movff	timer0_lthread@F5147+1,timer0_lthread@temp+1
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;timer0_thread.c: 24: sendUARTarr(2,temp);
  2411  000C30  0100               	movlb	0	; () banked
  2412  000C32  0E00               	movlw	high timer0_lthread@temp
  2413  000C34  0100               	movlb	0	; () banked
  2414  000C36  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2415  000C38  0100               	movlb	0	; () banked
  2416  000C3A  0EC1               	movlw	low timer0_lthread@temp
  2417  000C3C  0100               	movlb	0	; () banked
  2418  000C3E  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2419  000C40  0E02               	movlw	2
  2420  000C42  EC7C  F00E         	call	_sendUARTarr
  2421                           
  2422                           ;timer0_thread.c: 25: T0CONbits.TMR0ON = 0;;
  2423  000C46  9ED5               	bcf	4053,7,c	;volatile
  2424                           
  2425                           ;timer0_thread.c: 26: PORTA = 0x00;
  2426  000C48  0E00               	movlw	0
  2427  000C4A  6E80               	movwf	3968,c	;volatile
  2428                           
  2429                           ;timer0_thread.c: 27: tptr->ready = true;
  2430  000C4C  0100               	movlb	0	; () banked
  2431  000C4E  EE20 F00B          	lfsr	2,11
  2432  000C52  0100               	movlb	0	; () banked
  2433  000C54  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2434  000C56  26D9               	addwf	fsr2l,f,c
  2435  000C58  0100               	movlb	0	; () banked
  2436  000C5A  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2437  000C5C  22DA               	addwfc	fsr2h,f,c
  2438  000C5E  0E01               	movlw	1
  2439  000C60  6EDF               	movwf	indf2,c
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;timer0_thread.c: 28: tptr->cmCount = 0;
  2443  000C62  C0BB  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2444  000C66  C0BC  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2445  000C6A  0E00               	movlw	0
  2446  000C6C  6EDE               	movwf	postinc2,c
  2447  000C6E  0E00               	movlw	0
  2448  000C70  6EDD               	movwf	postdec2,c
  2449  000C72                     l2968:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;timer0_thread.c: 29: }
  2453                           ;timer0_thread.c: 31: WriteTimer0(tptr->cmDist);
  2454  000C72  0100               	movlb	0	; () banked
  2455  000C74  EE20 F006          	lfsr	2,6
  2456  000C78  0100               	movlb	0	; () banked
  2457  000C7A  51BB               	movf	timer0_lthread@tptr& (0+255),w,b
  2458  000C7C  26D9               	addwf	fsr2l,f,c
  2459  000C7E  0100               	movlb	0	; () banked
  2460  000C80  51BC               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2461  000C82  22DA               	addwfc	fsr2h,f,c
  2462  000C84  0100               	movlb	0	; () banked
  2463  000C86  CFDE F09D          	movff	postinc2,WriteTimer0@timer0
  2464  000C8A  0100               	movlb	0	; () banked
  2465  000C8C  CFDD F09E          	movff	postdec2,WriteTimer0@timer0+1
  2466  000C90  EC59  F00F         	call	_WriteTimer0	;wreg free
  2467  000C94  0012               	return	
  2468  000C96                     __end_of_timer0_lthread:
  2469                           	opt stack 0
  2470                           tblptru	equ	0xFF8
  2471                           prodl	equ	0xFF3
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           indf1	equ	0xFE7
  2475                           fsr1h	equ	0xFE2
  2476                           fsr1l	equ	0xFE1
  2477                           indf2	equ	0xFDF
  2478                           postinc2	equ	0xFDE
  2479                           postdec2	equ	0xFDD
  2480                           fsr2h	equ	0xFDA
  2481                           fsr2l	equ	0xFD9
  2482                           status	equ	0xFD8
  2483                           
  2484 ;; *************** function ___lwmod *****************
  2485 ;; Defined at:
  2486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  dividend        2   29[BANK0 ] unsigned int 
  2489 ;;  divisor         2   31[BANK0 ] unsigned int 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  counter         1   33[BANK0 ] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2   29[BANK0 ] unsigned int 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2501 ;;      Params:         0       4       0       0       0
  2502 ;;      Locals:         0       1       0       0       0
  2503 ;;      Temps:          0       0       0       0       0
  2504 ;;      Totals:         0       5       0       0       0
  2505 ;;Total ram usage:        5 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:   10
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_timer0_lthread
  2512 ;;		_timer1_lthread
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text7
  2517  001886                     __ptext7:
  2518                           	opt stack 0
  2519  001886                     ___lwmod:
  2520                           	opt stack 18
  2521                           
  2522                           ;incstack = 0
  2523  001886  0100               	movlb	0	; () banked
  2524  001888  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2525  00188A  119F               	iorwf	___lwmod@divisor& (0+255),w,b
  2526  00188C  B4D8               	btfsc	status,2,c
  2527  00188E  D026               	goto	l1125
  2528                           
  2529                           ; BSR set to: 0
  2530  001890  0E01               	movlw	1
  2531  001892  0100               	movlb	0	; () banked
  2532  001894  6FA1               	movwf	___lwmod@counter& (0+255),b
  2533  001896  D006               	goto	l2534
  2534  001898                     l2532:
  2535                           
  2536                           ; BSR set to: 0
  2537  001898  0100               	movlb	0	; () banked
  2538  00189A  90D8               	bcf	status,0,c
  2539  00189C  379F               	rlcf	___lwmod@divisor& (0+255),f,b
  2540  00189E  37A0               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2541  0018A0  0100               	movlb	0	; () banked
  2542  0018A2  2BA1               	incf	___lwmod@counter& (0+255),f,b
  2543  0018A4                     l2534:
  2544                           
  2545                           ; BSR set to: 0
  2546  0018A4  0100               	movlb	0	; () banked
  2547  0018A6  AFA0               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2548  0018A8  D7F7               	goto	l2532
  2549  0018AA                     l2536:
  2550                           
  2551                           ; BSR set to: 0
  2552  0018AA  0100               	movlb	0	; () banked
  2553  0018AC  519F               	movf	___lwmod@divisor& (0+255),w,b
  2554  0018AE  0100               	movlb	0	; () banked
  2555  0018B0  5D9D               	subwf	___lwmod@dividend& (0+255),w,b
  2556  0018B2  0100               	movlb	0	; () banked
  2557  0018B4  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2558  0018B6  0100               	movlb	0	; () banked
  2559  0018B8  599E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2560  0018BA  A0D8               	btfss	status,0,c
  2561  0018BC  D008               	goto	l2540
  2562                           
  2563                           ; BSR set to: 0
  2564  0018BE  0100               	movlb	0	; () banked
  2565  0018C0  519F               	movf	___lwmod@divisor& (0+255),w,b
  2566  0018C2  0100               	movlb	0	; () banked
  2567  0018C4  5F9D               	subwf	___lwmod@dividend& (0+255),f,b
  2568  0018C6  0100               	movlb	0	; () banked
  2569  0018C8  51A0               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2570  0018CA  0100               	movlb	0	; () banked
  2571  0018CC  5B9E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2572  0018CE                     l2540:
  2573                           
  2574                           ; BSR set to: 0
  2575  0018CE  0100               	movlb	0	; () banked
  2576  0018D0  90D8               	bcf	status,0,c
  2577  0018D2  33A0               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2578  0018D4  339F               	rrcf	___lwmod@divisor& (0+255),f,b
  2579                           
  2580                           ; BSR set to: 0
  2581  0018D6  0100               	movlb	0	; () banked
  2582  0018D8  2FA1               	decfsz	___lwmod@counter& (0+255),f,b
  2583  0018DA  D7E7               	goto	l2536
  2584  0018DC                     l1125:
  2585                           
  2586                           ; BSR set to: 0
  2587  0018DC  C09D  F09D         	movff	___lwmod@dividend,?___lwmod
  2588  0018E0  C09E  F09E         	movff	___lwmod@dividend+1,?___lwmod+1
  2589                           
  2590                           ; BSR set to: 0
  2591  0018E4  0012               	return	
  2592  0018E6                     __end_of___lwmod:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           prodl	equ	0xFF3
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           indf1	equ	0xFE7
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           indf2	equ	0xFDF
  2602                           postinc2	equ	0xFDE
  2603                           postdec2	equ	0xFDD
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _stop *****************
  2609 ;; Defined at:
  2610 ;;		line 45 in file "src/motors.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  tptr0           2   59[BANK0 ] PTR struct __timer0_thre
  2613 ;;		 -> main@t0thread_data(12), 
  2614 ;;  tptr1           2   61[BANK0 ] PTR struct __timer1_thre
  2615 ;;		 -> main@t1thread_data(12), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  test            2   63[BANK0 ] unsigned char [2]
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2627 ;;      Params:         0       4       0       0       0
  2628 ;;      Locals:         0       2       0       0       0
  2629 ;;      Temps:          0       0       0       0       0
  2630 ;;      Totals:         0       6       0       0       0
  2631 ;;Total ram usage:        6 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:   14
  2634 ;; This function calls:
  2635 ;;		_WriteTimer0
  2636 ;;		_WriteTimer1
  2637 ;;		_sendUARTarr
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text8
  2644  001366                     __ptext8:
  2645                           	opt stack 0
  2646  001366                     _stop:
  2647                           	opt stack 15
  2648                           
  2649                           ;motors.c: 46: PORTA = 0x00;
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;incstack = 0
  2653  001366  0E00               	movlw	0
  2654  001368  6E80               	movwf	3968,c	;volatile
  2655                           
  2656                           ;motors.c: 47: unsigned char test[2] = {0,0};
  2657  00136A  C0C8  F0BF         	movff	stop@F5241,stop@test
  2658  00136E  C0C9  F0C0         	movff	stop@F5241+1,stop@test+1
  2659                           
  2660                           ;motors.c: 48: sendUARTarr(2,test);
  2661  001372  0100               	movlb	0	; () banked
  2662  001374  0E00               	movlw	high stop@test
  2663  001376  0100               	movlb	0	; () banked
  2664  001378  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  2665  00137A  0100               	movlb	0	; () banked
  2666  00137C  0EBF               	movlw	low stop@test
  2667  00137E  0100               	movlb	0	; () banked
  2668  001380  6FB7               	movwf	sendUARTarr@data& (0+255),b
  2669  001382  0E02               	movlw	2
  2670  001384  EC7C  F00E         	call	_sendUARTarr
  2671                           
  2672                           ;motors.c: 49: WriteTimer1(tptr1->cmDist);
  2673  001388  0100               	movlb	0	; () banked
  2674  00138A  EE20 F004          	lfsr	2,4
  2675  00138E  0100               	movlb	0	; () banked
  2676  001390  51BD               	movf	stop@tptr1& (0+255),w,b
  2677  001392  26D9               	addwf	fsr2l,f,c
  2678  001394  0100               	movlb	0	; () banked
  2679  001396  51BE               	movf	(stop@tptr1+1)& (0+255),w,b
  2680  001398  22DA               	addwfc	fsr2h,f,c
  2681  00139A  0100               	movlb	0	; () banked
  2682  00139C  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  2683  0013A0  0100               	movlb	0	; () banked
  2684  0013A2  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  2685  0013A6  EC62  F00F         	call	_WriteTimer1	;wreg free
  2686                           
  2687                           ;motors.c: 50: WriteTimer0(tptr0->cmDist);
  2688  0013AA  0100               	movlb	0	; () banked
  2689  0013AC  EE20 F006          	lfsr	2,6
  2690  0013B0  0100               	movlb	0	; () banked
  2691  0013B2  51BB               	movf	stop@tptr0& (0+255),w,b
  2692  0013B4  26D9               	addwf	fsr2l,f,c
  2693  0013B6  0100               	movlb	0	; () banked
  2694  0013B8  51BC               	movf	(stop@tptr0+1)& (0+255),w,b
  2695  0013BA  22DA               	addwfc	fsr2h,f,c
  2696  0013BC  0100               	movlb	0	; () banked
  2697  0013BE  CFDE F09D          	movff	postinc2,WriteTimer0@timer0
  2698  0013C2  0100               	movlb	0	; () banked
  2699  0013C4  CFDD F09E          	movff	postdec2,WriteTimer0@timer0+1
  2700  0013C8  EC59  F00F         	call	_WriteTimer0	;wreg free
  2701                           
  2702                           ;motors.c: 51: tptr0->cmCount = 0;
  2703  0013CC  C0BB  FFD9         	movff	stop@tptr0,fsr2l
  2704  0013D0  C0BC  FFDA         	movff	stop@tptr0+1,fsr2h
  2705  0013D4  0E00               	movlw	0
  2706  0013D6  6EDE               	movwf	postinc2,c
  2707  0013D8  0E00               	movlw	0
  2708  0013DA  6EDD               	movwf	postdec2,c
  2709                           
  2710                           ;motors.c: 52: tptr1->cmCount = 0;
  2711  0013DC  C0BD  FFD9         	movff	stop@tptr1,fsr2l
  2712  0013E0  C0BE  FFDA         	movff	stop@tptr1+1,fsr2h
  2713  0013E4  0E00               	movlw	0
  2714  0013E6  6EDE               	movwf	postinc2,c
  2715  0013E8  0E00               	movlw	0
  2716  0013EA  6EDD               	movwf	postdec2,c
  2717                           
  2718                           ;motors.c: 53: tptr0->ready = true;
  2719  0013EC  0100               	movlb	0	; () banked
  2720  0013EE  EE20 F00B          	lfsr	2,11
  2721  0013F2  0100               	movlb	0	; () banked
  2722  0013F4  51BB               	movf	stop@tptr0& (0+255),w,b
  2723  0013F6  26D9               	addwf	fsr2l,f,c
  2724  0013F8  0100               	movlb	0	; () banked
  2725  0013FA  51BC               	movf	(stop@tptr0+1)& (0+255),w,b
  2726  0013FC  22DA               	addwfc	fsr2h,f,c
  2727  0013FE  0E01               	movlw	1
  2728  001400  6EDF               	movwf	indf2,c
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;motors.c: 54: tptr1->ready = true;
  2732  001402  0100               	movlb	0	; () banked
  2733  001404  EE20 F00B          	lfsr	2,11
  2734  001408  0100               	movlb	0	; () banked
  2735  00140A  51BD               	movf	stop@tptr1& (0+255),w,b
  2736  00140C  26D9               	addwf	fsr2l,f,c
  2737  00140E  0100               	movlb	0	; () banked
  2738  001410  51BE               	movf	(stop@tptr1+1)& (0+255),w,b
  2739  001412  22DA               	addwfc	fsr2h,f,c
  2740  001414  0E01               	movlw	1
  2741  001416  6EDF               	movwf	indf2,c
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;motors.c: 55: T0CONbits.TMR0ON = 0;;
  2745  001418  9ED5               	bcf	4053,7,c	;volatile
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;motors.c: 56: T1CONbits.TMR1ON = 0;;
  2749  00141A  90CD               	bcf	4045,0,c	;volatile
  2750                           
  2751                           ; BSR set to: 0
  2752  00141C  0012               	return	
  2753  00141E                     __end_of_stop:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           prodl	equ	0xFF3
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           indf1	equ	0xFE7
  2760                           fsr1h	equ	0xFE2
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           fsr2h	equ	0xFDA
  2766                           fsr2l	equ	0xFD9
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _WriteTimer0 *****************
  2770 ;; Defined at:
  2771 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  timer0          2   29[BANK0 ] unsigned int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  timer           2   31[BANK0 ] struct Timers
  2776 ;; Return value:  Size  Location     Type
  2777 ;;		None               void
  2778 ;; Registers used:
  2779 ;;		None
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2785 ;;      Params:         0       2       0       0       0
  2786 ;;      Locals:         0       2       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       4       0       0       0
  2789 ;;Total ram usage:        4 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:   10
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_turn
  2796 ;;		_stop
  2797 ;;		_timer0_lthread
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text9
  2802  001EB2                     __ptext9:
  2803                           	opt stack 0
  2804  001EB2                     _WriteTimer0:
  2805                           	opt stack 18
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;incstack = 0
  2809  001EB2  C09D  F09F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2810  001EB6  C09E  F0A0         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2811  001EBA  C0A0  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2812  001EBE  C09F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2813  001EC2  0012               	return	
  2814  001EC4                     __end_of_WriteTimer0:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           prodl	equ	0xFF3
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           indf1	equ	0xFE7
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           indf2	equ	0xFDF
  2824                           postinc2	equ	0xFDE
  2825                           postdec2	equ	0xFDD
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _start_i2c_slave_reply *****************
  2831 ;; Defined at:
  2832 ;;		line 53 in file "src/my_i2c.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  length          1    wreg     unsigned char 
  2835 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2836 ;;		 -> main@msgbuffer(11), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  length          1   33[BANK0 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;		None               void
  2841 ;; Registers used:
  2842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2848 ;;      Params:         0       2       0       0       0
  2849 ;;      Locals:         0       1       0       0       0
  2850 ;;      Temps:          0       2       0       0       0
  2851 ;;      Totals:         0       5       0       0       0
  2852 ;;Total ram usage:        5 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:   10
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text10
  2863  000C96                     __ptext10:
  2864                           	opt stack 0
  2865  000C96                     _start_i2c_slave_reply:
  2866                           	opt stack 19
  2867                           
  2868                           ;incstack = 0
  2869                           ;start_i2c_slave_reply@length stored from wreg
  2870  000C96  0100               	movlb	0	; () banked
  2871  000C98  6FA1               	movwf	start_i2c_slave_reply@length& (0+255),b
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2875  000C9A  0100               	movlb	0	; () banked
  2876  000C9C  EE20 F019          	lfsr	2,25
  2877  000CA0  0100               	movlb	0	; () banked
  2878  000CA2  51CE               	movf	_ic_ptr& (0+255),w,b
  2879  000CA4  26D9               	addwf	fsr2l,f,c
  2880  000CA6  0100               	movlb	0	; () banked
  2881  000CA8  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2882  000CAA  22DA               	addwfc	fsr2h,f,c
  2883  000CAC  0E00               	movlw	0
  2884  000CAE  6EDF               	movwf	indf2,c
  2885  000CB0  D03E               	goto	l3046
  2886  000CB2                     l3042:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2890  000CB2  0100               	movlb	0	; () banked
  2891  000CB4  EE20 F019          	lfsr	2,25
  2892  000CB8  0100               	movlb	0	; () banked
  2893  000CBA  51CE               	movf	_ic_ptr& (0+255),w,b
  2894  000CBC  26D9               	addwf	fsr2l,f,c
  2895  000CBE  0100               	movlb	0	; () banked
  2896  000CC0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2897  000CC2  22DA               	addwfc	fsr2h,f,c
  2898  000CC4  50DF               	movf	indf2,w,c
  2899  000CC6  0100               	movlb	0	; () banked
  2900  000CC8  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  2901  000CCA  0100               	movlb	0	; () banked
  2902  000CCC  519F               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2903  000CCE  0D01               	mullw	1
  2904  000CD0  50F3               	movf	prodl,w,c
  2905  000CD2  0100               	movlb	0	; () banked
  2906  000CD4  259D               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2907  000CD6  6ED9               	movwf	fsr2l,c
  2908  000CD8  50F4               	movf	prodh,w,c
  2909  000CDA  0100               	movlb	0	; () banked
  2910  000CDC  219E               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2911  000CDE  6EDA               	movwf	fsr2h,c
  2912  000CE0  0100               	movlb	0	; () banked
  2913  000CE2  EE10 F019          	lfsr	1,25
  2914  000CE6  0100               	movlb	0	; () banked
  2915  000CE8  51CE               	movf	_ic_ptr& (0+255),w,b
  2916  000CEA  26E1               	addwf	fsr1l,f,c
  2917  000CEC  0100               	movlb	0	; () banked
  2918  000CEE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2919  000CF0  22E2               	addwfc	fsr1h,f,c
  2920  000CF2  50E7               	movf	indf1,w,c
  2921  000CF4  0100               	movlb	0	; () banked
  2922  000CF6  6FA0               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2923  000CF8  0100               	movlb	0	; () banked
  2924  000CFA  51A0               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2925  000CFC  0D01               	mullw	1
  2926  000CFE  0E0F               	movlw	15
  2927  000D00  26F3               	addwf	prodl,f,c
  2928  000D02  0E00               	movlw	0
  2929  000D04  22F4               	addwfc	prodh,f,c
  2930  000D06  50F3               	movf	prodl,w,c
  2931  000D08  0100               	movlb	0	; () banked
  2932  000D0A  25CE               	addwf	_ic_ptr& (0+255),w,b
  2933  000D0C  6EE1               	movwf	fsr1l,c
  2934  000D0E  50F4               	movf	prodh,w,c
  2935  000D10  0100               	movlb	0	; () banked
  2936  000D12  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2937  000D14  6EE2               	movwf	fsr1h,c
  2938  000D16  CFDF FFE7          	movff	indf2,indf1
  2939                           
  2940                           ; BSR set to: 0
  2941  000D1A  0100               	movlb	0	; () banked
  2942  000D1C  EE20 F019          	lfsr	2,25
  2943  000D20  0100               	movlb	0	; () banked
  2944  000D22  51CE               	movf	_ic_ptr& (0+255),w,b
  2945  000D24  26D9               	addwf	fsr2l,f,c
  2946  000D26  0100               	movlb	0	; () banked
  2947  000D28  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2948  000D2A  22DA               	addwfc	fsr2h,f,c
  2949  000D2C  2ADF               	incf	indf2,f,c
  2950  000D2E                     l3046:
  2951                           
  2952                           ; BSR set to: 0
  2953  000D2E  0100               	movlb	0	; () banked
  2954  000D30  EE20 F019          	lfsr	2,25
  2955  000D34  0100               	movlb	0	; () banked
  2956  000D36  51CE               	movf	_ic_ptr& (0+255),w,b
  2957  000D38  26D9               	addwf	fsr2l,f,c
  2958  000D3A  0100               	movlb	0	; () banked
  2959  000D3C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2960  000D3E  22DA               	addwfc	fsr2h,f,c
  2961  000D40  50DF               	movf	indf2,w,c
  2962  000D42  0100               	movlb	0	; () banked
  2963  000D44  6F9F               	movwf	??_start_i2c_slave_reply& (0+255),b
  2964  000D46  0100               	movlb	0	; () banked
  2965  000D48  51A1               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2966  000D4A  0100               	movlb	0	; () banked
  2967  000D4C  5D9F               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2968  000D4E  A0D8               	btfss	status,0,c
  2969  000D50  D7B0               	goto	l3042
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;my_i2c.c: 57: }
  2973                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2974                           
  2975                           ; BSR set to: 0
  2976  000D52  0100               	movlb	0	; () banked
  2977  000D54  EE20 F019          	lfsr	2,25
  2978  000D58  0100               	movlb	0	; () banked
  2979  000D5A  51CE               	movf	_ic_ptr& (0+255),w,b
  2980  000D5C  26D9               	addwf	fsr2l,f,c
  2981  000D5E  0100               	movlb	0	; () banked
  2982  000D60  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2983  000D62  22DA               	addwfc	fsr2h,f,c
  2984  000D64  0100               	movlb	0	; () banked
  2985  000D66  C0A1  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2986                           
  2987                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2988  000D6A  0100               	movlb	0	; () banked
  2989  000D6C  EE20 F01A          	lfsr	2,26
  2990  000D70  0100               	movlb	0	; () banked
  2991  000D72  51CE               	movf	_ic_ptr& (0+255),w,b
  2992  000D74  26D9               	addwf	fsr2l,f,c
  2993  000D76  0100               	movlb	0	; () banked
  2994  000D78  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  2995  000D7A  22DA               	addwfc	fsr2h,f,c
  2996  000D7C  0E01               	movlw	1
  2997  000D7E  6EDF               	movwf	indf2,c
  2998                           
  2999                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  3000  000D80  0100               	movlb	0	; () banked
  3001  000D82  EE20 F00F          	lfsr	2,15
  3002  000D86  0100               	movlb	0	; () banked
  3003  000D88  51CE               	movf	_ic_ptr& (0+255),w,b
  3004  000D8A  26D9               	addwf	fsr2l,f,c
  3005  000D8C  0100               	movlb	0	; () banked
  3006  000D8E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  3007  000D90  22DA               	addwfc	fsr2h,f,c
  3008  000D92  50DF               	movf	indf2,w,c
  3009  000D94  6EC9               	movwf	4041,c	;volatile
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  3013  000D96  88C6               	bsf	4038,4,c	;volatile
  3014                           
  3015                           ; BSR set to: 0
  3016  000D98  0012               	return	
  3017  000D9A                     __end_of_start_i2c_slave_reply:
  3018                           	opt stack 0
  3019                           tblptru	equ	0xFF8
  3020                           prodh	equ	0xFF4
  3021                           prodl	equ	0xFF3
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           indf1	equ	0xFE7
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _moveDist *****************
  3035 ;; Defined at:
  3036 ;;		line 19 in file "src/motors.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  3039 ;;		 -> main@t1thread_data(12), 
  3040 ;;  dist            2   61[BANK0 ] int 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  test            2   63[BANK0 ] unsigned char [2]
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3052 ;;      Params:         0       4       0       0       0
  3053 ;;      Locals:         0       2       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         0       6       0       0       0
  3056 ;;Total ram usage:        6 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:   14
  3059 ;; This function calls:
  3060 ;;		_WriteTimer1
  3061 ;;		_sendUARTarr
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text11
  3068  00141E                     __ptext11:
  3069                           	opt stack 0
  3070  00141E                     _moveDist:
  3071                           	opt stack 15
  3072                           
  3073                           ;motors.c: 20: PORTA = 0x01;
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077  00141E  0E01               	movlw	1
  3078  001420  6E80               	movwf	3968,c	;volatile
  3079                           
  3080                           ;motors.c: 21: tptr->distLim = true;
  3081  001422  0100               	movlb	0	; () banked
  3082  001424  EE20 F00A          	lfsr	2,10
  3083  001428  0100               	movlb	0	; () banked
  3084  00142A  51BB               	movf	moveDist@tptr& (0+255),w,b
  3085  00142C  26D9               	addwf	fsr2l,f,c
  3086  00142E  0100               	movlb	0	; () banked
  3087  001430  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3088  001432  22DA               	addwfc	fsr2h,f,c
  3089  001434  0E01               	movlw	1
  3090  001436  6EDF               	movwf	indf2,c
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;motors.c: 22: tptr->curMove = dist;
  3094  001438  0100               	movlb	0	; () banked
  3095  00143A  EE20 F006          	lfsr	2,6
  3096  00143E  0100               	movlb	0	; () banked
  3097  001440  51BB               	movf	moveDist@tptr& (0+255),w,b
  3098  001442  26D9               	addwf	fsr2l,f,c
  3099  001444  0100               	movlb	0	; () banked
  3100  001446  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3101  001448  22DA               	addwfc	fsr2h,f,c
  3102  00144A  0100               	movlb	0	; () banked
  3103  00144C  C0BD  FFDE         	movff	moveDist@dist,postinc2
  3104  001450  0100               	movlb	0	; () banked
  3105  001452  C0BE  FFDD         	movff	moveDist@dist+1,postdec2
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;motors.c: 23: unsigned char test[2];
  3109                           ;motors.c: 24: test[0] = tptr->ctrl[0];
  3110  001456  0100               	movlb	0	; () banked
  3111  001458  EE20 F002          	lfsr	2,2
  3112  00145C  0100               	movlb	0	; () banked
  3113  00145E  51BB               	movf	moveDist@tptr& (0+255),w,b
  3114  001460  26D9               	addwf	fsr2l,f,c
  3115  001462  0100               	movlb	0	; () banked
  3116  001464  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3117  001466  22DA               	addwfc	fsr2h,f,c
  3118  001468  50DF               	movf	indf2,w,c
  3119  00146A  0100               	movlb	0	; () banked
  3120  00146C  6FBF               	movwf	moveDist@test& (0+255),b
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;motors.c: 25: test[1] = tptr->ctrl[1];
  3124  00146E  0100               	movlb	0	; () banked
  3125  001470  EE20 F003          	lfsr	2,3
  3126  001474  0100               	movlb	0	; () banked
  3127  001476  51BB               	movf	moveDist@tptr& (0+255),w,b
  3128  001478  26D9               	addwf	fsr2l,f,c
  3129  00147A  0100               	movlb	0	; () banked
  3130  00147C  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3131  00147E  22DA               	addwfc	fsr2h,f,c
  3132  001480  50DF               	movf	indf2,w,c
  3133  001482  0100               	movlb	0	; () banked
  3134  001484  6FC0               	movwf	(moveDist@test+1)& (0+255),b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;motors.c: 26: T1CONbits.TMR1ON = 1;;
  3138  001486  80CD               	bsf	4045,0,c	;volatile
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;motors.c: 27: sendUARTarr(2,test);
  3142  001488  0100               	movlb	0	; () banked
  3143  00148A  0E00               	movlw	high moveDist@test
  3144  00148C  0100               	movlb	0	; () banked
  3145  00148E  6FB8               	movwf	(sendUARTarr@data+1)& (0+255),b
  3146  001490  0100               	movlb	0	; () banked
  3147  001492  0EBF               	movlw	low moveDist@test
  3148  001494  0100               	movlb	0	; () banked
  3149  001496  6FB7               	movwf	sendUARTarr@data& (0+255),b
  3150  001498  0E02               	movlw	2
  3151  00149A  EC7C  F00E         	call	_sendUARTarr
  3152                           
  3153                           ;motors.c: 28: WriteTimer1(tptr->cmDist);
  3154  00149E  0100               	movlb	0	; () banked
  3155  0014A0  EE20 F004          	lfsr	2,4
  3156  0014A4  0100               	movlb	0	; () banked
  3157  0014A6  51BB               	movf	moveDist@tptr& (0+255),w,b
  3158  0014A8  26D9               	addwf	fsr2l,f,c
  3159  0014AA  0100               	movlb	0	; () banked
  3160  0014AC  51BC               	movf	(moveDist@tptr+1)& (0+255),w,b
  3161  0014AE  22DA               	addwfc	fsr2h,f,c
  3162  0014B0  0100               	movlb	0	; () banked
  3163  0014B2  CFDE F09D          	movff	postinc2,WriteTimer1@timer1
  3164  0014B6  0100               	movlb	0	; () banked
  3165  0014B8  CFDD F09E          	movff	postdec2,WriteTimer1@timer1+1
  3166  0014BC  EC62  F00F         	call	_WriteTimer1	;wreg free
  3167                           
  3168                           ;motors.c: 29: tptr->cmCount = 0;
  3169  0014C0  C0BB  FFD9         	movff	moveDist@tptr,fsr2l
  3170  0014C4  C0BC  FFDA         	movff	moveDist@tptr+1,fsr2h
  3171  0014C8  0E00               	movlw	0
  3172  0014CA  6EDE               	movwf	postinc2,c
  3173  0014CC  0E00               	movlw	0
  3174  0014CE  6EDD               	movwf	postdec2,c
  3175  0014D0  0012               	return	
  3176  0014D2                     __end_of_moveDist:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           postinc0	equ	0xFEE
  3182                           wreg	equ	0xFE8
  3183                           indf1	equ	0xFE7
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function _sendUARTarr *****************
  3194 ;; Defined at:
  3195 ;;		line 85 in file "src/my_uart.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  length          1    wreg     unsigned char 
  3198 ;;  data            2   55[BANK0 ] PTR unsigned char 
  3199 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), stop@test(2), turn@test(2), 
  3200 ;;		 -> moveDist@test(2), move@test(2), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  length          1   58[BANK0 ] unsigned char 
  3203 ;;  retval          1   57[BANK0 ] char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      enum E4455
  3206 ;; Registers used:
  3207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3213 ;;      Params:         0       2       0       0       0
  3214 ;;      Locals:         0       2       0       0       0
  3215 ;;      Temps:          0       0       0       0       0
  3216 ;;      Totals:         0       4       0       0       0
  3217 ;;Total ram usage:        4 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:   13
  3220 ;; This function calls:
  3221 ;;		_ToMainLow_sendmsg
  3222 ;; This function is called by:
  3223 ;;		_moveDist
  3224 ;;		_turn
  3225 ;;		_stop
  3226 ;;		_timer0_lthread
  3227 ;;		_timer1_lthread
  3228 ;;		_move
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text12
  3233  001CF8                     __ptext12:
  3234                           	opt stack 0
  3235  001CF8                     _sendUARTarr:
  3236                           	opt stack 15
  3237                           
  3238                           ;incstack = 0
  3239                           ;sendUARTarr@length stored from wreg
  3240  001CF8  0100               	movlb	0	; () banked
  3241  001CFA  6FBA               	movwf	sendUARTarr@length& (0+255),b
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;my_uart.c: 86: if(length > 10){
  3245  001CFC  0E0A               	movlw	10
  3246  001CFE  0100               	movlb	0	; () banked
  3247  001D00  65BA               	cpfsgt	sendUARTarr@length& (0+255),b
  3248  001D02  D001               	goto	l2484
  3249  001D04  0012               	return	
  3250  001D06                     l2484:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;my_uart.c: 89: }
  3254                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  3255  001D06  0E1F               	movlw	31
  3256  001D08  0100               	movlb	0	; () banked
  3257  001D0A  6FB3               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  3258  001D0C  0100               	movlb	0	; () banked
  3259  001D0E  C0B8  F0B5         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  3260  001D12  0100               	movlb	0	; () banked
  3261  001D14  C0B7  F0B4         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  3262  001D18  0100               	movlb	0	; () banked
  3263  001D1A  51BA               	movf	sendUARTarr@length& (0+255),w,b
  3264  001D1C  EC93  F00E         	call	_ToMainLow_sendmsg
  3265  001D20  0100               	movlb	0	; () banked
  3266  001D22  6FB9               	movwf	sendUARTarr@retval& (0+255),b
  3267  001D24  0012               	return	
  3268  001D26                     __end_of_sendUARTarr:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           prodh	equ	0xFF4
  3272                           prodl	equ	0xFF3
  3273                           postinc0	equ	0xFEE
  3274                           wreg	equ	0xFE8
  3275                           indf1	equ	0xFE7
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _ToMainLow_sendmsg *****************
  3286 ;; Defined at:
  3287 ;;		line 103 in file "src/messages.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  length          1    wreg     unsigned char 
  3290 ;;  msgtype         1   51[BANK0 ] unsigned char 
  3291 ;;  data            2   52[BANK0 ] PTR void 
  3292 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  3293 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  3294 ;;		 -> NULL(0), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  length          1   54[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      char 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3306 ;;      Params:         0       3       0       0       0
  3307 ;;      Locals:         0       1       0       0       0
  3308 ;;      Temps:          0       0       0       0       0
  3309 ;;      Totals:         0       4       0       0       0
  3310 ;;Total ram usage:        4 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   12
  3313 ;; This function calls:
  3314 ;;		_send_msg
  3315 ;; This function is called by:
  3316 ;;		_sendUARTarr
  3317 ;;		_sendUARTbyte
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text13
  3322  001D26                     __ptext13:
  3323                           	opt stack 0
  3324  001D26                     _ToMainLow_sendmsg:
  3325                           	opt stack 15
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;incstack = 0
  3329                           ;ToMainLow_sendmsg@length stored from wreg
  3330  001D26  0100               	movlb	0	; () banked
  3331  001D28  6FB6               	movwf	ToMainLow_sendmsg@length& (0+255),b
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3335  001D2A  0101               	movlb	1	; () banked
  3336  001D2C  0E01               	movlw	high _ToMainLow_MQ
  3337  001D2E  0100               	movlb	0	; () banked
  3338  001D30  6FA8               	movwf	(send_msg@qptr+1)& (0+255),b
  3339  001D32  0101               	movlb	1	; () banked
  3340  001D34  0E6C               	movlw	low _ToMainLow_MQ
  3341  001D36  0100               	movlb	0	; () banked
  3342  001D38  6FA7               	movwf	send_msg@qptr& (0+255),b
  3343  001D3A  C0B6  F0A9         	movff	ToMainLow_sendmsg@length,send_msg@length
  3344  001D3E  C0B3  F0AA         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3345  001D42  0100               	movlb	0	; () banked
  3346  001D44  C0B5  F0AC         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3347  001D48  0100               	movlb	0	; () banked
  3348  001D4A  C0B4  F0AB         	movff	ToMainLow_sendmsg@data,send_msg@data
  3349  001D4E  EC4B  F007         	call	_send_msg	;wreg free
  3350  001D52  0012               	return	
  3351  001D54                     __end_of_ToMainLow_sendmsg:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           prodh	equ	0xFF4
  3355                           prodl	equ	0xFF3
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf1	equ	0xFE7
  3359                           fsr1h	equ	0xFE2
  3360                           fsr1l	equ	0xFE1
  3361                           indf2	equ	0xFDF
  3362                           postinc2	equ	0xFDE
  3363                           postdec2	equ	0xFDD
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _send_msg *****************
  3369 ;; Defined at:
  3370 ;;		line 24 in file "src/messages.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3373 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3374 ;;  length          1   41[BANK0 ] unsigned char 
  3375 ;;  msgtype         1   42[BANK0 ] unsigned char 
  3376 ;;  data            2   43[BANK0 ] PTR void 
  3377 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  3378 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  3379 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  qmsg            2   49[BANK0 ] PTR struct __msg
  3382 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3383 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3384 ;;  tlength         2   46[BANK0 ] unsigned int 
  3385 ;;  slot            1   48[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      char 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3395 ;;      Params:         0       6       0       0       0
  3396 ;;      Locals:         0       5       0       0       0
  3397 ;;      Temps:          0       1       0       0       0
  3398 ;;      Totals:         0      12       0       0       0
  3399 ;;Total ram usage:       12 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:   11
  3402 ;; This function calls:
  3403 ;;		_memcpy
  3404 ;; This function is called by:
  3405 ;;		_ToMainLow_sendmsg
  3406 ;;		_FromMainLow_sendmsg
  3407 ;;		_FromMainHigh_sendmsg
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text14
  3412  000E96                     __ptext14:
  3413                           	opt stack 0
  3414  000E96                     _send_msg:
  3415                           	opt stack 16
  3416                           
  3417                           ;messages.c: 25: unsigned char slot;
  3418                           ;messages.c: 27: msg *qmsg;
  3419                           ;messages.c: 28: size_t tlength = length;
  3420                           
  3421                           ;incstack = 0
  3422  000E96  0100               	movlb	0	; () banked
  3423  000E98  C0A9  F0AE         	movff	send_msg@length,send_msg@tlength
  3424  000E9C  0100               	movlb	0	; () banked
  3425  000E9E  6BAF               	clrf	(send_msg@tlength+1)& (0+255),b
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3429  000EA0  0100               	movlb	0	; () banked
  3430  000EA2  EE20 F034          	lfsr	2,52
  3431  000EA6  0100               	movlb	0	; () banked
  3432  000EA8  51A7               	movf	send_msg@qptr& (0+255),w,b
  3433  000EAA  26D9               	addwf	fsr2l,f,c
  3434  000EAC  0100               	movlb	0	; () banked
  3435  000EAE  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3436  000EB0  22DA               	addwfc	fsr2h,f,c
  3437  000EB2  50DF               	movf	indf2,w,c
  3438  000EB4  0100               	movlb	0	; () banked
  3439  000EB6  6FB0               	movwf	send_msg@slot& (0+255),b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3443  000EB8  0100               	movlb	0	; () banked
  3444  000EBA  51B0               	movf	send_msg@slot& (0+255),w,b
  3445  000EBC  0D0D               	mullw	13
  3446  000EBE  50F3               	movf	prodl,w,c
  3447  000EC0  0100               	movlb	0	; () banked
  3448  000EC2  25A7               	addwf	send_msg@qptr& (0+255),w,b
  3449  000EC4  0100               	movlb	0	; () banked
  3450  000EC6  6FB1               	movwf	send_msg@qmsg& (0+255),b
  3451  000EC8  50F4               	movf	prodh,w,c
  3452  000ECA  0100               	movlb	0	; () banked
  3453  000ECC  21A8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3454  000ECE  0100               	movlb	0	; () banked
  3455  000ED0  6FB2               	movwf	(send_msg@qmsg+1)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;messages.c: 41: if (qmsg->full != 0) {
  3459  000ED2  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  3460  000ED6  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3461  000EDA  50DF               	movf	indf2,w,c
  3462  000EDC  B4D8               	btfsc	status,2,c
  3463  000EDE  D002               	goto	l2258
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;messages.c: 42: return (-1);
  3467  000EE0  0EFF               	movlw	255
  3468  000EE2  0012               	return	
  3469  000EE4                     l2258:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;messages.c: 43: }
  3473                           ;messages.c: 46: qmsg->length = length;
  3474  000EE4  0100               	movlb	0	; () banked
  3475  000EE6  EE20 F001          	lfsr	2,1
  3476  000EEA  0100               	movlb	0	; () banked
  3477  000EEC  51B1               	movf	send_msg@qmsg& (0+255),w,b
  3478  000EEE  26D9               	addwf	fsr2l,f,c
  3479  000EF0  0100               	movlb	0	; () banked
  3480  000EF2  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3481  000EF4  22DA               	addwfc	fsr2h,f,c
  3482  000EF6  0100               	movlb	0	; () banked
  3483  000EF8  C0A9  FFDF         	movff	send_msg@length,indf2
  3484                           
  3485                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3486  000EFC  0100               	movlb	0	; () banked
  3487  000EFE  EE20 F002          	lfsr	2,2
  3488  000F02  0100               	movlb	0	; () banked
  3489  000F04  51B1               	movf	send_msg@qmsg& (0+255),w,b
  3490  000F06  26D9               	addwf	fsr2l,f,c
  3491  000F08  0100               	movlb	0	; () banked
  3492  000F0A  51B2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3493  000F0C  22DA               	addwfc	fsr2h,f,c
  3494  000F0E  0100               	movlb	0	; () banked
  3495  000F10  C0AA  FFDF         	movff	send_msg@msgtype,indf2
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3499  000F14  0E03               	movlw	3
  3500  000F16  0100               	movlb	0	; () banked
  3501  000F18  25B1               	addwf	send_msg@qmsg& (0+255),w,b
  3502  000F1A  0100               	movlb	0	; () banked
  3503  000F1C  6F9D               	movwf	memcpy@d1& (0+255),b
  3504  000F1E  0E00               	movlw	0
  3505  000F20  0100               	movlb	0	; () banked
  3506  000F22  21B2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3507  000F24  0100               	movlb	0	; () banked
  3508  000F26  6F9E               	movwf	(memcpy@d1+1)& (0+255),b
  3509  000F28  0100               	movlb	0	; () banked
  3510  000F2A  C0AC  F0A0         	movff	send_msg@data+1,memcpy@s1+1
  3511  000F2E  0100               	movlb	0	; () banked
  3512  000F30  C0AB  F09F         	movff	send_msg@data,memcpy@s1
  3513  000F34  C0AE  F0A1         	movff	send_msg@tlength,memcpy@n
  3514  000F38  C0AF  F0A2         	movff	send_msg@tlength+1,memcpy@n+1
  3515  000F3C  ECF7  F00C         	call	_memcpy	;wreg free
  3516                           
  3517                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3518  000F40  0100               	movlb	0	; () banked
  3519  000F42  EE20 F034          	lfsr	2,52
  3520  000F46  0100               	movlb	0	; () banked
  3521  000F48  51A7               	movf	send_msg@qptr& (0+255),w,b
  3522  000F4A  26D9               	addwf	fsr2l,f,c
  3523  000F4C  0100               	movlb	0	; () banked
  3524  000F4E  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3525  000F50  22DA               	addwfc	fsr2h,f,c
  3526  000F52  0100               	movlb	0	; () banked
  3527  000F54  EE10 F034          	lfsr	1,52
  3528  000F58  0100               	movlb	0	; () banked
  3529  000F5A  51A7               	movf	send_msg@qptr& (0+255),w,b
  3530  000F5C  26E1               	addwf	fsr1l,f,c
  3531  000F5E  0100               	movlb	0	; () banked
  3532  000F60  51A8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3533  000F62  22E2               	addwfc	fsr1h,f,c
  3534  000F64  50E7               	movf	indf1,w,c
  3535  000F66  0100               	movlb	0	; () banked
  3536  000F68  6FAD               	movwf	??_send_msg& (0+255),b
  3537  000F6A  0100               	movlb	0	; () banked
  3538  000F6C  29AD               	incf	??_send_msg& (0+255),w,b
  3539  000F6E  0B03               	andlw	3
  3540  000F70  6EDF               	movwf	indf2,c
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;messages.c: 59: qmsg->full = 1;
  3544  000F72  C0B1  FFD9         	movff	send_msg@qmsg,fsr2l
  3545  000F76  C0B2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3546  000F7A  0E01               	movlw	1
  3547  000F7C  6EDF               	movwf	indf2,c
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;messages.c: 60: return (1);
  3551  000F7E  0E01               	movlw	1
  3552  000F80  0012               	return	
  3553  000F82                     __end_of_send_msg:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           prodh	equ	0xFF4
  3557                           prodl	equ	0xFF3
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           indf1	equ	0xFE7
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _WriteTimer1 *****************
  3571 ;; Defined at:
  3572 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  timer1          2   29[BANK0 ] unsigned int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  timer           2   31[BANK0 ] struct Timers
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		None
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3586 ;;      Params:         0       2       0       0       0
  3587 ;;      Locals:         0       2       0       0       0
  3588 ;;      Temps:          0       0       0       0       0
  3589 ;;      Totals:         0       4       0       0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:   10
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_moveDist
  3597 ;;		_stop
  3598 ;;		_timer1_lthread
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text15
  3603  001EC4                     __ptext15:
  3604                           	opt stack 0
  3605  001EC4                     _WriteTimer1:
  3606                           	opt stack 18
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;incstack = 0
  3610  001EC4  C09D  F09F         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3611  001EC8  C09E  F0A0         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3612  001ECC  C0A0  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3613  001ED0  C09F  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3614  001ED4  0012               	return	
  3615  001ED6                     __end_of_WriteTimer1:
  3616                           	opt stack 0
  3617                           tblptru	equ	0xFF8
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           indf1	equ	0xFE7
  3623                           fsr1h	equ	0xFE2
  3624                           fsr1l	equ	0xFE1
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function _init_uart_recv *****************
  3633 ;; Defined at:
  3634 ;;		line 80 in file "src/my_uart.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  3637 ;;		 -> main@uc(5), 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;		None               void
  3642 ;; Registers used:
  3643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3649 ;;      Params:         0       2       0       0       0
  3650 ;;      Locals:         0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0
  3652 ;;      Totals:         0       2       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:   10
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text16
  3664  001E62                     __ptext16:
  3665                           	opt stack 0
  3666  001E62                     _init_uart_recv:
  3667                           	opt stack 19
  3668                           
  3669                           ;my_uart.c: 81: uc_ptr = uc;
  3670                           
  3671                           ;incstack = 0
  3672  001E62  0100               	movlb	0	; () banked
  3673  001E64  C09E  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3674  001E68  0100               	movlb	0	; () banked
  3675  001E6A  C09D  F049         	movff	init_uart_recv@uc,_uc_ptr
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3679  001E6E  EE20 F004          	lfsr	2,4
  3680  001E72  5049               	movf	_uc_ptr,w,c
  3681  001E74  26D9               	addwf	fsr2l,f,c
  3682  001E76  504A               	movf	_uc_ptr+1,w,c
  3683  001E78  22DA               	addwfc	fsr2h,f,c
  3684  001E7A  0E00               	movlw	0
  3685  001E7C  6EDF               	movwf	indf2,c
  3686                           
  3687                           ; BSR set to: 0
  3688  001E7E  0012               	return	
  3689  001E80                     __end_of_init_uart_recv:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           postinc0	equ	0xFEE
  3695                           wreg	equ	0xFE8
  3696                           indf1	equ	0xFE7
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           indf2	equ	0xFDF
  3700                           postinc2	equ	0xFDE
  3701                           postdec2	equ	0xFDD
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _init_uart_lthread *****************
  3707 ;; Defined at:
  3708 ;;		line 7 in file "src/uart_thread.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  3711 ;;		 -> main@uthread_data(10), 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		None
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3723 ;;      Params:         0       2       0       0       0
  3724 ;;      Locals:         0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0
  3726 ;;      Totals:         0       2       0       0       0
  3727 ;;Total ram usage:        2 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:   10
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text17
  3738  001F00                     __ptext17:
  3739                           	opt stack 0
  3740  001F00                     _init_uart_lthread:
  3741                           	opt stack 19
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;incstack = 0
  3745  001F00  0012               	return	
  3746  001F02                     __end_of_init_uart_lthread:
  3747                           	opt stack 0
  3748                           tblptru	equ	0xFF8
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           indf1	equ	0xFE7
  3754                           fsr1h	equ	0xFE2
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           postdec2	equ	0xFDD
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function _init_timer1_lthread *****************
  3764 ;; Defined at:
  3765 ;;		line 6 in file "src/timer1_thread.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  3768 ;;		 -> main@t1thread_data(12), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;		None               void
  3773 ;; Registers used:
  3774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3780 ;;      Params:         0       2       0       0       0
  3781 ;;      Locals:         0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0
  3783 ;;      Totals:         0       2       0       0       0
  3784 ;;Total ram usage:        2 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:   10
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text18
  3795  00157C                     __ptext18:
  3796                           	opt stack 0
  3797  00157C                     _init_timer1_lthread:
  3798                           	opt stack 19
  3799                           
  3800                           ;timer1_thread.c: 7: tptr->cmCount = 0;
  3801                           
  3802                           ;incstack = 0
  3803  00157C  C09D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3804  001580  C09E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3805  001584  0E00               	movlw	0
  3806  001586  6EDE               	movwf	postinc2,c
  3807  001588  0E00               	movlw	0
  3808  00158A  6EDD               	movwf	postdec2,c
  3809                           
  3810                           ;timer1_thread.c: 8: tptr->ctrl[0] = 90;
  3811  00158C  0100               	movlb	0	; () banked
  3812  00158E  EE20 F002          	lfsr	2,2
  3813  001592  0100               	movlb	0	; () banked
  3814  001594  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3815  001596  26D9               	addwf	fsr2l,f,c
  3816  001598  0100               	movlb	0	; () banked
  3817  00159A  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3818  00159C  22DA               	addwfc	fsr2h,f,c
  3819  00159E  0E5A               	movlw	90
  3820  0015A0  6EDF               	movwf	indf2,c
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;timer1_thread.c: 9: tptr->ctrl[1] = 215;
  3824  0015A2  0100               	movlb	0	; () banked
  3825  0015A4  EE20 F003          	lfsr	2,3
  3826  0015A8  0100               	movlb	0	; () banked
  3827  0015AA  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3828  0015AC  26D9               	addwf	fsr2l,f,c
  3829  0015AE  0100               	movlb	0	; () banked
  3830  0015B0  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3831  0015B2  22DA               	addwfc	fsr2h,f,c
  3832  0015B4  0ED7               	movlw	215
  3833  0015B6  6EDF               	movwf	indf2,c
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;timer1_thread.c: 10: tptr->cmDist = 65458;
  3837  0015B8  0100               	movlb	0	; () banked
  3838  0015BA  EE20 F004          	lfsr	2,4
  3839  0015BE  0100               	movlb	0	; () banked
  3840  0015C0  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3841  0015C2  26D9               	addwf	fsr2l,f,c
  3842  0015C4  0100               	movlb	0	; () banked
  3843  0015C6  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3844  0015C8  22DA               	addwfc	fsr2h,f,c
  3845  0015CA  0EB2               	movlw	178
  3846  0015CC  6EDE               	movwf	postinc2,c
  3847  0015CE  0EFF               	movlw	255
  3848  0015D0  6EDD               	movwf	postdec2,c
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;timer1_thread.c: 11: tptr->curMove = 0;
  3852  0015D2  0100               	movlb	0	; () banked
  3853  0015D4  EE20 F006          	lfsr	2,6
  3854  0015D8  0100               	movlb	0	; () banked
  3855  0015DA  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3856  0015DC  26D9               	addwf	fsr2l,f,c
  3857  0015DE  0100               	movlb	0	; () banked
  3858  0015E0  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3859  0015E2  22DA               	addwfc	fsr2h,f,c
  3860  0015E4  0E00               	movlw	0
  3861  0015E6  6EDE               	movwf	postinc2,c
  3862  0015E8  0E00               	movlw	0
  3863  0015EA  6EDD               	movwf	postdec2,c
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;timer1_thread.c: 12: tptr->distLim = false;
  3867  0015EC  0100               	movlb	0	; () banked
  3868  0015EE  EE20 F00A          	lfsr	2,10
  3869  0015F2  0100               	movlb	0	; () banked
  3870  0015F4  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3871  0015F6  26D9               	addwf	fsr2l,f,c
  3872  0015F8  0100               	movlb	0	; () banked
  3873  0015FA  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3874  0015FC  22DA               	addwfc	fsr2h,f,c
  3875  0015FE  0E00               	movlw	0
  3876  001600  6EDF               	movwf	indf2,c
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;timer1_thread.c: 13: tptr->ready = true;
  3880  001602  0100               	movlb	0	; () banked
  3881  001604  EE20 F00B          	lfsr	2,11
  3882  001608  0100               	movlb	0	; () banked
  3883  00160A  519D               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3884  00160C  26D9               	addwf	fsr2l,f,c
  3885  00160E  0100               	movlb	0	; () banked
  3886  001610  519E               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3887  001612  22DA               	addwfc	fsr2h,f,c
  3888  001614  0E01               	movlw	1
  3889  001616  6EDF               	movwf	indf2,c
  3890                           
  3891                           ; BSR set to: 0
  3892  001618  0012               	return	
  3893  00161A                     __end_of_init_timer1_lthread:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           prodh	equ	0xFF4
  3897                           prodl	equ	0xFF3
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           indf1	equ	0xFE7
  3901                           fsr1h	equ	0xFE2
  3902                           fsr1l	equ	0xFE1
  3903                           indf2	equ	0xFDF
  3904                           postinc2	equ	0xFDE
  3905                           postdec2	equ	0xFDD
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _init_timer0_lthread *****************
  3911 ;; Defined at:
  3912 ;;		line 7 in file "src/timer0_thread.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  3915 ;;		 -> main@t0thread_data(12), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3927 ;;      Params:         0       2       0       0       0
  3928 ;;      Locals:         0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         0       2       0       0       0
  3931 ;;Total ram usage:        2 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:   10
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text19
  3942  001054                     __ptext19:
  3943                           	opt stack 0
  3944  001054                     _init_timer0_lthread:
  3945                           	opt stack 19
  3946                           
  3947                           ;timer0_thread.c: 8: tptr->cmCount = 0;
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;incstack = 0
  3951  001054  C09D  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  3952  001058  C09E  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  3953  00105C  0E00               	movlw	0
  3954  00105E  6EDE               	movwf	postinc2,c
  3955  001060  0E00               	movlw	0
  3956  001062  6EDD               	movwf	postdec2,c
  3957                           
  3958                           ;timer0_thread.c: 9: tptr->ctrlL[0] = 0x20;
  3959  001064  0100               	movlb	0	; () banked
  3960  001066  EE20 F002          	lfsr	2,2
  3961  00106A  0100               	movlb	0	; () banked
  3962  00106C  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3963  00106E  26D9               	addwf	fsr2l,f,c
  3964  001070  0100               	movlb	0	; () banked
  3965  001072  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3966  001074  22DA               	addwfc	fsr2h,f,c
  3967  001076  0E20               	movlw	32
  3968  001078  6EDF               	movwf	indf2,c
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;timer0_thread.c: 10: tptr->ctrlL[1] = 0xE0;
  3972  00107A  0100               	movlb	0	; () banked
  3973  00107C  EE20 F003          	lfsr	2,3
  3974  001080  0100               	movlb	0	; () banked
  3975  001082  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3976  001084  26D9               	addwf	fsr2l,f,c
  3977  001086  0100               	movlb	0	; () banked
  3978  001088  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3979  00108A  22DA               	addwfc	fsr2h,f,c
  3980  00108C  0EE0               	movlw	224
  3981  00108E  6EDF               	movwf	indf2,c
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;timer0_thread.c: 11: tptr->ctrlR[0] = 0xE0;
  3985  001090  0100               	movlb	0	; () banked
  3986  001092  EE20 F004          	lfsr	2,4
  3987  001096  0100               	movlb	0	; () banked
  3988  001098  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3989  00109A  26D9               	addwf	fsr2l,f,c
  3990  00109C  0100               	movlb	0	; () banked
  3991  00109E  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3992  0010A0  22DA               	addwfc	fsr2h,f,c
  3993  0010A2  0EE0               	movlw	224
  3994  0010A4  6EDF               	movwf	indf2,c
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;timer0_thread.c: 12: tptr->ctrlR[1] = 0x20;
  3998  0010A6  0100               	movlb	0	; () banked
  3999  0010A8  EE20 F005          	lfsr	2,5
  4000  0010AC  0100               	movlb	0	; () banked
  4001  0010AE  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4002  0010B0  26D9               	addwf	fsr2l,f,c
  4003  0010B2  0100               	movlb	0	; () banked
  4004  0010B4  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4005  0010B6  22DA               	addwfc	fsr2h,f,c
  4006  0010B8  0E20               	movlw	32
  4007  0010BA  6EDF               	movwf	indf2,c
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;timer0_thread.c: 13: tptr->cmDist = 65506;
  4011  0010BC  0100               	movlb	0	; () banked
  4012  0010BE  EE20 F006          	lfsr	2,6
  4013  0010C2  0100               	movlb	0	; () banked
  4014  0010C4  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4015  0010C6  26D9               	addwf	fsr2l,f,c
  4016  0010C8  0100               	movlb	0	; () banked
  4017  0010CA  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4018  0010CC  22DA               	addwfc	fsr2h,f,c
  4019  0010CE  0EE2               	movlw	226
  4020  0010D0  6EDE               	movwf	postinc2,c
  4021  0010D2  0EFF               	movlw	255
  4022  0010D4  6EDD               	movwf	postdec2,c
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;timer0_thread.c: 14: tptr->curMove = 0;
  4026  0010D6  0100               	movlb	0	; () banked
  4027  0010D8  EE20 F008          	lfsr	2,8
  4028  0010DC  0100               	movlb	0	; () banked
  4029  0010DE  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4030  0010E0  26D9               	addwf	fsr2l,f,c
  4031  0010E2  0100               	movlb	0	; () banked
  4032  0010E4  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4033  0010E6  22DA               	addwfc	fsr2h,f,c
  4034  0010E8  0E00               	movlw	0
  4035  0010EA  6EDE               	movwf	postinc2,c
  4036  0010EC  0E00               	movlw	0
  4037  0010EE  6EDD               	movwf	postdec2,c
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;timer0_thread.c: 15: tptr->distLim = false;
  4041  0010F0  0100               	movlb	0	; () banked
  4042  0010F2  EE20 F00A          	lfsr	2,10
  4043  0010F6  0100               	movlb	0	; () banked
  4044  0010F8  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4045  0010FA  26D9               	addwf	fsr2l,f,c
  4046  0010FC  0100               	movlb	0	; () banked
  4047  0010FE  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4048  001100  22DA               	addwfc	fsr2h,f,c
  4049  001102  0E00               	movlw	0
  4050  001104  6EDF               	movwf	indf2,c
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;timer0_thread.c: 16: tptr->ready = true;
  4054  001106  0100               	movlb	0	; () banked
  4055  001108  EE20 F00B          	lfsr	2,11
  4056  00110C  0100               	movlb	0	; () banked
  4057  00110E  519D               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4058  001110  26D9               	addwf	fsr2l,f,c
  4059  001112  0100               	movlb	0	; () banked
  4060  001114  519E               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4061  001116  22DA               	addwfc	fsr2h,f,c
  4062  001118  0E01               	movlw	1
  4063  00111A  6EDF               	movwf	indf2,c
  4064                           
  4065                           ; BSR set to: 0
  4066  00111C  0012               	return	
  4067  00111E                     __end_of_init_timer0_lthread:
  4068                           	opt stack 0
  4069                           tblptru	equ	0xFF8
  4070                           prodh	equ	0xFF4
  4071                           prodl	equ	0xFF3
  4072                           postinc0	equ	0xFEE
  4073                           wreg	equ	0xFE8
  4074                           indf1	equ	0xFE7
  4075                           fsr1h	equ	0xFE2
  4076                           fsr1l	equ	0xFE1
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _init_queues *****************
  4085 ;; Defined at:
  4086 ;;		line 194 in file "src/messages.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:   11
  4107 ;; This function calls:
  4108 ;;		_init_queue
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text20
  4115  001942                     __ptext20:
  4116                           	opt stack 0
  4117  001942                     _init_queues:
  4118                           	opt stack 18
  4119                           
  4120                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;incstack = 0
  4124  001942  0E00               	movlw	0
  4125  001944  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4126                           
  4127                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  4128  001946  0101               	movlb	1	; () banked
  4129  001948  0E01               	movlw	high _ToMainLow_MQ
  4130  00194A  0100               	movlb	0	; () banked
  4131  00194C  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4132  00194E  0101               	movlb	1	; () banked
  4133  001950  0E6C               	movlw	low _ToMainLow_MQ
  4134  001952  0100               	movlb	0	; () banked
  4135  001954  6F9D               	movwf	init_queue@qptr& (0+255),b
  4136  001956  EC11  F00C         	call	_init_queue	;wreg free
  4137                           
  4138                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4139  00195A  0101               	movlb	1	; () banked
  4140  00195C  0E01               	movlw	high _ToMainHigh_MQ
  4141  00195E  0100               	movlb	0	; () banked
  4142  001960  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4143  001962  0101               	movlb	1	; () banked
  4144  001964  0E36               	movlw	low _ToMainHigh_MQ
  4145  001966  0100               	movlb	0	; () banked
  4146  001968  6F9D               	movwf	init_queue@qptr& (0+255),b
  4147  00196A  EC11  F00C         	call	_init_queue	;wreg free
  4148                           
  4149                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4150  00196E  0101               	movlb	1	; () banked
  4151  001970  0E01               	movlw	high _FromMainLow_MQ
  4152  001972  0100               	movlb	0	; () banked
  4153  001974  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4154  001976  0101               	movlb	1	; () banked
  4155  001978  0E00               	movlw	low _FromMainLow_MQ
  4156  00197A  0100               	movlb	0	; () banked
  4157  00197C  6F9D               	movwf	init_queue@qptr& (0+255),b
  4158  00197E  EC11  F00C         	call	_init_queue	;wreg free
  4159                           
  4160                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4161  001982  0102               	movlb	2	; () banked
  4162  001984  0E02               	movlw	high _FromMainHigh_MQ
  4163  001986  0100               	movlb	0	; () banked
  4164  001988  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  4165  00198A  0102               	movlb	2	; () banked
  4166  00198C  0E00               	movlw	low _FromMainHigh_MQ
  4167  00198E  0100               	movlb	0	; () banked
  4168  001990  6F9D               	movwf	init_queue@qptr& (0+255),b
  4169  001992  EC11  F00C         	call	_init_queue	;wreg free
  4170  001996  0012               	return	
  4171  001998                     __end_of_init_queues:
  4172                           	opt stack 0
  4173                           tblptru	equ	0xFF8
  4174                           prodh	equ	0xFF4
  4175                           prodl	equ	0xFF3
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           indf1	equ	0xFE7
  4179                           fsr1h	equ	0xFE2
  4180                           fsr1l	equ	0xFE1
  4181                           indf2	equ	0xFDF
  4182                           postinc2	equ	0xFDE
  4183                           postdec2	equ	0xFDD
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function _init_queue *****************
  4189 ;; Defined at:
  4190 ;;		line 14 in file "src/messages.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4193 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  i               1   31[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4205 ;;      Params:         0       2       0       0       0
  4206 ;;      Locals:         0       1       0       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         0       3       0       0       0
  4209 ;;Total ram usage:        3 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:   10
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_init_queues
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text21
  4220  001822                     __ptext21:
  4221                           	opt stack 0
  4222  001822                     _init_queue:
  4223                           	opt stack 18
  4224                           
  4225                           ;messages.c: 15: unsigned char i;
  4226                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4227                           
  4228                           ;incstack = 0
  4229  001822  0100               	movlb	0	; () banked
  4230  001824  EE20 F034          	lfsr	2,52
  4231  001828  0100               	movlb	0	; () banked
  4232  00182A  519D               	movf	init_queue@qptr& (0+255),w,b
  4233  00182C  26D9               	addwf	fsr2l,f,c
  4234  00182E  0100               	movlb	0	; () banked
  4235  001830  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  4236  001832  22DA               	addwfc	fsr2h,f,c
  4237  001834  0E00               	movlw	0
  4238  001836  6EDF               	movwf	indf2,c
  4239                           
  4240                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4241  001838  0100               	movlb	0	; () banked
  4242  00183A  EE20 F035          	lfsr	2,53
  4243  00183E  0100               	movlb	0	; () banked
  4244  001840  519D               	movf	init_queue@qptr& (0+255),w,b
  4245  001842  26D9               	addwf	fsr2l,f,c
  4246  001844  0100               	movlb	0	; () banked
  4247  001846  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  4248  001848  22DA               	addwfc	fsr2h,f,c
  4249  00184A  0E00               	movlw	0
  4250  00184C  6EDF               	movwf	indf2,c
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4254  00184E  0E00               	movlw	0
  4255  001850  0100               	movlb	0	; () banked
  4256  001852  6F9F               	movwf	init_queue@i& (0+255),b
  4257                           
  4258                           ; BSR set to: 0
  4259  001854  0E03               	movlw	3
  4260  001856  0100               	movlb	0	; () banked
  4261  001858  659F               	cpfsgt	init_queue@i& (0+255),b
  4262  00185A  D001               	goto	l2424
  4263  00185C  0012               	return	
  4264  00185E                     l2424:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;messages.c: 20: qptr->queue[i].full = 0;
  4268  00185E  0100               	movlb	0	; () banked
  4269  001860  519F               	movf	init_queue@i& (0+255),w,b
  4270  001862  0D0D               	mullw	13
  4271  001864  50F3               	movf	prodl,w,c
  4272  001866  0100               	movlb	0	; () banked
  4273  001868  259D               	addwf	init_queue@qptr& (0+255),w,b
  4274  00186A  6ED9               	movwf	fsr2l,c
  4275  00186C  50F4               	movf	prodh,w,c
  4276  00186E  0100               	movlb	0	; () banked
  4277  001870  219E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4278  001872  6EDA               	movwf	fsr2h,c
  4279  001874  0E00               	movlw	0
  4280  001876  6EDF               	movwf	indf2,c
  4281                           
  4282                           ; BSR set to: 0
  4283  001878  0100               	movlb	0	; () banked
  4284  00187A  2B9F               	incf	init_queue@i& (0+255),f,b
  4285                           
  4286                           ; BSR set to: 0
  4287  00187C  0E03               	movlw	3
  4288  00187E  0100               	movlb	0	; () banked
  4289  001880  659F               	cpfsgt	init_queue@i& (0+255),b
  4290  001882  D7ED               	goto	l2424
  4291  001884  0012               	return	
  4292  001886                     __end_of_init_queue:
  4293                           	opt stack 0
  4294                           tblptru	equ	0xFF8
  4295                           prodh	equ	0xFF4
  4296                           prodl	equ	0xFF3
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           indf1	equ	0xFE7
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _init_i2c *****************
  4310 ;; Defined at:
  4311 ;;		line 268 in file "src/my_i2c.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  4314 ;;		 -> main@ic(28), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;		None               void
  4319 ;; Registers used:
  4320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4326 ;;      Params:         0       2       0       0       0
  4327 ;;      Locals:         0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0
  4329 ;;      Totals:         0       2       0       0       0
  4330 ;;Total ram usage:        2 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:   10
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text22
  4341  0017BC                     __ptext22:
  4342                           	opt stack 0
  4343  0017BC                     _init_i2c:
  4344                           	opt stack 19
  4345                           
  4346                           ;my_i2c.c: 269: ic_ptr = ic;
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;incstack = 0
  4350  0017BC  0100               	movlb	0	; () banked
  4351  0017BE  C09E  F0CF         	movff	init_i2c@ic+1,_ic_ptr+1
  4352  0017C2  0100               	movlb	0	; () banked
  4353  0017C4  C09D  F0CE         	movff	init_i2c@ic,_ic_ptr
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  4357  0017C8  0100               	movlb	0	; () banked
  4358  0017CA  EE20 F00A          	lfsr	2,10
  4359  0017CE  0100               	movlb	0	; () banked
  4360  0017D0  51CE               	movf	_ic_ptr& (0+255),w,b
  4361  0017D2  26D9               	addwf	fsr2l,f,c
  4362  0017D4  0100               	movlb	0	; () banked
  4363  0017D6  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4364  0017D8  22DA               	addwfc	fsr2h,f,c
  4365  0017DA  0E00               	movlw	0
  4366  0017DC  6EDF               	movwf	indf2,c
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  4370  0017DE  0100               	movlb	0	; () banked
  4371  0017E0  EE20 F00B          	lfsr	2,11
  4372  0017E4  0100               	movlb	0	; () banked
  4373  0017E6  51CE               	movf	_ic_ptr& (0+255),w,b
  4374  0017E8  26D9               	addwf	fsr2l,f,c
  4375  0017EA  0100               	movlb	0	; () banked
  4376  0017EC  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4377  0017EE  22DA               	addwfc	fsr2h,f,c
  4378  0017F0  0E00               	movlw	0
  4379  0017F2  6EDF               	movwf	indf2,c
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  4383  0017F4  0100               	movlb	0	; () banked
  4384  0017F6  EE20 F00C          	lfsr	2,12
  4385  0017FA  0100               	movlb	0	; () banked
  4386  0017FC  51CE               	movf	_ic_ptr& (0+255),w,b
  4387  0017FE  26D9               	addwf	fsr2l,f,c
  4388  001800  0100               	movlb	0	; () banked
  4389  001802  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4390  001804  22DA               	addwfc	fsr2h,f,c
  4391  001806  0E05               	movlw	5
  4392  001808  6EDF               	movwf	indf2,c
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  4396  00180A  0100               	movlb	0	; () banked
  4397  00180C  EE20 F00E          	lfsr	2,14
  4398  001810  0100               	movlb	0	; () banked
  4399  001812  51CE               	movf	_ic_ptr& (0+255),w,b
  4400  001814  26D9               	addwf	fsr2l,f,c
  4401  001816  0100               	movlb	0	; () banked
  4402  001818  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  4403  00181A  22DA               	addwfc	fsr2h,f,c
  4404  00181C  0E00               	movlw	0
  4405  00181E  6EDF               	movwf	indf2,c
  4406                           
  4407                           ; BSR set to: 0
  4408  001820  0012               	return	
  4409  001822                     __end_of_init_i2c:
  4410                           	opt stack 0
  4411                           tblptru	equ	0xFF8
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           postinc0	equ	0xFEE
  4415                           wreg	equ	0xFE8
  4416                           indf1	equ	0xFE7
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           postinc2	equ	0xFDE
  4421                           postdec2	equ	0xFDD
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _i2c_configure_slave *****************
  4427 ;; Defined at:
  4428 ;;		line 279 in file "src/my_i2c.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  addr            1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  addr            1   29[BANK0 ] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4442 ;;      Params:         0       0       0       0       0
  4443 ;;      Locals:         0       1       0       0       0
  4444 ;;      Temps:          0       0       0       0       0
  4445 ;;      Totals:         0       1       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:   10
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text23
  4457  001D82                     __ptext23:
  4458                           	opt stack 0
  4459  001D82                     _i2c_configure_slave:
  4460                           	opt stack 19
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;incstack = 0
  4464                           ;i2c_configure_slave@addr stored from wreg
  4465  001D82  0100               	movlb	0	; () banked
  4466  001D84  6F9D               	movwf	i2c_configure_slave@addr& (0+255),b
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4470  001D86  8694               	bsf	3988,3,c	;volatile
  4471                           
  4472                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4473  001D88  8894               	bsf	3988,4,c	;volatile
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;my_i2c.c: 297: SSPADD = addr;
  4477  001D8A  C09D  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4481  001D8E  0E00               	movlw	0
  4482  001D90  6EC7               	movwf	4039,c	;volatile
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4486  001D92  0E00               	movlw	0
  4487  001D94  6EC6               	movwf	4038,c	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4491  001D96  0E00               	movlw	0
  4492  001D98  6EC5               	movwf	4037,c	;volatile
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4496  001D9A  0E0E               	movlw	14
  4497  001D9C  12C6               	iorwf	4038,f,c	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4501  001D9E  8EC7               	bsf	4039,7,c	;volatile
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4505  001DA0  8694               	bsf	3988,3,c	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4509  001DA2  8894               	bsf	3988,4,c	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4513  001DA4  80C5               	bsf	4037,0,c	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4517  001DA6  8AC6               	bsf	4038,5,c	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520  001DA8  0012               	return	
  4521  001DAA                     __end_of_i2c_configure_slave:
  4522                           	opt stack 0
  4523                           tblptru	equ	0xFF8
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           postinc0	equ	0xFEE
  4527                           wreg	equ	0xFE8
  4528                           indf1	equ	0xFE7
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           indf2	equ	0xFDF
  4532                           postinc2	equ	0xFDE
  4533                           postdec2	equ	0xFDD
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538 ;; *************** function _enable_interrupts *****************
  4539 ;; Defined at:
  4540 ;;		line 15 in file "src/interrupts.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		None
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4554 ;;      Params:         0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   10
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_main
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text24
  4569  001EF2                     __ptext24:
  4570                           	opt stack 0
  4571  001EF2                     _enable_interrupts:
  4572                           	opt stack 19
  4573                           
  4574                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;incstack = 0
  4578  001EF2  8ED0               	bsf	4048,7,c	;volatile
  4579                           
  4580                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  4581  001EF4  8EF2               	bsf	intcon,7,c	;volatile
  4582                           
  4583                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  4584  001EF6  8CF2               	bsf	intcon,6,c	;volatile
  4585  001EF8  0012               	return	
  4586  001EFA                     __end_of_enable_interrupts:
  4587                           	opt stack 0
  4588                           tblptru	equ	0xFF8
  4589                           prodh	equ	0xFF4
  4590                           prodl	equ	0xFF3
  4591                           intcon	equ	0xFF2
  4592                           postinc0	equ	0xFEE
  4593                           wreg	equ	0xFE8
  4594                           indf1	equ	0xFE7
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _block_on_To_msgqueues *****************
  4605 ;; Defined at:
  4606 ;;		line 256 in file "src/messages.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;		None               void
  4613 ;; Registers used:
  4614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4620 ;;      Params:         0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0
  4623 ;;      Totals:         0       0       0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:   13
  4627 ;; This function calls:
  4628 ;;		_Delay1KTCYx
  4629 ;;		_check_msg
  4630 ;;		_in_main
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text25
  4637  0018E6                     __ptext25:
  4638                           	opt stack 0
  4639  0018E6                     _block_on_To_msgqueues:
  4640                           	opt stack 16
  4641                           
  4642                           ;messages.c: 257: if (!in_main()) {
  4643                           
  4644                           ;incstack = 0
  4645  0018E6  ECC5  F00D         	call	_in_main	;wreg free
  4646  0018EA  0100               	movlb	0	; () banked
  4647  0018EC  51A2               	movf	(?_in_main+1)& (0+255),w,b
  4648  0018EE  0100               	movlb	0	; () banked
  4649  0018F0  11A1               	iorwf	?_in_main& (0+255),w,b
  4650  0018F2  B4D8               	btfsc	status,2,c
  4651  0018F4  0012               	return	
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;messages.c: 259: }
  4655                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4656                           
  4657                           ; BSR set to: 0
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;messages.c: 258: return;
  4661  0018F6  0E01               	movlw	1
  4662  0018F8  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4663  0018FA                     l2934:
  4664                           
  4665                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4666  0018FA  0101               	movlb	1	; () banked
  4667  0018FC  0E01               	movlw	high _ToMainHigh_MQ
  4668  0018FE  0100               	movlb	0	; () banked
  4669  001900  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  4670  001902  0101               	movlb	1	; () banked
  4671  001904  0E36               	movlw	low _ToMainHigh_MQ
  4672  001906  0100               	movlb	0	; () banked
  4673  001908  6F9D               	movwf	check_msg@qptr& (0+255),b
  4674  00190A  EC33  F00E         	call	_check_msg	;wreg free
  4675  00190E  0900               	iorlw	0
  4676  001910  B4D8               	btfsc	status,2,c
  4677  001912  D003               	goto	l2940
  4678                           
  4679                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4680  001914  0E00               	movlw	0
  4681  001916  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4682  001918  0012               	return	
  4683  00191A                     l2940:
  4684                           
  4685                           ;messages.c: 271: }
  4686                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4687  00191A  0101               	movlb	1	; () banked
  4688  00191C  0E01               	movlw	high _ToMainLow_MQ
  4689  00191E  0100               	movlb	0	; () banked
  4690  001920  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  4691  001922  0101               	movlb	1	; () banked
  4692  001924  0E6C               	movlw	low _ToMainLow_MQ
  4693  001926  0100               	movlb	0	; () banked
  4694  001928  6F9D               	movwf	check_msg@qptr& (0+255),b
  4695  00192A  EC33  F00E         	call	_check_msg	;wreg free
  4696  00192E  0900               	iorlw	0
  4697  001930  B4D8               	btfsc	status,2,c
  4698  001932  D003               	goto	l2946
  4699                           
  4700                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4701  001934  0E00               	movlw	0
  4702  001936  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4703  001938  0012               	return	
  4704  00193A                     l2946:
  4705                           
  4706                           ;messages.c: 278: }
  4707                           ;messages.c: 279: Delay1KTCYx(10);
  4708  00193A  0E0A               	movlw	10
  4709  00193C  EC4F  F00F         	call	_Delay1KTCYx
  4710  001940  D7DC               	goto	l2934
  4711  001942                     __end_of_block_on_To_msgqueues:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           postinc0	equ	0xFEE
  4718                           wreg	equ	0xFE8
  4719                           indf1	equ	0xFE7
  4720                           fsr1h	equ	0xFE2
  4721                           fsr1l	equ	0xFE1
  4722                           indf2	equ	0xFDF
  4723                           postinc2	equ	0xFDE
  4724                           postdec2	equ	0xFDD
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function _in_main *****************
  4730 ;; Defined at:
  4731 ;;		line 41 in file "src/interrupts.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2   33[BANK0 ] int 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4745 ;;      Params:         0       2       0       0       0
  4746 ;;      Locals:         0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0
  4748 ;;      Totals:         0       2       0       0       0
  4749 ;;Total ram usage:        2 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:   12
  4752 ;; This function calls:
  4753 ;;		_in_high_int
  4754 ;;		_in_low_int
  4755 ;; This function is called by:
  4756 ;;		_block_on_To_msgqueues
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text26
  4761  001B8A                     __ptext26:
  4762                           	opt stack 0
  4763  001B8A                     _in_main:
  4764                           	opt stack 16
  4765                           
  4766                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  4767                           
  4768                           ;incstack = 0
  4769  001B8A  ECA6  F00D         	call	_in_low_int	;wreg free
  4770  001B8E  0100               	movlb	0	; () banked
  4771  001B90  51A0               	movf	(?_in_low_int+1)& (0+255),w,b
  4772  001B92  0100               	movlb	0	; () banked
  4773  001B94  119F               	iorwf	?_in_low_int& (0+255),w,b
  4774  001B96  A4D8               	btfss	status,2,c
  4775  001B98  D00F               	goto	l2408
  4776                           
  4777                           ; BSR set to: 0
  4778  001B9A  EC6B  F00F         	call	_in_high_int	;wreg free
  4779  001B9E  0100               	movlb	0	; () banked
  4780  001BA0  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  4781  001BA2  0100               	movlb	0	; () banked
  4782  001BA4  119D               	iorwf	?_in_high_int& (0+255),w,b
  4783  001BA6  A4D8               	btfss	status,2,c
  4784  001BA8  D007               	goto	l2408
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;interrupts.c: 43: return (1);
  4788  001BAA  0E00               	movlw	0
  4789  001BAC  0100               	movlb	0	; () banked
  4790  001BAE  6FA2               	movwf	(?_in_main+1)& (0+255),b
  4791  001BB0  0E01               	movlw	1
  4792  001BB2  0100               	movlb	0	; () banked
  4793  001BB4  6FA1               	movwf	?_in_main& (0+255),b
  4794  001BB6  0012               	return	
  4795  001BB8                     l2408:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;interrupts.c: 45: return (0);
  4799  001BB8  0E00               	movlw	0
  4800  001BBA  0100               	movlb	0	; () banked
  4801  001BBC  6FA2               	movwf	(?_in_main+1)& (0+255),b
  4802  001BBE  0E00               	movlw	0
  4803  001BC0  0100               	movlb	0	; () banked
  4804  001BC2  6FA1               	movwf	?_in_main& (0+255),b
  4805  001BC4  0012               	return	
  4806  001BC6                     __end_of_in_main:
  4807                           	opt stack 0
  4808                           tblptru	equ	0xFF8
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           intcon	equ	0xFF2
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           indf1	equ	0xFE7
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _in_low_int *****************
  4825 ;; Defined at:
  4826 ;;		line 31 in file "src/interrupts.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2   31[BANK0 ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4840 ;;      Params:         0       2       0       0       0
  4841 ;;      Locals:         0       0       0       0       0
  4842 ;;      Temps:          0       0       0       0       0
  4843 ;;      Totals:         0       2       0       0       0
  4844 ;;Total ram usage:        2 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:   11
  4847 ;; This function calls:
  4848 ;;		_in_high_int
  4849 ;; This function is called by:
  4850 ;;		_in_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text27
  4855  001B4C                     __ptext27:
  4856                           	opt stack 0
  4857  001B4C                     _in_low_int:
  4858                           	opt stack 16
  4859                           
  4860                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864  001B4C  ACF2               	btfss	intcon,6,c	;volatile
  4865  001B4E  D007               	goto	l2298
  4866                           
  4867                           ;interrupts.c: 33: return (0);
  4868  001B50  0E00               	movlw	0
  4869  001B52  0100               	movlb	0	; () banked
  4870  001B54  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4871  001B56  0E00               	movlw	0
  4872  001B58  0100               	movlb	0	; () banked
  4873  001B5A  6F9F               	movwf	?_in_low_int& (0+255),b
  4874  001B5C  0012               	return	
  4875  001B5E                     l2298:
  4876  001B5E  EC6B  F00F         	call	_in_high_int	;wreg free
  4877  001B62  0100               	movlb	0	; () banked
  4878  001B64  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  4879  001B66  0100               	movlb	0	; () banked
  4880  001B68  119D               	iorwf	?_in_high_int& (0+255),w,b
  4881  001B6A  B4D8               	btfsc	status,2,c
  4882  001B6C  D007               	goto	l2306
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;interrupts.c: 35: return (0);
  4886  001B6E  0E00               	movlw	0
  4887  001B70  0100               	movlb	0	; () banked
  4888  001B72  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4889  001B74  0E00               	movlw	0
  4890  001B76  0100               	movlb	0	; () banked
  4891  001B78  6F9F               	movwf	?_in_low_int& (0+255),b
  4892  001B7A  0012               	return	
  4893  001B7C                     l2306:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;interrupts.c: 37: return (1);
  4897  001B7C  0E00               	movlw	0
  4898  001B7E  0100               	movlb	0	; () banked
  4899  001B80  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  4900  001B82  0E01               	movlw	1
  4901  001B84  0100               	movlb	0	; () banked
  4902  001B86  6F9F               	movwf	?_in_low_int& (0+255),b
  4903  001B88  0012               	return	
  4904  001B8A                     __end_of_in_low_int:
  4905                           	opt stack 0
  4906                           tblptru	equ	0xFF8
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           postinc0	equ	0xFEE
  4911                           wreg	equ	0xFE8
  4912                           indf1	equ	0xFE7
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           postinc2	equ	0xFDE
  4917                           postdec2	equ	0xFDD
  4918                           fsr2h	equ	0xFDA
  4919                           fsr2l	equ	0xFD9
  4920                           status	equ	0xFD8
  4921                           
  4922 ;; *************** function _in_high_int *****************
  4923 ;; Defined at:
  4924 ;;		line 23 in file "src/interrupts.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  2   29[BANK0 ] int 
  4931 ;; Registers used:
  4932 ;;		wreg, status,2
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4938 ;;      Params:         0       2       0       0       0
  4939 ;;      Locals:         0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0
  4941 ;;      Totals:         0       2       0       0       0
  4942 ;;Total ram usage:        2 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:   10
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_in_low_int
  4949 ;;		_in_main
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text28
  4954  001ED6                     __ptext28:
  4955                           	opt stack 0
  4956  001ED6                     _in_high_int:
  4957                           	opt stack 16
  4958                           
  4959                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;incstack = 0
  4963  001ED6  0E00               	movlw	0
  4964  001ED8  AEF2               	btfss	intcon,7,c	;volatile
  4965  001EDA  0E01               	movlw	1
  4966  001EDC  0100               	movlb	0	; () banked
  4967  001EDE  6F9D               	movwf	?_in_high_int& (0+255),b
  4968  001EE0  0100               	movlb	0	; () banked
  4969  001EE2  6B9E               	clrf	(?_in_high_int+1)& (0+255),b
  4970  001EE4  0012               	return	
  4971  001EE6                     __end_of_in_high_int:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           prodh	equ	0xFF4
  4975                           prodl	equ	0xFF3
  4976                           intcon	equ	0xFF2
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           indf2	equ	0xFDF
  4983                           postinc2	equ	0xFDE
  4984                           postdec2	equ	0xFDD
  4985                           fsr2h	equ	0xFDA
  4986                           fsr2l	equ	0xFD9
  4987                           status	equ	0xFD8
  4988                           
  4989 ;; *************** function _check_msg *****************
  4990 ;; Defined at:
  4991 ;;		line 220 in file "src/messages.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4994 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      unsigned char 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5006 ;;      Params:         0       2       0       0       0
  5007 ;;      Locals:         0       0       0       0       0
  5008 ;;      Temps:          0       1       0       0       0
  5009 ;;      Totals:         0       3       0       0       0
  5010 ;;Total ram usage:        3 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:   10
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_block_on_To_msgqueues
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text29
  5021  001C66                     __ptext29:
  5022                           	opt stack 0
  5023  001C66                     _check_msg:
  5024                           	opt stack 18
  5025                           
  5026                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;incstack = 0
  5030  001C66  0100               	movlb	0	; () banked
  5031  001C68  EE20 F035          	lfsr	2,53
  5032  001C6C  0100               	movlb	0	; () banked
  5033  001C6E  519D               	movf	check_msg@qptr& (0+255),w,b
  5034  001C70  26D9               	addwf	fsr2l,f,c
  5035  001C72  0100               	movlb	0	; () banked
  5036  001C74  519E               	movf	(check_msg@qptr+1)& (0+255),w,b
  5037  001C76  22DA               	addwfc	fsr2h,f,c
  5038  001C78  50DF               	movf	indf2,w,c
  5039  001C7A  0100               	movlb	0	; () banked
  5040  001C7C  6F9F               	movwf	??_check_msg& (0+255),b
  5041  001C7E  0100               	movlb	0	; () banked
  5042  001C80  519F               	movf	??_check_msg& (0+255),w,b
  5043  001C82  0D0D               	mullw	13
  5044  001C84  50F3               	movf	prodl,w,c
  5045  001C86  0100               	movlb	0	; () banked
  5046  001C88  259D               	addwf	check_msg@qptr& (0+255),w,b
  5047  001C8A  6ED9               	movwf	fsr2l,c
  5048  001C8C  50F4               	movf	prodh,w,c
  5049  001C8E  0100               	movlb	0	; () banked
  5050  001C90  219E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  5051  001C92  6EDA               	movwf	fsr2h,c
  5052  001C94  50DF               	movf	indf2,w,c
  5053  001C96  0012               	return	
  5054  001C98                     __end_of_check_msg:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           prodh	equ	0xFF4
  5058                           prodl	equ	0xFF3
  5059                           intcon	equ	0xFF2
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf1	equ	0xFE7
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           indf2	equ	0xFDF
  5066                           postinc2	equ	0xFDE
  5067                           postdec2	equ	0xFDD
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _Delay1KTCYx *****************
  5073 ;; Defined at:
  5074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  unit            1    wreg     unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  unit            1   29[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5088 ;;      Params:         0       0       0       0       0
  5089 ;;      Locals:         0       1       0       0       0
  5090 ;;      Temps:          0       0       0       0       0
  5091 ;;      Totals:         0       1       0       0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   10
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_block_on_To_msgqueues
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text30
  5103  001E9E                     __ptext30:
  5104                           	opt stack 0
  5105  001E9E                     _Delay1KTCYx:
  5106                           	opt stack 18
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;incstack = 0
  5110                           ;Delay1KTCYx@unit stored from wreg
  5111  001E9E  0100               	movlb	0	; () banked
  5112  001EA0  6F9D               	movwf	Delay1KTCYx@unit& (0+255),b
  5113  001EA2                     l819:
  5114                           
  5115                           ; BSR set to: 0
  5116                           
  5117                           ; BSR set to: 0
  5118  001EA2  0EFA               	movlw	250
  5119  001EA4                     u2387:
  5120  001EA4  F000               	nop	
  5121  001EA6  2EE8               	decfsz	wreg,f,c
  5122  001EA8  D7FD               	goto	u2387
  5123  001EAA  0100               	movlb	0	; () banked
  5124  001EAC  2F9D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  5125  001EAE  D7F9               	goto	l819
  5126  001EB0  0012               	return	
  5127  001EB2                     __end_of_Delay1KTCYx:
  5128                           	opt stack 0
  5129                           tblptru	equ	0xFF8
  5130                           prodh	equ	0xFF4
  5131                           prodl	equ	0xFF3
  5132                           intcon	equ	0xFF2
  5133                           postinc0	equ	0xFEE
  5134                           wreg	equ	0xFE8
  5135                           indf1	equ	0xFE7
  5136                           fsr1h	equ	0xFE2
  5137                           fsr1l	equ	0xFE1
  5138                           indf2	equ	0xFDF
  5139                           postinc2	equ	0xFDE
  5140                           postdec2	equ	0xFDD
  5141                           fsr2h	equ	0xFDA
  5142                           fsr2l	equ	0xFD9
  5143                           status	equ	0xFD8
  5144                           
  5145 ;; *************** function _ToMainLow_recvmsg *****************
  5146 ;; Defined at:
  5147 ;;		line 112 in file "src/messages.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  maxlength       1    wreg     unsigned char 
  5150 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  5151 ;;		 -> main@msgtype(1), 
  5152 ;;  data            2   55[BANK0 ] PTR void 
  5153 ;;		 -> main@msgbuffer(11), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  maxlength       1   57[BANK0 ] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      char 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5165 ;;      Params:         0       4       0       0       0
  5166 ;;      Locals:         0       1       0       0       0
  5167 ;;      Temps:          0       0       0       0       0
  5168 ;;      Totals:         0       5       0       0       0
  5169 ;;Total ram usage:        5 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:   12
  5172 ;; This function calls:
  5173 ;;		_recv_msg
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text31
  5180  001BC6                     __ptext31:
  5181                           	opt stack 0
  5182  001BC6                     _ToMainLow_recvmsg:
  5183                           	opt stack 17
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;incstack = 0
  5187                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5188  001BC6  0100               	movlb	0	; () banked
  5189  001BC8  6FB9               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5193  001BCA  0101               	movlb	1	; () banked
  5194  001BCC  0E01               	movlw	high _ToMainLow_MQ
  5195  001BCE  0100               	movlb	0	; () banked
  5196  001BD0  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  5197  001BD2  0101               	movlb	1	; () banked
  5198  001BD4  0E6C               	movlw	low _ToMainLow_MQ
  5199  001BD6  0100               	movlb	0	; () banked
  5200  001BD8  6FA7               	movwf	recv_msg@qptr& (0+255),b
  5201  001BDA  C0B9  F0A9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5202  001BDE  0100               	movlb	0	; () banked
  5203  001BE0  C0B6  F0AB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5204  001BE4  0100               	movlb	0	; () banked
  5205  001BE6  C0B5  F0AA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5206  001BEA  0100               	movlb	0	; () banked
  5207  001BEC  C0B8  F0AD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5208  001BF0  0100               	movlb	0	; () banked
  5209  001BF2  C0B7  F0AC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5210  001BF6  ECA8  F004         	call	_recv_msg	;wreg free
  5211  001BFA  0012               	return	
  5212  001BFC                     __end_of_ToMainLow_recvmsg:
  5213                           	opt stack 0
  5214                           tblptru	equ	0xFF8
  5215                           prodh	equ	0xFF4
  5216                           prodl	equ	0xFF3
  5217                           intcon	equ	0xFF2
  5218                           postinc0	equ	0xFEE
  5219                           wreg	equ	0xFE8
  5220                           indf1	equ	0xFE7
  5221                           fsr1h	equ	0xFE2
  5222                           fsr1l	equ	0xFE1
  5223                           indf2	equ	0xFDF
  5224                           postinc2	equ	0xFDE
  5225                           postdec2	equ	0xFDD
  5226                           fsr2h	equ	0xFDA
  5227                           fsr2l	equ	0xFD9
  5228                           status	equ	0xFD8
  5229                           
  5230 ;; *************** function _ToMainHigh_recvmsg *****************
  5231 ;; Defined at:
  5232 ;;		line 135 in file "src/messages.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  maxlength       1    wreg     unsigned char 
  5235 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  5236 ;;		 -> main@msgtype(1), 
  5237 ;;  data            2   55[BANK0 ] PTR void 
  5238 ;;		 -> main@msgbuffer(11), 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  maxlength       1   57[BANK0 ] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      char 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5250 ;;      Params:         0       4       0       0       0
  5251 ;;      Locals:         0       1       0       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         0       5       0       0       0
  5254 ;;Total ram usage:        5 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:   12
  5257 ;; This function calls:
  5258 ;;		_recv_msg
  5259 ;; This function is called by:
  5260 ;;		_main
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text32
  5265  001BFC                     __ptext32:
  5266                           	opt stack 0
  5267  001BFC                     _ToMainHigh_recvmsg:
  5268                           	opt stack 17
  5269                           
  5270                           ;incstack = 0
  5271                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5272  001BFC  0100               	movlb	0	; () banked
  5273  001BFE  6FB9               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5277  001C00  0101               	movlb	1	; () banked
  5278  001C02  0E01               	movlw	high _ToMainHigh_MQ
  5279  001C04  0100               	movlb	0	; () banked
  5280  001C06  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  5281  001C08  0101               	movlb	1	; () banked
  5282  001C0A  0E36               	movlw	low _ToMainHigh_MQ
  5283  001C0C  0100               	movlb	0	; () banked
  5284  001C0E  6FA7               	movwf	recv_msg@qptr& (0+255),b
  5285  001C10  C0B9  F0A9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5286  001C14  0100               	movlb	0	; () banked
  5287  001C16  C0B6  F0AB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5288  001C1A  0100               	movlb	0	; () banked
  5289  001C1C  C0B5  F0AA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5290  001C20  0100               	movlb	0	; () banked
  5291  001C22  C0B8  F0AD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5292  001C26  0100               	movlb	0	; () banked
  5293  001C28  C0B7  F0AC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5294  001C2C  ECA8  F004         	call	_recv_msg	;wreg free
  5295  001C30  0012               	return	
  5296  001C32                     __end_of_ToMainHigh_recvmsg:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           prodh	equ	0xFF4
  5300                           prodl	equ	0xFF3
  5301                           intcon	equ	0xFF2
  5302                           postinc0	equ	0xFEE
  5303                           wreg	equ	0xFE8
  5304                           indf1	equ	0xFE7
  5305                           fsr1h	equ	0xFE2
  5306                           fsr1l	equ	0xFE1
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           fsr2h	equ	0xFDA
  5311                           fsr2l	equ	0xFD9
  5312                           status	equ	0xFD8
  5313                           
  5314 ;; *************** function _recv_msg *****************
  5315 ;; Defined at:
  5316 ;;		line 63 in file "src/messages.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  5319 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5320 ;;  maxlength       1   41[BANK0 ] unsigned char 
  5321 ;;  msgtype         2   42[BANK0 ] PTR unsigned char 
  5322 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5323 ;;  data            2   44[BANK0 ] PTR void 
  5324 ;;		 -> main@msgbuffer(11), NULL(0), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  qmsg            2   51[BANK0 ] PTR struct __msg
  5327 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5328 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5329 ;;  tlength         2   49[BANK0 ] unsigned int 
  5330 ;;  slot            1   48[BANK0 ] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      char 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5340 ;;      Params:         0       7       0       0       0
  5341 ;;      Locals:         0       5       0       0       0
  5342 ;;      Temps:          0       2       0       0       0
  5343 ;;      Totals:         0      14       0       0       0
  5344 ;;Total ram usage:       14 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:   11
  5347 ;; This function calls:
  5348 ;;		_memcpy
  5349 ;; This function is called by:
  5350 ;;		_ToMainLow_recvmsg
  5351 ;;		_ToMainHigh_recvmsg
  5352 ;;		_FromMainHigh_recvmsg
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text33
  5357  000950                     __ptext33:
  5358                           	opt stack 0
  5359  000950                     _recv_msg:
  5360                           	opt stack 17
  5361                           
  5362                           ;messages.c: 64: unsigned char slot;
  5363                           ;messages.c: 68: msg *qmsg;
  5364                           ;messages.c: 69: size_t tlength;
  5365                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5366                           
  5367                           ;incstack = 0
  5368  000950  0100               	movlb	0	; () banked
  5369  000952  EE20 F035          	lfsr	2,53
  5370  000956  0100               	movlb	0	; () banked
  5371  000958  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5372  00095A  26D9               	addwf	fsr2l,f,c
  5373  00095C  0100               	movlb	0	; () banked
  5374  00095E  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5375  000960  22DA               	addwfc	fsr2h,f,c
  5376  000962  50DF               	movf	indf2,w,c
  5377  000964  0100               	movlb	0	; () banked
  5378  000966  6FB0               	movwf	recv_msg@slot& (0+255),b
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5382  000968  0100               	movlb	0	; () banked
  5383  00096A  51B0               	movf	recv_msg@slot& (0+255),w,b
  5384  00096C  0D0D               	mullw	13
  5385  00096E  50F3               	movf	prodl,w,c
  5386  000970  0100               	movlb	0	; () banked
  5387  000972  25A7               	addwf	recv_msg@qptr& (0+255),w,b
  5388  000974  0100               	movlb	0	; () banked
  5389  000976  6FB3               	movwf	recv_msg@qmsg& (0+255),b
  5390  000978  50F4               	movf	prodh,w,c
  5391  00097A  0100               	movlb	0	; () banked
  5392  00097C  21A8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5393  00097E  0100               	movlb	0	; () banked
  5394  000980  6FB4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;messages.c: 74: if (qmsg->full == 1) {
  5398  000982  0E01               	movlw	1
  5399  000984  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  5400  000988  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5401  00098C  62DF               	cpfseq	indf2,c
  5402  00098E  D06D               	goto	l2458
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5406  000990  0100               	movlb	0	; () banked
  5407  000992  EE20 F001          	lfsr	2,1
  5408  000996  0100               	movlb	0	; () banked
  5409  000998  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5410  00099A  26D9               	addwf	fsr2l,f,c
  5411  00099C  0100               	movlb	0	; () banked
  5412  00099E  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5413  0009A0  22DA               	addwfc	fsr2h,f,c
  5414  0009A2  50DF               	movf	indf2,w,c
  5415  0009A4  0100               	movlb	0	; () banked
  5416  0009A6  5DA9               	subwf	recv_msg@maxlength& (0+255),w,b
  5417  0009A8  B0D8               	btfsc	status,0,c
  5418  0009AA  D002               	goto	l2442
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;messages.c: 77: return (-3);
  5422  0009AC  0EFD               	movlw	253
  5423  0009AE  0012               	return	
  5424  0009B0                     l2442:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;messages.c: 78: }
  5428                           ;messages.c: 80: tlength = qmsg->length;
  5429  0009B0  0100               	movlb	0	; () banked
  5430  0009B2  EE20 F001          	lfsr	2,1
  5431  0009B6  0100               	movlb	0	; () banked
  5432  0009B8  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5433  0009BA  26D9               	addwf	fsr2l,f,c
  5434  0009BC  0100               	movlb	0	; () banked
  5435  0009BE  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5436  0009C0  22DA               	addwfc	fsr2h,f,c
  5437  0009C2  50DF               	movf	indf2,w,c
  5438  0009C4  0100               	movlb	0	; () banked
  5439  0009C6  6FAE               	movwf	??_recv_msg& (0+255),b
  5440  0009C8  0100               	movlb	0	; () banked
  5441  0009CA  51AE               	movf	??_recv_msg& (0+255),w,b
  5442  0009CC  0100               	movlb	0	; () banked
  5443  0009CE  6FB1               	movwf	recv_msg@tlength& (0+255),b
  5444  0009D0  0100               	movlb	0	; () banked
  5445  0009D2  6BB2               	clrf	(recv_msg@tlength+1)& (0+255),b
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5449  0009D4  0100               	movlb	0	; () banked
  5450  0009D6  C0AD  F09E         	movff	recv_msg@data+1,memcpy@d1+1
  5451  0009DA  0100               	movlb	0	; () banked
  5452  0009DC  C0AC  F09D         	movff	recv_msg@data,memcpy@d1
  5453  0009E0  0E03               	movlw	3
  5454  0009E2  0100               	movlb	0	; () banked
  5455  0009E4  25B3               	addwf	recv_msg@qmsg& (0+255),w,b
  5456  0009E6  0100               	movlb	0	; () banked
  5457  0009E8  6FAE               	movwf	??_recv_msg& (0+255),b
  5458  0009EA  0E00               	movlw	0
  5459  0009EC  0100               	movlb	0	; () banked
  5460  0009EE  21B4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5461  0009F0  0100               	movlb	0	; () banked
  5462  0009F2  6FAF               	movwf	(??_recv_msg+1)& (0+255),b
  5463  0009F4  C0AE  F09F         	movff	??_recv_msg,memcpy@s1
  5464  0009F8  C0AF  F0A0         	movff	??_recv_msg+1,memcpy@s1+1
  5465  0009FC  C0B1  F0A1         	movff	recv_msg@tlength,memcpy@n
  5466  000A00  C0B2  F0A2         	movff	recv_msg@tlength+1,memcpy@n+1
  5467  000A04  ECF7  F00C         	call	_memcpy	;wreg free
  5468                           
  5469                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5470  000A08  0100               	movlb	0	; () banked
  5471  000A0A  EE20 F035          	lfsr	2,53
  5472  000A0E  0100               	movlb	0	; () banked
  5473  000A10  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5474  000A12  26D9               	addwf	fsr2l,f,c
  5475  000A14  0100               	movlb	0	; () banked
  5476  000A16  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5477  000A18  22DA               	addwfc	fsr2h,f,c
  5478  000A1A  0100               	movlb	0	; () banked
  5479  000A1C  EE10 F035          	lfsr	1,53
  5480  000A20  0100               	movlb	0	; () banked
  5481  000A22  51A7               	movf	recv_msg@qptr& (0+255),w,b
  5482  000A24  26E1               	addwf	fsr1l,f,c
  5483  000A26  0100               	movlb	0	; () banked
  5484  000A28  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5485  000A2A  22E2               	addwfc	fsr1h,f,c
  5486  000A2C  50E7               	movf	indf1,w,c
  5487  000A2E  0100               	movlb	0	; () banked
  5488  000A30  6FAE               	movwf	??_recv_msg& (0+255),b
  5489  000A32  0100               	movlb	0	; () banked
  5490  000A34  29AE               	incf	??_recv_msg& (0+255),w,b
  5491  000A36  0B03               	andlw	3
  5492  000A38  6EDF               	movwf	indf2,c
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5496  000A3A  0100               	movlb	0	; () banked
  5497  000A3C  EE20 F002          	lfsr	2,2
  5498  000A40  0100               	movlb	0	; () banked
  5499  000A42  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  5500  000A44  26D9               	addwf	fsr2l,f,c
  5501  000A46  0100               	movlb	0	; () banked
  5502  000A48  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5503  000A4A  22DA               	addwfc	fsr2h,f,c
  5504  000A4C  C0AA  FFE1         	movff	recv_msg@msgtype,fsr1l
  5505  000A50  C0AB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5506  000A54  CFDF FFE7          	movff	indf2,indf1
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;messages.c: 91: qmsg->full = 0;
  5510  000A58  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  5511  000A5C  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5512  000A60  0E00               	movlw	0
  5513  000A62  6EDF               	movwf	indf2,c
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;messages.c: 92: return (tlength);
  5517  000A64  0100               	movlb	0	; () banked
  5518  000A66  51B1               	movf	recv_msg@tlength& (0+255),w,b
  5519  000A68  0012               	return	
  5520  000A6A                     l2458:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;messages.c: 94: return (-4);
  5524  000A6A  0EFC               	movlw	252
  5525  000A6C  0012               	return	
  5526  000A6E                     __end_of_recv_msg:
  5527                           	opt stack 0
  5528                           tblptru	equ	0xFF8
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           intcon	equ	0xFF2
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           indf1	equ	0xFE7
  5535                           fsr1h	equ	0xFE2
  5536                           fsr1l	equ	0xFE1
  5537                           indf2	equ	0xFDF
  5538                           postinc2	equ	0xFDE
  5539                           postdec2	equ	0xFDD
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8
  5543                           
  5544 ;; *************** function _memcpy *****************
  5545 ;; Defined at:
  5546 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  d1              2   29[BANK0 ] PTR void 
  5549 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5550 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5551 ;;		 -> main@msgbuffer(11), NULL(0), 
  5552 ;;  s1              2   31[BANK0 ] PTR const void 
  5553 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5554 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5555 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5556 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5557 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5558 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5559 ;;  n               2   33[BANK0 ] unsigned int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  5562 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5563 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5564 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5565 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5566 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5567 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5568 ;;  d               2   35[BANK0 ] PTR unsigned char 
  5569 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5570 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5571 ;;		 -> main@msgbuffer(11), NULL(0), 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2   29[BANK0 ] PTR void 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5581 ;;      Params:         0       6       0       0       0
  5582 ;;      Locals:         0       4       0       0       0
  5583 ;;      Temps:          0       0       0       0       0
  5584 ;;      Totals:         0      10       0       0       0
  5585 ;;Total ram usage:       10 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   10
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_send_msg
  5592 ;;		_recv_msg
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text34
  5597  0019EE                     __ptext34:
  5598                           	opt stack 0
  5599  0019EE                     _memcpy:
  5600                           	opt stack 16
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;incstack = 0
  5604  0019EE  0100               	movlb	0	; () banked
  5605  0019F0  C0A0  F0A6         	movff	memcpy@s1+1,memcpy@s+1
  5606  0019F4  0100               	movlb	0	; () banked
  5607  0019F6  C09F  F0A5         	movff	memcpy@s1,memcpy@s
  5608  0019FA  0100               	movlb	0	; () banked
  5609  0019FC  C09E  F0A4         	movff	memcpy@d1+1,memcpy@d+1
  5610  001A00  0100               	movlb	0	; () banked
  5611  001A02  C09D  F0A3         	movff	memcpy@d1,memcpy@d
  5612  001A06  D010               	goto	l2240
  5613  001A08                     l2234:
  5614                           
  5615                           ; BSR set to: 0
  5616  001A08  C0A5  FFD9         	movff	memcpy@s,fsr2l
  5617  001A0C  C0A6  FFDA         	movff	memcpy@s+1,fsr2h
  5618  001A10  C0A3  FFE1         	movff	memcpy@d,fsr1l
  5619  001A14  C0A4  FFE2         	movff	memcpy@d+1,fsr1h
  5620  001A18  CFDF FFE7          	movff	indf2,indf1
  5621                           
  5622                           ; BSR set to: 0
  5623  001A1C  0100               	movlb	0	; () banked
  5624  001A1E  4BA5               	infsnz	memcpy@s& (0+255),f,b
  5625  001A20  2BA6               	incf	(memcpy@s+1)& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628  001A22  0100               	movlb	0	; () banked
  5629  001A24  4BA3               	infsnz	memcpy@d& (0+255),f,b
  5630  001A26  2BA4               	incf	(memcpy@d+1)& (0+255),f,b
  5631  001A28                     l2240:
  5632                           
  5633                           ; BSR set to: 0
  5634  001A28  0100               	movlb	0	; () banked
  5635  001A2A  07A1               	decf	memcpy@n& (0+255),f,b
  5636  001A2C  A0D8               	btfss	status,0,c
  5637  001A2E  07A2               	decf	(memcpy@n+1)& (0+255),f,b
  5638  001A30  0100               	movlb	0	; () banked
  5639  001A32  29A1               	incf	memcpy@n& (0+255),w,b
  5640  001A34  B4D8               	btfsc	status,2,c
  5641  001A36  29A2               	incf	(memcpy@n+1)& (0+255),w,b
  5642  001A38  B4D8               	btfsc	status,2,c
  5643                           
  5644                           ; BSR set to: 0
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;	Return value of _memcpy is never used
  5648  001A3A  0012               	return	
  5649  001A3C  D7E5               	goto	l2234
  5650  001A3E                     __end_of_memcpy:
  5651                           	opt stack 0
  5652                           tblptru	equ	0xFF8
  5653                           prodh	equ	0xFF4
  5654                           prodl	equ	0xFF3
  5655                           intcon	equ	0xFF2
  5656                           postinc0	equ	0xFEE
  5657                           wreg	equ	0xFE8
  5658                           indf1	equ	0xFE7
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function _OpenUSART *****************
  5669 ;; Defined at:
  5670 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  config          1    wreg     unsigned char 
  5673 ;;  spbrg           2   29[BANK0 ] unsigned int 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  config          1   34[BANK0 ] unsigned char 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;		None               void
  5678 ;; Registers used:
  5679 ;;		wreg, status,2
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5685 ;;      Params:         0       2       0       0       0
  5686 ;;      Locals:         0       1       0       0       0
  5687 ;;      Temps:          0       3       0       0       0
  5688 ;;      Totals:         0       6       0       0       0
  5689 ;;Total ram usage:        6 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:   10
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text35
  5700  00173A                     __ptext35:
  5701                           	opt stack 0
  5702  00173A                     _OpenUSART:
  5703                           	opt stack 19
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;incstack = 0
  5707                           ;OpenUSART@config stored from wreg
  5708  00173A  0100               	movlb	0	; () banked
  5709  00173C  6FA2               	movwf	OpenUSART@config& (0+255),b
  5710                           
  5711                           ; BSR set to: 0
  5712  00173E  0E00               	movlw	0
  5713  001740  6EAC               	movwf	4012,c	;volatile
  5714  001742  0E00               	movlw	0
  5715  001744  6EAB               	movwf	4011,c	;volatile
  5716                           
  5717                           ; BSR set to: 0
  5718  001746  0100               	movlb	0	; () banked
  5719  001748  B1A2               	btfsc	OpenUSART@config& (0+255),0,b
  5720                           
  5721                           ; BSR set to: 0
  5722  00174A  88AC               	bsf	4012,4,c	;volatile
  5723                           
  5724                           ; BSR set to: 0
  5725                           
  5726                           ; BSR set to: 0
  5727  00174C  0100               	movlb	0	; () banked
  5728  00174E  A3A2               	btfss	OpenUSART@config& (0+255),1,b
  5729  001750  D002               	goto	l2866
  5730                           
  5731                           ; BSR set to: 0
  5732  001752  8CAC               	bsf	4012,6,c	;volatile
  5733  001754  8CAB               	bsf	4011,6,c	;volatile
  5734  001756                     l2866:
  5735                           
  5736                           ; BSR set to: 0
  5737  001756  0100               	movlb	0	; () banked
  5738  001758  B5A2               	btfsc	OpenUSART@config& (0+255),2,b
  5739                           
  5740                           ; BSR set to: 0
  5741  00175A  8EAC               	bsf	4012,7,c	;volatile
  5742                           
  5743                           ; BSR set to: 0
  5744                           
  5745                           ; BSR set to: 0
  5746  00175C  0100               	movlb	0	; () banked
  5747  00175E  A7A2               	btfss	OpenUSART@config& (0+255),3,b
  5748  001760  D002               	goto	l567
  5749                           
  5750                           ; BSR set to: 0
  5751  001762  88AB               	bsf	4011,4,c	;volatile
  5752  001764  D001               	goto	l2874
  5753  001766                     l567:
  5754                           
  5755                           ; BSR set to: 0
  5756  001766  8AAB               	bsf	4011,5,c	;volatile
  5757  001768                     l2874:
  5758                           
  5759                           ; BSR set to: 0
  5760  001768  0100               	movlb	0	; () banked
  5761  00176A  B9A2               	btfsc	OpenUSART@config& (0+255),4,b
  5762                           
  5763                           ; BSR set to: 0
  5764  00176C  84AC               	bsf	4012,2,c	;volatile
  5765                           
  5766                           ; BSR set to: 0
  5767  00176E  989E               	bcf	3998,4,c	;volatile
  5768                           
  5769                           ; BSR set to: 0
  5770  001770  0100               	movlb	0	; () banked
  5771  001772  BBA2               	btfsc	OpenUSART@config& (0+255),5,b
  5772                           
  5773                           ; BSR set to: 0
  5774  001774  86AB               	bsf	4011,3,c	;volatile
  5775                           
  5776                           ; BSR set to: 0
  5777                           
  5778                           ; BSR set to: 0
  5779  001776  0100               	movlb	0	; () banked
  5780  001778  ADA2               	btfss	OpenUSART@config& (0+255),6,b
  5781  00177A  D002               	goto	l571
  5782                           
  5783                           ; BSR set to: 0
  5784  00177C  8A9D               	bsf	3997,5,c	;volatile
  5785  00177E  D001               	goto	l572
  5786  001780                     l571:
  5787                           
  5788                           ; BSR set to: 0
  5789  001780  9A9D               	bcf	3997,5,c	;volatile
  5790  001782                     l572:
  5791                           
  5792                           ; BSR set to: 0
  5793  001782  9A9E               	bcf	3998,5,c	;volatile
  5794                           
  5795                           ; BSR set to: 0
  5796  001784  0100               	movlb	0	; () banked
  5797  001786  AFA2               	btfss	OpenUSART@config& (0+255),7,b
  5798  001788  D002               	goto	l573
  5799                           
  5800                           ; BSR set to: 0
  5801  00178A  889D               	bsf	3997,4,c	;volatile
  5802  00178C  D001               	goto	l574
  5803  00178E                     l573:
  5804                           
  5805                           ; BSR set to: 0
  5806  00178E  989D               	bcf	3997,4,c	;volatile
  5807  001790                     l574:
  5808                           
  5809                           ; BSR set to: 0
  5810  001790  C09D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5811                           
  5812                           ; BSR set to: 0
  5813  001794  0100               	movlb	0	; () banked
  5814  001796  C09E  F09F         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5815  00179A  C09F  F0A0         	movff	??_OpenUSART,??_OpenUSART+1
  5816  00179E  0100               	movlb	0	; () banked
  5817  0017A0  6BA1               	clrf	(??_OpenUSART+2)& (0+255),b
  5818  0017A2  0100               	movlb	0	; () banked
  5819  0017A4  51A0               	movf	(??_OpenUSART+1)& (0+255),w,b
  5820  0017A6  6EB0               	movwf	4016,c	;volatile
  5821                           
  5822                           ; BSR set to: 0
  5823  0017A8  8AAC               	bsf	4012,5,c	;volatile
  5824                           
  5825                           ; BSR set to: 0
  5826  0017AA  8EAB               	bsf	4011,7,c	;volatile
  5827                           
  5828                           ; BSR set to: 0
  5829  0017AC  9C94               	bcf	3988,6,c	;volatile
  5830                           
  5831                           ; BSR set to: 0
  5832  0017AE  8E94               	bsf	3988,7,c	;volatile
  5833                           
  5834                           ; BSR set to: 0
  5835  0017B0  A8AC               	btfss	4012,4,c	;volatile
  5836  0017B2  0012               	return	
  5837                           
  5838                           ; BSR set to: 0
  5839  0017B4  BEAC               	btfsc	4012,7,c	;volatile
  5840  0017B6  0012               	return	
  5841                           
  5842                           ; BSR set to: 0
  5843  0017B8  8C94               	bsf	3988,6,c	;volatile
  5844  0017BA  0012               	return	
  5845  0017BC                     __end_of_OpenUSART:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           prodh	equ	0xFF4
  5849                           prodl	equ	0xFF3
  5850                           intcon	equ	0xFF2
  5851                           postinc0	equ	0xFEE
  5852                           wreg	equ	0xFE8
  5853                           indf1	equ	0xFE7
  5854                           fsr1h	equ	0xFE2
  5855                           fsr1l	equ	0xFE1
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _OpenTimer1 *****************
  5864 ;; Defined at:
  5865 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  config          1    wreg     unsigned char 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  config          1   29[BANK0 ] unsigned char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5879 ;;      Params:         0       0       0       0       0
  5880 ;;      Locals:         0       1       0       0       0
  5881 ;;      Temps:          0       0       0       0       0
  5882 ;;      Totals:         0       1       0       0       0
  5883 ;;Total ram usage:        1 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:   10
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_main
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text36
  5894  001C98                     __ptext36:
  5895                           	opt stack 0
  5896  001C98                     _OpenTimer1:
  5897                           	opt stack 19
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;incstack = 0
  5901                           ;OpenTimer1@config stored from wreg
  5902  001C98  0100               	movlb	0	; () banked
  5903  001C9A  6F9D               	movwf	OpenTimer1@config& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906  001C9C  0100               	movlb	0	; () banked
  5907  001C9E  519D               	movf	OpenTimer1@config& (0+255),w,b
  5908  001CA0  0B7E               	andlw	126
  5909  001CA2  6ECD               	movwf	4045,c	;volatile
  5910                           
  5911                           ; BSR set to: 0
  5912  001CA4  0100               	movlb	0	; () banked
  5913  001CA6  AD9D               	btfss	OpenTimer1@config& (0+255),6,b
  5914  001CA8  D002               	goto	l530
  5915                           
  5916                           ; BSR set to: 0
  5917  001CAA  8ECD               	bsf	4045,7,c	;volatile
  5918  001CAC  D001               	goto	l2848
  5919  001CAE                     l530:
  5920                           
  5921                           ; BSR set to: 0
  5922  001CAE  9ECD               	bcf	4045,7,c	;volatile
  5923  001CB0                     l2848:
  5924                           
  5925                           ; BSR set to: 0
  5926  001CB0  0E00               	movlw	0
  5927  001CB2  6ECF               	movwf	4047,c	;volatile
  5928  001CB4  0E00               	movlw	0
  5929  001CB6  6ECE               	movwf	4046,c	;volatile
  5930                           
  5931                           ; BSR set to: 0
  5932  001CB8  909E               	bcf	3998,0,c	;volatile
  5933                           
  5934                           ; BSR set to: 0
  5935  001CBA  0100               	movlb	0	; () banked
  5936  001CBC  AF9D               	btfss	OpenTimer1@config& (0+255),7,b
  5937  001CBE  D002               	goto	l532
  5938                           
  5939                           ; BSR set to: 0
  5940  001CC0  809D               	bsf	3997,0,c	;volatile
  5941  001CC2  D001               	goto	l533
  5942  001CC4                     l532:
  5943                           
  5944                           ; BSR set to: 0
  5945  001CC4  909D               	bcf	3997,0,c	;volatile
  5946  001CC6                     l533:
  5947                           
  5948                           ; BSR set to: 0
  5949  001CC6  80CD               	bsf	4045,0,c	;volatile
  5950                           
  5951                           ; BSR set to: 0
  5952  001CC8  0012               	return	
  5953  001CCA                     __end_of_OpenTimer1:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           intcon	equ	0xFF2
  5959                           postinc0	equ	0xFEE
  5960                           wreg	equ	0xFE8
  5961                           indf1	equ	0xFE7
  5962                           fsr1h	equ	0xFE2
  5963                           fsr1l	equ	0xFE1
  5964                           indf2	equ	0xFDF
  5965                           postinc2	equ	0xFDE
  5966                           postdec2	equ	0xFDD
  5967                           fsr2h	equ	0xFDA
  5968                           fsr2l	equ	0xFD9
  5969                           status	equ	0xFD8
  5970                           
  5971 ;; *************** function _OpenTimer0 *****************
  5972 ;; Defined at:
  5973 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  config          1    wreg     unsigned char 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  config          1   29[BANK0 ] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;		None               void
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5987 ;;      Params:         0       0       0       0       0
  5988 ;;      Locals:         0       1       0       0       0
  5989 ;;      Temps:          0       0       0       0       0
  5990 ;;      Totals:         0       1       0       0       0
  5991 ;;Total ram usage:        1 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:   10
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text37
  6002  001DAA                     __ptext37:
  6003                           	opt stack 0
  6004  001DAA                     _OpenTimer0:
  6005                           	opt stack 19
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;incstack = 0
  6009                           ;OpenTimer0@config stored from wreg
  6010  001DAA  0100               	movlb	0	; () banked
  6011  001DAC  6F9D               	movwf	OpenTimer0@config& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014  001DAE  0100               	movlb	0	; () banked
  6015  001DB0  519D               	movf	OpenTimer0@config& (0+255),w,b
  6016  001DB2  0B7F               	andlw	127
  6017  001DB4  6ED5               	movwf	4053,c	;volatile
  6018                           
  6019                           ; BSR set to: 0
  6020  001DB6  0E00               	movlw	0
  6021  001DB8  6ED7               	movwf	4055,c	;volatile
  6022                           
  6023                           ; BSR set to: 0
  6024  001DBA  0E00               	movlw	0
  6025  001DBC  6ED6               	movwf	4054,c	;volatile
  6026                           
  6027                           ; BSR set to: 0
  6028  001DBE  94F2               	bcf	intcon,2,c	;volatile
  6029                           
  6030                           ; BSR set to: 0
  6031  001DC0  0100               	movlb	0	; () banked
  6032  001DC2  AF9D               	btfss	OpenTimer0@config& (0+255),7,b
  6033  001DC4  D002               	goto	l506
  6034                           
  6035                           ; BSR set to: 0
  6036  001DC6  8AF2               	bsf	intcon,5,c	;volatile
  6037  001DC8  D001               	goto	l507
  6038  001DCA                     l506:
  6039                           
  6040                           ; BSR set to: 0
  6041  001DCA  9AF2               	bcf	intcon,5,c	;volatile
  6042  001DCC                     l507:
  6043                           
  6044                           ; BSR set to: 0
  6045  001DCC  8ED5               	bsf	4053,7,c	;volatile
  6046                           
  6047                           ; BSR set to: 0
  6048  001DCE  0012               	return	
  6049  001DD0                     __end_of_OpenTimer0:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           prodh	equ	0xFF4
  6053                           prodl	equ	0xFF3
  6054                           intcon	equ	0xFF2
  6055                           postinc0	equ	0xFEE
  6056                           wreg	equ	0xFE8
  6057                           indf1	equ	0xFE7
  6058                           fsr1h	equ	0xFE2
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _InterruptHandlerLow *****************
  6068 ;; Defined at:
  6069 ;;		line 116 in file "src/interrupts.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;		None               void
  6076 ;; Registers used:
  6077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6083 ;;      Params:         0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0
  6085 ;;      Temps:         17       0       0       0       0
  6086 ;;      Totals:        17       0       0       0       0
  6087 ;;Total ram usage:       17 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    9
  6090 ;; This function calls:
  6091 ;;		_uart_recv_int_handler
  6092 ;;		_uart_trans_int_handler
  6093 ;;		i1_ToMainLow_sendmsg
  6094 ;; This function is called by:
  6095 ;;		Interrupt level 1
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	intcodelo
  6100  000018                     __pintcodelo:
  6101                           	opt stack 0
  6102  000018                     _InterruptHandlerLow:
  6103                           	opt stack 15
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;incstack = 0
  6107  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  6108  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  6109  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  6110  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  6111  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  6112  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  6113  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  6114  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  6115  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  6116  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  6117  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  6118  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  6119  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  6120  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  6121  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  6122  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  6123  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  6124                           
  6125                           ;interrupts.c: 118: if (PIR1bits.TMR1IF) {
  6126  00005C  A09E               	btfss	3998,0,c	;volatile
  6127  00005E  D00A               	goto	i1l3120
  6128                           
  6129                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  6130  000060  909E               	bcf	3998,0,c	;volatile
  6131                           
  6132                           ;interrupts.c: 120: ToMainLow_sendmsg(0, 11, (void *)0);
  6133  000062  0E0B               	movlw	11
  6134  000064  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6135  000066  0E00               	movlw	0
  6136  000068  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6137  00006A  0E00               	movlw	0
  6138  00006C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6139  00006E  0E00               	movlw	0
  6140  000070  ECFB  F00E         	call	i1_ToMainLow_sendmsg
  6141  000074                     i1l3120:
  6142                           
  6143                           ;interrupts.c: 121: }
  6144                           ;interrupts.c: 124: if (PIR1bits.RCIF) {
  6145  000074  AA9E               	btfss	3998,5,c	;volatile
  6146  000076  D003               	goto	i1l3126
  6147                           
  6148                           ;interrupts.c: 125: PIR1bits.RCIF = 0;
  6149  000078  9A9E               	bcf	3998,5,c	;volatile
  6150                           
  6151                           ;interrupts.c: 126: uart_recv_int_handler();
  6152  00007A  EC0D  F00B         	call	_uart_recv_int_handler	;wreg free
  6153  00007E                     i1l3126:
  6154                           
  6155                           ;interrupts.c: 127: }
  6156                           ;interrupts.c: 130: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  6157  00007E  B89E               	btfsc	3998,4,c	;volatile
  6158  000080  A89D               	btfss	3997,4,c	;volatile
  6159  000082  D002               	goto	i1l52
  6160                           
  6161                           ;interrupts.c: 131: uart_trans_int_handler();
  6162  000084  ECCC  F00C         	call	_uart_trans_int_handler	;wreg free
  6163  000088                     i1l52:
  6164  000088  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  6165  00008C  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  6166  000090  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  6167  000094  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  6168  000098  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  6169  00009C  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  6170  0000A0  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  6171  0000A4  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  6172  0000A8  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  6173  0000AC  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  6174  0000B0  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  6175  0000B4  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  6176  0000B8  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  6177  0000BC  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  6178  0000C0  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  6179  0000C4  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  6180  0000C8  C023  FFD8         	movff	??_InterruptHandlerLow,status
  6181  0000CC  0010               	retfie	
  6182  0000CE                     __end_of_InterruptHandlerLow:
  6183                           	opt stack 0
  6184                           pclatu	equ	0xFFB
  6185                           pclath	equ	0xFFA
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           fsr0h	equ	0xFEA
  6195                           fsr0l	equ	0xFE9
  6196                           wreg	equ	0xFE8
  6197                           indf1	equ	0xFE7
  6198                           fsr1h	equ	0xFE2
  6199                           fsr1l	equ	0xFE1
  6200                           bsr	equ	0xFE0
  6201                           indf2	equ	0xFDF
  6202                           postinc2	equ	0xFDE
  6203                           postdec2	equ	0xFDD
  6204                           fsr2h	equ	0xFDA
  6205                           fsr2l	equ	0xFD9
  6206                           status	equ	0xFD8
  6207                           
  6208 ;; *************** function _uart_trans_int_handler *****************
  6209 ;; Defined at:
  6210 ;;		line 11 in file "src/my_uart.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  data            2   29[COMRAM] PTR unsigned char 
  6215 ;;		 -> NULL(0), 
  6216 ;;  length          1   33[COMRAM] char 
  6217 ;;  curIndex        1   32[COMRAM] unsigned char 
  6218 ;;  msgtype         1   31[COMRAM] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;		None               void
  6221 ;; Registers used:
  6222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6228 ;;      Params:         0       0       0       0       0
  6229 ;;      Locals:         5       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0
  6231 ;;      Totals:         5       0       0       0       0
  6232 ;;Total ram usage:        5 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    8
  6235 ;; This function calls:
  6236 ;;		_FromMainLow_recvmsg
  6237 ;; This function is called by:
  6238 ;;		_InterruptHandlerLow
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text39
  6243  001998                     __ptext39:
  6244                           	opt stack 0
  6245  001998                     _uart_trans_int_handler:
  6246                           	opt stack 15
  6247                           
  6248                           ;my_uart.c: 13: unsigned char* data = (0);
  6249                           
  6250                           ;incstack = 0
  6251  001998  0E00               	movlw	0
  6252  00199A  6E1F               	movwf	uart_trans_int_handler@data+1,c
  6253  00199C  0E00               	movlw	0
  6254  00199E  6E1E               	movwf	uart_trans_int_handler@data,c
  6255                           
  6256                           ;my_uart.c: 14: unsigned char msgtype;
  6257                           ;my_uart.c: 15: unsigned char curIndex;
  6258                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  6259  0019A0  0E00               	movlw	high uart_trans_int_handler@msgtype
  6260  0019A2  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  6261  0019A4  0E20               	movlw	low uart_trans_int_handler@msgtype
  6262  0019A6  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  6263  0019A8  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  6264  0019AC  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  6265  0019B0  0E0A               	movlw	10
  6266  0019B2  ECE8  F00E         	call	_FromMainLow_recvmsg
  6267  0019B6  6E22               	movwf	uart_trans_int_handler@length,c
  6268                           
  6269                           ;my_uart.c: 17: if (length < 0) {
  6270  0019B8  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6271  0019BA  D017               	goto	i1l406
  6272                           
  6273                           ;my_uart.c: 26: curIndex = 0;
  6274                           
  6275                           ;my_uart.c: 24: }
  6276                           ;my_uart.c: 25: } else {
  6277                           
  6278                           ;my_uart.c: 22: else{
  6279                           
  6280                           ;my_uart.c: 21: }
  6281  0019BC  0E00               	movlw	0
  6282  0019BE  6E21               	movwf	uart_trans_int_handler@curIndex,c
  6283                           
  6284                           ;my_uart.c: 27: while(curIndex < length){
  6285  0019C0  D00D               	goto	i1l2772
  6286  0019C2                     i1l409:
  6287  0019C2  A2AC               	btfss	4012,1,c	;volatile
  6288  0019C4  D7FE               	goto	i1l409
  6289                           
  6290                           ;my_uart.c: 33: TXREG = data[curIndex];
  6291  0019C6  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6292  0019C8  0D01               	mullw	1
  6293  0019CA  50F3               	movf	prodl,w,c
  6294  0019CC  241E               	addwf	uart_trans_int_handler@data,w,c
  6295  0019CE  6ED9               	movwf	fsr2l,c
  6296  0019D0  50F4               	movf	prodh,w,c
  6297  0019D2  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  6298  0019D4  6EDA               	movwf	fsr2h,c
  6299  0019D6  50DF               	movf	indf2,w,c
  6300  0019D8  6EAD               	movwf	4013,c	;volatile
  6301                           
  6302                           ;my_uart.c: 35: curIndex++;
  6303  0019DA  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  6304  0019DC                     i1l2772:
  6305  0019DC  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6306  0019DE  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6307  0019E0  D004               	goto	i1l406
  6308  0019E2  0AFF               	xorlw	255
  6309  0019E4  2422               	addwf	uart_trans_int_handler@length,w,c
  6310  0019E6  B0D8               	btfsc	status,0,c
  6311  0019E8  D7EC               	goto	i1l409
  6312  0019EA                     i1l406:
  6313                           
  6314                           ;my_uart.c: 36: }
  6315                           ;my_uart.c: 37: }
  6316                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  6317  0019EA  989D               	bcf	3997,4,c	;volatile
  6318  0019EC  0012               	return	
  6319  0019EE                     __end_of_uart_trans_int_handler:
  6320                           	opt stack 0
  6321                           pclatu	equ	0xFFB
  6322                           pclath	equ	0xFFA
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           intcon	equ	0xFF2
  6330                           postinc0	equ	0xFEE
  6331                           fsr0h	equ	0xFEA
  6332                           fsr0l	equ	0xFE9
  6333                           wreg	equ	0xFE8
  6334                           indf1	equ	0xFE7
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           bsr	equ	0xFE0
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _FromMainLow_recvmsg *****************
  6346 ;; Defined at:
  6347 ;;		line 159 in file "src/messages.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  maxlength       1    wreg     unsigned char 
  6350 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6351 ;;		 -> uart_trans_int_handler@msgtype(1), 
  6352 ;;  data            2   26[COMRAM] PTR void 
  6353 ;;		 -> NULL(0), 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  maxlength       1   28[COMRAM] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      char 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6365 ;;      Params:         4       0       0       0       0
  6366 ;;      Locals:         1       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0
  6368 ;;      Totals:         5       0       0       0       0
  6369 ;;Total ram usage:        5 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    7
  6372 ;; This function calls:
  6373 ;;		i1_recv_msg
  6374 ;; This function is called by:
  6375 ;;		_uart_trans_int_handler
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text40
  6380  001DD0                     __ptext40:
  6381                           	opt stack 0
  6382  001DD0                     _FromMainLow_recvmsg:
  6383                           	opt stack 15
  6384                           
  6385                           ;incstack = 0
  6386                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6387  001DD0  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  6388                           
  6389                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6390  001DD2  0101               	movlb	1	; () banked
  6391  001DD4  0E01               	movlw	high _FromMainLow_MQ
  6392  001DD6  6E0C               	movwf	i1recv_msg@qptr+1,c
  6393  001DD8  0101               	movlb	1	; () banked
  6394  001DDA  0E00               	movlw	low _FromMainLow_MQ
  6395  001DDC  6E0B               	movwf	i1recv_msg@qptr,c
  6396  001DDE  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  6397  001DE2  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  6398  001DE6  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  6399  001DEA  6A11               	clrf	i1recv_msg@data+1,c
  6400  001DEC  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  6401  001DF0  ECC1  F007         	call	i1_recv_msg	;wreg free
  6402  001DF4  0012               	return	
  6403  001DF6                     __end_of_FromMainLow_recvmsg:
  6404                           	opt stack 0
  6405                           pclatu	equ	0xFFB
  6406                           pclath	equ	0xFFA
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           intcon	equ	0xFF2
  6414                           postinc0	equ	0xFEE
  6415                           fsr0h	equ	0xFEA
  6416                           fsr0l	equ	0xFE9
  6417                           wreg	equ	0xFE8
  6418                           indf1	equ	0xFE7
  6419                           fsr1h	equ	0xFE2
  6420                           fsr1l	equ	0xFE1
  6421                           bsr	equ	0xFE0
  6422                           indf2	equ	0xFDF
  6423                           postinc2	equ	0xFDE
  6424                           postdec2	equ	0xFDD
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function i1_recv_msg *****************
  6430 ;; Defined at:
  6431 ;;		line 63 in file "src/messages.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6434 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6435 ;;  maxlength       1   12[COMRAM] unsigned char 
  6436 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  6437 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6438 ;;  data            2   15[COMRAM] PTR void 
  6439 ;;		 -> main@msgbuffer(11), NULL(0), 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  6442 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6443 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6444 ;;  recv_msg        2   20[COMRAM] unsigned int 
  6445 ;;  recv_msg        1   19[COMRAM] unsigned char 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      char 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6455 ;;      Params:         7       0       0       0       0
  6456 ;;      Locals:         5       0       0       0       0
  6457 ;;      Temps:          2       0       0       0       0
  6458 ;;      Totals:        14       0       0       0       0
  6459 ;;Total ram usage:       14 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    6
  6462 ;; This function calls:
  6463 ;;		i1_memcpy
  6464 ;; This function is called by:
  6465 ;;		_FromMainLow_recvmsg
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text41
  6470  000F82                     __ptext41:
  6471                           	opt stack 0
  6472  000F82                     i1_recv_msg:
  6473                           	opt stack 15
  6474                           
  6475                           ;messages.c: 64: unsigned char slot;
  6476                           ;messages.c: 68: msg *qmsg;
  6477                           ;messages.c: 69: size_t tlength;
  6478                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6479                           
  6480                           ;incstack = 0
  6481  000F82  EE20 F035          	lfsr	2,53
  6482  000F86  500B               	movf	i1recv_msg@qptr,w,c
  6483  000F88  26D9               	addwf	fsr2l,f,c
  6484  000F8A  500C               	movf	i1recv_msg@qptr+1,w,c
  6485  000F8C  22DA               	addwfc	fsr2h,f,c
  6486  000F8E  50DF               	movf	indf2,w,c
  6487  000F90  6E14               	movwf	i1recv_msg@slot,c
  6488                           
  6489                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6490  000F92  5014               	movf	i1recv_msg@slot,w,c
  6491  000F94  0D0D               	mullw	13
  6492  000F96  50F3               	movf	prodl,w,c
  6493  000F98  240B               	addwf	i1recv_msg@qptr,w,c
  6494  000F9A  6E17               	movwf	i1recv_msg@qmsg,c
  6495  000F9C  50F4               	movf	prodh,w,c
  6496  000F9E  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6497  000FA0  6E18               	movwf	i1recv_msg@qmsg+1,c
  6498                           
  6499                           ;messages.c: 74: if (qmsg->full == 1) {
  6500  000FA2  0E01               	movlw	1
  6501  000FA4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6502  000FA8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6503  000FAC  62DF               	cpfseq	indf2,c
  6504  000FAE  D050               	goto	i1l2394
  6505                           
  6506                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6507  000FB0  EE20 F001          	lfsr	2,1
  6508  000FB4  5017               	movf	i1recv_msg@qmsg,w,c
  6509  000FB6  26D9               	addwf	fsr2l,f,c
  6510  000FB8  5018               	movf	i1recv_msg@qmsg+1,w,c
  6511  000FBA  22DA               	addwfc	fsr2h,f,c
  6512  000FBC  50DF               	movf	indf2,w,c
  6513  000FBE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6514  000FC0  B0D8               	btfsc	status,0,c
  6515  000FC2  D002               	goto	i1l2378
  6516                           
  6517                           ;messages.c: 77: return (-3);
  6518  000FC4  0EFD               	movlw	253
  6519  000FC6  0012               	return	
  6520  000FC8                     i1l2378:
  6521                           
  6522                           ;messages.c: 78: }
  6523                           ;messages.c: 80: tlength = qmsg->length;
  6524  000FC8  EE20 F001          	lfsr	2,1
  6525  000FCC  5017               	movf	i1recv_msg@qmsg,w,c
  6526  000FCE  26D9               	addwf	fsr2l,f,c
  6527  000FD0  5018               	movf	i1recv_msg@qmsg+1,w,c
  6528  000FD2  22DA               	addwfc	fsr2h,f,c
  6529  000FD4  50DF               	movf	indf2,w,c
  6530  000FD6  6E12               	movwf	??i1_recv_msg& (0+255),c
  6531  000FD8  5012               	movf	??i1_recv_msg,w,c
  6532  000FDA  6E15               	movwf	i1recv_msg@tlength,c
  6533  000FDC  6A16               	clrf	i1recv_msg@tlength+1,c
  6534                           
  6535                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6536  000FDE  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6537  000FE2  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6538  000FE6  0E03               	movlw	3
  6539  000FE8  2417               	addwf	i1recv_msg@qmsg,w,c
  6540  000FEA  6E12               	movwf	??i1_recv_msg& (0+255),c
  6541  000FEC  0E00               	movlw	0
  6542  000FEE  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6543  000FF0  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6544  000FF2  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6545  000FF6  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6546  000FFA  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6547  000FFE  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6548  001002  EC66  F00D         	call	i1_memcpy	;wreg free
  6549                           
  6550                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6551  001006  EE20 F035          	lfsr	2,53
  6552  00100A  500B               	movf	i1recv_msg@qptr,w,c
  6553  00100C  26D9               	addwf	fsr2l,f,c
  6554  00100E  500C               	movf	i1recv_msg@qptr+1,w,c
  6555  001010  22DA               	addwfc	fsr2h,f,c
  6556  001012  EE10 F035          	lfsr	1,53
  6557  001016  500B               	movf	i1recv_msg@qptr,w,c
  6558  001018  26E1               	addwf	fsr1l,f,c
  6559  00101A  500C               	movf	i1recv_msg@qptr+1,w,c
  6560  00101C  22E2               	addwfc	fsr1h,f,c
  6561  00101E  50E7               	movf	indf1,w,c
  6562  001020  6E12               	movwf	??i1_recv_msg& (0+255),c
  6563  001022  2812               	incf	??i1_recv_msg,w,c
  6564  001024  0B03               	andlw	3
  6565  001026  6EDF               	movwf	indf2,c
  6566                           
  6567                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6568  001028  EE20 F002          	lfsr	2,2
  6569  00102C  5017               	movf	i1recv_msg@qmsg,w,c
  6570  00102E  26D9               	addwf	fsr2l,f,c
  6571  001030  5018               	movf	i1recv_msg@qmsg+1,w,c
  6572  001032  22DA               	addwfc	fsr2h,f,c
  6573  001034  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6574  001038  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6575  00103C  CFDF FFE7          	movff	indf2,indf1
  6576                           
  6577                           ;messages.c: 91: qmsg->full = 0;
  6578  001040  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6579  001044  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6580  001048  0E00               	movlw	0
  6581  00104A  6EDF               	movwf	indf2,c
  6582                           
  6583                           ;messages.c: 92: return (tlength);
  6584  00104C  5015               	movf	i1recv_msg@tlength,w,c
  6585  00104E  0012               	return	
  6586  001050                     i1l2394:
  6587                           
  6588                           ;messages.c: 94: return (-4);
  6589  001050  0EFC               	movlw	252
  6590  001052  0012               	return	
  6591  001054                     __end_ofi1_recv_msg:
  6592                           	opt stack 0
  6593                           pclatu	equ	0xFFB
  6594                           pclath	equ	0xFFA
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           postinc0	equ	0xFEE
  6603                           fsr0h	equ	0xFEA
  6604                           fsr0l	equ	0xFE9
  6605                           wreg	equ	0xFE8
  6606                           indf1	equ	0xFE7
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           bsr	equ	0xFE0
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _uart_recv_int_handler *****************
  6618 ;; Defined at:
  6619 ;;		line 42 in file "src/my_uart.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6633 ;;      Params:         0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0
  6635 ;;      Temps:          1       0       0       0       0
  6636 ;;      Totals:         1       0       0       0       0
  6637 ;;Total ram usage:        1 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    8
  6640 ;; This function calls:
  6641 ;;		_ReadUSART
  6642 ;;		i1_ToMainLow_sendmsg
  6643 ;; This function is called by:
  6644 ;;		_InterruptHandlerLow
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text42
  6649  00161A                     __ptext42:
  6650                           	opt stack 0
  6651  00161A                     _uart_recv_int_handler:
  6652                           	opt stack 15
  6653                           
  6654                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6655                           
  6656                           ;incstack = 0
  6657  00161A  AA9E               	btfss	3998,5,c	;volatile
  6658  00161C  D03A               	goto	i1l2750
  6659                           
  6660                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6661  00161E  EE20 F004          	lfsr	2,4
  6662  001622  5049               	movf	_uc_ptr,w,c
  6663  001624  26D9               	addwf	fsr2l,f,c
  6664  001626  504A               	movf	_uc_ptr+1,w,c
  6665  001628  22DA               	addwfc	fsr2h,f,c
  6666  00162A  50DF               	movf	indf2,w,c
  6667  00162C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6668  00162E  501B               	movf	??_uart_recv_int_handler,w,c
  6669  001630  0D01               	mullw	1
  6670  001632  50F3               	movf	prodl,w,c
  6671  001634  2449               	addwf	_uc_ptr,w,c
  6672  001636  6ED9               	movwf	fsr2l,c
  6673  001638  50F4               	movf	prodh,w,c
  6674  00163A  204A               	addwfc	_uc_ptr+1,w,c
  6675  00163C  6EDA               	movwf	fsr2h,c
  6676  00163E  EC40  F00F         	call	_ReadUSART	;wreg free
  6677  001642  6EDF               	movwf	indf2,c
  6678                           
  6679                           ;my_uart.c: 56: uc_ptr->buflen++;
  6680  001644  EE20 F004          	lfsr	2,4
  6681  001648  5049               	movf	_uc_ptr,w,c
  6682  00164A  26D9               	addwf	fsr2l,f,c
  6683  00164C  504A               	movf	_uc_ptr+1,w,c
  6684  00164E  22DA               	addwfc	fsr2h,f,c
  6685  001650  2ADF               	incf	indf2,f,c
  6686                           
  6687                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6688  001652  EE20 F004          	lfsr	2,4
  6689  001656  5049               	movf	_uc_ptr,w,c
  6690  001658  26D9               	addwf	fsr2l,f,c
  6691  00165A  504A               	movf	_uc_ptr+1,w,c
  6692  00165C  22DA               	addwfc	fsr2h,f,c
  6693  00165E  0E04               	movlw	4
  6694  001660  62DF               	cpfseq	indf2,c
  6695  001662  D017               	goto	i1l2750
  6696                           
  6697                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6698  001664  0E20               	movlw	32
  6699  001666  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6700  001668  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6701  00166C  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6702  001670  EE20 F004          	lfsr	2,4
  6703  001674  5049               	movf	_uc_ptr,w,c
  6704  001676  26D9               	addwf	fsr2l,f,c
  6705  001678  504A               	movf	_uc_ptr+1,w,c
  6706  00167A  22DA               	addwfc	fsr2h,f,c
  6707  00167C  50DF               	movf	indf2,w,c
  6708  00167E  ECFB  F00E         	call	i1_ToMainLow_sendmsg
  6709                           
  6710                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6711  001682  EE20 F004          	lfsr	2,4
  6712  001686  5049               	movf	_uc_ptr,w,c
  6713  001688  26D9               	addwf	fsr2l,f,c
  6714  00168A  504A               	movf	_uc_ptr+1,w,c
  6715  00168C  22DA               	addwfc	fsr2h,f,c
  6716  00168E  0E00               	movlw	0
  6717  001690  6EDF               	movwf	indf2,c
  6718  001692                     i1l2750:
  6719                           
  6720                           ;my_uart.c: 61: }
  6721                           ;my_uart.c: 62: }
  6722                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6723  001692  A64C               	btfss	_USART_Status,3,c
  6724  001694  0012               	return	
  6725                           
  6726                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6727  001696  98AB               	bcf	4011,4,c	;volatile
  6728                           
  6729                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6730  001698  88AB               	bsf	4011,4,c	;volatile
  6731                           
  6732                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6733  00169A  0E1E               	movlw	30
  6734  00169C  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6735  00169E  0E00               	movlw	0
  6736  0016A0  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6737  0016A2  0E00               	movlw	0
  6738  0016A4  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6739  0016A6  0E00               	movlw	0
  6740  0016A8  ECFB  F00E         	call	i1_ToMainLow_sendmsg
  6741  0016AC  0012               	return	
  6742  0016AE                     __end_of_uart_recv_int_handler:
  6743                           	opt stack 0
  6744                           pclatu	equ	0xFFB
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           postinc0	equ	0xFEE
  6754                           fsr0h	equ	0xFEA
  6755                           fsr0l	equ	0xFE9
  6756                           wreg	equ	0xFE8
  6757                           indf1	equ	0xFE7
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           bsr	equ	0xFE0
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           fsr2h	equ	0xFDA
  6765                           fsr2l	equ	0xFD9
  6766                           status	equ	0xFD8
  6767                           
  6768 ;; *************** function i1_ToMainLow_sendmsg *****************
  6769 ;; Defined at:
  6770 ;;		line 103 in file "src/messages.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  length          1    wreg     unsigned char 
  6773 ;;  msgtype         1   22[COMRAM] unsigned char 
  6774 ;;  data            2   23[COMRAM] PTR void 
  6775 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  6776 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  6777 ;;		 -> NULL(0), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  length          1   25[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      char 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6789 ;;      Params:         3       0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0
  6792 ;;      Totals:         4       0       0       0       0
  6793 ;;Total ram usage:        4 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    7
  6796 ;; This function calls:
  6797 ;;		i1_send_msg
  6798 ;; This function is called by:
  6799 ;;		_InterruptHandlerLow
  6800 ;;		_uart_recv_int_handler
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text43
  6805  001DF6                     __ptext43:
  6806                           	opt stack 0
  6807  001DF6                     i1_ToMainLow_sendmsg:
  6808                           	opt stack 16
  6809                           
  6810                           ;incstack = 0
  6811                           ;i1ToMainLow_sendmsg@length stored from wreg
  6812  001DF6  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  6813                           
  6814                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6815                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6816  001DF8  0101               	movlb	1	; () banked
  6817  001DFA  0E01               	movlw	high _ToMainLow_MQ
  6818  001DFC  6E0C               	movwf	i1send_msg@qptr+1,c
  6819  001DFE  0101               	movlb	1	; () banked
  6820  001E00  0E6C               	movlw	low _ToMainLow_MQ
  6821  001E02  6E0B               	movwf	i1send_msg@qptr,c
  6822  001E04  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6823  001E08  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6824  001E0C  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6825  001E10  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6826  001E14  EC69  F00A         	call	i1_send_msg	;wreg free
  6827  001E18  0012               	return	
  6828  001E1A                     __end_ofi1_ToMainLow_sendmsg:
  6829                           	opt stack 0
  6830                           pclatu	equ	0xFFB
  6831                           pclath	equ	0xFFA
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           postinc0	equ	0xFEE
  6840                           fsr0h	equ	0xFEA
  6841                           fsr0l	equ	0xFE9
  6842                           wreg	equ	0xFE8
  6843                           indf1	equ	0xFE7
  6844                           fsr1h	equ	0xFE2
  6845                           fsr1l	equ	0xFE1
  6846                           bsr	equ	0xFE0
  6847                           indf2	equ	0xFDF
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           fsr2h	equ	0xFDA
  6851                           fsr2l	equ	0xFD9
  6852                           status	equ	0xFD8
  6853                           
  6854 ;; *************** function i1_send_msg *****************
  6855 ;; Defined at:
  6856 ;;		line 24 in file "src/messages.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6859 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6860 ;;  length          1   12[COMRAM] unsigned char 
  6861 ;;  msgtype         1   13[COMRAM] unsigned char 
  6862 ;;  data            2   14[COMRAM] PTR void 
  6863 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6864 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6865 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6868 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6869 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6870 ;;  send_msg        2   17[COMRAM] unsigned int 
  6871 ;;  send_msg        1   19[COMRAM] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      char 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6881 ;;      Params:         6       0       0       0       0
  6882 ;;      Locals:         5       0       0       0       0
  6883 ;;      Temps:          1       0       0       0       0
  6884 ;;      Totals:        12       0       0       0       0
  6885 ;;Total ram usage:       12 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    6
  6888 ;; This function calls:
  6889 ;;		i1_memcpy
  6890 ;; This function is called by:
  6891 ;;		i1_ToMainLow_sendmsg
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text44
  6896  0014D2                     __ptext44:
  6897                           	opt stack 0
  6898  0014D2                     i1_send_msg:
  6899                           	opt stack 16
  6900                           
  6901                           ;messages.c: 25: unsigned char slot;
  6902                           ;messages.c: 27: msg *qmsg;
  6903                           ;messages.c: 28: size_t tlength = length;
  6904                           
  6905                           ;incstack = 0
  6906  0014D2  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6907  0014D6  6A13               	clrf	i1send_msg@tlength+1,c
  6908                           
  6909                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6910  0014D8  EE20 F034          	lfsr	2,52
  6911  0014DC  500B               	movf	i1send_msg@qptr,w,c
  6912  0014DE  26D9               	addwf	fsr2l,f,c
  6913  0014E0  500C               	movf	i1send_msg@qptr+1,w,c
  6914  0014E2  22DA               	addwfc	fsr2h,f,c
  6915  0014E4  50DF               	movf	indf2,w,c
  6916  0014E6  6E14               	movwf	i1send_msg@slot,c
  6917                           
  6918                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6919  0014E8  5014               	movf	i1send_msg@slot,w,c
  6920  0014EA  0D0D               	mullw	13
  6921  0014EC  50F3               	movf	prodl,w,c
  6922  0014EE  240B               	addwf	i1send_msg@qptr,w,c
  6923  0014F0  6E15               	movwf	i1send_msg@qmsg,c
  6924  0014F2  50F4               	movf	prodh,w,c
  6925  0014F4  200C               	addwfc	i1send_msg@qptr+1,w,c
  6926  0014F6  6E16               	movwf	i1send_msg@qmsg+1,c
  6927                           
  6928                           ;messages.c: 41: if (qmsg->full != 0) {
  6929  0014F8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6930  0014FC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6931  001500  50DF               	movf	indf2,w,c
  6932  001502  B4D8               	btfsc	status,2,c
  6933  001504  D002               	goto	i1l2330
  6934                           
  6935                           ;messages.c: 42: return (-1);
  6936  001506  0EFF               	movlw	255
  6937  001508  0012               	return	
  6938  00150A                     i1l2330:
  6939                           
  6940                           ;messages.c: 43: }
  6941                           ;messages.c: 46: qmsg->length = length;
  6942  00150A  EE20 F001          	lfsr	2,1
  6943  00150E  5015               	movf	i1send_msg@qmsg,w,c
  6944  001510  26D9               	addwf	fsr2l,f,c
  6945  001512  5016               	movf	i1send_msg@qmsg+1,w,c
  6946  001514  22DA               	addwfc	fsr2h,f,c
  6947  001516  C00D  FFDF         	movff	i1send_msg@length,indf2
  6948                           
  6949                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6950  00151A  EE20 F002          	lfsr	2,2
  6951  00151E  5015               	movf	i1send_msg@qmsg,w,c
  6952  001520  26D9               	addwf	fsr2l,f,c
  6953  001522  5016               	movf	i1send_msg@qmsg+1,w,c
  6954  001524  22DA               	addwfc	fsr2h,f,c
  6955  001526  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6956                           
  6957                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6958  00152A  0E03               	movlw	3
  6959  00152C  2415               	addwf	i1send_msg@qmsg,w,c
  6960  00152E  6E01               	movwf	i1memcpy@d1,c
  6961  001530  0E00               	movlw	0
  6962  001532  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6963  001534  6E02               	movwf	i1memcpy@d1+1,c
  6964  001536  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6965  00153A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6966  00153E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6967  001542  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6968  001546  EC66  F00D         	call	i1_memcpy	;wreg free
  6969                           
  6970                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6971  00154A  EE20 F034          	lfsr	2,52
  6972  00154E  500B               	movf	i1send_msg@qptr,w,c
  6973  001550  26D9               	addwf	fsr2l,f,c
  6974  001552  500C               	movf	i1send_msg@qptr+1,w,c
  6975  001554  22DA               	addwfc	fsr2h,f,c
  6976  001556  EE10 F034          	lfsr	1,52
  6977  00155A  500B               	movf	i1send_msg@qptr,w,c
  6978  00155C  26E1               	addwf	fsr1l,f,c
  6979  00155E  500C               	movf	i1send_msg@qptr+1,w,c
  6980  001560  22E2               	addwfc	fsr1h,f,c
  6981  001562  50E7               	movf	indf1,w,c
  6982  001564  6E11               	movwf	??i1_send_msg& (0+255),c
  6983  001566  2811               	incf	??i1_send_msg,w,c
  6984  001568  0B03               	andlw	3
  6985  00156A  6EDF               	movwf	indf2,c
  6986                           
  6987                           ;messages.c: 59: qmsg->full = 1;
  6988  00156C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6989  001570  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6990  001574  0E01               	movlw	1
  6991  001576  6EDF               	movwf	indf2,c
  6992                           
  6993                           ;messages.c: 60: return (1);
  6994  001578  0E01               	movlw	1
  6995  00157A  0012               	return	
  6996  00157C                     __end_ofi1_send_msg:
  6997                           	opt stack 0
  6998                           pclatu	equ	0xFFB
  6999                           pclath	equ	0xFFA
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           postinc0	equ	0xFEE
  7008                           fsr0h	equ	0xFEA
  7009                           fsr0l	equ	0xFE9
  7010                           wreg	equ	0xFE8
  7011                           indf1	equ	0xFE7
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           bsr	equ	0xFE0
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8
  7021                           
  7022 ;; *************** function i1_memcpy *****************
  7023 ;; Defined at:
  7024 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  d1              2    0[COMRAM] PTR void 
  7027 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7028 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7029 ;;		 -> main@msgbuffer(11), NULL(0), 
  7030 ;;  s1              2    2[COMRAM] PTR const void 
  7031 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7032 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7033 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7034 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7035 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7036 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7037 ;;  n               2    4[COMRAM] unsigned int 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  7040 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7041 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7042 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7043 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7044 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7045 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7046 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  7047 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7048 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7049 ;;		 -> main@msgbuffer(11), NULL(0), 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  2    0[COMRAM] PTR void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7059 ;;      Params:         6       0       0       0       0
  7060 ;;      Locals:         4       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0
  7062 ;;      Totals:        10       0       0       0       0
  7063 ;;Total ram usage:       10 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    5
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		i1_send_msg
  7070 ;;		i1_recv_msg
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text45
  7075  001ACC                     __ptext45:
  7076                           	opt stack 0
  7077  001ACC                     i1_memcpy:
  7078                           	opt stack 16
  7079                           
  7080                           ;incstack = 0
  7081  001ACC  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7082  001AD0  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7083  001AD4  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7084  001AD8  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7085  001ADC  D00E               	goto	i1l2278
  7086  001ADE                     i1l2272:
  7087  001ADE  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7088  001AE2  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7089  001AE6  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7090  001AEA  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7091  001AEE  CFDF FFE7          	movff	indf2,indf1
  7092  001AF2  4A09               	infsnz	i1memcpy@s,f,c
  7093  001AF4  2A0A               	incf	i1memcpy@s+1,f,c
  7094  001AF6  4A07               	infsnz	i1memcpy@d,f,c
  7095  001AF8  2A08               	incf	i1memcpy@d+1,f,c
  7096  001AFA                     i1l2278:
  7097  001AFA  0605               	decf	i1memcpy@n,f,c
  7098  001AFC  A0D8               	btfss	status,0,c
  7099  001AFE  0606               	decf	i1memcpy@n+1,f,c
  7100  001B00  2805               	incf	i1memcpy@n& (0+255),w,c
  7101  001B02  B4D8               	btfsc	status,2,c
  7102  001B04  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7103  001B06  B4D8               	btfsc	status,2,c
  7104                           
  7105                           ;	Return value of i1_memcpy is never used
  7106  001B08  0012               	return	
  7107  001B0A  D7E9               	goto	i1l2272
  7108  001B0C                     __end_ofi1_memcpy:
  7109                           	opt stack 0
  7110                           pclatu	equ	0xFFB
  7111                           pclath	equ	0xFFA
  7112                           tblptru	equ	0xFF8
  7113                           tblptrh	equ	0xFF7
  7114                           tblptrl	equ	0xFF6
  7115                           tablat	equ	0xFF5
  7116                           prodh	equ	0xFF4
  7117                           prodl	equ	0xFF3
  7118                           intcon	equ	0xFF2
  7119                           postinc0	equ	0xFEE
  7120                           fsr0h	equ	0xFEA
  7121                           fsr0l	equ	0xFE9
  7122                           wreg	equ	0xFE8
  7123                           indf1	equ	0xFE7
  7124                           fsr1h	equ	0xFE2
  7125                           fsr1l	equ	0xFE1
  7126                           bsr	equ	0xFE0
  7127                           indf2	equ	0xFDF
  7128                           postinc2	equ	0xFDE
  7129                           postdec2	equ	0xFDD
  7130                           fsr2h	equ	0xFDA
  7131                           fsr2l	equ	0xFD9
  7132                           status	equ	0xFD8
  7133                           
  7134 ;; *************** function _ReadUSART *****************
  7135 ;; Defined at:
  7136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  data            1    0[COMRAM] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      unsigned char 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7150 ;;      Params:         0       0       0       0       0
  7151 ;;      Locals:         1       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0
  7153 ;;      Totals:         1       0       0       0       0
  7154 ;;Total ram usage:        1 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    5
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_uart_recv_int_handler
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text46
  7165  001E80                     __ptext46:
  7166                           	opt stack 0
  7167  001E80                     _ReadUSART:
  7168                           	opt stack 17
  7169                           
  7170                           ;incstack = 0
  7171  001E80  0EF2               	movlw	242
  7172  001E82  164C               	andwf	_USART_Status,f,c
  7173  001E84  ACAB               	btfss	4011,6,c	;volatile
  7174  001E86  D003               	goto	i1l585
  7175  001E88  904C               	bcf	_USART_Status,0,c
  7176  001E8A  B0AB               	btfsc	4011,0,c	;volatile
  7177  001E8C  804C               	bsf	_USART_Status,0,c
  7178  001E8E                     i1l585:
  7179  001E8E  B4AB               	btfsc	4011,2,c	;volatile
  7180  001E90  844C               	bsf	_USART_Status,2,c
  7181  001E92  B2AB               	btfsc	4011,1,c	;volatile
  7182  001E94  864C               	bsf	_USART_Status,3,c
  7183  001E96  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7184  001E9A  5001               	movf	ReadUSART@data,w,c
  7185  001E9C  0012               	return	
  7186  001E9E                     __end_of_ReadUSART:
  7187                           	opt stack 0
  7188                           pclatu	equ	0xFFB
  7189                           pclath	equ	0xFFA
  7190                           tblptru	equ	0xFF8
  7191                           tblptrh	equ	0xFF7
  7192                           tblptrl	equ	0xFF6
  7193                           tablat	equ	0xFF5
  7194                           prodh	equ	0xFF4
  7195                           prodl	equ	0xFF3
  7196                           intcon	equ	0xFF2
  7197                           postinc0	equ	0xFEE
  7198                           fsr0h	equ	0xFEA
  7199                           fsr0l	equ	0xFE9
  7200                           wreg	equ	0xFE8
  7201                           indf1	equ	0xFE7
  7202                           fsr1h	equ	0xFE2
  7203                           fsr1l	equ	0xFE1
  7204                           bsr	equ	0xFE0
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _InterruptHandlerHigh *****************
  7213 ;; Defined at:
  7214 ;;		line 84 in file "src/interrupts.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7228 ;;      Params:         0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0
  7230 ;;      Temps:          0      14       0       0       0
  7231 ;;      Totals:         0      14       0       0       0
  7232 ;;Total ram usage:       14 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    4
  7235 ;; This function calls:
  7236 ;;		_SleepIfOkay
  7237 ;;		_ToMainHigh_sendmsg
  7238 ;;		_i2c_int_handler
  7239 ;; This function is called by:
  7240 ;;		Interrupt level 2
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	intcode
  7245  000008                     __pintcode:
  7246                           	opt stack 0
  7247  000008                     _InterruptHandlerHigh:
  7248                           	opt stack 15
  7249                           
  7250                           ;incstack = 0
  7251  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh
  7252  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+1
  7253  000010  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+2
  7254  000014  EF57  F00B         	goto	int_func
  7255                           pclatu	equ	0xFFB
  7256                           pclath	equ	0xFFA
  7257                           tblptru	equ	0xFF8
  7258                           tblptrh	equ	0xFF7
  7259                           tblptrl	equ	0xFF6
  7260                           tablat	equ	0xFF5
  7261                           prodh	equ	0xFF4
  7262                           prodl	equ	0xFF3
  7263                           intcon	equ	0xFF2
  7264                           postinc0	equ	0xFEE
  7265                           fsr0h	equ	0xFEA
  7266                           fsr0l	equ	0xFE9
  7267                           wreg	equ	0xFE8
  7268                           indf1	equ	0xFE7
  7269                           fsr1h	equ	0xFE2
  7270                           fsr1l	equ	0xFE1
  7271                           bsr	equ	0xFE0
  7272                           indf2	equ	0xFDF
  7273                           postinc2	equ	0xFDE
  7274                           postdec2	equ	0xFDD
  7275                           fsr2h	equ	0xFDA
  7276                           fsr2l	equ	0xFD9
  7277                           status	equ	0xFD8
  7278                           
  7279                           	psect	intcode_body
  7280  0016AE                     __pintcode_body:
  7281                           	opt stack 15
  7282  0016AE                     int_func:
  7283                           	opt stack 15
  7284  0016AE  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+3
  7285  0016B2  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+4
  7286  0016B6  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+5
  7287  0016BA  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+6
  7288  0016BE  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+7
  7289  0016C2  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+8
  7290  0016C6  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+9
  7291  0016CA  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+10
  7292  0016CE  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+11
  7293  0016D2  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+12
  7294  0016D6  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+13
  7295                           
  7296                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  7297  0016DA  A69E               	btfss	3998,3,c	;volatile
  7298  0016DC  D003               	goto	i2l3442
  7299                           
  7300                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  7301  0016DE  969E               	bcf	3998,3,c	;volatile
  7302                           
  7303                           ;interrupts.c: 93: i2c_int_handler();
  7304  0016E0  EC69  F000         	call	_i2c_int_handler	;wreg free
  7305  0016E4                     i2l3442:
  7306                           
  7307                           ;interrupts.c: 94: }
  7308                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  7309  0016E4  A4F2               	btfss	intcon,2,c	;volatile
  7310  0016E6  D00A               	goto	i2l3448
  7311                           
  7312                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  7313  0016E8  94F2               	bcf	intcon,2,c	;volatile
  7314                           
  7315                           ;interrupts.c: 99: ToMainHigh_sendmsg(0, 10, (void *)0);
  7316  0016EA  0E0A               	movlw	10
  7317  0016EC  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7318  0016EE  0E00               	movlw	0
  7319  0016F0  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7320  0016F2  0E00               	movlw	0
  7321  0016F4  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7322  0016F6  0E00               	movlw	0
  7323  0016F8  EC0D  F00F         	call	_ToMainHigh_sendmsg
  7324  0016FC                     i2l3448:
  7325                           
  7326                           ;interrupts.c: 100: }
  7327                           ;interrupts.c: 103: SleepIfOkay();
  7328  0016FC  EC1F  F00D         	call	_SleepIfOkay	;wreg free
  7329  001700  C09C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7330  001704  C09B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7331  001708  C09A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7332  00170C  C099  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7333  001710  C098  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7334  001714  C097  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7335  001718  C096  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7336  00171C  C095  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7337  001720  C094  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7338  001724  C093  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7339  001728  C092  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7340  00172C  C091  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7341  001730  C090  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7342  001734  C08F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7343  001738  0011               	retfie		f
  7344  00173A                     __end_of_InterruptHandlerHigh:
  7345                           	opt stack 0
  7346                           pclatu	equ	0xFFB
  7347                           pclath	equ	0xFFA
  7348                           tblptru	equ	0xFF8
  7349                           tblptrh	equ	0xFF7
  7350                           tblptrl	equ	0xFF6
  7351                           tablat	equ	0xFF5
  7352                           prodh	equ	0xFF4
  7353                           prodl	equ	0xFF3
  7354                           intcon	equ	0xFF2
  7355                           postinc0	equ	0xFEE
  7356                           fsr0h	equ	0xFEA
  7357                           fsr0l	equ	0xFE9
  7358                           wreg	equ	0xFE8
  7359                           indf1	equ	0xFE7
  7360                           fsr1h	equ	0xFE2
  7361                           fsr1l	equ	0xFE1
  7362                           bsr	equ	0xFE0
  7363                           indf2	equ	0xFDF
  7364                           postinc2	equ	0xFDE
  7365                           postdec2	equ	0xFDD
  7366                           fsr2h	equ	0xFDA
  7367                           fsr2l	equ	0xFD9
  7368                           status	equ	0xFD8
  7369                           
  7370 ;; *************** function _i2c_int_handler *****************
  7371 ;; Defined at:
  7372 ;;		line 100 in file "src/my_i2c.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;		None
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  7377 ;;  data_read       1   14[BANK0 ] unsigned char 
  7378 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  7379 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  7380 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  7381 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  7382 ;;  data_written    1    9[BANK0 ] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;		None               void
  7385 ;; Registers used:
  7386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7392 ;;      Params:         0       0       0       0       0
  7393 ;;      Locals:         0       9       0       0       0
  7394 ;;      Temps:          0       1       0       0       0
  7395 ;;      Totals:         0      10       0       0       0
  7396 ;;Total ram usage:       10 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    3
  7399 ;; This function calls:
  7400 ;;		_ToMainHigh_sendmsg
  7401 ;;		_handle_start
  7402 ;; This function is called by:
  7403 ;;		_InterruptHandlerHigh
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text48
  7408  0000D2                     __ptext48:
  7409                           	opt stack 0
  7410  0000D2                     _i2c_int_handler:
  7411                           	opt stack 15
  7412                           
  7413                           ;my_i2c.c: 101: unsigned char i2c_data;
  7414                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7415                           
  7416                           ;incstack = 0
  7417  0000D2  0E00               	movlw	0
  7418  0000D4  0100               	movlb	0	; () banked
  7419  0000D6  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7420                           
  7421                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7422  0000D8  0E00               	movlw	0
  7423  0000DA  0100               	movlb	0	; () banked
  7424  0000DC  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7425                           
  7426                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7427  0000DE  0E00               	movlw	0
  7428  0000E0  0100               	movlb	0	; () banked
  7429  0000E2  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7430                           
  7431                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7432  0000E4  0E00               	movlw	0
  7433  0000E6  0100               	movlb	0	; () banked
  7434  0000E8  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7435                           
  7436                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7437  0000EA  0E00               	movlw	0
  7438  0000EC  0100               	movlb	0	; () banked
  7439  0000EE  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7443                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7444  0000F0  ACC6               	btfss	4038,6,c	;volatile
  7445  0000F2  D024               	goto	i2l3308
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7449  0000F4  9CC6               	bcf	4038,6,c	;volatile
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7453  0000F6  0100               	movlb	0	; () banked
  7454  0000F8  EE20 F00C          	lfsr	2,12
  7455  0000FC  0100               	movlb	0	; () banked
  7456  0000FE  51CE               	movf	_ic_ptr& (0+255),w,b
  7457  000100  26D9               	addwf	fsr2l,f,c
  7458  000102  0100               	movlb	0	; () banked
  7459  000104  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7460  000106  22DA               	addwfc	fsr2h,f,c
  7461  000108  0E05               	movlw	5
  7462  00010A  6EDF               	movwf	indf2,c
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 116: overrun_error = 1;
  7466  00010C  0E01               	movlw	1
  7467  00010E  0100               	movlb	0	; () banked
  7468  000110  6F8A               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7472  000112  0100               	movlb	0	; () banked
  7473  000114  EE20 F00E          	lfsr	2,14
  7474  000118  0100               	movlb	0	; () banked
  7475  00011A  51CE               	movf	_ic_ptr& (0+255),w,b
  7476  00011C  26D9               	addwf	fsr2l,f,c
  7477  00011E  0100               	movlb	0	; () banked
  7478  000120  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7479  000122  22DA               	addwfc	fsr2h,f,c
  7480  000124  2ADF               	incf	indf2,f,c
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7484  000126  0100               	movlb	0	; () banked
  7485  000128  EE20 F00D          	lfsr	2,13
  7486  00012C  0100               	movlb	0	; () banked
  7487  00012E  51CE               	movf	_ic_ptr& (0+255),w,b
  7488  000130  26D9               	addwf	fsr2l,f,c
  7489  000132  0100               	movlb	0	; () banked
  7490  000134  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000136  22DA               	addwfc	fsr2h,f,c
  7492  000138  0E04               	movlw	4
  7493  00013A  6EDF               	movwf	indf2,c
  7494  00013C                     i2l3308:
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;my_i2c.c: 119: }
  7498                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7499  00013C  A0C7               	btfss	4039,0,c	;volatile
  7500  00013E  D005               	goto	i2l3314
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7504  000140  CFC9 F08B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;my_i2c.c: 123: data_read = 1;
  7508  000144  0E01               	movlw	1
  7509  000146  0100               	movlb	0	; () banked
  7510  000148  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7511  00014A                     i2l3314:
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;my_i2c.c: 124: }
  7515                           ;my_i2c.c: 126: if (!overrun_error) {
  7516  00014A  0100               	movlb	0	; () banked
  7517  00014C  678A               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7518  00014E  D19F               	goto	i2l333
  7519  000150  D188               	goto	i2l3402
  7520  000152                     i2l335:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;my_i2c.c: 129: {
  7524                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7525  000152  A6C7               	btfss	4039,3,c	;volatile
  7526  000154  D19C               	goto	i2l333
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;my_i2c.c: 132: handle_start(data_read);
  7530  000156  0100               	movlb	0	; () banked
  7531  000158  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7532  00015A  EC8F  F008         	call	_handle_start
  7533                           
  7534                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7535  00015E  0100               	movlb	0	; () banked
  7536  000160  EE20 F00C          	lfsr	2,12
  7537  000164  0100               	movlb	0	; () banked
  7538  000166  51CE               	movf	_ic_ptr& (0+255),w,b
  7539  000168  26D9               	addwf	fsr2l,f,c
  7540  00016A  0100               	movlb	0	; () banked
  7541  00016C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7542  00016E  22DA               	addwfc	fsr2h,f,c
  7543  000170  0E08               	movlw	8
  7544  000172  62DF               	cpfseq	indf2,c
  7545  000174  D18C               	goto	i2l333
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 135: data_read = 0;
  7549  000176  0E00               	movlw	0
  7550  000178  0100               	movlb	0	; () banked
  7551  00017A  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  7552                           
  7553                           ;my_i2c.c: 136: msg_to_send = 1;
  7554  00017C  0E01               	movlw	1
  7555  00017E  0100               	movlb	0	; () banked
  7556  000180  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7557  000182  D185               	goto	i2l333
  7558  000184                     i2l339:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;my_i2c.c: 142: {
  7562                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7563  000184  A8C7               	btfss	4039,4,c	;volatile
  7564  000186  D02A               	goto	i2l3334
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7568  000188  0100               	movlb	0	; () banked
  7569  00018A  EE20 F00B          	lfsr	2,11
  7570  00018E  0100               	movlb	0	; () banked
  7571  000190  51CE               	movf	_ic_ptr& (0+255),w,b
  7572  000192  26D9               	addwf	fsr2l,f,c
  7573  000194  0100               	movlb	0	; () banked
  7574  000196  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7575  000198  22DA               	addwfc	fsr2h,f,c
  7576  00019A  2ADF               	incf	indf2,f,c
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;my_i2c.c: 148: if (data_read) {
  7580  00019C  0100               	movlb	0	; () banked
  7581  00019E  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7582  0001A0  B4D8               	btfsc	status,2,c
  7583  0001A2  D154               	goto	L10
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7587  0001A4  BAC7               	btfsc	4039,5,c	;volatile
  7588  0001A6  D004               	goto	i2l3332
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;my_i2c.c: 150: msg_ready = 1;
  7592  0001A8  0E01               	movlw	1
  7593  0001AA  0100               	movlb	0	; () banked
  7594  0001AC  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7595                           
  7596                           ;my_i2c.c: 151: } else {
  7597  0001AE  D14E               	goto	L10
  7598  0001B0                     i2l3332:
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7602  0001B0  0100               	movlb	0	; () banked
  7603  0001B2  EE20 F00E          	lfsr	2,14
  7604  0001B6  0100               	movlb	0	; () banked
  7605  0001B8  51CE               	movf	_ic_ptr& (0+255),w,b
  7606  0001BA  26D9               	addwf	fsr2l,f,c
  7607  0001BC  0100               	movlb	0	; () banked
  7608  0001BE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7609  0001C0  22DA               	addwfc	fsr2h,f,c
  7610  0001C2  2ADF               	incf	indf2,f,c
  7611                           
  7612                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7613  0001C4  0100               	movlb	0	; () banked
  7614  0001C6  EE20 F00D          	lfsr	2,13
  7615  0001CA  0100               	movlb	0	; () banked
  7616  0001CC  51CE               	movf	_ic_ptr& (0+255),w,b
  7617  0001CE  26D9               	addwf	fsr2l,f,c
  7618  0001D0  0100               	movlb	0	; () banked
  7619  0001D2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7620  0001D4  22DA               	addwfc	fsr2h,f,c
  7621  0001D6  0E06               	movlw	6
  7622  0001D8  6EDF               	movwf	indf2,c
  7623                           
  7624                           ; BSR set to: 0
  7625  0001DA  D138               	goto	L10
  7626  0001DC                     i2l3334:
  7627                           
  7628                           ; BSR set to: 0
  7629  0001DC  0100               	movlb	0	; () banked
  7630  0001DE  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7631  0001E0  B4D8               	btfsc	status,2,c
  7632  0001E2  D155               	goto	i2l333
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7636  0001E4  0100               	movlb	0	; () banked
  7637  0001E6  EE20 F00B          	lfsr	2,11
  7638  0001EA  0100               	movlb	0	; () banked
  7639  0001EC  51CE               	movf	_ic_ptr& (0+255),w,b
  7640  0001EE  26D9               	addwf	fsr2l,f,c
  7641  0001F0  0100               	movlb	0	; () banked
  7642  0001F2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7643  0001F4  22DA               	addwfc	fsr2h,f,c
  7644  0001F6  2ADF               	incf	indf2,f,c
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7648  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7649  0001FA  D019               	goto	i2l3350
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7653  0001FC  B4C7               	btfsc	4039,2,c	;volatile
  7654  0001FE  D00B               	goto	i2l3344
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7658  000200  0100               	movlb	0	; () banked
  7659  000202  EE20 F00C          	lfsr	2,12
  7660  000206  0100               	movlb	0	; () banked
  7661  000208  51CE               	movf	_ic_ptr& (0+255),w,b
  7662  00020A  26D9               	addwf	fsr2l,f,c
  7663  00020C  0100               	movlb	0	; () banked
  7664  00020E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7665  000210  22DA               	addwfc	fsr2h,f,c
  7666  000212  0E07               	movlw	7
  7667  000214  D071               	goto	L8
  7668  000216                     i2l3344:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7672  000216  0100               	movlb	0	; () banked
  7673  000218  EE20 F00C          	lfsr	2,12
  7674  00021C  0100               	movlb	0	; () banked
  7675  00021E  51CE               	movf	_ic_ptr& (0+255),w,b
  7676  000220  26D9               	addwf	fsr2l,f,c
  7677  000222  0100               	movlb	0	; () banked
  7678  000224  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7679  000226  22DA               	addwfc	fsr2h,f,c
  7680  000228  0E08               	movlw	8
  7681  00022A  6EDF               	movwf	indf2,c
  7682  00022C  D108               	goto	L7
  7683  00022E                     i2l3350:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7687  00022E  0100               	movlb	0	; () banked
  7688  000230  EE20 F00E          	lfsr	2,14
  7689  000234  0100               	movlb	0	; () banked
  7690  000236  51CE               	movf	_ic_ptr& (0+255),w,b
  7691  000238  26D9               	addwf	fsr2l,f,c
  7692  00023A  0100               	movlb	0	; () banked
  7693  00023C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7694  00023E  22DA               	addwfc	fsr2h,f,c
  7695  000240  2ADF               	incf	indf2,f,c
  7696                           
  7697                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7698  000242  0100               	movlb	0	; () banked
  7699  000244  EE20 F00C          	lfsr	2,12
  7700  000248  0100               	movlb	0	; () banked
  7701  00024A  51CE               	movf	_ic_ptr& (0+255),w,b
  7702  00024C  26D9               	addwf	fsr2l,f,c
  7703  00024E  0100               	movlb	0	; () banked
  7704  000250  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7705  000252  22DA               	addwfc	fsr2h,f,c
  7706  000254  0E05               	movlw	5
  7707  000256  6EDF               	movwf	indf2,c
  7708                           
  7709                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7710  000258  0100               	movlb	0	; () banked
  7711  00025A  EE20 F00D          	lfsr	2,13
  7712  00025E  0100               	movlb	0	; () banked
  7713  000260  51CE               	movf	_ic_ptr& (0+255),w,b
  7714  000262  26D9               	addwf	fsr2l,f,c
  7715  000264  0100               	movlb	0	; () banked
  7716  000266  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7717  000268  22DA               	addwfc	fsr2h,f,c
  7718  00026A  0E06               	movlw	6
  7719  00026C  D045               	goto	L8
  7720  00026E                     i2l3352:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;my_i2c.c: 177: {
  7724                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7725  00026E  0100               	movlb	0	; () banked
  7726  000270  EE20 F01A          	lfsr	2,26
  7727  000274  0100               	movlb	0	; () banked
  7728  000276  51CE               	movf	_ic_ptr& (0+255),w,b
  7729  000278  26D9               	addwf	fsr2l,f,c
  7730  00027A  0100               	movlb	0	; () banked
  7731  00027C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7732  00027E  22DA               	addwfc	fsr2h,f,c
  7733  000280  50DF               	movf	indf2,w,c
  7734  000282  0100               	movlb	0	; () banked
  7735  000284  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7736  000286  0100               	movlb	0	; () banked
  7737  000288  EE20 F019          	lfsr	2,25
  7738  00028C  0100               	movlb	0	; () banked
  7739  00028E  51CE               	movf	_ic_ptr& (0+255),w,b
  7740  000290  26D9               	addwf	fsr2l,f,c
  7741  000292  0100               	movlb	0	; () banked
  7742  000294  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7743  000296  22DA               	addwfc	fsr2h,f,c
  7744  000298  50DF               	movf	indf2,w,c
  7745  00029A  0100               	movlb	0	; () banked
  7746  00029C  5D85               	subwf	??_i2c_int_handler& (0+255),w,b
  7747  00029E  B0D8               	btfsc	status,0,c
  7748  0002A0  D0D5               	goto	L10
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7752  0002A2  0100               	movlb	0	; () banked
  7753  0002A4  EE20 F01A          	lfsr	2,26
  7754  0002A8  0100               	movlb	0	; () banked
  7755  0002AA  51CE               	movf	_ic_ptr& (0+255),w,b
  7756  0002AC  26D9               	addwf	fsr2l,f,c
  7757  0002AE  0100               	movlb	0	; () banked
  7758  0002B0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7759  0002B2  22DA               	addwfc	fsr2h,f,c
  7760  0002B4  50DF               	movf	indf2,w,c
  7761  0002B6  0100               	movlb	0	; () banked
  7762  0002B8  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7763  0002BA  0100               	movlb	0	; () banked
  7764  0002BC  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7765  0002BE  0D01               	mullw	1
  7766  0002C0  0E0F               	movlw	15
  7767  0002C2  26F3               	addwf	prodl,f,c
  7768  0002C4  0E00               	movlw	0
  7769  0002C6  22F4               	addwfc	prodh,f,c
  7770  0002C8  50F3               	movf	prodl,w,c
  7771  0002CA  0100               	movlb	0	; () banked
  7772  0002CC  25CE               	addwf	_ic_ptr& (0+255),w,b
  7773  0002CE  6ED9               	movwf	fsr2l,c
  7774  0002D0  50F4               	movf	prodh,w,c
  7775  0002D2  0100               	movlb	0	; () banked
  7776  0002D4  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7777  0002D6  6EDA               	movwf	fsr2h,c
  7778  0002D8  50DF               	movf	indf2,w,c
  7779  0002DA  6EC9               	movwf	4041,c	;volatile
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7783  0002DC  0100               	movlb	0	; () banked
  7784  0002DE  EE20 F01A          	lfsr	2,26
  7785  0002E2  0100               	movlb	0	; () banked
  7786  0002E4  51CE               	movf	_ic_ptr& (0+255),w,b
  7787  0002E6  26D9               	addwf	fsr2l,f,c
  7788  0002E8  0100               	movlb	0	; () banked
  7789  0002EA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7790  0002EC  22DA               	addwfc	fsr2h,f,c
  7791  0002EE  2ADF               	incf	indf2,f,c
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;my_i2c.c: 181: data_written = 1;
  7795  0002F0  0E01               	movlw	1
  7796  0002F2  0100               	movlb	0	; () banked
  7797  0002F4  6F89               	movwf	i2c_int_handler@data_written& (0+255),b
  7798                           
  7799                           ;my_i2c.c: 182: } else {
  7800  0002F6  D0CB               	goto	i2l333
  7801  0002F8                     L8:
  7802  0002F8  6EDF               	movwf	indf2,c
  7803  0002FA  D0C9               	goto	i2l333
  7804  0002FC                     i2l353:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;my_i2c.c: 189: {
  7808                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7809  0002FC  A8C7               	btfss	4039,4,c	;volatile
  7810  0002FE  D05A               	goto	i2l3380
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7814  000300  0100               	movlb	0	; () banked
  7815  000302  EE20 F00B          	lfsr	2,11
  7816  000306  0100               	movlb	0	; () banked
  7817  000308  51CE               	movf	_ic_ptr& (0+255),w,b
  7818  00030A  26D9               	addwf	fsr2l,f,c
  7819  00030C  0100               	movlb	0	; () banked
  7820  00030E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7821  000310  22DA               	addwfc	fsr2h,f,c
  7822  000312  2ADF               	incf	indf2,f,c
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;my_i2c.c: 194: if (data_read) {
  7826  000314  0100               	movlb	0	; () banked
  7827  000316  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7828  000318  B4D8               	btfsc	status,2,c
  7829  00031A  D048               	goto	i2l3376
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7833  00031C  AAC7               	btfss	4039,5,c	;volatile
  7834  00031E  D025               	goto	i2l3374
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7838  000320  0100               	movlb	0	; () banked
  7839  000322  EE20 F00A          	lfsr	2,10
  7840  000326  0100               	movlb	0	; () banked
  7841  000328  51CE               	movf	_ic_ptr& (0+255),w,b
  7842  00032A  26D9               	addwf	fsr2l,f,c
  7843  00032C  0100               	movlb	0	; () banked
  7844  00032E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7845  000330  22DA               	addwfc	fsr2h,f,c
  7846  000332  50DF               	movf	indf2,w,c
  7847  000334  0100               	movlb	0	; () banked
  7848  000336  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7849  000338  0100               	movlb	0	; () banked
  7850  00033A  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7851  00033C  0D01               	mullw	1
  7852  00033E  50F3               	movf	prodl,w,c
  7853  000340  0100               	movlb	0	; () banked
  7854  000342  25CE               	addwf	_ic_ptr& (0+255),w,b
  7855  000344  6ED9               	movwf	fsr2l,c
  7856  000346  50F4               	movf	prodh,w,c
  7857  000348  0100               	movlb	0	; () banked
  7858  00034A  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7859  00034C  6EDA               	movwf	fsr2h,c
  7860  00034E  0100               	movlb	0	; () banked
  7861  000350  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7865  000354  0100               	movlb	0	; () banked
  7866  000356  EE20 F00A          	lfsr	2,10
  7867  00035A  0100               	movlb	0	; () banked
  7868  00035C  51CE               	movf	_ic_ptr& (0+255),w,b
  7869  00035E  26D9               	addwf	fsr2l,f,c
  7870  000360  0100               	movlb	0	; () banked
  7871  000362  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7872  000364  22DA               	addwfc	fsr2h,f,c
  7873  000366  2ADF               	incf	indf2,f,c
  7874  000368  D021               	goto	i2l3376
  7875  00036A                     i2l3374:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7879  00036A  0100               	movlb	0	; () banked
  7880  00036C  EE20 F00E          	lfsr	2,14
  7881  000370  0100               	movlb	0	; () banked
  7882  000372  51CE               	movf	_ic_ptr& (0+255),w,b
  7883  000374  26D9               	addwf	fsr2l,f,c
  7884  000376  0100               	movlb	0	; () banked
  7885  000378  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7886  00037A  22DA               	addwfc	fsr2h,f,c
  7887  00037C  2ADF               	incf	indf2,f,c
  7888                           
  7889                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7890  00037E  0100               	movlb	0	; () banked
  7891  000380  EE20 F00D          	lfsr	2,13
  7892  000384  0100               	movlb	0	; () banked
  7893  000386  51CE               	movf	_ic_ptr& (0+255),w,b
  7894  000388  26D9               	addwf	fsr2l,f,c
  7895  00038A  0100               	movlb	0	; () banked
  7896  00038C  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7897  00038E  22DA               	addwfc	fsr2h,f,c
  7898  000390  0E06               	movlw	6
  7899  000392  6EDF               	movwf	indf2,c
  7900                           
  7901                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7902  000394  0100               	movlb	0	; () banked
  7903  000396  EE20 F00C          	lfsr	2,12
  7904  00039A  0100               	movlb	0	; () banked
  7905  00039C  51CE               	movf	_ic_ptr& (0+255),w,b
  7906  00039E  26D9               	addwf	fsr2l,f,c
  7907  0003A0  0100               	movlb	0	; () banked
  7908  0003A2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7909  0003A4  22DA               	addwfc	fsr2h,f,c
  7910  0003A6  0E05               	movlw	5
  7911  0003A8  6EDF               	movwf	indf2,c
  7912  0003AA  D050               	goto	L10
  7913  0003AC                     i2l3376:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 205: msg_ready = 1;
  7917  0003AC  0E01               	movlw	1
  7918  0003AE  0100               	movlb	0	; () banked
  7919  0003B0  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7920                           
  7921                           ; BSR set to: 0
  7922  0003B2  D04C               	goto	L10
  7923  0003B4                     i2l3380:
  7924                           
  7925                           ; BSR set to: 0
  7926  0003B4  0100               	movlb	0	; () banked
  7927  0003B6  518E               	movf	i2c_int_handler@data_read& (0+255),w,b
  7928  0003B8  B4D8               	btfsc	status,2,c
  7929  0003BA  D069               	goto	i2l333
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7933  0003BC  0100               	movlb	0	; () banked
  7934  0003BE  EE20 F00B          	lfsr	2,11
  7935  0003C2  0100               	movlb	0	; () banked
  7936  0003C4  51CE               	movf	_ic_ptr& (0+255),w,b
  7937  0003C6  26D9               	addwf	fsr2l,f,c
  7938  0003C8  0100               	movlb	0	; () banked
  7939  0003CA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7940  0003CC  22DA               	addwfc	fsr2h,f,c
  7941  0003CE  2ADF               	incf	indf2,f,c
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7945  0003D0  AAC7               	btfss	4039,5,c	;volatile
  7946  0003D2  D025               	goto	i2l361
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7950  0003D4  0100               	movlb	0	; () banked
  7951  0003D6  EE20 F00A          	lfsr	2,10
  7952  0003DA  0100               	movlb	0	; () banked
  7953  0003DC  51CE               	movf	_ic_ptr& (0+255),w,b
  7954  0003DE  26D9               	addwf	fsr2l,f,c
  7955  0003E0  0100               	movlb	0	; () banked
  7956  0003E2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7957  0003E4  22DA               	addwfc	fsr2h,f,c
  7958  0003E6  50DF               	movf	indf2,w,c
  7959  0003E8  0100               	movlb	0	; () banked
  7960  0003EA  6F85               	movwf	??_i2c_int_handler& (0+255),b
  7961  0003EC  0100               	movlb	0	; () banked
  7962  0003EE  5185               	movf	??_i2c_int_handler& (0+255),w,b
  7963  0003F0  0D01               	mullw	1
  7964  0003F2  50F3               	movf	prodl,w,c
  7965  0003F4  0100               	movlb	0	; () banked
  7966  0003F6  25CE               	addwf	_ic_ptr& (0+255),w,b
  7967  0003F8  6ED9               	movwf	fsr2l,c
  7968  0003FA  50F4               	movf	prodh,w,c
  7969  0003FC  0100               	movlb	0	; () banked
  7970  0003FE  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7971  000400  6EDA               	movwf	fsr2h,c
  7972  000402  0100               	movlb	0	; () banked
  7973  000404  C08B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7977  000408  0100               	movlb	0	; () banked
  7978  00040A  EE20 F00A          	lfsr	2,10
  7979  00040E  0100               	movlb	0	; () banked
  7980  000410  51CE               	movf	_ic_ptr& (0+255),w,b
  7981  000412  26D9               	addwf	fsr2l,f,c
  7982  000414  0100               	movlb	0	; () banked
  7983  000416  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  000418  22DA               	addwfc	fsr2h,f,c
  7985  00041A  2ADF               	incf	indf2,f,c
  7986                           
  7987                           ;my_i2c.c: 213: } else {
  7988  00041C  D038               	goto	i2l333
  7989  00041E                     i2l361:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7993  00041E  A4C7               	btfss	4039,2,c	;volatile
  7994  000420  D6C7               	goto	i2l3332
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7998  000422  0100               	movlb	0	; () banked
  7999  000424  EE20 F00C          	lfsr	2,12
  8000  000428  0100               	movlb	0	; () banked
  8001  00042A  51CE               	movf	_ic_ptr& (0+255),w,b
  8002  00042C  26D9               	addwf	fsr2l,f,c
  8003  00042E  0100               	movlb	0	; () banked
  8004  000430  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8005  000432  22DA               	addwfc	fsr2h,f,c
  8006  000434  0E08               	movlw	8
  8007  000436  6EDF               	movwf	indf2,c
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;my_i2c.c: 216: msg_ready = 1;
  8011  000438  0E01               	movlw	1
  8012  00043A  0100               	movlb	0	; () banked
  8013  00043C  6F8D               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8014  00043E                     L7:
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;my_i2c.c: 217: msg_to_send = 1;
  8018  00043E  0E01               	movlw	1
  8019  000440  0100               	movlb	0	; () banked
  8020  000442  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;my_i2c.c: 219: data_read = 0;
  8024  000444  0E00               	movlw	0
  8025  000446  0100               	movlb	0	; () banked
  8026  000448  6F8E               	movwf	i2c_int_handler@data_read& (0+255),b
  8027                           
  8028                           ;my_i2c.c: 220: } else {
  8029  00044A  D021               	goto	i2l333
  8030  00044C                     L10:
  8031                           
  8032                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8033  00044C  0100               	movlb	0	; () banked
  8034  00044E  EE20 F00C          	lfsr	2,12
  8035  000452  0100               	movlb	0	; () banked
  8036  000454  51CE               	movf	_ic_ptr& (0+255),w,b
  8037  000456  26D9               	addwf	fsr2l,f,c
  8038  000458  0100               	movlb	0	; () banked
  8039  00045A  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8040  00045C  22DA               	addwfc	fsr2h,f,c
  8041  00045E  0E05               	movlw	5
  8042  000460  D74B               	goto	L8
  8043  000462                     i2l3402:
  8044                           
  8045                           ; BSR set to: 0
  8046  000462  0100               	movlb	0	; () banked
  8047  000464  EE20 F00C          	lfsr	2,12
  8048  000468  0100               	movlb	0	; () banked
  8049  00046A  51CE               	movf	_ic_ptr& (0+255),w,b
  8050  00046C  26D9               	addwf	fsr2l,f,c
  8051  00046E  0100               	movlb	0	; () banked
  8052  000470  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8053  000472  22DA               	addwfc	fsr2h,f,c
  8054  000474  50DF               	movf	indf2,w,c
  8055                           
  8056                           ; Switch size 1, requested type "space"
  8057                           ; Number of cases is 4, Range of values is 5 to 8
  8058                           ; switch strategies available:
  8059                           ; Name         Instructions Cycles
  8060                           ; simple_byte           13     7 (average)
  8061                           ;	Chosen strategy is simple_byte
  8062  000476  0A05               	xorlw	5	; case 5
  8063  000478  B4D8               	btfsc	status,2,c
  8064  00047A  D66B               	goto	i2l335
  8065  00047C  0A03               	xorlw	3	; case 6
  8066  00047E  B4D8               	btfsc	status,2,c
  8067  000480  D681               	goto	i2l339
  8068  000482  0A01               	xorlw	1	; case 7
  8069  000484  B4D8               	btfsc	status,2,c
  8070  000486  D73A               	goto	i2l353
  8071  000488  0A0F               	xorlw	15	; case 8
  8072  00048A  B4D8               	btfsc	status,2,c
  8073  00048C  D6F0               	goto	i2l3352
  8074  00048E                     i2l333:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;my_i2c.c: 230: }
  8078                           ;my_i2c.c: 233: if (data_read || data_written) {
  8079  00048E  0100               	movlb	0	; () banked
  8080  000490  678E               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8081  000492  D004               	goto	i2l367
  8082                           
  8083                           ; BSR set to: 0
  8084  000494  0100               	movlb	0	; () banked
  8085  000496  5189               	movf	i2c_int_handler@data_written& (0+255),w,b
  8086  000498  B4D8               	btfsc	status,2,c
  8087  00049A  D002               	goto	i2l3408
  8088  00049C                     i2l367:
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8092  00049C  A8C6               	btfss	4038,4,c	;volatile
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8096  00049E  88C6               	bsf	4038,4,c	;volatile
  8097  0004A0                     i2l3408:
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;my_i2c.c: 237: }
  8101                           ;my_i2c.c: 238: }
  8102                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8103  0004A0  0100               	movlb	0	; () banked
  8104  0004A2  EE20 F00A          	lfsr	2,10
  8105  0004A6  0100               	movlb	0	; () banked
  8106  0004A8  51CE               	movf	_ic_ptr& (0+255),w,b
  8107  0004AA  26D9               	addwf	fsr2l,f,c
  8108  0004AC  0100               	movlb	0	; () banked
  8109  0004AE  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8110  0004B0  22DA               	addwfc	fsr2h,f,c
  8111  0004B2  0E08               	movlw	8
  8112  0004B4  64DF               	cpfsgt	indf2,c
  8113  0004B6  D023               	goto	i2l3414
  8114                           
  8115                           ; BSR set to: 0
  8116  0004B8  0100               	movlb	0	; () banked
  8117  0004BA  678D               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8118  0004BC  D020               	goto	i2l3414
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8122  0004BE  0100               	movlb	0	; () banked
  8123  0004C0  EE20 F00C          	lfsr	2,12
  8124  0004C4  0100               	movlb	0	; () banked
  8125  0004C6  51CE               	movf	_ic_ptr& (0+255),w,b
  8126  0004C8  26D9               	addwf	fsr2l,f,c
  8127  0004CA  0100               	movlb	0	; () banked
  8128  0004CC  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8129  0004CE  22DA               	addwfc	fsr2h,f,c
  8130  0004D0  0E05               	movlw	5
  8131  0004D2  6EDF               	movwf	indf2,c
  8132                           
  8133                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8134  0004D4  0100               	movlb	0	; () banked
  8135  0004D6  EE20 F00E          	lfsr	2,14
  8136  0004DA  0100               	movlb	0	; () banked
  8137  0004DC  51CE               	movf	_ic_ptr& (0+255),w,b
  8138  0004DE  26D9               	addwf	fsr2l,f,c
  8139  0004E0  0100               	movlb	0	; () banked
  8140  0004E2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8141  0004E4  22DA               	addwfc	fsr2h,f,c
  8142  0004E6  2ADF               	incf	indf2,f,c
  8143                           
  8144                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8145  0004E8  0100               	movlb	0	; () banked
  8146  0004EA  EE20 F00D          	lfsr	2,13
  8147  0004EE  0100               	movlb	0	; () banked
  8148  0004F0  51CE               	movf	_ic_ptr& (0+255),w,b
  8149  0004F2  26D9               	addwf	fsr2l,f,c
  8150  0004F4  0100               	movlb	0	; () banked
  8151  0004F6  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8152  0004F8  22DA               	addwfc	fsr2h,f,c
  8153  0004FA  0E07               	movlw	7
  8154  0004FC  6EDF               	movwf	indf2,c
  8155  0004FE                     i2l3414:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;my_i2c.c: 245: }
  8159                           ;my_i2c.c: 247: if (msg_ready) {
  8160  0004FE  0100               	movlb	0	; () banked
  8161  000500  518D               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8162  000502  B4D8               	btfsc	status,2,c
  8163  000504  D03E               	goto	i2l3422
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8167  000506  0100               	movlb	0	; () banked
  8168  000508  EE20 F00B          	lfsr	2,11
  8169  00050C  0100               	movlb	0	; () banked
  8170  00050E  51CE               	movf	_ic_ptr& (0+255),w,b
  8171  000510  26D9               	addwf	fsr2l,f,c
  8172  000512  0100               	movlb	0	; () banked
  8173  000514  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8174  000516  22DA               	addwfc	fsr2h,f,c
  8175  000518  0100               	movlb	0	; () banked
  8176  00051A  EE10 F00A          	lfsr	1,10
  8177  00051E  0100               	movlb	0	; () banked
  8178  000520  51CE               	movf	_ic_ptr& (0+255),w,b
  8179  000522  26E1               	addwf	fsr1l,f,c
  8180  000524  0100               	movlb	0	; () banked
  8181  000526  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8182  000528  22E2               	addwfc	fsr1h,f,c
  8183  00052A  50E7               	movf	indf1,w,c
  8184  00052C  0100               	movlb	0	; () banked
  8185  00052E  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8186  000530  0100               	movlb	0	; () banked
  8187  000532  5185               	movf	??_i2c_int_handler& (0+255),w,b
  8188  000534  0D01               	mullw	1
  8189  000536  50F3               	movf	prodl,w,c
  8190  000538  0100               	movlb	0	; () banked
  8191  00053A  25CE               	addwf	_ic_ptr& (0+255),w,b
  8192  00053C  6EE1               	movwf	fsr1l,c
  8193  00053E  50F4               	movf	prodh,w,c
  8194  000540  0100               	movlb	0	; () banked
  8195  000542  21CF               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8196  000544  6EE2               	movwf	fsr1h,c
  8197  000546  CFDF FFE7          	movff	indf2,indf1
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8201  00054A  0E28               	movlw	40
  8202  00054C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8203  00054E  0100               	movlb	0	; () banked
  8204  000550  C0CF  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8205  000554  0100               	movlb	0	; () banked
  8206  000556  C0CE  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8207  00055A  0100               	movlb	0	; () banked
  8208  00055C  EE20 F00A          	lfsr	2,10
  8209  000560  0100               	movlb	0	; () banked
  8210  000562  51CE               	movf	_ic_ptr& (0+255),w,b
  8211  000564  26D9               	addwf	fsr2l,f,c
  8212  000566  0100               	movlb	0	; () banked
  8213  000568  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8214  00056A  22DA               	addwfc	fsr2h,f,c
  8215  00056C  50DF               	movf	indf2,w,c
  8216  00056E  0100               	movlb	0	; () banked
  8217  000570  6F85               	movwf	??_i2c_int_handler& (0+255),b
  8218  000572  0100               	movlb	0	; () banked
  8219  000574  2985               	incf	??_i2c_int_handler& (0+255),w,b
  8220  000576  EC0D  F00F         	call	_ToMainHigh_sendmsg
  8221                           
  8222                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8223  00057A  0100               	movlb	0	; () banked
  8224  00057C  EE20 F00A          	lfsr	2,10
  8225  000580  D03E               	goto	L9
  8226  000582                     i2l3422:
  8227                           
  8228                           ; BSR set to: 0
  8229  000582  0100               	movlb	0	; () banked
  8230  000584  EE20 F00E          	lfsr	2,14
  8231  000588  0100               	movlb	0	; () banked
  8232  00058A  51CE               	movf	_ic_ptr& (0+255),w,b
  8233  00058C  26D9               	addwf	fsr2l,f,c
  8234  00058E  0100               	movlb	0	; () banked
  8235  000590  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8236  000592  22DA               	addwfc	fsr2h,f,c
  8237  000594  50DF               	movf	indf2,w,c
  8238  000596  B4D8               	btfsc	status,2,c
  8239  000598  D03A               	goto	i2l3430
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8243  00059A  0100               	movlb	0	; () banked
  8244  00059C  EE20 F00E          	lfsr	2,14
  8245  0005A0  0100               	movlb	0	; () banked
  8246  0005A2  51CE               	movf	_ic_ptr& (0+255),w,b
  8247  0005A4  26D9               	addwf	fsr2l,f,c
  8248  0005A6  0100               	movlb	0	; () banked
  8249  0005A8  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8250  0005AA  22DA               	addwfc	fsr2h,f,c
  8251  0005AC  50DF               	movf	indf2,w,c
  8252  0005AE  0100               	movlb	0	; () banked
  8253  0005B0  6F86               	movwf	i2c_int_handler@error_buf& (0+255),b
  8254                           
  8255                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8256  0005B2  0100               	movlb	0	; () banked
  8257  0005B4  EE20 F00D          	lfsr	2,13
  8258  0005B8  0100               	movlb	0	; () banked
  8259  0005BA  51CE               	movf	_ic_ptr& (0+255),w,b
  8260  0005BC  26D9               	addwf	fsr2l,f,c
  8261  0005BE  0100               	movlb	0	; () banked
  8262  0005C0  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8263  0005C2  22DA               	addwfc	fsr2h,f,c
  8264  0005C4  50DF               	movf	indf2,w,c
  8265  0005C6  0100               	movlb	0	; () banked
  8266  0005C8  6F87               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8267                           
  8268                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8269  0005CA  0100               	movlb	0	; () banked
  8270  0005CC  EE20 F00B          	lfsr	2,11
  8271  0005D0  0100               	movlb	0	; () banked
  8272  0005D2  51CE               	movf	_ic_ptr& (0+255),w,b
  8273  0005D4  26D9               	addwf	fsr2l,f,c
  8274  0005D6  0100               	movlb	0	; () banked
  8275  0005D8  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8276  0005DA  22DA               	addwfc	fsr2h,f,c
  8277  0005DC  50DF               	movf	indf2,w,c
  8278  0005DE  0100               	movlb	0	; () banked
  8279  0005E0  6F88               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8283  0005E2  0E29               	movlw	41
  8284  0005E4  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8285  0005E6  0100               	movlb	0	; () banked
  8286  0005E8  0E00               	movlw	high i2c_int_handler@error_buf
  8287  0005EA  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  8288  0005EC  0100               	movlb	0	; () banked
  8289  0005EE  0E86               	movlw	low i2c_int_handler@error_buf
  8290  0005F0  6E46               	movwf	ToMainHigh_sendmsg@data,c
  8291  0005F2  0E03               	movlw	3
  8292  0005F4  EC0D  F00F         	call	_ToMainHigh_sendmsg
  8293                           
  8294                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8295  0005F8  0100               	movlb	0	; () banked
  8296  0005FA  EE20 F00E          	lfsr	2,14
  8297  0005FE                     L9:
  8298  0005FE  0100               	movlb	0	; () banked
  8299  000600  51CE               	movf	_ic_ptr& (0+255),w,b
  8300  000602  26D9               	addwf	fsr2l,f,c
  8301  000604  0100               	movlb	0	; () banked
  8302  000606  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8303  000608  22DA               	addwfc	fsr2h,f,c
  8304  00060A  0E00               	movlw	0
  8305  00060C  6EDF               	movwf	indf2,c
  8306  00060E                     i2l3430:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;my_i2c.c: 257: }
  8310                           ;my_i2c.c: 258: if (msg_to_send) {
  8311  00060E  0100               	movlb	0	; () banked
  8312  000610  518C               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8313  000612  B4D8               	btfsc	status,2,c
  8314  000614  0012               	return	
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8318  000616  0E2A               	movlw	42
  8319  000618  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  8320  00061A  0100               	movlb	0	; () banked
  8321  00061C  C0CF  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8322  000620  0100               	movlb	0	; () banked
  8323  000622  C0CE  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8324  000626  0E00               	movlw	0
  8325  000628  EC0D  F00F         	call	_ToMainHigh_sendmsg
  8326                           
  8327                           ;my_i2c.c: 261: msg_to_send = 0;
  8328  00062C  0E00               	movlw	0
  8329  00062E  0100               	movlb	0	; () banked
  8330  000630  6F8C               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8331  000632  0012               	return	
  8332  000634                     __end_of_i2c_int_handler:
  8333                           	opt stack 0
  8334                           pclatu	equ	0xFFB
  8335                           pclath	equ	0xFFA
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           postinc0	equ	0xFEE
  8344                           fsr0h	equ	0xFEA
  8345                           fsr0l	equ	0xFE9
  8346                           wreg	equ	0xFE8
  8347                           indf1	equ	0xFE7
  8348                           fsr1h	equ	0xFE2
  8349                           fsr1l	equ	0xFE1
  8350                           bsr	equ	0xFE0
  8351                           indf2	equ	0xFDF
  8352                           postinc2	equ	0xFDE
  8353                           postdec2	equ	0xFDD
  8354                           fsr2h	equ	0xFDA
  8355                           fsr2l	equ	0xFD9
  8356                           status	equ	0xFD8
  8357                           
  8358 ;; *************** function _handle_start *****************
  8359 ;; Defined at:
  8360 ;;		line 71 in file "src/my_i2c.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  data_read       1    wreg     unsigned char 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  data_read       1   51[COMRAM] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;		None               void
  8367 ;; Registers used:
  8368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8374 ;;      Params:         0       0       0       0       0
  8375 ;;      Locals:         1       0       0       0       0
  8376 ;;      Temps:          0       0       0       0       0
  8377 ;;      Totals:         1       0       0       0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_i2c_int_handler
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text49
  8388  00111E                     __ptext49:
  8389                           	opt stack 0
  8390  00111E                     _handle_start:
  8391                           	opt stack 17
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;incstack = 0
  8395                           ;handle_start@data_read stored from wreg
  8396  00111E  6E34               	movwf	handle_start@data_read,c
  8397                           
  8398                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8399  001120  0100               	movlb	0	; () banked
  8400  001122  EE20 F00B          	lfsr	2,11
  8401  001126  0100               	movlb	0	; () banked
  8402  001128  51CE               	movf	_ic_ptr& (0+255),w,b
  8403  00112A  26D9               	addwf	fsr2l,f,c
  8404  00112C  0100               	movlb	0	; () banked
  8405  00112E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8406  001130  22DA               	addwfc	fsr2h,f,c
  8407  001132  0E01               	movlw	1
  8408  001134  6EDF               	movwf	indf2,c
  8409                           
  8410                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8411  001136  0100               	movlb	0	; () banked
  8412  001138  EE20 F00A          	lfsr	2,10
  8413  00113C  0100               	movlb	0	; () banked
  8414  00113E  51CE               	movf	_ic_ptr& (0+255),w,b
  8415  001140  26D9               	addwf	fsr2l,f,c
  8416  001142  0100               	movlb	0	; () banked
  8417  001144  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8418  001146  22DA               	addwfc	fsr2h,f,c
  8419  001148  0E00               	movlw	0
  8420  00114A  6EDF               	movwf	indf2,c
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;my_i2c.c: 75: if (data_read) {
  8424  00114C  5034               	movf	handle_start@data_read,w,c
  8425  00114E  B4D8               	btfsc	status,2,c
  8426  001150  D03D               	goto	i2l2510
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8430  001152  AAC7               	btfss	4039,5,c	;volatile
  8431  001154  D021               	goto	i2l323
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8435  001156  0100               	movlb	0	; () banked
  8436  001158  EE20 F00C          	lfsr	2,12
  8437  00115C  0100               	movlb	0	; () banked
  8438  00115E  51CE               	movf	_ic_ptr& (0+255),w,b
  8439  001160  26D9               	addwf	fsr2l,f,c
  8440  001162  0100               	movlb	0	; () banked
  8441  001164  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8442  001166  22DA               	addwfc	fsr2h,f,c
  8443  001168  0E05               	movlw	5
  8444  00116A  6EDF               	movwf	indf2,c
  8445                           
  8446                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8447  00116C  0100               	movlb	0	; () banked
  8448  00116E  EE20 F00E          	lfsr	2,14
  8449  001172  0100               	movlb	0	; () banked
  8450  001174  51CE               	movf	_ic_ptr& (0+255),w,b
  8451  001176  26D9               	addwf	fsr2l,f,c
  8452  001178  0100               	movlb	0	; () banked
  8453  00117A  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8454  00117C  22DA               	addwfc	fsr2h,f,c
  8455  00117E  2ADF               	incf	indf2,f,c
  8456                           
  8457                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8458  001180  0100               	movlb	0	; () banked
  8459  001182  EE20 F00D          	lfsr	2,13
  8460  001186  0100               	movlb	0	; () banked
  8461  001188  51CE               	movf	_ic_ptr& (0+255),w,b
  8462  00118A  26D9               	addwf	fsr2l,f,c
  8463  00118C  0100               	movlb	0	; () banked
  8464  00118E  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8465  001190  22DA               	addwfc	fsr2h,f,c
  8466  001192  0E05               	movlw	5
  8467  001194  6EDF               	movwf	indf2,c
  8468                           
  8469                           ;my_i2c.c: 82: } else {
  8470  001196  0012               	return	
  8471  001198                     i2l323:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8475  001198  A4C7               	btfss	4039,2,c	;volatile
  8476  00119A  D00C               	goto	i2l2508
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8480  00119C  0100               	movlb	0	; () banked
  8481  00119E  EE20 F00C          	lfsr	2,12
  8482  0011A2  0100               	movlb	0	; () banked
  8483  0011A4  51CE               	movf	_ic_ptr& (0+255),w,b
  8484  0011A6  26D9               	addwf	fsr2l,f,c
  8485  0011A8  0100               	movlb	0	; () banked
  8486  0011AA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8487  0011AC  22DA               	addwfc	fsr2h,f,c
  8488  0011AE  0E08               	movlw	8
  8489  0011B0  6EDF               	movwf	indf2,c
  8490                           
  8491                           ;my_i2c.c: 85: } else {
  8492  0011B2  0012               	return	
  8493  0011B4                     i2l2508:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8497  0011B4  0100               	movlb	0	; () banked
  8498  0011B6  EE20 F00C          	lfsr	2,12
  8499  0011BA  0100               	movlb	0	; () banked
  8500  0011BC  51CE               	movf	_ic_ptr& (0+255),w,b
  8501  0011BE  26D9               	addwf	fsr2l,f,c
  8502  0011C0  0100               	movlb	0	; () banked
  8503  0011C2  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8504  0011C4  22DA               	addwfc	fsr2h,f,c
  8505  0011C6  0E07               	movlw	7
  8506  0011C8  6EDF               	movwf	indf2,c
  8507  0011CA  0012               	return	
  8508  0011CC                     i2l2510:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8512  0011CC  0100               	movlb	0	; () banked
  8513  0011CE  EE20 F00C          	lfsr	2,12
  8514  0011D2  0100               	movlb	0	; () banked
  8515  0011D4  51CE               	movf	_ic_ptr& (0+255),w,b
  8516  0011D6  26D9               	addwf	fsr2l,f,c
  8517  0011D8  0100               	movlb	0	; () banked
  8518  0011DA  51CF               	movf	(_ic_ptr+1)& (0+255),w,b
  8519  0011DC  22DA               	addwfc	fsr2h,f,c
  8520  0011DE  0E06               	movlw	6
  8521  0011E0  6EDF               	movwf	indf2,c
  8522  0011E2  0012               	return	
  8523  0011E4                     __end_of_handle_start:
  8524                           	opt stack 0
  8525                           pclatu	equ	0xFFB
  8526                           pclath	equ	0xFFA
  8527                           tblptru	equ	0xFF8
  8528                           tblptrh	equ	0xFF7
  8529                           tblptrl	equ	0xFF6
  8530                           tablat	equ	0xFF5
  8531                           prodh	equ	0xFF4
  8532                           prodl	equ	0xFF3
  8533                           intcon	equ	0xFF2
  8534                           postinc0	equ	0xFEE
  8535                           fsr0h	equ	0xFEA
  8536                           fsr0l	equ	0xFE9
  8537                           wreg	equ	0xFE8
  8538                           indf1	equ	0xFE7
  8539                           fsr1h	equ	0xFE2
  8540                           fsr1l	equ	0xFE1
  8541                           bsr	equ	0xFE0
  8542                           indf2	equ	0xFDF
  8543                           postinc2	equ	0xFDE
  8544                           postdec2	equ	0xFDD
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8
  8548                           
  8549 ;; *************** function _ToMainHigh_sendmsg *****************
  8550 ;; Defined at:
  8551 ;;		line 126 in file "src/messages.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  length          1    wreg     unsigned char 
  8554 ;;  msgtype         1   68[COMRAM] unsigned char 
  8555 ;;  data            2   69[COMRAM] PTR void 
  8556 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  length          1   71[COMRAM] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      char 
  8561 ;; Registers used:
  8562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8568 ;;      Params:         3       0       0       0       0
  8569 ;;      Locals:         1       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0
  8571 ;;      Totals:         4       0       0       0       0
  8572 ;;Total ram usage:        4 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    2
  8575 ;; This function calls:
  8576 ;;		i2_send_msg
  8577 ;; This function is called by:
  8578 ;;		_InterruptHandlerHigh
  8579 ;;		_i2c_int_handler
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text50
  8584  001E1A                     __ptext50:
  8585                           	opt stack 0
  8586  001E1A                     _ToMainHigh_sendmsg:
  8587                           	opt stack 15
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;incstack = 0
  8591                           ;ToMainHigh_sendmsg@length stored from wreg
  8592  001E1A  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8593                           
  8594                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8595                           ;	Return value of _ToMainHigh_sendmsg is never used
  8596  001E1C  0101               	movlb	1	; () banked
  8597  001E1E  0E01               	movlw	high _ToMainHigh_MQ
  8598  001E20  6E3F               	movwf	i2send_msg@qptr+1,c
  8599  001E22  0101               	movlb	1	; () banked
  8600  001E24  0E36               	movlw	low _ToMainHigh_MQ
  8601  001E26  6E3E               	movwf	i2send_msg@qptr,c
  8602  001E28  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8603  001E2C  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8604  001E30  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8605  001E34  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8606  001E38  ECF2  F008         	call	i2_send_msg	;wreg free
  8607  001E3C  0012               	return	
  8608  001E3E                     __end_of_ToMainHigh_sendmsg:
  8609                           	opt stack 0
  8610                           pclatu	equ	0xFFB
  8611                           pclath	equ	0xFFA
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodh	equ	0xFF4
  8617                           prodl	equ	0xFF3
  8618                           intcon	equ	0xFF2
  8619                           postinc0	equ	0xFEE
  8620                           fsr0h	equ	0xFEA
  8621                           fsr0l	equ	0xFE9
  8622                           wreg	equ	0xFE8
  8623                           indf1	equ	0xFE7
  8624                           fsr1h	equ	0xFE2
  8625                           fsr1l	equ	0xFE1
  8626                           bsr	equ	0xFE0
  8627                           indf2	equ	0xFDF
  8628                           postinc2	equ	0xFDE
  8629                           postdec2	equ	0xFDD
  8630                           fsr2h	equ	0xFDA
  8631                           fsr2l	equ	0xFD9
  8632                           status	equ	0xFD8
  8633                           
  8634 ;; *************** function i2_send_msg *****************
  8635 ;; Defined at:
  8636 ;;		line 24 in file "src/messages.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8639 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8640 ;;  length          1   63[COMRAM] unsigned char 
  8641 ;;  msgtype         1   64[COMRAM] unsigned char 
  8642 ;;  data            2   65[COMRAM] PTR void 
  8643 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8644 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8645 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8648 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8649 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8650 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8651 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      char 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8661 ;;      Params:         6       0       0       0       0
  8662 ;;      Locals:         0       5       0       0       0
  8663 ;;      Temps:          1       0       0       0       0
  8664 ;;      Totals:         7       5       0       0       0
  8665 ;;Total ram usage:       12 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    1
  8668 ;; This function calls:
  8669 ;;		i2_memcpy
  8670 ;; This function is called by:
  8671 ;;		_ToMainHigh_sendmsg
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text51
  8676  0011E4                     __ptext51:
  8677                           	opt stack 0
  8678  0011E4                     i2_send_msg:
  8679                           	opt stack 15
  8680                           
  8681                           ;messages.c: 25: unsigned char slot;
  8682                           ;messages.c: 27: msg *qmsg;
  8683                           ;messages.c: 28: size_t tlength = length;
  8684                           
  8685                           ;incstack = 0
  8686  0011E4  0100               	movlb	0	; () banked
  8687  0011E6  C040  F080         	movff	i2send_msg@length,i2send_msg@tlength
  8688  0011EA  0100               	movlb	0	; () banked
  8689  0011EC  6B81               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8693  0011EE  EE20 F034          	lfsr	2,52
  8694  0011F2  503E               	movf	i2send_msg@qptr,w,c
  8695  0011F4  26D9               	addwf	fsr2l,f,c
  8696  0011F6  503F               	movf	i2send_msg@qptr+1,w,c
  8697  0011F8  22DA               	addwfc	fsr2h,f,c
  8698  0011FA  50DF               	movf	indf2,w,c
  8699  0011FC  0100               	movlb	0	; () banked
  8700  0011FE  6F82               	movwf	i2send_msg@slot& (0+255),b
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8704  001200  0100               	movlb	0	; () banked
  8705  001202  5182               	movf	i2send_msg@slot& (0+255),w,b
  8706  001204  0D0D               	mullw	13
  8707  001206  50F3               	movf	prodl,w,c
  8708  001208  243E               	addwf	i2send_msg@qptr,w,c
  8709  00120A  0100               	movlb	0	; () banked
  8710  00120C  6F83               	movwf	i2send_msg@qmsg& (0+255),b
  8711  00120E  50F4               	movf	prodh,w,c
  8712  001210  203F               	addwfc	i2send_msg@qptr+1,w,c
  8713  001212  0100               	movlb	0	; () banked
  8714  001214  6F84               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;messages.c: 41: if (qmsg->full != 0) {
  8718  001216  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8719  00121A  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8720  00121E  50DF               	movf	indf2,w,c
  8721  001220  B4D8               	btfsc	status,2,c
  8722  001222  D002               	goto	i2l3278
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;messages.c: 42: return (-1);
  8726  001224  0EFF               	movlw	255
  8727  001226  0012               	return	
  8728  001228                     i2l3278:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;messages.c: 43: }
  8732                           ;messages.c: 46: qmsg->length = length;
  8733  001228  0100               	movlb	0	; () banked
  8734  00122A  EE20 F001          	lfsr	2,1
  8735  00122E  0100               	movlb	0	; () banked
  8736  001230  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8737  001232  26D9               	addwf	fsr2l,f,c
  8738  001234  0100               	movlb	0	; () banked
  8739  001236  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8740  001238  22DA               	addwfc	fsr2h,f,c
  8741  00123A  C040  FFDF         	movff	i2send_msg@length,indf2
  8742                           
  8743                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8744  00123E  0100               	movlb	0	; () banked
  8745  001240  EE20 F002          	lfsr	2,2
  8746  001244  0100               	movlb	0	; () banked
  8747  001246  5183               	movf	i2send_msg@qmsg& (0+255),w,b
  8748  001248  26D9               	addwf	fsr2l,f,c
  8749  00124A  0100               	movlb	0	; () banked
  8750  00124C  5184               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8751  00124E  22DA               	addwfc	fsr2h,f,c
  8752  001250  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8756  001254  0E03               	movlw	3
  8757  001256  0100               	movlb	0	; () banked
  8758  001258  2583               	addwf	i2send_msg@qmsg& (0+255),w,b
  8759  00125A  6E34               	movwf	i2memcpy@d1,c
  8760  00125C  0E00               	movlw	0
  8761  00125E  0100               	movlb	0	; () banked
  8762  001260  2184               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8763  001262  6E35               	movwf	i2memcpy@d1+1,c
  8764  001264  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8765  001268  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8766  00126C  C080  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8767  001270  C081  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8768  001274  EC86  F00D         	call	i2_memcpy	;wreg free
  8769                           
  8770                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8771  001278  EE20 F034          	lfsr	2,52
  8772  00127C  503E               	movf	i2send_msg@qptr,w,c
  8773  00127E  26D9               	addwf	fsr2l,f,c
  8774  001280  503F               	movf	i2send_msg@qptr+1,w,c
  8775  001282  22DA               	addwfc	fsr2h,f,c
  8776  001284  EE10 F034          	lfsr	1,52
  8777  001288  503E               	movf	i2send_msg@qptr,w,c
  8778  00128A  26E1               	addwf	fsr1l,f,c
  8779  00128C  503F               	movf	i2send_msg@qptr+1,w,c
  8780  00128E  22E2               	addwfc	fsr1h,f,c
  8781  001290  50E7               	movf	indf1,w,c
  8782  001292  6E44               	movwf	??i2_send_msg& (0+255),c
  8783  001294  2844               	incf	??i2_send_msg,w,c
  8784  001296  0B03               	andlw	3
  8785  001298  6EDF               	movwf	indf2,c
  8786                           
  8787                           ;messages.c: 59: qmsg->full = 1;
  8788  00129A  C083  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8789  00129E  C084  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8790  0012A2  0E01               	movlw	1
  8791  0012A4  6EDF               	movwf	indf2,c
  8792                           
  8793                           ;messages.c: 60: return (1);
  8794  0012A6  0E01               	movlw	1
  8795  0012A8  0012               	return	
  8796  0012AA                     __end_ofi2_send_msg:
  8797                           	opt stack 0
  8798                           pclatu	equ	0xFFB
  8799                           pclath	equ	0xFFA
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           postinc0	equ	0xFEE
  8808                           fsr0h	equ	0xFEA
  8809                           fsr0l	equ	0xFE9
  8810                           wreg	equ	0xFE8
  8811                           indf1	equ	0xFE7
  8812                           fsr1h	equ	0xFE2
  8813                           fsr1l	equ	0xFE1
  8814                           bsr	equ	0xFE0
  8815                           indf2	equ	0xFDF
  8816                           postinc2	equ	0xFDE
  8817                           postdec2	equ	0xFDD
  8818                           fsr2h	equ	0xFDA
  8819                           fsr2l	equ	0xFD9
  8820                           status	equ	0xFD8
  8821                           
  8822 ;; *************** function i2_memcpy *****************
  8823 ;; Defined at:
  8824 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  d1              2   51[COMRAM] PTR void 
  8827 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8828 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8829 ;;		 -> main@msgbuffer(11), NULL(0), 
  8830 ;;  s1              2   53[COMRAM] PTR const void 
  8831 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8832 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8833 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8834 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8835 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8836 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8837 ;;  n               2   55[COMRAM] unsigned int 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8840 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8841 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8842 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8843 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8844 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8845 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8846 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8847 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8848 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8849 ;;		 -> main@msgbuffer(11), NULL(0), 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  2   51[COMRAM] PTR void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8859 ;;      Params:         6       0       0       0       0
  8860 ;;      Locals:         4       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0
  8862 ;;      Totals:        10       0       0       0       0
  8863 ;;Total ram usage:       10 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		i2_send_msg
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text52
  8873  001B0C                     __ptext52:
  8874                           	opt stack 0
  8875  001B0C                     i2_memcpy:
  8876                           	opt stack 15
  8877                           
  8878                           ;incstack = 0
  8879  001B0C  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8880  001B10  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8881  001B14  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8882  001B18  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8883  001B1C  D00E               	goto	i2l3264
  8884  001B1E                     i2l3258:
  8885  001B1E  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8886  001B22  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8887  001B26  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8888  001B2A  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8889  001B2E  CFDF FFE7          	movff	indf2,indf1
  8890  001B32  4A3C               	infsnz	i2memcpy@s,f,c
  8891  001B34  2A3D               	incf	i2memcpy@s+1,f,c
  8892  001B36  4A3A               	infsnz	i2memcpy@d,f,c
  8893  001B38  2A3B               	incf	i2memcpy@d+1,f,c
  8894  001B3A                     i2l3264:
  8895  001B3A  0638               	decf	i2memcpy@n,f,c
  8896  001B3C  A0D8               	btfss	status,0,c
  8897  001B3E  0639               	decf	i2memcpy@n+1,f,c
  8898  001B40  2838               	incf	i2memcpy@n& (0+255),w,c
  8899  001B42  B4D8               	btfsc	status,2,c
  8900  001B44  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8901  001B46  B4D8               	btfsc	status,2,c
  8902                           
  8903                           ;	Return value of i2_memcpy is never used
  8904  001B48  0012               	return	
  8905  001B4A  D7E9               	goto	i2l3258
  8906  001B4C                     __end_ofi2_memcpy:
  8907                           	opt stack 0
  8908                           pclatu	equ	0xFFB
  8909                           pclath	equ	0xFFA
  8910                           tblptru	equ	0xFF8
  8911                           tblptrh	equ	0xFF7
  8912                           tblptrl	equ	0xFF6
  8913                           tablat	equ	0xFF5
  8914                           prodh	equ	0xFF4
  8915                           prodl	equ	0xFF3
  8916                           intcon	equ	0xFF2
  8917                           postinc0	equ	0xFEE
  8918                           fsr0h	equ	0xFEA
  8919                           fsr0l	equ	0xFE9
  8920                           wreg	equ	0xFE8
  8921                           indf1	equ	0xFE7
  8922                           fsr1h	equ	0xFE2
  8923                           fsr1l	equ	0xFE1
  8924                           bsr	equ	0xFE0
  8925                           indf2	equ	0xFDF
  8926                           postinc2	equ	0xFDE
  8927                           postdec2	equ	0xFDD
  8928                           fsr2h	equ	0xFDA
  8929                           fsr2l	equ	0xFD9
  8930                           status	equ	0xFD8
  8931                           
  8932 ;; *************** function _SleepIfOkay *****************
  8933 ;; Defined at:
  8934 ;;		line 226 in file "src/messages.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;		None               void
  8941 ;; Registers used:
  8942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8948 ;;      Params:         0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0
  8951 ;;      Totals:         0       0       0       0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    2
  8955 ;; This function calls:
  8956 ;;		_enter_sleep_mode
  8957 ;;		i2_check_msg
  8958 ;;		i2_in_high_int
  8959 ;;		i2_in_low_int
  8960 ;; This function is called by:
  8961 ;;		_InterruptHandlerHigh
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text53
  8966  001A3E                     __ptext53:
  8967                           	opt stack 0
  8968  001A3E                     _SleepIfOkay:
  8969                           	opt stack 16
  8970                           
  8971                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8972                           
  8973                           ;incstack = 0
  8974  001A3E  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8975  001A40  D001               	goto	i2l2720
  8976  001A42  0012               	return	
  8977  001A44                     i2l2720:
  8978                           
  8979                           ;messages.c: 230: }
  8980                           ;messages.c: 233: if (in_low_int()) {
  8981  001A44  ECAA  F00E         	call	i2_in_low_int	;wreg free
  8982  001A48  5037               	movf	?i2_in_low_int+1,w,c
  8983  001A4A  1036               	iorwf	?i2_in_low_int,w,c
  8984  001A4C  A4D8               	btfss	status,2,c
  8985  001A4E  0012               	return	
  8986                           
  8987                           ;messages.c: 235: }
  8988                           ;messages.c: 238: if (!in_high_int()) {
  8989                           
  8990                           ;messages.c: 234: return;
  8991  001A50  EC73  F00F         	call	i2_in_high_int	;wreg free
  8992  001A54  5035               	movf	?i2_in_high_int+1,w,c
  8993  001A56  1034               	iorwf	?i2_in_high_int,w,c
  8994  001A58  B4D8               	btfsc	status,2,c
  8995  001A5A  0012               	return	
  8996                           
  8997                           ;messages.c: 240: }
  8998                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8999                           
  9000                           ;messages.c: 239: return;
  9001  001A5C  0101               	movlb	1	; () banked
  9002  001A5E  0E01               	movlw	high _ToMainHigh_MQ
  9003  001A60  6E35               	movwf	i2check_msg@qptr+1,c
  9004  001A62  0101               	movlb	1	; () banked
  9005  001A64  0E36               	movlw	low _ToMainHigh_MQ
  9006  001A66  6E34               	movwf	i2check_msg@qptr,c
  9007  001A68  EC1F  F00F         	call	i2_check_msg	;wreg free
  9008  001A6C  0900               	iorlw	0
  9009  001A6E  A4D8               	btfss	status,2,c
  9010  001A70  0012               	return	
  9011                           
  9012                           ;messages.c: 247: }
  9013                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9014                           
  9015                           ;messages.c: 246: return;
  9016  001A72  0101               	movlb	1	; () banked
  9017  001A74  0E01               	movlw	high _ToMainLow_MQ
  9018  001A76  6E35               	movwf	i2check_msg@qptr+1,c
  9019  001A78  0101               	movlb	1	; () banked
  9020  001A7A  0E6C               	movlw	low _ToMainLow_MQ
  9021  001A7C  6E34               	movwf	i2check_msg@qptr,c
  9022  001A7E  EC1F  F00F         	call	i2_check_msg	;wreg free
  9023  001A82  0900               	iorlw	0
  9024  001A84  B4D8               	btfsc	status,2,c
  9025                           
  9026                           ;messages.c: 250: }
  9027                           ;messages.c: 251: enter_sleep_mode();
  9028                           
  9029                           ;messages.c: 249: return;
  9030  001A86  EC7D  F00F         	call	_enter_sleep_mode	;wreg free
  9031  001A8A  0012               	return	
  9032  001A8C                     __end_of_SleepIfOkay:
  9033                           	opt stack 0
  9034                           pclatu	equ	0xFFB
  9035                           pclath	equ	0xFFA
  9036                           tblptru	equ	0xFF8
  9037                           tblptrh	equ	0xFF7
  9038                           tblptrl	equ	0xFF6
  9039                           tablat	equ	0xFF5
  9040                           prodh	equ	0xFF4
  9041                           prodl	equ	0xFF3
  9042                           intcon	equ	0xFF2
  9043                           postinc0	equ	0xFEE
  9044                           fsr0h	equ	0xFEA
  9045                           fsr0l	equ	0xFE9
  9046                           wreg	equ	0xFE8
  9047                           indf1	equ	0xFE7
  9048                           fsr1h	equ	0xFE2
  9049                           fsr1l	equ	0xFE1
  9050                           bsr	equ	0xFE0
  9051                           indf2	equ	0xFDF
  9052                           postinc2	equ	0xFDE
  9053                           postdec2	equ	0xFDD
  9054                           fsr2h	equ	0xFDA
  9055                           fsr2l	equ	0xFD9
  9056                           status	equ	0xFD8
  9057                           
  9058 ;; *************** function i2_in_low_int *****************
  9059 ;; Defined at:
  9060 ;;		line 31 in file "src/interrupts.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;		None
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;		None
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  2   53[COMRAM] int 
  9067 ;; Registers used:
  9068 ;;		wreg, status,2, status,0, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9074 ;;      Params:         2       0       0       0       0
  9075 ;;      Locals:         0       0       0       0       0
  9076 ;;      Temps:          0       0       0       0       0
  9077 ;;      Totals:         2       0       0       0       0
  9078 ;;Total ram usage:        2 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    1
  9081 ;; This function calls:
  9082 ;;		i2_in_high_int
  9083 ;; This function is called by:
  9084 ;;		_SleepIfOkay
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text54
  9089  001D54                     __ptext54:
  9090                           	opt stack 0
  9091  001D54                     i2_in_low_int:
  9092                           	opt stack 16
  9093                           
  9094                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9095                           
  9096                           ;incstack = 0
  9097  001D54  ACF2               	btfss	intcon,6,c	;volatile
  9098  001D56  D005               	goto	i2l2552
  9099                           
  9100                           ;interrupts.c: 33: return (0);
  9101  001D58  0E00               	movlw	0
  9102  001D5A  6E37               	movwf	?i2_in_low_int+1,c
  9103  001D5C  0E00               	movlw	0
  9104  001D5E  6E36               	movwf	?i2_in_low_int,c
  9105  001D60  0012               	return	
  9106  001D62                     i2l2552:
  9107  001D62  EC73  F00F         	call	i2_in_high_int	;wreg free
  9108  001D66  5035               	movf	?i2_in_high_int+1,w,c
  9109  001D68  1034               	iorwf	?i2_in_high_int,w,c
  9110  001D6A  B4D8               	btfsc	status,2,c
  9111  001D6C  D005               	goto	i2l2560
  9112                           
  9113                           ;interrupts.c: 35: return (0);
  9114  001D6E  0E00               	movlw	0
  9115  001D70  6E37               	movwf	?i2_in_low_int+1,c
  9116  001D72  0E00               	movlw	0
  9117  001D74  6E36               	movwf	?i2_in_low_int,c
  9118  001D76  0012               	return	
  9119  001D78                     i2l2560:
  9120                           
  9121                           ;interrupts.c: 37: return (1);
  9122  001D78  0E00               	movlw	0
  9123  001D7A  6E37               	movwf	?i2_in_low_int+1,c
  9124  001D7C  0E01               	movlw	1
  9125  001D7E  6E36               	movwf	?i2_in_low_int,c
  9126  001D80  0012               	return	
  9127  001D82                     __end_ofi2_in_low_int:
  9128                           	opt stack 0
  9129                           pclatu	equ	0xFFB
  9130                           pclath	equ	0xFFA
  9131                           tblptru	equ	0xFF8
  9132                           tblptrh	equ	0xFF7
  9133                           tblptrl	equ	0xFF6
  9134                           tablat	equ	0xFF5
  9135                           prodh	equ	0xFF4
  9136                           prodl	equ	0xFF3
  9137                           intcon	equ	0xFF2
  9138                           postinc0	equ	0xFEE
  9139                           fsr0h	equ	0xFEA
  9140                           fsr0l	equ	0xFE9
  9141                           wreg	equ	0xFE8
  9142                           indf1	equ	0xFE7
  9143                           fsr1h	equ	0xFE2
  9144                           fsr1l	equ	0xFE1
  9145                           bsr	equ	0xFE0
  9146                           indf2	equ	0xFDF
  9147                           postinc2	equ	0xFDE
  9148                           postdec2	equ	0xFDD
  9149                           fsr2h	equ	0xFDA
  9150                           fsr2l	equ	0xFD9
  9151                           status	equ	0xFD8
  9152                           
  9153 ;; *************** function i2_in_high_int *****************
  9154 ;; Defined at:
  9155 ;;		line 23 in file "src/interrupts.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2   51[COMRAM] int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9169 ;;      Params:         2       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0
  9172 ;;      Totals:         2       0       0       0       0
  9173 ;;Total ram usage:        2 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_SleepIfOkay
  9179 ;;		i2_in_low_int
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text55
  9184  001EE6                     __ptext55:
  9185                           	opt stack 0
  9186  001EE6                     i2_in_high_int:
  9187                           	opt stack 16
  9188                           
  9189                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9190                           
  9191                           ;incstack = 0
  9192  001EE6  0E00               	movlw	0
  9193  001EE8  AEF2               	btfss	intcon,7,c	;volatile
  9194  001EEA  0E01               	movlw	1
  9195  001EEC  6E34               	movwf	?i2_in_high_int,c
  9196  001EEE  6A35               	clrf	?i2_in_high_int+1,c
  9197  001EF0  0012               	return	
  9198  001EF2                     __end_ofi2_in_high_int:
  9199                           	opt stack 0
  9200                           pclatu	equ	0xFFB
  9201                           pclath	equ	0xFFA
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           postinc0	equ	0xFEE
  9210                           fsr0h	equ	0xFEA
  9211                           fsr0l	equ	0xFE9
  9212                           wreg	equ	0xFE8
  9213                           indf1	equ	0xFE7
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           bsr	equ	0xFE0
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           fsr2h	equ	0xFDA
  9221                           fsr2l	equ	0xFD9
  9222                           status	equ	0xFD8
  9223                           
  9224 ;; *************** function i2_check_msg *****************
  9225 ;; Defined at:
  9226 ;;		line 220 in file "src/messages.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  9229 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;		None
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      unsigned char 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9241 ;;      Params:         2       0       0       0       0
  9242 ;;      Locals:         0       0       0       0       0
  9243 ;;      Temps:          1       0       0       0       0
  9244 ;;      Totals:         3       0       0       0       0
  9245 ;;Total ram usage:        3 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; This function calls:
  9248 ;;		Nothing
  9249 ;; This function is called by:
  9250 ;;		_SleepIfOkay
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text56
  9255  001E3E                     __ptext56:
  9256                           	opt stack 0
  9257  001E3E                     i2_check_msg:
  9258                           	opt stack 17
  9259                           
  9260                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9261                           
  9262                           ;incstack = 0
  9263  001E3E  EE20 F035          	lfsr	2,53
  9264  001E42  5034               	movf	i2check_msg@qptr,w,c
  9265  001E44  26D9               	addwf	fsr2l,f,c
  9266  001E46  5035               	movf	i2check_msg@qptr+1,w,c
  9267  001E48  22DA               	addwfc	fsr2h,f,c
  9268  001E4A  50DF               	movf	indf2,w,c
  9269  001E4C  6E36               	movwf	??i2_check_msg& (0+255),c
  9270  001E4E  5036               	movf	??i2_check_msg,w,c
  9271  001E50  0D0D               	mullw	13
  9272  001E52  50F3               	movf	prodl,w,c
  9273  001E54  2434               	addwf	i2check_msg@qptr,w,c
  9274  001E56  6ED9               	movwf	fsr2l,c
  9275  001E58  50F4               	movf	prodh,w,c
  9276  001E5A  2035               	addwfc	i2check_msg@qptr+1,w,c
  9277  001E5C  6EDA               	movwf	fsr2h,c
  9278  001E5E  50DF               	movf	indf2,w,c
  9279  001E60  0012               	return	
  9280  001E62                     __end_ofi2_check_msg:
  9281                           	opt stack 0
  9282                           pclatu	equ	0xFFB
  9283                           pclath	equ	0xFFA
  9284                           tblptru	equ	0xFF8
  9285                           tblptrh	equ	0xFF7
  9286                           tblptrl	equ	0xFF6
  9287                           tablat	equ	0xFF5
  9288                           prodh	equ	0xFF4
  9289                           prodl	equ	0xFF3
  9290                           intcon	equ	0xFF2
  9291                           postinc0	equ	0xFEE
  9292                           fsr0h	equ	0xFEA
  9293                           fsr0l	equ	0xFE9
  9294                           wreg	equ	0xFE8
  9295                           indf1	equ	0xFE7
  9296                           fsr1h	equ	0xFE2
  9297                           fsr1l	equ	0xFE1
  9298                           bsr	equ	0xFE0
  9299                           indf2	equ	0xFDF
  9300                           postinc2	equ	0xFDE
  9301                           postdec2	equ	0xFDD
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function _enter_sleep_mode *****************
  9307 ;; Defined at:
  9308 ;;		line 202 in file "src/messages.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;		None               void
  9315 ;; Registers used:
  9316 ;;		None
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9322 ;;      Params:         0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0
  9325 ;;      Totals:         0       0       0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_SleepIfOkay
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text57
  9336  001EFA                     __ptext57:
  9337                           	opt stack 0
  9338  001EFA                     _enter_sleep_mode:
  9339                           	opt stack 17
  9340                           
  9341                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9342                           
  9343                           ;incstack = 0
  9344  001EFA  8ED3               	bsf	4051,7,c	;volatile
  9345  001EFC  0003               	sleep		;# 
  9346  001EFE  0012               	return	
  9347  001F00                     __end_of_enter_sleep_mode:
  9348                           	opt stack 0
  9349  0000                     pclatu	equ	0xFFB
  9350                           pclath	equ	0xFFA
  9351                           tblptru	equ	0xFF8
  9352                           tblptrh	equ	0xFF7
  9353                           tblptrl	equ	0xFF6
  9354                           tablat	equ	0xFF5
  9355                           prodh	equ	0xFF4
  9356                           prodl	equ	0xFF3
  9357                           intcon	equ	0xFF2
  9358                           postinc0	equ	0xFEE
  9359                           fsr0h	equ	0xFEA
  9360                           fsr0l	equ	0xFE9
  9361                           wreg	equ	0xFE8
  9362                           indf1	equ	0xFE7
  9363                           fsr1h	equ	0xFE2
  9364                           fsr1l	equ	0xFE1
  9365                           bsr	equ	0xFE0
  9366                           indf2	equ	0xFDF
  9367                           postinc2	equ	0xFDE
  9368                           postdec2	equ	0xFDD
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8
  9372                           pclatu	equ	0xFFB
  9373                           pclath	equ	0xFFA
  9374                           tblptru	equ	0xFF8
  9375                           tblptrh	equ	0xFF7
  9376                           tblptrl	equ	0xFF6
  9377                           tablat	equ	0xFF5
  9378                           prodh	equ	0xFF4
  9379                           prodl	equ	0xFF3
  9380                           intcon	equ	0xFF2
  9381                           postinc0	equ	0xFEE
  9382                           fsr0h	equ	0xFEA
  9383                           fsr0l	equ	0xFE9
  9384                           wreg	equ	0xFE8
  9385                           indf1	equ	0xFE7
  9386                           fsr1h	equ	0xFE2
  9387                           fsr1l	equ	0xFE1
  9388                           bsr	equ	0xFE0
  9389                           indf2	equ	0xFDF
  9390                           postinc2	equ	0xFDE
  9391                           postdec2	equ	0xFDD
  9392                           fsr2h	equ	0xFDA
  9393                           fsr2l	equ	0xFD9
  9394                           status	equ	0xFD8
  9395                           
  9396                           	psect	rparam
  9397  0000                     pclatu	equ	0xFFB
  9398                           pclath	equ	0xFFA
  9399                           tblptru	equ	0xFF8
  9400                           tblptrh	equ	0xFF7
  9401                           tblptrl	equ	0xFF6
  9402                           tablat	equ	0xFF5
  9403                           prodh	equ	0xFF4
  9404                           prodl	equ	0xFF3
  9405                           intcon	equ	0xFF2
  9406                           postinc0	equ	0xFEE
  9407                           fsr0h	equ	0xFEA
  9408                           fsr0l	equ	0xFE9
  9409                           wreg	equ	0xFE8
  9410                           indf1	equ	0xFE7
  9411                           fsr1h	equ	0xFE2
  9412                           fsr1l	equ	0xFE1
  9413                           bsr	equ	0xFE0
  9414                           indf2	equ	0xFDF
  9415                           postinc2	equ	0xFDE
  9416                           postdec2	equ	0xFDD
  9417                           fsr2h	equ	0xFDA
  9418                           fsr2l	equ	0xFD9
  9419                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     72      80
    BANK1           256     85     247
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), stop@test(BANK0[2]), turn@test(BANK0[2]), 
		 -> moveDist@test(BANK0[2]), move@test(COMRAM[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    stop@tptr0	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    stop@tptr1	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    turn@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK1[12]), 

    moveDist@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK1[12]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), stop@test(BANK0[2]), 
		 -> turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), main@uc(BANK1[5]), 
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK0[2]), turn@test(BANK0[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_ToMainHigh_sendmsg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_turn
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _turn->_sendUARTarr
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _stop->_sendUARTarr
    _moveDist->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0   27407
                                             70 BANK0      2     2      0
                                              0 BANK1     85    85      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                           _moveDist
              _start_i2c_slave_reply
                               _stop
                     _timer0_lthread
                     _timer1_lthread
                               _turn
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    2541
                                             55 BANK0     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1951
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _turn                                                11     7      4    3766
                                             59 BANK0     11     7      4
                        _WriteTimer0
                                _abs
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     6      2    3569
                                             59 BANK0      8     6      2
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     6      2    3569
                                             59 BANK0      8     6      2
                        _WriteTimer0
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     263
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3586
                                             59 BANK0      6     2      4
                        _WriteTimer0
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     260
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDist                                             6     2      4    3372
                                             59 BANK0      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          4     2      2    2780
                                             55 BANK0      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2307
                                             51 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1757
                                             39 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     260
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     218
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     262
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     390
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     390
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             39 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    3006
                                             34 COMRAM    17    17      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1113
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0     958
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3     935
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3902
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2204
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1602
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _moveDist
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _start_i2c_slave_reply
   _stop
     _WriteTimer0
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer0_lthread
     _WriteTimer0
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _turn
     _WriteTimer0
     _abs
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     55      F7       6       96.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     48      50       5       62.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C9       9        0.0%
DATA                 0      0     1C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Apr 22 15:35:58 2015

               main@uthread_data 01B0         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1BFC  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1D54  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l132 0750                              l125 0704  
                            l139 0828                              l506 1DCA  
                            l530 1CAE                              l507 1DCC  
                            l532 1CC4                              l533 1CC6  
                            l571 1780                              l572 1782  
                            l573 178E                              l574 1790  
                            l567 1766                              l639 1AC2  
                            l819 1EA2             ?_FromMainLow_sendmsg 00B3  
__size_of_uart_trans_int_handler 0056             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                              _abs 1A8C  
                 _FromMainLow_MQ 0100                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 009D  
               ??_init_uart_recv 009F                      main@command 01AF  
                           ?_abs 009D                             l1125 18DC  
                           l3030 0E24                             l3022 0DEE  
                           l2240 1A28                             l3200 082E  
                           l2234 1A08                             l2306 1B7C  
                           l3042 0CB2                             l3202 0842  
                           l3210 0870                             l3204 084C  
                           l3046 0D2E                             l3222 08D8  
                           l3214 088A                             l2408 1BB8  
                           l2424 185E                             l3072 0B5E  
                           l3224 08EE                             l3208 085A  
                           l3216 08A6                             l2442 09B0  
                           l2258 0EE4                             l2540 18CE  
                           l2532 1898                             l3092 1320  
                           l3228 0932                             l2534 18A4  
                           l3190 0794                             l2536 18AA  
                           l3096 1340                             l3192 07B6  
                           l3184 073A                             l2458 0A6A  
                           l2298 1B5E                             l3194 07E8  
                           l2484 1D06                             l3188 076E  
                           l3198 080A                             l2940 191A  
                           l2934 18FA                             l2848 1CB0  
                           l2874 1768                             l2866 1756  
                           l2946 193A                             l2968 0C72  
                           _LATA 000F89                             _LATB 000F8A  
                           u2387 1EA4                             u1945 0B10  
                           u1895 0C24                             i1l52 0088  
                _FromMainHigh_MQ 0200                    __CFG_FCMEN$ON 000000  
                           abs@a 009D           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0F82                             _main 0634  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           _stop 1366                             _turn 0D9A  
                    main@msgtype 01C1                       i1_send_msg 14D2  
                           pclat 000FFA                      i2_check_msg 1E3E  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0034                             start 00CE  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 11E4  
      ToMainHigh_recvmsg@msgtype 00B5                   send_msg@length 00A9  
                          ??_abs 009F                      _Delay1KTCYx 1E9E  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00B6  
                          ?_main 0001     __size_ofi1_ToMainLow_sendmsg 0024  
                          _CMCON 000FB4                            ?_stop 00BB  
                          ?_turn 00BB                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 009D  
                          i1l406 19EA                            i1l409 19C2  
                __end_of___lwmod 18E6                       i1memcpy@d1 0001  
                          i2l323 1198                            i2l333 048E  
                          i2l335 0152                            i2l361 041E  
                          i2l353 02FC                            i1l585 1E8E  
                          i2l339 0184                            i2l367 049C  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
              sendUARTarr@length 00BA                       i2memcpy@d1 0034  
                     i2memcpy@s1 0036                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                sendUARTarr@retval 00B9  
                __end_of_in_main 1BC6       ToMainLow_recvmsg@maxlength 00B9  
        i2c_configure_slave@addr 009D                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1998  
               __end_ofi1_memcpy 1B0C                 __end_ofi2_memcpy 1B4C  
                   ?_sendUARTarr 00B7                  __initialization 1C32  
     uart_trans_int_handler@data 001E                     __end_of_main 0950  
   uart_trans_int_handler@length 0022                     __end_of_stop 141E  
                   __end_of_turn 0E96       __size_of_ToMainLow_recvmsg 0036  
     __size_of_ToMainLow_sendmsg 002E            __size_ofi2_in_low_int 002E  
                         ??_main 00C6                           ??_stop 00BF  
                         ??_turn 00BF                  send_msg@msgtype 00AA  
                  __activetblptr 000002                  send_msg@tlength 00AE  
     FromMainLow_sendmsg@msgtype 00B3             __end_of_handle_start 11E4  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3120 0074                           i1l2330 150A  
                         i1l3126 007E                           i1l2272 1ADE  
                         i1l2278 1AFA                           i1l2378 0FC8  
                         i1l2394 1050                           i1l2750 1692  
                         i1l2772 19DC                           i2l2510 11CC  
                     _OpenTimer0 1DAA                           i2l3402 0462  
                         i2l3314 014A                       _OpenTimer1 1C98  
                         i2l2508 11B4                           i2l3332 01B0  
                         i2l3308 013C                           i2l3430 060E  
                         i2l3422 0582                           i2l3414 04FE  
                         i2l3350 022E                           i2l3334 01DC  
                 __CFG_WDTEN$OFF 000000                           i2l2560 1D78  
                         i2l2552 1D62                           i2l2720 1A44  
                         i2l3264 1B3A                           i2l3408 04A0  
                         i2l3352 026E                           i2l3344 0216  
                         i2l3258 1B1E                           i2l3442 16E4  
                         i2l3380 03B4                           i2l3278 1228  
                         i2l3374 036A                           i2l3376 03AC  
                         i2l3448 16FC      __end_of_i2c_configure_slave 1DAA  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0D9A  
             timer0_lthread@temp 00C1               timer0_lthread@tptr 00BB  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1D54  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00D2  
               OpenTimer0@config 009D                           _ic_ptr 00CE  
                      ??___lwmod 00A1                    main@msgbuffer 01A2  
               __end_of_init_i2c 1822                 OpenTimer1@config 009D  
                         _memcpy 19EE                           clear_0 1C38  
                         clear_1 1C44                           _uc_ptr 0049  
                         main@ic 01DB                           main@uc 01BC  
               __end_of_recv_msg 0A6E      start_i2c_slave_reply@length 00A1  
               __end_of_moveDist 14D2                        ??_in_main 00A3  
               __end_of_send_msg 0F82          i2c_int_handler@i2c_data 008B  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 009F  
       ToMainLow_recvmsg@msgtype 00B5             __size_of_in_high_int 0010  
        FromMainLow_sendmsg@data 00B4                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 1F00                       __accesstop 0080  
        __end_of__initialization 1C5C       __end_of_ToMainHigh_recvmsg 1C32  
     __end_of_ToMainHigh_sendmsg 1E3E               ?_init_uart_lthread 009D  
    __end_of_init_timer0_lthread 111E      __end_of_init_timer1_lthread 161A  
            __end_of_SleepIfOkay 1A8C                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 009F  
             __size_of_check_msg 0032                __end_of_ReadUSART 1E9E  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1732  
    __end_of_InterruptHandlerLow 00CE                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 0136                 _enter_sleep_mode 1EFA  
            __size_ofi2_send_msg 00C6                    ReadUSART@data 0001  
              __end_of_OpenUSART 17BC                    check_msg@qptr 009D  
      __end_of_init_uart_lthread 1F02          ??_block_on_To_msgqueues 00A3  
           __size_of_init_queues 0056                       __pbssBANK0 00C8  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0049  
            i1_ToMainLow_sendmsg 1DF6          __end_of_i2c_int_handler 0634  
                   ?i2_check_msg 0034               timer1_lthread@temp 00C1  
             timer1_lthread@tptr 00BB             __size_of_sendUARTarr 002E  
              recv_msg@maxlength 00A9                  recv_msg@msgtype 00AA  
                recv_msg@tlength 00B1            __size_of_handle_start 00C6  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 009F  
                        ?_memcpy 009D                 WriteTimer1@timer 009F  
                  ??_WriteTimer0 009F                    ??_WriteTimer1 009F  
        __size_of_timer0_lthread 0114             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 0114              timer0_lthread@F5147 00CA  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1EE6  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1C98                        ?_init_i2c 009D  
                    _SleepIfOkay 1A3E                        ?_recv_msg 00A7  
                     _in_low_int 1B4C                     _handle_start 111E  
                      ?_moveDist 00BB                          __Hparam 0000  
                      ?_send_msg 00A7                          __Lparam 0000  
    __end_of_FromMainLow_recvmsg 1DF6      __end_of_FromMainLow_sendmsg 1CF8  
               init_uart_recv@uc 009D                          ___lwmod 1886  
                __CFG_STVREN$OFF 000000                          __pcinit 1C32  
                __size_of_memcpy 0050                       _init_queue 1822  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 0032  
                        __ptext0 0634                          __ptext1 12AA  
                        __ptext2 1CCA                          __ptext3 0D9A  
                        __ptext4 1A8C                          __ptext5 0A6E  
                        __ptext6 0B82                          __ptext7 1886  
                        __ptext8 1366                          __ptext9 1EB2  
              uart_lthread@index 00C0                        _T0CONbits 000FD5  
                        _in_main 1B8A                        _T1CONbits 000FCD  
                   __size_of_abs 0040              __end_of_WriteTimer0 1EC4  
            __end_of_WriteTimer1 1ED6                   ?i2_in_high_int 0034  
 __end_of_uart_trans_int_handler 19EE       __size_of_init_uart_lthread 0002  
                 __pintcode_body 16AE             end_of_initialization 1C5C  
 __size_of_uart_recv_int_handler 0094                          memcpy@d 00A3  
                        memcpy@n 00A1                          memcpy@s 00A5  
  __end_of_uart_recv_int_handler 16AE                       ??_init_i2c 009F  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 0089  
                  __Lmediumconst 0000                          int_func 16AE  
                   ??i1_send_msg 0011                    ?_uart_lthread 00B7  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                     ??_recv_msg 00AE                       ??_moveDist 00BF  
                   ??i2_send_msg 0044                       ??_send_msg 00AD  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0045               __end_ofi1_recv_msg 1054  
             __end_ofi1_send_msg 157C                        _TRISCbits 000F94  
             __end_ofi2_send_msg 12AA                   ??_uart_lthread 00BF  
                      _TXSTAbits 000FAC                       main@length 01C2  
                    ?_in_low_int 009F                       main@valuec 01BA  
          _start_i2c_slave_reply 0C96     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1F00  
             _ToMainHigh_recvmsg 1BFC                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1E1A                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 0B82  
                    ?_init_queue 009D                        i2memcpy@d 003A  
                    _WriteTimer0 1EB2                      _WriteTimer1 1EC4  
                      i2memcpy@n 0038                        i2memcpy@s 003C  
                 _timer1_lthread 0A6E                   __end_of_memcpy 1A3E  
              _enable_interrupts 1EF2             __size_of_Delay1KTCYx 0014  
            ?_ToMainHigh_recvmsg 00B5                  ??i2_in_high_int 0036  
       i2c_int_handler@data_read 008E              ?_ToMainHigh_sendmsg 0045  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1C32                    ??_in_high_int 009F  
                      _ReadUSART 1E80                      __end_of_abs 1ACC  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
      FromMainLow_sendmsg@length 00B6              ??_enable_interrupts 009D  
                   ??_OpenTimer0 009D                     ??_OpenTimer1 009D  
 __size_of_block_on_To_msgqueues 005C    __end_of_block_on_To_msgqueues 1942  
                      _OpenUSART 173A     __end_of_InterruptHandlerHigh 173A  
                     init_i2c@ic 009D             ??_ToMainHigh_recvmsg 00B9  
           ??_ToMainHigh_sendmsg 0048           __end_of_timer0_lthread 0C96  
       i2c_int_handler@error_buf 0086           __end_of_timer1_lthread 0B82  
      __end_of_enable_interrupts 1EFA                         ??_memcpy 00A3  
   __size_of_init_timer0_lthread 00CA     __size_of_init_timer1_lthread 009E  
             __end_of_OpenTimer0 1DD0               __end_of_OpenTimer1 1CCA  
       i2c_int_handler@msg_ready 008D              timer1_lthread@F5087 00CC  
                    __pbssCOMRAM 004B                       ?_ReadUSART 0001  
                  ??_init_queues 00A0                    __pcstackBANK0 0080  
                  __pcstackBANK1 01A2              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 009D              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 009D         ToMainLow_sendmsg@msgtype 00B3  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 1EE6  
                     ?_OpenUSART 009D                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 00B7                     _ToMainLow_MQ 016C  
            __size_of_init_queue 0064                   _init_uart_recv 1E62  
                      _check_msg 1C66                        __pnvBANK0 00CE  
         ?_start_i2c_slave_reply 009D                __size_of_init_i2c 0066  
                  ??_sendUARTarr 00B9                     recv_msg@data 00AC  
                   recv_msg@qmsg 00B3                     recv_msg@slot 00B0  
                   recv_msg@qptr 00A7                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_moveDist 00B4  
              __size_of_send_msg 00EC                  ?_timer0_lthread 00BB  
                       ?___lwmod 009D                  ?_timer1_lthread 00BB  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00B7  
           __end_of_uart_lthread 1366       i2c_int_handler@msg_to_send 008C  
                       ?_in_main 00A1                WriteTimer0@timer0 009D  
              WriteTimer1@timer1 009D       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 00B9          init_timer0_lthread@tptr 009D  
          ToMainLow_sendmsg@data 00B4              i1recv_msg@maxlength 000D  
               uart_lthread@uptr 00B7           __end_of_init_uart_recv 1E80  
            __end_of_init_queues 1998                  i2check_msg@qptr 0034  
                     ?_check_msg 009D                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                     moveDist@dist 00BD  
                  ?i2_in_low_int 0036                     moveDist@test 00BF  
                   moveDist@tptr 00BB                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1E1A  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1D26  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0026     __size_of_FromMainLow_sendmsg 002E  
                       i1_memcpy 1ACC             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1B0C  
                    _in_high_int 1ED6                     send_msg@data 00AB  
            _i2c_configure_slave 1D82                     send_msg@qmsg 00B1  
                   send_msg@slot 00B0                     send_msg@qptr 00A7  
                sendUARTarr@data 00B7            uart_lthread@msgbuffer 00BD  
                ?_init_uart_recv 009D                      ??_OpenUSART 009F  
                OpenUSART@config 00A2                   ??i2_in_low_int 0038  
          _uart_recv_int_handler 161A                     ??_in_low_int 00A1  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
       __size_of_i2c_int_handler 0562               ??_enter_sleep_mode 0034  
               __size_of___lwmod 0060                     ??_init_queue 009F  
                   ?_WriteTimer0 009D                     ?_WriteTimer1 009D  
        ToMainLow_sendmsg@length 00B6                main@t0thread_data 01CF  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 0041      ToMainHigh_recvmsg@maxlength 00B9  
              i2send_msg@tlength 0080          init_timer1_lthread@tptr 009D  
                    _init_queues 1942               __end_of_in_low_int 1B8A  
                       __ptext10 0C96                         __ptext11 141E  
                       __ptext20 1942                         __ptext12 1CF8  
                       __ptext21 1822                         __ptext13 1D26  
                       __ptext30 1E9E                         __ptext22 17BC  
                       __ptext14 0E96                         __ptext31 1BC6  
                       __ptext23 1D82                         __ptext15 1EC4  
                       __ptext40 1DD0                         __ptext32 1BFC  
                       __ptext24 1EF2                         __ptext16 1E62  
                       __ptext41 0F82                         __ptext33 0950  
                       __ptext25 18E6                         __ptext17 1F00  
                       __ptext50 1E1A                         __ptext42 161A  
                       __ptext34 19EE                         __ptext26 1B8A  
                       __ptext18 157C                         __ptext51 11E4  
                       __ptext43 1DF6                         __ptext35 173A  
                       __ptext27 1B4C                         __ptext19 1054  
                       __ptext52 1B0C                         __ptext44 14D2  
                       __ptext36 1C98                         __ptext28 1ED6  
                       __ptext53 1A3E                         __ptext45 1ACC  
                       __ptext37 1DAA                         __ptext29 1C66  
                       __ptext54 1D54                         __ptext46 1E80  
                       __ptext55 1EE6                         __ptext39 1998  
                       __ptext56 1E3E                         __ptext48 00D2  
                       __ptext57 1EFA                         __ptext49 111E  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 00BB  
            _init_timer0_lthread 1054               uart_lthread@status 00BF  
                       _init_i2c 17BC              _init_timer1_lthread 157C  
                  __size_of_main 031C                    __size_of_stop 00B8  
                  ??i2_check_msg 0036                    __size_of_turn 00FC  
              main@t1thread_data 01C3                      ??_check_msg 009F  
             __end_of_init_queue 1886             __size_of_SleepIfOkay 004E  
                       _recv_msg 0950                         _moveDist 141E  
          ??_i2c_configure_slave 009D                         _send_msg 0E96  
                    _sendUARTarr 1CF8                   init_queue@qptr 009D  
                       _turn$980 00C2                         _turn$979 00C0  
          __size_of_uart_lthread 00BC    uart_trans_int_handler@msgtype 0020  
                  ??_Delay1KTCYx 009D                         main@baud 01AD  
           ?_init_timer0_lthread 009D              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 009D                        stop@F5241 00C8  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 009D  
                       memcpy@d1 009D                         memcpy@s1 009F  
          __end_ofi2_in_high_int 1EF2     i2c_int_handler@overrun_error 008A  
               i2send_msg@length 0040                        stop@tptr0 00BB  
                      stop@tptr1 00BD                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 009F                 ___lwmod@dividend 009D  
         ?_uart_recv_int_handler 0001                        turn@angle 00BD  
                   _uart_lthread 12AA                   main@UARTConfig 01AE  
          _block_on_To_msgqueues 18E6                    ?_handle_start 0001  
               ??_timer0_lthread 00BD      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 0024                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00BD                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0048  
            __end_ofi2_check_msg 1E62            ??_init_timer0_lthread 009F  
          ??_init_timer1_lthread 009F           ??_InterruptHandlerHigh 008F  
              _ToMainLow_recvmsg 1BC6                         stop@test 00BF  
              _ToMainLow_sendmsg 1D26               main@last_reg_recvd 01BB  
                ___lwmod@divisor 009F             __end_ofi2_in_low_int 1D82  
             ?_ToMainLow_recvmsg 00B5              __end_of_Delay1KTCYx 1EB2  
              ??_i2c_int_handler 0085                  ___lwmod@counter 00A1  
             ?_ToMainLow_sendmsg 00B3                         turn@test 00C4  
                       turn@tptr 00BB                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0042  
          ??_InterruptHandlerLow 0023              ??_ToMainLow_recvmsg 00B9  
                 i2send_msg@qmsg 0083                   i2send_msg@slot 0082  
                 i2send_msg@qptr 003E              ??_ToMainLow_sendmsg 00B6  
            _FromMainLow_recvmsg 1DD0                   ??_handle_start 0034  
            _FromMainLow_sendmsg 1CCA                     _USART_Status 004C  
